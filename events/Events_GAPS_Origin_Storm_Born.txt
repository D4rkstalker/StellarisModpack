namespace = Events_GAPS_Storm_Born

country_event = {
	id = Events_GAPS_Storm_Born.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Storm_Born }
	}
	immediate = {
		set_country_flag = Country_Flag_GAPS_I_am_Storm_Born
		owner = { country_event = { id = Events_GAPS_Storm_Born.12 days = 1 } }
		owner = { country_event = { id = Events_GAPS_Storm_Born.13 days = 1 } }
		add_research_option = tech_space_cloud_weapon_1
		add_research_option = tech_housing_1
		every_country = {
			limit = { is_country_type = cloud }
			set_faction_hostility = {
				set_hostile = no
				set_neutral = yes
			#	set_friendly = yes
				target = root
			}
		}
		every_system_within_border = {
			limit = { any_system_planet = { is_capital = yes } }
			set_star_flag = Star_Flag_GAPS_Strange_Storm_Ongoing
			star = {
				add_modifier = { modifier = System_Modifier_GAPS_Storm }
				create_ambient_object = {
					type = "psi_storm_1"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = Ambient_Flag_GAPS_Strange_Storm_Object
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
				create_ambient_object = {
					type = "space_storm_2"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = Ambient_Flag_GAPS_Strange_Storm_Object
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
				create_ambient_object = {
					type = "space_storm_1"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = Ambient_Flag_GAPS_Strange_Storm_Object
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
			add_modifier = { modifier = System_Modifier_GAPS_Storm }
		}
	}
}
#reevaluate all systems
country_event = {
	id = Events_GAPS_Storm_Born.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		owner = { has_origin = Origin_GAPS_Storm_Born }
	}
	immediate = {
		every_owned_planet = {
			limit = { is_capital = yes }
			add_modifier = { modifier = wild_storms days = -1 }
			add_modifier = { modifier = hazardous_weather days = -1 }
		}
	}
}

country_event = {
	id = Events_GAPS_Storm_Born.13
	picture = GFX_evt_unidentified_ship
	#show_sound = megastructure_upgraded_01
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		save_event_target_as = Target_Country_GAPS_Storm_Born
		every_system = {
			limit = {
				OR = {
					any_system_planet = { has_modifier = hazardous_weather }
					any_system_planet = { has_modifier = wild_storms }
					any_system_planet = { has_modifier = pdstorm }
					any_system_planet = { has_modifier = extreme_storms }
					any_system_planet = { has_modifier = gpm_frequent_thunderstorms }
					any_system_planet = { has_modifier = gpm_global_thunderstorms }
					any_system_planet = { has_modifier = gpm_windy }
					any_system_planet = { has_modifier = gpm_torrential_rainstorms }
					any_system_planet = { has_modifier = gpm_unusual_seasons }
					any_system_planet = { has_modifier = gpm_sandstorms }
					any_system_planet = { has_modifier = gpm_sand_tornadoes }
					any_system_planet = { has_modifier = gpm_blizzards }
				}
			}
			random_system_planet = {
				limit = { is_primary_star = yes }
				save_event_target_as = Target_Planet_GAPS_Home_Star
				create_fleet = {
					name = "Scry Sensor"
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = no
					}
				}
				last_created_fleet = {
					set_owner = root
					create_ship = {
						name = "Scry Sensor"
						design = "NAME_DS47"
					}
					set_location = event_target:Target_Planet_GAPS_Home_Star
					set_event_locked = yes
					hidden_effect = { fleet_event = { id = Events_GAPS_Universal_Effects.2 days = 0 } }
				}
			}				
			begin_event_chain = {
				event_chain = "Event_Chain_GAPS_Storm_Planet_Locations"
				target = root
			}
			enable_special_project = { name = Special_Project_GAPS_Storm_Planet_Location owner = root location = event_target:Target_Planet_GAPS_Home_Star }
			root = { change_variable = { which = "Country_Variable_GAPS_Storm_Planets" value = 1 } }
		}
		#storm
		every_system = {
			limit = {
				has_modifier = space_storm
			}
			random_system_planet = {
				limit = { is_primary_star = yes }
				save_event_target_as = Target_Planet_GAPS_Home_Star
				create_fleet = {
					name = "Scry Sensor"
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = no
					}
				}
				last_created_fleet = {
					set_owner = root
					create_ship = {
						name = "Scry Sensor"
						design = "NAME_DS47"
					}
					set_location = event_target:Target_Planet_GAPS_Home_Star
					set_event_locked = yes
					hidden_effect = { fleet_event = { id = Events_GAPS_Universal_Effects.2 days = 0 } }
				}
			}				
			begin_event_chain = {
				event_chain = "Event_Chain_GAPS_Study_Storm_System"
				target = root
			}
			enable_special_project = { name = Special_Project_GAPS_Study_Storm_System owner = root location = event_target:Target_Planet_GAPS_Home_Star }
		}
		#neb
		every_system = {
			limit = {
				has_modifier = turbulent_nebula
			}
			random_system_planet = {
				limit = { is_primary_star = yes }
				save_event_target_as = Target_Planet_GAPS_Home_Star
				create_fleet = {
					name = "Scry Sensor"
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = no
					}
				}
				last_created_fleet = {
					set_owner = root
					create_ship = {
						name = "Scry Sensor"
						design = "NAME_DS47"
					}
					set_location = event_target:Target_Planet_GAPS_Home_Star
					set_event_locked = yes
					hidden_effect = { fleet_event = { id = Events_GAPS_Universal_Effects.2 days = 0 } }
				}
			}				
			begin_event_chain = {
				event_chain = "Event_Chain_GAPS_Study_Turbulent_Nebula_System"
				target = root
			}
			enable_special_project = { name = Special_Project_GAPS_Study_Turbulent_Nebula_System owner = root location = event_target:Target_Planet_GAPS_Home_Star }
		}
		#vluur
		random_system = {
			limit = {
				has_star_flag = tiyanki_home_system
			}
			random_system_planet = {
				limit = { is_primary_star = yes }
				save_event_target_as = Target_Planet_GAPS_Home_Star
				create_fleet = {
					name = "Scry Sensor"
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = no
					}
				}
				last_created_fleet = {
					set_owner = root
					create_ship = {
						name = "Scry Sensor"
						design = "NAME_DS47"
					}
					set_location = event_target:Target_Planet_GAPS_Home_Star
					set_event_locked = yes
					hidden_effect = { fleet_event = { id = Events_GAPS_Universal_Effects.2 days = 0 } }
				}
			}				
			begin_event_chain = {
				event_chain = "Event_Chain_GAPS_Study_Vluur_Origins"
				target = root
			}
			enable_special_project = { name = Special_Project_GAPS_Study_Vluur_Origins owner = root location = event_target:Target_Planet_GAPS_Home_Star }
			if = {
				limit = { NOT = { has_modifier = vluur_storm } }
				event = { id = galactic_features.420 days = 1 }
			}
		}
		#void
		every_system = {
			limit = {
				has_star_flag = void_system
			}
			random_system_planet = {
				limit = { is_primary_star = yes }
				save_event_target_as = Target_Planet_GAPS_Home_Star
				create_fleet = {
					name = "Scry Sensor"
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = no
					}
				}
				last_created_fleet = {
					set_owner = root
					create_ship = {
						name = "Scry Sensor"
						design = "NAME_DS47"
					}
					set_location = event_target:Target_Planet_GAPS_Home_Star
					set_event_locked = yes
					hidden_effect = { fleet_event = { id = Events_GAPS_Universal_Effects.2 days = 0 } }
				}
			}
			begin_event_chain = {
				event_chain = "Event_Chain_GAPS_Study_Rift_Storm_Origins"
				target = root
			}
			enable_special_project = { name = Special_Project_GAPS_Study_Rift_Storm_Origins owner = root location = event_target:Target_Planet_GAPS_Home_Star }
		}
		if = {
			limit = { NOT = { has_event_chain = Event_Chain_GAPS_Study_Turbulent_Nebula_System } }
			random_system = {
				limit = { star = { is_inside_nebula = yes } }
				create_turbulent_nebula_1 = yes
				begin_event_chain = {
					event_chain = "Event_Chain_GAPS_Study_Turbulent_Nebula_System"
					target = root
				}
				random_system_planet = {
					limit = { is_primary_star = yes }
					save_event_target_as = Target_Planet_GAPS_Home_Star
					enable_special_project = { name = Special_Project_GAPS_Study_Turbulent_Nebula_System owner = root location = event_target:Target_Planet_GAPS_Home_Star }
				}
			}
		}
	}
}
# Create Stormborn Storm
country_event = {
	id = Events_GAPS_Storm_Born.20
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Storm_Born }
	}
	immediate = {
		owner = { save_event_target_as = Country_Target_GAPS_Storm_Born }
		random_list = {
			70 = { }
			30 = {
				random_system_within_border = {
					random_neighbor_system = {
						limit = { 
							NOT = { has_star_flag = Star_Flag_GAPS_Strange_Storm_Ongoing } 
						}
						star = { planet_event = { id = Events_GAPS_Storm_Born.21 days = 1 } }
					}
				}
			}
		}
	}
}

# The Storm Begins
planet_event = {
	id = Events_GAPS_Storm_Born.21
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		planet_event = { id = Events_GAPS_Storm_Born.22 days = 3600 }
		create_ambient_object = {
			type = "psi_storm_1"
			location = this
		}
		last_created_ambient_object = {
			set_ambient_object_flag = Ambient_Flag_GAPS_Strange_Storm_Object
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
		}
		create_ambient_object = {
			type = "space_storm_2"
			location = this
		}
		last_created_ambient_object = {
			set_ambient_object_flag = Ambient_Flag_GAPS_Strange_Storm_Object
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
		}
		create_ambient_object = {
			type = "space_storm_1"
			location = this
		}
		last_created_ambient_object = {
			set_ambient_object_flag = Ambient_Flag_GAPS_Strange_Storm_Object
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
		}
		solar_system = {
			set_timed_star_flag = { flag = Star_Flag_GAPS_Strange_Storm_Ongoing days = 3600 }
			add_modifier = { modifier = System_Modifier_GAPS_Storm }
		}
	}
}

# The Storm Ends
planet_event = {
	id = Events_GAPS_Storm_Born.22
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		solar_system = {
			every_system_ambient_object = {
				limit = { has_ambient_object_flag = Ambient_Flag_GAPS_Strange_Storm_Object }
				destroy_ambient_object = this
			}
			remove_modifier = System_Modifier_GAPS_Storm
		}
	}
}

# Create Friendly Vluur
country_event = {
	id = Events_GAPS_Storm_Born.30
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { 
			has_origin = Origin_GAPS_Storm_Born 
			has_country_flag = Country_Flag_GAPS_Completed_Project_Study_Vluur_Origins
		}
	}
	immediate = {
		owner = { save_event_target_as = Country_Target_GAPS_Storm_Born }
		random_list = {
			85 = { }
			15 = {
				random_system_within_border = {
					random_neighbor_system = {
						limit = { 
							NOT = { has_modifier = vluur_storm } 
						}
						star = { planet_event = { id = Events_GAPS_Storm_Born.31 days = 1 } }
					}
				}
			}
		}
	}
}

# Spawn Friendly Vluur
planet_event = {
	id = Events_GAPS_Storm_Born.31
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		Create_Country_GAPS_Replicated_Vluur_Passive = yes
		Scripted_Planet_Effect_GAPS_Spawn_Wandering_Vluur = yes
	}
}

# A fleet has entered a system
# Scope = Fleet
# From = System
#special vluur enters any system
fleet_event = {
	id = Events_GAPS_Storm_Born.32
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		owner = { 
			OR = { 
				is_country_type = Country_Type_GAPS_Replicated_Vluur_Passive 
				is_country_type = Country_Type_GAPS_Replicated_Vluur_Passive_Patrol  
				is_country_type = Country_Type_GAPS_Replicated_Vluur_Aggressive 
			}
		}
	}

	immediate = {
		solar_system = {
			every_neighbor_system = {
				limit = { 
					has_star_flag = vluur_system 
					NOT = { any_ship_in_system = { has_modifier = vluur_power } }
				}
				remove_star_flag = vluur_system
				if = {
					random_system_ambient_object = {
						limit = { has_ambient_object_flag = Ambient_Flag_GAPS_Vluur_Storm }
						destroy_ambient_object = this
					}
					remove_modifier = vluur_storm
				}
			}
		}
		solar_system = {
			set_star_flag = vluur_system
			star = {
				create_ambient_object = {
					type = "space_storm_1"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = Ambient_Flag_GAPS_Vluur_Storm
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
			add_modifier = { modifier = vluur_storm }
		}
	}
}
# Create Space Storm
country_event = {
	id = Events_GAPS_Storm_Born.40
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Storm_Born }
		has_country_flag = Country_Flag_GAPS_Completed_Project_Study_Storm_System
	}
	immediate = {
		owner = { save_event_target_as = Country_Target_GAPS_Storm_Born }
		random_list = {
			70 = { }
			30 = {
				random_system_within_border = {
					random_neighbor_system = {
						limit = { 
							NOT = { has_star_flag = Star_Flag_GAPS_Space_Storm_Ongoing } 
						}
						star = { planet_event = { id = Events_GAPS_Storm_Born.41 days = 1 } }
					}
				}
			}
		}
	}
}
# The Storm Begins
planet_event = {
	id = Events_GAPS_Storm_Born.41
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		planet_event = { id = Events_GAPS_Storm_Born.42 days = 1800 }
		star = {
			create_ambient_object = {
				type = "space_storm_1"
				location = this
			}
			last_created_ambient_object = {
				set_ambient_object_flag = Ambient_Flag_GAPS_Space_Storm_object
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
			}
		}
		solar_system = {
			set_timed_star_flag = { flag = Star_Flag_GAPS_Space_Storm_Ongoing days = 1800 }
			add_modifier = { modifier = space_storm }
		}
	}
}
# The Storm Ends
planet_event = {
	id = Events_GAPS_Storm_Born.42
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		solar_system = {
			every_system_ambient_object = {
				limit = { has_ambient_object_flag = Ambient_Flag_GAPS_Space_Storm_object }
				destroy_ambient_object = this
			}
			remove_modifier = space_storm
		}
	}
}
# Create Rift Storm
country_event = {
	id = Events_GAPS_Storm_Born.50
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Storm_Born }
		has_country_flag = Country_Flag_GAPS_Completed_Project_Study_Storm_System
	}
	immediate = {
		owner = { save_event_target_as = Country_Target_GAPS_Storm_Born }
		random_list = {
			85 = { }
			15 = {
				random_system_within_border = {
					random_neighbor_system = {
						limit = { 
							NOT = { has_star_flag = Star_Flag_GAPS_Rift_Storm_Ongoing } 
						}
						star = { planet_event = { id = Events_GAPS_Storm_Born.51 days = 1 } }
					}
				}
			}
		}
	}
}
# The Storm Begins
planet_event = {
	id = Events_GAPS_Storm_Born.51
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		planet_event = { id = Events_GAPS_Storm_Born.52 days = 1800 }
		star = {
			create_ambient_object = {
				type = "extradimensional_2"
				location = this
			}
			last_created_ambient_object = {
				set_ambient_object_flag = Ambient_Flag_GAPS_Rift_Storm_object
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
			}
			create_ambient_object = {
				type = "space_storm_1"
				location = this
			}
			last_created_ambient_object = {
				set_ambient_object_flag = Ambient_Flag_GAPS_Rift_Storm_object
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
			}
		}
		solar_system = {
			set_timed_star_flag = { flag = Star_Flag_GAPS_Rift_Storm_Ongoing days = 1800 }
			add_modifier = { modifier = System_Modifier_GAPS_Rift_Storm }
		}
	}
}
# The Storm Ends
planet_event = {
	id = Events_GAPS_Storm_Born.52
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		solar_system = {
			every_system_ambient_object = {
				limit = { has_ambient_object_flag = Ambient_Flag_GAPS_Rift_Storm_object }
				destroy_ambient_object = this
			}
			remove_modifier = System_Modifier_GAPS_Rift_Storm
		}
	}
}
country_event = {
	id = Events_GAPS_Storm_Born.61
	hide_window = no
	is_triggered_only = yes
	title = Events_GAPS_Storm_Born.61.name
	desc = Events_GAPS_Storm_Born.61.desc
	location = event_target:Target_Planet_GAPS_Storm_Born_Project
	trigger = {
		has_origin = Origin_GAPS_Storm_Born
		any_system = { has_modifier = space_storm }
		NOT = { has_country_flag = Country_Flag_GAPS_Completed_Project_Study_Storm_System }
		NOT = { has_event_chain = Event_Chain_GAPS_Study_Storm_System }
	}

	immediate = {
		save_event_target_as = Target_Country_GAPS_Storm_Born
		random_system = {
			limit = { has_modifier = space_storm }
			random_system_planet = { 
				save_event_target_as = Target_Planet_GAPS_Storm_Born_Project
			}
			begin_event_chain = {
				event_chain = "Event_Chain_GAPS_Study_Storm_System"
				target = root
			}
			enable_special_project = { name = Special_Project_GAPS_Study_Storm_System owner = root location = event_target:Target_Planet_GAPS_Storm_Born_Project }
		}
	}
}
country_event = {
	id = Events_GAPS_Storm_Born.65
	hide_window = no
	is_triggered_only = yes
	title = Events_GAPS_Storm_Born.65.name
	desc = Events_GAPS_Storm_Born.65.desc
	location = event_target:Target_Planet_GAPS_Storm_Born_Project
	trigger = {
		has_origin = Origin_GAPS_Storm_Born
		any_planet = { has_modifier = extreme_storms }
		NOT = { has_country_flag = Country_Flag_GAPS_Completed_Project_Study_Extreme_Storm_Planet }
		NOT = { has_event_chain = Event_Chain_GAPS_Study_Extreme_Storm_Planet }
	}

	immediate = {
		save_event_target_as = Target_Country_GAPS_Storm_Born
		random_planet = { 
			limit = { has_modifier = extreme_storms }
			save_event_target_as = Target_Planet_GAPS_Storm_Born_Project
			begin_event_chain = {
				event_chain = "Event_Chain_GAPS_Study_Extreme_Storm_Planet"
				target = root
			}
			enable_special_project = { name = Special_Project_GAPS_Study_Extreme_Storm_Planet owner = root location = event_target:Target_Planet_GAPS_Storm_Born_Project }
		}
	}
}
#SPECIAL PROJECTS
country_event = {
	id = Events_GAPS_Storm_Born.70
	picture = GFX_evt_unidentified_ship
	#show_sound = megastructure_upgraded_01
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		subtract_variable = { which = "Country_Variable_GAPS_Storm_Planets" value = 1 }
		if = { 
			limit = { check_variable = { which = "Country_Variable_GAPS_Storm_Planets" value < 1 } }
			end_event_chain = "Event_Chain_GAPS_Storm_Planet_Locations"
		}
	}
}
country_event = {
	id = Events_GAPS_Storm_Born.71
	title = Events_GAPS_Storm_Born.71.name
	desc = Events_GAPS_Storm_Born.71.desc
	picture = GFX_evt_unidentified_ship
	##show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Study_Storm_System
		end_event_chain = "Event_Chain_GAPS_Study_Storm_System"
	}
}
country_event = {
	id = Events_GAPS_Storm_Born.72
	title = Events_GAPS_Storm_Born.72.name
	desc = Events_GAPS_Storm_Born.72.desc
	picture = GFX_evt_unidentified_ship
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Study_Turbulent_Nebula_System
		end_event_chain = "Event_Chain_GAPS_Study_Turbulent_Nebula_System"
	}
}
country_event = {
	id = Events_GAPS_Storm_Born.73
	title = Events_GAPS_Storm_Born.73.name
	desc = Events_GAPS_Storm_Born.73.desc
	picture = GFX_evt_unidentified_ship
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Study_Vluur_Origins
		end_event_chain = "Event_Chain_GAPS_Study_Vluur_Origins"
	}
}

country_event = {
	id = Events_GAPS_Storm_Born.74
	title = Events_GAPS_Storm_Born.74.name
	desc = Events_GAPS_Storm_Born.74.desc
	picture = GFX_evt_unidentified_ship
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Study_Rift_Storm_Origins
		end_event_chain = "Event_Chain_GAPS_Study_Rift_Storm_Origins"
	}
}

country_event = {
	id = Events_GAPS_Storm_Born.75
	title = Events_GAPS_Storm_Born.75.name
	desc = Events_GAPS_Storm_Born.75.desc
	picture = GFX_evt_unidentified_ship
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Study_Extreme_Storm_Planet
		end_event_chain = "Event_Chain_GAPS_Study_Extreme_Storm_Planet"
	}
}


#tech increased
country_event = {
	id = Events_GAPS_Storm_Born.8
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = Origin_GAPS_Storm_Born
		OR = { last_increased_tech = tech_shield_rechargers_1 last_increased_tech = tech_reactor_boosters_1 last_increased_tech = tech_reactor_boosters_2 last_increased_tech = tech_reactor_boosters_3 }
	}
	immediate = {
		if = {
			limit = { last_increased_tech = tech_shield_rechargers_1 }
			if = {
				limit = { has_technology = tech_reactor_boosters_3 }
				give_technology = { message = no tech = Tech_GAPS_Storm_Reactors_3 }
			}
			else_if = {
				limit = { has_technology = tech_reactor_boosters_2 }
				give_technology = { message = no tech = Tech_GAPS_Storm_Reactors_2 }
			}
			else = {
				give_technology = { message = no tech = Tech_GAPS_Storm_Reactors_1 }
			}
		}
		if = {
			limit = { last_increased_tech = tech_reactor_boosters_3 }
			if = {
				limit = { has_technology = tech_shield_rechargers_1 }
				give_technology = { message = no tech = Tech_GAPS_Storm_Reactors_3 }
			}
		}
		if = {
			limit = { last_increased_tech = tech_reactor_boosters_2 }
			if = {
				limit = { has_technology = tech_shield_rechargers_1 }
				give_technology = { message = no tech = Tech_GAPS_Storm_Reactors_2 }
			}
		}
		if = {
			limit = { last_increased_tech = tech_reactor_boosters_1 }
			if = {
				limit = { has_technology = tech_shield_rechargers_1 }
				give_technology = { message = no tech = Tech_GAPS_Storm_Reactors_1 }
			}
		}
	}
}