namespace = starbase_storms

country_event = {
	id = starbase_storms.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_ai = no
		any_owned_starbase = {
			has_starbase_building = system_fast
			solar_system = {
				NOT = { has_modifier = starbase_space_storm }
			}
		}
	}

	immediate = {
		every_owned_starbase = {
			limit = {
				has_starbase_building = system_fast
				solar_system = {
					NOT = { has_modifier = starbase_space_storm }
				}
			}
			solar_system = {
				add_modifier = { modifier = starbase_space_storm }
				star = {
					create_ambient_object = {
						type = "space_storm_1"
						location = this
					}
					last_created_ambient_object = {
						set_ambient_object_flag = space_storm_object
						set_location = {
							target = prev
							distance = 0
							angle = random
						}
					}
				}				
			}
		}
	}
}

country_event = {
	id = starbase_storms.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			NAND = {
				exists = starbase
				starbase = { has_starbase_building = system_fast }
			}
			has_modifier = starbase_space_storm
		}
	}

	immediate = {
		from = { 
			remove_modifier = starbase_space_storm
			solar_system = { 			
				every_system = {
					random_system_ambient_object = {
						limit = { has_ambient_object_flag = space_storm_object }
						destroy_ambient_object = this
					}	
				}
			}
		}
	}
}

country_event = {
	id = starbase_storms.3
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		is_ai = no
		any_owned_starbase = {
			NOT = { has_starbase_building = system_fast }
			solar_system = {
				has_modifier = starbase_space_storm
			}
		}
	}
	
	immediate = {
		every_owned_starbase = {
			limit = {
				NOT = { has_starbase_building = system_fast }
				solar_system = {
					has_modifier = starbase_space_storm
				}
			}
			solar_system = { 
			remove_modifier = starbase_space_storm 
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = space_storm_object }
					destroy_ambient_object = this
				}	
			}
		}
	}
}