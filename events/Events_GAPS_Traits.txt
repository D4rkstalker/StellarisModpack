namespace = Events_GAPS_Traits
#Lightbound Game Start
country_event = {
	id = Events_GAPS_Traits.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
	}
	immediate = {
		if = {
			#limit = { any_owned_species = { has_trait = Trait_GAPS_Light_Bound } } 
			every_owned_pop = {
				limit = { has_trait = Trait_GAPS_Light_Bound }
				remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_1
				remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_2
				remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_3
				remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_4
				remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_5
				remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_6
			}
			solar_system = {
				limit = { is_GAPS_light_level_1 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_1 days = -1 }
					}
				}
			}
			every_system_within_border = {
				limit = { is_GAPS_light_level_2 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_2 days = -1 }
					}
				}
			}
			every_system_within_border = {
				limit = { is_GAPS_light_level_3 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_3 days = -1 }
					}
				}
			}
			every_system_within_border = {
				limit = { is_GAPS_light_level_4 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_4 days = -1 }
					}
				}
			}
			every_system_within_border = {
				limit = { is_GAPS_light_level_5 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_5 days = -1 }
					}
				}
			}
			every_system_within_border = {
				limit = { is_GAPS_light_level_6 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_6 days = -1 }
					}
				}
			}
		}
	}
}
planet_event = {
	id = Events_GAPS_Traits.11
	is_triggered_only = yes
	hide_window = yes

	trigger = {
	}
	immediate = {
		solar_system = {
			every_system_planet = {
				limit = { is_colony = yes }
				every_owned_pop = {
					limit = { has_trait = Trait_GAPS_Light_Bound }
					remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_1
					remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_2
					remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_3
					remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_4
					remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_5
					remove_modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_6
				}
			}
			if = {
				limit = { is_GAPS_light_level_1 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_1 days = -1 }
					}
				}
			}
			else_if = {
				limit = { is_GAPS_light_level_2 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_2 days = -1 }
					}
				}
			}
			else_if = {
				limit = { is_GAPS_light_level_3 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_3 days = -1 }
					}
				}
			}
			else_if = {
				limit = { is_GAPS_light_level_4 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_4 days = -1 }
					}
				}
			}
			else_if = {
				limit = { is_GAPS_light_level_5 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_5 days = -1 }
					}
				}
			}
			else_if = {
				limit = { is_GAPS_light_level_6 = yes }
				every_system_planet = {
					limit = { is_colony = yes }
					every_owned_pop = {
						limit = { has_trait = Trait_GAPS_Light_Bound }
						add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_6 days = -1 }
					}
				}
			}
		}
	}
}
# A pop has been added to the planet
# Root = pop
# From = planet
pop_event = {
	id = Events_GAPS_Traits.111
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_trait = Trait_GAPS_Light_Bound
	}
	immediate = {
		from.solar_system = {
			if = {
				limit = { is_GAPS_light_level_1 = yes }
				root = { add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_1 days = -1 } }
			}
			else_if = {
				limit = { is_GAPS_light_level_2 = yes }
				root = { add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_2 days = -1 } }
			}
			else_if = {
				limit = { is_GAPS_light_level_3 = yes }
				root = { add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_3 days = -1 } }
			}
			else_if = {
				limit = { is_GAPS_light_level_4 = yes }
				root = { add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_4 days = -1 } }
			}
			else_if = {
				limit = { is_GAPS_light_level_5 = yes }
				root = { add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_5 days = -1 } }
			}
			else_if = {
				limit = { is_GAPS_light_level_6 = yes }
				root = { add_modifier = { modifier = Pop_Modifier_GAPS_Light_Born_Light_Level_6 days = -1 } }
			}
		}
	}
}

#War And PEAce traits
country_event = {
	id = Events_GAPS_Traits.12
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		any_owned_pop = { OR = { has_trait = Trait_GAPS_War_Happy has_trait = Trait_GAPS_Peace_Happy } }
	}
	immediate = {
		if = {
			limit = { is_at_war = yes } 
			every_owned_pop = {
				limit = { has_trait = Trait_GAPS_War_Happy not = { has_modifier = Pop_Modifier_GAPS_War_Happy } }
				add_modifier = { modifier = Pop_Modifier_GAPS_War_Happy days = -1 }
			}
			every_owned_pop = {
				limit = { has_trait = Trait_GAPS_Peace_Happy }
				remove_modifier = Pop_Modifier_GAPS_Peace_Happy
			}
		}
		else_if = {
			limit = { is_at_war = no } 
			every_owned_pop = {
				limit = { has_trait = Trait_GAPS_War_Happy }
				remove_modifier = Pop_Modifier_GAPS_War_Happy
			}
			every_owned_pop = {
				limit = { has_trait = Trait_GAPS_Peace_Happy not = { has_modifier = Pop_Modifier_GAPS_Peace_Happy } }
				add_modifier = { modifier = Pop_Modifier_GAPS_Peace_Happy days = -1 }
			}
		}
	}
}
#
#
# A leader leveled up.
# Scope = Country
# From = Leader
#on_leader_level_up
#Stunted PRodigies trait
# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
country_event = {
	id = Events_GAPS_Traits.13
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = { has_trait = Trait_GAPS_Stunted_Prodigies }
		}
	}

	immediate = {
		from = {
			set_skill = 5
		}
	}
}

# A pop has been added to the planet
# Root = pop
# From = planet
pop_event = {
	id = Events_GAPS_Traits.14
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_trait = Trait_GAPS_Mutable
	}
	immediate = {
		random_list = {
			95 = {
			}
			5 = {
				species = { save_event_target_as = gwen_clone_1 }
				root = {
					modify_species = {
						species = event_target:gwen_clone_1
						add_trait = Trait_GAPS_Mutable_Empty
					}
					species = { save_event_target_as = gwen_clone_2 }
				}
				event_target:gwen_clone_2 = {
					mutate_species = yes
				}
				root = {
					modify_species = {
						remove_trait = Trait_GAPS_Mutable_Empty
					}
				}
			}
		}
	}
}
