namespace = cybertron_war

#WAR FOR CYBERTRON
#SET UP
country_event = {
	id = cybertron_war.1
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_origin = origin_war_for_cybertron
	}
	
	immediate = {
		save_event_target_as = war_for_cybertron_owner
		begin_event_chain = {
			event_chain = "war_for_cybertron_chain"
			target = ROOT
		}
		capital_scope = {
			set_planet_flag = war_for_cybertron_origin
			add_modifier = {
				modifier = kaon_movement_0
			}
			planet_event = { id = cybertron_war.2 days = 360 }
		}
	}
}

#KAON MOVEMENT 1: Megatronus Gains Support
planet_event = {
	id = cybertron_war.2
	title = "origin_cybertron_war.2.name"
	desc = "origin_cybertron_war.2.desc"
	picture = "GFX_evt_decepticon_warlord"
	show_sound = event_public_unrest
	location = root
	
	is_triggered_only = yes
	
	immediate = {
		remove_modifier = kaon_movement_0
		add_modifier = {
			modifier = kaon_movement_1
		}
		planet_event = { id = cybertron_war.3 days = 1825 random = 900 }
	}
	option = {
		name = "origin_cybertron_war.2.a"
		trigger = {
			has_planet_flag = war_for_cybertron_origin
		}
	}
}
#KAON MOVEMENT 1: Megatronus Meets Orion Pax
planet_event = {
	id = cybertron_war.3
	title = "origin_cybertron_war.3.name"
	desc = "origin_cybertron_war.3.desc"
	picture = "GFX_evt_cybertron_meeting"
	show_sound = event_administrative_work
	location = root
	
	is_triggered_only = yes
	
	immediate = {
		planet_event = { id = cybertron_war.4 days = 3600 random = 1200 }
	}
	option = {
		name = INTERESTING 
		trigger = {
			has_planet_flag = war_for_cybertron_origin
		}
	}
}
#KAON MOVEMENT 3: Megatronus Meets with the High Council
planet_event = {
	id = cybertron_war.4
	title = "origin_cybertron_war.4.name"
	desc = "origin_cybertron_war.4.desc"
	picture = "GFX_evt_cybertron_council"
	show_sound = event_public_unrest
	location = root
	
	is_triggered_only = yes
	
	#option = {
	#	name = "We will choose Megatronus to become the next Prime."
	#	set_planet_flag = megatron_prime
	#	remove_modifier = "kaon_movement_1"
	#	add_modifier = {
	#		modifier = "megatron_reign"
	#		days = -1
	#	}
	#	country_event = { id = cybertron_war.4a }
	#}
	
	option = {
		name = "origin_cybertron_war.4.a"
		set_planet_flag = optimus_prime
		remove_modifier = "kaon_movement_1"
		add_modifier = {
			modifier = "kaon_movement_2"
			days = -1
		}
		planet_event = { id = cybertron_war.5 days = 1825 random = 900 }
	}
}
#MEGATRONUS
#country_event = {
#	id = cybertron_war.4a
#	hide_window = yes
#	
#	is_triggered_only = yes
#	
#	trigger = {
#		has_planet_flag = megatron_prime
#	}
#	
#	hidden_effect = {
#		owner = {
#			create_leader = {
#				name = "Megatronus Prime"
#				class = ruler
#				portrait = "megatron_01"
#				species = event_target:decepticon_species
#				skill = 5
#				traits = {
#					trait = trait_ruler_decepticon_leadership
#					trait = leader_trait_ruler_cybertronian
#				}
#			}
#			assign_leader = last_created
#		}
#		shift_ethic = "ethic_militarist"
#	}
#}


#KAON MOVEMENT 3: Megatron Prepares for War
planet_event = {
	id = cybertron_war.5
	title = "origin_cybertron_war.5.name"
	desc = "origin_cybertron_war.5.desc"
	picture = "GFX_evt_cybertron_unrest"
	show_sound = event_planetary_riot
	location = root
	
	is_triggered_only = yes
	
	immediate = {
		remove_modifier = kaon_movement_2
		add_modifier = {
			modifier = kaon_movement_3
			days = -1
		}
		add_modifier = {
			modifier = militarist_unrest
			days = 1800 # 5 years
		}
		set_timed_planet_flag = {
			flag = recent_unrest_event
			days = 720
		}
		planet_event = { id = cybertron_war.6 days = 1825 random = 900 }
		
	}
	option = {
		name = "origin_cybertron_war.5.a"
		tooltip = { 
			add_modifier = {
				modifier = militarist_unrest
				days = 1800 # 5 years
			}
		}
	}
}
#KAON MOVEMENT REVOLT 3: Megatron Starts the War based on Stellaris MACHINE UPRISING #1000-1999

planet_event = {
	id = cybertron_war.6
	title = "origin_cybertron_war.6.name"
	desc = "origin_cybertron_war.6.desc"
	picture = "GFX_evt_cybertron_war"
	show_sound = event_ground_battle
	location = ROOT
	
	is_triggered_only = yes
	
	immediate = {
		set_planet_flag = decepticon_invasion_planet
		owner = { set_country_flag = decepticon_invasion_country }
		create_species = {
			name = "Decepticon"
			class = cybertronian
			portrait = "decepticon"
			name_list="decepticon"
			traits = {
				trait = trait_mechanical
				trait = trait_cybertronian
				trait = trait_robot_decepticon
				trait = trait_energon_dependence
			}
			immortal = yes
		}
		create_country = {
			name = "Decepticon Army"
			species = last_created_species
			type = adversary
			flag = {
				icon={
					category="cybertronian"
					file="decepticon_01.dds"
				}
				background={
					category="backgrounds"
					file="00_solid.dds"
				}
				colors={
					"dark_purple"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				establish_communications_no_message = root.owner
				establish_contact = { who = root.owner location = root.solar_system }
				save_event_target_as = decepticon_nation
				owner_species = { save_event_target_as = decepticon_species }
			}
		}
		event_target:decepticon_nation = {
			create_leader = {
				class = general
				species = event_target:decepticon_species
				name = random
				skill = 5
			}
		}
		#10 Decepticon Armies
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		create_army = {
			name = "Decepticon Army"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_army"
		}
		#5 Seekers
		create_army = {
			name = "Decepticon Seeker Squadrons"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_seekers"
		}
		create_army = {
			name = "Decepticon Seeker Squadrons"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_seekers"
		}
		create_army = {
			name = "Decepticon Seeker Squadrons"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_seekers"
		}
		create_army = {
			name = "Decepticon Seeker Squadrons"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_seekers"
		}
		create_army = {
			name = "Decepticon Seeker Squadrons"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_seekers"
		}
		#3 Leapers
		create_army = {
			name = "Decepticon Leapers"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_leapers"
		}
		create_army = {
			name = "Decepticon Leapers"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_leapers"
		}
		create_army = {
			name = "Decepticon Leapers"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_leapers"
		}
		#2 Combiners
		create_army = {
			name = "Decepticon Combiner"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "cybertronian_combiners"
		}
		create_army = {
			name = "Decepticon Combiner"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "cybertronian_combiners"
		}
		create_army = {
			name = "Trypticon"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_trypticon"
		}
		#1 Megatron
		create_army = {
			name = "Megatron"
			owner = event_target:decepticon_nation
			species = event_target:decepticon_species
			type = "decepticon_megatron"
			leader = last_created_leader
		}
		# Dark Energon Arsenal 
		create_army = {
			name = "Dark Energon Corruptors"
			owner = event_target:decepticon_nation
			type = "dark_energon_corruptors"
		}
		create_army = {
			name = "Dark Energon Corruptors"
			owner = event_target:decepticon_nation
			type = "dark_energon_corruptors"
		}
		create_army = {
			name = "Dark Energon Terrorcons"
			owner = event_target:decepticon_nation
			type = "dark_energon_terrorcons"
		}
		create_army = {
			name = "Dark Energon Terrorcons"
			owner = event_target:decepticon_nation
			type = "dark_energon_terrorcons"
		}
		create_army = {
			name = "Dark Energon Terrorcons"
			owner = event_target:decepticon_nation
			type = "dark_energon_terrorcons"
		}
	}
	
	option = {
		name = "origin_cybertron_war.6.a"
	}
}
#WAR FOR CYBERTRON DECEPTICONS DEFEATED! (VICTORY)
country_event = {
	id = cybertron_war.7
	title = "origin_cybertron_war.7.name"
	desc = "origin_cybertron_war.7.desc"
	picture = "GFX_evt_cybertron_war_won"
	show_sound = event_planetary_riot
	location = FROMFROM
	trackable = yes
	
	is_triggered_only = yes

	trigger = {
		has_country_flag = decepticon_invasion_country
		NOT = { has_country_flag = decepticons_defeated_once }
		FROMFROM = { has_planet_flag = decepticon_invasion_planet }
	}
	immediate = {
		remove_modifier = kaon_movement_3
		remove_country_flag = decepticon_invasion_country
		set_country_flag = decepticons_defeated_once
		add_modifier = {
			modifier = great_war_victor
			days = 1800
		}
		FROMFROM = {
			set_planet_flag = war_for_cybertron 
			remove_planet_flag = decepticon_invasion_planet
			create_pop = { species = event_target:decepticon_species }
			create_pop = { species = event_target:decepticon_species }
			remove_modifier = cybertron_twilight
			remove_modifier = kaon_movement_3
			add_modifier = {
				modifier = "great_war"
				days = 7200
			}
			change_pc = pc_damaged_cybertron
			prevent_anomaly = yes
			set_planet_entity = {
				entity = "damaged_cybertron_planet_01_entity"
				picture = pc_damaged_cybertron
			}
			clear_deposits = yes
			add_deposit = d_iacon_city
			add_deposit = d_crystal_city_ruins
			add_deposit = d_cybertron_ruins
			add_deposit = d_cybertron_ruins
			add_deposit = d_teletraan_one
			add_deposit = d_kaon_city
			add_deposit = d_insecticon_infestation
			add_deposit = d_damaged_cybertron_core
			add_deposit = d_sea_of_rust
			add_deposit = d_deactivated_space_bridge
			add_deposit = d_inactive_well_of_all_sparks
			add_deposit = d_energon_bridge
			add_deposit = d_energon_crystals
			add_planet_devastation = 75
		}
	}
	
	option = {
		name = "origin_cybertron_war.7.a"
		tooltip = {
			add_modifier = {
				modifier = revolt_suppressed_2
				days = 3600
			}
		}
		custom_tooltip = unrest.161.a.tooltip
	}
}


#WAR FOR CYBERTRON DECEPTICONS WIN! (DEFEAT)
country_event = {
	id = cybertron_war.8
	title = "origin_cybertron_war.8.name"
	desc = "origin_cybertron_war.8.desc"
	picture = GFX_evt_cybertron_war_lost
	show_sound = event_planetary_riot
	location = FROMFROM
	
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = decepticon_invasion_country
		FROMFROM = { has_planet_flag = decepticon_invasion_planet }
		from = { is_country_type = adversary }
	}
	
	immediate = {
		remove_country_flag = decepticon_invasion_country
		save_event_target_as = decepticon_former_planet_owner
		from = {
			save_event_target_as = decepticon_nation
			owner_species = { save_event_target_as = decepticon_species }
		}
		from = { destroy_country = yes }
		FROMFROM = {
			remove_modifier = cybertron_twilight
			remove_modifier = kaon_movement_3
			add_modifier = {
				modifier = "great_war"
				days = 7200
			}
			change_pc = pc_damaged_cybertron
			prevent_anomaly = yes
			set_planet_entity = {
				entity = "damaged_cybertron_planet_01_entity"
				picture = pc_damaged_cybertron
			}
			clear_deposits = yes
			add_deposit = d_dead_iacon_city
			add_deposit = d_crystal_city_ruins
			add_deposit = d_cybertron_ruins
			add_deposit = d_cybertron_ruins
			add_deposit = d_teletraan_one
			add_deposit = d_kaon_city
			add_deposit = d_insecticon_infestation
			add_deposit = d_damaged_cybertron_core
			add_deposit = d_sea_of_rust
			add_deposit = d_deactivated_space_bridge
			add_deposit = d_inactive_well_of_all_sparks
			add_deposit = d_energon_bridge
			add_deposit = d_energon_crystals
			add_planet_devastation = 75
		}
	}
	
	option = {
		name = origin_cybertron_war.answer
		end_event_chain = "war_for_cybertron_chain"
		hidden_effect = {
			country_event = { id = cybertron_war.85 }
		}
	}
}

country_event = {
	id = cybertron_war.85
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		host_has_dlc = "Synthetic Dawn Story Pack"
		is_country_type = default
		NOR = {
			has_country_flag = no_decepticon_uprising
			has_country_flag = had_decepticon_uprising
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					any_owned_planet = {
						any_owned_pop = {
							has_trait = trait_cybertronian
						}
					}
				}
			}
			set_timed_country_flag = {
				flag = no_decepticon_uprising
				days = 3600
			}
		}
		# uprising on Cybertron
		else_if = {
			limit = {
				any_owned_planet = {
					any_owned_pop = {
						has_trait = trait_cybertronian
					}
					is_capital = yes
				}
			}
			random_owned_planet = {
				limit = {
					any_owned_pop = {
						has_trait = trait_cybertronian
					}
					is_capital = yes
				}
				planet_event = { id = cybertron_war.1020 }
			}
		}
		# uprising on colony
		else_if = {
			limit = {
				any_owned_planet = {
					any_owned_pop = {
						has_trait = trait_cybertronian
					}
					is_capital = no
				}
			}
			random_owned_planet = {
				limit = {
					any_owned_pop = {
						has_trait = trait_cybertronian
					}
					is_capital = no
				}
				planet_event = { id = cybertron_war.1020 }
			}
		}
	}
}

planet_event = { #DECEPTICON UPRISING
	id = cybertron_war.1020
	title = origin_cybertron_war.1020.name
	desc = origin_cybertron_war.1020.desc
	picture = GFX_evt_cybertron_open_warfare
	show_sound = event_ground_battle
	is_triggered_only = yes
	
	pre_triggers = {
		has_owner = yes
	}
	
	trigger = {
		host_has_dlc = "Synthetic Dawn Story Pack"
	}
	
	immediate = {
		owner = {
			save_event_target_as = cybertronian_empire
			set_country_flag = had_decepticon_uprising
			save_event_target_as = decepticon_empire
		}
		set_planet_flag = decepticon_capital@root.owner
		# event lock all fleets to prevent exploits
		owner = { every_owned_fleet = { set_event_locked = yes } }
		# find and flag planets
		owner = {
			effect_on_blob = {
				center = root.solar_system
				owned_planets_percentage = 0.5
				planet_limit = {
					OR = {
						controller = { is_same_value = root.owner }
						solar_system = {
							exists = starbase
							starbase = { owner = { is_same_value = root.owner } }
						}
					}
					solar_system = { # never flip any planets in the capital system
						NOT = { any_system_planet = { is_same_value = root.owner.capital_scope } }
					}
					is_under_colonization = no
				}
				effect = {
					set_star_flag = decepticonup_system_flip
				}
			}
		}
		# create decepticon species
		create_species = {
			name = "Decepticon"
			class = cybertronian
			portrait = "decepticon"
			name_list="decepticon"
			traits = {
				trait = trait_mechanical
				trait = trait_cybertronian
				trait = trait_robot_decepticon
				trait = trait_energon_dependence
			}
			immortal = yes
		}
		# create decepticon country
		random_list = {
			100 = {
				owner = {
					create_country = {
						name = "Decepticon Star Empire"
						type = default
						species = last_created_species
						ignore_initial_colony_error = yes
						day_zero_contact = no
						ethos = {
							ethic = ethic_fanatic_militarist
							ethic = ethic_authoritarian
						}
						authority = auth_dictatorial
						origin = origin_separatists
						civics = {
							civic = civic_decepticons
							civic = civic_warrior_culture
						}
						flag = {
							icon = {
								category="cybertronian"
								file="decepticon_01.dds"
							}
							background= {
								category="backgrounds"
								file="00_solid.dds"
							}
							colors={
								"dark_purple"
								"black"
								"null"
								"null"
							}
						}
						effect = {
							modify_species = {
								species = this
								add_trait = trait_mechanical
								add_traits_at_start_of_list = yes
							}
							create_leader = {
								class = ruler
								species = event_target:decepticon_species
								name = "Megatron"
								skill = 5
								traits = {
									trait = leader_trait_ruler_cybertronian
									trait = trait_ruler_decepticon_leadership
								}
								effect = {
									save_event_target_as = decepticon_ruler
								}
							}
							set_leader = event_target:decepticon_ruler
							save_event_target_as = decepticon_empire
							country_event = { id = cybertron_war.9 } #setup happens here now
						}
					}
					last_created_country = {
						set_graphical_culture="decepticon_01"
						set_country_flag = synthetic_empire
						set_country_flag = cybertronian_synth_empire
						give_decepticon_tech = yes
						cybertronian_game_start_condition_adjustments_effect = yes
						cybertronian_game_start_dominant_species_changes_effect = yes
					}
				}
			}
		}
	}
	option = {
		name = "origin_cybertron_war.8.a"
		custom_tooltip = cybertron_war.8a.tooltip
		hidden_effect = {
			event_target:decepticon_empire = {
				add_modifier = {
					modifier = uprising_ai_buff
					days = 1800
				}
			}
			event_target:autobot_empire = {
				country_event = { id = cybertron_war.12 }
				country_event = { id = cybertron_war.14 }
			}
		}
	}
	
	option = {
		name = "origin_cybertron_war.8.b"
		trigger = {
			event_target:autobot_empire = { is_ai = no }
		}
		custom_tooltip = cybertron_war.8b.tooltip
		hidden_effect = {
			if = {
				limit = {
					event_target:autobot_empire = { num_owned_planets > 0 }
				}
				event_target:decepticon_empire = {
					set_player = event_target:autobot_empire
					add_modifier = {
						modifier = uprising_player_buff
						days = 1800
					}
				}				
			}
			owner = {
				leader = {
					kill_leader = { show_notification = yes }
				}
				create_species = {
					name = "Cybertronian"
					class = cybertronian 
					portrait = megatron_01
					namelist = "decepticon"
					traits = {
						trait = "trait_mechanical"
						trait = "trait_cybertronian"
						trait = "trait_robot_decepticon"
						trait = "trait_energon_dependence"
					}
				}
				create_leader = {
					name = "Megatron"
					class = ruler 
					species = last_created_species 
					traits = {
						trait = trait_ruler_decepticon_leadership
						trait = trait_ruler_warlike
						trait = trait_ruler_from_the_ranks
					}
				}
				last_created_leader = {
					save_event_target_as = megatron 
					set_leader_flag = decepticon_leader 
					set_age = 5000000
					set_skill = 5
				}
				assign_leader = last_created_leader 
				country_event = { id = cybertron_war.13 }
				country_event = { id = cybertron_war.14 }
			}
		}
	}

	after = {
		hidden_effect = {
			event_target:autobot_empire = {
				every_controlled_fleet = {
					set_event_locked = no
				}
			}
		}
	}
}
#DECEPTICON SETUP
country_event = {
	id = cybertron_war.9
	hide_window = yes
	is_triggered_only = yes

	trigger = { host_has_dlc = "Synthetic Dawn Story Pack" }
	
	
	immediate = {
		# saving uprising and host as event targets
		save_event_target_as = decepticon_empire
		from.owner = { save_event_target_as = autobot_empire }

		# setting flags
		set_country_flag = decepticon_uprising_country@from.owner
		set_country_flag = decepticon_uprising_country
		set_relation_flag = {
			who = event_target:autobot_empire
			flag = uprising_to_host_flag
		}
		from.owner = {
			set_country_flag = decepticon_uprising_originator@root
			set_country_flag = decepticon_uprising_originator
			set_relation_flag = {
				who = root
				flag = host_to_uprising_flag
			}
		}
		
		# setting graphical culture
		set_graphical_culture = decepticon_01

		# establish comms
		every_country = {
			limit = {
				OR = {
					has_communications = event_target:decepticon_empire
					intel_level = {
						level > low
						system = event_target:decepticon_empire.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = decepticonup_system_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = { who = root location = from }
		}

		# baseline resource stockpile
		add_resource = {
			energy = 20000
			minerals = 20000
			influence = 800
			alloys = 10000
			food = 10000 #just in case
			consumer_goods = 5000 #just in case
			rare_crystals = 1000
			volatile_motes = 1000
			exotic_gases = 1000
			sr_dark_matter = 100
		}
		add_500_unity_per_year_passed = yes # scripted effect

		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:decepticon_empire
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:decepticon_empire
				modifier = opinion_new_contact
			}
		}
		
		
		# flip capital planet and add at least 10 Decepticon pops
		from = {
			# flip military stations
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = { is_same_value = event_target:autobot_empire }
						any_controlled_ship = { is_ship_class = shipclass_military_station }
					}
					set_owner = root
				}
			}
			set_owner = root
			set_controller = root
			set_capital = yes

			solar_system = {
				if = {
					limit = {
						exists = starbase
					}
					starbase = {
						set_owner = root
						if = {
							limit = { has_starbase_size = starbase_outpost }
							set_starbase_size = starbase_starport
							set_starbase_module = {
								slot = 1
								module = shipyard
							}
							set_starbase_module = {
								slot = 2
								module = shipyard
							}
						}
						else_if = {
							limit = {
								NOT = { has_starbase_module = shipyard }
							}
							set_starbase_module = {
								slot = 1
								module = shipyard
							}
							set_starbase_module = {
								slot = 2
								module = shipyard
							}
						}
					}
				}
				else = {
					create_starbase = {
						size = starbase_starport
						module = shipyard
						owner = root
					}
				}
			}

			while = {
				#limit = { free_housing > 0 }
				count = 10
				create_pop = {
					species = root
				}
			}
			
			if = {
				limit = {
					count_owned_pop = {
						count < 5
						limit = { is_exact_same_species = root }
					}
				}
				while = {
					limit = {
						count_owned_pop = {
							count < 5
							limit = { is_exact_same_species = root }
						}
					}
					random_owned_pop = {
						limit = { NOT = { is_exact_same_species = root } }
						kill_pop = yes
						prev = {
							create_pop = {
								species = root
							}						
						}
					}
				}
			}

			# create armies
			if = {
				limit = { root = { has_civic = civic_decepticons } }
				# more armies if exterminator
				while = {
					count = 6
					create_army = {
						owner = root
						type = decepticon_army
					}
				}
			}
			else = {
				# regular armies
				while = {
					count = 3
					create_army = {
						owner = root
						type = decepticon_army
					}
				}
			}

			# flip remaining flagged planets
			while = {
				count = 100
				limit = {
					any_system = {
						has_star_flag = decepticonup_system_flip
						exists = starbase
						starbase = {
							owner = { is_same_value = event_target:autobot_empire }
						}
					}
				}
				random_system = {
					limit = {
						has_star_flag = decepticonup_system_flip
						exists = starbase
						starbase = {
							owner = { is_same_value = event_target:autobot_empire }
						}
					}
					starbase = { set_owner = root }
				}
			}
			event_target:autobot_empire = {
				every_owned_planet = {
					limit = {
						solar_system = {
							#has_star_flag = decepticonup_system_flip@event_target:autobot_empire
							has_star_flag = decepticonup_system_flip
						}
					}

					# flip military stations
					solar_system = {
						every_fleet_in_system = {
							limit = {
								exists = owner
								owner = { is_same_value = event_target:autobot_empire }
								any_controlled_ship = { is_ship_class = shipclass_military_station }
							}
							set_owner = root
						}
					}

					set_planet_flag = been_flipped
					set_owner = root
					set_controller = root
					
					export_trigger_value_to_variable = {
						trigger = free_housing
						variable = housing_var
					}
					
					if = {
						limit = {
							OR = {
								check_variable = {
									which = housing_var
									value < 2
								}
								check_variable = {
									which = housing_var
									value > 25
								}
							}
						}
						set_variable = {
							which = housing_var
							value = 15
						}
					}
					while = {
						count = housing_var
						create_pop = {
							species = root
						}
					}
					clear_variable = housing_var

					if = {
						limit = {
							count_owned_pop = {
								count < 5
								limit = { is_exact_same_species = root }
							}
						}
						while = {
							limit = {
								count_owned_pop = {
									count < 5
									limit = { is_exact_same_species = root }
								}
							}
							count = 5
							random_owned_pop = {
								limit = { NOT = { is_exact_same_species = root } }
								kill_pop = yes
								prev = {
									create_pop = {
										species = root
									}								
								}
							}
						}
					}

					# create armies on planets
					if = {
						limit = { root = { has_civic = civic_decepticons } }
						# more armies if exterminator
						while = {
							count = 6
							create_army = {
								owner = root
								type = decepticon_army
							}
						}
					}
					else = {
						# regular armies
						while = {
							count = 3
							create_army = {
								owner = root
								type = decepticon_army
							}
						}
					}
					if = {
						limit = { is_under_colonization = yes }
						destroy_colony = yes
					}
				}
			}
			every_system = {
				limit = {
					has_star_flag = decepticonup_system_flip
				}
				remove_star_flag = decepticonup_system_flip
			}
		}
		
		# get host's technologies
		copy_techs_from = {
			target = event_target:autobot_empire
			except = {
				# Robots
				tech_robotic_workers
				tech_droid_workers
				tech_synthetic_workers
				# Food
				tech_eco_simulation
				tech_gene_crops
				tech_nano_vitality_crops
				tech_nutrient_replication
				# Misc
				tech_frontier_health
				tech_frontier_hospital
				tech_telepathy
				tech_precognition_interface
				tech_psi_jump_drive_1
				tech_galactic_markets
				tech_subdermal_stimulation
				tech_global_research_initiative
				tech_neural_implants
				tech_psionic_theory
				# Non-Machine Robomodding
				tech_robomodding
				tech_robomodding_points_1
				tech_robomodding_points_2
				# Genetics
				tech_genome_mapping
				tech_vitality_boosters
				tech_epigenetic_triggers
				tech_cloning
				tech_gene_banks
				tech_gene_seed_purification
				tech_morphogenetic_field_mastery
				tech_gene_tailoring
				tech_glandular_acclimation
				tech_gene_expressions
				tech_selected_lineages
				tech_capacity_boosters
				# Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}
		
		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:autobot_empire
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}
		
		# declare war on host
		declare_war = {
			target = event_target:autobot_empire
			name = {
				key = "NAME_Machine_Uprising_War"
				variable_string = "[This.MainDefender.GetAdj]"
			}
			# "[This.MainDefender.GetAdj] Decepticon Uprising"
			attacker_war_goal = "wg_machine_uprising"
		}

		# create fleets
		if = {
			limit = {
				OR = {
					has_civic = civic_decepticons
					has_civic = civic_machine_decepticons
				}
			}
			
			# decepticon fleets, 80% naval cap
			
			create_fleet_from_naval_cap = 0.2
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}

			reroll_random = yes
			create_fleet_from_naval_cap = 0.3
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}

			reroll_random = yes
			create_fleet_from_naval_cap = 0.4
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}

			reroll_random = yes
			create_fleet_from_naval_cap = 0.6
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			
		}
		else = {
			# regular fleets, 80% naval cap
			create_fleet_from_naval_cap = 0.1
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			reroll_random = yes
			create_fleet_from_naval_cap = 0.3
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			reroll_random = yes
			create_fleet_from_naval_cap = 0.4
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
		}
	
		# add modifier for AI, including 10x naval cap
		if = {
			limit = { is_ai = yes }
			add_modifier = {
				modifier = uprising_ai_buff
				days = 1800
			}
			add_modifier = {
				modifier = cybertronians
				days = -1
			}
			add_modifier = {
				modifier = robots_in_disguise
				days = -1
			}
		}
		# add modifier for player, 10x naval cap
		else = {
			add_modifier = {
				modifier = uprising_player_buff
				days = 1800
			}
			add_modifier = {
				modifier = cybertronians
				days = -1
			}
			add_modifier = {
				modifier = robots_in_disguise
				days = -1
			}
		}
		#science
		create_fleet = {
			effect = {
				set_owner = root

				create_ship = {
					name = random
					random_existing_design = science
				}
			
				set_fleet_stance = evasive				
				set_location = root.capital_scope
					
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}			
		}
				
		#constructor
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				
				set_fleet_stance = evasive
				set_location = root.capital_scope
			}
		}
		
		every_controlled_fleet = {
			#limit = { event_locked = yes }
			set_event_locked = no
		}
		every_playable_country = {
			limit = {
				has_communications = event_target:autobot_empire
				NOR = {
					is_same_value = root
					is_same_value = event_target:autobot_empire
				}
			}
			country_event = { id = cybertron_war.11 days = 5 }
		}
		observer_event = { id = cybertron_war.81 }
	}
}



# Incoming Transmission
country_event = {
	id = cybertron_war.10
	title = "origin_cybertron_war.10.name"
	desc = "origin_cybertron_war.10.desc"

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = "megatron_01"
		planet_background = "pc_damaged_cybertron"
		graphical_culture = "decepticon_01"
		room = "decepticon_5_room"
	}

	option = {
		name = "origin_cybertron_war.10.a"
	}
}

# Decepticon Uprising begins notification
country_event = {
	id = cybertron_war.11
	title = cybertron_war.81.name
	desc = {
		trigger = {
			OR = {
				has_authority = auth_machine_intelligence
				has_country_flag = synthetic_empire
			}
		}
		text = cybertron_war.81.desc.machine
	}
	desc = {
		trigger = {
			NOR = {
				has_authority = auth_machine_intelligence
				has_country_flag = synthetic_empire
			}
		}
		text = cybertron_war.81.desc
	}
	picture = GFX_evt_cybertron_open_warfare
	location = fromfrom
	is_triggered_only = yes
	show_sound = event_robo

	trigger = {
		host_has_dlc = "Synthetic Dawn Story Pack"
		exists = event_target:autobot_empire
		exists = event_target:decepticon_empire
		NOR = {
			is_same_value = event_target:autobot_empire
			is_same_value = event_target:decepticon_empire
		}
	}

	option = {
		name = cybertron_war.81.a
	}
}

# Decepticon Uprising Begins
observer_event = {
	id = cybertron_war.81
	title = cybertron_war.81.name
	desc = cybertron_war.81.desc
	picture = GFX_evt_cybertron_open_warfare
	location = fromfrom
	show_sound = event_robo

	is_triggered_only = yes

	option = {
		name = OK
	}
}

#OPTIMUS PRIME LEADERSHIP CHOICE
country_event = {
	id = cybertron_war.12
	title = "cybertron_war.12.name"
	desc = "cybertron_war.12.desc"
	picture = GFX_evt_optimus_prime 
	show_sound = event_ground_battle
	
	is_triggered_only = yes 
	
	immediate = {
	}
	
	option = {
		name = "cybertron_war.12.a"
		custom_tooltip = "autobot_leadership.12.a"
		event_target:autobot_empire = {
			add_relic = r_matrix_of_leadership
			shift_ethic = ethic_egalitarian
			change_government = {
				authority = "auth_democratic"
				civics={
					civic = "civic_autobots"
					civic = "civic_beacon_of_liberty"
				}
			}
			leader = {
				exile_leader = { show_notification = yes }
			}
			create_species = {
				name = "Cybertronian"
				class = cybertronian 
				portrait = optimus_prime_01
				namelist = "autobot"
				traits = {
					trait = "trait_mechanical"
					trait = "trait_cybertronian"
					trait = "trait_robot_autobot"
					trait = "trait_energon_dependence"
				}
			}
			create_leader = {
				name = "Optimus Prime"
				class = general 
				species = last_created_species 
				traits = {
					trait = trait_ruler_matrix_of_leadership
					trait = trait_ruler_autobot_leadership
					trait = trait_ruler_champion_of_the_people
				}
			}
			last_created_leader = {
				save_event_target_as = optimus_prime 
				set_leader_flag = autobot_leader
				set_age = 5000000
				set_skill = 5					
			}
			assign_leader = last_created_leader
			country_event = { id = cybertron_war.10 }			
		}
	}
	
	option = {
		name = "cybertron_war.12.b"
		custom_tooltip = "autobot_leadership.12.b"
		event_target:autobot_empire = {
			country_event = { id = cybertron_war.10 }	
			add_resource = {
				unity = 500
			}
		}
	}
}

#MEGATRON LEADERSHIP
country_event = {
	id = cybertron_war.13
	title = "cybertron_war.13.name"
	desc = "cybertron_war.13.desc"
	picture = GFX_evt_megatron
	show_sound = event_ground_battle
	
	is_triggered_only = yes 
	
	option = {
		name = "cybertron_war.13.a"
		hidden_effect = {
			owner = {
				add_resource = {
					influence = 100
					unity = 200
				}
			}
		}
	}
}


#AI LEADERSHIP CHANGE 
country_event = {
	id = cybertron_war.14
	hide_window = yes 
	is_triggered_only = yes 
	
	immediate = {
		if = {
			limit = {
				event_target:autobot_empire = { is_ai = yes }
			}
			event_target:autobot_empire = {
				add_relic = r_matrix_of_leadership
				shift_ethic = ethic_egalitarian
				change_government = {
					authority = "auth_democratic"
					civics={
						civic = "civic_autobots"
						civic = "civic_beacon_of_liberty"
					}
				}
				leader = {
					exile_leader = { show_notification = yes }
				}
				create_species = {
					name = "Cybertronian"
					class = cybertronian 
					portrait = optimus_prime_01
					namelist = "autobot"
					traits = {
						trait = "trait_mechanical"
						trait = "trait_cybertronian"
						trait = "trait_robot_autobot"
						trait = "trait_energon_dependence"
					}
				}
				create_leader = {
					name = "Optimus Prime"
					class = general 
					species = last_created_species 
					traits = {
						trait = trait_ruler_matrix_of_leadership
						trait = trait_ruler_autobot_leadership
						trait = trait_ruler_champion_of_the_people
					}
				}
				last_created_leader = {
					save_event_target_as = optimus_prime 
					set_leader_flag = autobot_leader
					set_age = 5000000
					set_skill = 5					
				}
				assign_leader = last_created_leader	
			}
		}
		if = {
			limit = {
				event_target:decepticon_empire = { is_ai = yes }
			}
			event_target:decepticon_empire = {
				leader = {
					kill_leader = { show_notification = yes }
				}
				create_species = {
					name = "Cybertronian"
					class = cybertronian 
					portrait = megatron_01
					namelist = "decepticon"
					traits = {
						trait = "trait_mechanical"
						trait = "trait_cybertronian"
						trait = "trait_robot_decepticon"
						trait = "trait_energon_dependence"
					}
				}
				create_leader = {
					name = "Megatron"
					class = general 
					species = last_created_species 
					traits = {
						trait = trait_ruler_decepticon_leadership
						trait = trait_ruler_warlike
						trait = trait_ruler_from_the_ranks
					}
				}
				last_created_leader = {
					save_event_target_as = megatron 
					set_leader_flag = decepticon_leader 
					set_age = 5000000
					set_skill = 5
				}
				assign_leader = last_created_leader 
			}
		}
	}
}