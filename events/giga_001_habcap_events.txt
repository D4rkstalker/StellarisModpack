namespace = giga_habcap

# on_pop_grown
# on_pop_assembled
planet_event = {
	id = giga_habcap.002
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			has_global_flag = giga_habitats_pop_25
			has_global_flag = giga_habitats_pop_50
			has_global_flag = giga_habitats_pop_100
		}
		exists = from
	}
	immediate = {
		from = {
			change_variable = { which = giga_owned_pops value = 1 }
			giga_calculate_allowed_habitats = yes
		}
	}
}

# on_pop_added
pop_event = {
	id = giga_habcap.003
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			has_global_flag = giga_habitats_pop_25
			has_global_flag = giga_habitats_pop_50
			has_global_flag = giga_habitats_pop_100
		}
		exists = from.owner
	}
	immediate = {
		from.owner = {
			change_variable = { which = giga_owned_pops value = 1 }
			giga_calculate_allowed_habitats = yes
		}
	}
}

# on_pop_purged
# on_pop_declined
# on_pop_displaced
planet_event = {
	id = giga_habcap.004
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			has_global_flag = giga_habitats_pop_25
			has_global_flag = giga_habitats_pop_50
			has_global_flag = giga_habitats_pop_100
		}
		exists = from
	}
	immediate = {
		from = {
			subtract_variable = { which = giga_owned_pops value = 1 }
			giga_calculate_allowed_habitats = yes
		}
	}
}

# on_pop_abducted
pop_event = {
	id = giga_habcap.005
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			has_global_flag = giga_habitats_pop_25
			has_global_flag = giga_habitats_pop_50
			has_global_flag = giga_habitats_pop_100
		}
		exists = from.owner
	}
	immediate = {
		from.owner = {
			subtract_variable = { which = giga_owned_pops value = 1 }
			giga_calculate_allowed_habitats = yes
		}
	}
}

# on_system_lost
country_event = {
	id = giga_habcap.006
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_global_flag = giga_habitats_system_3
			has_global_flag = giga_habitats_system_10
			has_global_flag = giga_habitats_system_25
			has_global_flag = giga_habitats_pop_25
			has_global_flag = giga_habitats_pop_50
			has_global_flag = giga_habitats_pop_100
		}
		exists = from
	}

    immediate = {
		if = {
			limit = { check_variable = { which = giga_owned_systems value > 0 } }
			subtract_variable = { which = giga_owned_systems value = 1 }
		}
		from = {
			every_system_planet = {
				limit = {
					OR = {
						is_planet_class = pc_habitat
						is_planet_class = pc_gigaorbital_ring
					}
				}
				root = { subtract_variable = { which = habitat_count value = 1 } }
			}
		}
		giga_calculate_allowed_habitats = yes
    }
}

# on_system_gained
country_event = {
	id = giga_habcap.007
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_global_flag = giga_habitats_system_3
			has_global_flag = giga_habitats_system_10
			has_global_flag = giga_habitats_system_25
			has_global_flag = giga_habitats_pop_25
			has_global_flag = giga_habitats_pop_50
			has_global_flag = giga_habitats_pop_100
		}
		exists = from
	}

    immediate = {
		if = {
			limit = { check_variable = { which = giga_owned_systems value > 0 } }
			change_variable = { which = giga_owned_systems value = 1 }
		}
		from = {
			every_system_planet = {
				limit = {
					OR = {
						is_planet_class = pc_habitat
						is_planet_class = pc_gigaorbital_ring
					}
				}
				root = { change_variable = { which = habitat_count value = 1 } }
			}
		}
		giga_calculate_allowed_habitats = yes
    }
}

# on_destroy_planet_with_PLANET_KILLER_CRACKER
# on_destroy_planet_with_PLANET_KILLER_SHIELDER
# on_destroy_planet_with_COMPOUND_HM_RESHAPER
planet_event = {
	id = giga_habcap.008
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		OR = {
			has_global_flag = giga_habitats_system_3
			has_global_flag = giga_habitats_system_10
			has_global_flag = giga_habitats_system_25
			has_global_flag = giga_habitats_pop_25
			has_global_flag = giga_habitats_pop_50
			has_global_flag = giga_habitats_pop_100
		}
		OR = {
			is_planet_class = pc_habitat
			is_planet_class = pc_gigaorbital_ring
		}
	}

    immediate = {
		owner = {
			subtract_variable = { which = habitat_count value = 1 }
			giga_calculate_allowed_habitats = yes
		}
	}
}