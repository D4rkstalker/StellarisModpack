namespace = sleeper_the_awoken

#events for the "normal" awakening.

#trigger No1: fallen_empires_awakening.1 has been edited to include the sleeper as well

#trigger for the war in heaven
country_event = {
	id = sleeper_the_awoken.02
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
	#now has a random chance to either go berserk or awaken normally or do nothing
		random_list = {
		#goes berserk (forever)
			40 = {
				country_event = { id = sleeper_awakes.02 }
				every_country = {
					limit = {
						is_ai = no
					}
					country_event = { id = sleeper_the_awoken.09 }
				}
			}
		#full awakening
			30 = {
				country_event = { id = sleeper_the_awoken.05 }
				every_country = {
					limit = {
						is_ai = no
					}
					country_event = { id = sleeper_the_awoken.09 }
				}
			}
		#nothing happens
			30 = {
			}
		}
	}
}

#announcement for the sleeper awakening through war in heaven
country_event = {
	id = sleeper_the_awoken.09
	title = sleeper_the_awoken.09.title
	desc = sleeper_the_awoken.09.desc
	picture = GFX_evt_fallen_empire
	show_sound = event_alien_signal

	is_triggered_only = yes

	option = {
		name = sleeper_the_awoken.09.a
	}
}

#actual awakening event
country_event = {
	id = sleeper_the_awoken.05
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		save_event_target_as = the_sleeper
	#annex all remaining drone countries
		every_country = {
			limit = {
				is_country_type = scrambled_drones
			}
			country_event = { id = sleeper_awakes.06 }
		}
	#change country type and civics
		set_country_type = awakened_sleeper
		change_government = {
			authority = auth_hive_mind
			civics = { 
				civic = civic_awoken_hive
				civic = civic_dilligent_drones 
			} 
		}
	#add lost resources
		add_resource = { minerals = 50000 }
		add_resource = { energy = 50000 }
		add_resource = { food = 10000 }
		add_resource = { alloys = 3000 }
		add_resource = { influence = 1000 }
	#reset citzenship
		country_event = { id = sleeper_awakes.12 }
	#spawn some additional fleets
		capital_scope = {	
			sleeper_spawn_construction_ship_full = yes
			sleeper_spawn_construction_ship_full = yes
			spawn_sleeper_colossus = yes
			spawn_sleeper_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					AND = {
						is_country_type = default
						fleet_power > 200000
					}
				}
			}
			capital_scope = {	
				spawn_sleeper_fleet = yes
			}
		}
	#Establish communications with everyone
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { has_communications = root }
			}
			establish_communications_no_message = root
			root = { save_event_target_as = contact_empire }
			country_event = { id = action.1 }
		}
	#trigger the event that makes the sleeper demand other countries to become subjects
		country_event = { id = sleeper_the_awoken.10 days = 100 }
	#trigger the event that makes the sleeper demand pops from its subjects
		country_event = { id = sleeper_the_awoken.14 days = 365 }
	#start "decadance" event in twenty years
		country_event = { id = sleeper_the_awoken.15 days = 7200 }
	#add negative opinion of everybody who owns a former drone planet
		random_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_1
			}
			owner = {
				save_event_target_as = drone_planet_1_owner
				set_country_flag = opinion_checked
			}
		}
		add_opinion_modifier = {
			modifier = opinion_owns_drone_world 
			who = event_target:drone_planet_1_owner
		}
		random_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_2
			}
			owner = {
				save_event_target_as = drone_planet_2_owner
			}
		}
		if = {
			limit = {
				event_target:drone_planet_2_owner = {
					NOT = {
						has_country_flag = opinion_checked
					}
				}
			}
			event_target:drone_planet_2_owner = {
				set_country_flag = opinion_checked
			}
			add_opinion_modifier = { 
				modifier = opinion_owns_drone_world 
				who = event_target:drone_planet_2_owner
			}
		}
		random_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_3
			}
			owner = {
				save_event_target_as = drone_planet_3_owner
			}
		}
		if = {
			limit = {
				event_target:drone_planet_3_owner = {
					NOT = {
						has_country_flag = opinion_checked
					}
				}
			}
			event_target:drone_planet_3_owner = {
				set_country_flag = opinion_checked
			}
			add_opinion_modifier = { 
				modifier = opinion_owns_drone_world 
				who = event_target:drone_planet_3_owner
			}
		}
		random_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_4
			}
			owner = {
				save_event_target_as = drone_planet_4_owner
			}
		}
		if = {
			limit = {
				event_target:drone_planet_4_owner = {
					NOT = {
						has_country_flag = opinion_checked
					}
				}
			}
			event_target:drone_planet_4_owner = {
				set_country_flag = opinion_checked
			}
			add_opinion_modifier = { 
				modifier = opinion_owns_drone_world 
				who = event_target:drone_planet_4_owner
			}
		}
	#TN-3's fate
		if = {
			limit = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
			country_event = { id = sleeper_tony.01 days = 100 }
		}
	}
}

#diplo for normal awakening (not war in heaven)
country_event = {
	id = sleeper_the_awoken.07
	title = sleeper_the_awoken.07.title
	desc = sleeper_the_awoken.07.desc
	picture = GFX_evt_fallen_empire
	show_sound = event_alien_signal
	location = from

	is_triggered_only = yes

	option = {
		name = sleeper_the_awoken.07.a
	}
	option = {
		name = sleeper_the_awoken.07.b
	}
}

#hivemind demands another empire to become its feeder vassal. Since there seems to be no way of creating new diplo actions this workaround is needed.
#trigger event: chooses a country to demand (neighbors first, then random), triggered on the sleeper
#if the sleeper declares against an FE, it has a chance to become a guardian of the galaxy (only if its a valid one for that and not an AI). sould also work with zenith and twinks
country_event = {
	id = sleeper_the_awoken.10
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = sleeper_the_awoken.10 days = 400 }
		if = {
			limit = {
				any_neighbor_country = {
					AND = {
						exists = this
						OR = {
							is_country_type = default
							is_country_type = awakened_fallen_empire
							is_country_type = fallen_empire
							is_country_type = lost_empire
							is_country_type = ascended_empire
							is_country_type = eternal_empire
						}
						is_subject = no
						is_at_war = no
					}
				}
			}
			random_neighbor_country = {
				limit = {
					is_subject = no
					is_at_war = no
					OR = {
						is_country_type = default
						is_country_type = awakened_fallen_empire
						is_country_type = fallen_empire
						is_country_type = lost_empire
						is_country_type = ascended_empire
						is_country_type = eternal_empire
					}
				}
				country_event = { id = sleeper_the_awoken.11 days = 1 }
			}
		}
		else_if = {
			limit = {
				any_country = {
					AND = {
						exists = this
						OR = {
							is_country_type = default
							is_country_type = awakened_fallen_empire
							is_country_type = fallen_empire
							is_country_type = lost_empire
							is_country_type = ascended_empire
							is_country_type = eternal_empire
						}
						is_subject = no
					}
				}
			}
			random_country = {
				limit = {
					OR = {
						is_country_type = default
						is_country_type = awakened_fallen_empire
						is_country_type = fallen_empire
						is_country_type = lost_empire
						is_country_type = ascended_empire
						is_country_type = eternal_empire
					}
					is_subject = no
				}
				country_event = { id = sleeper_the_awoken.11 days = 1 }
			}
		}
		else = {
		}
	}
}

country_event = {
	id = sleeper_the_awoken.11
	title = sleeper_the_awoken.11.title
	desc = {
		text = sleeper_the_awoken.11.desc.norm
		trigger = {
			NOT = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
	}
	desc = {
		text = sleeper_the_awoken.11.desc.gest
		trigger = {
			has_ethic = ethic_gestalt_consciousness
		}
	}
	diplomatic = yes
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = event_target:contact_empire 
	}
	
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				is_sleeper = yes
			}
			save_event_target_as = contact_empire
		}
		save_event_target_as = submitter
	}
	
#submit...
	option = {
		name = sleeper_the_awoken.11.a
		custom_tooltip = sleeper_the_awoken.11.a.tooltip
		trigger = {
			NOR = {
				has_ethic = ethic_gestalt_consciousness
				is_country_type = lost_empire
				is_country_type = ascended_empire
				is_country_type = eternal_empire
				is_country_type = awakened_fallen_empire
				is_country_type = fallen_empire
			}
		}
		hidden_effect = {
			set_subject_of = {
				who = event_target:contact_empire 
				subject_type = feeder_vassal
			}
			every_subject = {
				set_subject_of = {
					who = event_target:contact_empire 
					subject_type = feeder_vassal
				}
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_at_war = yes
			}
			modifier = {
				factor = 0
				OR = {
					has_ethic = ethic_gestalt_consciousness
					has_valid_civic = civic_fanatic_purifiers
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
			}
			modifier = {
				factor = 0.8
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
			modifier = {
				factor = 4
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value < inferior
				}
			}
			modifier = {
				factor = 3
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value = inferior
				}
			}
			modifier = {
				factor = 0.5
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value = equivalent
				}
			}
			modifier = {
				factor = 0
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value > equivalent
				}
			}
		}
	}
	
#...or fight
	option = {
		name = sleeper_the_awoken.11.b
		custom_tooltip = sleeper_the_awoken.11.b.tooltip
		trigger = {
			NOR = {
				has_ethic = ethic_gestalt_consciousness
				has_valid_civic = civic_fanatic_purifiers
				is_country_type = lost_empire
				is_country_type = ascended_empire
				is_country_type = eternal_empire
				is_country_type = awakened_fallen_empire
				is_country_type = fallen_empire
			}
		}
		hidden_effect = {
			event_target:contact_empire = {
				add_opinion_modifier = {
					modifier = opinion_reyected_feeder_vassal 
					who = event_target:submitter
				}
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				OR = {
					has_ethic = ethic_gestalt_consciousness
					has_valid_civic = civic_fanatic_purifiers
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
			}
			modifier = {
				factor = 1.2
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
			modifier = {
				factor = 2
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value = equivalent
				}
			}
			modifier = {
				factor = 2
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value > equivalent
				}
			}
		}
	}
#...or just die, because you are also an gestalt empire
	option = {
		name = sleeper_the_awoken.11.c
		custom_tooltip = sleeper_the_awoken.11.c.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_gestalt_consciousness
				has_valid_civic = civic_fanatic_purifiers
			}
		}
		hidden_effect = {
			event_target:contact_empire = {
				add_opinion_modifier = {
					modifier = opinion_gestalt_threat 
					who = event_target:submitter
				}
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = {
					has_ethic = ethic_gestalt_consciousness
					has_valid_civic = civic_fanatic_purifiers
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
			}
		}
	}
#...or awaken yourself and kill it
	option = {
		name = sleeper_the_awoken.11.d
		custom_tooltip = sleeper_the_awoken.11.c.tooltip
		trigger = {
			OR = {
				is_country_type = lost_empire
				is_country_type = ascended_empire
				is_country_type = eternal_empire
				is_country_type = awakened_fallen_empire
				is_country_type = fallen_empire
			}
		}
		hidden_effect = {
			event_target:contact_empire = {
				add_opinion_modifier = {
					modifier = opinion_massive_threat 
					who = event_target:submitter
				}
			}
			if = {
				limit = {
					is_country_type = fallen_empire
					OR = {
						has_ethic = ethic_fanatic_materialist
						has_ethic = ethic_fanatic_xenophile
					}
					fleet_power > 40000
				}
				set_country_flag = guardians_of_the_galaxy
				set_timed_country_flag = { flag = timed_guardians_of_the_galaxy days = 1825 }
				set_timed_country_flag = { flag = timed_guardians_of_the_galaxy_2 days = 3650 }
				country_event = { id = fallen_empires_awakening.4 }
			}
		}
		declare_war = {
			target = event_target:contact_empire
			attacker_war_goal = wg_end_threat_sleeper
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = {
					is_country_type = lost_empire
					is_country_type = ascended_empire
					is_country_type = eternal_empire
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
			}
		}
	}
	
	after = {
		country_event = { id = sleeper_the_awoken.12 }
	}
}

#answer
country_event = {
	id = sleeper_the_awoken.12
	title = sleeper_the_awoken.11.title
	desc = {
		text = sleeper_the_awoken.12.desc.free
		trigger = {
			is_subject = no
		}
	}
	desc = {
		text = sleeper_the_awoken.12.desc.sub
		trigger = {
			is_subject = yes
		}
	}
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:contact_empire 
		room = event_target:contact_empire 
	}
	
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				is_sleeper = yes
			}
			save_event_target_as = contact_empire
		}
	}
	
	option = {
		name = sleeper_the_awoken.12.a
		trigger = {
			is_subject = no
		}
	}

	option = {
		name = sleeper_the_awoken.12.b
		trigger = {
			is_subject = yes
		}
	}
}

#the hive collects some pops 
country_event = {
	id = sleeper_the_awoken.13
	title = sleeper_the_awoken.13.title
	desc = sleeper_the_awoken.13.desc
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:contact_empire 
		room = event_target:contact_empire 
	}
	
	is_triggered_only = yes

	immediate = {
		save_event_target_as = cattle_provider
	}

	option = {
		name = sleeper_the_awoken.13.a
		custom_tooltip = sleeper_the_awoken.13.a.tooltip
		hidden_effect = {
			while = {
				count = food_collected
				random_owned_pop = {
					limit = {
						species = {
							NOR = {
								has_trait = trait_mechanical
								has_trait = trait_machine_unit
								is_species_class = ROBOT
								has_trait = trait_hive_mind
							}
						}
					}
					save_event_target_as = new_food
				}
				event_target:contact_empire = {
					event_target:food_shipping_planet = {
						resettle_pop = {
							pop = event_target:new_food
							planet = event_target:food_shipping_planet
						}
					}
				}
			}
		}
		ai_chance = {
			factor = 90
			modifier = {
				factor = 0.5
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value = equivalent
				}
			}
			modifier = {
				factor = 0.5
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value > equivalent
				}
			}
		}
	}
	
	option = {
		name = sleeper_the_awoken.13.b
		custom_tooltip = sleeper_the_awoken.13.b.tooltip
		hidden_effect = {
			declare_war = {
				target = event_target:contact_empire
				attacker_war_goal = wg_independence
			}
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 10
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value = equivalent
				}
			}
			modifier = {
				factor = 10
				relative_power = { 
					who = event_target:contact_empire  
					category = fleet
					value > equivalent
				}
			}
		}
	}
}

#trigger event: takes 1-5 pops from all its subjects and puts them on the farms every year. Also resets all citizenships because the AI is dumb and keeps making other hiveminded species livestock. Triggered on the sleeper.
country_event = {
	id = sleeper_the_awoken.14
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		save_event_target_as = contact_empire
	#citizenship reset and triggering the event again in one year if the sleeper still holds the farms
		country_event = { id = sleeper_awakes.12 days = 2 }
		if = {
			limit = {
				any_owned_planet = {
					has_planet_flag = sleeper_farms
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = sleeper_farms
				}
				save_event_target_as = food_shipping_planet
			}
			country_event = { id = sleeper_the_awoken.14 days = 360 }
			every_country = {
				limit = {
					is_subject_type = feeder_vassal
					is_at_war = no
					num_pops > 30
				}
				random_list = {
					10 = {
						set_variable = { which = food_collected value = 1 }
						modifier = {
							factor = 5
							num_owned_planets < 4
						}
						modifier = {
							factor = 3
							AND = {
								num_owned_planets > 3
								num_owned_planets < 7
							}
						}
					}
					10 = {
						set_variable = { which = food_collected value = 2 }
						modifier = {
							factor = 5
							AND = {
								num_owned_planets > 3
								num_owned_planets < 7
							}
						}
						modifier = {
							factor = 3
							AND = {
								num_owned_planets > 6
								num_owned_planets < 10
							}
						}
					}
					10 = {
						set_variable = { which = food_collected value = 3 }
						modifier = {
							factor = 5
							AND = {
								num_owned_planets > 6
								num_owned_planets < 10
							}
						}
						modifier = {
							factor = 3
							AND = {
								num_owned_planets > 9
								num_owned_planets < 12
							}
						}
					}
					10 = {
						set_variable = { which = food_collected value = 4 }
						modifier = {
							factor = 5
							AND = {
								num_owned_planets > 9
								num_owned_planets < 12
							}
						}
						modifier = {
							factor = 3
							AND = {
								num_owned_planets > 12
								num_owned_planets < 16
							}
						}
					}
					10 = {
						set_variable = { which = food_collected value = 5 }
						modifier = {
							factor = 5
							num_owned_planets > 15
						}
					}
				}
				country_event = { id = sleeper_the_awoken.13 days = 5 }
			}
		}
	}
}


#the sleeper has something similar to decadence. Instead of lowering resources, it will add an deviancy multiplier and wandering drone jobs
#represented by a variable, which increases randomly every three months twenty years after its awakening. The chances are modified by its size and number of subjects
#deviancy modifier gets increased every 25 points
#takes into account:
#-do AEs exist?
#-how many subjects does the sleeper have?
#-how many planets does it own? (increases debuff from seven planets upwards)
#-if it has less than 600 hive pops, chance for a slower increase is higher
country_event = {
	id = sleeper_the_awoken.15
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_sleeper = yes
	}
	
	immediate = {
		random_list = {
			25 = {
				change_variable = { which = sleeper_instability value = 1 }
				modifier = {
					factor = 4.0
					count_owned_pops = { 
						limit = { has_trait = trait_hive_mind } 
						count < 600
					}
				}
			}
			30 = {
				change_variable = { which = sleeper_instability value = 2 }
				modifier = {
					factor = 1.5
					any_country = {
						is_country_type = awakened_fallen_empire
					}
				}
				modifier = {
					factor = 1.5
					num_owned_planets = 8
				}
				modifier = {
					factor = 2.0
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count > 0
					}
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count < 3
					}
				}
			}
			25 = {
				change_variable = { which = sleeper_instability value = 3 }
				
				modifier = {
					factor = 1.5
					any_country = {
						is_country_type = awakened_fallen_empire
					}
				}
				modifier = {
					factor = 1.5
					num_owned_planets = 9
				}
				modifier = {
					factor = 2.0
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count > 2
					}
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count < 5
					}
				}
			}
			15 = {
				change_variable = { which = sleeper_instability value = 4 }
				modifier = {
					factor = 1.5
					any_country = {
						is_country_type = awakened_fallen_empire
					}
				}
				modifier = {
					factor = 1.5
					num_owned_planets > 9
				}
				modifier = {
					factor = 3.0
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count > 4
					}
				}
			}
		}
	#add debuff modifier
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 1 }
				check_variable = { which = sleeper_instability value < 11 }
			}
			add_modifier = { modifier = sleeper_deviancy_debuff_1 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 10 }
				check_variable = { which = sleeper_instability value < 21 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			add_modifier = { modifier = sleeper_deviancy_debuff_2 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 20 }
				check_variable = { which = sleeper_instability value < 31 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			add_modifier = { modifier = sleeper_deviancy_debuff_3 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 30 }
				check_variable = { which = sleeper_instability value < 41 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			add_modifier = { modifier = sleeper_deviancy_debuff_4 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 40 }
				check_variable = { which = sleeper_instability value < 51 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			add_modifier = { modifier = sleeper_deviancy_debuff_5 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 50 }
				check_variable = { which = sleeper_instability value < 61 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			add_modifier = { modifier = sleeper_deviancy_debuff_6 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 60 }
				check_variable = { which = sleeper_instability value < 71 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			remove_modifier = sleeper_deviancy_debuff_6
			add_modifier = { modifier = sleeper_deviancy_debuff_7 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 70 }
				check_variable = { which = sleeper_instability value < 81 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			remove_modifier = sleeper_deviancy_debuff_6
			remove_modifier = sleeper_deviancy_debuff_7
			add_modifier = { modifier = sleeper_deviancy_debuff_8 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 80 }
				check_variable = { which = sleeper_instability value < 91 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			remove_modifier = sleeper_deviancy_debuff_6
			remove_modifier = sleeper_deviancy_debuff_7
			remove_modifier = sleeper_deviancy_debuff_8
			add_modifier = { modifier = sleeper_deviancy_debuff_9 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 90 }
				check_variable = { which = sleeper_instability value < 101 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			remove_modifier = sleeper_deviancy_debuff_6
			remove_modifier = sleeper_deviancy_debuff_7
			remove_modifier = sleeper_deviancy_debuff_8
			remove_modifier = sleeper_deviancy_debuff_8
			add_modifier = { modifier = sleeper_deviancy_debuff_10 days = -1 }
		}
	#repeat
		if = {
			limit = {
				check_variable = { which = sleeper_instability value < 101 }
			}
			country_event = { id = sleeper.42 days = 90 }
		}
	}
}

#sabotage event. Has a chance every year to trigger on the economacly strongest vassal of the sleeper, but only if it has at least three which are not at war with it.
#there are three options. One standard one, one for gene ascension, one for psi. They all weaken the sleeper significantly, so only one sabotage is possible. They are triggered through decisions, so the player can time it correctly.
#country_event = {
#	id = sleeper_the_awoken.15
#	hide_window = yes
#	
#	is_triggered_only = yes
#	
#	immediate = {
#		if = {
#			limit = {
#				count_country = {
#					limit = { 
#						is_subject_type = feeder_vassal
#						is_at_war = no
#					}
#					count > 3
#				}
#			}
#			
#		}
#	}
#}





