####################
# Abyssal Secrets
# Solar Storm
####################

# NOTES:
# Forming pacts and federation mechanics with genocidal empires
# Pacts and subjects
# Pact players and existing federations
# Loc customisation hives/machine etc.
# AI weights on decisions
# Events if someone attempts to leave the federation.
# Behaviour when someone chooses not to join the pact federation.
# What happens you are placed into the Great Task on a side with an existing enemy in another war?

namespace = SSAB

#When triggered, all playable empires notice unusual events.
country_event = {
	id = SSAB.1
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		every_playable_country = {
			
			# Player experiences strange events of terrorism and madness...
			
			if = {
				limit = {
					AND = {
						is_machine_empire = no
						is_hive_empire = no
					}
				}
				random_owned_planet = {
					limit = { num_pops > 20 }
					planet_event = { id = SSAB.10 }
				}
			}
			else_if = {
				limit = {
					AND = {
						is_machine_empire = no 
						is_hive_empire = yes
					}
				}
				random_owned_planet = {
					limit = { num_pops > 20 }
					planet_event = { id = SSAB.20 }
				}
			}
			#else_if = {
			#	limit = {
			#		AND = {
			#			is_machine_empire = yes
			#			is_hive_empire = no
			#		}
			#	}
			#	country_event = { id = SSAB.30 }
			#}
			country_event = { id = SSAB.50 days = 150 }
		}
		random_country = {
			limit = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { has_country_flag = fallen_empire_machine }
				OR = {
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_fanatic_materialist
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_fanatic_xenophile
				}
			}
			save_global_event_target_as = SSAB_fe_country
		}
	}
}

# An ordinary empire is the target of terrorist bombings
planet_event = {
	id = SSAB.10
	title = SSAB.10.title
	desc = SSAB.10.desc
	picture = GFX_evt_night_raid
	show_sound = event_planetary_riot
	location = root

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.10.a
		ruin_building = random_no_capital
		remove_last_built_district = yes
		random_owned_pop = { kill_pop = yes }
		hidden_effect = { owner = { country_event = { id = SSAB.11 days = 30 } } }
	}
}

# The assailant was captured
country_event = {
	id = SSAB.11
	title = SSAB.11.title
	desc = SSAB.11.desc
	picture = GFX_evt_dark_alley
	show_sound = event_default
	location = root

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.11.a
	}
}

# An ordinary empire is the target of terrorist bombings
planet_event = {
	id = SSAB.20
	title = SSAB.20.title
	desc = SSAB.20.desc
	picture = GFX_evt_night_raid
	show_sound = event_planetary_riot
	location = root

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.20.a
		ruin_building = random_no_capital
		remove_last_built_district = yes
		random_owned_pop = { kill_pop = yes }
		hidden_effect = { owner = { country_event = { id = SSAB.11 days = 30 } } }
	}
}

# The assailant was captured
country_event = {
	id = SSAB.21
	title = SSAB.21.title
	desc = SSAB.21.desc
	picture = GFX_evt_dark_alley
	show_sound = event_default
	location = root

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.21.a
	}
}

# The clearer view begins.
country_event = {
	id = SSAB.50
	title = SSAB.50.title
	desc = SSAB.50.desc
	picture = GFX_evt_physics_research
	show_sound = event_mystic_reveal
	location = root

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.50.a
		start_situation = { type = SSAB_the_intro target = this } 
	}
}

# Intro situation stage 1 events:
#country_event = {
#	id = SSAB.100
#	hide_window = yes
#
#	is_triggered_only = yes
#	
#	immediate = {
#		random_list = {
#			10 = {
#				country_event = { id = SSAB.101 days = 20 random = 60 }
#			}
#			10 = {
#				country_event = { id = SSAB.102 days = 20 random = 60 }
#			}
#			10 = {
#				country_event = { id = SSAB.103 days = 20 random = 60 }
#			}
#		}
#	}
#}

#Physicist goes mad, is deposed.
situation_event = {
	id = SSAB.101
	title = SSAB.101.title
	picture = GFX_evt_physics_research
	show_sound = event_ship_bridge
	situation = this
	
	desc = {
		text = SSAB.101.desc_01
		trigger = {
			owner = {
				AND = {
					is_machine_empire = no
					is_hive_empire = no
				}
			}
		}
	}
	
	desc = {
		text = SSAB.101.desc_02
		trigger = {
			owner = {
				AND = {
					is_machine_empire = yes
					is_hive_empire = yes
				}
			}
		}
	}

	is_triggered_only = yes
	
	immediate = {
		owner = {
			random_owned_leader = {
				limit = { 
					leader_class = scientist
					is_researching_area = physics
				}
				save_event_target_as = SSAB_mad_physicist
				kill_leader = {
					show_notification = no
				}
			}
		}
	}
	
	option = {
		name = SSAB.101.a
	}
}


#Planetary riot!
situation_event = {
	id = SSAB.102
	title = SSAB.102.title
	picture = GFX_evt_night_raid
	show_sound = event_planetary_riot
	situation = this
	
	desc = {
		text = SSAB.102.desc_01
		trigger = {
			owner = {
				AND = {
					is_machine_empire = no
					is_hive_empire = no
				}
			}
		}
	}
	
	desc = {
		text = SSAB.102.desc_02
		trigger = {
			owner = {
				OR = {
					is_machine_empire = yes
					is_hive_empire = yes
				}
			}
		}
	}

	is_triggered_only = yes
	
	immediate = {
		owner.capital_scope = {
			add_modifier = {
				modifier = SSAB_basic_riot 
				days = 900
			}
		}
	}
	
	option = {
		name = SSAB.102.a
	}
}

#A Science ship is lost.
situation_event = {
	id = SSAB.103
	title = SSAB.103.title
	picture = GFX_evt_exploding_ship
	show_sound = event_super_explosion
	situation = this
	
	desc = {
		text = SSAB.103.desc_01
		trigger = {
			owner = {
				AND = {
					is_machine_empire = no
					is_hive_empire = no
				}
			}
		}
	}
	
	desc = {
		text = SSAB.103.desc_02
		trigger = {
			owner = {
				OR = {
					is_machine_empire = yes
					is_hive_empire = yes
				}
			}
		}
	}

	is_triggered_only = yes
	
	immediate = {
		owner = {
			random_owned_ship = {
				limit = { is_ship_class = shipclass_science_ship }
				save_event_target_as = SSAB_sci_ship
				leader = {
					kill_leader = {
						show_notification = yes
					}
				}
				destroy_ship = this
			}
		}
	}
	
	option = {
		name = SSAB.103.a
	}
}

#A Star emits a strange signal...
situation_event = {
	id = SSAB.200
	title = SSAB.200.title
	desc = SSAB.200.desc
	picture = GFX_evt_star_pulsar
	show_sound = event_mystic_reveal
	situation = this
	location = event_target:SSAB_pulsating_star

	is_triggered_only = yes
	
	immediate = {
		owner = {
			random_planet_within_border = {
				limit = { is_star = yes }
				save_event_target_as = SSAB_pulsating_star
			}
		}
	}
	
	option = {
		name = SSAB.200.a
		hidden_effect = {
			owner = { country_event = { id = SSAB.201 days = 40 random = 20 } }
		}
	}
	
	option = {
		name = SSAB.200.b
		hidden_effect = {
			owner = { country_event = { id = SSAB.202 days = 40 } }
		}
	}
}

#The star talks back; through yourself...
country_event = {
	id = SSAB.201
	title = SSAB.201.title
	desc = SSAB.201.desc
	diplomatic = yes
	force_open = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		portrait = root.ruler
		room = ethic_spaceship_room
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.201.a
		response_text = SSAB.201.a.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.201.b
		response_text = SSAB.201.b.response
		hidden_effect = {
			owner = { country_event = { id = SSAB.202 days = 20 } }
		}
	}
}

#The stellar signal disappears...
country_event = {
	id = SSAB.202
	title = SSAB.202.title
	desc = SSAB.202.desc
	picture = GFX_evt_star_pulsar
	show_sound = event_ship_thrusters
	location = event_target:SSAB_pulsating_star

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.202.a
	}
}

#The Fallen Empire gets in touch.
country_event = {
	id = SSAB.300
	title = TRANSMISSION
	diplomatic = yes
	force_open = yes
	
	desc = {
		trigger = {
			hidden:owner = {
				event_target:SSAB_fe_country = {
					switch = {
						trigger = has_ethic
						ethic_fanatic_spiritualist = { text = SSAB.300.desc_01 }
						ethic_fanatic_materialist = { text = SSAB.300.desc_02 }
						ethic_fanatic_xenophobe = { text = SSAB.300.desc_03 }
						ethic_fanatic_xenophile = { text = SSAB.300.desc_04 }
						default = { text = SSAB.300.desc_04 }
					}
				}
			}
		}
	}
	
	trigger = {
		exists = event_target:SSAB_fe_country 
		event_target:SSAB_fe_country = {
			has_communications = prev
		}
	}
	
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:ss_abyss_fallen_empire_comm
		planet_background = event_target:ss_abyss_fallen_empire_comm
		graphical_culture = event_target:ss_abyss_fallen_empire_comm
		city_level = event_target:ss_abyss_fallen_empire_comm
		room = event_target:ss_abyss_fallen_empire_comm.ruler
	}

	option = {
		name = "SSAB.300.a"
	}
}

##############
# The actual Crisis Begins
##############

country_event = {
	id = SSAB.400
	hide_window = yes

	is_triggered_only = yes
	
	fire_only_once = yes
	
	immediate = {
	
		### Spawn Crisis Empire
	
		if = {
			limit = { NOT = { exists = event_target:abyssal_host_invader_country } }
			create_species = {
				name = "NAME_abyssal_host"
				class = ABYSSAL_HOST_CLASS
				namelist = abyssal_host_namelist 
				portrait = abyssal_host_portrait
				traits = random
				immortal = yes
			}
			last_created_species = {
				save_global_event_target_as = SSAB_ab_species
			}
			create_country = {
				name = "NAME_abyssal_host"
				type = "SSAB_ab_country_v2"
				name_list = "abyssal_host_namelist"
				species = event_target:abyssal_host_species
				flag = {
					icon= {
						category = "zoological"
						file = "flag_zoological_23.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"red"
						"dark_grey"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				save_global_event_target_as = SSAB_ab_country
				add_threat = { who = this amount = 150 }
			}
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
			establish_communications_no_message = event_target:SSAB_ab_country
			add_opinion_modifier = {
				who = event_target:SSAB_ab_country
				modifier = opinion_swarm
			}
			event_target:SSAB_ab_country = {
				add_opinion_modifier = {
					who = PREV
					modifier = opinion_prey
				}
			}
		}
	
		### Spawn new star systems in square shape around centre of galaxy.
		
		no_scope = {
			spawn_system = {
				min_distance >= 50
				max_distance <= 55
				min_orientation_angle = 40
				max_orientation_angle = 50
				initializer = SSAB_crisis_system
				hyperlane = no
				effect = {
					save_global_event_target_as = SSAB_crisis_system_1
				}
			}
		}
		event_target:SSAB_crisis_system_1 = {
			SSAB_create_random_hyperlane = yes
			SSAB_create_random_hyperlane = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_medium_fleet = yes
			SSAB_spawn_medium_fleet = yes
			SSAB_spawn_large_fleet = yes
		}
		no_scope = {
			spawn_system = {
				min_distance >= 50
				max_distance <= 55
				min_orientation_angle = 130
				max_orientation_angle = 140
				initializer = SSAB_crisis_system
				hyperlane = no
				effect = {
					save_global_event_target_as = SSAB_crisis_system_2
				}
			}
			
		}
		event_target:SSAB_crisis_system_2 = {
			add_hyperlane = {
				from = this
				to = event_target:SSAB_crisis_system_1
			}
			SSAB_create_random_hyperlane = yes
			SSAB_create_random_hyperlane = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_medium_fleet = yes
			SSAB_spawn_medium_fleet = yes
			SSAB_spawn_large_fleet = yes
		}
		no_scope = {
			spawn_system = {
				min_distance >= 50
				max_distance <= 55
				min_orientation_angle = 220
				max_orientation_angle = 230
				initializer = SSAB_crisis_system
				hyperlane = no
				effect = {
					save_global_event_target_as = SSAB_crisis_system_3
				}
			}
		}
		event_target:SSAB_crisis_system_3 = {
			add_hyperlane = {
				from = this
				to = event_target:SSAB_crisis_system_2
			}
			SSAB_create_random_hyperlane = yes
			SSAB_create_random_hyperlane = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_medium_fleet = yes
			SSAB_spawn_medium_fleet = yes
			SSAB_spawn_large_fleet = yes
		}
		no_scope = {
			spawn_system = {
				min_distance >= 50
				max_distance <= 55
				min_orientation_angle = 310
				max_orientation_angle = 320
				initializer = SSAB_crisis_system
				hyperlane = no
				effect = {
					save_global_event_target_as = SSAB_crisis_system_4
				}
			}
		}
		event_target:SSAB_crisis_system_4 = {
			add_hyperlane = {
				from = this
				to = event_target:SSAB_crisis_system_3
			}
			add_hyperlane = {
				from = this
				to = event_target:SSAB_crisis_system_1
			}
			SSAB_create_random_hyperlane = yes
			SSAB_create_random_hyperlane = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_small_fleet = yes
			SSAB_spawn_medium_fleet = yes
			SSAB_spawn_medium_fleet = yes
			SSAB_spawn_large_fleet = yes
		}
	
		### Playable country events
		
		every_playable_country = {
			country_event = { id = SSAB.401 days = 5 } #Extra Systems have appeared!
			#country_event = { id = SSAB.402 days = 25 } #Do you want to join us?
			set_visited = event_target:SSAB_crisis_system_1
			set_visited = event_target:SSAB_crisis_system_2
			set_visited = event_target:SSAB_crisis_system_3
			set_visited = event_target:SSAB_crisis_system_4
		}
		
		### Form the Federation
		
		#country_event = { id = SSAB.405 days = 100 }
	}
}

#The Core opens up!
country_event = {
	id = SSAB.401
	title = SSAB.401.title
	desc = SSAB.401.desc
	picture = GFX_evt_black_hole
	show_sound = event_red_alert

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.401.a
	}
}

#The Ultimatem is offered
country_event = {
	id = SSAB.402
	title = TRANSMISSION
	desc = SSAB.402.desc
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		portrait = abyssal_host_portrait
		room = "abyssal_host_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = abyssal_invasion_ongoing }
	}
	
	option = {
		name = SSAB.402.a
		hidden_effect = { country_event = { id = SSAB.403 } }
	}
	option = {
		name = SSAB.402.b
		response_text = SSAB.402.b.response
	}
	option = {
		name = SSAB.402.c
		response_text = SSAB.402.c.response
		is_dialog_only = yes
	}
	option = {
		name = SSAB.402.d
		response_text = SSAB.402.d.response
		is_dialog_only = yes
	}
}

#Are you sure you want to do this?
country_event = {
	id = SSAB.403
	title = SSAB.403.title
	desc = SSAB.403.desc
	picture = GFX_evt_black_hole
	show_sound = event_default

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.403.a
		hidden_effect = { set_country_flag = SSAB_antagonist }
	}
	
	option = {
		name = SSAB.403.b
	}
}

#Federation Effect; commercial and research pacts deliver bonus resources.
country_event = {
	id = SSAB.410
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		set_variable = { which = SSAB_num_research_pacts value = value:SSAB_num_research_pacts }
		set_variable = { which = SSAB_num_commerical_pacts value = value:SSAB_num_commerical_pacts }
		
		add_modifier = {
			modifier = SSAB_fed_commercial_pacts
			multiplier = SSAB_num_commerical_pacts
			days = 150
		}
		add_modifier = {
			modifier = SSAB_fed_research_pacts
			multiplier = SSAB_num_research_pacts
			days = 150
		}
		
		country_event = { id = SSAB.410 days = 150 }
	}
}

#Federation Effect; special leader traits
country_event = {
	id = SSAB.411
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		AND = {
			has_federation = yes
			federation = {
				has_federation_perk = SSAB_leader_traits
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = governor }
				add_trait = leader_trait_SSAB_fed_governor
				add_trait = leader_trait_SSAB_fed_ruler
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = leader_trait_SSAB_fed_scientist
				add_trait = leader_trait_SSAB_fed_ruler
				break = yes
			}
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_SSAB_fed_admiral
				add_trait = leader_trait_SSAB_fed_ruler
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = leader_trait_SSAB_fed_general
				add_trait = leader_trait_SSAB_fed_ruler
				break = yes
			}
			#if = {
			#	limit = { is_ruler = yes }
			#	add_trait = leader_trait_SSAB_fed_ruler
			#	add_trait = leader_trait_SSAB_fed_ruler
			#}
		}
	}
}

#Forms the Federation
country_event = {
	id = SSAB.420
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		ordered_playable_country = {
			limit = { has_country_flag = SSAB_antagonist }
			position = 0
			order_by = trigger:diplomacy_weight
			country_event = { id = SSAB.423 days = 75 random = 50 }
		}
		every_playable_country = {
			limit = { has_country_flag = SSAB_antagonist }
			country_event = { id = SSAB.421 }
		}
		every_playable_country = {
			limit = { NOT = { has_country_flag = SSAB_antagonist } }
			country_event = { id = SSAB.422 days = 50 }
		}
	}
}

#Pact players are alerted that a federation will form soon.
country_event = {
	id = SSAB.421
	title = SSAB.421.title
	desc = SSAB.421.desc
	picture = GFX_evt_coronation
	show_sound = event_alien_signal

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.421.a
	}
}

#Non-pact players are warned that the pact players are up to something.
country_event = {
	id = SSAB.422
	title = SSAB.422.title
	desc = SSAB.422.desc
	picture = GFX_evt_diplomatic_visit
	show_sound = event_alien_signal

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.422.a
	}
}

#Most powerful pact player is offered the chance to lead the federation
country_event = {
	id = SSAB.423
	title = SSAB.423.title
	desc = SSAB.423.desc
	picture = GFX_evt_diplomatic_visit
	show_sound = event_default

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.423.a
		ai_chance = {
			factor = 95
		}
		hidden_effect = {
			set_country_flag = SSAB_fed_leader
			save_global_event_target_as = SSAB_fed_leader
			if = {
				limit = {
					has_federation = yes
				}
				leave_alliance = { override_requirements = yes }
			}
			every_playable_country = {
				limit = { has_country_flag = SSAB_antagonist }
				country_event = { id = SSAB.424 days = 5 }
			}
		}
	}
	
	option = {
		name = SSAB.423.b
		ai_chance = {
			factor = 5
		}
		hidden_effect = {
			set_country_flag = SSAB_fed_leadership_declined
			ordered_playable_country = {
				limit = { 
					AND = {
						has_country_flag = SSAB_antagonist 
						NOT = { has_country_flag = SSAB_fed_leadership_declined }
					}
				}
				position = 0
				order_by = trigger:diplomacy_weight
				country_event = { id = SSAB.423 }
			}
		}
	}
}

#Each non-leader pact player is given the chance to join the federation.
country_event = {
	id = SSAB.424
	title = SSAB.424.title
	desc = SSAB.424.desc
	picture = GFX_evt_diplomatic_visit
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	immediate = {
		every_playable_country = {
			limit = {
				AND = {
					has_country_flag = SSAB_antagonist
					NOT = { is_same_value = root }
				}
			}
			add_opinion_modifier = {
				modifier = opinion_abyssal_allies 
				who = root
			}
		}
	}
	
	option = {
		name = SSAB.424.a
		hidden_effect = {
			if = {
				limit = {
					event_target:SSAB_fed_leader = {
						has_federation = no
					}
				}
				join_alliance = {
					who = event_target:SSAB_fed_leader
					name = NAME_SSAB_fedname
					override_requirements = yes
				}
				set_federation_leader = event_target:SSAB_fed_leader
				federation = {
					add_cohesion = 150
					set_federation_type = SSAB_event_father_federation
					save_global_event_target_as = SSAB_federation
				}
			}
			else = {
				join_alliance = {
					who = event_target:SSAB_fed_leader
					override_requirements = yes
				}
			}
		}
	}
	
	option = {
		name = SSAB.424.b
	}
}

#The Father introduces himself and congratulates the fledging federation

country_event = {
	id = SSAB.430
	title = "TRANSMISSION"
	desc = "SSAB.430.desc"
	custom_gui = "ss_ab_diplo_window"

	diplomatic = yes

	picture_event_data = {
		portrait = abyssal_host_father_portrait
		room = abyssal_host_room
	}

	is_triggered_only = yes
	
	option = {
		name = SSAB.430.a
		response_text = SSAB.430.a.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.430.b
		response_text = SSAB.430.b.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.430.c
		response_text = SSAB.430.c.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.430.d
	}
}

# A war will begin shortly!
country_event = {
	id = SSAB.431
	title = SSAB.431.title
	desc = SSAB.431.desc
	picture = GFX_evt_unknown_ships
	show_sound = event_sensor_ping

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.431.a
	}
}

country_event = {
	id = SSAB.432
	title = "TRANSMISSION"
	desc = "SSAB.432.desc"
	custom_gui = "ss_ab_diplo_window"

	diplomatic = yes

	picture_event_data = {
		portrait = abyssal_host_portrait
		room = abyssal_host_room
	}

	is_triggered_only = yes
	
	option = {
		name = SSAB.432.a
	}
}

##################
### WAR BEGINS ###
##################
# Background event that declares all wars.
country_event = {
	id = SSAB.450
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		ordered_playable_country  = {
			limit = { AND = { NOT = { has_country_flag = SSAB_antagonist } is_homicidal = no } }
			position = 0
			order_by = trigger:diplomacy_weight
			event_target:SSAB_ab_country = {
				declare_war = {
					target = prev
					attacker_war_goal = "wg_SSAB_remake"
					name = SSAB_war_name
				}
				every_war = {
					set_war_flag = SSAB_war
				}
			}
			save_event_target_as = SSAB_war_leader
			set_country_flag = SSAB_protagonist
			country_event = { id = SSAB.451 }
		}
		
		every_playable_country = {
			limit = {
				OR = {
					is_homicidal = yes
					has_been_declared_crisis = yes
				}
			}
			event_target:SSAB_ab_country = {
				declare_war = {
					target = prev
					attacker_war_goal = "wg_SSAB_remake"
					name = SSAB_war_name
				}
			}
			country_event = { id = SSAB.451 }
			start_situation = { type = SSAB_the_war target = this }
		}
		
		event_target:global_event_country = {
			set_variable = { which = num_protagonist_systems_owned value = value:SSAB_num_protagonist_system }
			set_variable = { which = num_antagonist_systems_owned value = value:SSAB_num_antagonist_system }
		}
		
		every_playable_country = {
			limit = {
				has_country_flag = SSAB_antagonist
			}
			join_war = event_target:SSAB_ab_country
			start_situation = { type = SSAB_the_war target = this }
			every_system_within_border = {
				set_star_flag = SSAB_antagonist_system
			}
		}
		
		every_playable_country = {
			limit = {
				AND = {
					NOT = { has_country_flag = SSAB_antagonist }
					is_homicidal = no
					has_been_declared_crisis = no
				}
			}
			set_country_flag = SSAB_protagonist
			join_war = event_target:SSAB_war_leader
			country_event = { id = SSAB.451 }
			start_situation = { type = SSAB_the_war target = this }
			every_system_within_border = {
				set_star_flag = SSAB_protagonist_system
			}
		}
		
		event_target:SSAB_ab_country = {
			#set_variable = { which = SSAB_num_colonised_planets value = 0 }
			#every_playable_country = {
			##	event_target:SSAB_ab_country = {
			#		change_variable = { which = SSAB_num_colonised_planets value = prev.trigger:count_owned_planet }
			#	}
			#}
			set_variable = { which = SSAB_num_protagonist_systems value = 0 }
			set_variable = { which = SSAB_num_antagonist_systems value = 0 }
			every_system = {
				limit = { has_owner = yes }
				if = {
					limit = {
						owner = {
							AND = {
								is_country_type = default
								NOT = { has_country_flag = SSAB_antagonist }
							}
						}
					}
					event_target:SSAB_ab_country = {
						change_variable = { which = prev.SSAB_num_protagonist_systems value = 1 }
					}
				}
				else_if = {
					limit = {
						owner = {
							AND = {
								is_country_type = default
								has_country_flag = SSAB_antagonist
							}
						}
					}
					event_target:SSAB_ab_country = {
						change_variable = { which = prev.SSAB_num_antagonist_systems value = 1 }
					}
				}
			}
		}
		
		# Start Assault Cycle
		set_variable = { which = SSAB_AB_scaling_stength_mult value = 0 }
		country_event = { id = SSAB.460 days = 50 }
	}
}

# Communication with the Abyssal Host; hah, we declare war!
country_event = {
	id = SSAB.451
	title = TRANSMISSION
	desc = SSAB.451.desc
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		portrait = abyssal_host_portrait
		room = "abyssal_host_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = abyssal_invasion_ongoing }
	}
	
	option = {
		name = SSAB.451.a
	}
}

# Explanation for the war.
country_event = {
	id = SSAB.452
	title = SSAB.452.title
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	desc = {
		trigger = {
			NOT = { has_country_flag = SSAB_antagonist }
			is_homicidal = no
			has_been_declared_crisis = no
		}
		text = SSAB.452.desc_01
	}
	
	desc = {
		trigger = {
			OR = {
				is_homicidal = yes
				has_been_declared_crisis = yes
			}
		}
		text = SSAB.452.desc_02
	}
	
	desc = {
		trigger = {
			has_country_flag = SSAB_antagonist
		}
		text = SSAB.452.desc_03
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.452.a
	}
}

# Counting for war situation
country_event = {
	id = SSAB.455
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		exists = FromFrom
		has_global_flag = abyssal_invasion_ongoing
		OR = {
			is_country_type = default
			is_country_type = awakened_fallen_empire
		}
		is_at_war_with = FromFrom
		FROM = {
			OR = {
				has_star_flag = SSAB_antagonist_system
				has_star_flag = SSAB_protagonist_system
			}
		}
	}
	
	immediate = {
		if = {
			limit = { FROM = { has_star_flag = SSAB_protagonist_system } }
			SSAB_effect_take_protagonist = yes
		}
		else_if = {
			limit = { FROM = { has_star_flag = SSAB_antagonist_system } }
			SSAB_effect_take_antagonist = yes
		}
	}
}

# Re-inforcement cycle
country_event = {
	id = SSAB.460
	hide_window = yes
	
	trigger = {
		has_global_flag = abyssal_invasion_ongoing
		exists = event_target:SSAB_ab_country
	}

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				event_target:SSAB_ab_country = {
					OR = {
						count_owned_fleet = {
							limit = {
								has_fleet_flag = SSAB_assault_fleet
							}
							count < value:SSAB_AB_wave_reinforcement
						}
						check_variable = { which = SSAB_AB_skipped_reinforcements value > 10 }
					}
				}
			}
			every_playable_country = {
				country_event = { id = SSAB.461 }
			}
			SSAB_AB_spawn_attack_wave = yes
			set_variable = { which = SSAB_AB_skipped_reinforcements value = 0 }
			change_variable = { which = SSAB_AB_scaling_stength_mult value = 1 }
			event_target:SSAB_ab_country = {
				every_owned_fleet = {
					limit = { NOT = { has_modifier = SSAB_ab_time_strength_mult } }
					add_modifier = {
						modifier = SSAB_ab_time_strength_mult
						days = -1
						multiplier = prevprev.SSAB_AB_scaling_stength_mult
					}
				}
			}
		}
		else = {
			change_variable = { which = SSAB_AB_skipped_reinforcements value = 1 }
		}
		country_event = { id = SSAB.460 days = 105 }
	}
}

# Warning: An attack is incoming!
country_event = {
	id = SSAB.461
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		create_message = { 
			type = MESSAGE_TYPE_SSAB_WAVE_SPAWNED 
			localization = MESSAGE_SSAB_WAVE_SPAWNED 
			days = 30 
			target = root
		}
	}
}

# When the crisis war situation reaches 75, the FE awakes it later joins the side against the crisis in war.
country_event = {
	id = SSAB.465
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		exists = event_target:SSAB_fe_country 
	}
	
	immediate = {
		event_target:SSAB_fe_country = {
			### AWAKEN FE (prevent custom FEs from being forcebly awakened)
			if = {
				limit = {
					OR = {
						has_country_flag = fallen_empire_1
						has_country_flag = fallen_empire_2
						has_country_flag = fallen_empire_3
						has_country_flag = fallen_empire_4
					}
				}
				SSAB_awake_FE = yes
			}
			country_event = { id = SSAB.466 days = 400 random = 150 } #FE joins war
		}
		every_playable_country = {
			limit = {
				has_country_flag = SSAB_antagonist
			}
			country_event = { id = SSAB.467 days = 50 random = 50 } #Warn antagonists that the FE will fight against them.
		}
	}
}

# Awoken FE joins war, then tells everyone that they have come to rescue them.
country_event = {
	id = SSAB.466
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		join_war = event_target:SSAB_war_leader
		country_event = { id = SSAB.468 }
	}
}

# Warning: The FE bout to F you up.
country_event = {
	id = SSAB.467
	title = SSAB.467.title
	desc = SSAB.467.desc
	picture = GFX_evt_fallen_empire
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.467.a
	}
}

#The Fallen Empire gets in touch.
country_event = {
	id = SSAB.468
	title = TRANSMISSION
	diplomatic = yes
	force_open = yes
	
	desc = {
		trigger = {
			hidden:owner = {
				event_target:SSAB_fe_country = {
					switch = {
						trigger = has_ethic
						ethic_fanatic_spiritualist = { text = SSAB.468.desc_01 }
						ethic_fanatic_materialist = { text = SSAB.468.desc_02 }
						ethic_fanatic_xenophobe = { text = SSAB.468.desc_03 }
						ethic_fanatic_xenophile = { text = SSAB.468.desc_04 }
						default = { text = SSAB.468.desc_04 }
					}
				}
			}
		}
	}
	
	trigger = {
		exists = event_target:SSAB_fe_country 
		event_target:SSAB_fe_country = {
			has_communications = prev
		}
	}
	
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:ss_abyss_fallen_empire_comm
		planet_background = event_target:ss_abyss_fallen_empire_comm
		graphical_culture = event_target:ss_abyss_fallen_empire_comm
		city_level = event_target:ss_abyss_fallen_empire_comm
		room = event_target:ss_abyss_fallen_empire_comm.ruler
	}

	option = {
		name = "SSAB.468.a"
		trigger = {
			NOT = { has_country_flag = SSAB_antagonist }
		}
	}
	
	option = {
		name = "SSAB.468.b"
		trigger = {
			has_country_flag = SSAB_antagonist
		}
	}
}

# The Father provides reinforcements; a series of apparitions spawn which create debilitating space storms.
country_event = {
	id = SSAB.470
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invasion_ongoing
		exists = event_target:SSAB_ab_country
	}
	
	immediate = {
		SSAB_AB_spawn_apparition_wave = yes
	}
}

# The Apparitions spawn a space storm, checked in on_actions
fleet_event = {
	id = SSAB.471
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invasion_ongoing
		exists = event_target:SSAB_ab_country
	}
	
	immediate = {
		from = { 
			SSAB_spawn_abyssal_storm = yes 
			system_event = { id = SSAB.472 days = 350 }
		}
	}
}

#Removes abyssal storms after a while
system_event = {
	id = SSAB.472
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				AND = {
					any_system_ambient_object = { has_ambient_object_flag = SSAB_abyssal_storm_object }
					NOT = { any_fleet_in_system = { has_fleet_flag = SSAB_apparition } }
					NOT = { any_system_planet = { has_planet_flag = SSAB_perm_storm } }
				}
			}
			remove_modifier = SSAB_abyssal_storm
			every_system_ambient_object = {
				limit = { has_ambient_object_flag = SSAB_abyssal_storm_object }
				destroy_ambient_object = this
			}
		}
		else = {
			system_event = { id = SSAB.472 days = 150 }
		}
	}
}

# The Father Lost! The Abyssal Host are disappearing... and some entities appeared.
country_event = {
	id = SSAB.500
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invasion_ongoing
		exists = event_target:SSAB_ab_country
	}
	
	immediate = {
		SSAB_protagonist_victory = yes
		every_playable_country = {
			limit = { has_country_flag = SSAB_protagonist }
			country_event = { id = SSAB.501 days = 10 }
		}
		every_playable_country = {
			limit = { has_country_flag = SSAB_antagonist }
			country_event = { id = SSAB.502 days = 10 }
		}
	}
}

# Alert: Kill the bad things and win!
country_event = {
	id = SSAB.501
	title = SSAB.501.title
	desc = SSAB.501.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_sensor_ping

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.501.a
	}
}

# Alert: The Father is retreating...
country_event = {
	id = SSAB.502
	title = SSAB.502.title
	desc = SSAB.502.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_sensor_ping

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.502.a
	}
}


# On-action event: when an anchor is destroyed.
country_event = {
	id = SSAB.503
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invaders_defeated_endgame
		From = { is_same_value = event_target:SSAB_ab_country }
		FromFromFrom = { has_fleet_flag = SSAB_abyssal_host_anchor }
	}
	
	immediate = {
		every_playable_country = {
			country_event = { id = SSAB.504 }
		}
		if = {
			limit = { SSAB_any_anchors_left = no }
			country_event = { id = SSAB.510 days = 20 } # The Best ending. Yay!
		}
	}
}

#Alert; an anchor has been destroyed!
country_event = {
	id = SSAB.504
	title = SSAB.504.title
	picture = GFX_evt_ss_the_heart
	show_sound = event_space_battle
	
	desc = {
		text = SSAB.504.desc_01
		trigger = {
			AND = {
				has_country_flag = SSAB_protagonist
				SSAB_any_anchors_left = yes
			}
		}
	}
	
	desc = {
		text = SSAB.504.desc_02
		trigger = {
			AND = {
				has_country_flag = SSAB_antagonist
				SSAB_any_anchors_left = no
			}
		}
	}
	
	desc = {
		text = SSAB.504.desc_03
		trigger = {
			AND = {
				has_country_flag = SSAB_protagonist
				SSAB_any_anchors_left = yes
			}
		}
	}
	
	desc = {
		text = SSAB.504.desc_04
		trigger = {
			AND = {
				has_country_flag = SSAB_antagonist
				SSAB_any_anchors_left = no
			}
		}
	}

	is_triggered_only = yes
	
	immediate = {
		set_variable = { which = SSAB_anchors_remaining value = value:SSAB_anchors_remaining }
	}
	
	option = {
		name = SSAB.504.a
		trigger = {
			has_country_flag = SSAB_protagonist
		}
	}
	
	option = {
		name = SSAB.504.b
		trigger = {
			AND = {
				has_country_flag = SSAB_antagonist
				SSAB_any_anchors_left = yes
			}
		}
	}
	
	option = {
		name = SSAB.504.c
		trigger = {
			AND = {
				has_country_flag = SSAB_antagonist
				SSAB_any_anchors_left = no
			}
		}
		#hidden_effect = {
		#	country_event = { id = SSAB.505 }
		#}
	}
}

#The Father says his last words, then kicks the bucket (read: tragic)
country_event = {
	id = SSAB.505
	title = "TRANSMISSION"
	desc = "SSAB.505.desc"
	custom_gui = "ss_ab_diplo_window"

	diplomatic = yes

	picture_event_data = {
		portrait = abyssal_host_father_portrait
		room = abyssal_host_room
	}

	is_triggered_only = yes
	
	option = {
		name = SSAB.505.a
		response_text = SSAB.505.a.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.505.b
		response_text = SSAB.505.b.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.505.c
		response_text = SSAB.505.c.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.505.d
		response_text = SSAB.505.d.response
	}
}

#The Father says his last words, then departs for a long time (read: he will be back)
country_event = {
	id = SSAB.506
	title = "TRANSMISSION"
	desc = "SSAB.506.desc"
	custom_gui = "ss_ab_diplo_window"

	diplomatic = yes

	picture_event_data = {
		portrait = abyssal_host_father_portrait
		room = abyssal_host_room
	}

	is_triggered_only = yes
	
	option = {
		name = SSAB.506.a
		response_text = SSAB.506.a.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.506.b
		response_text = SSAB.506.b.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.506.c
		response_text = SSAB.506.c.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.506.d
		response_text = SSAB.506.d.response
	}
}

#The best ending (Good guys win, finish the father.)
country_event = {
	id = SSAB.510
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		SSAB_protagonist_victory_good_ending = yes
	}
}

#Checker event: are all the portals destroyed? If not; the good guys win (kinda?)
country_event = {
	id = SSAB.512
	hide_window = yes

	trigger = {
		has_global_flag = abyssal_invaders_defeated_endgame
	}
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { SSAB_any_anchors_left = yes }
			SSAB_protagonist_victory_bad_ending = yes
		}
	}
}


# The Father Wins! Everything starts breaking at the seems...
country_event = {
	id = SSAB.520
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invasion_ongoing
		exists = event_target:SSAB_ab_country
	}
	
	immediate = {
		SSAB_antagonist_victory_endgame = yes
		every_playable_country = {
			if = {
				limit = {
					has_country_flag = SSAB_protagonist
				}
				country_event = { id = SSAB.521 }
			}
			else_if = {
				limit = {
					has_country_flag = SSAB_antagonist
				}
				country_event = { id = SSAB.522 }
			}
		}
		country_event = { id = SSAB.525 days = 350 }
	}
}

# A spooky dirge of the last days
country_event = {
	id = SSAB.521
	title = SSAB.521.title
	desc = SSAB.521.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.521.a
	}
}


#The Father's victory speech.
country_event = {
	id = SSAB.522
	title = "TRANSMISSION"
	desc = "SSAB.522.desc"
	custom_gui = "ss_ab_diplo_window"

	diplomatic = yes

	picture_event_data = {
		portrait = abyssal_host_father_portrait
		room = abyssal_host_room
	}

	is_triggered_only = yes
	
	option = {
		name = SSAB.522.a
		response_text = SSAB.522.a.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.522.b
		response_text = SSAB.522.b.response
		is_dialog_only = yes
	}
	
	option = {
		name = SSAB.522.c
		response_text = SSAB.522.c.response
		country_event = { id = SSAB.523 }
	}
}

# Congrats, you win! Just wait a year first.
country_event = {
	id = SSAB.523
	title = SSAB.523.title
	desc = SSAB.523.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = SSAB.523.a
	}
}

# The Father's finale, the galaxy is changed forever.
country_event = {
	id = SSAB.524
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invaders_defeated_endgame
	}
	
	immediate = {
		if = {
			limit = { exists = event_target:SSAB_crisis_system_1 }
			event_target:SSAB_crisis_system_1 = {
				closest_system = {
					limit = { 
						NOT = { is_star_class = sc_ss_abyss }
					}
					SSAB_convert_to_ABH = yes
				}
			}
			country_event = { id = SSAB.524 days = 20 }
		}
	}
}

# The Father's finale, the galaxy is changed forever.
country_event = {
	id = SSAB.525
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invaders_defeated_endgame
	}
	
	immediate = {
		SSAB_antagonist_victory_finale = yes
	}
}