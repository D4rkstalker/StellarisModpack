namespace = ag_epsilon

# Hidden, Spawn the Epsilon Area
country_event = {
    id = ag_epsilon.1
    hide_window = yes
	is_triggered_only = yes
	
    immediate = {
		ag_spawn_ancient_system = { ag_avoid_colonies = yes ag_system_to_spawn = "ag_ancient_epsilon_init" }
		ag_spawned_system_effect = yes
		create_point_of_interest = {
			id = ag_epsilon_area
			name = "ag_epsilon_area"
			desc = "ag_epsilon_area_desc"
			event_chain = ag_hidden_system_chain
			location = event_target:ag_ancient_epsilon_star
		}
		random_system = {
			limit = { has_star_flag = ag_ancient_epsilon_system }
			every_system = {
				limit = {
					ag_is_ancient_system = no
					distance = {
						source = prev
						min_distance >= 0
						max_distance <= 35
						type = euclidean
						use_bypasses = no
					}
					NOR = {
						is_same_value = prev
						has_hyperlane_to = prev
					}
				}
				random_list = {
					40 = { }
					60 = { add_hyperlane = { from = this to = prev } }
				}
				reroll_random = yes
			}
			ag_spawned_system_hyperlane_fixup = yes
		}
    }
	
	after = {
		every_country = {
			limit = { has_special_project = ag_located_epsilon_area }
			abort_special_project = {
				type = "ag_located_epsilon_area"
				location = capital_scope
			}
		}
	}
}

# on_entering_system_fleet, Notification for entering the Epsilon Area first time
fleet_event = {
	id = ag_epsilon.2
	title = "ag_epsilon.2.name"
	desc = "ag_epsilon.2.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ruined_system_room }
	show_sound = event_mystic_reveal_light
	location = root
	
	is_triggered_only = yes
	
	trigger = {
		from = { has_star_flag = ag_ancient_epsilon_system }
		owner = {
			is_ai = no
			NOT = { has_country_flag = ag_epsilon_area_entered }
		}
		NOT = { has_global_flag = ag_epsilon_ringworld_unlocked }
	}
	
    immediate = {
		owner = {
			set_country_flag = ag_epsilon_area_entered
			ag_refresh_ancient_system_poi = { ag_system_id = ag_epsilon_area }
		}
	}
	
	option = { name = "ag_epsilon.2.a" }
}

# on_ship_destroyed_perp, Destroy Defensive Stations, give special projects to unlock ringworlds.
country_event = {
	id = ag_epsilon.3
	title = "ag_epsilon.3.name"
	desc = "ag_epsilon.3.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	location = fromfrom

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		from = {
			has_country_flag = ag_epsilon_fallen_empire_guardian
			count_controlled_ship = { count < 1 }
		}
		fromfromfrom = {
			OR = {
				is_ship_size = ag_epsilon_defensive_station_large_hostile
				is_ship_size = ag_epsilon_defensive_station_small_hostile
			}
			NOT = { has_ship_flag = ag_set_disable_at_health }
		}
	}
	immediate = {
		set_global_flag = ag_epsilon_fallen_empire_guardian_destroyed
		every_country = {
			if = {
				limit = { has_modifier = ag_ancient_epsilon_fallen_empire_weakness }
				remove_modifier = "ag_ancient_epsilon_fallen_empire_weakness"
			}
			if = {
				limit = { has_country_flag = ag_has_ancient_epsilon_fallen_empire_weakness }
				remove_country_flag = ag_has_ancient_epsilon_fallen_empire_weakness
			}
			if = {
				limit = { has_special_project = ag_find_ancient_epsilon_fallen_empire_weakness }
				abort_special_project = {
					type = "ag_find_ancient_epsilon_fallen_empire_weakness"
					location = capital_scope
				}
			}
		}
	}
	after = { from = { destroy_country = yes } }
	
	option = {
		name = "ag_epsilon.3.a"
		event_target:ag_ancient_epsilon_shielded_world = {
			enable_special_project = {
				name = ag_epsilon_ringworld_project
				location = this
				owner = root
			}
		}
		event_target:ag_ancient_epsilon_shielded_world_2 = {
			enable_special_project = {
				name = ag_epsilon_ringworld_project
				location = this
				owner = root
			}
		}
		event_target:ag_ancient_epsilon_shielded_world_3 = {
			enable_special_project = {
				name = ag_epsilon_ringworld_project
				location = this
				owner = root
			}
		}
	}
	option = {
		name = "ag_epsilon.3.b"
		custom_tooltip = "ag_epsilon.3.b.tooltip"
		add_resource = { influence = @ag_end_event_influence_large }
	}
}

# Ringworld unlocked.
ship_event = {
	id = ag_epsilon.4
	title = "ag_epsilon.4.name"
	desc = "ag_epsilon.4.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_cold_barren_planet_room }
	show_sound = event_power_down
	location = from

	is_triggered_only = yes
	
	option = { name = "ag_epsilon.4.a" }
}
ship_event = {
	id = ag_epsilon.5
	title = "ag_epsilon.5.name"
	desc = "ag_epsilon.5.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_cold_barren_planet_room }
	show_sound = event_power_down
	location = from

	is_triggered_only = yes
	
	option = { name = "ag_epsilon.5.a" }
}

# on_colonized, Colonize ringworld, notification for remove blocker.
planet_event = {
	id = ag_epsilon.6
	title = "ag_epsilon.6.name"
	desc = "ag_epsilon.6.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_cold_barren_planet_room }
	location = root

	is_triggered_only = yes
	fire_only_once = yes

	pre_triggers = { is_ai = no }
	trigger = { is_planet_class = pc_ag_ringworld_alpine }

	option = { name = "ag_epsilon.6.a" }
}

# on_blocker_cleared, Blocker cleared, add fallen empire's building.
planet_event = {
	id = ag_epsilon.7
	title = "ag_epsilon.7.name"
	desc = "ag_epsilon.7.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_alien_ruins_room }
	show_sound = event_default
	location = root

	is_triggered_only = yes
	fire_only_once = yes

	pre_triggers = { has_owner = yes }
	trigger = {
		from = { is_deposit_type = ag_epsilon_ringworld_blocker_5 }
		owner = { NOT = { has_country_flag = ag_epsilon_7_fired } }
		OR = {
			is_same_value = event_target:ag_ancient_epsilon_shielded_world
			is_same_value = event_target:ag_ancient_epsilon_shielded_world_2
			is_same_value = event_target:ag_ancient_epsilon_shielded_world_3
		}
	}

	immediate = {
		set_planet_flag = ag_epsilon_7_fired_planet
		owner = { set_country_flag = ag_epsilon_7_fired }
	}
	after = { reroll_random = yes }

	option = {
		name = "ag_epsilon.7.a"
		add_building = ag_epsilon_outpost_0
		locked_random_list = {
			5 = { add_building = building_class_4_singularity }
			5 = { add_building = building_dimensional_fabricator }
			5 = { add_building = building_nourishment_center }
			5 = { add_building = building_affluence_center }
			5 = { add_building = building_nano_forge }
			5 = { add_building = building_fe_dome }
			270 = { }
		}
	}
	option = {
		name = "ag_epsilon.7.b"
		custom_tooltip = "ag_epsilon.3.b.tooltip"
		owner = { add_resource = { influence = @ag_end_event_influence_small } }
	}
}
planet_event = {
	id = ag_epsilon.8
	title = "ag_epsilon.8.name"
	desc = "ag_epsilon.8.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_alien_ruins_room }
	show_sound = event_default
	location = root

	is_triggered_only = yes

	pre_triggers = { has_owner = yes }
	trigger = {
		NOT = { has_planet_flag = ag_epsilon_7_fired_planet }
		from = { is_deposit_type = ag_epsilon_ringworld_blocker_5 }
		owner = { has_country_flag = ag_epsilon_7_fired }
		OR = {
			is_same_value = event_target:ag_ancient_epsilon_shielded_world
			is_same_value = event_target:ag_ancient_epsilon_shielded_world_2
			is_same_value = event_target:ag_ancient_epsilon_shielded_world_3
		}
	}
	after = { reroll_random = yes }

	option = {
		name = "ag_epsilon.8.a"
		add_building = ag_epsilon_outpost_0
		locked_random_list = {
			5 = { add_building = building_class_4_singularity }
			5 = { add_building = building_dimensional_fabricator }
			5 = { add_building = building_nourishment_center }
			5 = { add_building = building_affluence_center }
			5 = { add_building = building_nano_forge }
			5 = { add_building = building_fe_dome }
			270 = { }
		}
	}
	option = {
		name = "ag_epsilon.8.b"
		custom_tooltip = "ag_epsilon.3.b.tooltip"
		owner = { add_resource = { influence = @ag_end_event_influence_small } }
	}
}

# Give research project to unlock first building.
planet_event = {
	id = ag_epsilon.11
	title = "ag_epsilon.11.name"
	desc = "ag_epsilon.11.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_sapient_AI_room }
	show_sound = event_mystic_reveal
	location = root

	fire_only_once = yes
	mean_time_to_happen = { years = 2 }

	pre_triggers = {
		has_owner = yes
		is_ai = no
		has_ground_combat = no
		is_occupied_flag = no
	}
	trigger = {
		has_building = ag_epsilon_outpost_0
		OR = {
			is_same_value = event_target:ag_ancient_epsilon_shielded_world
			is_same_value = event_target:ag_ancient_epsilon_shielded_world_2
			is_same_value = event_target:ag_ancient_epsilon_shielded_world_3
		}
		ag_has_researcher = yes
	}
	
	option = {
		name = "ag_epsilon.11.a"
		custom_tooltip = "ag_epsilon.11.a.tooltip"
		hidden_effect = {
			save_global_event_target_as = ag_epsilon_first_ringworld
			owner = { ag_give_research_project = { ag_project_id = @ag_epsilon_first_building_unlock_project_id } }
		}
	}
	option = {
		name = "ag_epsilon.11.b"
		custom_tooltip = "ag_epsilon.3.b.tooltip"
		owner = { add_resource = { influence = @ag_end_event_influence_small } }
	}
}

# Research project completed, allows to upgrade building.
country_event = {
	id = ag_epsilon.12
	title = "ag_epsilon.12.name"
	desc = "ag_epsilon.12.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_epsilon_first_ringworld

	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		event_target:ag_epsilon_first_ringworld = { set_planet_flag = ag_epsilon_outpost_1_allow }
		set_country_flag = ag_epsilon_12_fired
	}

	option = { name = "ag_epsilon.12.a" }
}

# on_building_upgraded, Upgraded Fallen Empire Research Station.
planet_event = {
	id = ag_epsilon.13
	title = "ag_epsilon.13.name"
	desc = "ag_epsilon.13.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_dyson_sphere_build_complete
	location = root

	is_triggered_only = yes

	trigger = {
		has_building = ag_epsilon_outpost_1
		NOT = { has_planet_flag = ag_epsilon_13_fired }
	}

	immediate = {
		set_planet_flag = ag_epsilon_13_fired
		if = {
			limit = { is_same_value = event_target:ag_ancient_epsilon_shielded_world }
			ag_set_epsilon_obelisk_code = { ag_obelisk_seq = 1 ag_position = 1 }
		}
		else_if = {
			limit = { is_same_value = event_target:ag_ancient_epsilon_shielded_world_2 }
			ag_set_epsilon_obelisk_code = { ag_obelisk_seq = 2 ag_position = 1 }
		}
		else_if = {
			limit = { always = yes }
			ag_set_epsilon_obelisk_code = { ag_obelisk_seq = 3 ag_position = 1 }
		}
	}

	option = {
		name = "ag_epsilon.13.a"
		custom_tooltip = "ag_epsilon.13.a.tooltip"
	}
}

# Give special project to unlock other buildings.
planet_event = {
	id = ag_epsilon.14
	title = "ag_epsilon.14.name"
	desc = "ag_epsilon.14.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_sapient_AI_room }
	show_sound = event_mystic_reveal
	location = root

	mean_time_to_happen = { months = 8 }

	pre_triggers = {
		has_owner = yes
		is_ai = no
		has_ground_combat = no
		is_occupied_flag = no
	}
	trigger = {
		has_building = ag_epsilon_outpost_0
		owner = { has_country_flag = ag_epsilon_12_fired }
		NOT = { has_planet_flag = ag_epsilon_14_fired }
		OR = {
			is_same_value = event_target:ag_ancient_epsilon_shielded_world
			is_same_value = event_target:ag_ancient_epsilon_shielded_world_2
			is_same_value = event_target:ag_ancient_epsilon_shielded_world_3
		}
		ag_has_researcher = yes
	}

	immediate = { set_planet_flag = ag_epsilon_14_fired }
	
	option = {
		name = "ag_epsilon.11.a"
		enable_special_project = {
			name = ag_epsilon_other_building_unlock
			location = root
			owner = root.owner
		}
	}
	option = {
		name = "ag_epsilon.11.b"
		custom_tooltip = "ag_epsilon.3.b.tooltip"
		owner = { add_resource = { influence = @ag_end_event_influence_small } }
	}
}

# Special project completed, allows to upgrade building.
planet_event = {
	id = ag_epsilon.15
	title = "ag_epsilon.15.name"
	desc = "ag_epsilon.15.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_mystic_reveal
	location = root

	is_triggered_only = yes

	option = { name = "ag_epsilon.15.a" }
}

# Building upgraded, spawn archaeological site for obelisk.
planet_event = {
	id = ag_epsilon.21
	title = "ag_epsilon.21.name"
	desc = {
		trigger = { owner = { NOR = {
			has_country_flag = ag_epsilon_ringworld_1_site_discovered
			has_country_flag = ag_epsilon_ringworld_2_site_discovered
			has_country_flag = ag_epsilon_ringworld_3_site_discovered
		} }}
		text = "ag_epsilon.21.a.desc"
	}
	desc = {
		trigger = { owner = { OR = {
			has_country_flag = ag_epsilon_ringworld_1_site_discovered
			has_country_flag = ag_epsilon_ringworld_2_site_discovered
			has_country_flag = ag_epsilon_ringworld_3_site_discovered
		} }}
		text = "ag_epsilon.21.b.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_mystic_reveal
	location = root

	fire_only_once = yes
	mean_time_to_happen = {
		months = 16
		modifier = {
			factor = 0.5
			owner = { OR = {
				has_country_flag = ag_epsilon_ringworld_1_site_completed
				has_country_flag = ag_epsilon_ringworld_2_site_completed
				has_country_flag = ag_epsilon_ringworld_3_site_completed
			} }
		}
	}

	pre_triggers = {
		has_owner = yes
		is_ai = no
		has_ground_combat = no
		is_occupied_flag = no
	}
	trigger = {
		has_building = ag_epsilon_outpost_1
		is_same_value = event_target:ag_ancient_epsilon_shielded_world
		owner = { NOT = { has_country_flag = ag_epsilon_ringworld_1_site_discovered } }
		ag_has_researcher = yes
	}

	immediate = { owner = { set_country_flag = ag_epsilon_ringworld_1_site_discovered } }

	option = {
		name = "ag_epsilon.21.a"
		create_archaeological_site = ag_epsilon_ringworld_1_site
	}
}
planet_event = {
	id = ag_epsilon.22
	title = "ag_epsilon.22.name"
	desc = {
		trigger = { owner = { NOR = {
			has_country_flag = ag_epsilon_ringworld_1_site_discovered
			has_country_flag = ag_epsilon_ringworld_2_site_discovered
			has_country_flag = ag_epsilon_ringworld_3_site_discovered
		} }}
		text = "ag_epsilon.22.a.desc"
	}
	desc = {
		trigger = { owner = { OR = {
			has_country_flag = ag_epsilon_ringworld_1_site_discovered
			has_country_flag = ag_epsilon_ringworld_2_site_discovered
			has_country_flag = ag_epsilon_ringworld_3_site_discovered
		} }}
		text = "ag_epsilon.22.b.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_mystic_reveal
	location = root

	fire_only_once = yes
	mean_time_to_happen = {
		months = 16
		modifier = {
			factor = 0.5
			owner = { OR = {
				has_country_flag = ag_epsilon_ringworld_1_site_completed
				has_country_flag = ag_epsilon_ringworld_2_site_completed
				has_country_flag = ag_epsilon_ringworld_3_site_completed
			} }
		}
	}

	pre_triggers = {
		has_owner = yes
		is_ai = no
		has_ground_combat = no
		is_occupied_flag = no
	}
	trigger = {
		has_building = ag_epsilon_outpost_1
		is_same_value = event_target:ag_ancient_epsilon_shielded_world_2
		owner = { NOT = { has_country_flag = ag_epsilon_ringworld_2_site_discovered } }
		ag_has_researcher = yes
	}

	immediate = { owner = { set_country_flag = ag_epsilon_ringworld_2_site_discovered } }

	option = {
		name = "ag_epsilon.22.a"
		create_archaeological_site = ag_epsilon_ringworld_2_site
	}
}
planet_event = {
	id = ag_epsilon.23
	title = "ag_epsilon.23.name"
	desc = {
		trigger = { owner = { NOR = {
			has_country_flag = ag_epsilon_ringworld_1_site_discovered
			has_country_flag = ag_epsilon_ringworld_2_site_discovered
			has_country_flag = ag_epsilon_ringworld_3_site_discovered
		} }}
		text = "ag_epsilon.23.a.desc"
	}
	desc = {
		trigger = { owner = { OR = {
			has_country_flag = ag_epsilon_ringworld_1_site_discovered
			has_country_flag = ag_epsilon_ringworld_2_site_discovered
			has_country_flag = ag_epsilon_ringworld_3_site_discovered
		} }}
		text = "ag_epsilon.23.b.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_mystic_reveal
	location = root

	fire_only_once = yes
	mean_time_to_happen = {
		months = 16
		modifier = {
			factor = 0.5
			owner = { OR = {
				has_country_flag = ag_epsilon_ringworld_1_site_completed
				has_country_flag = ag_epsilon_ringworld_2_site_completed
				has_country_flag = ag_epsilon_ringworld_3_site_completed
			} }
		}
	}

	pre_triggers = {
		has_owner = yes
		is_ai = no
		has_ground_combat = no
		is_occupied_flag = no
	}
	trigger = {
		has_building = ag_epsilon_outpost_1
		is_same_value = event_target:ag_ancient_epsilon_shielded_world_3
		owner = { NOT = { has_country_flag = ag_epsilon_ringworld_3_site_discovered } }
		ag_has_researcher = yes
	}

	immediate = { owner = { set_country_flag = ag_epsilon_ringworld_3_site_discovered } }

	option = {
		name = "ag_epsilon.23.a"
		create_archaeological_site = ag_epsilon_ringworld_3_site
	}
}

# Archaeological Site.
fleet_event = {
	id = ag_epsilon.25
	title = "ag_epsilon.25.name"
	desc = "ag_epsilon.25.desc"
	picture = GFX_evt_alien_ruins
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = { name = "ag_epsilon.25.a" }
}
fleet_event = {
	id = ag_epsilon.26
	title = "ag_epsilon.26.name"
	desc = {
		trigger = { owner = { NOT = { has_country_flag = ag_epsilon_26_fired } } }
		text = "ag_epsilon.26.a.desc"
	}
	desc = {
		trigger = { owner = { has_country_flag = ag_epsilon_26_fired } }
		text = "ag_epsilon.26.b.desc"
	}
	picture = GFX_evt_excavation_team
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } owner = { set_country_flag = ag_epsilon_26_fired } }
	after = { from = { set_site_progress_locked = no }  }
	option = { name = "ag_epsilon.26.a" }
}
fleet_event = {
	id = ag_epsilon.27
	title = "ag_epsilon.27.name"
	desc = {
		trigger = { owner = { NOT = { has_country_flag = ag_epsilon_27_fired } } }
		text = "ag_epsilon.27.a.desc"
	}
	desc = {
		trigger = { owner = { has_country_flag = ag_epsilon_27_fired } }
		text = "ag_epsilon.27.b.desc"
	}
	picture = GFX_evt_ag_ancient_AI
	show_sound = event_mystic_reveal

	archaeology = yes
	is_triggered_only = yes

	immediate = {
		owner = { set_country_flag = ag_epsilon_27_fired }
		from = { set_site_progress_locked = yes }
		from.planet = {
			if = {
				limit = { is_same_value = event_target:ag_ancient_epsilon_shielded_world }
				root.owner = { set_country_flag = ag_epsilon_ringworld_1_site_completed }
				ag_set_epsilon_obelisk_code = { ag_obelisk_seq = 1 ag_position = 0 }
				solar_system = { random_system_megastructure = {
					limit = { has_megastructure_flag = ag_epsilon_obelisk_1 }
					ag_upgrade_epsilon_obelisk = { ag_target_level = 1 }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = blue }
				} }
			}
			else_if = {
				limit = { is_same_value = event_target:ag_ancient_epsilon_shielded_world_2 }
				root.owner = { set_country_flag = ag_epsilon_ringworld_2_site_completed }
				ag_set_epsilon_obelisk_code = { ag_obelisk_seq = 2 ag_position = 0 }
				solar_system = { random_system_megastructure = {
					limit = { has_megastructure_flag = ag_epsilon_obelisk_2 }
					ag_upgrade_epsilon_obelisk = { ag_target_level = 1 }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = blue }
				} }
			}
			else_if = {
				limit = { always = yes }
				root.owner = { set_country_flag = ag_epsilon_ringworld_3_site_completed }
				ag_set_epsilon_obelisk_code = { ag_obelisk_seq = 3 ag_position = 0 }
				solar_system = { random_system_megastructure = {
					limit = { has_megastructure_flag = ag_epsilon_obelisk_3 }
					ag_upgrade_epsilon_obelisk = { ag_target_level = 1 }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = blue }
				} }
			}
		}
		if = {
			limit = { owner = {
				has_country_flag = ag_epsilon_ringworld_1_site_completed
				has_country_flag = ag_epsilon_ringworld_2_site_completed
				has_country_flag = ag_epsilon_ringworld_3_site_completed
			} }
			owner = { country_event = { id = ag_epsilon.32 days = 15 random = 45 } }
		}
	}
	after = { from = { set_site_progress_locked = no } }

	option = {
		name = "ag_epsilon.27.a"
		custom_tooltip = "ag_epsilon.27.a.tooltip"
	}
}

# Upgrade obelisk, initial settings.
country_event = {
	id = ag_epsilon.31
	title = "ag_epsilon.31.name"
	desc = {
		trigger = { has_country_flag = ag_epsilon_obelisk_1_flag }
		text = "ag_epsilon.31.a.desc"
	}
	desc = {
		trigger = { has_country_flag = ag_epsilon_obelisk_2_flag }
		text = "ag_epsilon.31.b.desc"
	}
	desc = {
		trigger = { has_country_flag = ag_epsilon_obelisk_3_flag }
		text = "ag_epsilon.31.c.desc"
	}
	show_sound = event_mystic_reveal

	diplomatic = yes
	custom_gui = "ag_epsilon_obelisk_window"
	custom_gui_option = "ag_epsilon_obelisk_option"
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}

	is_triggered_only = yes

	immediate = {
		if = { limit = { NOT = { is_variable_set = ag_epsilon_obelisk_1_0_selected } } set_variable = { which = ag_epsilon_obelisk_1_0_selected value = 0 } }
		if = { limit = { NOT = { is_variable_set = ag_epsilon_obelisk_2_0_selected } } set_variable = { which = ag_epsilon_obelisk_2_0_selected value = 0 } }
		if = { limit = { NOT = { is_variable_set = ag_epsilon_obelisk_3_0_selected } } set_variable = { which = ag_epsilon_obelisk_3_0_selected value = 0 } }
		if = { limit = { NOT = { is_variable_set = ag_epsilon_obelisk_1_1_selected } } set_variable = { which = ag_epsilon_obelisk_1_1_selected value = 0 } }
		if = { limit = { NOT = { is_variable_set = ag_epsilon_obelisk_2_1_selected } } set_variable = { which = ag_epsilon_obelisk_2_1_selected value = 0 } }
		if = { limit = { NOT = { is_variable_set = ag_epsilon_obelisk_3_1_selected } } set_variable = { which = ag_epsilon_obelisk_3_1_selected value = 0 } }
	}
	after = {
		remove_country_flag = ag_epsilon_31_actived
		if = {
			limit = { has_country_flag = ag_epsilon_obelisk_1_flag }
			set_country_flag = ag_epsilon_obelisk_1_upgraded
			remove_country_flag = ag_epsilon_obelisk_1_flag
		}
		else_if = {
			limit = { has_country_flag = ag_epsilon_obelisk_2_flag }
			set_country_flag = ag_epsilon_obelisk_2_upgraded
			remove_country_flag = ag_epsilon_obelisk_2_flag
		}
		else_if = {
			limit = { has_country_flag = ag_epsilon_obelisk_3_flag }
			set_country_flag = ag_epsilon_obelisk_3_upgraded
			remove_country_flag = ag_epsilon_obelisk_3_flag
		}
	}

	option = { name = "ag_epsilon.31.a" default_hide_option = yes }
}

# Notification for obelisk adjustment and shielded station upgrade.
country_event = {
	id = ag_epsilon.32
	title = "ag_epsilon.32.name"
	desc = "ag_epsilon.32.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes

	immediate = {
		event_target:ag_ancient_epsilon_star.solar_system = {
			random_system_megastructure = {
				limit = { is_megastructure_type = ag_epsilon_titan_station_actived_0 }
				upgrade_megastructure_to = ag_epsilon_titan_station_actived_1
				finish_upgrade = yes
			}
		}
	}
	
	option = { name = "ag_epsilon.32.a" custom_tooltip = "ag_epsilon.32.a.tooltip" }
}

# Three obelisk upgraded, check obelisk state.
country_event = {
	id = ag_epsilon.33
	title = "ag_epsilon.33.name"
	desc = "ag_epsilon.33.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_star_pulsar_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	immediate = {
		set_global_flag = ag_epsilon_obelisk_working
		save_global_event_target_as = ag_obelisk_activate_country
		event_target:global_event_country = { country_event = { id = ag_epsilon.34 days = 30 random = 30 } }
		random_system = {
			limit = { has_star_flag = ag_ancient_epsilon_system }
			every_system_megastructure = {
				limit = { is_megastructure_type = ag_epsilon_obelisk_1 }
				ag_upgrade_epsilon_obelisk = { ag_target_level = 3 }
			}
		}
	}
	option = { name = "ag_epsilon.33.a" }
}
country_event = {
	id = ag_epsilon.34
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = event_target:ag_obelisk_activate_country
				event_target:ag_obelisk_activate_country = {
					is_same_value = event_target:ag_ancient_epsilon_star.solar_system.space_owner
				}
			}
			if = {
				limit = {
					check_variable = { which = ag_epsilon_obelisk_1_0_selected value = ag_epsilon_obelisk_1_0 }
					check_variable = { which = ag_epsilon_obelisk_2_0_selected value = ag_epsilon_obelisk_2_0 }
					check_variable = { which = ag_epsilon_obelisk_3_0_selected value = ag_epsilon_obelisk_3_0 }
					check_variable = { which = ag_epsilon_obelisk_1_1_selected value = ag_epsilon_obelisk_1_1 }
					check_variable = { which = ag_epsilon_obelisk_2_1_selected value = ag_epsilon_obelisk_2_1 }
					check_variable = { which = ag_epsilon_obelisk_3_1_selected value = ag_epsilon_obelisk_3_1 }
				}
				# Succeed.
				random_system = {
					limit = { has_star_flag = ag_ancient_epsilon_system }
					every_system_megastructure = {
						limit = { is_megastructure_type = ag_epsilon_obelisk_3 }
						upgrade_megastructure_to = ag_epsilon_obelisk_4
						finish_upgrade = yes
					}
				}
				country_event = { id = ag_epsilon.35 days = 120 }
				event_target:ag_obelisk_activate_country = { country_event = { id = ag_epsilon.37 } }
			}
			else = {
				# Failed, Obelosks turn into hostile.
				random_system = {
					limit = { has_star_flag = ag_ancient_epsilon_system }
					every_system_megastructure = {
						limit = { is_megastructure_type = ag_epsilon_obelisk_3 }
						if = {
							limit = { has_megastructure_flag = ag_epsilon_obelisk_1 }
							ag_epsilon_obelisk_hostile_spawn = { ag_obelisk_seq = 1 ag_angle = 0 }
						}
						else_if = {
							limit = { has_megastructure_flag = ag_epsilon_obelisk_2 }
							ag_epsilon_obelisk_hostile_spawn = { ag_obelisk_seq = 2 ag_angle = 0 }
						}
						else_if = {
							limit = { has_megastructure_flag = ag_epsilon_obelisk_3 }
							ag_epsilon_obelisk_hostile_spawn = { ag_obelisk_seq = 3 ag_angle = 0 }
						}
						remove_megastructure = this
					}
				}
				event_target:ag_obelisk_activate_country = { country_event = { id = ag_epsilon.38 } }
			}
		}
		else = {
			remove_global_flag = ag_epsilon_obelisk_working
			random_system = {
				limit = { has_star_flag = ag_ancient_epsilon_system }
				every_system_megastructure = {
					limit = { is_megastructure_type = ag_epsilon_obelisk_3 }
					ag_upgrade_epsilon_obelisk = { ag_target_level = 1 }
				}
			}
		}
	}
}
country_event = {
	id = ag_epsilon.35
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = event_target:ag_obelisk_activate_country
				event_target:ag_obelisk_activate_country = {
					is_same_value = event_target:ag_ancient_epsilon_star.solar_system.space_owner
				}
			}
			random_system = {
				limit = { has_star_flag = ag_ancient_epsilon_system }
				every_system_megastructure = {
					limit = { is_megastructure_type = ag_epsilon_obelisk_4 }
					upgrade_megastructure_to = ag_epsilon_obelisk_5
					finish_upgrade = yes
				}
				random_system_megastructure = {
					limit = { is_megastructure_type = ag_epsilon_titan_station_actived_1 }
					ag_upgrade_epsilon_titan_station = { ag_target_level = 3 }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
				}
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_epsilon_titan_shield_object }
					destroy_ambient_object = this
				}
				create_ambient_object = {
					type = "ag_ancient_epsilon_shield_orange_object"
					location = star
					duration = -1
					use_3d_location = yes
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
					scale = 1.0
					effect = { set_ambient_object_flag = ag_epsilon_titan_shield_object_orange }
				}
			}
			country_event = { id = ag_epsilon.36 days = 50 }
			event_target:ag_obelisk_activate_country = { country_event = { id = ag_epsilon.39 } }
			set_global_flag = ag_epsilon_titan_station_outer_shield_disabled
			every_country = {
				if = {
					limit = { has_modifier = ag_ancient_epsilon_obelisk_weakness }
					remove_modifier = "ag_ancient_epsilon_obelisk_weakness"
				}
				if = {
					limit = { has_country_flag = ag_has_ancient_epsilon_obelisk_weakness }
					remove_country_flag = ag_has_ancient_epsilon_obelisk_weakness
				}
				if = {
					limit = { has_special_project = ag_find_ancient_epsilon_obelisk_weakness }
					abort_special_project = {
						type = "ag_find_ancient_epsilon_obelisk_weakness"
						location = capital_scope
					}
				}
			}
		}
		else = {
			remove_global_flag = ag_epsilon_obelisk_working
			random_system = {
				limit = { has_star_flag = ag_ancient_epsilon_system }
				every_system_megastructure = {
					limit = { is_megastructure_type = ag_epsilon_obelisk_4 }
					ag_upgrade_epsilon_obelisk = { ag_target_level = 1 }
					finish_upgrade = yes
				}
			}
		}
	}
}
country_event = {
	id = ag_epsilon.36
	hide_window = yes
	is_triggered_only = yes

	immediate = { random_system = {
		limit = { has_star_flag = ag_ancient_epsilon_system }
		every_system_megastructure = {
			limit = { is_megastructure_type = ag_epsilon_obelisk_5 }
			ag_upgrade_epsilon_obelisk = { ag_target_level = 3 }
		}
	} }
}

# Notification for obelisk adjustment succeed.
country_event = {
	id = ag_epsilon.37
	title = "ag_epsilon.37.name"
	desc = "ag_epsilon.37.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = { name = "ag_epsilon.37.a" }
}

# Notification for obelisk adjustment failed.
country_event = {
	id = ag_epsilon.38
	title = "ag_epsilon.38.name"
	desc = "ag_epsilon.38.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_fleet_evil_room }
	show_sound = event_red_alert
	is_triggered_only = yes
	option = { name = "ag_epsilon.38.a" }
}

# Notification for obelisk adjustment succeed, station shield disabled.
country_event = {
	id = ag_epsilon.39
	title = "ag_epsilon.39.name"
	desc = "ag_epsilon.39.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes

	option = {
		name = "ag_epsilon.39.a"
		event_target:ag_ancient_epsilon_star.solar_system = {
			random_system_megastructure = {
				limit = { is_megastructure_type = ag_epsilon_titan_station_actived_3 }
				enable_special_project = {
					name = "ag_epsilon_titan_station_project"
					location = this
					owner = root
				}
			}
		}
		hidden_effect = {
			if = {
				limit = { exists = event_target:ag_ancient_epsilon_obelisk_guardian }
				event_target:ag_ancient_epsilon_obelisk_guardian = { destroy_country = yes }
			}
		}
	}
}

# on_ship_disabled, Disable obelisk, allows to upgrade again.
ship_event = {
	id = ag_epsilon.41
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_size = ag_epsilon_obelisk_hostile
		exists = owner
		owner = { is_same_value = event_target:ag_ancient_epsilon_obelisk_guardian }
	}
	immediate = {
		if = { limit = { solar_system = { exists = space_owner } } solar_system.space_owner = { save_event_target_as = ag_target_megastructure_owner } }
		else_if = { limit = { event_target:ag_ancient_epsilon_shielded_world = { exists = owner } } event_target:ag_ancient_epsilon_shielded_world.owner = { save_event_target_as = ag_target_megastructure_owner } }
		else_if = { limit = { event_target:ag_ancient_epsilon_shielded_world_2 = { exists = owner } } event_target:ag_ancient_epsilon_shielded_world_2.owner = { save_event_target_as = ag_target_megastructure_owner } }
		else_if = { limit = { event_target:ag_ancient_epsilon_shielded_world_3 = { exists = owner } } event_target:ag_ancient_epsilon_shielded_world_3.owner = { save_event_target_as = ag_target_megastructure_owner } }
		if = {
			limit = { owner = { NOT = { any_controlled_ship = {
				NOT = { is_same_value = root }
				is_disabled = no
			} } } }
			remove_global_flag = ag_epsilon_obelisk_working
			from.owner = { country_event = { id = ag_epsilon.42 } }
		}
		if = {
			limit = { exists = event_target:ag_target_megastructure_owner }
			switch = {
				trigger = has_ship_flag
				ag_epsilon_obelisk_1 = { solar_system = { spawn_megastructure = {
					type = ag_epsilon_obelisk_1
					coords_from = event_target:ag_epsilon_ring_6
					owner = event_target:ag_target_megastructure_owner
					init_effect = { set_megastructure_flag = ag_epsilon_obelisk_1 }
				} } }
				ag_epsilon_obelisk_2 = { solar_system = { spawn_megastructure = {
					type = ag_epsilon_obelisk_1
					coords_from = event_target:ag_epsilon_ring_10
					owner = event_target:ag_target_megastructure_owner
					init_effect = { set_megastructure_flag = ag_epsilon_obelisk_2 }
				} } }
				ag_epsilon_obelisk_3 = { solar_system = { spawn_megastructure = {
					type = ag_epsilon_obelisk_1
					coords_from = event_target:ag_epsilon_ring_2
					owner = event_target:ag_target_megastructure_owner
					init_effect = { set_megastructure_flag = ag_epsilon_obelisk_3 }
				} } }
			}
		}
		else = { switch = {
			trigger = has_ship_flag
			ag_epsilon_obelisk_1 = { solar_system = { spawn_megastructure = {
				type = ag_epsilon_obelisk_1
				coords_from = event_target:ag_epsilon_ring_6
				init_effect = { set_megastructure_flag = ag_epsilon_obelisk_1 }
			} } }
			ag_epsilon_obelisk_2 = { solar_system = { spawn_megastructure = {
				type = ag_epsilon_obelisk_1
				coords_from = event_target:ag_epsilon_ring_10
				init_effect = { set_megastructure_flag = ag_epsilon_obelisk_2 }
			} } }
			ag_epsilon_obelisk_3 = { solar_system = { spawn_megastructure = {
				type = ag_epsilon_obelisk_1
				coords_from = event_target:ag_epsilon_ring_2
				init_effect = { set_megastructure_flag = ag_epsilon_obelisk_3 }
			} } }
		} }
		delete_ship = this
	}
}

# Notification for all obelisks disabled.
country_event = {
	id = ag_epsilon.42
	title = "ag_epsilon.42.name"
	desc = "ag_epsilon.42.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	is_triggered_only = yes
	option = { name = "ag_epsilon.42.a" custom_tooltip = "ag_epsilon.42.a.tooltip" }
}

# Special project completed, station actived,
country_event = {
	id = ag_epsilon.51
	title = "ag_epsilon.51.name"
	desc = "ag_epsilon.51.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = {
		name = "ag_epsilon.51.a"
		hidden_effect = { country_event = { id = ag_epsilon.52 } }
	}
	option = {
		name = "ag_epsilon.51.b"
		hidden_effect = { country_event = { id = ag_epsilon.53 } }
	}
}

# Communication with ancient AI.
country_event = {
	id = ag_epsilon.52
	title = "ag_epsilon.52.name"
	desc = "ag_epsilon.52.desc"
	
	is_triggered_only = yes
	
	diplomatic = yes
	force_open = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}

	option = {
		name = "ag_epsilon.52.a"
		response_text = "ag_epsilon.52.a.response"
		hidden_effect = { country_event = { id = ag_epsilon.53 } }
	}
	option = {
		name = "ag_epsilon.52.b"
		response_text = "ag_epsilon.52.b.response"
		hidden_effect = { country_event = { id = ag_epsilon.53 } }
	}
}

# Ancient titan spawned.
country_event = {
	id = ag_epsilon.53
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		set_global_flag = ag_epsilon_guardian_awaken
		ag_create_ancient_guardian = {
			ag_country_name = "NAME_ag_ancient_epsilon_guardian"
			ag_country_type = ag_ancient_epsilon_guardian
		}
		last_created_country = {
			save_global_event_target_as = ag_ancient_epsilon_guardian_country
			set_country_flag = ag_ancient_epsilon_guardian_country
			ag_ancient_country_friendly_to_each_other = yes
			every_country = { limit = { NOR = { is_same_value = prev has_communications = prev } } establish_communications_no_message = prev }
			every_playable_country = {
				limit = {
					NOT = { is_same_value = event_target:ag_ancient_epsilon_guardian_country }
					ag_is_ancient_country = no is_fallen_empire = no
					NOT = { is_hostile = event_target:ag_ancient_epsilon_guardian_country }
				}
				set_faction_hostility = { target = event_target:ag_ancient_epsilon_guardian_country set_friendly = no set_neutral = no set_hostile = yes }
			}
		}
		create_fleet = {
			name = "NAME_ag_epsilon_titan_station_fleet"
			settings = { spawn_debris = no is_boss = yes }
			effect = {
				set_fleet_flag = ag_epsilon_titan_hostile_fleet
				set_owner = event_target:ag_ancient_epsilon_guardian_country
				create_ship = {
					name = "NAME_ag_epsilon_titan_ship"
					design = "NAME_ag_epsilon_titan_station_hostile"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = event }
					}
				}
				set_location = { target = event_target:ag_ancient_epsilon_star distance = -1 angle = 0 }
		    }
		}
		event_target:ag_ancient_epsilon_star = {
			ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
			solar_system = {
				if = {
					limit = { exists = starbase }
					every_fleet_in_system = {
						limit = {
							any_controlled_ship = { OR = {
								is_ship_class = shipclass_mining_station
								is_ship_class = shipclass_research_station
								is_ship_class = shipclass_observation_station
							} }
						}
						destroy_fleet = { target = this kill_leader = yes destroy_template = yes }
					}
					starbase.fleet = { destroy_fleet = { target = this kill_leader = yes destroy_template = yes } }
				}
				random_system_megastructure = {
					limit = { is_megastructure_type = ag_epsilon_titan_station_actived_3 }
					remove_megastructure = this
				}
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_epsilon_titan_shield_object_orange }
					destroy_ambient_object = this
				}
			}
		}
		from = { country_event = { id = ag_epsilon.54 } }
		every_playable_country = {
			limit = { NOT = { is_same_value = from } }
			country_event = { id = ag_epsilon.55 }
		}
	}
}

# Notification for ancient titan spawn.
country_event = {
	id = ag_epsilon.54
	title = "ag_epsilon.54.name"
	desc = "ag_epsilon.54.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_fleet_evil_room }
	show_sound = event_red_alert
	is_triggered_only = yes
	option = { name = "ag_epsilon.54.a" }
}
country_event = {
	id = ag_epsilon.55
	title = "ag_epsilon.55.name"
	desc = "ag_epsilon.55.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_yellow_alert
	is_triggered_only = yes
	option = { name = "ag_epsilon.55.a" }
}

# on_ship_disabled, Disable ancient titan(station mode), spawn ancient titan ship mode.
ship_event = {
	id = ag_epsilon.61
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_size = ag_epsilon_titan_station_hostile
		exists = owner
		owner = { is_country_type = ag_ancient_epsilon_guardian }
	}
	immediate = {
		create_fleet = {
			name = "NAME_ag_epsilon_titan_fleet"
			settings = {
		        spawn_debris = no
			    is_boss = yes
		    }
			effect = {
				set_fleet_flag = ag_epsilon_titan_hostile_fleet
				set_owner = event_target:ag_ancient_epsilon_guardian_country
				save_global_event_target_as = ag_ancient_epsilon_titan_fleet
				set_fleet_bombardment_stance = ag_epsilon_purge_bombardment
				create_ship = {
					name = "NAME_ag_epsilon_titan_ship"
					design = "NAME_ag_epsilon_titan_hostile"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = event }
					}
				}
				set_location = { target = event_target:ag_ancient_epsilon_star distance = -1 angle = 0 }

				set_fleet_stance = aggressive
				set_aggro_range = 1000
				set_aggro_range_measure_from = self

				fleet_event = { id = ag_epsilon.62 days = 10 random = 10 }
				fleet_event = { id = ag_epsilon.623 days = 1800 random = 360 }
				ag_spawn_explosion_effect = { ag_color = red ag_scale = xl }
		    }
		}
		delete_ship = this
	}
}

# Ancient titan's actions.
fleet_event = {
	id = ag_epsilon.62
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = this
		has_fleet_flag = ag_epsilon_titan_hostile_fleet
		exists = owner
		owner = { is_country_type = ag_ancient_epsilon_guardian }
	}
	immediate = {
		if = {
			limit = { is_in_combat = no }
			clear_orders = yes
			clear_fleet_actions = this 
			ag_epsilon_titan_action = yes
		}
		else = { fleet_event = { id = ag_epsilon.62 days = 10 random = 10 } }
	}
}

# on_fleet_auto_move_arrival, Ancient titan actions: planetary bombardment/return to epsilon area
country_event = {
	id = ag_epsilon.621
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_country_type = ag_ancient_epsilon_guardian
		NOT = { has_country_flag = ag_epsilon_621_fired }
		exists = fromfrom
	}
	immediate = {
		set_timed_country_flag = { flag = ag_epsilon_621_fired days = 2 }
		if = {
			limit = { fromfrom = { exists = owner owner = { is_hostile = root } } }
			fromfrom = {
				add_planet_devastation = 55
				ag_spawn_explosion_effect = { ag_color = red ag_scale = l }
				prev = { clear_orders = yes clear_fleet_actions = this }
			}
			from = { fleet_event = { id = ag_epsilon.62 days = 90 random = 90 } }
		}
		else = { if = {
			limit = { fromfrom = { is_star = yes } }
			from = { fleet_event = { id = ag_epsilon.62 days = 5 random = 5 } }
		} }
	}
}

# on_entering_system_fleet, Ancient titan actions: attack psionic beacon
fleet_event = {
	id = ag_epsilon.622
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = { is_country_type = ag_ancient_epsilon_guardian }
		from = { has_star_flag = ag_epsilon_titan_target }
	}
	immediate = {
		if = {
			limit = { from = { any_fleet_in_system = { has_fleet_flag = ag_epsilon_titan_target_station_fleet } } }
			from = { random_fleet_in_system = {
				limit = { has_fleet_flag = ag_epsilon_titan_target_station_fleet }
				root = {
					clear_orders = yes
					clear_fleet_actions = this
					auto_follow_fleet = { target = prev attack_fleet = yes }
				}
			} }
		}
		else = {
			from = { remove_star_flag = ag_epsilon_titan_target }
			if = { limit = { has_global_flag = ag_epsilon_titan_returning } remove_global_flag = ag_epsilon_titan_returning }
			clear_orders = yes
			clear_fleet_actions = this
			fleet_event = { id = ag_epsilon.62 days = 10 random = 10 }
		}
	}
}

# Check fleet state
fleet_event = {
	id = ag_epsilon.623
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { is_fleet_idle = yes NAND = { exists = solar_system solar_system = { has_star_flag = ag_ancient_epsilon_system } } }
			clear_orders = yes
			clear_fleet_actions = this
			fleet_event = { id = ag_epsilon.62 days = 1 }
		}
		else = { fleet_event = { id = ag_epsilon.623 days = 360 random = 360 } }
	}
}

# on_entering_system_fleet, Ancient titan disable cloaking.
fleet_event = {
	id = ag_epsilon.624
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = owner owner = { is_country_type = ag_ancient_epsilon_guardian } }
	immediate = { ag_clear_ship_cloaking_effect = yes }
}

# on_ship_disabled, Disable ancient titan(ship mode), decide to destroy it or revive it.
ship_event = {
	id = ag_epsilon.63
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_size = ag_epsilon_titan_hostile
		exists = owner
		owner = { is_country_type = ag_ancient_epsilon_guardian }
	}
	immediate = {
		random_list = {
			0 = {
				modifier = { add = 200 solar_system = { any_fleet_in_system = { has_fleet_flag = ag_epsilon_titan_killer_fleet exists = controller controller = { is_same_value = root.from.controller } } } }
				modifier = { factor = 0.5 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 1 } } }
				modifier = { factor = 0.5 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
				modifier = { factor = 0.5 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } }
				modifier = { add = 1000 from.controller = { OR = { is_country_type = ag_zeta_crisis_country is_country_type = ag_zeta_crisis_relic_country } } }
				from.controller = {
					country_event = { id = ag_epsilon.66 }
					save_event_target_as = ag_ancient_epsilon_guardian_killer
					add_threat = { who = this amount = 50 }
				}
				every_country = {
					limit = { NOT = { is_same_value = root.from.controller } }
					country_event = { id = ag_epsilon.67 }
				}
				every_country = {
					if = {
						limit = { has_special_project = "ag_epsilon_titan_project_1" }
						abort_special_project = { type = "ag_epsilon_titan_project_1" }
					}
					if = {
						limit = { has_special_project = "ag_epsilon_titan_project_2" }
						abort_special_project = { type = "ag_epsilon_titan_project_2" }
					}
					if = {
						limit = { has_special_project = "ag_epsilon_titan_project_3" }
						abort_special_project = { type = "ag_epsilon_titan_project_3" }
					}
					if = {
						limit = { has_special_project = "ag_epsilon_titan_project_4" }
						abort_special_project = { type = "ag_epsilon_titan_project_4" }
					}
					if = {
						limit = { has_event_chain = "ag_epsilon_titan_chain" }
						end_event_chain = "ag_epsilon_titan_chain"
					}
					if = {
						limit = { has_modifier = "ag_ancient_epsilon_weakness" }
						remove_modifier = "ag_ancient_epsilon_weakness"
					}
					if = {
						limit = { has_country_flag = ag_has_ancient_epsilon_weakness }
						remove_country_flag = ag_has_ancient_epsilon_weakness
					}
					if = {
						limit = { has_special_project = "ag_find_ancient_epsilon_weakness" }
						abort_special_project = {
							type = "ag_find_ancient_epsilon_weakness"
							location = capital_scope
						}
					}
				}
				set_global_flag = ag_epsilon_titan_destroyed
				create_ambient_object = { type = ag_player_epsilon_titan_debris_object }
				last_created_ambient_object = {
					set_location = { target = root distance = -1 angle = 0 }
					set_ambient_object_flag = ag_epsilon_titan_debris_object
				}
				solar_system = { set_star_flag = ag_epsilon_titan_debris_system }
				destroy_ship = this
			}
			100 = {
				modifier = { factor = 0.5 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 0 } } }
				modifier = { add = -100 from.controller = { OR = { is_country_type = ag_zeta_crisis_country is_country_type = ag_zeta_crisis_relic_country } } }
				from.controller = { if = {
					limit = { NOT = { has_country_flag = ag_epsilon_64_fired } }
					set_country_flag = ag_epsilon_64_fired
					country_event = { id = ag_epsilon.64 }
				} }
				repair_ship = yes
				set_disabled = no
				if = {
					limit = { NOR = {
						solar_system = { any_fleet_in_system = { has_fleet_flag = ag_epsilon_titan_killer_fleet } }
						from.controller = { OR = { is_country_type = ag_zeta_crisis_country is_country_type = ag_zeta_crisis_relic_country } }
					} }
					ag_spawn_invincible_effect = yes
				}
				else = { ag_spawn_extra_lives_effect = yes }
				remove_modifier = "ag_epsilon_titan_power_alt"
				if = {
					limit = { NOT = { solar_system = { any_fleet_in_system = { has_fleet_flag = ag_epsilon_titan_killer_fleet exists = controller controller = { is_same_value = root.from.controller } } } } }
					random_list = {
						25 = { add_modifier = { modifier = "ag_epsilon_titan_power_alt" days = 20 } }
						25 = { add_modifier = { modifier = "ag_epsilon_titan_power_alt" days = 16 } }
						25 = { add_modifier = { modifier = "ag_epsilon_titan_power_alt" days = 12 } }
						25 = { add_modifier = { modifier = "ag_epsilon_titan_power_alt" days = 8 } }
					}
					reroll_random = yes
					fleet = { if = {
						limit = { OR = { check_variable = { which = ag_fleet_combat_days value > 29 } check_variable = { which = ag_disabled_times value > 127 } } }
						root = { if = { limit = { has_ship_flag = ag_ship_penetration_mult_locked } remove_ship_flag = ag_ship_penetration_mult_locked } }
						solar_system = { every_fleet_in_system = {
							limit = { exists = controller controller = { is_hostile = root.owner } NOT = { has_fleet_flag = ag_epsilon_fleet_debuff_active } }
							set_timed_fleet_flag = { flag = ag_epsilon_fleet_debuff_active days = 31 }
							every_controlled_ship = {
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_shield_damage" } }
									set_timed_ship_flag = { flag = ag_ship_shield_damage_mult_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_shield_damage days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_shield_damage_mult| }
								}
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_armor_damage" } }
									set_timed_ship_flag = { flag = ag_ship_armor_damage_mult_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_armor_damage days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_armor_damage_mult| }
								}
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_hull_damage" } }
									set_timed_ship_flag = { flag = ag_ship_hull_damage_mult_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_hull_damage days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_hull_damage_mult| }
								}
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_shield_regen_perc" } }
									set_timed_ship_flag = { flag = ag_ship_shield_regen_add_perc_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_shield_regen_perc days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_shield_regen_add_perc| }
								}
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_shield_regen_static" } }
									set_timed_ship_flag = { flag = ag_ship_shield_regen_add_static_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_shield_regen_static days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_shield_regen_add_static| }
								}
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_armor_regen_perc" } }
									set_timed_ship_flag = { flag = ag_ship_armor_regen_add_perc_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_armor_regen_perc days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_armor_regen_add_perc| }
								}
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_armor_regen_static" } }
									set_timed_ship_flag = { flag = ag_ship_armor_regen_add_static_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_armor_regen_static days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_armor_regen_add_static| }
								}
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_hull_regen_perc" } }
									set_timed_ship_flag = { flag = ag_ship_hull_regen_add_perc_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_hull_regen_perc days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_hull_regen_add_perc| }
								}
								if = {
									limit = { NOT = { has_modifier = "ag_epsilon_titan_system_debuff_hull_regen_static" } }
									set_timed_ship_flag = { flag = ag_ship_hull_regen_add_static_locked days = 31 }
									add_modifier = { modifier = ag_epsilon_titan_system_debuff_hull_regen_static days = 30 multiplier = value:ag_special_modifier_debuff|ag_modifier|ship_hull_regen_add_static| }
								}
								random_list = {
									10 = { ag_reduce_hp = { ag_value = value:ag_subtract_trigger|ag_which|has_hp|ag_value|1| } }
									10 = { ag_reduce_hp = { ag_value = value:ag_subtract_trigger|ag_which|has_hp|ag_value|128| } }
									10 = { ag_reduce_hp = { ag_value = value:ag_subtract_trigger|ag_which|has_hp|ag_value|1024| } }
									10 = { }
								}
								reroll_random = yes
							}
						} }
					} }
				}
				else = {
					remove_modifier = "ag_epsilon_titan_hostile_revive_debuff"
					add_modifier = { modifier = "ag_epsilon_titan_hostile_revive_debuff" days = 8 }
				}
			}
		}
		reroll_random = yes
	}
}

# Notification for first revive of ancient ship, give chance to retreat.
country_event = {
	id = ag_epsilon.64
	title = "ag_epsilon.64.name"
	desc = "ag_epsilon.64.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_yellow_alert
	location = from
	is_triggered_only = yes
	
	immediate = { from.solar_system = {
		random_neighbor_system = { save_event_target_as = ag_target_system }
	} }
	
	option = {
		name = "ag_epsilon.64.a"
		custom_tooltip = "ag_epsilon.64.a.tooltip"
		hidden_effect = {
			from.solar_system = { every_fleet_in_system = {
				limit = { exists = owner owner = { is_same_value = root } }
				set_location = event_target:ag_target_system.star
				clear_orders = yes
				clear_fleet_actions = this
			} }
		}
	}
	option = { name = "ag_epsilon.64.b" }
}

# Notification, ancient ship moving.
country_event = {
	id = ag_epsilon.65
	title = "ag_epsilon.65.name"
	desc = {
		trigger = { NOT = { has_global_flag = ag_epsilon_titan_returning } }
		text = "ag_epsilon.65.a.desc"
	}
	desc = {
		trigger = { has_global_flag = ag_epsilon_titan_returning }
		text = "ag_epsilon.65.b.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ship_in_orbit_room }
	show_sound = event_sensor_ping
	location = event_target:ag_ancient_epsilon_titan_target.star
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = ag_ban_epsilon_65 }
		OR = {
			exists = event_target:ag_ancient_epsilon_titan_target
			has_global_flag = ag_epsilon_titan_returning
		}
	}
	after = { hidden_effect = {
		if = {
			limit = { exists = event_target:ag_ancient_epsilon_titan_target }
			clear_global_event_target = ag_ancient_epsilon_titan_target
		}
		if = {
			limit = { has_global_flag = ag_epsilon_titan_returning }
			remove_global_flag = ag_epsilon_titan_returning
		}
	} }
	option = { name = "ag_epsilon.65.a" }
	option = { name = "ag_epsilon.65.b" hidden_effect = { set_country_flag = ag_ban_epsilon_65 } }
}

# Notification: Ancient Ship Destroyed, for killer
country_event = {
	id = ag_epsilon.66
	title = "ag_epsilon.66.name"
	desc = "ag_epsilon.66.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	location = fromfromfrom.solar_system.star
	is_triggered_only = yes
	trigger = { NOT = { has_country_flag = ag_epsilon_66_fired } }
	immediate = { set_country_flag = ag_epsilon_66_fired }
	option = { name = "ag_epsilon.66.a" }
}
# Notification: Ancient Ship Destroyed, for other
country_event = {
	id = ag_epsilon.67
	title = "ag_epsilon.67.name"
	desc = "ag_epsilon.67.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = fromfromfrom.solar_system.star
	is_triggered_only = yes
	trigger = { NOT = { has_country_flag = ag_epsilon_67_fired } }
	immediate = { set_country_flag = ag_epsilon_67_fired }
	option = { name = "ag_epsilon.67.a" }
}

# Notification for ancient titan destroyed planet.
planet_event = {
	id = ag_epsilon.68
	title = "ag_epsilon.68.name"
	desc = "ag_epsilon.68.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_burning_settlement_room }
	show_sound = event_super_explosion
	location = root
	is_triggered_only = yes
	trigger = { has_orbital_bombardment_stance = ag_epsilon_purge_bombardment }
	immediate = {
		solar_system = {
			every_fleet_in_system = {
				limit = { exists = owner owner = { is_country_type = ag_ancient_epsilon_guardian } }
				clear_orders = yes
				clear_fleet_actions = this
				fleet_event = { id = ag_epsilon.62 days = 5 random = 5 }
			}
		}
	}
	option = { name = "ag_epsilon.68.a" }
	option = { name = "ag_epsilon.68.b" }
}

# on_ship_destroyed_victim, Ancient titan destroy psionic beacon, reset target.
country_event = {
	id = ag_epsilon.69
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		fromfrom = { is_ship_size = ag_psionic_beacon }
		fromfromfrom = { is_ship_size = ag_epsilon_titan_hostile }
	}

	immediate = {
		fromfromfrom.fleet = {
			clear_orders = yes
			clear_fleet_actions = this
			fleet_event = { id = ag_epsilon.62 days = 5 random = 5 }
		}
		fromfrom.solar_system = {
			if = {
				limit = { NOT = { any_ship_in_system = {
					exists = this
					is_ship_size = ag_psionic_beacon
					NOT = { is_same_value = root.fromfrom }
				} } }
				remove_star_flag = ag_epsilon_titan_target
			}
		}
	}
}

# on_yearly_pulse, Failsafe for unexpected bugs or events make Epsilon Titan stoped.
event = {
	id = ag_epsilon.70
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = event_target:ag_ancient_epsilon_guardian_country
		event_target:ag_ancient_epsilon_guardian_country = { any_controlled_ship = {
			is_ship_size = ag_epsilon_titan_hostile
			fleet = { is_fleet_idle = yes }
		} }
	}
	immediate = {
		event_target:ag_ancient_epsilon_guardian_country = { every_controlled_fleet = {
			limit = { is_fleet_idle = yes any_controlled_ship = { is_ship_size = ag_epsilon_titan_hostile } }
			clear_orders = yes
			clear_fleet_actions = this
			fleet_event = { id = ag_epsilon.62 days = 5 random = 5 }
		} }
	}
}

# Give psionic beacon's tech after battle in Epsilon Area
country_event = {
	id = ag_epsilon.71
	title = "ag_epsilon.71.name"
	desc = "ag_epsilon.71.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_yellow_alert
	location = capital_scope

	mean_time_to_happen = { months = 10 }
	trigger = {
		has_country_flag = ag_epsilon_64_fired
		NOT = { has_country_flag = ag_epsilon_71_fired }
	}

	immediate = { set_country_flag = ag_epsilon_71_fired }
	option = {
		name = "ag_epsilon.71.a"
		ag_add_research_option = { ag_tech = tech_ag_epsilon_station_1 }
		begin_event_chain = { event_chain = "ag_epsilon_titan_chain" target = root }
		event_target:ag_epsilon_ring_2 = { ag_create_epsilon_ringworld_project = yes }
		event_target:ag_epsilon_ring_6 = { ag_create_epsilon_ringworld_project = yes }
		event_target:ag_epsilon_ring_10 = { ag_create_epsilon_ringworld_project = yes }
		locked_random_list = {
			10 = { event_target:ag_ancient_epsilon_shielded_world = { ag_create_epsilon_ringworld_project = yes } }
			10 = { event_target:ag_ancient_epsilon_shielded_world_2 = { ag_create_epsilon_ringworld_project = yes } }
			10 = { event_target:ag_ancient_epsilon_shielded_world_3 = { ag_create_epsilon_ringworld_project = yes } }
		}
	}
	option = {
		name = "ag_epsilon.71.b"
		add_resource = { influence = @ag_end_event_influence_medium }
	}
}

# on_tech_increased, Notification for researched psionic beacon.
country_event = {
	id = ag_epsilon.72
	title = "ag_epsilon.72.name"
	desc = "ag_epsilon.72.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	location = capital_scope
	is_triggered_only = yes
	trigger = { last_increased_tech = tech_ag_epsilon_station_1 }
	option = { name = "ag_epsilon.72.a" }
}

# Collected ancient data
ship_event = {
	id = ag_epsilon.73
	title = "ag_epsilon.73.name"
	desc = "ag_epsilon.73.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ship_in_orbit_room }
	show_sound = event_default
	location = root
	is_triggered_only = yes
	option = {
		name = "ag_epsilon.73.a"
		owner = {
			add_event_chain_counter = {
				event_chain = "ag_epsilon_titan_chain"
				counter = ag_ancient_data
				amount = 1
			}
		}
		hidden_effect = { owner = { if = {
			limit = { has_completed_event_chain_counter = { event_chain = "ag_epsilon_titan_chain" counter = ag_ancient_data } }
			country_event = { id = ag_epsilon.74 days = 5 random = 5 }
		} } }
	}
}
country_event = {
	id = ag_epsilon.74
	title = "ag_epsilon.74.name"
	desc = "ag_epsilon.74.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	location = capital_scope
	is_triggered_only = yes
	immediate = { set_country_flag = ag_epsilon_74_fired }
	option = {
		name = "ag_epsilon.74.a"
		end_event_chain = "ag_epsilon_titan_chain"
	}
}

# on_tech_increased, Notification for researched suppression station
country_event = {
	id = ag_epsilon.75
	title = "ag_epsilon.75.name"
	desc = "ag_epsilon.75.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	location = capital_scope
	is_triggered_only = yes
	trigger = { last_increased_tech = tech_ag_epsilon_station_2 }
	option = { name = "ag_epsilon.75.a" }
}

# Notification for suppression station build completed first time.
country_event = {
	id = ag_epsilon.76
	title = "ag_epsilon.76.name"
	desc = "ag_epsilon.76.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_upgrade_frame
	location = capital_scope
	is_triggered_only = yes
	immediate = {
		event_target:ag_ancient_epsilon_guardian_country = { random_owned_ship = {
			limit = { is_ship_size = ag_epsilon_titan_hostile }
			save_event_target_as = ag_target_ship
		} }
	}
	option = { name = "ag_epsilon.76.a" }
}

# Research weakness if lost too many ships, fallen empire defensive system.
country_event = {
	id = ag_epsilon.81
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		from = {
			is_country_type = ag_epsilon_fallen_empire_guardian
			has_country_flag = ag_epsilon_fallen_empire_guardian
			is_same_value = event_target:ag_epsilon_fallen_empire_guardian
		}
		is_ai = no
		NOR = {
			has_global_flag = ag_epsilon_fallen_empire_guardian_destroyed
			has_country_flag = ag_has_ancient_epsilon_fallen_empire_weakness
		}
	}
	
	immediate = {
		if = {
			limit = { check_variable = { which = ag_ancient_epsilon_fallen_empire_guardian_killcount value < 1 } }
			set_variable = { which = ag_ancient_epsilon_fallen_empire_guardian_killcount value = 1 }
		}
		fromfrom = { root = { ag_hostile_kill_counter = { ag_variable_name = ag_ancient_epsilon_fallen_empire_guardian_killcount } } }
		if = {
			limit = {
				check_variable = { which = ag_ancient_epsilon_fallen_empire_guardian_killcount value > 512 }
				NOR = {
					has_global_flag = ag_epsilon_fallen_empire_guardian_destroyed
					has_country_flag = ag_has_ancient_epsilon_fallen_empire_weakness
				}
			}
			set_variable = {
				which = ag_ancient_epsilon_fallen_empire_guardian_killcount
				value = 512
			}
			random_list = {
				25 = {
					country_event = { id = ag_epsilon.82 days = 30 random = 30 }
					set_country_flag = ag_has_ancient_epsilon_fallen_empire_weakness
				}
				75 = { }
			}
		}
	}
}
country_event = {
	id = ag_epsilon.82
	title = "ag_epsilon.82.name"
	desc = "ag_epsilon.82.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_sabotaged_ship_room }
	show_sound = event_yellow_alert
	
	is_triggered_only = yes

	trigger = { NOT = { has_global_flag = ag_epsilon_fallen_empire_guardian_destroyed } }
	
	option = {
		name = "ag_epsilon.82.a"
		enable_special_project = {
			name = "ag_find_ancient_epsilon_fallen_empire_weakness"
			location = capital_scope
			owner = root
		}
	}
	option = {
		name = "ag_epsilon.82.b"
		add_resource = { influence = @ag_end_event_influence_large }
	}
}
country_event = {
	id = ag_epsilon.83
	title = "ag_epsilon.83.name"
	desc = "ag_epsilon.83.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	
	is_triggered_only = yes

	option = {
		name = "ag_epsilon.83.a"
		if = {
			limit = { NOT = { has_modifier = ag_ancient_epsilon_fallen_empire_weakness } }
			add_modifier = { modifier = ag_ancient_epsilon_fallen_empire_weakness days = -1 }
		}
	}
}

# Research weakness if lost too many ships, obelisk.
country_event = {
	id = ag_epsilon.84
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		from = {
			is_country_type = ag_ancient_epsilon_obelisk_guardian
			has_country_flag = ag_ancient_epsilon_obelisk_guardian
			is_same_value = event_target:ag_ancient_epsilon_obelisk_guardian
		}
		is_ai = no
		NOR = {
			has_global_flag = ag_epsilon_titan_station_outer_shield_disabled
			has_country_flag = ag_has_ancient_epsilon_obelisk_weakness
		}
	}
	
	immediate = {
		if = {
			limit = { check_variable = { which = ag_ancient_epsilon_obelisk_guardian_killcount value < 1 } }
			set_variable = { which = ag_ancient_epsilon_obelisk_guardian_killcount value = 1 }
		}
		fromfrom = { root = { ag_hostile_kill_counter = { ag_variable_name = ag_ancient_epsilon_obelisk_guardian_killcount } } }
		if = {
			limit = {
				check_variable = { which = ag_ancient_epsilon_obelisk_guardian_killcount value > 512 }
				NOR = {
					has_global_flag = ag_epsilon_titan_station_outer_shield_disabled
					has_country_flag = ag_has_ancient_epsilon_obelisk_weakness
				}
			}
			set_variable = {
				which = ag_ancient_epsilon_obelisk_guardian_killcount
				value = 512
			}
			random_list = {
				25 = {
					country_event = { id = ag_epsilon.85 days = 30 random = 30 }
					set_country_flag = ag_has_ancient_epsilon_obelisk_weakness
				}
				75 = { }
			}
		}
	}
}
country_event = {
	id = ag_epsilon.85
	title = "ag_epsilon.85.name"
	desc = "ag_epsilon.85.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_sabotaged_ship_room }
	show_sound = event_yellow_alert
	
	is_triggered_only = yes

	trigger = { NOT = { has_global_flag = ag_epsilon_titan_station_outer_shield_disabled } }
	
	option = {
		name = "ag_epsilon.85.a"
		enable_special_project = {
			name = "ag_find_ancient_epsilon_obelisk_weakness"
			location = capital_scope
			owner = root
		}
	}
	option = {
		name = "ag_epsilon.85.b"
		add_resource = { influence = @ag_end_event_influence_large }
	}
}
country_event = {
	id = ag_epsilon.86
	title = "ag_epsilon.86.name"
	desc = "ag_epsilon.86.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	
	is_triggered_only = yes

	option = {
		name = "ag_epsilon.86.a"
		if = {
			limit = { NOT = { has_modifier = ag_ancient_epsilon_obelisk_weakness } }
			add_modifier = { modifier = ag_ancient_epsilon_obelisk_weakness days = -1 }
		}
	}
}

# Research weakness if lost too many ships, ancient titan.
country_event = {
	id = ag_epsilon.87
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		from = {
			is_country_type = ag_ancient_epsilon_guardian
			has_country_flag = ag_ancient_epsilon_guardian_country
			is_same_value = event_target:ag_ancient_epsilon_guardian_country
		}
		is_ai = no
		NOR = {
			has_global_flag = ag_epsilon_titan_destroyed
			has_country_flag = ag_has_ancient_epsilon_weakness
		}
	}
	
	immediate = {
		if = {
			limit = { check_variable = { which = ag_ancient_epsilon_guardian_killcount value < 1 } }
			set_variable = { which = ag_ancient_epsilon_guardian_killcount value = 1 }
		}
		fromfrom = { root = { ag_hostile_kill_counter = { ag_variable_name = ag_ancient_epsilon_guardian_killcount } } }
		if = {
			limit = {
				check_variable = { which = ag_ancient_epsilon_guardian_killcount value > 512 }
				NOR = {
					has_global_flag = ag_epsilon_titan_destroyed
					has_country_flag = ag_has_ancient_epsilon_weakness
				}
			}
			set_variable = {
				which = ag_ancient_epsilon_guardian_killcount
				value = 512
			}
			random_list = {
				25 = {
					country_event = { id = ag_epsilon.88 days = 30 random = 30 }
					set_country_flag = ag_has_ancient_epsilon_weakness
				}
				75 = { }
			}
		}
	}
}
country_event = {
	id = ag_epsilon.88
	title = "ag_epsilon.88.name"
	desc = "ag_epsilon.88.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_sabotaged_ship_room }
	show_sound = event_yellow_alert
	
	is_triggered_only = yes

	trigger = { NOT = { has_global_flag = ag_epsilon_titan_destroyed } }
	
	option = {
		name = "ag_epsilon.88.a"
		enable_special_project = {
			name = "ag_find_ancient_epsilon_weakness"
			location = capital_scope
			owner = root
		}
	}
	option = {
		name = "ag_epsilon.88.b"
		add_resource = { influence = @ag_end_event_influence_large }
	}
}
country_event = {
	id = ag_epsilon.89
	title = "ag_epsilon.89.name"
	desc = "ag_epsilon.89.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	
	is_triggered_only = yes

	option = {
		name = "ag_epsilon.89.a"
		if = {
			limit = { NOT = { has_modifier = ag_ancient_epsilon_weakness } }
			add_modifier = { modifier = ag_ancient_epsilon_weakness days = -1 }
		}
	}
}

# Reward: Ancient Ship
country_event = {
	id = ag_epsilon.91
	title = "ag_epsilon.91.name"
	desc = "ag_epsilon.91.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_finding_loot
	location = event_target:ag_ancient_epsilon_star
	is_triggered_only = yes
	
	option = {
		name = "ag_epsilon.91.a"
		ag_add_research_option = { ag_tech = tech_ag_epsilon_titan }
	}
}

# Construction Sections
country_event = {
	id = ag_epsilon.92
	title = "ag_epsilon.92.name"
	desc = {
		trigger = { NOT = { has_country_flag = ag_known_construction_section } }
		text = "ag_epsilon.92.a.desc"
	}
	desc = {
		trigger = { has_country_flag = ag_known_construction_section }
		text = "ag_epsilon.92.b.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_finding_loot
	location = event_target:ag_ancient_epsilon_star
	is_triggered_only = yes
	
	immediate = {
		event_target:ag_ancient_epsilon_shielded_world = { solar_system = { random_system_planet = {
			limit = { has_planet_flag = ag_ancient_construction_section_0 }
			save_event_target_as = ag_ancient_construction_section_loc
		} } }
	}
	
	option = {
		name = "ag_epsilon.92.a"
		enable_special_project = {
			name = "ag_epsilon_construction_section"
			location = event_target:ag_ancient_construction_section_loc
			owner = root
		}
		ai_chance = { factor = 1000 }
	}
	option = {
		name = "ag_epsilon.92.b"
		add_resource = { influence = @ag_end_event_influence_medium }
		ai_chance = { factor = 0 }
	}
}
country_event = {
	id = ag_epsilon.93
	title = "ag_epsilon.93.name"
	desc = "ag_epsilon.93.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ringworld_room }
	show_sound = event_think_tank_build_complete
	location = from
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = ag_epsilon_construction_section_unlocked
		set_country_flag = ag_known_construction_section
		event_target:ag_ancient_epsilon_shielded_world = { solar_system = {
			ag_spawn_ancient_construction_section = yes
		} }
	}
	
	option = { name = "ag_epsilon.93.a" }
}

# Research project to unlock ancient titan.
# country_event = {
	# id = ag_epsilon.101
	# title = "ag_epsilon.101.name"
	# desc = "ag_epsilon.101.desc"
	# diplomatic = yes
	# custom_gui = "ag_ancient_event_window"
	# custom_gui_option = "ag_ancient_event_option"
	# picture_event_data = { room = ag_event_ancient_AI_room }
	# show_sound = event_mystic_reveal
	
	# mean_time_to_happen = {
		# years = @ag_event_reward_mtth
		# modifier = {
			# factor = 0.5
			# has_country_flag = ag_has_ancient_code
		# }
	# }
	
	# trigger = {
		# NOR = {
			# has_country_flag = ag_epsilon_ships_unlocked
			# has_country_flag = ag_epsilon_101_fired
		# }
		# any_controlled_ship = { is_ship_size = ag_epsilon_titan_0 }
		# exists = event_target:ag_ancient_epsilon_shielded_world
		# exists = event_target:ag_ancient_epsilon_shielded_world_2
		# exists = event_target:ag_ancient_epsilon_shielded_world_3
		# OR = {
			# event_target:ag_ancient_epsilon_shielded_world = {
				# exists = owner
				# owner = { is_same_value = root }
				# has_building = ag_epsilon_outpost_1
				# has_ground_combat = no
				# ag_has_researcher = yes
			# }
			# event_target:ag_ancient_epsilon_shielded_world_2 = {
				# exists = owner
				# owner = { is_same_value = root }
				# has_building = ag_epsilon_outpost_1
				# has_ground_combat = no
				# ag_has_researcher = yes
			# }
			# event_target:ag_ancient_epsilon_shielded_world_3 = {
				# exists = owner
				# owner = { is_same_value = root }
				# has_building = ag_epsilon_outpost_1
				# has_ground_combat = no
				# ag_has_researcher = yes
			# }
		# }
	# }
	
	# immediate = { set_country_flag = ag_epsilon_101_fired }
	
	# option = {
		# name = "ag_epsilon.101.a"
		# custom_tooltip = "ag_epsilon.101.a.tooltip"
		# hidden_effect = {
			# ag_give_research_project = { ag_project_id = @ag_epsilon_ship_unlock_project_id }
			# if = {
				# limit = { is_ai = yes }
				# country_event = { id = ag_epsilon.102 days = 1800 }
			# }
		# }
		# ai_chance = { factor = 1000 }
	# }
	# option = {
		# name = "ag_epsilon.101.b"
		# add_resource = { influence = @ag_end_event_influence_medium }
		# ai_chance = { factor = 0 }
	# }
# }
country_event = {
	id = ag_epsilon.102
	title = "ag_epsilon.102.name"
	desc = "ag_epsilon.102.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	immediate = {
		set_country_flag = ag_has_ancient_code
		country_event = { id = ag_epsilon.103 days = 5 random = 55 }
	}
	
	option = { name = "ag_epsilon.102.a" }
}

# Upgrade ships(Hidden)
country_event = {
    id = ag_epsilon.103
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { has_country_flag = ag_epsilon_ships_unlocked }
	
	immediate = {
		set_country_flag = ag_epsilon_103_fired
		if = {
			limit = { any_controlled_ship = { is_ship_size = ag_epsilon_titan_0 } }
			while = {
				limit = { any_controlled_ship = { is_ship_size = ag_epsilon_titan_0 } }
				random_controlled_ship = {
					limit = { is_ship_size = ag_epsilon_titan_0 }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
					fleet = {
						if = {
							limit = { exists = leader }
							leader = {
								save_global_event_target_as = ag_target_leader_on_fleet
								prev = { save_global_event_target_as = ag_target_fleet_swap }
								unassign_leader = this
							}
						}
						ag_create_epsilon_titan_player = { ag_unlock_ship = yes ag_owner = root ag_clone_disable_info = yes }
					}
					delete_ship = this
					if = {
						limit = { exists = event_target:ag_target_fleet_swap }
						event_target:ag_target_fleet_swap = {
							assign_leader = event_target:ag_target_leader_on_fleet
						}
						clear_global_event_target = ag_target_fleet_swap
						clear_global_event_target = ag_target_leader_on_fleet
					}
				}
			}
		}
	}
}

# Build Ancient Titan
# Ancient Titan, stage 1/4
country_event = {
	id = ag_epsilon.111
	title = "ag_epsilon.111.name"
	desc = "ag_epsilon.111.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_ringworld_build_start
	location = fromfromfrom
	is_triggered_only = yes
	option = { name = "ag_epsilon.111.a" }
	option = {
		name = "ag_auto_upgrade"
		trigger = { fromfromfrom = { NOT = { has_megastructure_flag = ag_auto_upgrade_megastructure } } }
		ag_set_auto_upgrade_megastructure = yes
	}
}
# Ancient Titan, stage 2/4
country_event = {
	id = ag_epsilon.112
	title = "ag_epsilon.112.name"
	desc = "ag_epsilon.112.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_dyson_sphere_build_upgrade_frame
	location = fromfromfrom
	is_triggered_only = yes
	option = { name = "ag_epsilon.112.a" }
	option = {
		name = "ag_auto_upgrade"
		trigger = { fromfromfrom = { NOT = { has_megastructure_flag = ag_auto_upgrade_megastructure } } }
		ag_set_auto_upgrade_megastructure = yes
	}
}
# Ancient Titan, stage 3/4
country_event = {
	id = ag_epsilon.113
	title = "ag_epsilon.113.name"
	desc = "ag_epsilon.113.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_dyson_sphere_build_upgrade_frame
	location = fromfromfrom
	is_triggered_only = yes
	option = { name = "ag_epsilon.113.a" }
	option = {
		name = "ag_auto_upgrade"
		trigger = { fromfromfrom = { NOT = { has_megastructure_flag = ag_auto_upgrade_megastructure } } }
		ag_set_auto_upgrade_megastructure = yes
	}
}
# Ancient Titan, stage 4/4
country_event = {
	id = ag_epsilon.114
	title = "ag_epsilon.114.name"
	desc = "ag_epsilon.114.desc"
	inline_script = "events/ag_ancient_titan_built_options"
}
# Ancient Titan, stage 1/4 (others)
country_event = {
	id = ag_epsilon.115
	title = "ag_epsilon.115.name"
	desc = "ag_epsilon.115.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_mega_structure_other_empire_build_complete
	location = fromfromfrom
	is_triggered_only = yes
	option = { name = "ag_epsilon.115.a" }
}
# Ancient Titan, stage 4/4 (others)
country_event = {
	id = ag_epsilon.116
	title = "ag_epsilon.116.name"
	desc = "ag_epsilon.116.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_mega_structure_other_empire_build_complete
	is_triggered_only = yes
	inline_script = "events/ag_ancient_titan_built_other_options"
}

# Restore damaged ancient titan
country_event = {
	id = ag_epsilon.121
	title = "ag_epsilon.121.name"
	desc = "ag_epsilon.121.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_debris_room }
	show_sound = event_sensor_ping
	is_triggered_only = yes
	fire_only_once = yes
	
	# mean_time_to_happen = {
	# 	years = @ag_event_reward_mtth
	# 	modifier = { factor = 0.5 has_country_flag = ag_ancient_epsilon_data_flag }
	# 	modifier = {
	# 		factor = 0.5
	# 		has_country_flag = ag_known_construction_section
	# 	}
	# }
	
	trigger = {
		always = no
		is_ai = no
		NOT = { has_global_flag = ag_epsilon_titan_debris_restored }
		any_system_within_border = { has_star_flag = ag_epsilon_titan_debris_system }
		any_owned_planet = {
			is_under_colonization = no
			has_ground_combat = no
			is_occupied_flag = no
			OR = {
				is_same_value = event_target:ag_ancient_epsilon_shielded_world
				is_same_value = event_target:ag_ancient_epsilon_shielded_world_2
				is_same_value = event_target:ag_ancient_epsilon_shielded_world_3
			}
			has_building = ag_epsilon_outpost_1
			ag_has_researcher = yes
		}
	}
	immediate = {
		random_system = {
			limit = { has_star_flag = ag_epsilon_titan_debris_system }
			remove_star_flag = ag_epsilon_titan_debris_system
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = ag_epsilon_titan_debris_object
					is_ambient_object_type = ag_player_epsilon_titan_debris_object
				}
				save_event_target_as = ag_epsilon_titan_debris_object
			}
		}
	}
	option = {
		name = "ag_epsilon.121.a"
		enable_special_project = {
			name = ag_capture_epsilon_titan
			owner = root
			location = event_target:ag_epsilon_titan_debris_object
		}
	}
	option = {
		name = "ag_epsilon.121.b"
		add_resource = {
			sr_living_metal = 8000
			nanites = 4500
			sr_dark_matter = 500
			minor_artifacts = 25
		}
		locked_random_list = {
			80 = { }
			20 = {
				modifier = {
					factor = 0
					OR = {
						has_technology = tech_ag_ship_hull_upgrade
						has_tech_option = tech_ag_ship_hull_upgrade
					}
				}
				ag_add_research_option = { ag_tech = tech_ag_ship_hull_upgrade }
			}
		}
		hidden_effect = {
			event_target:ag_epsilon_titan_debris_object = {
				destroy_ambient_object = this
			}
		}
	}
}
ship_event = {
	id = ag_epsilon.122
	title = "ag_epsilon.122.name"
	desc = "ag_epsilon.122.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_dyson_sphere_build_complete
	is_triggered_only = yes

	immediate = {
		solar_system = {
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = ag_epsilon_titan_debris_object
					is_ambient_object_type = ag_player_epsilon_titan_debris_object
				}
				save_event_target_as = ag_taget_object
			}
		}
	}
	
	option = {
		name = "ag_epsilon.122.a"
		if = {
			limit = { owner = { NOT = { has_country_flag = ag_epsilon_ships_unlocked } } }
			ag_epsilon_titan_player_spawn = {
				ag_unlock_ship = no
				ag_owner = root.owner
				ag_location_target = event_target:ag_taget_object
			}
		}
		else = {
			ag_epsilon_titan_player_spawn = {
				ag_unlock_ship = yes
				ag_owner = root.owner
				ag_location_target = event_target:ag_taget_object
			}
		}
		hidden_effect = { event_target:ag_taget_object = { destroy_ambient_object = this } }
	}
}
ship_event = {
	id = ag_epsilon.123
	title = "ag_epsilon.123.name"
	desc = "ag_epsilon.123.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_dyson_sphere_build_complete
	is_triggered_only = yes
	
	option = { name = "ag_epsilon.123.a" }
}

# ag_on_system_selector_confirm, Starkiller destroy stars.
country_event = {
	id = ag_epsilon.131
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_country_flag = ag_enabled_epsilon_planet_killer_selector }
	immediate = {
		remove_country_flag = ag_enabled_epsilon_planet_killer_selector
		set_variable = { which = ag_temp_counter value = 0 }
		every_system = {
			limit = { has_star_flag = ag_system_selector_selected_system }
			remove_star_flag = ag_system_selector_selected_system
			set_star_flag = ag_epsilon_titan_star_killer_weapon_target@root
			root = { change_variable = { which = ag_temp_counter value = 1 } }
			random_system_planet = {
				limit = { is_primary_star = yes }
				ag_ancient_planet_killer_windup_star_effect = yes
				last_created_ambient_object = { set_ambient_object_flag = ag_ancient_star_killer_firing_effect@root }
			}
		}
		if = { limit = { check_variable = { which = ag_temp_counter value = 1 } } add_resource = { energy = 10000 sr_dark_matter = 1000 } }
		else_if = { limit = { check_variable = { which = ag_temp_counter value = 2 } } add_resource = { energy = 20000 sr_dark_matter = 2000 } }
		else_if = { limit = { check_variable = { which = ag_temp_counter value = 3 } } add_resource = { energy = 40000 sr_dark_matter = 4000 } }
		else_if = { limit = { check_variable = { which = ag_temp_counter value = 4 } } add_resource = { energy = 80000 sr_dark_matter = 8000 } }
		else_if = { limit = { check_variable = { which = ag_temp_counter value = 5 } } add_resource = { energy = 160000 sr_dark_matter = 16000 } }
		if = {
			limit = { check_variable = { which = ag_temp_counter value > 0 } }
			set_country_flag = ag_subsystem_locked_501_3
			if = {
				limit = { check_variable = { which = ag_temp_counter value = 1 } }
				random_controlled_ship = {
					limit = { is_ship_size = ag_epsilon_titan_1 NOT = { has_ship_flag = ag_epsilon_firing_star_killer_weapon } }
					fleet = { if = { limit = { exists = leader } leader = { save_global_event_target_as = ag_target_leader unassign_leader = this } } ag_create_epsilon_titan_windup = yes }
					delete_ship = this
					if = { limit = { exists = event_target:ag_target_leader } fleet = { assign_leader = event_target:ag_target_leader } clear_global_event_target = ag_target_leader }
				}
				country_event = { id = ag_epsilon.132 days = 15 }
			}
			if = {
				limit = { check_variable = { which = ag_temp_counter value = 2 } }
				random_controlled_ship = {
					limit = { is_ship_size = ag_epsilon_titan_1 NOT = { has_ship_flag = ag_epsilon_firing_star_killer_weapon } }
					fleet = { if = { limit = { exists = leader } leader = { save_global_event_target_as = ag_target_leader unassign_leader = this } } ag_create_epsilon_titan_windup = yes }
					delete_ship = this
					if = { limit = { exists = event_target:ag_target_leader } fleet = { assign_leader = event_target:ag_target_leader } clear_global_event_target = ag_target_leader }
				}
				country_event = { id = ag_epsilon.132 days = 20 }
			}
			if = {
				limit = { check_variable = { which = ag_temp_counter value = 3 } }
				random_controlled_ship = {
					limit = { is_ship_size = ag_epsilon_titan_1 NOT = { has_ship_flag = ag_epsilon_firing_star_killer_weapon } }
					fleet = { if = { limit = { exists = leader } leader = { save_global_event_target_as = ag_target_leader unassign_leader = this } } ag_create_epsilon_titan_windup = yes }
					delete_ship = this
					if = { limit = { exists = event_target:ag_target_leader } fleet = { assign_leader = event_target:ag_target_leader } clear_global_event_target = ag_target_leader }
				}
				country_event = { id = ag_epsilon.132 days = 25 }
			}
			if = {
				limit = { check_variable = { which = ag_temp_counter value > 3 } }
				random_controlled_ship = {
					limit = { is_ship_size = ag_epsilon_titan_1 NOT = { has_ship_flag = ag_epsilon_firing_star_killer_weapon } }
					fleet = { if = { limit = { exists = leader } leader = { save_global_event_target_as = ag_target_leader unassign_leader = this } } ag_create_epsilon_titan_windup = yes }
					delete_ship = this
					if = { limit = { exists = event_target:ag_target_leader } fleet = { assign_leader = event_target:ag_target_leader } clear_global_event_target = ag_target_leader }
				}
				country_event = { id = ag_epsilon.132 days = 35 }
			}
		}
		set_variable = { which = ag_temp_counter value = 0 }
		clear_variable = ag_temp_counter
	}
	after = {
		ag_system_selector_after_effect = yes
		ag_clear_system_selection = yes
	}
}
country_event = {
	id = ag_epsilon.132
	hide_window = yes
	is_triggered_only = yes
	trigger = { any_controlled_ship = { is_ship_size = ag_epsilon_titan_1 has_ship_flag = ag_epsilon_firing_star_killer_weapon } }

	immediate = {
		random_controlled_ship = {
			limit = { is_ship_size = ag_epsilon_titan_1 has_ship_flag = ag_epsilon_firing_star_killer_weapon }
			controller = { country_event = { id = ag_epsilon.133 days = 5 } }
			every_system = {
				limit = { has_star_flag = ag_epsilon_titan_star_killer_weapon_target@root }
				every_system_ambient_object = {
					limit = {
						is_ambient_object_type = ag_ancient_star_killer_star_windup_in_range
						has_ambient_object_flag = ag_ancient_star_killer_firing_effect@root
					}
					destroy_ambient_object = this
				}
				random_system_planet = {
					limit = { is_primary_star = yes }
					ag_ancient_planet_killer_hit_star_effect = yes
				}
			}
			fleet = { if = { limit = { exists = leader } leader = { save_global_event_target_as = ag_target_leader unassign_leader = this } } ag_create_epsilon_titan_firing = yes }
			delete_ship = this
			if = { limit = { exists = event_target:ag_target_leader } fleet = { assign_leader = event_target:ag_target_leader } clear_global_event_target = ag_target_leader }
		}
	}
}
country_event = {
	id = ag_epsilon.133
	hide_window = yes
	is_triggered_only = yes
	trigger = { any_controlled_ship = { is_ship_size = ag_epsilon_titan_1 has_ship_flag = ag_epsilon_firing_star_killer_weapon } }

	immediate = {
		random_controlled_ship = {
			limit = { is_ship_size = ag_epsilon_titan_1 has_ship_flag = ag_epsilon_firing_star_killer_weapon }
			every_system = {
				limit = { has_star_flag = ag_epsilon_titan_star_killer_weapon_target@root }
				remove_star_flag = ag_epsilon_titan_star_killer_weapon_target@root
				every_system_ambient_object = {
					limit = {
						is_ambient_object_type = ag_ancient_star_killer_star_hit_in_range
						has_ambient_object_flag = ag_ancient_star_killer_firing_effect@root
					}
					destroy_ambient_object = this
				}
				random_system_planet = {
					limit = { is_primary_star = yes }
					fire_on_action = {
						on_action = on_destroy_planet_with_ag_ancient_epsilon_planet_killer_weapon
						scopes = { from = prevprev.fleet }
					}
				}
				if = {
					limit = {
						exists = space_owner
						space_owner = {
							exists = this
							ag_is_common_country = yes
							NOR = {
								is_same_value = root
								is_hostile = root
								has_country_flag = ag_epsilon_starkiller_weapon_victim
							}
						}
					}
					space_owner = { set_country_flag = ag_epsilon_starkiller_weapon_victim }
				}
			}
			fleet = { if = { limit = { exists = leader } leader = { save_global_event_target_as = ag_target_leader unassign_leader = this } } ag_create_epsilon_titan_closing = yes }
			delete_ship = this
			if = { limit = { exists = event_target:ag_target_leader } fleet = { assign_leader = event_target:ag_target_leader } clear_global_event_target = ag_target_leader }
		}
		every_country = {
			limit = { exists = this has_country_flag = ag_epsilon_starkiller_weapon_victim }
			remove_country_flag = ag_epsilon_starkiller_weapon_victim
			if = { limit = { NOT = { has_communications = root } } establish_communications_no_message = root }
			if = { limit = { is_in_federation_with = root } leave_alliance = { override_requirements = yes apply_opinion_penalty = no } }
			country_event = { id = ag_epsilon.136 }
			if = {
				limit = { NOT = { is_at_war_with = root } }
				root = { declare_war = { target = prev attacker_war_goal = "wg_ag_ancient_titans" } }
			}
		}
	}
}
ship_event = {
	id = ag_epsilon.134
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = {
		ag_spawn_explosion_effect = { ag_color = red ag_scale = xl }
		fleet = { if = { limit = { exists = leader } leader = { save_global_event_target_as = ag_target_leader unassign_leader = this } } ag_create_epsilon_titan_cooldown = yes }
		delete_ship = this
		if = { limit = { exists = event_target:ag_target_leader } fleet = { assign_leader = event_target:ag_target_leader } clear_global_event_target = ag_target_leader }
	}
}
# on_ship_destroyed_victim, Remove firing flag if ship destroyed.
country_event = {
	id = ag_epsilon.135
	hide_window = yes
	is_triggered_only = yes
	trigger = { fromfrom = { is_ship_size = ag_epsilon_titan_1 has_ship_flag = ag_epsilon_firing_star_killer_weapon NOT = { has_ship_flag = ag_set_disable_at_health } } }
	immediate = { every_system = {
		limit = { has_star_flag = ag_epsilon_titan_star_killer_weapon_target@root }
		remove_star_flag = ag_epsilon_titan_star_killer_weapon_target@root
		every_system_ambient_object = {
			limit = { has_ambient_object_flag = ag_ancient_star_killer_firing_effect@root }
			destroy_ambient_object = this
		}
	} }
}
country_event = {
	id = ag_epsilon.136
	title = "ag_epsilon.136.name"
	desc = "ag_epsilon.136.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_supernova_room }
	show_sound = event_red_alert
	location = from.capital_scope
	is_triggered_only = yes
	option = { name = "ag_epsilon.136.a" }
}
# Unable to check when ship disbanded.
country_event = {
	id = ag_epsilon.137
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { NOT = { any_controlled_ship = { OR = {
				has_ship_flag = ag_epsilon_firing_star_killer_weapon
				has_ship_flag = ag_epsilon_star_weapon_remote_target_cooldown
			} } } }
			remove_country_flag = ag_subsystem_locked_501_3
		}
	}
}

# on_fleet_disbanded, Psionic beacon disbanded
country_event = {
	id = ag_epsilon.141
	hide_window = yes
	is_triggered_only = yes
	trigger = { from = { has_fleet_flag = ag_epsilon_titan_target_station_fleet } }
	immediate = { from.solar_system = { if = {
		limit = { NOT = { any_fleet_in_system = {
			NOT = { is_same_value = root.from }
			has_fleet_flag = ag_epsilon_titan_target_station_fleet
		} } }
		remove_star_flag = ag_epsilon_titan_target
	} } }
}

# RIngworld's environment restored
planet_event = {
	id = ag_epsilon.142
	title = "ag_epsilon.142.name"
	desc = "ag_epsilon.142.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_gaia_planet_room }
	show_sound = event_mystic_reveal
	location = root
	is_triggered_only = yes
	option = { name = "ag_epsilon.142.a" }
}

# Situation events.
country_event = {
	id = ag_epsilon.150
	title = "ag_epsilon.150.name"
	desc = "ag_epsilon.150.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = root
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = ag_epsilon_situation_started }
		has_global_flag = ag_epsilon_titan_destroyed
		exists = event_target:ag_ancient_epsilon_shielded_world
		exists = event_target:ag_ancient_epsilon_shielded_world_2
		exists = event_target:ag_ancient_epsilon_shielded_world_3
		OR = {
			event_target:ag_ancient_epsilon_shielded_world = {
				exists = owner
				owner = { is_same_value = root }
				has_building = ag_epsilon_outpost_1
				has_ground_combat = no
				ag_has_researcher = yes
			}
			event_target:ag_ancient_epsilon_shielded_world_2 = {
				exists = owner
				owner = { is_same_value = root }
				has_building = ag_epsilon_outpost_1
				has_ground_combat = no
				ag_has_researcher = yes
			}
			event_target:ag_ancient_epsilon_shielded_world_3 = {
				exists = owner
				owner = { is_same_value = root }
				has_building = ag_epsilon_outpost_1
				has_ground_combat = no
				ag_has_researcher = yes
			}
		}
	}
	immediate = { set_country_flag = ag_epsilon_situation_started }
	option = {
		name = "ag_epsilon.150.a"
		if = {
			limit = { event_target:ag_ancient_epsilon_shielded_world = { exists = owner owner = { is_same_value = root } } }
			start_situation = { type = "ag_epsilon_situation" target = event_target:ag_ancient_epsilon_shielded_world }
		}
		else_if = {
			limit = { event_target:ag_ancient_epsilon_shielded_world_2 = { exists = owner owner = { is_same_value = root } } }
			start_situation = { type = "ag_epsilon_situation" target = event_target:ag_ancient_epsilon_shielded_world_2 }
		}
		else_if = {
			limit = { always = yes }
			start_situation = { type = "ag_epsilon_situation" target = event_target:ag_ancient_epsilon_shielded_world_3 }
		}
	}
}
country_event = {
	id = ag_epsilon.151
	title = "ag_epsilon.151.name"
	desc = "ag_epsilon.151.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_arguing_senate_room }
	show_sound = event_laboratory_sound
	location = from.target
	is_triggered_only = yes
	immediate = {
		random_list = {
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.25 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.75 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2 } }
		}
		reroll_random = yes
		random_list = {
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { }
		}
		reroll_random = yes
	}
	after = { hidden_effect = { set_variable = { which = ag_ancient_knowledge_common_var value = 0 } } }
	option = {
		name = "ag_epsilon.151.a"
		ag_add_ancient_knowledge = {
			ag_value = ag_ancient_knowledge_common_var
			ag_notification_desc = ""
		}
	}
}
country_event = {
	id = ag_epsilon.152
	title = "ag_epsilon.152.name"
	desc = "ag_epsilon.152.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_laboratory_sound
	location = from.target
	is_triggered_only = yes
	option = {
		name = "ag_epsilon.152.a"
		hidden_effect = { country_event = { id = ag_epsilon.91 days = 15 random = 15 } }
	}
}
country_event = {
	id = ag_epsilon.153
	title = "ag_epsilon.153.name"
	desc = "ag_epsilon.153.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_archaeological_dig_room }
	show_sound = event_laboratory_sound
	location = from.target
	is_triggered_only = yes
	immediate = {
		random_list = {
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.25 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.75 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2 } }
		}
		reroll_random = yes
		random_list = {
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { }
		}
		reroll_random = yes
	}
	after = { hidden_effect = { set_variable = { which = ag_ancient_knowledge_common_var value = 0 } } }
	option = {
		name = "ag_epsilon.153.a"
		ag_add_ancient_knowledge = {
			ag_value = ag_ancient_knowledge_common_var
			ag_notification_desc = ""
		}
	}
}
country_event = {
	id = ag_epsilon.154
	title = "ag_epsilon.154.name"
	desc = "ag_epsilon.154.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = root
	is_triggered_only = yes
	immediate = {
		random_list = {
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 3 } }
		}
		reroll_random = yes
		random_list = {
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { }
		}
		reroll_random = yes
	}
	after = { hidden_effect = {
		# clear_variable = ag_ancient_knowledge_common_var
		destroy_situation = from
	} }
	option = { name = "ag_epsilon.154.a" ag_add_ancient_knowledge = { ag_value = ag_ancient_knowledge_common_var ag_notification_desc = "" } }
}
