namespace = mind_mend

# mind meld
country_event = {
	id = mind_mend.1
	title = "mind_mend.2600.name"
	desc = "mind_mend.2600.desc"
	picture = GFX_evt_psionics
	show_sound = event_psionic
	hide_window = no
	is_triggered_only = yes

	immediate = {
	hidden_effect = {
	every_owned_pop = {
		limit = {
			is_same_species = root
			NOT = { species = { has_trait = trait_latent_psionic } }
		}
		modify_species = {
			species = this
			add_trait = trait_latent_psionic
		}
		species = { save_event_target_as = psionic_species }
	}
	change_dominant_species = { species = event_target:psionic_species change_all = yes }
	#ruler = { add_ruler_trait = leader_trait_ruler_overmind	}
	}
	## tell everybody else
	every_country = {
			limit = { 
				is_ai = no
				has_communications = root
				NOT = { is_same_value = root }
			}
			country_event = { id = mind_mend.11 }
		}
	}
	option = {
		name = "mind_mend.2600.a"
		tooltip = {
			modify_species = {
				species = this
				add_trait = trait_latent_psionic
			}
		}
		custom_tooltip = mind_mend.2600.envoys
		custom_tooltip = ALLOW_PSYCHIC_LOBE
		#custom_tooltip = ALLOW_PSI_ARMIES
	}
	}
 


# Notification for other empires
country_event = {
	id = mind_mend.11
	title = "mind_mend.2602.name"
	desc = "mind_mend.2602.desc"
	picture = GFX_evt_psionics
	show_sound = event_laboratory_sound
	location = from.capital_scope
	
	is_triggered_only = yes
	
	
	option = {
		name = "utopia.2602.a"
		trigger = {
			NOR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
				is_at_war_with = from
				species = { has_trait = trait_psionic }
			}
		}
	}
	option = {
		name = "utopia.2602.b"
		trigger = {
			AND = {
				OR = {
					has_ethic = ethic_materialist
					has_ethic = ethic_fanatic_materialist
				}
				NOR = {
					is_at_war_with = from
					species = { has_trait = trait_psionic }
				}
			}
		}
	}
	option = {
		name = "utopia.2602.c"
		trigger = {
			is_at_war_with = from
			NOT = { species = { has_trait = trait_psionic } }
		}
	}
	option = {
		name = "utopia.2602.d"
		trigger = {
			species = { has_trait = trait_psionic }
		}
	}
}



##omnipresence
country_event = {
	id = mind_mend.2
	title = "mind_mend.2650.name"
	desc = "mind_mend.2650.desc"
	picture = GFX_evt_psionics
	show_sound = event_the_great_awakening
	hide_window = no
	is_triggered_only = yes

	immediate = {
	
	hidden_effect = {
		
		every_owned_pop = {
			limit = {
				is_same_species = root
				has_trait = trait_latent_psionic
			}
			modify_species = {
				species = this
				remove_trait = trait_latent_psionic
				add_trait = trait_psionic
			}
			species = { save_event_target_as = psionic_species }
		}
		change_dominant_species = { species = event_target:psionic_species change_all = yes }
		
		#ruler = { 
		#remove_ruler_trait = leader_trait_ruler_overmind
		#add_ruler_trait = leader_trait_ruler_equidimentional	
		#}
		}
	## tell everybody else
	every_country = {
			limit = { 
				is_ai = no
				has_communications = root
				NOT = { is_same_value = root }
			}
			country_event = { id = mind_mend.22 }
		}
		
		## open the shorud?
		country_event = { id = mind_mend.70 days = 180 random = 40 }
	
	}
	option = {
		name = "mind_mend.2650.a"
		tooltip = {
			modify_species = {
				species = this
				remove_trait = trait_latent_psionic
				add_trait = trait_psionic
			}
		}
		custom_tooltip = mind_mend.2650.telepaths
		custom_tooltip = mind_mend.2650.biotrophies
		custom_tooltip = mind_mend.2650.contributors
		hidden_effect = {
			every_country = {
				limit = {
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
				every_owned_leader = {
					limit = {
						is_same_species = root
						#species = {
						#	has_trait = trait_psionic
						#	is_same_value = event_target:psionic_species
						#}
						NOR = {
							has_trait =	leader_trait_admiral_psionic
							has_trait =	leader_trait_general_psionic
							has_trait =	leader_trait_governor_psionic
							has_trait =	leader_trait_scientist_psionic
							has_trait =	leader_trait_ruler_psionic
						}
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					if = {
						limit = { leader_class = ruler }
						add_trait = leader_trait_ruler_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
				}
				every_pool_leader = {
					limit = {
						is_same_species = root
						#species = {
						#	has_trait = trait_psionic
						#	is_same_value = event_target:psionic_species
						#}
						NOR = {
							has_trait = leader_trait_admiral_psionic
							has_trait = leader_trait_general_psionic
							has_trait = leader_trait_governor_psionic
							has_trait = leader_trait_scientist_psionic
							has_trait = leader_trait_ruler_psionic
						}
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					if = {
						limit = { leader_class = ruler }
						add_trait = leader_trait_ruler_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
				}
			}
		}
	}
	
	
  }
  
  
  
# Notification for other empires
country_event = {
	id = mind_mend.22
	title = "utopia.2652.name"
	desc = "utopia.2652.desc"
	picture = GFX_evt_psionics
	show_sound = event_the_great_awakening
	
	is_triggered_only = yes

	option = {
		name = AMAZING
		trigger = {
			NOR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
				is_at_war_with = from
				species = { has_trait = trait_psionic }
			}
		}
	}
	option = {
		name = "utopia.2652.b"
		trigger = {
			AND = {
				OR = {
					has_ethic = ethic_materialist
					has_ethic = ethic_fanatic_materialist
				}
				NOR = {
					is_at_war_with = from
					species = { has_trait = trait_psionic }
				}
			}
		}
	}
	option = {
		name = "utopia.2652.c"
		trigger = {
			is_at_war_with = from
			NOT = { species = { has_trait = trait_psionic } }
		}
	}
	option = {
		name = "utopia.2652.d"
		trigger = {
			species = { has_trait = trait_psionic }
		}
	}
}



# The Shroud
country_event = {
	id = mind_mend.70
	title = "utopia.2655.name"
	desc = "psionic_hive.2655.desc"
	picture = GFX_evt_psionics
	show_sound = event_psionic
	trackable = yes
	
	is_triggered_only = yes

	option = {
		name = "utopia.2655.a"
		hidden_effect = { save_event_target_as = breach_shroud_owner }
		capital_scope = {
			enable_special_project = {
				name = "BREACHING_SHROUD_PROJECT_HIVE"
				location = this
				owner = root
			}
		}
	}
}

# The Seance
country_event = {
	id = mind_mend.71
	title = "utopia.2656.name"
	desc = "psionic_hive.2656.desc"
	picture = GFX_evt_psionics
	show_sound = event_psionic
	
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = { is_country_type = hive_shroud }
			save_event_target_as = the_hive_shroud
	}
}
	option = {
		name = "psionic_hive.2656.a"
		##custom_tooltip = psionic_hive.2656.shroudgrow
		add_research_option = tech_mine_zro
		establish_communications_no_message = event_target:the_hive_shroud
		hidden_effect = {
			set_country_flag = hive_shroud_intro
			country_event = { id = psionic_shroud.3000 }
		}

	}

}

