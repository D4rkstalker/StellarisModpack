namespace = Events_GAPS_Amoeba_Spawners

country_event = {
	id = Events_GAPS_Amoeba_Spawners.1
	title = Events_GAPS_Amoeba_Spawners.1.name
	desc = Events_GAPS_Amoeba_Spawners.1.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Amoeba_Spawners }
		OR = {
			last_increased_tech = Tech_GAPS_Amoeba_Spawning_1
			last_increased_tech = Tech_GAPS_Amoeba_Spawning_2
			last_increased_tech = Tech_GAPS_Amoeba_Spawning_3
		}
	}

	option = {
		name = "Events_GAPS_Amoeba_Spawners.First_Choice"
		custom_tooltip = "Events_GAPS_Amoeba_Spawners.First_Choice.Tooltip"
		hidden_effect = {
			set_country_flag = Flag_Country_GAPS_Amoeba_Spawners_First_Choice
		}
		trigger = {
			NOT = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_First_Choice }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Amoeba_Spawners.Second_Choice"
		custom_tooltip = "Events_GAPS_Amoeba_Spawners.Second_Choice.Tooltip"
		hidden_effect = {
			set_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Second_Choice
		}
		trigger = {
			NOT = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Second_Choice }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Amoeba_Spawners.Third_Choice"
		custom_tooltip = "Events_GAPS_Amoeba_Spawners.Third_Choice.Tooltip"
		hidden_effect = {
			set_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Third_Choice
		}
		trigger = {
			NOT = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Third_Choice }
		}
		ai_chance = {
			factor = 20
		}
	}
}

country_event = {
	id = Events_GAPS_Amoeba_Spawners.12
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Amoeba_Spawners }
		OR = {
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_1
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_2
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_3
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_4
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_5
		}
	}
	immediate = {
		change_variable = { which = "GAPS_Amoeba_Strength_Level" value = 1 }
		every_owned_ship = { limit = { is_ship_size = space_amoeba } add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba days = -1 } }
		every_owned_ship = { limit = { is_ship_size = space_amoeba_mother } add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba days = -1 } }
	}
}

ship_event = {
	id = Events_GAPS_Amoeba_Spawners.21
	hide_window = yes

	is_triggered_only = yes

	trigger = { is_ship_size = space_amoeba }

	immediate = {
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = {
					name = "NAME_Space_Amoeba"
					design = "NAME_Small_Space_Organism_Zebra"
					prefix = no
					upgradable = no
					effect = {
						set_ship_flag = GAPS_Amoeba_To_Upgrade
						save_event_target_as = GAPS_Amoeba_To_Upgrade
					}
				}
				set_fleet_stance = passive
				set_location = from
			}
		}
		root.owner = {
			while = { 
				count = GAPS_Amoeba_Strength_Level
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba days = -1 }
				}
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus }
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Shield days = -1 }
				}
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus }
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Damage days = -1 }
				}
			}
		}
		destroy_fleet = { target = root.fleet destroy_template = yes }
	}
}

ship_event = {
	id = Events_GAPS_Amoeba_Spawners.22
	hide_window = yes

	is_triggered_only = yes

	trigger = { is_ship_size = space_amoeba_mother }

	immediate = {
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = {
					name = ""
					design = "NAME_Large_Space_Organism_Zebra"
					prefix = no
					upgradable = no
					effect = {
						set_ship_flag = GAPS_Amoeba_To_Upgrade
						save_event_target_as = GAPS_Amoeba_To_Upgrade
					}
				}
				set_fleet_stance = passive
				set_location = from
			}
		}
		root.owner = {
			while = { 
				count = GAPS_Amoeba_Strength_Level
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba days = -1 }
				}
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus }
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Shield days = -1 }
				}
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus }
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Damage days = -1 }
				}
			}
			
		}
		destroy_fleet = { target = root.fleet destroy_template = yes }
	}
}
#on complete special projects
country_event = {
	id = Events_GAPS_Amoeba_Spawners.71
	title = Events_GAPS_Amoeba_Spawners.71.name
	desc = Events_GAPS_Amoeba_Spawners.71.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		begin_event_chain = {
			event_chain = "Event_Chain_GAPS_Amoeba_Trail"
			target = root
		}
		every_system = {		
			limit = { 
				OR = { 
					#has_star_flag = GAPS_amoeba_system 
					has_star_flag = amoeba_1_system 
					has_star_flag = amoeba_2_system 
					has_star_flag = amoeba_3_system 
					has_star_flag = amoeba_4_system 
					has_star_flag = amoeba_home_system 
				} 
			}
			random_system_planet = { 
				limit = { is_primary_star = yes } 
				save_event_target_as = Target_Planet_GAPS_Home_Star 
				if = {
					limit = { not = { has_modifier = Planet_Modifier_GAPS_Is_A_Amoeba_System } }
					add_modifier = { Planet_Modifier_GAPS_Is_A_Amoeba_System days = -1 } 
				}
				if = {
					limit  { not = { has_modifier = Planet_Modifier_GAPS_Is_A_Special_Amoeba_System } solar_system = { has_star_flag = amoeba_home_system } }
					add_modifier = { Planet_Modifier_GAPS_Is_A_Special_Amoeba_System days = -1 } 
				}
			}
			random_system_planet = { limit = { is_primary_star = yes } save_event_target_as = Target_Planet_GAPS_Home_Star }
			enable_special_project = { name = Special_Project_GAPS_Amoeba_System_Location owner = root location = event_target:Target_Planet_GAPS_Home_Star }
		}
	}
}
country_event = {
	id = Events_GAPS_Amoeba_Spawners.72
	title = Events_GAPS_Amoeba_Spawners.72.name
	desc = Events_GAPS_Amoeba_Spawners.72.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus
		every_owned_ship = { limit = { is_ship_size = space_amoeba } add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Shield days = -1 } }
		every_owned_ship = { limit = { is_ship_size = space_amoeba_mother } add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Shield days = -1 } }
	}
}
country_event = {
	id = Events_GAPS_Amoeba_Spawners.73
	title = Events_GAPS_Amoeba_Spawners.73.name
	desc = Events_GAPS_Amoeba_Spawners.73.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus
		every_owned_ship = { limit = { is_ship_size = space_amoeba } add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Damage days = -1 } }
		every_owned_ship = { limit = { is_ship_size = space_amoeba_mother } add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Damage days = -1 } }
	}
}
country_event = {
	id = Events_GAPS_Amoeba_Spawners.731
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:lost_amoeba_ship = {
			limit = { owner = { is_same_value = root } }
			remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
			remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
			remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
			remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
			remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
			remove_modifier = Ship_Modifier_GAPS_Small_Amoeba_Shield
			remove_modifier = Ship_Modifier_GAPS_Small_Amoeba_Damage
			while = { 
				count = GAPS_Amoeba_Strength_Level
				add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba days = -1 }
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus }
				add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Shield days = -1 }
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus }
				add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Damage days = -1 }
			}
		}
	}
}