namespace = Events_GAPS_Amoeba_Spawners

country_event = {
	id = Events_GAPS_Amoeba_Spawners.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Amoeba_Spawners }
	}
	immediate = {
		set_country_flag = Country_Flag_GAPS_I_am_Amoeba_Spawners
		#country_event = { id = story.107 days = 1 }
		country_event = { id = Events_GAPS_Amoeba_Spawners.12 days = 0 }
		add_modifier = {
			modifier = pacified_amoebas # friendly amoebas
			days = -1
		}
		add_research_option = tech_amoeba_strike_craft_1
		add_research_option = tech_regenerative_hull_tissue
		every_country = {
			limit = {
				OR = {
					is_country_type = amoeba
					is_country_type = amoeba_borderless
					is_country_type = amoeba_garrison
				}
			}
			set_faction_hostility = {
				set_hostile = no
			#	set_neutral = yes
				set_friendly = yes
				target = prev
			}
		}
		give_technology = { message = no tech = Tech_GAPS_Amoeba_Spawning_1 }

		create_ship_design = { design = "GAPS_Tame_Amoeba_Large" }
		add_ship_design = last_created_design
		create_ship_design = { design = "GAPS_Tame_Amoeba_Small" }
		add_ship_design = last_created_design
	}
}

country_event = {
	id = Events_GAPS_Amoeba_Spawners.12
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		save_event_target_as = Target_Country_Amoeba_Spawners
		begin_event_chain = {
			event_chain = "Event_Chain_GAPS_Amoeba_Systems"
			target = root
		}
		every_system = {
			limit = {
				OR = {
					has_star_flag = amoeba_GAPS_system
					has_star_flag = amoeba_1_system
					has_star_flag = amoeba_2_system
					has_star_flag = amoeba_3_system
					has_star_flag = amoeba_4_system
					has_star_flag = amoeba_home_system
				}
			}
			random_system_planet = {
				limit = { is_primary_star = yes }
				save_event_target_as = Target_Planet_GAPS_Home_Star
				if = {
					limit = { not = { has_modifier = Planet_Modifier_GAPS_Is_A_Amoeba_System } }
					add_modifier = { modifier = Planet_Modifier_GAPS_Is_A_Amoeba_System days = -1 }
				}
				if = {
					limit = { not = { has_modifier = Planet_Modifier_GAPS_Is_A_Special_Amoeba_System } solar_system = { has_star_flag = amoeba_home_system } }
					add_modifier = { modifier = Planet_Modifier_GAPS_Is_A_Special_Amoeba_System days = -1 }
				}
			}
			random_system_planet = {
				limit = { is_primary_star = yes }
				save_event_target_as = Target_Planet_GAPS_Home_Star
				create_fleet = {
					name = "Scry Sensor"
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = no
					}
				}
				last_created_fleet = {
					set_owner = root
					create_ship = {
						name = "Scry Sensor"
						design = "NAME_DS47"
					}
					set_location = event_target:Target_Planet_GAPS_Home_Star
					set_event_locked = yes
					hidden_effect = { fleet_event = { id = Events_GAPS_Universal_Effects.2 days = 0 } }
				}
			}
			if = {
				limit = { has_star_flag = amoeba_home_system }
				enable_special_project = { name = Special_Project_GAPS_Amoeba_Home_System_Location owner = root location = event_target:Target_Planet_GAPS_Home_Star }
				root = { change_variable = { which = "Country_Variable_GAPS_Amoeba_System_Location" value = 1 } }
			}
			else = {
				enable_special_project = { name = Special_Project_GAPS_Amoeba_System_Location owner = root location = event_target:Target_Planet_GAPS_Home_Star }
				root = { change_variable = { which = "Country_Variable_GAPS_Amoeba_System_Location" value = 1 } }
			}
		}
	}
}

country_event = {
	id = Events_GAPS_Amoeba_Spawners.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Amoeba_Spawners }
		OR = {
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_1
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_2
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_3
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_4
			last_increased_tech = Tech_GAPS_Amoeba_Improvements_5
		}
	}
	immediate = {
		change_variable = { which = "GAPS_Amoeba_Strength_Level" value = 1 }
		every_owned_ship = { limit = { is_ship_size = space_amoeba } add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba days = -1 } }
		every_owned_ship = { limit = { is_ship_size = space_amoeba_mother } add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba days = -1 } }
	}
}

ship_event = {
	id = Events_GAPS_Amoeba_Spawners.21
	hide_window = yes

	is_triggered_only = yes

	trigger = { is_ship_size = space_amoeba }

	immediate = {
		create_fleet = {
			effect = {
				set_owner = root.owner
				random_list = {
					1 = {
						create_ship = {
							name = ""
							design = "NAME_Small_Space_Organism_Orange"
							prefix = no
							upgradable = no
							effect = {
								set_ship_flag = GAPS_Amoeba_To_Upgrade
								save_event_target_as = GAPS_Amoeba_To_Upgrade
							}
						}
					}
					1 = {
						create_ship = {
							name = ""
							design = "NAME_Small_Space_Organism_Teal"
							prefix = no
							upgradable = no
							effect = {
								set_ship_flag = GAPS_Amoeba_To_Upgrade
								save_event_target_as = GAPS_Amoeba_To_Upgrade
							}
						}
					}
					1 = {
						create_ship = {
							name = ""
							design = "NAME_Small_Space_Organism_Blue"
							prefix = no
							upgradable = no
							effect = {
								set_ship_flag = GAPS_Amoeba_To_Upgrade
								save_event_target_as = GAPS_Amoeba_To_Upgrade
							}
						}
					}
					1 = {
						create_ship = {
							name = ""
							design = "NAME_Small_Space_Organism_Zebra"
							prefix = no
							upgradable = no
							effect = {
								set_ship_flag = GAPS_Amoeba_To_Upgrade
								save_event_target_as = GAPS_Amoeba_To_Upgrade
							}
						}
					}
				}
				set_fleet_stance = passive
				set_location = from
			}
		}
		root.owner = {
			event_target:GAPS_Amoeba_To_Upgrade = {
				add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Speed days = -1 }
			}
			while = {
				count = GAPS_Amoeba_Strength_Level
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba days = -1 }
				}
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus }
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Shield days = -1 }
				}
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus }
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Lost days = -1 }
				}
			}
		}
		destroy_fleet = { target = root.fleet destroy_template = yes }
	}
}

ship_event = {
	id = Events_GAPS_Amoeba_Spawners.22
	hide_window = yes

	is_triggered_only = yes

	trigger = { is_ship_size = space_amoeba_mother }

	immediate = {
		create_fleet = {
			effect = {
				set_owner = root.owner
				random_list = { #different coloured amoebas
					1 = {
						create_ship = {
							name = ""
							design = "NAME_Large_Space_Organism_Orange"
							prefix = no
							upgradable = no
							effect = {
								set_ship_flag = GAPS_Amoeba_To_Upgrade
								save_event_target_as = GAPS_Amoeba_To_Upgrade
							}
						}
					}
					1 = {
						create_ship = {
							name = ""
							design = "NAME_Large_Space_Organism_Teal"
							prefix = no
							upgradable = no
							effect = {
								set_ship_flag = GAPS_Amoeba_To_Upgrade
								save_event_target_as = GAPS_Amoeba_To_Upgrade
							}
						}
					}
					1 = {
						create_ship = {
							name = ""
							design = "NAME_Large_Space_Organism_Blue"
							prefix = no
							upgradable = no
							effect = {
								set_ship_flag = GAPS_Amoeba_To_Upgrade
								save_event_target_as = GAPS_Amoeba_To_Upgrade
							}
						}
					}
					1 = {
						create_ship = {
							name = ""
							design = "NAME_Large_Space_Organism_Zebra"
							prefix = no
							upgradable = no
							effect = {
								set_ship_flag = GAPS_Amoeba_To_Upgrade
								save_event_target_as = GAPS_Amoeba_To_Upgrade
							}
						}
					}
				}
				set_fleet_stance = passive
				set_location = from
			}
		}
		root.owner = {
			event_target:GAPS_Amoeba_To_Upgrade = {
				add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Speed days = -1 }
			}
			while = {
				count = GAPS_Amoeba_Strength_Level
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba days = -1 }
				}
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus }
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Shield days = -1 }
				}
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus }
				event_target:GAPS_Amoeba_To_Upgrade = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Lost days = -1 }
				}
			}

		}
		destroy_fleet = { target = root.fleet destroy_template = yes }
	}
}

country_event = {
	id = Events_GAPS_Amoeba_Spawners.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Amoeba_Spawners }
		NOT = { has_country_flag = Country_Flag_GAPS_Amoeba_Spawn_Cooldown }
		any_system_within_border = {
			OR = {
				has_star_flag = amoeba_GAPS_system
				has_star_flag = amoeba_1_system
				has_star_flag = amoeba_2_system
				has_star_flag = amoeba_3_system
				has_star_flag = amoeba_4_system
				has_star_flag = amoeba_home_system
			}
		}
	}

	immediate = {
		set_timed_country_flag = { flag = Country_Flag_GAPS_Amoeba_Spawn_Cooldown days = 360 }
		random_system_within_border = {
			limit = {
				OR = {
					has_star_flag = amoeba_GAPS_system
					has_star_flag = amoeba_1_system
					has_star_flag = amoeba_2_system
					has_star_flag = amoeba_3_system
					has_star_flag = amoeba_4_system
					has_star_flag = amoeba_home_system
				}
				NOT = {
					any_fleet_in_system = {
						owner = {
							is_country_type = amoeba_borderless
						}
					}
				}
			}
			random = {
				chance = 15
				random_system_planet = {
					limit = { is_star = no }
					create_amoeba_country_borderless = yes
					event_target:amoeba_country_borderless = {
						create_fleet = {
							name = "NAME_Space_Amoeba"
							effect = {
								set_owner = event_target:amoeba_country_borderless
								random_list = { #different coloured amoebas
									1 = {
										while = {
											count = 5
											create_ship = {
												name = ""
												design = "NAME_Large_Space_Organism_Zebra"
											}
										}
										while = {
											count = 15
											create_ship = {
												name = ""
												design = "NAME_Small_Space_Organism_Zebra"
											}
										}
										if = {
											limit = {
												years_passed > 79
											}
											while = {
												count = 3
												create_ship = {
													name = ""
													design = "NAME_Large_Space_Organism_Zebra"
												}
											}
											while = {
												count = 9
												create_ship = {
													name = ""
													design = "NAME_Small_Space_Organism_Zebra"
												}
											}
										}
									}
									1 = {
										while = {
											count = 5
											create_ship = {
												name = ""
												design = "NAME_Large_Space_Organism_Teal"
											}
										}
										while = {
											count = 15
											create_ship = {
												name = ""
												design = "NAME_Small_Space_Organism_Teal"
											}
										}
										if = {
											limit = {
												years_passed > 79
											}
											while = {
												count = 3
												create_ship = {
													name = ""
													design = "NAME_Large_Space_Organism_Teal"
												}
											}
											while = {
												count = 9
												create_ship = {
													name = ""
													design = "NAME_Small_Space_Organism_Teal"
												}
											}
										}
									}
									1 = {
										while = {
											count = 5
											create_ship = {
												name = ""
												design = "NAME_Large_Space_Organism_Blue"
											}
										}
										while = {
											count = 15
											create_ship = {
												name = ""
												design = "NAME_Small_Space_Organism_Blue"
											}
										}
										if = {
											limit = {
												years_passed > 79
											}
											while = {
												count = 3
												create_ship = {
													name = ""
													design = "NAME_Large_Space_Organism_Blue"
												}
											}
											while = {
												count = 9
												create_ship = {
													name = ""
													design = "NAME_Small_Space_Organism_Blue"
												}
											}
										}
									}
									1 = {
										while = {
											count = 5
											create_ship = {
												name = ""
												design = "NAME_Large_Space_Organism_Orange"
											}
										}
										while = {
											count = 15
											create_ship = {
												name = ""
												design = "NAME_Small_Space_Organism_Orange"
											}
										}
										if = {
											limit = {
												years_passed > 79
											}
											while = {
												count = 3
												create_ship = {
													name = ""
													design = "NAME_Large_Space_Organism_Orange"
												}
											}
											while = {
												count = 9
												create_ship = {
													name = ""
													design = "NAME_Small_Space_Organism_Orange"
												}
											}
										}
									}
								}
								set_location = PREVPREV
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = self
								set_aggro_range = 100
								set_fleet_flag = amoeba_home_wave

								queue_actions = {
									find_random_system = {
										trigger = {
											id = "amoeba_swarm.1"
											distance = {
												min_jumps = 10
											}
										}
										found_system = {
											move_to = this
										}
									}
								}
							}
						}
						every_country = { #just in case
							limit = {
								has_modifier = pacified_amoebas
							}
							prev = {
								set_faction_hostility = {
									set_hostile = no
									set_neutral = yes
									target = prev
								}
							}
						}
					}
				}
			}
		}
	}
}
#While cool in concept i can't get these to function

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
#on_survey
ship_event = {
	id = Events_GAPS_Amoeba_Spawners.51
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		root.owner = { 
			has_origin = Origin_GAPS_Amoeba_Spawners 
			NOR = {
				has_country_flag = Country_Flag_GAPS_Fountain_Found
				has_modifier = youthful_elite
				has_modifier = youthful_people
			}
		}
		from = { is_asteroid = yes }
	}
	immediate = {
		random_list = {
			1 = { 
				From = { 
					add_anomaly =  {
						category = GEN_MYSTICAL_CAT
					}
					root.owner = {
						set_country_flag = Country_Flag_GAPS_Fountain_Found
					}
				}
			}
			30 = {
				#nothing
			}
		}
	}
}
# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
#on_survey
ship_event = {
	id = Events_GAPS_Amoeba_Spawners.52
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		root.owner = { 
			has_origin = Origin_GAPS_Amoeba_Spawners 
			NOR = {
				has_country_flag = Country_Flag_GAPS_Lost_Found
				has_modifier = youthful_elite
				has_modifier = youthful_people
			}
		}
		solar_system = { 
			NOR = {
				has_star_flag = tiyanki_home_system
				has_star_flag = amoeba_home_system
			}
		}
		from = { is_planet_class = pc_gas_giant }
		has_distar = yes
	}
	immediate = {
		random_list = {
			1 = { 
				From = { 
					add_anomaly =  {
						category = DISTAR_LOST_CAT
					}
					root.owner = {
						set_country_flag = Country_Flag_GAPS_Lost_Found
					}
				}
			}
			30 = {
				#nothing
			}
		}
	}
}
#on complete special projects

country_event = {
	id = Events_GAPS_Amoeba_Spawners.61
	hide_window = no
	is_triggered_only = yes
	title = Events_GAPS_Amoeba_Spawners.61.name
	desc = Events_GAPS_Amoeba_Spawners.61.desc
	trigger = {
		has_origin = Origin_GAPS_Amoeba_Spawners
		OR = { has_modifier = youthful_people has_modifier = youthful_elite }
		NOT = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus }
		NOT = { has_event_chain = Event_Chain_GAPS_Study_Tree_Bubble }
	}
	immediate = {
		save_event_target_as = Target_Country_GAPS_Amoeba_Spawners
		begin_event_chain = {
			event_chain = "Event_Chain_GAPS_Study_Tree_Bubble"
			target = root
		}
		every_system_within_border = {
			limit = { any_system_planet = { is_capital = yes } }
			random_system_planet = { limit = { is_primary_star = yes } save_event_target_as = Target_Planet_GAPS_Drone_Project }
			enable_special_project = { name = Special_Project_GAPS_Study_Tree_Bubble owner = root location = event_target:Target_Planet_GAPS_Drone_Project }
		}
	}
}
country_event = {
	id = Events_GAPS_Amoeba_Spawners.62
	hide_window = no
	is_triggered_only = yes
	title = Events_GAPS_Amoeba_Spawners.62.name
	desc = Events_GAPS_Amoeba_Spawners.62.desc
	trigger = {
		has_origin = Origin_GAPS_Amoeba_Spawners
		any_owned_fleet = { has_fleet_flag = lost_amoeba_adult_fleet@root }
		NOT = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus }
		NOT = { has_event_chain = Event_Chain_GAPS_Study_Lost_Amoeba }
	}
	immediate = {
		save_event_target_as = Target_Country_GAPS_Amoeba_Spawners
		begin_event_chain = {
			event_chain = "Event_Chain_GAPS_Study_Lost_Amoeba"
			target = root
		}
		every_system_within_border = {
			limit = { any_system_planet = { is_capital = yes } }
			random_system_planet = { limit = { is_primary_star = yes } save_event_target_as = Target_Planet_GAPS_Drone_Project }
			enable_special_project = { name = Special_Project_GAPS_Study_Lost_Amoeba owner = root location = event_target:Target_Planet_GAPS_Drone_Project }
		}
	}
}
country_event = {
	id = Events_GAPS_Amoeba_Spawners.63
	picture = GFX_evt_unidentified_ship
	#show_sound = megastructure_upgraded_01
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = Origin_GAPS_Amoeba_Spawners
		any_owned_fleet = { has_fleet_flag = lost_amoeba_adult_fleet@root }
	}
	immediate = {
		event_target:lost_amoeba_ship = {
			if = {
				limit = { owner = { is_same_value = root } }
				remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Small_Amoeba_Shield
				remove_modifier = Ship_Modifier_GAPS_Small_Amoeba_Damage
				remove_modifier = Ship_Modifier_GAPS_Small_Amoeba_Speed
				remove_modifier = Ship_Modifier_GAPS_Mother_Amoeba_Speed
				remove_modifier = Ship_Modifier_GAPS_Small_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Small_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Small_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Small_Amoeba
				remove_modifier = Ship_Modifier_GAPS_Small_Amoeba
			}
			add_modifier = { Ship_Modifier_GAPS_Mother_Amoeba_Speed days = -1 }
			while = {
				count = GAPS_Amoeba_Strength_Level
				add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba days = -1 }
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus }
				add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Shield days = -1 }
			}
			if = {
				limit = { has_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus }
				add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Damage days = -1 }
			}
		}
	}
}
country_event = {
	id = Events_GAPS_Amoeba_Spawners.71
	picture = GFX_evt_unidentified_ship
	#show_sound = megastructure_upgraded_01
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		subtract_variable = { which = "Country_Variable_GAPS_Amoeba_System_Location" value = 1 }
		if = { 
			limit = { check_variable = { which = "Country_Variable_GAPS_Amoeba_System_Location" value < 1 } }
			end_event_chain = "Event_Chain_GAPS_Amoeba_Systems"
		}
	}
}
country_event = {
	id = Events_GAPS_Amoeba_Spawners.72
	title = Events_GAPS_Amoeba_Spawners.72.name
	desc = Events_GAPS_Amoeba_Spawners.72.desc
	picture = GFX_evt_unidentified_ship
	#show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Tree_Bonus
		every_owned_ship = { limit = { is_ship_size = space_amoeba } add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Shield days = -1 } }
		every_owned_ship = { limit = { is_ship_size = space_amoeba_mother } add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Shield days = -1 } }
	}
}
country_event = {
	id = Events_GAPS_Amoeba_Spawners.73
	title = Events_GAPS_Amoeba_Spawners.73.name
	desc = Events_GAPS_Amoeba_Spawners.73.desc
	picture = GFX_evt_unidentified_ship
	#show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Flag_Country_GAPS_Amoeba_Spawners_Lost_Bonus
		every_owned_ship = { limit = { is_ship_size = space_amoeba } add_modifier = { modifier = Ship_Modifier_GAPS_Small_Amoeba_Lost days = -1 } }
		every_owned_ship = { limit = { is_ship_size = space_amoeba_mother } add_modifier = { modifier = Ship_Modifier_GAPS_Mother_Amoeba_Lost days = -1 } }
	}
}
