namespace = utopia

# The End of the Cycle: Reckoning
#Fixed possibility of Exile being a world already under colonization
#Might add a way to sacrifice planets to delay the Reckoning
country_event = {
	id = utopia.3320
	title = "utopia.3320.name"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_red_alert
	location = root
	
	is_triggered_only = yes
	desc = {
		text = "utopia.3320.desc.a"
		trigger = { has_country_flag = exile_world }
	}
	desc = {
		text = "utopia.3320.desc.b"
		trigger = { NOT = { has_country_flag = exile_world } }
	}	
	
	immediate = {
			set_global_flag = end_of_the_cycle_complete
			set_country_flag = end_of_the_cycle_reckoning
			clear_resources = yes
			add_resource = {
				minerals = 1000
				energy = 500
				food = 100
				consumer_goods = 100
				alloys = 100
				influence = 100
			}	
		
			if = {
				limit = { NOT = { exists = event_target:shroud_country } }
				create_country = {
					name = "NAME_Creatures_of_the_Shroud"
					type = shroud_spirits
					flag = {
						icon = {
							category = "special"
							file = "the_shroud.dds"
						}
						background= {
							category = "backgrounds"
							file = "00_solid.dds"
						}
						colors={
						"dark_purple"
						"black"
						"null"
						"null"
						}
					}
				}
				last_created_country = {
					establish_communications_no_message = root
					save_global_event_target_as = shroud_country
				}
			}
		
			capital_scope = {
				save_event_target_as = former_capital
			}
		
		every_subject = {
			set_subject_of = {
				who = none
			}
		}		
		random_system = {
			limit = {
				NOT = {
					any_country = {
						any_system_within_border = {
							is_same_value = prevprev
						}
					}
				}
				any_system_planet = {
					has_owner = no
					is_colonizable = yes
                    is_under_colonization = no				
				}
			}
			random_planet = {
				limit = {
					has_owner = no
					is_colonizable = yes
                    is_under_colonization = no
				}	
				root = { set_country_flag = exile_world }
				set_planet_flag = exile_planet
				save_event_target_as = exile_world
				add_modifier = {modifier = exile days = -1}
			}	
		}
		random_system = {
			limit = {
				root = { NOT = { has_country_flag = exile_world } }
				any_system_planet = {
					has_owner = no
					is_colonizable = yes
                    is_under_colonization = no				
				}
			}
			random_planet = {
				limit = {
					has_owner = no
					is_colonizable = yes
                    is_under_colonization = no
				}	
				root = { set_country_flag = exile_world }
				save_event_target_as = exile_world
			}	
		}		
		if = {
			limit = { has_country_flag = exile_world }
            change_government = {
                civics = {
					civic = civic_covenant_broken
                    civic = civic_desperation
                }
            }
			event_target:exile_world = {
				create_colony = {
					owner = root
					species = owner_main_species
					ethos = owner
				}		
				set_name = "NAME_Exile"
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_mining
				add_district = district_generator
				add_building = building_capital
				add_building = building_foundry_1
				add_building = building_research_lab_1
				add_building = building_factory_1
				while = {
					limit = { 
						num_pops < 8
						free_housing > 0
					}
					create_pop = {
						species = owner
					}
				}
			}
            every_owned_pop = {
                limit = {has_trait = trait_bound_soul}
                modify_species = {
                    species = this
                    remove_trait = trait_bound_soul
                    add_trait = trait_severed_bond
                }
            }
			change_dominant_species = { species = last_created change_all = yes }

		}
		kill_leader = {
			type = ruler
			show_notification = no
			heir = yes
		}
		kill_leader = {
			type = ruler
			show_notification = no
			heir = no
		}	
		every_owned_leader = {
			kill_leader = { show_notification = no }
		}			
		if = {
			limit = { has_country_flag = exile_world }		
			create_leader = {
				class = ruler
				species = root.owner_species
				name = random
				skill = 5
			}
            last_created_leader = {
                add_trait = leader_trait_ruler_psionic
				add_ruler_trait = leader_trait_ruler_psionic
            }
			assign_leader = last_created_leader
		}	
		every_owned_fleet = { 
			destroy_fleet = this 
		}		
		every_planet = {
			limit = { has_modifier = covenant_shroud_marked }
			remove_modifier = covenant_shroud_marked
			remove_all_armies = yes
			every_owned_pop = {
				root = { 
					change_variable = { 
						which = "end_power" 
						value = 1 
					}
				}
			}
			
			if = {
				limit = {
					has_owner = yes
					owner = { NOT = { has_country_flag = end_of_the_cycle_reckoning } }
				}
				owner = {
					set_country_flag = end_of_the_cycle_reckoning
					set_country_flag = end_of_cycle_lost_planets
					country_event = { id = utopia.3321 }
				}			
			}
			
			if = {
				limit = { 
					NOT = { is_same_value = event_target:former_capital }
				}
				create_fleet = {
					name = "NAME_Shroud_Manifestation"
					settings = {
						spawn_debris = no
						is_boss = yes
					}				
					effect = {					
						set_owner = event_target:shroud_country
						create_ship = {
							name = "NAME_Fragment"
							design = "NAME_Shroud_Manifestation"
						}
						set_location = prev
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 3000
					}
				}
			}
				
			if = {
				limit = { 
					is_planet_class = pc_habitat 
				}
				destroy_colony = yes
				remove_planet = yes						
			}
			else_if = {
				limit = {
					is_planet_class = pc_ringworld_habitable
				}
				change_pc = pc_ringworld_habitable_damaged
				clear_planet_modifiers = yes
				clear_deposits = yes				
			}
			else = {
				change_pc = pc_shrouded
				clear_planet_modifiers = yes
				clear_deposits = yes
			}
		}	
		
		every_country = {
			limit = { 
				NOT = { is_same_value = root } 
				is_country_type = default
			}
			add_opinion_modifier = {
				modifier = opinion_doomed_us_all
				who = root
			}
			if = {
				limit = {
					NOT = { has_country_flag = end_of_the_cycle_reckoning }
				}
				set_country_flag = end_of_the_cycle_reckoning
				country_event = { id = utopia.3321 }		
			}			
		}

		create_fleet = {
			name = "NAME_The_End"
			settings = {
				spawn_debris = no
				ai_ignore_strength = yes
				is_boss = yes
			}
			effect = {
				save_global_event_target_as = the_end_of_the_cycle
				set_name = "Absorbed [Root.GetSpeciesNamePlural]"
				set_owner = event_target:shroud_country
				create_ship = {
					name = "NAME_Reckoning"
					design = "NAME_Warped_Consciousness"
				}
				set_location = event_target:former_capital
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = return_point
				set_aggro_range = 3000
				if = {
					limit = {
						root = { 
							check_variable = {
								which = "end_power"
								value < 500
							}
						}
					}
					add_modifier = {
						modifier = "absorbed_consciousness_1"
						days = -1
					}
				}
				else_if = {
					limit = {
						root = { 
							check_variable = {
								which = "end_power"
								value < 1000
							}
						}
					}
					add_modifier = {
						modifier = "absorbed_consciousness_2"
						days = -1
					}
				}
				else_if = {
					limit = {
						root = { 
							check_variable = {
								which = "end_power"
								value < 2500
							}
						}
					}
					add_modifier = {
						modifier = "absorbed_consciousness_3"
						days = -1
					}
				}
				else_if = {
					limit = {
						root = { 
							check_variable = {
								which = "end_power"
								value < 5000
							}
						}
					}
					add_modifier = {
						modifier = "absorbed_consciousness_4"
						days = -1
					}
				}	
				else = {
					add_modifier = {
						modifier = "absorbed_consciousness_5"
						days = -1
					}
				}
			}
		}
	}

	option = {
		name = "utopia.3320.opt.a"
	}
}


planet_event = {
	id = utopia.3322
	hide_window = yes
	
	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		owner = {
			OR = {
				has_modifier = covenant_end_of_the_cycle
				AND = {
					is_subject = yes
					overlord = { has_modifier = covenant_end_of_the_cycle }
				}				
			}	
		}
		NOT = { has_modifier = covenant_shroud_marked }
        is_under_colonization = no
	}
	
	mean_time_to_happen = {
		months = 1
	}
	
	immediate = {
		add_modifier = { modifier = covenant_shroud_marked days = -1 }
	}
}

# Whisperers - Madness
country_event = {
	id = utopia.3333
	title = "utopia.3333.name"
	desc = "utopia.3333.desc"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_mystic_reveal
	location = root
	
	is_triggered_only = yes
	
	trigger = {
		any_owned_planet = {
			num_pops > 1
			NOR = {
				has_modifier = whisperers_madness
				has_modifier = whisperers_psychosis
			}			
			any_owned_pop = {
                OR = {
				    has_trait = "trait_psionic"
                    has_trait = "trait_bound_soul"
                }
			}		
		}
	}
	
	immediate = {
		random_owned_planet = {
			limit = {
				num_pops > 1
				NOR = {
					has_modifier = whisperers_madness
					has_modifier = whisperers_psychosis
				}				
				any_owned_pop = {
                    OR = {
					    has_trait = "trait_psionic"
                        has_trait = "trait_bound_soul"
                    }
				}
			}
			save_event_target_as = planet_target
			random_owned_pop = {
				kill_pop = yes
			}			
		}
	}
	
	option = {
		name = "utopia.3333.opt.a"
		event_target:planet_target = {
			add_modifier = {
				modifier = whisperers_madness
				days = 3600
			}
		}		
	}
}

# Whisperers - Psychosis
#Sucks to be you, I guess
country_event = {
	id = utopia.3334
	title = "utopia.3334.name"
	desc = "utopia.3334.desc"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_mystic_reveal
	location = root
	
	is_triggered_only = yes
	
	trigger = {
		any_owned_planet = {
			num_pops > 5
			NOR = {
				has_modifier = whisperers_madness
				has_modifier = whisperers_psychosis
			}
			any_owned_pop = {
                OR = {
				    has_trait = "trait_psionic"
                    has_trait = "trait_bound_soul"
                }
			}		
		}
	}
	
	immediate = {
		random_owned_planet = {
			limit = {
				num_pops > 5
				NOR = {
					has_modifier = whisperers_madness
					has_modifier = whisperers_psychosis
				}				
				any_owned_pop = {
                    OR = {
					    has_trait = "trait_psionic"
                        has_trait = "trait_bound_soul"
                    }
				}
			}
			save_event_target_as = planet_target
			if = {
				limit = {
					num_pops > 20
				}
				random_owned_pop = {
					kill_pop = yes
				}	
				random_owned_pop = {
					kill_pop = yes
				}				
			}
			if = {
				limit = {
					num_pops > 15
				}
				random_owned_pop = {
					kill_pop = yes
				}	
				random_owned_pop = {
					kill_pop = yes
				}				
			}	
			if = {
				limit = {
					num_pops > 10
				}
				random_owned_pop = {
					kill_pop = yes
				}	
				random_owned_pop = {
					kill_pop = yes
				}				
			}	
			random_owned_pop = {
				kill_pop = yes
			}	
			random_owned_pop = {
				kill_pop = yes
			}			
		}
	}
	
	option = {
		name = "utopia.3334.opt.a"
		event_target:planet_target = {
			add_modifier = {
				modifier = whisperers_psychosis
				days = 3600
			}
		}		
	}
}

#Make composer of strands do his thing to soul bound pops as well as psionic ones
country_event = {
	id = utopia.3341
	title = "utopia.3341.name"
	desc = "utopia.3341.desc"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_mystic_reveal
	location = root
	
	is_triggered_only = yes
	
	immediate = {
		random_owned_planet = {
			limit = {
				any_owned_pop = {
                    OR = {
					    has_trait = trait_psionic
                        has_trait = trait_bound_soul
                    }
				}
			}
			random_owned_pop = {
				limit = {
                    OR = {
					    has_trait = trait_psionic
                        has_trait = trait_bound_soul
                    }
				}
				species = { save_event_target_as = species_target }
			}		
		}
	}
	
	option = {
		name = "utopia.3341.opt.a"
		event_target:species_target = {
			mutate_species = yes
		}
	}
}