namespace = nicollnew

###RELATIONSHIP MODIFIERS###
#Starting to build the NDB
country_event = {
    id = nicollnew.10
    hide_window = yes
    is_triggered_only = yes
	
	trigger = {
		FROM = { is_megastructure_type = nicoll_beam_1 }
	}
	
	immediate = {
		every_country = {
			limit = {
				NOT = { is_country_type = primitive }
				NOT = { is_country = ROOT }
			}
			add_opinion_modifier = { who = ROOT modifier = opinion_building_nicoll_beam }
		}
	}
}

#The NDB is completed, people now worship you
country_event = {
    id = nicollnew.11
    hide_window = yes
    is_triggered_only = yes
	
	trigger = {
		FROM = { is_megastructure_type = nicoll_beam_4 }
	}
	
    immediate = {
		every_country = {
			limit = {
				NOT = { is_country_type = primitive }
				NOT = { is_country = ROOT }
			}
			remove_opinion_modifier = { who = ROOT modifier = opinion_building_nicoll_beam }
			add_opinion_modifier = { who = ROOT modifier = opinion_nicoll_fear }
		}
    }
}

#Other empires react to a planet being broken (federation members don't care actually, unless it's their planet you destroyed)
country_event = {
    id = nicollnew.12
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		#fired at allied planet
		if = {
			limit = {
				event_target:ndbtarget = {
					solar_system = {
						space_owner = {
							is_in_federation_with = root
						}
					}
				}
			}
			every_country = {
				limit = {
					NOT = { is_country_type = primitive }
					NOT = { is_country = ROOT }
				}
				remove_opinion_modifier = { who = ROOT modifier = opinion_nicoll_fear }
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_planet }
			}

		}
		#didn't fire at allied planet
		else = {
			every_country = {
				limit = {
					NOT = { is_country_type = primitive }
					NOT = { is_country = ROOT }
					NOT = {
						is_in_federation_with = root
					}
				}
				remove_opinion_modifier = { who = ROOT modifier = opinion_nicoll_fear }
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_planet }
			}
		}
    }
}

#Other empires react to a star being broken (federation members don't care actually, unless it's their planet you destroyed)
country_event = {
    id = nicollnew.19
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		#fired at allied planet
		if = {
			limit = {
				event_target:ndbsystembreak = {
					space_owner = {
						is_in_federation_with = root
					}
				}
			}
			every_country = {
				limit = {
					NOT = { is_country_type = primitive }
					NOT = { is_country = ROOT }
				}
				remove_opinion_modifier = { who = ROOT modifier = opinion_nicoll_fear }
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_system }
			}

		}
		#didn't fire at allied planet
		else = {
			every_country = {
				limit = {
					NOT = { is_country_type = primitive }
					NOT = { is_country = ROOT }
					NOT = {
						is_in_federation_with = root
					}
				}
				remove_opinion_modifier = { who = ROOT modifier = opinion_nicoll_fear }
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_system }
			}
		}
		if = {
			limit = {
				event_target:ndbsystembreak = {
					any_system_planet = {
						is_colony = yes
					}
				}
			}
			event_target:ndbsystembreak = {
				space_owner = {
					add_opinion_modifier = { who = ROOT modifier = opinion_broke_our_system }
				}
			}
		}
    }
}

country_event = {
    id = nicoll.13
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		every_country = {
			limit = {
				NOT = { is_country_type = primitive }
				NOT = { is_country = ROOT }
			}
			add_opinion_modifier = { who = ROOT modifier = opinion_harmed_crisis }
		}
    }
}

country_event = {
    id = nicollnew.18
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		#fired at allied planet
		if = {
			limit = {
				event_target:ndbtarget = {
					solar_system = {
						space_owner = {
							is_in_federation_with = root
						}
					}
				}
			}
			every_country = {
				limit = {
					NOT = { is_country_type = primitive }
					NOT = { is_country = ROOT }
				}
				remove_opinion_modifier = { who = ROOT modifier = opinion_nicoll_fear }
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_planet_buildings }
			}

		}
		#didn't fire at allied planet
		else = {
			every_country = {
				limit = {
					NOT = { is_country_type = primitive }
					NOT = { is_country = ROOT }
					NOT = {
						is_in_federation_with = root
					}
				}
				remove_opinion_modifier = { who = ROOT modifier = opinion_nicoll_fear }
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_planet_buildings }
			}
		}
    }
}

###STAR DESTRUCTION###
#Time to fire
country_event = {
	id = nicollnew.5000
	title = nicollnew.5000.name
	desc = nicollnew.5000.desc
	picture = GFX_evt_nicoll
	show_sound = event_sensor_ping
	location = FROMFROM
	
	is_triggered_only = yes
	
	immediate = {
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target_star
			}
			save_event_target_as = ndbtarget
		}
		every_planet_within_border = {
			limit = {
				has_planet_flag = ndb_built
			}
			set_planet_flag = nicollfiring_soon
		}
	}
	
	option = {
		name = nicollnew.5000.a
		hidden_effect = {
			country_event = { id = nicollnew.5001 days = 1 }
			country_event = { id = nicollnew.999 days = 1 }
		}
	}
}

country_event = {
	id = nicollnew.5001
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.5002 days = 15 }
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_gate
				}
				upgrade_megastructure_to = nicoll_beam_gate_1
			}
		}
	}
}

country_event = {
	id = nicollnew.5002
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.5003 days = 7 }
		country_event = { id = nicollnew.19 days = 7 }
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_gate_1
				}
				upgrade_megastructure_to = nicoll_beam_gate_2
				solar_system = {
					save_event_target_as = ndbsystembreak
				}
			}
		}
	}
}

country_event = {
	id = nicollnew.5003
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.5004 days = 1 }
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target_star
			}
			solar_system = {
				save_event_target_as = target_system
				every_neighbor_system = {
					remove_hyperlane = {
						from = event_target:target_system
						to = THIS
					}
				}
				every_system_planet = {
					limit = {
						is_star = no
					}
					remove_planet = yes
				}
				every_system_planet = {
					limit = {
						is_star = yes
					}
					chance_pc = pc_black_hole
					while = { 
						limit = { 
							planet_size > 5
						} 
						change_planet_size = -1			
					}
				}
				random_system_planet = {
					limit = { 
						AND = {
							is_star = yes
							NOT = {
								has_planet_flag = neutronstardone
							}
						}
					}
					change_pc = pc_neutron_star
					set_planet_flag = neutronstardone
				}
				random_system_planet = {
					limit = { 
						AND = {
							is_star = yes
							NOT = {
								has_planet_flag = neutronstardone
							}
						}
					}
					change_pc = pc_neutron_star
					set_planet_flag = neutronstardone
				}
				random_system_planet = {
					limit = { 
						AND = {
							is_star = yes
							NOT = {
								has_planet_flag = neutronstardone
							}
						}
					}
					change_pc = pc_neutron_star
					set_planet_flag = neutronstardone
				}
				random_system_planet = {
					limit = { 
						AND = {
							is_star = yes
							NOT = {
								has_planet_flag = neutronstardone
							}
						}
					}
					change_pc = pc_neutron_star
					set_planet_flag = neutronstardone
				}
				random_system_planet = {
					limit = { 
						AND = {
							is_star = yes
							NOT = {
								has_planet_flag = neutronstardone
							}
						}
					}
					change_pc = pc_neutron_star
					set_planet_flag = neutronstardone
				}
				set_asteroid_belt = {
					radius = 0
				}
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
						}
						remove_megastructure = this
					}
				}
				asteroids_distance = 0
				every_fleet_in_system = { destroy_fleet = this }
				random_system_planet = {
					limit = { is_star = yes }
					create_ambient_object = {
						type = blackhole_detonator_explosion_object
						location = this
						duration = 20
						
						use_3d_location = yes
						
						entity_offset = { min = 0 max = 0 }
						entity_offset_angle = { min = 0 max = 0 }
						entity_offset_height = { min = 0 max = 0 }
						
						entity_scale_to_size = no
						scale = 1
					}
					create_ambient_object = {
						type = blackhole_detonator_explosion_object
						location = this
						duration = 20
						
						use_3d_location = yes
						
						entity_offset = { min = 0 max = 0 }
						entity_offset_angle = { min = 0 max = 0 }
						entity_offset_height = { min = 0 max = 0 }
						
						entity_scale_to_size = no
						scale = 1
					}
				}
				every_fleet_in_system = { destroy_fleet = this }
				every_system_ambient_object = { destroy_ambient_object = this }
			}
			remove_planet_flag = nicoll_beam_target_star
		}
	}
}

#RESET STAR
country_event = {
	id = nicollnew.5004
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		remove_country_flag = firing_ndb_star
		remove_country_flag = firing_ndb_planet
		every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
						}
						remove_megastructure = this
					}
				}
				spawn_megastructure = { 
					type = "nicoll_beam_4" 
					location = FROMFROM
					owner = space_owner
				}
				spawn_megastructure = { 
					type = "nicoll_beam_side_gate" 
					location = FROMFROM
					owner = space_owner
				}
			}
			remove_planet_flag = nicollfiring_soon
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			remove_planet_flag = nicoll_beam_target
		}
	}
}

###TARGETING###
#Target Designated!
country_event = {
	id = nicollnew.20
	title = nicollnew.20.name
	desc = nicollnew.20.desc
	picture = GFX_evt_nicoll
	show_sound = event_sensor_ping
	location = FROMFROM
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { is_megastructure_type = nicoll_beam_target_marker }
	}
	
	option = {
		name = nicollnew.20.a
		hidden_effect = {
			set_country_flag = firing_ndb_planet
			remove_country_flag = firing_ndb_star
		}
	}
}

country_event = {
	id = nicollnew.21
	title = nicollnew.21.name
	desc = nicollnew.21.desc
	picture = GFX_evt_nicoll
	show_sound = event_sensor_ping
	location = FROMFROM
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { is_megastructure_type = nicoll_beam_gate }
	}
	
	option = {
		name = nicollnew.20.a
		hidden_effect = {
			set_country_flag = firing_ndb_star
			remove_country_flag = firing_ndb_planet
		}
	}
}

###PICKING INTENSITY###

country_event = {
	id = nicollnew.98
	hide_window = yes
	location = FROMFROM
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { is_megastructure_type = nicoll_beam_5 }
	}
	
	immediate = {
		if = {
			limit = {
				has_country_flag = firing_ndb_planet
			}
			country_event = { id = nicollnew.99 }
		}
		if = {
			limit = {
				has_country_flag = firing_ndb_star
			}
			country_event = { id = nicollnew.5000 }
		}
	}
}

country_event = {
	id = nicollnew.99
	hide_window = yes
	location = FROMFROM
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = ndb_firing
		every_planet_within_border = {
			limit = {
				has_planet_flag = ndb_built
			}
			set_planet_flag = nicollfiring_soon
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			save_event_target_as = ndbtarget
		}
		country_event = { id = nicollnew.100 days = 1 }
	}
}

country_event = {
	id = nicollnew.100
	title = nicollnew.100.name
	desc = nicollnew.100.desc
	picture = GFX_evt_nicoll
	show_sound = event_sensor_ping
	location = FROMFROM
	
	is_triggered_only = yes
		
	#crack the planet (5000)
	option = {
		trigger = {
			host_has_dlc = "Apocalypse"
		}
		name = nicollnew.100.a
		custom_tooltip = nicollnew.100.a.tooltip
		allow = {
			resource_stockpile_compare = { resource = sr_solar_energy value >= 5000 }
		}
		add_resource = { sr_solar_energy = -5000 }
		hidden_effect = {
			country_event = { id = nicollnew.999 days = 1 }
			country_event = { id = nicollnew.700 days = 1 }
		}
	}
	#melt the planet (4000)
	option = {
		name = nicollnew.100.b
		custom_tooltip = nicollnew.100.b.tooltip
		allow = {
			resource_stockpile_compare = { resource = sr_solar_energy value >= 4000 }
		}
		add_resource = { sr_solar_energy = -4000 }
		hidden_effect = {
			country_event = { id = nicollnew.999 days = 1 }
			country_event = { id = nicollnew.600 days = 1 }
		}
	}
	#barren the planet (3000)
	option = {
		name = nicollnew.100.c
		custom_tooltip = nicollnew.100.c.tooltip
		allow = {
			resource_stockpile_compare = { resource = sr_solar_energy value >= 3000 }
		}
		add_resource = { sr_solar_energy = -3000 }
		hidden_effect = {
			country_event = { id = nicollnew.999 days = 1 }
			country_event = { id = nicollnew.500 days = 1 }
		}
	}
	#destroy buildings (2500)
	option = {
		name = nicollnew.100.d
		custom_tooltip = nicollnew.100.d.tooltip
		allow = {
			resource_stockpile_compare = { resource = sr_solar_energy value >= 2500 }
		}
		add_resource = { sr_solar_energy = -2500 }
		hidden_effect = {
			country_event = { id = nicollnew.999 days = 1 }
			country_event = { id = nicollnew.400 days = 1 }
		}
	}
	#scrap it
	option = {
		name = nicollnew.100.e
		custom_tooltip = nicollnew.100.e.tooltip
		hidden_effect = {
			country_event = { id = nicollnew.900 days = 1 }
		}
	}
}


###DAMAGE PLANET###

country_event = {
	id = nicollnew.400
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.401 days = 20 }
		if = {
			limit = {
				event_target:ndbtarget = {
					AND = {
						NOT = {
							is_planet_class = pc_infested
						}
						is_colony = yes
					}
				}
			}
			country_event = { id = nicollnew.18 days = 1 }
		}
		event_target:ndbtarget = {
			owner = {
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_our_planet_buildings }
			}
		}
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker
				}
				upgrade_megastructure_to = nicoll_beam_target_marker_1
			}
		}
	}
}

country_event = {
	id = nicollnew.401
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.402 days = 15 }
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker_1
				}
				upgrade_megastructure_to = nicoll_beam_target_marker_2
			}
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			if = {
				limit = {
					NOR = {
						is_planet_class = pc_habitat 
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_gigaorbital_ring
						is_planet_class = pc_habitable_gas_giant
						is_planet_class = pc_interstellar_habitat
						is_planet_class = pc_interstellar_ringworld_habitable 
						is_planet_class = pc_giga_ringworld_habitable 
						is_planet_class = pc_ringworld_city
						is_planet_class = pc_ringworld_machine
						is_planet_class = pc_ringworld_hive
					}
				}
				change_pc = pc_ll_temperate
				add_planet_devastation = 100
			}
			if = {
				limit = {
					is_planet_class = pc_infested 
				}
				change_pc = pc_infested
			}
			if = {
				limit = {
					OR = {
						is_planet_class = pc_habitat 
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_gigaorbital_ring
						is_planet_class = pc_habitable_gas_giant
						is_planet_class = pc_interstellar_habitat
						is_planet_class = pc_interstellar_ringworld_habitable 
						is_planet_class = pc_giga_ringworld_habitable 
						is_planet_class = pc_ringworld_city
						is_planet_class = pc_ringworld_machine
						is_planet_class = pc_ringworld_hive
					}
				}
				add_planet_devastation = 100
			}
		}
	}
}

country_event = {
	id = nicollnew.402
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker_2
				}
				remove_megastructure = this
			}
		}
		every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
						}
						remove_megastructure = this
					}
				}
				spawn_megastructure = { 
					type = "nicoll_beam_4" 
					location = FROMFROM
					owner = space_owner
				}
				spawn_megastructure = { 
					type = "nicoll_beam_side_gate" 
					location = FROMFROM
					owner = space_owner
				}
			}
			remove_planet_flag = nicollfiring_soon
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			remove_planet_flag = nicoll_beam_target
		}
	}
}

###STERILIZE PLANET###

country_event = {
	id = nicollnew.500
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.501 days = 20 }
		if = {
			limit = {
				event_target:ndbtarget = {
					is_planet_class = pc_infested
				}
			}
			country_event = { id = nicollnew.13 days = 1 }
		}
		if = {
			limit = {
				event_target:ndbtarget = {
					AND = {
						NOT = {
							is_planet_class = pc_infested
						}
						is_colony = yes
					}
				}
			}
			country_event = { id = nicollnew.12 days = 1 }
		}
		if = {
			limit = {
				event_target:ndbtarget = {
					has_modifier = holy_planet
				}
			}
			set_country_flag = holy_world_killed
		}
		event_target:ndbtarget = {
			owner = {
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_our_planet }
			}
		}
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker
				}
				upgrade_megastructure_to = nicoll_beam_target_marker_1
			}
		}
	}
}

country_event = {
	id = nicollnew.501
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.502 days = 15 }
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker_1
				}
				upgrade_megastructure_to = nicoll_beam_target_marker_b
			}
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			create_ambient_object = {
				type = explosion_particle_object
				location = this
				duration = 50
				
				use_3d_location = yes
				
				entity_offset = { min = 0 max = 0 }
				entity_offset_angle = { min = 0 max = 360 }
				entity_offset_height = { min = 0 max = 0 }
				
				entity_scale_to_size = yes
				scale = 0.1
			}
			if = {
				limit = {
					NOR = {
						is_planet_class = pc_habitat 
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_gigaorbital_ring
						is_planet_class = pc_habitable_gas_giant
						is_planet_class = pc_interstellar_habitat
						is_planet_class = pc_interstellar_ringworld_habitable 
						is_planet_class = pc_giga_ringworld_habitable 
						is_planet_class = pc_ringworld_city
						is_planet_class = pc_ringworld_machine
						is_planet_class = pc_ringworld_hive
					}
				}
				change_pc = pc_barren
				add_modifier = {
					modifier = "terraforming_candidate"
					days = -1
				}
			}
			if = {
				limit = {
					OR = {
						is_planet_class = pc_habitat
						is_planet_class = pc_interstellar_habitat
					}
				}
				remove_planet = yes
			}
			if = {
				limit = {
					OR = {
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_interstellar_ringworld_habitable 
						is_planet_class = pc_giga_ringworld_habitable
						is_planet_class = pc_ringworld_city
						is_planet_class = pc_ringworld_machine
						is_planet_class = pc_ringworld_hive
					}
				}
				change_pc = pc_ringworld_habitable_damaged
			}
			if = {
				limit = {
					is_planet_class = pc_gigaorbital_ring 
				}
				chance_pc = pc_gigaorbital_ring_ruined
			}
			if = {
				limit = {
					is_planet_class = pc_habitable_gas_giant 
				}
				change_pc = pc_gas_giant
			}
		}
	}
}

country_event = {
	id = nicollnew.502
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker_b
				}
				remove_megastructure = this
			}
		}
		every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
						}
						remove_megastructure = this
					}
				}
				spawn_megastructure = { 
					type = "nicoll_beam_4" 
					location = FROMFROM
					owner = space_owner
				}
				spawn_megastructure = { 
					type = "nicoll_beam_side_gate" 
					location = FROMFROM
					owner = space_owner
				}
			}
			remove_planet_flag = nicollfiring_soon
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			remove_planet_flag = nicoll_beam_target
		}
	}
}

###MELT PLANET###

country_event = {
	id = nicollnew.600
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.601 days = 20 }
		if = {
			limit = {
				event_target:ndbtarget = {
					is_planet_class = pc_infested
				}
			}
			country_event = { id = nicollnew.13 days = 1 }
		}
		if = {
			limit = {
				event_target:ndbtarget = {
					AND = {
						NOT = {
							is_planet_class = pc_infested
						}
						is_colony = yes
					}
				}
			}
			country_event = { id = nicollnew.12 days = 1 }
		}
		if = {
			limit = {
				event_target:ndbtarget = {
					has_modifier = holy_planet
				}
			}
			set_country_flag = holy_world_killed
		}
		event_target:ndbtarget = {
			owner = {
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_our_planet }
			}
		}
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker
				}
				upgrade_megastructure_to = nicoll_beam_target_marker_1
			}
		}
	}
}

country_event = {
	id = nicollnew.601
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.602 days = 15 }
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker_1
				}
				upgrade_megastructure_to = nicoll_beam_target_marker_c
			}
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			create_ambient_object = {
				type = explosion_particle_object
				location = this
				duration = 50
				
				use_3d_location = yes
				
				entity_offset = { min = 0 max = 0 }
				entity_offset_angle = { min = 0 max = 360 }
				entity_offset_height = { min = 0 max = 0 }
				
				entity_scale_to_size = yes
				scale = 0.1
			}
			if = {
				limit = {
					NOR = {
						is_planet_class = pc_habitat 
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_gigaorbital_ring
						is_planet_class = pc_habitable_gas_giant
						is_planet_class = pc_interstellar_habitat
						is_planet_class = pc_interstellar_ringworld_habitable 
						is_planet_class = pc_giga_ringworld_habitable
						is_planet_class = pc_ringworld_city
						is_planet_class = pc_ringworld_machine
						is_planet_class = pc_ringworld_hive
					}
				}
				change_pc = pc_molten
				set_deposit = d_iodizium_deposit
			}
			if = {
				limit = {
					OR = {
						is_planet_class = pc_habitat
						is_planet_class = pc_interstellar_habitat
					}
				}
				remove_planet = yes
			}
			if = {
				limit = {
					OR = {
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_interstellar_ringworld_habitable 
						is_planet_class = pc_giga_ringworld_habitable 
						is_planet_class = pc_ringworld_city
						is_planet_class = pc_ringworld_machine
						is_planet_class = pc_ringworld_hive
					}
				}
				change_pc = pc_ringworld_habitable_damaged
			}
			if = {
				limit = {
					is_planet_class = pc_gigaorbital_ring 
				}
				chance_pc = pc_gigaorbital_ring_ruined
			}
			if = {
				limit = {
					is_planet_class = pc_habitable_gas_giant 
				}
				change_pc = pc_gas_giant
				change_planet_size = -5
			}
		}
	}
}

country_event = {
	id = nicollnew.602
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker_c
				}
				remove_megastructure = this
			}
		}
		every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
						}
						remove_megastructure = this
					}
				}
				spawn_megastructure = { 
					type = "nicoll_beam_4" 
					location = FROMFROM
					owner = space_owner
				}
				spawn_megastructure = { 
					type = "nicoll_beam_side_gate" 
					location = FROMFROM
					owner = space_owner
				}
			}
			remove_planet_flag = nicollfiring_soon
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			remove_planet_flag = nicoll_beam_target
		}
	}
}

###CRACK PLANET###

country_event = {
	id = nicollnew.700
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.701 days = 20 }
		if = {
			limit = {
				event_target:ndbtarget = {
					is_planet_class = pc_infested
				}
			}
			country_event = { id = nicollnew.13 days = 1 }
		}
		if = {
			limit = {
				event_target:ndbtarget = {
					AND = {
						NOT = {
							is_planet_class = pc_infested
						}
						is_colony = yes
					}
				}
			}
			country_event = { id = nicollnew.12 days = 1 }
		}
		if = {
			limit = {
				event_target:ndbtarget = {
					has_modifier = holy_planet
				}
			}
			set_country_flag = holy_world_killed
		}
		event_target:ndbtarget = {
			owner = {
				add_opinion_modifier = { who = ROOT modifier = opinion_broke_our_planet }
			}
		}
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker
				}
				upgrade_megastructure_to = nicoll_beam_target_marker_1
			}
		}
	}
}

country_event = {
	id = nicollnew.701
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.702 days = 15 }
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker_1
				}
				upgrade_megastructure_to = nicoll_beam_target_marker_d
			}
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			create_ambient_object = {
				type = explosion_particle_object
				location = this
				duration = 50
				
				use_3d_location = yes
				
				entity_offset = { min = 0 max = 0 }
				entity_offset_angle = { min = 0 max = 360 }
				entity_offset_height = { min = 0 max = 0 }
				
				entity_scale_to_size = yes
				scale = 0.1
			}
			if = {
				limit = {
					NOR = {
						is_planet_class = pc_habitat 
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_gigaorbital_ring
						is_planet_class = pc_habitable_gas_giant
						is_planet_class = pc_interstellar_habitat
						is_planet_class = pc_interstellar_ringworld_habitable 
						is_planet_class = pc_giga_ringworld_habitable
						is_planet_class = pc_ringworld_city
						is_planet_class = pc_ringworld_machine
						is_planet_class = pc_ringworld_hive
					}
				}
				change_pc = pc_shattered
				set_deposit = d_nicoll_deposit
			}
			if = {
				limit = {
					OR = {
						is_planet_class = pc_habitat
						is_planet_class = pc_interstellar_habitat
					}
				}
				remove_planet = yes
			}
			if = {
				limit = {
					OR = {
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_interstellar_ringworld_habitable 
						is_planet_class = pc_giga_ringworld_habitable
						is_planet_class = pc_ringworld_city
						is_planet_class = pc_ringworld_machine
						is_planet_class = pc_ringworld_hive
					}
				}
				change_pc = pc_ringworld_habitable_damaged
			}
			if = {
				limit = {
					is_planet_class = pc_gigaorbital_ring 
				}
				remove_planet = yes
			}
			if = {
				limit = {
					is_planet_class = pc_habitable_gas_giant 
				}
				change_pc = pc_molten
				change_planet_size = -15
			}
		}
	}
}

country_event = {
	id = nicollnew.702
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker_d
				}
				remove_megastructure = this
			}
		}
		every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
						}
						remove_megastructure = this
					}
				}
				spawn_megastructure = { 
					type = "nicoll_beam_4" 
					location = FROMFROM
					owner = space_owner
				}
				spawn_megastructure = { 
					type = "nicoll_beam_side_gate" 
					location = FROMFROM
					owner = space_owner
				}
			}
			remove_planet_flag = nicollfiring_soon
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			remove_planet_flag = nicoll_beam_target
		}
	}
}

###RESET###

country_event = {
	id = nicollnew.900
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		remove_country_flag = firing_ndb_star
		remove_country_flag = firing_ndb_planet
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = nicoll_beam_target_marker
				}
				remove_megastructure = this
			}
		}
		every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
							is_megastructure_type = nicoll_beam_5
						}
						remove_megastructure = this
					}
				}
				spawn_megastructure = { 
					type = "nicoll_beam_4" 
					location = FROMFROM
					owner = space_owner
				}
			}
			remove_planet_flag = nicollfiring_soon
		}
		every_planet = {
			limit = {
				has_planet_flag = nicoll_beam_target
			}
			remove_planet_flag = nicoll_beam_target
		}
	}
}

###EVENTS THAT SPAWN THE BEAM###

country_event = {
	id = nicollnew.999
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = nicollnew.1000 days = 1 }
		every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
							is_megastructure_type = nicoll_beam_5
						}
						remove_megastructure = this
					}
				}
				every_system_megastructure = {
					if = {
						limit = {
							exists = this
							is_megastructure_type = nicoll_beam_side_gate
						}
						upgrade_megastructure_to = nicoll_beam_side_gate_1
					}
				}
				spawn_megastructure = { 
					type = "nicoll_beam_f1" 
					location = FROMFROM
					owner = space_owner
				}
				spawn_megastructure = { 
					type = "nicoll_beam_6" 
					location = FROMFROM
					owner = space_owner
				}
			}
		}
	}
}

country_event = {
    id = nicollnew.1000
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		country_event = { id = nicollnew.1001 days = 1 }
        every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				spawn_megastructure = { 
					type = "nicoll_beam_f2" 
					location = FROMFROM
					owner = space_owner
				}
			}
        }
    }
}

country_event = {
    id = nicollnew.1001
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		country_event = { id = nicollnew.1002 days = 1 }
        every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				spawn_megastructure = { 
					type = "nicoll_beam_f3" 
					location = FROMFROM
					owner = space_owner
				}
			}
        }
    }
}

country_event = {
    id = nicollnew.1002
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		country_event = { id = nicollnew.1003 days = 1 }
        every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				spawn_megastructure = { 
					type = "nicoll_beam_f4" 
					location = FROMFROM
					owner = space_owner
				}
			}
        }
    }
}

country_event = {
    id = nicollnew.1003
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		country_event = { id = nicollnew.1004 days = 1 }
        every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				spawn_megastructure = { 
					type = "nicoll_beam_f5" 
					location = FROMFROM
					owner = space_owner
				}
			}
        }
    }
}

country_event = {
    id = nicollnew.1004
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		country_event = { id = nicollnew.1005 days = 1 }
        every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				spawn_megastructure = { 
					type = "nicoll_beam_f6" 
					location = FROMFROM
					owner = space_owner
				}
			}
        }
    }
}

country_event = {
    id = nicollnew.1005
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		country_event = { id = nicollnew.1006 days = 1 }
        every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				spawn_megastructure = { 
					type = "nicoll_beam_f7" 
					location = FROMFROM
					owner = space_owner
				}
			}
        }
    }
}

country_event = {
    id = nicollnew.1006
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
		country_event = { id = nicollnew.1007 days = 2 }
        every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				spawn_megastructure = { 
					type = "nicoll_beam_f8" 
					location = FROMFROM
					owner = space_owner
				}
			}
        }
    }
}

country_event = {
    id = nicollnew.1007
    hide_window = yes
    is_triggered_only = yes
	
    immediate = {
        every_planet_within_border = {
			limit = {
				has_planet_flag = nicollfiring_soon
			}
			solar_system = {
				spawn_megastructure = { 
					type = "nicoll_beam_pew" 
					location = FROMFROM
					owner = space_owner
				}
			}
			space_owner = {
				save_event_target_as = nicoll_country
			}
        }
    }
}

