namespace = SMCO_rogue_planet

#Rogue planet default spawning mechanism (initiated from on_entering_system_first_time)
ship_event = {
	id = SMCO_rogue_planet.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		this = { is_ship_class = shipclass_science_ship }
		owner = {
			is_country_type = default
		}
		from = { has_star_flag = SMCO_can_spawn_rogue_system }
		OR = {
			has_global_flag = smco_rogue_planet_spawn_default
			has_global_flag = smco_rogue_planet_spawn_hybrid
		}
	}

	immediate = {
		log = "SMCO_rogue_planet.1 running..."
		from = {
			if = {
				limit = {
					OR = {
						has_global_flag = smco_rogue_planet_spawn_default
						has_global_flag = smco_rogue_planet_spawn_hybrid
					}
				}
				SMCO_rogue_planet_system_spawn = yes
			}
			remove_star_flag = SMCO_can_spawn_rogue_system
		}

		owner = {
			if = {
				limit = {
					NOT = { has_country_flag = SMCO_something_detected }
					root = { is_ship_class = shipclass_science_ship }
					NOT = { has_technology = tech_experimental_subspace_navigation }
					is_ai = no
				}
				
				log = "Running SMCO_rogue_planet.2 activation"
				country_event = { id = SMCO_rogue_planet.2 days = -1 }
			}
		}
	}
}
#First rogue planet system discovery notification (initiated from SMCO_rogue_planet.1)
country_event = {
	id = SMCO_rogue_planet.2
	title = "SMCO_rogue_planet.2.title"
	desc = "SMCO_rogue_planet.2.desc"
	picture = GFX_evt_SMCO_empty_space
	location = from.solar_system

	is_triggered_only = yes

	option = {
		name = "SMCO_rogue_planet.2.ok"
		hidden_effect = { set_country_flag = SMCO_something_detected }
	}
}

#Connecting hyperlanes to rogue planet systems (initiated from on_entering_system)
ship_event = {
	id = SMCO_rogue_planet.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_class = shipclass_science_ship
		leader = { leader_class = scientist }
		owner = { has_technology = tech_experimental_subspace_navigation }
	}

	immediate = {
		log = "SMCO_rogue_planet.3 running..."
		owner = { save_event_target_as = ship_owner }
		from = {
			if = {
				limit = {
					NAND = {
						has_planet_class = pc_SMCO_void_star
						has_planet_class = pc_SMCO_sub_brown_dwarf_star
						AND = {
							has_planet_class = pc_dn_star
							OR = {
								has_planet_class = pc_SMCO_small_rogue_planet
								has_planet_class = pc_SMCO_sub_brown_dwarf_planet
							}
						}
					}
				}

				every_neighbor_system = {
					ignore_hyperlanes = yes
					if = {
						limit = {
							OR = {
								has_planet_class = pc_SMCO_void_star
								has_planet_class = pc_SMCO_sub_brown_dwarf_star
								AND = {
									has_planet_class = pc_dn_star
									OR = {
										has_planet_class = pc_SMCO_small_rogue_planet
										has_planet_class = pc_SMCO_sub_brown_dwarf_planet
									}
								}
							}
							NOT = { has_star_flag = SMCO_connected }
							distance = {
								source = prev
								min_distance >= 3
								max_distance <= 7
								type = euclidean
							}
						}
						
						add_hyperlane = {
							from = this
							to = prev
						}
						set_star_flag = SMCO_connected
	
						every_system_planet = {
							limit = {
								OR = {
									is_planet_class = pc_SMCO_void_star
									is_planet_class = pc_dn_star
								}
							}
			
							surveyed = {
								set_surveyed = yes
								surveyor = event_target:ship_owner
							}
						}
	
						event_target:ship_owner = {
							if = {
								limit = { NOT = { has_country_flag = SMCO_rogue_planet_linked_first } }
	
								set_country_flag = SMCO_rogue_planet_linked_first
							}
							if = {
								limit = {
									NOT = { has_country_flag = SMCO_something_detected }
									is_ai = no
								}
	
								country_event = {
									id = SMCO_rogue_planet.4
									days = 1
								}
							}
							if = {
								limit = {
									has_country_flag = SMCO_something_detected
									has_country_flag = SMCO_rogue_planet_notif_enabled
									is_ai = no
								}
				
								country_event = {
									id = SMCO_rogue_planet.5
									days = 1
								}
							}
						}
					}
				}
			}
		}
	}
}

#Dialogue for opening hyperspace lanes to Empty Space, and has not detected the possible presence of a rogue planet in Empty Space at any point
country_event = {
	id = SMCO_rogue_planet.4
	is_triggered_only = yes
	title = "SMCO_rogue_planet.4.title"
	desc = "SMCO_rogue_planet.4.desc"
	location = fromfrom
	picture = GFX_evt_SMCO_empty_space

	trigger = {
		has_country_flag = SMCO_rogue_planet_notif_enabled
	}

	option = {
		trigger = {
			NOR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_militarist
			}
		}
		name = "SMCO_rogue_planet.4.a"
		hidden_effect = { set_country_flag = SMCO_something_detected }
	}

	option = {
		trigger = {
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_militarist
			}
		}
		name = "SMCO_rogue_planet.4.b"
		hidden_effect = { set_country_flag = SMCO_something_detected }
	}
}
#Dialogue for opening up hyperspace lanes to Empty Space, and has detected the possible presence of a rogue planet in Empty Space at some point
country_event = {
	id = SMCO_rogue_planet.5
	is_triggered_only = yes
	title = "SMCO_rogue_planet.4.title"
	desc = "SMCO_rogue_planet.5.desc"
	location = fromfrom
	picture = GFX_evt_SMCO_empty_space

	trigger = {
		has_country_flag = SMCO_rogue_planet_notif_enabled
	}

	option = {
		trigger = {
			NOR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_militarist
			}
		}
		name = "SMCO_rogue_planet.4.a"
	}

	option = {
		trigger = {
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_militarist
			}
		}
		name = "SMCO_rogue_planet.4.b"
	}
}

#Delete non-science ships attempting to enter Empty Space is prereq tech not researched
fleet_event = {
	id = SMCO_rogue_planet.6
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				from = {
					OR = {
						is_star_class = sc_SMCO_void
						is_star_class = sc_SMCO_rogue_event
					}
				}
				root = { NOT = { is_ship_class = shipclass_science_ship } }
				owner = {
					OR = {
						is_regular_empire = yes
						is_gestalt = yes
					}
					NOT = { has_technology = tech_SMCO_faint_hyperlane_stabilization }
				}
			}

			hidden_effect = { delete_fleet = root }

			owner = {
				country_event = {
					id = SMCO_rogue_planet.9
					days = -1
				}
			}
		}
	}
}

#If Jump Drive used to enter rogue planet system
ship_event = {
	id = SMCO_rogue_planet.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			OR = {
				is_star_class = sc_SMCO_rogue_event
				is_star_class = sc_SMCO_void
			}
			NOT = { has_star_flag = SMCO_connected }
		}

		owner = { has_technology = tech_jump_drive_1 }
	}

	immediate = {
		from = {
			every_system_planet = {
				limit = { is_planet_class = pc_SMCO_void_star }

				surveyed = {
					set_surveyed = yes
					surveyor = event_target:ship_owner
				}
			}

			random_neighbor_system = {
				ignore_hyperlanes = yes

				add_hyperlane = {
					from = this
					to = prev
				}
				prev = { set_star_flag = SMCO_connected }
			}

			event_target:ship_owner = {
				if = {
					limit = { NOT = { has_country_flag = SMCO_rogue_planet_linked_first } }

					set_country_flag = SMCO_rogue_planet_linked_first
				}
			}
		}
	}
}
#Immediately give Experimental Subspace Navigation and Weak Hyperspace Lane Stabilisation tech upon researching Jump Drive
country_event = {
	id = SMCO_rogue_planet.8
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		last_increased_tech = tech_jump_drive_1
		NOR = {
			has_technology = tech_experimental_subspace_navigation
			has_technology = tech_SMCO_faint_hyperlane_stabilization
		}
	}

	immediate = {
		if = {
			limit = { NOT = { has_technology = tech_experimental_subspace_navigation } }

			give_technology = { tech = tech_experimental_subspace_navigation }
		}
		if = {
			limit = { NOT = { has_technology = tech_SMCO_faint_hyperlane_stabilization } }

			give_technology = { tech = tech_SMCO_faint_hyperlane_stabilization }
		}
	}
}

#Dialogue accompanying the deletion of any ship that is not a science ship attempting to enter Empty Space without prereq tech (initiated from SMCO_rogue_planet.6)
country_event = {
	id = SMCO_rogue_planet.9
	title = "SMCO_rogue_planet.9.title"
	desc = {
		trigger = { NOT = { has_country_flag = SMCO_first_fleet_lost_rogue_planet } }
		text = "SMCO_rogue_planet.9.desc.a"
	}
	desc = {
		trigger = { has_country_flag = SMCO_first_fleet_lost_rogue_planet }
		text = "SMCO_rogue_planet.9.desc.b"
	}
	location = fromfrom
	picture = GFX_evt_SMCO_empty_space
	is_triggered_only = yes

	option = {
		trigger = { NOT = { has_country_flag = SMCO_first_fleet_lost_rogue_planet } }
		name = "SMCO_rogue_planet.9.a"
		hidden_effect = {
			set_country_flag = SMCO_first_fleet_lost_rogue_planet
		}
	}

	option = {
		trigger = { has_country_flag = SMCO_first_fleet_lost_rogue_planet }
		name = "SMCO_rogue_planet.9.b"
	}
}

#Rogue planet notification option (initiated from on_tech_increased)
country_event = {
	id = SMCO_rogue_planet.10
	title = "SMCO_rogue_planet.10.title"
	desc = "SMCO_rogue_planet.10.desc"
	picture = GFX_evt_SMCO_menu

	is_triggered_only = yes

	trigger = {
		last_increased_tech = tech_experimental_subspace_navigation
		OR = {
			has_global_flag = smco_rogue_planet_spawn_hybrid
			has_global_flag = smco_rogue_planet_spawn_default
		}
	}

	immediate = { set_country_flag = SMCO_rogue_planet_notif_enabled }

	option = {
		trigger = { has_country_flag = SMCO_rogue_planet_notif_enabled }
		name = "SMCO_rogue_planet.10.disable"
		hidden_effect = {
			remove_country_flag = SMCO_rogue_planet_notif_enabled
			country_event = {
				id = SMCO_rogue_planet.11
				days = -1
			}
		}
	}

	option = {
		trigger = { NOT = { has_country_flag = SMCO_rogue_planet_notif_enabled } }
		name = "SMCO_rogue_planet.10.enable"
		hidden_effect = {
			set_country_flag = SMCO_rogue_planet_notif_enabled
			country_event = {
				id = SMCO_rogue_planet.11
				days = -1
			}
		}
	}

	option = {
		name = "SMCO_rogue_planet.10.confirm"
	}
}
#Rogue planet notification option (initiated from SMCO_rogue_planet.10)
country_event = {
	id = SMCO_rogue_planet.11
	title = "SMCO_rogue_planet.10.title"
	desc = "SMCO_rogue_planet.10.desc"
	picture = GFX_evt_SMCO_menu

	is_triggered_only = yes

	option = {
		trigger = { has_country_flag = SMCO_rogue_planet_notif_enabled }
		name = "SMCO_rogue_planet.10.disable"
		hidden_effect = {
			remove_country_flag = SMCO_rogue_planet_notif_enabled
			country_event = {
				id = SMCO_rogue_planet.11
				days = -1
			}
		}
	}

	option = {
		trigger = { NOT = { has_country_flag = SMCO_rogue_planet_notif_enabled } }
		name = "SMCO_rogue_planet.10.enable"
		hidden_effect = {
			set_country_flag = SMCO_rogue_planet_notif_enabled
			country_event = {
				id = SMCO_rogue_planet.11
				days = -1
			}
		}
	}

	option = { name = "SMCO_rogue_planet.10.confirm" }
}

#Setting up rogue planet spawning flags (initiated from on_press_begin)
country_event = {
	id = SMCO_rogue_planet.12
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = {
			which = smco_rogue_planet_spawn
			value = 0
		}
		every_system = {
			prev = {
				change_variable = {
					which = smco_rogue_planet_spawn
					value = 1
				}
			}
		}
		
		divide_variable = {
			which = smco_rogue_planet_spawn
			value = 1000000
		}
		multiply_variable = {
			which = smco_rogue_planet_spawn
			value = 100000
		}
		log = "[This.smco_rogue_planet_spawn] value"
		while = {
			count = smco_rogue_planet_spawn

			random_system = {
				limit = { NOT = { has_star_flag = SMCO_can_spawn_rogue_system } }

				set_star_flag = SMCO_can_spawn_rogue_system
			}
		}
	}
}

#Rogue planet flyby spawning (initiated from SMCO_menu.4)
country_event = {
	id = SMCO_rogue_planet.13
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { has_global_flag = smco_rogue_planet_spawn_flyby }

			every_system = {
				limit = { has_star_flag = SMCO_can_spawn_rogue_system }

				random_list = {
					50 = {
						spawn_planet = {
							class = pc_SMCO_small_rogue_planet
							orbit_location = yes
							orbit_distance_offset = 360
							init_effect = {
								SMCO_rogue_planet_modifiers = yes
								SMCO_rogue_planet_deposits = yes
								smco_rogue_planet_naming = yes
								set_name = smco_rogue_planet_name
								prevent_anomaly = yes
							}
						}
						remove_star_flag = SMCO_can_spawn_rogue_system
					}
					50 = {
						spawn_planet = {
							class = pc_SMCO_sub_brown_dwarf_planet
							orbit_location = yes
							orbit_distance_offset = 360
							init_effect = {
								SMCO_rogue_planet_modifiers = yes
								SMCO_rogue_planet_deposits = yes
								smco_rogue_planet_naming = yes
								set_name = smco_rogue_planet_name
								prevent_anomaly = yes
							}
						}
						remove_star_flag = SMCO_can_spawn_rogue_system
					}
				}
			}
		}
		else_if = {
			limit = { has_global_flag = smco_rogue_planet_spawn_hybrid }

			every_system = {
				limit = { has_star_flag = SMCO_can_spawn_rogue_system }

				random_list = {
					50 = {}
					25 = {
						spawn_planet = {
							class = pc_SMCO_small_rogue_planet
							orbit_location = yes
							orbit_distance_offset = 360
							init_effect = {
								SMCO_rogue_planet_modifiers = yes
								SMCO_rogue_planet_deposits = yes
								smco_rogue_planet_naming = yes
								set_name = smco_rogue_planet_name
								prevent_anomaly = yes
							}
						}
						remove_star_flag = SMCO_can_spawn_rogue_system
					}
					25 = {
						spawn_planet = {
							class = pc_SMCO_sub_brown_dwarf_planet
							orbit_location = yes
							orbit_distance_offset = 360
							init_effect = {
								SMCO_rogue_planet_modifiers = yes
								SMCO_rogue_planet_deposits = yes
								smco_rogue_planet_naming = yes
								set_name = smco_rogue_planet_name
								prevent_anomaly = yes
							}
						}
						remove_star_flag = SMCO_can_spawn_rogue_system
					}
				}
			}
		}
	}
}