namespace = action

#This is where I overwrite any on_action events.

# Removed PDX's rebel ethos fix, as a) it is buggy as of 1.8, and b) even if they fix it (I assume they will), mine is better as it is based on the ethos of the revolting planet rather than chance.


# A rebel country has taken their initial planet, switch their country type.
country_event = {
	id = action.30
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_country_type = rebel
	}
	
	immediate = {
		set_country_type = default
		from.owner = { save_event_target_as = cc_former_owner }

		while = {
			count = 3
			create_leader = {
				class = scientist
				species = owner_main_species
				name = random
				skill = 1
				traits = {}
			}
			last_created_leader = {
				add_random_leader_trait = yes
			}
		}
		create_leader = {
			class = governor
			species = owner_main_species
			name = random
			skill = 1
			traits = {}
		}
		last_created_leader = {
			add_random_leader_trait = yes
		}
		create_leader = {
			class = admiral
			species = owner_main_species
			name = random
			skill = 1
			traits = {}
		}
		last_created_leader = {
			add_random_leader_trait = yes
		}
		create_leader = {
			class = general
			species = owner_main_species
			name = random
			skill = 1
			traits = {}
		}
		last_created_leader = {
			add_random_leader_trait = yes
		}
		
		
		if = {
			limit = {
				from.owner = {
					NOT = {
						any_owned_planet = { NOT = { is_same_value = from } }
					}
					NOR = {
						is_country_type = awakened_marauders
						is_country_type = dormant_marauders
						is_country_type = ruined_marauders
					}
				}
			}
			from.owner = {
				every_owned_starbase = { set_owner = root }
			}
		}
		from.owner = {
			set_timed_relation_flag = {
				flag = ccrebel_declare_war_on
				who = ROOT
				days = 30
			}
		}
		if = {
			limit = {
				has_country_flag = slave_rebels
			}
			random_playable_country = {
				limit = {
					reverse_has_relation_flag = {
						flag = rebelling_slaves_former_owner
						who = root
					}
				}
				save_event_target_as = rsfo
			}
		}
		from = {
			solar_system = {
				every_fleet_in_system = {
					limit = {
						is_ship_class = shipclass_military_station
						#owner = { is_same_value = prevprevprev.owner }
					}
					set_owner = root
				}
				starbase = {
					set_owner = root
				}
			}
		}
		
		add_resource = {
			minerals = 1000
			energy = 1000
			alloys = 500
			consumer_goods = 500
			food = 500
			influence = 500
		}
		
		#putting this here for the hell of it
		
		from.owner = {
			every_relation = {
				limit = { is_rival = prev }
				add_opinion_modifier = {
					who = root
					modifier = opinion_rebelled_from_rival
				}
			}
		}
		country_event = { id = action.3099 }

		if = {
			limit = {
				from.owner = {
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire

						AND = {
							is_subject = yes 
							OR = {
								is_subject_type = protectorate
								overlord = {
									OR = {
										is_country_type = fallen_empire
										is_country_type = awakened_fallen_empire
									}
								}
							}
						}
					}
				}
			}
			set_timed_country_flag = {
				flag = ccrebel_cut_rebellion_fleet_spawn
				days = 3600
			}
		}
	}
}

country_event = {
	id = action.3099
	hide_window = yes
	is_triggered_only = yes

	trigger = { exists = event_target:cc_former_owner }

	immediate = {
		#Give them an extra system

		capital_scope.solar_system = {
			closest_system = {
				min_steps = 1
				max_steps = 1
				limit = {
					is_within_borders_of = event_target:cc_former_owner
					starbase = { has_starbase_size = starbase_outpost }
					NOT = { any_system_planet = { is_colony = yes } }
				}
				starbase = { set_owner = root }
				
				add_claims = {
					who = event_target:cc_former_owner
					num_of_claims = 1
					show_notification = no
				}
			}

			if = {
				limit = { fromfrom = { NOT = { has_planet_flag = cc_revolution } } }
				closest_system = {
					min_steps = 1
					max_steps = 1
					limit = {
						is_within_borders_of = event_target:cc_former_owner
						starbase = { has_starbase_size = starbase_outpost }
						NOT = { any_system_planet = { is_colony = yes } }
					}
					starbase = { set_owner = root }
				
					add_claims = {
						who = event_target:cc_former_owner
						num_of_claims = 1
						show_notification = no
					}
				}
			}
		}
	}
}

# Planet transferred
planet_event = {
	id = action.42
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_planet_flag = ccrebel_rebellion_transfer }
		owner = { 
			OR = {
				has_policy_flag = appropriation_allowed	
				has_ethic = ethic_gestalt_consciousness
			}
		}		
	}

	immediate = {
		random_list = {
			25 = { 
				while = {
					count = 5				
					if = {
						limit = {
							OR = {
								num_pops > 10
								AND = {
									num_pops > 3
									free_housing < 1								
								}
							}
						}				
						random_owned_pop = {
							limit = {
								is_sapient = yes
								has_citizenship_rights = no
								NOT = { has_citizenship_type = { type = citizenship_assimilation } }								
							}
							pop_event = { id = refugees.4 }
							root = {
								change_variable = {
									which = land_appropriated
									value = 1
								}	
							}						
						}
					}
				}
			}
			25 = { 
				while = {
					count = 4				
					if = {
						limit = {
							OR = {
								num_pops > 10
								AND = {
									num_pops > 3
									free_housing < 1								
								}
							}
						}					
						random_owned_pop = {
							limit = {
								is_sapient = yes
								has_citizenship_rights = no
								NOT = { has_citizenship_type = { type = citizenship_assimilation } }								
							}
							pop_event = { id = refugees.4 }
							root = {
								change_variable = {
									which = land_appropriated
									value = 1
								}	
							}													
						}
					}
				}
			}	
			25 = { 
				while = {
					count = 3				
					if = {
						limit = {
							OR = {
								num_pops > 10
								AND = {
									num_pops > 3
									free_housing < 1								
								}
							}
						}					
						random_owned_pop = {
							limit = {
								is_sapient = yes
								has_citizenship_rights = no
								NOT = { has_citizenship_type = { type = citizenship_assimilation } }								
							}
							pop_event = { id = refugees.4 }
							root = {
								change_variable = {
									which = land_appropriated
									value = 1
								}	
							}
						}
					}
				}
			}				
		}
		
		while = {
			limit = {
				check_variable = {
					which = land_appropriated
					value > 0
				}			
			}
			
			change_variable = {
				which = land_appropriated
				value = -1
			}
			
			owner = {
				if = {
					limit = {
						any_owned_planet = {
							free_housing < 1
							any_owned_pop = {
								is_sapient = yes
								has_citizenship_rights = yes	
								OR = {
									is_pop_category = worker
									is_pop_category = simple_drone
								}
							}
						}				
					}
					
					random_owned_planet = {
						limit = {
							free_housing < 1
							any_owned_pop = {
								is_sapient = yes
								has_citizenship_rights = yes
								OR = {
									is_pop_category = worker
									is_pop_category = simple_drone
								}								
							}				
						}

						random_owned_pop = {
							limit = {
								is_sapient = yes
								has_citizenship_rights = yes
								OR = {
									is_pop_category = worker
									is_pop_category = simple_drone
								}								
							}
							
							resettle_pop = {
								pop = this
								planet = root
							}
						}
					}
				}
				else_if = {
					limit = {
						any_owned_planet = {
							any_owned_pop = {
								is_sapient = yes
								has_citizenship_rights = yes	
								OR = {
									is_pop_category = worker
									is_pop_category = simple_drone
								}								
							}
						}				
					}

					random_owned_planet = {
						limit = {
							any_owned_pop = {
								is_sapient = yes
								has_citizenship_rights = yes	
								OR = {
									is_pop_category = worker
									is_pop_category = simple_drone
								}								
							}				
						}

						random_owned_pop = {
							limit = {
								is_sapient = yes
								has_citizenship_rights = yes	
								OR = {
									is_pop_category = worker
									is_pop_category = simple_drone
								}								
							}
							
							resettle_pop = {
								pop = this
								planet = root
							}
						}
					}					
				}
			}			
		}
		
		if = {
			limit = {
				owner = { NOT = { has_ethic = ethic_gestalt_consciousness } }
			}
			add_modifier = {
				modifier = "land_appropriation"
				years = 5
			}	
		}			
	}
}