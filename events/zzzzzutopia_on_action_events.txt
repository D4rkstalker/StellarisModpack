# The Synthetic Age
country_event = {
	id = utopia.2551
	title = "utopia.2551.name"
	desc = "utopia.2551.desc"
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_synthetic_evolution

	is_triggered_only = yes

	immediate = {
		set_country_flag = synthetic_empire
		if = {
			limit = {
				has_policy_flag = robots_outlawed
			}
			set_policy = {
				policy = robot_pop_policy
				option = robot_pops_allowed
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					has_policy_flag = ai_servitude
					has_policy_flag = ai_outlawed
				}
			}
			set_policy = {
				policy = artificial_intelligence_policy
				option = ai_full_rights
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					is_active_resolution = "resolution_divinity_silence_the_soulless"
					is_active_resolution = "resolution_divinity_a_defined_purpose"
				}
			}
			owner = {
				set_timed_country_flag = { flag = resolution_breached_synthetic_evolution days = 3600 }
			}
		}
		give_technology = { tech = tech_bio_reactor message = no }

		create_species = {
			is_mod = yes
			name = this
			namelist = this
			plural = this
			class = "ROBOT"
			homeworld = root.species
			portrait = "2dsynth_01"
			traits = {
				trait = "trait_mechanical"
			}

			effect = {
				if = {
					limit = { host_has_dlc = "Synthetic Dawn Story Pack" }
					prev = {
						switch = {
							trigger = is_species_class
							HUM = { prev = { change_species_characteristics = { portrait = "2dsynth_01" } } }
							MAM = { prev = { change_species_characteristics = { portrait = "mammaliansynth" } } }
							REP = { prev = { change_species_characteristics = { portrait = "reptiliansynth" } } }
							AVI = { prev = { change_species_characteristics = { portrait = "aviansynth" } } }
							ART = { prev = { change_species_characteristics = { portrait = "arthropoidsynth" } } }
							MOL = { prev = { change_species_characteristics = { portrait = "Exsynth" } } }
							FUN = { prev = { change_species_characteristics = { portrait = "protogen" } } }
							PLANT = { prev = { change_species_characteristics = { portrait = "anthroid" } } }
							LITHOID = { prev = { change_species_characteristics = { portrait = "dragon_robot" } } }
							NECROID = { prev = { change_species_characteristics = { portrait = "dragon_normal" } } }
							AQUATIC = { prev = { change_species_characteristics = { portrait = "dragon_glowingsmall" } } }
							TOX = { prev = { change_species_characteristics = { portrait = "dragon_glowing" } } }
							Dragon = { prev = { change_species_characteristics = { portrait = "dragon_" } } }
							EKDRAG = { prev = { change_species_characteristics = { portrait = "kdragon" } } }
							EPARD = { prev = { change_species_characteristics = { portrait = "pardus" } } }
							ELYKO = { prev = { change_species_characteristics = { portrait = "lykos" } } }
							Wolf = { prev = { change_species_characteristics = { portrait = "Wolf" } } }
							Sergal = { prev = { change_species_characteristics = { portrait = "Sergal" } } }
							DRG = { prev = { change_species_characteristics = { portrait = "dragon_robot" } } }
							Draconic = { prev = { change_species_characteristics = { portrait = "dragon" } } }
						}
					}
				}

				rename_species = {
					prompt_country = root #If targeted country is a player they will get a popup asking for a name/plural/adjective combo. Otherwise the species will get a random name from the specified name_list
					name_list = ascension_list
				}

				save_event_target_as = new_robotic_species
			}
		}
		every_owned_pop = {
			limit = {
				is_being_purged = no
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:new_robotic_species
		}

		every_controlled_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:new_robotic_species
		}

		every_owned_army = {
			limit = {
				exists = species
				exists = planet
				species = {
					is_robotic = no
					is_livestock = no
				}
				army_type = assault_army
			}
			modify_army = {
				name = random
				type = "robotic_army"
				species = event_target:new_robotic_species
			}
		}

		every_owned_army = {
			limit = {
				exists = species
				exists = planet
				species = {
					is_robotic = no
					is_livestock = no
				}
				army_type = defense_army
			}
			modify_army = {
				name = random
				type = "robotic_defense_army"
				species = event_target:new_robotic_species
			}
		}

		every_owned_leader = {
			limit = {
				OR = {
					species = {
						is_robotic = no
						is_livestock = no
					}
					has_trait = leader_trait_synthetic
				}
				NOR = {
					has_leader_flag = renowned_leader
					has_leader_flag = legendary_leader
				}
			}
			change_species = event_target:new_robotic_species
			change_leader_portrait = species
		}
		every_pool_leader = {
			limit = {
				OR = {
					species = {
						is_robotic = no
						is_livestock = no
					}
					has_trait = leader_trait_synthetic
				}
			}
			change_species = event_target:new_robotic_species
			change_leader_portrait = species
		}
		change_dominant_species = { species = event_target:new_robotic_species }

		every_owned_leader = {
			limit = {
				species = { has_trait = trait_mechanical }
				NOR = {
					has_trait = leader_trait_synthetic
					has_leader_flag = renowned_leader
					has_leader_flag = legendary_leader
				}
			}
			add_trait_no_notify = leader_trait_synthetic
			remove_trait = leader_trait_cyborg
		}

		create_message = {
			type = MESSAGE_ALL_GAINED_TRAIT
			localization = MESSAGE_ALL_GAINED_TRAIT_DESC
			days = @toast_message_days
			variable = {
				type = key
				value = leader_trait_synthetic
				localization = TRAIT
			}
			variable = {
				key = TRAIT_KEY
				value = leader_trait_synthetic
			}
			variable = {
				key = "border"
				value = "GFX_invisible" #TODO Common/ no rarity frame
			}
		}

		every_envoy = {
			limit = {
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:new_robotic_species
			change_leader_portrait = species
		}
		every_pool_leader = {
			limit = {
				species = { has_trait = trait_mechanical }
				NOT = { has_trait = leader_trait_synthetic }
			}
			add_trait_no_notify = leader_trait_synthetic
			remove_trait = leader_trait_cyborg
		}

		observer_event = { id = observer.4 }
		every_country = {
			limit = {
				is_ai = no
				NOT = { is_same_value = root }
				has_communications = root
			}
			country_event = { id = utopia.2555 days = 5 }
			country_event = { id = utopia.2556 days = 10 }
		}
		if = {
			limit = {
				any_country = {
					is_fallen_empire = yes
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
			}
			random_country = {
				limit = {
					is_fallen_empire = yes
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2557 days = 15 }
			}
		}
		else = {
			random_country = {
				limit = {
					is_playable = yes
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2557 days = 15 }
			}
		}

		ROOT = {
			set_country_flag = synth_assimilation
		}
		if = {
			limit = {
				any_planet_within_border = {
					has_planet_flag = fotd_seperatist_planet@root
					owner = {
						has_country_flag = fotd_seperatist_country@root
					}
				}
			}
			country_event = { id = origin.6100 days = 5 random = 2 }
		}
	}

	option = {
		trigger = {
			is_homicidal = no
		}
		name = "utopia.2551.a"
		custom_tooltip = SYNTH_ASSIMILATION_CITIZENSHIP_ENABLED
	}

	option = {
		trigger = {
			is_homicidal = yes
		}
		name = "utopia.2551.a"
	}
}
