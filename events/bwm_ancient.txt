namespace = bwm_ancient

country_event = {
	id = bwm_ancient.0
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			OR = {
				is_ship_size = bwm_ancient_combat_drone
				is_ship_size = bwm_ancient_control_drone
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				FROMFROM = {
					is_ship_size = bwm_ancient_combat_drone
				}
			}
			every_owned_ship = {
				limit = {
					exists = this
					OR = {
						is_ship_size = bwm_ancient_combat_drone
						is_ship_size = bwm_ancient_control_drone
					}
				}
				if = {
					limit = {
						is_ship_size = bwm_ancient_combat_drone
					}
					random_list = {
						75 = {
							add_modifier = {
								modifier = "bwm_artifact_drone_bonus_1"
								days = 90
							}
						}
						25 = {
							add_modifier = {
								modifier = "bwm_artifact_drone_bonus_2"
								days = 90
							}
						}
					}
				}
				if = {
					limit = {
						is_ship_size = bwm_ancient_control_drone
					}
					if = {
						limit = {
							has_modifier = bwm_artifact_drone_boss_stack_buff
						}
						remove_modifier = "bwm_artifact_drone_boss_stack_buff"
					}
					random_list = {
						25 = {
							add_modifier = {
								modifier = "bwm_artifact_drone_bonus_1"
								days = 90
							}
						}
						75 = {
							add_modifier = {
								modifier = "bwm_artifact_drone_bonus_2"
								days = 90
							}
						}
					}
				}
				if = {
					limit = {
						NOT = {
							has_modifier = bwm_artifact_drone_malus
						}
					}
					repair_ship = yes
				}
			}
		}
		if = {
			limit = {
				FROMFROM = {
					is_ship_size = bwm_ancient_control_drone
				}
			}
			every_owned_ship = {
				limit = {
					exists = this
					OR = {
						is_ship_size = bwm_ancient_combat_drone
						is_ship_size = bwm_ancient_control_drone
					}
				}
				if = {
					limit = {
						OR = {
							has_modifier = bwm_artifact_drone_bonus_1
							has_modifier = bwm_artifact_drone_bonus_2
						}
					}
					while = {
						limit = {
							OR = {
								has_modifier = bwm_artifact_drone_bonus_1
								has_modifier = bwm_artifact_drone_bonus_2
							}
						}
						if = {
							limit = {
								has_modifier = bwm_artifact_drone_bonus_1
							}
							remove_modifier = "bwm_artifact_drone_bonus_1"
						}
						if = {
							limit = {
								has_modifier = bwm_artifact_drone_bonus_2
							}
							remove_modifier = "bwm_artifact_drone_bonus_2"
						}
					}
				}
				if = {
					limit = {
						NOT = {
							has_modifier = bwm_artifact_drone_malus
						}
					}
					add_modifier = {
						modifier = "bwm_artifact_drone_malus"
						days = 30
					}
				}
			}
		}
	}
}

country_event = {
	id = bwm_ancient.1
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_edict = bwm_nova_burst_authorisation
		NOT = {
			has_country_flag = bwm_ancient_weapon_nova_cd
		}
		FROMFROM = {
			is_ship_size = bwm_ancient_weapon
		}
	}

	immediate = {
		if = {
			limit = {
				check_variable = { 
					which = "bwm_ragnarok_burst" 
					value < 1
				}
			}
			set_variable = {
				which = "bwm_ragnarok_burst"
				value = 1
			}
		}
		else = {
			change_variable = {
				which = "bwm_ragnarok_burst"
				value = 1
			}
			if = {
				limit ={
					check_variable = {
						which = "bwm_ragnarok_burst"
						value > 10
					}
				}
				set_variable = {
					which = "bwm_ragnarok_burst"
					value = 10
				}
			}
			if = {
				limit = {
					check_variable = {
						which = "bwm_ragnarok_burst"
						value = 10
					}
				}
				if = {
					limit = {
						FROMFROM = {
							AND = {
								has_modifier = bwm_ancient_weapon_charge_1
								has_modifier = bwm_ancient_weapon_charge_2
							}
						}
					}
					FROMFROM = {
						remove_modifier = "bwm_ancient_weapon_charge_1"
						remove_modifier = "bwm_ancient_weapon_charge_2"
						set_disabled = yes
						owner = {
							save_event_target_as = bwm_ancient_weapon_owner
						}
						save_event_target_as = bwm_ancient_nova_loc
						create_fleet = {
						name = "Gravitational Anomaly"
							settings = {
								spawn_debris = no 
								is_boss = yes
							}
							effect = {
								set_owner = event_target:bwm_ancient_weapon_owner
								create_ship = {
									name = "Isa"
									design = "Ginnungagap-III"
									prefix = no
								}
								set_location = event_target:bwm_ancient_nova_loc
								
								set_fleet_flag = bwm_ancient_nova_3_ship

								fleet_event = { id = bwm_ancient.2 days = 1 }
								
								set_event_locked = yes
							}
						}
						set_disabled = no
						solar_system = {
							bwm_ancient_nova_star_flag_remover = yes
							set_timed_star_flag = {
								flag = bwm_ancient_weapon_ftl_scramble_3_star
								days = 30
							}
							random_list = {
								75 = {
									bwm_megastructure_swap = yes
								}
								25 = {
								}
							}
							every_system_planet = {
								if = {
									limit = {
										OR = {
											habitable_planet = yes
											habitable_structure = yes
										}
									}
									add_modifier = {
										modifier = "bwm_ancient_weapon_planet_debuff"
										days = 30
									}
									# TODO
									#every_tile = {
									#	if = {
									#		limit = {
									#			has_building = yes
									#			is_ruined = no
									#			OR = {
									#				has_resource = {
									#					type = energy
									#					amount > 0
									#				}
									#				has_resource = {
									#					type = sr_betharian
									#					amount > 0
									#				}
									#			}
									#		}
									#		random_list = {
									#			75 = {
									#				set_ruined = yes
									#			}
									#			25 = {
									#			}
									#		}
									#	}
									#}
									if = {
										limit = {
											is_planet_class = pc_ringworld_tech
										}
										random_list = {
											75 = {
												change_pc = pc_ringworld_tech_damaged
											}
											25 = {
											}
										}
									}
									if = {
										limit = {
											is_planet_class = pc_ringworld_seam
										}
										random_list = {
											75 = {
												change_pc = pc_ringworld_seam_damaged
											}
											25 = {
											}
										}
									}
									if = {
										limit = {
											is_planet_class = pc_ringworld_habitable
										}
										random_list = {
											75 = {
												if = {
													limit = {
														OR = {
															is_capital = yes
															is_colony = yes
														}
													}
													destroy_colony = yes
													remove_all_buildings = yes
												}
												change_pc = pc_ringworld_habitable_damaged
											}
											25 = {
											}
										}
									}
									if = {
										limit = {
											is_planet_class = pc_habitat
										}
										random_list = {
											75 = {
												if = {
													limit = {
														OR = {
															is_capital = yes
															is_colony = yes
														}
													}
													destroy_colony = yes
													remove_all_buildings = yes
												}
												remove_planet = yes
											}
											25 = {
											}
										}
									}
								}
							}
						}
					}
					change_variable = {
						which = "bwm_ragnarok_burst"
						value = -10
					}
					set_timed_country_flag = {
						flag = bwm_ancient_weapon_nova_cd  days = 30 
					}
					break = yes
				}
				else_if = {
					limit = {
						FROMFROM = {
							has_modifier = bwm_ancient_weapon_charge_1
							NOT = {
								has_modifier = bwm_ancient_weapon_charge_2
							}
						}
					}
					random_list = {
						50 = {
							FROMFROM = {
								remove_modifier = "bwm_ancient_weapon_charge_1"
								set_disabled = yes
								owner = {
									save_event_target_as = bwm_ancient_weapon_owner
								}
								save_event_target_as = bwm_ancient_nova_loc
								create_fleet = {
								name = "Gravitational Anomaly"
									settings = {
										spawn_debris = no 
										is_boss = yes
									}
									effect = {
										set_owner = event_target:bwm_ancient_weapon_owner
										create_ship = {
											name = "Hagalaz"
											design = "Ginnungagap-II"
											prefix = no
										}
										set_location = event_target:bwm_ancient_nova_loc
										
										set_fleet_flag = bwm_ancient_nova_2_ship

										fleet_event = { id = bwm_ancient.2 days = 1 }
										
										set_event_locked = yes
									}
								}
								set_disabled = no
								solar_system = {
									bwm_ancient_nova_star_flag_remover = yes
									set_timed_star_flag = {
										flag = bwm_ancient_weapon_ftl_scramble_2_star
										days = 20
									}
									random_list = {
										50 = {
											bwm_megastructure_swap = yes
										}
										50 = {
										}
									}
									every_system_planet = {
										if = {
											limit = {
												OR = {
													habitable_planet = yes
													habitable_structure = yes
												}
											}
											add_modifier = {
												modifier = "bwm_ancient_weapon_planet_debuff"
												days = 20
											}
											# TODO
											#every_tile = {
											#	if = {
											#		limit = {
											#			has_building = yes
											#			is_ruined = no
											#			OR = {
											#				has_resource = {
											#					type = energy
											#					amount > 0
											#				}
											#				has_resource = {
											#					type = sr_betharian
											#					amount > 0
											#				}
											#			}
											#		}
											#		random_list = {
											#			50 = {
											#				set_ruined = yes
											#			}
											#			50 = {
											#			}
											#		}
											#	}
											#}
											if = {
												limit = {
													is_planet_class = pc_ringworld_tech
												}
												random_list = {
													50 = {
														change_pc = pc_ringworld_tech_damaged
													}
													50 = {
													}
												}
											}
											if = {
												limit = {
													is_planet_class = pc_ringworld_seam
												}
												random_list = {
													50 = {
														change_pc = pc_ringworld_seam_damaged
													}
													50 = {
													}
												}
											}
											if = {
												limit = {
													is_planet_class = pc_ringworld_habitable
												}
												random_list = {
													50 = {
														if = {
															limit = {
																OR = {
																	is_capital = yes
																	is_colony = yes
																}
															}
															destroy_colony = yes
															remove_all_buildings = yes
														}
														change_pc = pc_ringworld_habitable_damaged
													}
													50 = {
													}
												}
											}
											if = {
												limit = {
													is_planet_class = pc_habitat
												}
												random_list = {
													50 = {
														if = {
															limit = {
																OR = {
																	is_capital = yes
																	is_colony = yes
																}
															}
															destroy_colony = yes
															remove_all_buildings = yes
														}
														remove_planet = yes
													}
													50 = {
													}
												}
											}
										}
									}
								}
							}
							change_variable = {
								which = "bwm_ragnarok_burst"
								value = -10
							}
							set_timed_country_flag = {
								flag = bwm_ancient_weapon_nova_cd  days = 30 
							}
							break = yes
						}
						50 = {
							FROMFROM = {
								add_modifier = {
									modifier = "bwm_ancient_weapon_charge_2"
									days = -1
								}
								set_disabled = yes
								owner = {
									save_event_target_as = bwm_ancient_weapon_owner
								}
								save_event_target_as = bwm_ancient_nova_loc
								create_fleet = {
								name = "Gravitational Anomaly"
									settings = {
										spawn_debris = no 
										is_boss = yes
									}
									effect = {
										set_owner = event_target:bwm_ancient_weapon_owner
										create_ship = {
											name = "Perth"
											design = "Laguz-II"
											prefix = no
										}
										set_location = event_target:bwm_ancient_nova_loc
										
										set_fleet_flag = bwm_ancient_nova_charge_2_ship

										fleet_event = { id = bwm_ancient.2 days = 1 }
										
										set_event_locked = yes
									}
								}
								set_disabled = no
							}
							change_variable = {
								which = "bwm_ragnarok_burst"
								value = -10
							}
							set_timed_country_flag = {
								flag = bwm_ancient_weapon_nova_cd  days = 30 
							}
							break = yes
						}
					}
				}
				else_if = {
					limit = {
						FROMFROM = {
							NOR = {
								has_modifier = bwm_ancient_weapon_charge_1
								has_modifier = bwm_ancient_weapon_charge_2
							}
						}
					}
					random_list = {
						50 = {
							FROMFROM = {
								set_disabled = yes
								owner = {
									save_event_target_as = bwm_ancient_weapon_owner
								}
								save_event_target_as = bwm_ancient_nova_loc
								create_fleet = {
								name = "Gravitational Anomaly"
									settings = {
										spawn_debris = no 
										is_boss = yes
									}
									effect = {
										set_owner = event_target:bwm_ancient_weapon_owner
										create_ship = {
											name = "Kaunaz"
											design = "Ginnungagap-I"
											prefix = no
										}
										set_location = event_target:bwm_ancient_nova_loc
										
										set_fleet_flag = bwm_ancient_nova_1_ship

										fleet_event = { id = bwm_ancient.2 days = 1 }
										
										set_event_locked = yes
									}
								}
								set_disabled = no
								solar_system = {
									bwm_ancient_nova_star_flag_remover = yes
									set_timed_star_flag = {
										flag = bwm_ancient_weapon_ftl_scramble_1_star
										days = 10
									}
									random_list = {
										25 = {
											bwm_megastructure_swap = yes
										}
										75 = {
										}
									}
									every_system_planet = {
										if = {
											limit = {
												OR = {
													habitable_planet = yes
													habitable_structure = yes
												}
											}
											add_modifier = {
												modifier = "bwm_ancient_weapon_planet_debuff"
												days = 10
											}
											# TODO
											#every_tile = {
											#	if = {
											#		limit = {
											#			has_building = yes
											#			is_ruined = no
											#			OR = {
											#				has_resource = {
											#					type = energy
											#					amount > 0
											#				}
											#				has_resource = {
											#					type = sr_betharian
											#					amount > 0
											#				}
											#			}
											#		}
											#		random_list = {
											#			25 = {
											#				set_ruined = yes
											#			}
											#			75 = {
											#			}
											#		}
											#	}
											#}
										}
										if = {
											limit = {
												is_planet_class = pc_ringworld_tech
											}
											random_list = {
												25 = {
													change_pc = pc_ringworld_tech_damaged
												}
												75 = {
												}
											}
										}
										if = {
											limit = {
												is_planet_class = pc_ringworld_seam
											}
											random_list = {
												25 = {
													change_pc = pc_ringworld_seam_damaged
												}
												75 = {
												}
											}
										}
										if = {
											limit = {
												is_planet_class = pc_ringworld_habitable
											}
											random_list = {
												25 = {
													if = {
														limit = {
															OR = {
																is_capital = yes
																is_colony = yes
															}
														}
														destroy_colony = yes
														remove_all_buildings = yes
													}
													change_pc = pc_ringworld_habitable_damaged
												}
												75 = {
												}
											}
										}
										if = {
											limit = {
												is_planet_class = pc_habitat
											}
											random_list = {
												25 = {
													if = {
														limit = {
															OR = {
																is_capital = yes
																is_colony = yes
															}
														}
														destroy_colony = yes
														remove_all_buildings = yes
													}
													remove_planet = yes
												}
												75 = {
												}
											}
										}
									}
								}
							}
							change_variable = {
								which = "bwm_ragnarok_burst"
								value = -10
							}
							set_timed_country_flag = {
								flag = bwm_ancient_weapon_nova_cd  days = 30 
							}
							break = yes
						}
						50 = {
							FROMFROM = {
								add_modifier = {
									modifier = "bwm_ancient_weapon_charge_1"
									days = -1
								}
								set_disabled = yes
								owner = {
									save_event_target_as = bwm_ancient_weapon_owner
								}
								save_event_target_as = bwm_ancient_nova_loc
								create_fleet = {
								name = "Gravitational Anomaly"
									settings = {
										spawn_debris = no 
										is_boss = yes
									}
									effect = {
										set_owner = event_target:bwm_ancient_weapon_owner
										create_ship = {
											name = "Inguz"
											design = "Laguz-I"
											prefix = no
										}
										set_location = event_target:bwm_ancient_nova_loc
										
										set_fleet_flag = bwm_ancient_nova_charge_1_ship

										fleet_event = { id = bwm_ancient.2 days = 1 }
										
										set_event_locked = yes
									}
								}
								set_disabled = no
							}
							change_variable = {
								which = "bwm_ragnarok_burst"
								value = -10
							}
							set_timed_country_flag = {
								flag = bwm_ancient_weapon_nova_cd  days = 30 
							}
							break = yes
						}
					}
				}
			}
		}
	}
}

fleet_event = {
	id = bwm_ancient.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_fleet_flag = bwm_ancient_nova_1_ship
			}
			bwm_ancient_nova_locator = yes
			event_target:bwm_ancient_nova_debuff_loc = {
				if = {
					limit = {
						any_ship_in_system = {
							exists = this
							is_ship_size = bwm_ancient_weapon
						}
					}
					every_fleet_in_system = {
						if = {
							limit = {
								NOR = {
									has_fleet_flag = bwm_ancient_nova_1_ship
									is_same_value = event_target:bwm_ancient_weapon_fleet_loc
								}
							}
							add_modifier = {
								modifier = "bwm_ancient_weapon_burst_debuff"
								days = 10
							}
						}
					}
				}
			}
			destroy_fleet = THIS
			break = yes
		}
		if = {
			limit = {
				has_fleet_flag = bwm_ancient_nova_2_ship
			}
			bwm_ancient_nova_locator = yes
			event_target:bwm_ancient_nova_debuff_loc = {
				if = {
					limit = {
						any_ship_in_system = {
							exists = this
							is_ship_size = bwm_ancient_weapon
						}
					}
					every_fleet_in_system = {
						if = {
							limit = {
								NOR = {
									has_fleet_flag = bwm_ancient_nova_2_ship
									is_same_value = event_target:bwm_ancient_weapon_fleet_loc
								}
							}
							add_modifier = {
								modifier = "bwm_ancient_weapon_burst_debuff"
								days = 20
							}
						}
					}
				}
			}
			destroy_fleet = THIS
			break = yes
		}
		if = {
			limit = {
				has_fleet_flag = bwm_ancient_nova_3_ship
			}
			bwm_ancient_nova_locator = yes
			event_target:bwm_ancient_nova_debuff_loc = {
				if = {
					limit = {
						any_ship_in_system = {
							exists = this
							is_ship_size = bwm_ancient_weapon
						}
					}
					every_fleet_in_system = {
						if = {
							limit = {
								NOR = {
									has_fleet_flag = bwm_ancient_nova_3_ship
									is_same_value = event_target:bwm_ancient_weapon_fleet_loc
								}
							}
							add_modifier = {
								modifier = "bwm_ancient_weapon_burst_debuff"
								days = 30
							}
						}
					}
				}
			}
			destroy_fleet = THIS
			break = yes
		}
		if = {
			limit = {
				has_fleet_flag = bwm_ancient_nova_charge_1_ship
			}
			destroy_fleet = THIS
			break = yes
		}
		if = {
			limit = {
				has_fleet_flag = bwm_ancient_nova_charge_2_ship
			}
			destroy_fleet = THIS
		}
	}
}

fleet_event = {
	id = bwm_ancient.3
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			OR = {
				has_star_flag = bwm_ancient_weapon_ftl_scramble_1_star
				has_star_flag = bwm_ancient_weapon_ftl_scramble_2_star
				has_star_flag = bwm_ancient_weapon_ftl_scramble_3_star
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				FROM = {
					has_star_flag = bwm_ancient_weapon_ftl_scramble_1_star
				}
			}
			random_list = {
				5 = {
					if = {
						limit = {
							any_owned_ship = {
								NOR = {
									is_ship_size = bwm_titan
									is_ship_size = bwm_titan_pc
									is_ship_size = bwm_grave_awakened
									is_ship_size = bwm_grave_awakened_pc
									is_ship_size = bwm_grave_awakened_pc_bound
									is_ship_size = bwm_conduit_avatar
									is_ship_size = bwm_conduit_avatar_bound
									is_ship_size = bwm_apostle_scout
									is_ship_size = bwm_apostle_1
									is_ship_size = bwm_apostle_2
									is_ship_size = bwm_apostle_3
									is_ship_size = bwm_apostle_4
									is_ship_size = bwm_apostle_egg
									is_ship_size = bwm_apostle_child
									is_ship_size = bwm_artifact_ship
									is_ship_size = bwm_artifact_relic_frame
									is_ship_size = bwm_ancient_weapon
								}
							}
						}
						destroy_fleet = THIS
					}
				}
				25 = {
					FROM = {
						save_event_target_as = bwm_ancient_ftl_scramble_loc_1
					}
					random_system = {
						limit = {
							distance = {
								source = event_target:bwm_ancient_ftl_scramble_loc_1
								use_bypasses = no
								min_jumps = 8
								max_jumps = 120
							} 
						}
						random_system_planet = {
							limit = {
								is_star = yes
							}
							save_event_target_as = bwm_ancient_ftl_scramble_loc_2
						}
					}
					set_location = event_target:bwm_ancient_ftl_scramble_loc_2
					clear_orders = yes
					add_modifier = {
						modifier = "bwm_ancient_weapon_ftl_trap_debuff"
						days = 10
					}
					break = yes
				}
				55 = {
					add_modifier = {
						modifier = "bwm_ancient_weapon_ftl_trap_debuff"
						days = 10
					}
					break = yes
				}
				15 = {
					break = yes
				}
			}
		}
		if = {
			limit = {
				FROM = {
					has_star_flag = bwm_ancient_weapon_ftl_scramble_2_star
				}
			}
			random_list = {
				10 = {
					if = {
						limit = {
							any_owned_ship = {
								NOR = {
									is_ship_size = bwm_titan
									is_ship_size = bwm_titan_pc
									is_ship_size = bwm_grave_awakened
									is_ship_size = bwm_grave_awakened_pc
									is_ship_size = bwm_grave_awakened_pc_bound
									is_ship_size = bwm_conduit_avatar
									is_ship_size = bwm_conduit_avatar_bound
									is_ship_size = bwm_apostle_scout
									is_ship_size = bwm_apostle_1
									is_ship_size = bwm_apostle_2
									is_ship_size = bwm_apostle_3
									is_ship_size = bwm_apostle_4
									is_ship_size = bwm_apostle_egg
									is_ship_size = bwm_apostle_child
									is_ship_size = bwm_artifact_ship
									is_ship_size = bwm_artifact_relic_frame
									is_ship_size = bwm_ancient_weapon
								}
							}
						}
						destroy_fleet = THIS
					}
				}
				30 = {
					FROM = {
						save_event_target_as = bwm_ancient_ftl_scramble_loc_1
					}
					random_system = {
						limit = {
							distance = {
								source = event_target:bwm_ancient_ftl_scramble_loc_1
								use_bypasses = no
								min_jumps = 15
								max_jumps = 120
							} 
						}
						random_system_planet = {
							limit = {
								is_star = yes
							}
							save_event_target_as = bwm_ancient_ftl_scramble_loc_2
						}
					}
					set_location = event_target:bwm_ancient_ftl_scramble_loc_2
					clear_orders = yes
					add_modifier = {
						modifier = "bwm_ancient_weapon_ftl_trap_debuff"
						days = 20
					}
					break = yes
				}
				50 = {
					add_modifier = {
						modifier = "bwm_ancient_weapon_ftl_trap_debuff"
						days = 20
					}
					break = yes
				}
				10 = {
					break = yes
				}
			}
		}
		if = {
			limit = {
				FROM = {
					has_star_flag = bwm_ancient_weapon_ftl_scramble_3_star
				}
			}
			random_list = {
				15 = {
					if = {
						limit = {
							any_owned_ship = {
								NOR = {
									is_ship_size = bwm_titan
									is_ship_size = bwm_titan_pc
									is_ship_size = bwm_grave_awakened
									is_ship_size = bwm_grave_awakened_pc
									is_ship_size = bwm_grave_awakened_pc_bound
									is_ship_size = bwm_conduit_avatar
									is_ship_size = bwm_conduit_avatar_bound
									is_ship_size = bwm_apostle_scout
									is_ship_size = bwm_apostle_1
									is_ship_size = bwm_apostle_2
									is_ship_size = bwm_apostle_3
									is_ship_size = bwm_apostle_4
									is_ship_size = bwm_apostle_egg
									is_ship_size = bwm_apostle_child
									is_ship_size = bwm_artifact_ship
									is_ship_size = bwm_artifact_relic_frame
									is_ship_size = bwm_ancient_weapon
								}
							}
						}
						destroy_fleet = THIS
					}
				}
				35 = {
					FROM = {
						save_event_target_as = bwm_ancient_ftl_scramble_loc_1
					}
					random_system = {
						limit = {
							distance = {
								source = event_target:bwm_ancient_ftl_scramble_loc_1
								use_bypasses = no
								min_jumps = 35
								max_jumps = 120
							} 
						}
						random_system_planet = {
							limit = {
								is_star = yes
							}
							save_event_target_as = bwm_ancient_ftl_scramble_loc_2
						}
					}
					set_location = event_target:bwm_ancient_ftl_scramble_loc_2
					clear_orders = yes
					add_modifier = {
						modifier = "bwm_ancient_weapon_ftl_trap_debuff"
						days = 30
					}
					break = yes
				}
				45 = {
					add_modifier = {
						modifier = "bwm_ancient_weapon_ftl_trap_debuff"
						days = 30
					}
					break = yes
				}
				5 = {
				}
			}
		}
	}
}

fleet_event = {
	id = bwm_ancient.4
	hide_window = yes

	trigger = {	
		any_combatant_fleet = {
			exists = owner
			owner = {
				NOT = {
					has_country_flag = bwm_ancient_weapon_reactor_cd
				}
			}
			any_owned_ship = {
				is_ship_size = bwm_ancient_weapon
				has_hp_percentage < 0.1
				has_hp_percentage > 0
			}
		}
	}
	
	immediate = {
		random_combatant_fleet = {
			limit = {
				exists = owner
				owner = {
					is_ai = no
					NOT = {
						has_country_flag = bwm_ancient_weapon_reactor_cd
					}
				}
				any_owned_ship = {
					is_ship_size = bwm_ancient_weapon
				}
			}
			this = {
				save_event_target_as = bwm_ancient_weapon_fleet_loc
			}
			owner = {
				random_owned_ship = {
					limit = {
						is_ship_size = bwm_ancient_weapon
					}
					if = {
						limit = {
							has_modifier = bwm_ancient_weapon_reactor_charge
						}
						remove_modifier = "bwm_ancient_weapon_reactor_charge"
						add_modifier = {
							modifier = "bwm_ancient_weapon_reactor_damage"
							days = -1
						}
						repair_ship = yes
						prev = {
							country_event = { id = bwm_ancient.6 }
							country_event = { id = bwm_ancient.5 days = 1800 }
						}  
					}
				}
				set_timed_country_flag = {
					flag = bwm_ancient_weapon_reactor_cd
					days = 90
				}
			}
		}
	}
}

country_event = {
	id = bwm_ancient.5
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_owned_ship = {
					exists = this
					is_ship_size = bwm_ancient_weapon
				}
			}
			random_owned_ship = {
				limit = {
					is_ship_size = bwm_ancient_weapon
				}
				if = {
					limit = {
						has_modifier = bwm_ancient_weapon_reactor_damage
					}
					save_event_target_as = bwm_ancient_weapon_cd_loc
					remove_modifier = "bwm_ancient_weapon_reactor_damage"
					add_modifier = {
						modifier = "bwm_ancient_weapon_reactor_charge"
						days = -1
					}
				}
			}
		}
	}
}

country_event = {
	id = bwm_ancient.6
	title = "bwm_ancient.6"
	desc = "bwm_ancient.6.desc"
	picture = GFX_evt_small_space_battle
	location = event_target:bwm_ancient_weapon_fleet_loc
	
	is_triggered_only = yes

	option = {
		name = "bwm_ancient.6.a"
	}
}

country_event = {
	id = bwm_ancient.1000
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			is_ship_size = bwm_ancient_weapon
		}
		FROM = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = shroud
				is_country_type = shroud_spirits
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
		}
	}
	
	immediate = {
		FROMFROM = {
			add_modifier = {
				modifier = "bwm_power_bonus"
				days = 360
			}
		}
	}
}