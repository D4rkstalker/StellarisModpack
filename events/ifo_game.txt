# IFO - Iyur' Fleet Overlords
# Author: Iyur, modjam2020
# Main origin events

namespace = ifo

# This = no_scope
# Prepare starting conditions:
# Add neighbors, make them vassals and form the federation
event = {
	id = ifo.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		
		# take player's country
		random_playable_country = {
			limit = { has_origin = ifo_origin_fleet }
				country_event = { id = ifo.12 }
		}

	}
}

# #	# This = Country (Player)
	# Rebuild player country to untied from planets & pops
	country_event = {
		id = ifo.12
		hide_window = yes
		is_triggered_only = yes
		location = capital_scope.solar_system

		immediate = {

			capital_scope.solar_system = { save_event_target_as = ifo_starting_system }
			leader = { exile_leader_as = ifo_ruler }

			if = {
				limit = { num_guaranteed_colonies >= 2 }
				capital_scope = {
					solar_system = {
						# 1st
						closest_system = {
							limit = { has_star_flag = neighbor_t1_first_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								save_event_target_as = fed_planet_1
								federation_origin_planet_setup = yes
							}
						}
						# 2nd
						closest_system = {
							limit = { has_star_flag = neighbor_t2_second_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								save_event_target_as = fed_planet_2
								federation_origin_planet_setup = yes
							}
						}
						# 3rd
						closest_system = {
							limit = {
								nor = {
									has_star_flag = neighbor_t1_first_colony
									has_star_flag = neighbor_t2_second_colony
								}
								has_owner = no
								any_system_planet = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
									is_capital = no
									is_colony = no
								}
							}
							if = {
								limit = {
									any_system_planet = { habitable_planet = yes }
								}
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_3
									set_planet_size = 16
								}
							}
							else = {
								random_system_planet = {
									limit = {
										is_ringworld = no
										is_asteroid = no
										is_star = no
										is_moon = no
										is_capital = no
										is_colony = no
									}
									save_event_target_as = fed_planet_3
									federation_origin_planet_setup = yes
								}
							}
						}
					}
				}
			}
			if = {
				limit = { num_guaranteed_colonies >= 1 }
				capital_scope = {
					solar_system = {
						# 1st
						closest_system = {
							limit = { has_star_flag = neighbor_t1_first_colony }
							random_system_planet = {
								limit = { has_planet_flag = prescripted_ideal }
								save_event_target_as = fed_planet_1
								federation_origin_planet_setup = yes
							}
						}
						# 2nd
						closest_system = {
							limit = {
								NOT = { has_star_flag = neighbor_t1_first_colony }
								has_owner = no
								any_system_planet = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
									is_capital = no
									is_colony = no
								}
							}
							set_star_flag = neighbor_t2_first_colony
							if = {
								limit = {
									any_system_planet = { habitable_planet = yes }
								}
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_2
									set_planet_size = 16
								}
							}
							else = {
								random_system_planet = {
									limit = {
										is_ringworld = no
										is_asteroid = no
										is_star = no
										is_moon = no
										is_capital = no
										is_colony = no
									}
									save_event_target_as = fed_planet_2
									federation_origin_planet_setup = yes
								}
							}
						}
						# 3rd
						closest_system = {
							limit = {
								nor = {
									has_star_flag = neighbor_t1_first_colony
									has_star_flag = neighbor_t2_first_colony
								}
								has_owner = no
								any_system_planet = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
									is_capital = no
									is_colony = no
								}
							}
							if = {
								limit = {
									any_system_planet = { habitable_planet = yes }
								}
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_3
									set_planet_size = 16
								}
							}
							else = {
								random_system_planet = {
									limit = {
										is_ringworld = no
										is_asteroid = no
										is_star = no
										is_moon = no
										is_capital = no
										is_colony = no							
									}
									save_event_target_as = fed_planet_3
									federation_origin_planet_setup = yes
								}
							}
						}
					}
				}
			}
			if = {
				limit = { num_guaranteed_colonies = 0 }
				capital_scope = {
					solar_system = {
						# 1st
						closest_system = {
							limit = { has_owner = no }
							set_star_flag = fed_origin_system_1
							if = {
								limit = {
									any_system_planet = { habitable_planet = yes }
								}
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_1
									set_planet_size = 16
								}
							}
							else = {
								random_system_planet = {
									limit = {
										is_ringworld = no
										is_asteroid = no
										is_star = no
										is_moon = no
										is_capital = no
										is_colony = no
									}
									save_event_target_as = fed_planet_1
									federation_origin_planet_setup = yes
								}
							}
						}
						# 2nd
						closest_system = {
							limit = {
								NOT = { has_star_flag = fed_origin_system_1 }
								has_owner = no
								any_system_planet = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
									is_capital = no
									is_colony = no
								}
							}
							set_star_flag = fed_origin_system_2
							if = {
								limit = {
									any_system_planet = { habitable_planet = yes }
								}
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_2
									set_planet_size = 16
								}
							}
							else = {
								random_system_planet = {
									limit = {
										is_ringworld = no
										is_asteroid = no
										is_star = no
										is_moon = no
										is_capital = no
										is_colony = no
									}
									save_event_target_as = fed_planet_2
									federation_origin_planet_setup = yes
								}
							}
						}
						# 3rd
						closest_system = {
							limit = {
								nor = {
									has_star_flag = fed_origin_system_1
									has_star_flag = fed_origin_system_2
								}
								has_owner = no
								any_system_planet = {
									is_ringworld = no
									is_asteroid = no
									is_star = no
									is_moon = no
									is_capital = no
									is_colony = no
								}
							}
							set_star_flag = fed_origin_system_3
							if = {
								limit = {
									any_system_planet = { habitable_planet = yes }
								}
								random_system_planet = {
									limit = { habitable_planet = yes }
									save_event_target_as = fed_planet_3
									set_planet_size = 16
								}
							}
							else = {
								random_system_planet = {
									limit = {
										is_ringworld = no
										is_asteroid = no
										is_star = no
										is_moon = no
										is_capital = no
										is_colony = no
									}
									save_event_target_as = fed_planet_3
									federation_origin_planet_setup = yes
								}
							}
						}

						# todo: non-specific systems
					}
				}
			}

			# 1st & 2nd memebers
			event_target:fed_planet_1 = { ifo_create_member = { i = 1 } }
			event_target:fed_planet_2 = { ifo_create_member = { i = 2 } }

			# 3rd Member
			event_target:fed_planet_3 = {

				solar_system = { generate_home_system_resources = yes }

				create_country = {
					type = default
					name = root
					name_list = root
					ship_prefix = root
					auto_delete = no
					ignore_initial_colony_error = yes
					species = root
					flag = random
					ethos = root
					authority = root
					civics = root
					day_zero_contact = no
					origin = "origin_hegemon_npc"

					effect = {
						save_event_target_as = fed_member_3
						set_country_flag = ifo_fed_member
						establish_communications_no_message = root
					}
				}

				create_colony = { owner = last_created_country }
				generate_start_deposits_and_blockers = yes
				generate_start_buildings_and_districts = yes
				generate_start_pops = yes
				solar_system = {
					create_starbase = {
						size = starbase_starport
						module = shipyard
						building = crew_quarters
						owner = last_created_country
						effect = {
							set_starbase_module = {
								slot = 1
								module = trading_hub
							}
						}
					}
				}

			}

			# Post-process
			every_country = {
				limit = { has_country_flag = ifo_fed_member }
					create_starting_leaders = yes
					country_event = { id = game_start.9 }
					country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
					join_alliance = { who = prev override_requirements = yes }
					set_name = random # Fixes some naming issues
					add_modifier = { modifier = ifo_mod_compensate_1 days = -1 }
			}

			# Make a player country				
			event_target:ifo_starting_system = {

				create_country = {
					name = root
					type = default
					auto_delete = no
					ignore_initial_colony_error = yes
					name_list = root
					ship_prefix = root
					species = root
					flag = root
					ethos = root
					authority = root
					civics = root
					origin = ifo_origin_fleet
					day_zero_contact = no

					effect = {
						establish_communications_no_message = root
						establish_communications_no_message = event_target:fed_member_1
						establish_communications_no_message = event_target:fed_member_2
						establish_communications_no_message = event_target:fed_member_3
						prev.starbase = {
							set_owner = last_created_country
							set_starbase_module = { slot = 1 module = ifo_jump_drive }
						}
					}
				}

				# join the federation and get rulership
				last_created_country = {
					set_player = root
					join_alliance = { who = root override_requirements = yes }	
					set_federation_leader = this

					add_tradition = tr_diplomacy_adopt
					add_tradition = tr_diplomacy_the_federation

					set_country_flag = first_contact_event
					set_country_flag = Story2 # Already encountered spacefarers

					add_modifier = { modifier = ifo_mod_fleet_overlord days = -1 }

					ifo_create_fleets = yes
					ifo_create_leaders = yes
					ifo_create_resources = yes
					country_event = { id = ifo.4 }

					set_leader = ifo_ruler

					# setup federation
					federation = {
						set_name = ifo_federation_name
						set_federation_type = ifo_fleet_federation
					}
					every_federation_ally = {
						limit = { not = { is_same_empire = last_created_country } }
							set_subject_of = { who = last_created_country subject_type = ifo_incorporation_1 }
					}

				}

				# esnure there is no habitable planets
				# make some background history for this
				random_system_planet = {
					limit = { is_capital = yes }
						destroy_colony = yes
						#remove_planet = yes
						change_pc = pc_broken
						create_ambient_object = {
							type = "abandoned_starbase_01_object"
							location = this
						}
						create_ambient_object = {
							type = "large_debris_object"
							location = this
						}
						create_ambient_object = {
							type = "ancient_battlefield_02_object"
							location = this
						}
						create_ambient_object = {
							type = "nebula_planet_smoke"
							location = this
						}
				}

			}

			# silently destroy origin country
			every_owned_ship = {
				delete_ship = this
			}
			set_country_flag = silence_destroy_event
			destroy_country = yes

		}
	}

# This = Country
# Change subject type and join overlord's federation
country_event = {
	id = ifo.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		days_passed > 5
		nor = {
			is_subject_type = ifo_incorporation
			is_subject_type = ifo_incorporation_1
			is_subject_type = ifo_incorporation_2
			is_subject_type = ifo_incorporation_3
		}
	}

	immediate = {

		if = {
			limit = { exists = from.federation }
				from.federation = {
					switch = {
						trigger = has_federation_law
							ifo_taxation_none = { root = { set_subject_of = { who = from subject_type = ifo_incorporation } } }
							ifo_taxation_low = { root = { set_subject_of = { who = from subject_type = ifo_incorporation_1 } } }
							ifo_taxation_medium = { root = { set_subject_of = { who = from subject_type = ifo_incorporation_2 } } }
							ifo_taxation_high = { root = { set_subject_of = { who = from subject_type = ifo_incorporation_3 } } }
					}
				}
				join_alliance = { who = from override_requirements = yes }
		}

	}
}

# This = Ship
# Tracks outpost construction, gives the choice:
# jump of primary station, leave or transfer to federation
ship_event = {
	id = ifo.3
	title = "ifo_system_title"
	desc = "ifo_system_desc"
	picture = GFX_evt_space_station
	location = solar_system
	show_sound = event_ship_bridge
	is_triggered_only = yes
	force_open = yes

	trigger = {
		owner = {
			is_ai = no
			has_origin = ifo_origin_fleet
			count_starbase_sizes = { starbase_size = starbase_starport count >= 1 }
		}
	}

	immediate = {
		if = {
			limit = { exists = owner }
				owner = {
					random_owned_starbase = {
						limit = { has_starbase_module = ifo_jump_drive }
							solar_system = { save_event_target_as = ifo_station_system }
					}
				}
		}
	}

	option = {
		name = "ifo_system_jump"
		custom_tooltip = "ifo_system_jump.tt"
		allow = {
			custom_tooltip = {
				fail_text = "ifo_system_jump_fail"
				event_target:ifo_station_system.starbase = { has_starbase_module = ifo_jump_drive }
			}
		}
		hidden_effect = {
			# new system
			delete_fleet = solar_system.starbase.fleet
			solar_system = {
				if = {
					limit = { event_target:ifo_station_system.starbase = { has_starbase_size = starbase_starport } }
						create_starbase = {
							size = starbase_starport
							owner = root.owner
							effect = {
								ifo_create_modules = yes
								ifo_create_buildings = yes
							}

						}
				}
				else_if = {
					limit = { event_target:ifo_station_system.starbase = { has_starbase_size = starbase_starhold } }
						create_starbase = {
							size = starbase_starhold
							owner = root.owner
							effect = {
								ifo_create_modules = yes
								ifo_create_buildings = yes
							}

						}
				}
				else_if = {
					limit = { event_target:ifo_station_system.starbase = { has_starbase_size = starbase_starfortress } }
						create_starbase = {
							size = starbase_starfortress
							owner = root.owner
							effect = {
								ifo_create_modules = yes
								ifo_create_buildings = yes
							}

						}
				}
				else_if = {
					limit = { event_target:ifo_station_system.starbase = { has_starbase_size = starbase_citadel } }
						create_starbase = {
							size = starbase_citadel
							owner = root.owner
							effect = {
								ifo_create_modules = yes
								ifo_create_buildings = yes
							}

						}
				}
			}
			# previous system		
			owner = {
				random_owned_starbase = {
					limit = { not = { solar_system = { is_same_value = root.solar_system } } }
						fleet = { delete_fleet = this }
				}
			}
			event_target:ifo_station_system = {
				closest_system = {
					limit = {
						exists = space_owner
						space_owner = { is_in_federation_with = root.owner }
						not = { is_same_value = prev }
					}
					prev = {
						create_starbase = {
							size = starbase_outpost
							owner = prev.space_owner
						}
					}
				}
			}
		}
	}

	option = {
		name = "ifo_system_transfer"
		custom_tooltip = "ifo_system_transfer.tt"
		hidden_effect = {
			closest_system = {
				limit = {
					exists = space_owner
					space_owner = { is_in_federation_with = root.owner }
					not = { is_same_value = root.solar_system }
				}
				root.solar_system.starbase = { set_owner = prev.space_owner }
			}
		}
	}

	option = {
		name = "ifo_system_dismantle"
		custom_tooltip = "ifo_system_dismantle.tt"
		hidden_effect = {
			delete_fleet = solar_system.starbase.fleet
		}
	}

	after = {

	}

}

# This = Country (Player)
# form leader pool of different federation species
country_event = {
	id = ifo.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = no
			has_origin = ifo_origin_fleet
		}
	}

	immediate = {
		
		# one leader from each federation memeber
		set_variable = { which = ifo_fed_members value = 0 }
		every_federation_ally = {
			limit = { is_federation_leader = no }
				prev = { change_variable = { which = ifo_fed_members value = 1 } }
		}

		# clear the pool and create new
		every_pool_leader = { kill_leader = { show_notification = no } }
		ifo_select_leaders = { class = governor }
		ifo_select_leaders = { class = scientist }
		ifo_select_leaders = { class = admiral }
		ifo_select_leaders = { class = general }
		ifo_select_leaders = { class = envoy }

		set_variable = { which = ifo_fed_members value = 0 }

	}

}

# This = Country
# Copied for federal project
country_event = {
	id = ifo.5
	title = federations2.100.name
	desc = federations2.100.desc
	picture = GFX_evt_fleet_from_surface
	show_sound = event_default

	is_triggered_only = yes

	trigger = {
		years_passed > 58
		exists = federation
		has_federation = yes
		is_federation_leader = yes
		is_at_war = no
		NOT = {
			any_country = {
				is_crisis_faction = yes
			}
		}
		#num_ships > 30
		federation = {
			has_federation_type = ifo_fleet_federation
			federation_level >= 2
			NOT = { has_federation_flag = federation_recent_militarist_joint_operation }
			count_member = {
				count >= 3
				limit = {
					num_ships > 30
				}
			}
		}
	}

	immediate = {
		federation = {
			set_timed_federation_flag = {
				flag = federation_recent_militarist_joint_operation
				days = 18000 #50 years cooldown
			}
			every_member = {
				remove_country_flag = militarist_joint_operation_yes
				remove_country_flag = militarist_joint_operation_no
			}
			remove_federation_flag = militarist_joint_operation_complete_success
			remove_federation_flag = militarist_joint_operation_complete_failure
			remove_federation_flag = militarist_joint_operation_partial_success
			remove_federation_flag = militarist_joint_operation_partial_failure
			set_variable = {
				which = militarist_joint_operation_succeed
				value = 0
			}
			set_variable = {
				which = militarist_joint_operation_fail
				value = 0
			}
			set_variable = {
				which = militarist_joint_operation_yes
				value = 0
			}
			set_variable = {
				which = militarist_joint_operation_no
				value = 0
			}
		}
	}

	option = {
		name = federations2.100.A #sounds like a spiffing idea
		custom_tooltip = federations2.100.A.tooltip
		custom_tooltip = military_joint_exercise_potential_tooltip
		hidden_effect = {
			set_country_flag = militarist_joint_operation_yes
			every_federation_ally = {
				country_event = { id = federations2.101 }
			}
		}

		hidden_effect = {
			country_event = { id = federations2.102 days = 90 }
		}

		ai_chance = {
			factor = 1
			modifier = {
				factor = 4
				is_militarist = yes
			}
		}
	}
	option = {
		name = federations2.100.B #actually, let's not

		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				federation = { federation_cohesion >= 0 }
				is_militarist = yes
			}
		}
	}
}

# This = Ship (transport)
# From = Planet (Star)
# Replace fake transport with true one
ship_event = {
	id = ifo.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = no
			has_origin = ifo_origin_fleet
		}
		or = {
			is_ship_size = ifo_transport_assault
			is_ship_size = ifo_transport_slave
			is_ship_size = ifo_transport_clone
			is_ship_size = ifo_transport_robotic
			is_ship_size = ifo_transport_psionic
			is_ship_size = ifo_transport_xenomorph
			is_ship_size = ifo_transport_gene
			is_ship_size = ifo_transport_mach1
			is_ship_size = ifo_transport_mach2
			is_ship_size = ifo_transport_mach3
		}
	}

	immediate = {
		
		owner = {
			random_federation_ally = {
				limit = { not = { is_same_empire = prev } }
					save_event_target_as = ifo_army_country
			}

			switch = {
				trigger = graphical_culture
					humanoid_01 = { ifo_create_transport = { culture = humanoid_01 } }
					plantoid_01 = { ifo_create_transport = { culture = plantoid_01 } }
					mammalian_01 = { ifo_create_transport = { culture = mammalian_01 } }
					reptilian_01 = { ifo_create_transport = { culture = reptilian_01 } }
					avian_01 = { ifo_create_transport = { culture = avian_01 } }
					molluscoid_01 = { ifo_create_transport = { culture = molluscoid_01 } }
					fungoid_01 = { ifo_create_transport = { culture = fungoid_01 } }
					arthropoid_01 = { ifo_create_transport = { culture = arthropoid_01 } }
					lithoid_01 = { ifo_create_transport = { culture = lithoid_01 } }
					necroid_01 = { ifo_create_transport = { culture = necroid_01 } }
					pirate_01 = { ifo_create_transport = { culture = pirate_01 } }
			}

			if = {
				limit = {
					nor = {
						graphical_culture = humanoid_01
						graphical_culture = plantoid_01
						graphical_culture = mammalian_01
						graphical_culture = reptilian_01
						graphical_culture = avian_01
						graphical_culture = molluscoid_01
						graphical_culture = fungoid_01
						graphical_culture = arthropoid_01
						graphical_culture = lithoid_01
						graphical_culture = necroid_01
						graphical_culture = pirate_01
					}
				}
				ifo_create_transport = { culture = pirate_01 }
			}

		}

		delete_ship = this

	}

}

# This = Country (Player)
# Adds a small amount of xp while training edict is active
country_event = {
	id = ifo.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = no
			has_origin = ifo_origin_fleet
		}
	}

	immediate = {

		federation = { add_federation_experience = 1 }

	}
}

# This = Country (Player)
# Make a fake federation elections for president seat.
# To simulate the view, random species is choosing from federation,
# and installed as a Grand Admiral to Fleet Overlords.
country_event = {
	id = ifo.8
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = no
		has_origin = ifo_origin_fleet
		exists = federation
		federation = {

		}
	}

	immediate = {
		federation = {
			if = {
				limit = {
					or = {
						has_federation_law = succession_term_years_10
						has_federation_law = succession_term_years_20
						has_federation_law = succession_term_years_30
						has_federation_law = succession_term_years_40
					}
				}
				change_variable = { which = irm_election_decade value = 1 }
			}
			else = {
				set_variable = { which = irm_election_decade value = 0 }
			}
			switch = {
				trigger = has_federation_law
					succession_term_years_10 = {
						if = {
							limit = {
								or = {
									check_variable = { which = irm_election_decade value = 1 }
									check_variable = { which = irm_election_decade value > 1 }
								}
							}
						}
						ifo_elect_leader = yes
						set_variable = { which = irm_election_decade value = 0 }
					}
					succession_term_years_20 = {
						if = {
							limit = {
								or = {
									check_variable = { which = irm_election_decade value = 2 }
									check_variable = { which = irm_election_decade value > 2 }
								}
							}
						}
						ifo_elect_leader = yes
						set_variable = { which = irm_election_decade value = 0 }
					}
					succession_term_years_30 = {
						if = {
							limit = {
								or = {
									check_variable = { which = irm_election_decade value = 3 }
									check_variable = { which = irm_election_decade value > 3 }
								}
							}
						}
						ifo_elect_leader = yes
						set_variable = { which = irm_election_decade value = 0 }
					}
					succession_term_years_40 = {
						if = {
							limit = {
								or = {
									check_variable = { which = irm_election_decade value = 4 }
									check_variable = { which = irm_election_decade value > 4 }
								}
							}
						}
						ifo_elect_leader = yes
						set_variable = { which = irm_election_decade value = 0 }
					}
			}
		}
		
	}

}

# This = Planet
# Prevents player to gain a system control
# Just transfer last conquered system to federation
planet_event = {
	id = ifo.9
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		fromfrom = {
			is_ai = no
			has_origin = ifo_origin_fleet
		}
	}

	immediate = {
		solar_system = {
			closest_system = {
				limit = {
					exists = space_owner
					space_owner = { is_in_federation_with = fromfrom }
					not = { is_same_value = prev }
				}
				root = { set_controller = prev.space_owner }
			}
		}
	}

}

# This = Planet
# Prevents player to gain a system control
# Just transfer last conquered system to federation
planet_event = {
	id = ifo.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = no
			has_origin = ifo_origin_fleet
		}
	}

	immediate = {
		planet_event = { id = ifo.101 days = 1 }
	}

}
#	^
	planet_event = {
		id = ifo.101
		hide_window = yes
		is_triggered_only = yes

		trigger = {
			owner = {
				is_ai = no
				has_origin = ifo_origin_fleet
			}
		}

		immediate = {
			solar_system = {
				closest_system = {
					limit = {
						exists = space_owner
						space_owner = { is_in_federation_with = root.owner }
						not = { is_same_value = prev }
					}
					prev.starbase = {
						fleet = { set_controller = prev.space_owner }
						root = { set_controller = prev.space_owner }
					}
				}
			}
		}

	}

# This = Ship (Starbase)
# Prevents player to gain a system control
# Just transfer last conquered system to federation
ship_event = {
	id = ifo.11
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		or = {
			is_ship_size = starbase_outpost
			is_ship_size = starbase_starport
			is_ship_size = starbase_starhold
			is_ship_size = starbase_starfortress
			is_ship_size = starbase_citadel
		}
		exists = from.owner
		from.owner = {
			is_ai = no
			has_origin = ifo_origin_fleet
		}
	}

	immediate = {
		fleet.solar_system = {
			closest_system = {
				limit = {
					exists = space_owner
					space_owner = { is_in_federation_with = from.owner }
					not = { is_same_value = prev }
				}
				root.fleet = {
					set_controller = prev.space_owner
				}
			}
		}
	}

}

# This = Country (Player)
# Automatically set joined empire as subject
country_event = {
	id = ifo.13
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = no
		has_origin = ifo_origin_fleet
	}

	immediate = { 
		from.federation = {
			switch = {
				trigger = has_federation_law
					ifo_taxation_none = { from = { set_subject_of = { who = root subject_type = ifo_incorporation } } }
					ifo_taxation_low = { from = { set_subject_of = { who = root subject_type = ifo_incorporation_1 } } }
					ifo_taxation_medium = { from = { set_subject_of = { who = root subject_type = ifo_incorporation_2 } } }
					ifo_taxation_high = { from = { set_subject_of = { who = root subject_type = ifo_incorporation_3 } } }
			}
			add_cohesion = 100
		}
	}

}

# This = Country (Player)
# Transfer claims to federation memebers
country_event = {
	id = ifo.14
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = no
		has_origin = ifo_origin_fleet
	}

	immediate = {
		log = "test 1"
		from = {
			every_war_participant = {
				limit = { root = { has_claim = prev } }
					log = "test 2"
					every_system_within_border = {
						limit = { root = { has_claim = prev } }
							log = "test 3"
							remove_claims = { who = root }
							closest_system = {
								limit = {
									exists = space_owner
									space_owner = { is_in_federation_with = root }
									not = { is_same_value = prev }
								}
								prev = {
									log = "test 4"
									add_claims = { who = prev.space_owner num_of_claims = 3 show_notification = no }
								}
							}
					}
			}
		}
	}

}

# This = Planet
# Prevent colonization for player
ship_event = {
	id = ifo.15
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_size = colonizer
		owner = {
			is_ai = no
			has_origin = ifo_origin_fleet
		}
	}

	immediate = {
		delete_ship = root
	}

}