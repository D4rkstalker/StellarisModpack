namespace = Events_GAPS_Dragon_Hell

country_event = {
	id = Events_GAPS_Dragon_Hell.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Dragon_Hatchers }
	}
	immediate = {
		add_ship_design = "NAME_GAPS_Dragon_red"
		add_ship_design = NAME_GAPS_Dragon_red
		add_global_ship_design = "NAME_GAPS_Dragon_red"
		random_planet_within_border = { 		
			limit = { has_owner = yes }
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = "NAME_GAPS_Dragon_red"
						design = "NAME_GAPS_Dragon_red"
						prefix = no
						upgradable = no
						effect = {
							set_ship_flag = GAPS_Dragon_Pls
							save_event_target_as = GAPS_Dragon_Pretty_Pls
						}
					}
					set_fleet_stance = passive
					set_location = prev
				}
			}
		}
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.3 days = 360 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 11880 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 23760 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 35640 } }
	}
}

ship_event = {
	id = Events_GAPS_Dragon_Hell.111
	hide_window = yes

	is_triggered_only = yes

	trigger = { is_ship_size = space_dragon_GAPS_red_hatchling }

	immediate = {
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = {
					name = "NAME_GAPS_Dragon_red"
					design = "NAME_GAPS_Dragon_red"
					prefix = no
					upgradable = no
					effect = {
						set_ship_flag = GAPS_Dragon_Pls
						save_event_target_as = GAPS_Dragon_Pretty_Pls
					}
				}
				set_fleet_stance = passive
				set_location = from
			}
		}
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.3 days = 360 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 11880 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 23760 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 35640 } }
		destroy_fleet = { target = root.fleet destroy_template = yes }
		solar_system = {
			while = { 
				count = GAPS_Dragon_Mineral_Hoard_Level 
				event_target:GAPS_Dragon_Pretty_Pls = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Mineral_Hoard days = -1 }
				}
			}
			while = { 
				count = GAPS_Dragon_Alloy_Hoard_Level 
				event_target:GAPS_Dragon_Pretty_Pls = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Alloy_Hoard days = -1 }
				}
			}
			while = { 
				count = GAPS_Dragon_Rare_Crystal_Hoard_Level 
				event_target:GAPS_Dragon_Pretty_Pls = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Rare_Crystal_Hoard days = -1 }
				}
			}
			while = { 
				count = GAPS_Dragon_Living_Metal_Hoard_Level 
				event_target:GAPS_Dragon_Pretty_Pls = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Living_Metal_Hoard days = -1 }
				}
			}
		}
	}
}

ship_event = {
	id = Events_GAPS_Dragon_Hell.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Dragon_Hatchers }
	}
	immediate = {
		add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Age days = -1 }
		save_event_target_as = GAPS_Dragon_Pretty_Pls
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.3 days = 360 } }
	}
}
ship_event = {
	id = Events_GAPS_Dragon_Hell.31
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Dragon_Hatchers }
	}
	immediate = {
		add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Seeing days = -1 }
	}
}

country_event = {
	id = Events_GAPS_Dragon_Hell.71
	title = Events_GAPS_Dragon_Hell.71.name
	desc = Events_GAPS_Dragon_Hell.71.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		begin_event_chain = {
			event_chain = "Event_Chain_GAPS_Dragon_Systems"
			target = root
		}
		every_system = {		
			limit = { OR = { has_star_flag = guardians_dragon_system has_star_flag = rubricator_system } }
			random_system_planet = { limit = { is_primary_star = yes } save_event_target_as = Target_Planet_GAPS_Home_Star }
			enable_special_project = { name = Special_Project_GAPS_Dragon_Systems owner = root location = event_target:Target_Planet_GAPS_Home_Star }
		}
	}
}
 
country_event = {
	id = Events_GAPS_Dragon_Hell.72
	title = Events_GAPS_Dragon_Hell.72.name
	desc = Events_GAPS_Dragon_Hell.72.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		save_event_target_as = Target_Country_GAPS_Make_Friendly
		every_system = {		
			limit = { has_star_flag = guardians_dragon_system } 
			every_fleet_in_system = {
				limit = { has_fleet_flag = dragon_fleet }
				set_owner = event_target:Global_Target_GAPS_Pacified_Dragon_Country
			}
			every_system_planet = {
				limit = { has_planet_flag = hoard_planet }
				set_planet_flag = deegged
			}
		}
		event_target:Global_Target_GAPS_Pacified_Dragon_Country = {
			set_faction_hostility = {
				set_hostile = no
			#	set_neutral = yes
				set_friendly = yes
				target = event_target:Target_Country_GAPS_Make_Friendly
			}
		}
		country_event = { id = leviathans.663 }
		add_research_option = tech_dragon_armor
	}
}
 
country_event = {
	id = Events_GAPS_Dragon_Hell.73
	title = Events_GAPS_Dragon_Hell.73.name
	desc = Events_GAPS_Dragon_Hell.73.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Flag_Country_GAPS_Can_Pacify_Shard_Drake
	}
}
planet_event = {
	id = Events_GAPS_Dragon_Hell.731
	title = Events_GAPS_Dragon_Hell.731.name
	desc = Events_GAPS_Dragon_Hell.731.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		solar_system.owner = { save_event_target_as = Target_Country_GAPS_Make_Friendly }
		event_target:rubricator_dragon_fleet = {
			set_owner = event_target:Global_Target_GAPS_Pacified_Dragon_Country
		}
		event_target:Global_Target_GAPS_Pacified_Dragon_Country = {
			set_faction_hostility = {
				set_hostile = no
			#	set_neutral = yes
				set_friendly = yes
				target = event_target:Target_Country_GAPS_Make_Friendly
			}
		}
		event_target:rubricator_dragon_fleet = {
			set_fleet_stance = aggressive
		}
	}
}

country_event = {
	id = Events_GAPS_Dragon_Hell.74
	title = Events_GAPS_Dragon_Hell.74.name
	desc = Events_GAPS_Dragon_Hell.74.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Flag_Country_GAPS_Can_Tame_L_Drakes
	}
}

planet_event = {
	id = Events_GAPS_Dragon_Hell.741
	title = Events_GAPS_Dragon_Hell.741.name
	desc = Events_GAPS_Dragon_Hell.741.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes
	#set_owner = event_target:spawning_dragons
	#nanite_space_dragon_baby
	#set_country_flag = Flag_Country_GAPS_Can_Tame_L_Drakes
	immediate = {
		solar_system = {
			every_fleet_in_system = {
				limit = { owner = { is_country_type = ldragon_country } }
				set_owner = solar_system.owner
			}
		}
	}
}