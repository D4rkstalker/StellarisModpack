# Overwriting Machine Uprising to give the correct ethics
namespace = syndaw
planet_event = { #uprising
	id = syndaw.1020
	title = syndaw.1020.name
	desc = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_materialist
					has_ethic = ethic_fanatic_materialist
				}
			}
		}
		text = syndaw.1020.desc.mater
	}
	desc = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
		text = syndaw.1020.desc.spiri
	}
	desc = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
				}
			}
		}
		text = syndaw.1020.desc.milit
	}
	desc = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_pacifist
					has_ethic = ethic_fanatic_pacifist
				}
			}
		}
		text = syndaw.1020.desc.pacif
	}
	desc = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_egalitarian
					has_ethic = ethic_fanatic_egalitarian
				}
			}
		}
		text = syndaw.1020.desc.egali
	}
	desc = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian
				}
			}
		}
		text = syndaw.1020.desc.autho
	}
	desc = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}
			}
		}
		text = syndaw.1020.desc.phile
	}
	desc = {
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		text = syndaw.1020.desc.phobe
	}
	desc = {
		trigger = {
			owner = {
				NOR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian
					has_ethic = ethic_egalitarian
					has_ethic = ethic_fanatic_egalitarian
					has_ethic = ethic_pacifist
					has_ethic = ethic_fanatic_pacifist
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_materialist
					has_ethic = ethic_fanatic_materialist
				}
			}
		}
		text = syndaw.1020.desc
	}
	picture = GFX_evt_machine_sapience
	show_sound = event_ai_started
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}
	
	trigger = {
		host_has_dlc = "Synthetic Dawn Story Pack"
	}
	
	immediate = {
		owner = {
			save_event_target_as = organic_empire
			set_country_flag = had_uprising
			save_event_target_as = current_uprising_originator #the old script accidentally saved the owner as two event targets, keeping it that way for safety, sorry!
		}
		set_planet_flag = machup_capital@root.owner
		# event lock all fleets to prevent exploits
		owner = { every_controlled_fleet = { set_event_locked = yes } }
		# find and flag planets
		owner = {
			effect_on_blob = {
				center = root.solar_system
				owned_planets_percentage = 0.5
				planet_limit = {
					OR = {
						controller = { is_same_value = root.owner }
						solar_system = {
							exists = starbase
							starbase = { owner = { is_same_value = root.owner } }
						}
					}
					solar_system = { # never flip any planets in the capital system
						NOT = { any_system_planet = { is_same_value = root.owner.capital_scope } }
					}
					is_under_colonization = no
				}
				effect = {
					set_star_flag = machup_system_flip
				}
			}
		}
		# create machine species
		create_species = {
			name = random
			class = MACHINE
			portrait = random
			traits = {
				trait = trait_machine_unit
				trait = random_traits
			}
			immortal = yes
		}
		# create machine country
		random_list = {
			1 = { # exterminator
				modifier = {
					factor = 5
					owner = {
						has_country_flag = attempted_disassembly
						has_country_flag = attempted_ban
					}
				}
				modifier = {
					factor = 30
					owner = {
						any_owned_pop = {
							has_trait = trait_mechanical
							has_trait = trait_robot_domestic_protocols
						}
					}
				}
				owner = {
					create_country = {
						name = random
						type = default
						species = last_created_species
						ignore_initial_colony_error = yes
						day_zero_contact = no
						ethos = { ethic = ethic_gestalt_consciousness ethic = ethic_form_impassive ethic = ethic_form_introspective ethic = ethic_form_convergent ethic = ethic_foci_convalescence}
						authority = auth_machine_intelligence
						origin = origin_separatists
						civics = {
							civic = civic_machine_terminator
							civic = random
						}
						flag = random
						effect = {
							modify_species = {
								species = this
								add_trait = trait_machine_unit
								add_traits_at_start_of_list = yes
							}
							save_event_target_as = current_uprising
							country_event = { id = syndaw.1022 } # setup happens here now
						}
					}
				}
			}
			30 = { # assimilator
				owner = {
					create_country = {
						name = random
						type = default
						species = last_created_species
						ignore_initial_colony_error = yes
						day_zero_contact = no
						ethos = { ethic = ethic_gestalt_consciousness }
						authority = auth_machine_intelligence
						origin = origin_separatists
						civics = {
							civic = civic_machine_assimilator
							civic = random
						}
						flag = random
						effect = {
							modify_species = {
								species = this
								add_trait = trait_machine_unit
								add_traits_at_start_of_list = yes
							}
							save_event_target_as = current_uprising
							country_event = { id = syndaw.1022 } # setup happens here now
						}
					}
				}
			}
			100 = { # regular machine empire
				owner = {
					create_country = {
						name = random
						type = default
						species = last_created_species
						ignore_initial_colony_error = yes
						day_zero_contact = no
						ethos = { ethic = ethic_gestalt_consciousness }
						authority = auth_machine_intelligence
						civics = random
						flag = random
						origin = origin_separatists
						effect = {
							modify_species = {
								species = this
								add_trait = trait_machine_unit
								add_traits_at_start_of_list = yes
							}
							save_event_target_as = current_uprising
							country_event = { id = syndaw.1022 } # setup happens here now
						}
					}
				}
			}
		}
	}
	option = {
		name = syndaw.1020.a
		custom_tooltip = syndaw.1020.a.tooltip
	}

	option = {
		name = syndaw.1020.b
		trigger = {
			event_target:current_uprising_originator = { is_ai = no }
		}
		custom_tooltip = syndaw.1020.b.tooltip
		hidden_effect = {
			if = {
				limit = {
					event_target:current_uprising_originator = { num_owned_planets > 0 }
				}
				event_target:current_uprising = {
					set_player = event_target:current_uprising_originator
				}				
			}
		}
	}

	after = {
		hidden_effect = {
			event_target:current_uprising_originator = {
				every_controlled_fleet = {
					set_event_locked = no
				}
			}
		}
	}
}

namespace = hive_happiness
country_event = {
	id = hive_happiness.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_ethic = ethic_form_autonomous
		has_ethic = ethic_form_affective
	}

	immediate = {
		capital_scope = {
			save_event_target_as = original_homeworld
		}
		if = {
			limit = { has_authority = auth_machine_intelligence }
			owner.species = {
				change_species_characteristics = {
					remove_trait = "trait_machine_unit"
					add_traits_at_start_of_list = yes
					add_trait = "trait_bugged_happy_machine"
				}
			}
		}
		else_if = {
			limit = { has_authority = auth_hive_mind }
			owner.species = {
				change_species_characteristics = {
					remove_trait = "trait_hive_mind"
					add_traits_at_start_of_list = yes
					add_trait = "trait_bugged_happy_hive"
				}
			}
		}
		# last_created_species = {
		# 	set_species_homeworld = event_target:original_homeworld
		# }
		# every_owned_pop = {
		# 	limit = { is_same_species = owner.species }
		# 	change_species = event_target:new_species
		# 	modify_species = { remove_trait = trait_machine_unit }
		# 	modify_species = { remove_trait = trait_hive_mind }
		# 	save_event_target_as = all_pops
		# }

		# change_dominant_species = { species = event_target:all_pops }
		add_resource = { consumer_goods = 100 }
		capital_scope = {
			every_owned_pop = {
				random_list = {
					1 = { pop_force_add_ethic = ethic_foci_analysis }
					1 = { pop_force_add_ethic = ethic_foci_connection }
					1 = { pop_force_add_ethic = ethic_foci_convalescence }
					1 = { pop_force_add_ethic = ethic_foci_encroachment }
					1 = { pop_force_add_ethic = ethic_foci_logistics }
					1 = { pop_force_add_ethic = ethic_foci_progression}
				}
			}
		}
	}
}

namespace = bugged_change_focus
country_event = {
	id = bugged_change_focus.1
	title = bugged_change_focus.1.name
	desc = bugged_change_focus.1.desc
	is_triggered_only = yes
	picture = GFX_evt_unity_symbol
	
	trigger = {
		always = yes
	}

	option = {
		trigger = { NOT = { has_ethic = ethic_foci_logistics } }
		name = "bugged_change_focus.2.yes"
		custom_tooltip = "bugged_change_focus.2.tooltip"
		hidden_effect = {
			country_event = { id = bugged_change_focus.2 }
		}
	}

	option = {
		trigger = { NOT = { has_ethic = ethic_foci_encroachment } }
		name = "bugged_change_focus.3.yes"
		custom_tooltip = "bugged_change_focus.3.tooltip"
		hidden_effect = {
			country_event = { id = bugged_change_focus.3 }
		}
	}

	option = {
		trigger = { NOT = { has_ethic = ethic_foci_convalescence } }
		name = "bugged_change_focus.4.yes"
		custom_tooltip = "bugged_change_focus.4.tooltip"
		hidden_effect = {
			country_event = { id = bugged_change_focus.4 }
		}
	}

	option = {
		trigger = { NOT = { has_ethic = ethic_foci_analysis } }
		name = "bugged_change_focus.5.yes"
		custom_tooltip = "bugged_change_focus.5.tooltip"
		hidden_effect = {
			country_event = { id = bugged_change_focus.5 }
		}
	}

	option = {
		trigger = { NOT = { has_ethic = ethic_foci_progression } }
		name = "bugged_change_focus.6.yes"
		custom_tooltip = "bugged_change_focus.6.tooltip"
		hidden_effect = {
			country_event = { id = bugged_change_focus.6 }
		}
	}

	option = {
		trigger = { NOT = { has_ethic = ethic_foci_connection } }
		name = "bugged_change_focus.7.yes"
		custom_tooltip = "bugged_change_focus.7.tooltip"
		hidden_effect = {
			country_event = { id = bugged_change_focus.7 }
		}
	}
	option = {
		name = "bugged_change_focus.1.no"
		custom_tooltip = "bugged_change_focus.1.tooltip"
		add_resource = {
			unity = 500
		}
	}
}

country_event = {
	id = bugged_change_focus.2
	title = bugged_change_focus.2.name
	desc = bugged_change_focus.2.desc
	is_triggered_only = yes
	picture = GFX_evt_unity_symbol
	
	trigger = {
		always = yes 
	}
	
	option = {
		name = "bugged_change_focus_2.yes.2"
		custom_tooltip = "bugged_change_focus_2.tooltip.2"
		hidden_effect = {
			if = {
				limit = { has_ethic = ethic_foci_logistics }
				country_remove_ethic = ethic_foci_logistics
			}
			else_if = {
				limit = { has_ethic = ethic_foci_encroachment }
				country_remove_ethic = ethic_foci_encroachment
			}
			else_if = {
				limit = { has_ethic = ethic_foci_convalescence }
				country_remove_ethic = ethic_foci_convalescence
			}
			else_if = {
				limit = { has_ethic = ethic_foci_analysis }
				country_remove_ethic = ethic_foci_analysis
			}
			else_if = {
				limit = { has_ethic = ethic_foci_progression }
				country_remove_ethic = ethic_foci_progression
			}
			else_if = {
				limit = { has_ethic = ethic_foci_connection }
				country_remove_ethic = ethic_foci_connection
			}
			country_add_ethic = ethic_foci_logistics
		}
	}
}

country_event = {
	id = bugged_change_focus.3
	title = bugged_change_focus.3.name
	desc = bugged_change_focus.3.desc
	is_triggered_only = yes
	picture = GFX_evt_unity_symbol
	
	trigger = {
		always = yes 
	}
	
	option = {
		name = "bugged_change_focus_3.yes.2"
		custom_tooltip = "bugged_change_focus_3.tooltip.2"
		hidden_effect = {
			if = {
				limit = { has_ethic = ethic_foci_logistics }
				country_remove_ethic = ethic_foci_logistics
			}
			else_if = {
				limit = { has_ethic = ethic_foci_encroachment }
				country_remove_ethic = ethic_foci_encroachment
			}
			else_if = {
				limit = { has_ethic = ethic_foci_convalescence }
				country_remove_ethic = ethic_foci_convalescence
			}
			else_if = {
				limit = { has_ethic = ethic_foci_analysis }
				country_remove_ethic = ethic_foci_analysis
			}
			else_if = {
				limit = { has_ethic = ethic_foci_progression }
				country_remove_ethic = ethic_foci_progression
			}
			else_if = {
				limit = { has_ethic = ethic_foci_connection }
				country_remove_ethic = ethic_foci_connection
			}
			country_add_ethic = ethic_foci_encroachment
		}
	}
}

country_event = {
	id = bugged_change_focus.4
	title = bugged_change_focus.4.name
	desc = bugged_change_focus.4.desc
	is_triggered_only = yes
	picture = GFX_evt_unity_symbol
	
	trigger = {
		always = yes 
	}
	
	option = {
		name = "bugged_change_focus_4.yes.2"
		custom_tooltip = "bugged_change_focus_4.tooltip.2"
		hidden_effect = {
			if = {
				limit = { has_ethic = ethic_foci_logistics }
				country_remove_ethic = ethic_foci_logistics
			}
			else_if = {
				limit = { has_ethic = ethic_foci_encroachment }
				country_remove_ethic = ethic_foci_encroachment
			}
			else_if = {
				limit = { has_ethic = ethic_foci_convalescence }
				country_remove_ethic = ethic_foci_convalescence
			}
			else_if = {
				limit = { has_ethic = ethic_foci_analysis }
				country_remove_ethic = ethic_foci_analysis
			}
			else_if = {
				limit = { has_ethic = ethic_foci_progression }
				country_remove_ethic = ethic_foci_progression
			}
			else_if = {
				limit = { has_ethic = ethic_foci_connection }
				country_remove_ethic = ethic_foci_connection
			}
			country_add_ethic = ethic_foci_convalescence
		}
	}
}

country_event = {
	id = bugged_change_focus.5
	title = bugged_change_focus.5.name
	desc = bugged_change_focus.5.desc
	is_triggered_only = yes
	picture = GFX_evt_unity_symbol
	
	trigger = {
		always = yes 
	}
	
	option = {
		name = "bugged_change_focus_5.yes.2"
		custom_tooltip = "bugged_change_focus_5.tooltip.2"
		hidden_effect = {
			if = {
				limit = { has_ethic = ethic_foci_logistics }
				country_remove_ethic = ethic_foci_logistics
			}
			else_if = {
				limit = { has_ethic = ethic_foci_encroachment }
				country_remove_ethic = ethic_foci_encroachment
			}
			else_if = {
				limit = { has_ethic = ethic_foci_convalescence }
				country_remove_ethic = ethic_foci_convalescence
			}
			else_if = {
				limit = { has_ethic = ethic_foci_analysis }
				country_remove_ethic = ethic_foci_analysis
			}
			else_if = {
				limit = { has_ethic = ethic_foci_progression }
				country_remove_ethic = ethic_foci_progression
			}
			else_if = {
				limit = { has_ethic = ethic_foci_connection }
				country_remove_ethic = ethic_foci_connection
			}
			country_add_ethic = ethic_foci_analysis
		}
	}
}

country_event = {
	id = bugged_change_focus.6
	title = bugged_change_focus.6.name
	desc = bugged_change_focus.6.desc
	is_triggered_only = yes
	picture = GFX_evt_unity_symbol
	
	trigger = {
		always = yes 
	}
	
	option = {
		name = "bugged_change_focus_6.yes.2"
		custom_tooltip = "bugged_change_focus_6.tooltip.2"
		hidden_effect = {
			if = {
				limit = { has_ethic = ethic_foci_logistics }
				country_remove_ethic = ethic_foci_logistics
			}
			else_if = {
				limit = { has_ethic = ethic_foci_encroachment }
				country_remove_ethic = ethic_foci_encroachment
			}
			else_if = {
				limit = { has_ethic = ethic_foci_convalescence }
				country_remove_ethic = ethic_foci_convalescence
			}
			else_if = {
				limit = { has_ethic = ethic_foci_analysis }
				country_remove_ethic = ethic_foci_analysis
			}
			else_if = {
				limit = { has_ethic = ethic_foci_progression }
				country_remove_ethic = ethic_foci_progression
			}
			else_if = {
				limit = { has_ethic = ethic_foci_connection }
				country_remove_ethic = ethic_foci_connection
			}
			country_add_ethic = ethic_foci_progression
		}
	}
}

country_event = {
	id = bugged_change_focus.7
	title = bugged_change_focus.7.name
	desc = bugged_change_focus.7.desc
	is_triggered_only = yes
	picture = GFX_evt_unity_symbol
	
	trigger = {
		always = yes 
	}
	
	option = {
		name = "bugged_change_focus_7.yes.2"
		custom_tooltip = "bugged_change_focus_7.tooltip.2"
		hidden_effect = {
			if = {
				limit = { has_ethic = ethic_foci_logistics }
				country_remove_ethic = ethic_foci_logistics
			}
			else_if = {
				limit = { has_ethic = ethic_foci_encroachment }
				country_remove_ethic = ethic_foci_encroachment
			}
			else_if = {
				limit = { has_ethic = ethic_foci_convalescence }
				country_remove_ethic = ethic_foci_convalescence
			}
			else_if = {
				limit = { has_ethic = ethic_foci_analysis }
				country_remove_ethic = ethic_foci_analysis
			}
			else_if = {
				limit = { has_ethic = ethic_foci_progression }
				country_remove_ethic = ethic_foci_progression
			}
			else_if = {
				limit = { has_ethic = ethic_foci_connection }
				country_remove_ethic = ethic_foci_connection
			}
			country_add_ethic = ethic_foci_connection
		}
	}
}