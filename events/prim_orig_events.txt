
namespace = prim_orig

# add random weirdness to primitives
event = {
	id = prim_orig.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = using_mod_more_prim_orig
		every_country = {
			limit = {
				is_country_type = primitive
			}
			# syncretic proles
			random_list = {
				90 = { }
				# syncretic species
				10 = {
					modifier = { 
						factor = 0
						NOT = { host_has_dlc = Utopia }
					}
					create_species = {
						name = random
						class = random_non_machine
						portrait = random
						homeworld = capital_scope
						traits = {
							trait = trait_syncretic_proles
							trait = random_traits
						}
					}
					capital_scope = {
						while = {
							limit = {
								pop_percentage = {
									percentage < 0.4
									limit = {
										NOT = { is_same_species = owner }
									}
								}	
							}
							random_owned_pop = {
								limit = {
									is_same_species = owner
								}
								kill_pop = yes
							}
							create_pop = {
								species = last_created_species
								ethos = random
							}
						}	
					}
				}
			}
			# calamitous birth
			IF = {
				limit = {
					is_lithoid_empire = yes
				}
				random_list = {
					80 = { }
					20 = {
						capital_scope = {
							add_deposit = d_lithoid_crater
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_modifier = { modifier = lithoid_crater }	
						}
						set_origin = origin_lithoid
					}
				}
			}
			# mechanist
			random_list = {
				60 = { }
				40 = {
					country_event = { id = prim_orig.10 days = 1 }
					modifier = {
						factor = 0.3
						has_country_flag = machine_age
					}
					modifier = {
						factor = 0.6
						OR = {
							has_country_flag = atomic_age
							has_country_flag = tomb_world_primitives
						}
					}
				}
			}
			# necrophage
			random_list = {
				95 = { }
				5 = {
					country_event = { id = prim_orig.50 days = 1 }
					modifier = {
						factor = 0
						has_country_flag = stone_age
					}
					modifier = {
						factor = 0.2
						has_country_flag = bronze_age
					}
					modifier = {
						factor = 0.3
						has_country_flag = iron_age
					}
					modifier = {
						factor = 0.4
						has_country_flag = late_medieval_age
					}
					modifier = {
						factor = 0.5
						has_country_flag = renaissance_age
					}
					modifier = {
						factor = 0.6
						has_country_flag = steam_age
					}
					modifier = {
						factor = 0.7
						has_country_flag = industrial_age
					}
					modifier = {
						factor = 0.8
						has_country_flag = machine_age
					}
					modifier = {
						factor = 0.9
						has_country_flag = atomic_age
					}
				}
			}
			# federation
			IF = {
				limit = { is_xenophile = yes }
				country_event = { id = prim_orig.60 days = 1 }
			}
		}
		every_country = {
			limit = {
				is_country_type = vbp_hive
			}
			random_list = {
				30 = { }
				20 = {
					IF = {
						limit = { is_lithoid_empire = yes }
						capital_scope = {
							add_deposit = d_lithoid_crater
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_modifier = { modifier = lithoid_crater }	
						}
						set_origin = origin_lithoid
					}
				}
				50 = {
					IF = {
						limit = { host_has_dlc = "Utopia" }
						set_origin = origin_tree_of_life
						capital_scope = {
							add_deposit = d_tree_of_life_home
						}
					}
				}
			}
			# federation
			IF = {
				limit = { is_xenophile = yes }
				country_event = { id = prim_orig.60 days = 1 }
			}
		}
		every_country = {
			limit = { is_country_type = vbp_machine }
			# federation
			IF = {
				limit = { is_xenophile = yes }
				country_event = { id = prim_orig.60 days = 1 }
			}
		}	
	}
}

#########################
#Natural  outcome  block#
#########################

#Change origin before natural ftl discovery
country_event = {
	id = prim_orig.5
	hide_window = yes

	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		OR = {
			has_country_flag = early_space_age
			has_country_flag = vbp_hive_superego_stage
			has_country_flag = vbp_primitive_robots
		}
		NOR = {
			has_country_flag = recently_advanced
			AND = {
				exists = home_planet
				home_planet = {
					has_observation_outpost = yes
					observation_outpost = {
						OR = {
							has_mission = covert_infiltration
							has_mission = vbp_hive_subdue
							has_mission = vbp_hive_break_apart_0
							has_mission = vbp_hive_break_apart_1
							has_mission = vbp_machine_repurpose
						}
					}
				}
			}
		}
		years_passed > 25
	}

	mean_time_to_happen = {
		years = 60
	}

	immediate = {
		random_list = {
			6 = {
				IF = {
					limit = {
						NOR = {
							has_origin = origin_lithoid
							has_origin = origin_necrophage
							has_origin = origin_tree_of_life
							AND = {
								exists = home_planet
								home_planet = {
									has_observation_outpost = yes
									observation_outpost = {
										OR = {
											has_mission = technological_enlightenment_0
											has_mission = technological_enlightenment_1
											has_mission = technological_enlightenment_2
											has_mission = technological_enlightenment_3
											has_mission = technological_enlightenment_4
											has_mission = technological_enlightenment_5
											has_mission = technological_enlightenment_6
											has_mission = technological_enlightenment_7
											has_mission = technological_enlightenment_8
											has_mission = technological_enlightenment_9
											has_mission = vbp_hive_enlightenment_0
											has_mission = vbp_hive_enlightenment_1
											has_mission = vbp_hive_enlightenment_2
											has_mission = vbp_machine_framework_upgrade
										}
									}
								}
							}
						}
					}
					IF = {
						limit = {
							any_owned_species = {
								is_robotic = yes
							}
						}
						set_origin = origin_mechanists
					}
					ELSE_IF = {
						limit = {
							any_owned_species = {
								has_trait = trait_syncretic_proles
							}
						}
						set_origin = origin_syncretic_evolution
					}
					ELSE_IF = {
						limit = {
							has_trait = trait_survivor
						}
						set_origin = origin_post_apocalyptic
					}
					ELSE_IF = {
						limit = {
							capital_scope = {
								is_planet_class = pc_ringworld_habitable
							}
						}
						set_origin = origin_shattered_ring
					}
					ELSE_IF = {
						limit = {
							capital_scope = {
								is_planet_class = pc_relic
							}
						}
						set_origin = origin_remnants
					}
					ELSE_IF = {
						limit = {
							has_country_flag = mpo_primitive_contact_sender
							has_country_flag = mpo_common_ground_advance
						}
						set_origin = origin_common_ground_npc
					}
					ELSE_IF = {
						limit = {
							has_country_flag = mpo_primitive_contact_sender
							has_country_flag = mpo_hegemon_advance
						}
						set_origin = origin_hegemon_npc
					}
					ELSE_IF = {
						limit = {
							has_country_flag = mpo_primitive_contact_sender
						}
						set_origin = origin_common_ground
					}
					ELSE_IF = {
						limit = {
							capital_scope = {
								is_planet_class = pc_gaia
							}
						}
						set_origin = origin_life_seeded
					}
					ELSE_IF = {
						limit = {
							capital_scope.solar_system = {
								OR = {
									has_megastructure = gateway_0
									has_megastructure = gateway_final
									has_megastructure = gateway_ruined
									has_megastructure = gateway_restored
									has_megastructure = lgate_base
								}
							}
						}
						set_origin = origin_galactic_doorstep
					}
					ELSE_IF = {
						limit = {
							has_country_flag = benefactor_empire
						}
						set_origin = origin_shoulders_of_giants
					}
					ELSE = {
						set_origin = origin_default
						capital_scope = {
							add_modifier = { modifier = prosp_uni_mod }
						}
					}
				}
				switch = {
					trigger = is_country_type
					primitive = {
						country_event = { id = primitive.16 }
					}
					vbp_hive = {
						country_event = { id = vbp_hive.220 }
					}
					vbp_machine = {
						country_event = { id = vbp_machine.200 }
					}
				}
			}			
			4 = {
				modifier = {
					factor = 0
					OR = {
						has_country_flag = acquired_tech
						has_country_flag = mpo_common_ground_advance
						has_country_flag = mpo_hegemon_advance
					}
				}
				modifier = {
					factor = 0.375
					has_country_flag = vbp_machine_angered
				}
			}
		}
	}
}

#Robots
country_event = {
	id = prim_orig.10
	
	hide_window = yes
	
	trigger = {
		is_country_type = primitive
		OR = {
			has_country_flag = machine_age
			has_country_flag = atomic_age
			has_country_flag = early_space_age
		}
		is_materialist = yes
		OR = {
			host_has_dlc = "Utopia"
			host_has_dlc = "Synthetic Dawn Story Pack"
		}
	}
	
	mean_time_to_happen = {
		years = 400
	}
	
	immediate = {
		give_technology = { message = no tech = tech_powered_exoskeletons }
		give_technology = { message = no tech = tech_robotic_workers }
		create_built_robot_species = yes
		capital_scope = {
			while = {
				count = 4
				create_pop = {
					species = last_created_species
				}
			}	
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.11 }
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.11
	title = evt_primitive_mechanists
	picture = GFX_evt_robot_assembly_plant
	location = from.capital_scope
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_mechanists_desc
	desc = {
		text = evt_primitive_mechanists_desc
		trigger = {
			is_spiritualist = no
		}
	}
	desc = {
		text = evt_primitive_mechanists_desc_spiritualist
		trigger = {
			is_spiritualist = yes
		}
	}
		
	is_triggered_only = yes
	
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = evt_primitive_mechanists.spiritualists
	}
	option = {
		name = INTERESTING
	}
}

#Machine_takeover
country_event = {
	id = prim_orig.20
	
	hide_window = yes
	
	trigger = {
		is_country_type = primitive
		has_country_flag = early_space_age
		has_technology = tech_robotic_workers
		host_has_dlc = "Synthetic Dawn Story Pack"
	}
	
	mean_time_to_happen = {
		years = 200
	}
	
	immediate = {
		every_owned_pop = {
			limit = {
				is_robot_pop = yes
			}
			kill_pop = yes
		}
		capital_scope = {
			save_event_target_as = machine_takeover_planet
			create_species = {
				name = random
				class = MACHINE
				portrait = random
				homeworld = this
				traits = {
					trait = trait_machine_unit
				}
				traits = random
			}
			random_list = {
				# regular machine empire
				60 = {
					every_owned_pop = {
						kill_pop = yes
					}
					change_pc = pc_nuked
					set_planet_flag = primitives_nuked_themselves
					create_country = {
						name = random
						species = last_created_species
						ethos = {
							ethic = ethic_gestalt_consciousness
						}
						authority = auth_machine_intelligence
						civics = {
							civic = vbp_machine_civic_one
							civic = vbp_machine_civic_two
						}
						origin = origin_enlightened
						flag = random
						type = vbp_machine
					}
					last_created_country = {
						set_country_flag = vbp_primitive_robots
						set_primitive_age = vbp_primitive_robots
						vbp_randomize_machine_flag = yes
					}
					vbp_setup_machine_world = yes
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.21 }
						}
					}		
				}
				15 = {
					every_owned_pop = {
						kill_pop = yes
					}
					create_country = {
						name = random
						species = last_created_species
						ethos = {
							ethic = ethic_gestalt_consciousness
						}
						authority = auth_machine_intelligence
						civics = {
							civic = vbp_machine_civic_one
							civic = vbp_machine_civic_two
						}
						origin = origin_enlightened
						flag = random
						type = vbp_machine
					}
					last_created_country = {
						set_country_flag = vbp_primitive_robots
						set_primitive_age = vbp_primitive_robots
						vbp_randomize_machine_flag = yes
					}
					vbp_setup_machine_world = yes
					IF = {
						limit = {
							has_deposit = d_decrepit_dwellings
						}
						remove_deposit = d_decrepit_dwellings
					}
					ELSE = {
						random_owned_pop = {
							limit = {
								is_robot_pop = no
							}
							kill_pop = yes
						}	
					}
					add_deposit = d_assimilators_ruins
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.22 }
						}
					}
				}
				# servitors
				12.5 = {
					while = {
						limit = { num_pops > 4 }
						random_owned_pop = {
							kill_pop = yes
						}
					}
					create_country = {
						name = random
						species = last_created_species
						ethos = {
							ethic = ethic_gestalt_consciousness
						}
						authority = auth_machine_intelligence
						civics = {
							civic = vbp_machine_civic_one
							civic = civic_machine_servitor
						}
						origin = origin_enlightened
						flag = random
						type = vbp_machine
					}
					last_created_country = {
						set_country_flag = vbp_primitive_robots
						set_primitive_age = vbp_primitive_robots
						vbp_randomize_machine_flag = yes
					}
					owner.species = {
						set_species_flag = secondary_species@last_created_country
						set_citizenship_type = {
							country = last_created_country
							type = citizenship_limited
						}
						set_living_standard = {
							country = last_created_country
							type = living_standard_organic_trophy
						}
					}
					vbp_setup_machine_world = yes
					add_building = building_mpo_machine_farms
					add_building = building_mpo_machine_factories
					add_building = building_organic_sanctuary
					IF = {
						limit = {
							has_deposit = d_decrepit_dwellings
						}
						remove_deposit = d_decrepit_dwellings
					}
					ELSE = {
						random_owned_pop = {
							limit = {
								is_robot_pop = no
							}
							kill_pop = yes
						}	
					}
					add_deposit = d_unsupervised_settlement
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.23 }
						}
					}
				}
				# assimilators
				12.5 = {
					while = {
						limit = { num_pops > 10 }
						random_owned_pop = {
							kill_pop = yes
						}
					}
					create_country = {
						name = random
						species = last_created_species
						ethos = {
							ethic = ethic_gestalt_consciousness
						}
						authority = auth_machine_intelligence
						civics = {
							civic = vbp_machine_civic_one
							civic = civic_machine_assimilator
						}
						origin = origin_enlightened
						flag = random
						type = vbp_machine
					}
					last_created_country = {
						set_country_flag = vbp_primitive_robots
						set_primitive_age = vbp_primitive_robots
						vbp_randomize_machine_flag = yes
					}
					random_owned_pop = {
						create_cybernetic_species_mod = yes
					}
					last_created_species = {
						set_species_flag = secondary_species@last_created_country
						set_citizenship_type = {
							country = last_created_country
							type = citizenship_full_machine
						}
						set_living_standard = {
							country = last_created_country
							type = living_standard_hive_mind
						}
					}
					vbp_setup_machine_world = yes
					add_building = building_mpo_machine_farms
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.24 }
						}
					}
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.21
	title = evt_primitive_machine_nuking
	picture = GFX_evt_nuclear_explosion
	location = event_target:machine_takeover_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_machine_nuking_desc
		
	is_triggered_only = yes
	
	option = {
		name = UNFORTUNATE
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = evt_primitive_machine_nuking.spiritualists
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = evt_primitive_machine_nuking.spiritualists
	}
}
#Player is notified
country_event = {
	id = prim_orig.22
	title = evt_primitive_machine_takover
	picture = GFX_evt_organic_oppression
	location = event_target:machine_takeover_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_machine_takover_desc
		
	is_triggered_only = yes
	
	option = {
		name = UNFORTUNATE
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = evt_primitive_machine_nuking.spiritualists
	}
}
#Player is notified
country_event = {
	id = prim_orig.23
	title = evt_primitive_machine_service
	picture = GFX_evt_metropolis
	location = event_target:machine_takeover_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_machine_service_desc
		
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = UNFORTUNATE
	}
	option = {
		exclusive_trigger = {
			has_valid_civic = civic_machine_servitor
		}
		name = EXCELLENT
	}
}
#Player is notified
country_event = {
	id = prim_orig.24
	title = evt_primitive_machine_assimilation
	picture = GFX_evt_organic_oppression
	location = event_target:machine_takeover_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_machine_assimilation_desc
		
	is_triggered_only = yes
	
	option = {
		name = WORRYING
	}
	option = {
		exclusive_trigger = {
			is_gestalt = yes
		}
		name = INTERESTING
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = TERRIBLE
	}
}

# Nuclear War (Survivors)
country_event = {
	id = prim_orig.30
	title = primitive.131.name
	desc = primitive.132.desc
	picture = GFX_evt_nuclear_explosion
	location = FROM

	is_triggered_only = yes

	immediate = {
		FROM = {
			change_pc = pc_nuked
			reroll_planet = yes
			owner = {
				random_list = {
					2 = {
						create_survivor_species_mod = yes
					}
					1 = {
						create_survivor_necroids = yes
						modifier = {
							factor = 0
							has_necroids = no
						}
					}
				}
				change_species = last_created_species
				set_graphical_culture = industrial_01
				if = {
					limit = { has_country_flag = atomic_age }
					remove_country_flag = atomic_age
				}
				if = {
					limit = { has_country_flag = industrial_age }
					remove_country_flag = industrial_age
				}
				set_country_flag = vbp_tomb_primitives
				set_primitive_age = vbp_tomb_primitives
				set_timed_country_flag = { flag = recently_advanced days = 7200 }
				change_government = {
					civics = {
						civic = civic_vbp_tomb_1
						civic = civic_vbp_tomb_2	
					}
				}
			}
			while = {
				limit = {
					count_owned_pops = {
						count > 15
					}
				}
				random_owned_pop = {
					kill_pop = yes
				}
			}
			while = {
				limit = {
					any_owned_species = {
						is_robotic = no
						NOT = { has_trait = trait_survivor }
					}
				}
				random_owned_pop = {
					limit = {
						is_robot_pop = no
						NOT = { has_trait = trait_survivor }
					}
					create_survivor_species_mod = yes
				}
			}
			remove_all_buildings = yes
			add_building = building_vbp_wasteland_towns
            add_building = building_vbp_vaults
            add_building = building_vbp_government_bunkers
			add_building = building_vbp_raiding_villages
			owner = {
				random_list = {
					5 = { }
					5 = {
						country_event = {
							id = prim_orig.150
							days = 3600
							random = 3600
						}
					}
				}	
			}
		}
	}

	option = {
		name = primitive.132.a
	}
}

# necrophage takes over on primitive world
country_event = {
	id = prim_orig.50
	hide_window = yes
	mean_time_to_happen = { years = 34800 }

	trigger = {
		is_country_type = primitive
		NOT = { has_country_flag = stone_age }
		has_necroids = yes
	}

	immediate = {
		create_necrophage_species = yes
		switch = {
			trigger = has_country_flag
			bronze_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_landed_nobility
						civic = civic_flat_world_theory
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"green"
							"dark_green"
							"null"
							"null"
						}	
					}
				}
				last_created_country = {
					set_primitive_age = bronze_age
					set_country_flag = bronze_age
				}
			}
			iron_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_landed_nobility
						civic = civic_flat_world_theory
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"purple"
							"dark_purple"
							"null"
							"null"
						}
					}
				}
				last_created_country = {
					set_graphical_culture = preindustrial_01
					set_primitive_age = iron_age
					set_country_flag = iron_age
				}
			}
			late_medieval_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_landed_nobility
						civic = civic_flat_world_theory
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"light_blue"
							"blue"
							"null"
							"null"
						}
					}
				}
				last_created_country = {
					set_graphical_culture = preindustrial_01
					set_primitive_age = late_medieval_age
					set_country_flag = late_medieval_age
				}
			}
			renaissance_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_landed_nobility
						civic = civic_flat_world_theory
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"pink"
							"burgundy"
							"null"
							"null"
						}
					}
				}
				last_created_country = {
					set_graphical_culture = preindustrial_01
					set_primitive_age = renaissance_age
					set_country_flag = renaissance_age
				}
			}
			steam_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_landed_nobility
						civic = civic_flat_world_theory
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"orange"
							"red"
							"null"
							"null"
						}
					}
				}
				last_created_country = {
					set_graphical_culture = preindustrial_01
					set_primitive_age = steam_age
					set_country_flag = steam_age
				}
			}
			industrial_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_increasing_urbanization
						civic = civic_atmospheric_pollution
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"beige"
							"yellow"
							"null"
							"null"
						}
					}
				}
				last_created_country = {
					set_graphical_culture = industrial_01
					set_primitive_age = industrial_age
					set_country_flag = industrial_age
				}
			}
			machine_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_increasing_urbanization
						civic = civic_atmospheric_pollution
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"yellow"
							"orange"
							"null"
							"null"
						}
					}
				}
				last_created_country = {
					set_graphical_culture = industrial_01
					set_primitive_age = machine_age
					set_country_flag = machine_age
				}
			}
			atomic_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_increasing_urbanization
						civic = civic_atmospheric_pollution
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"beige"
							"brown"
							"null"
							"null"
						}
					}
				}
				last_created_country = {
					set_graphical_culture = industrial_01
					set_primitive_age = atomic_age
					set_country_flag = atomic_age
				}
			}
			early_space_age = {
				create_country = {
					type = primitive
					species = last_created_species
					ethos = random
					origin = origin_necrophage
					civics = {
						civic = civic_increasing_urbanization
						civic = civic_atmospheric_pollution
					}
					flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"grey"
							"dark_grey"
							"null"
							"null"
						}
					}
				}
				last_created_country = {
					set_graphical_culture = industrial_01
					set_primitive_age = early_space_age
					set_country_flag = early_space_age
				}
			}
		}
		last_created_country = { save_event_target_as = necrophage_country }
		capital_scope = {
			set_owner = last_created_country
			set_capital = yes
			save_event_target_as = necrophage_planet
			while = {
				limit = {
					pop_percentage = {
						percentage < 0.2
						limit = {
							is_same_species = owner
						}
					}	
				}
				random_owned_pop = {
					limit = {
						NOT = { is_same_species = owner }
					}
					kill_pop = yes
				}
				create_pop = {
					species = owner
					ethos = owner
				}
			}
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.51 }
				}
			}
		}
	}
}
# player is notified
country_event = {
	id = prim_orig.51
	title = evt_necrophage_takeover
	picture = GFX_evt_ship_in_orbit
	location = event_target:necrophage_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_necrophage_takeover_desc

	option = {
		trigger = { NOT = { has_origin = origin_necrophage } }
		name = WORRYING
	}
	option = {
		trigger = { has_origin = origin_necrophage }
		name = INTERESTING
	}
}

# necrophage takes over after invasion
country_event = {
	id = prim_orig.55
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = primitive
		has_necroids = yes
	}

	immediate = {
		random_list = {
			95 = { }
			5 = {
				species = { save_event_target_as = prepatent_species }
				fromfrom = {
					save_event_target_as = necrophage_planet
					planet_event = {
						id = prim_orig.56
						days = 120
						random = 250
					}
				}
				modifier = {
					factor = 0.9
					has_country_flag = bronze_age
				}
				modifier = {
					factor = 0.8
					has_country_flag = iron_age
				}
				modifier = {
					factor = 0.7
					has_country_flag = late_medieval_age
				}
				modifier = {
					factor = 0.6
					has_country_flag = renaissance_age
				}
				modifier = {
					factor = 0.5
					has_country_flag = steam_age
				}
				modifier = {
					factor = 0.4
					has_country_flag = industrial_age
				}
				modifier = {
					factor = 0.3
					has_country_flag = machine_age
				}
				modifier = {
					factor = 0.2
				}
				modifier = {
					factor = 0.1
					OR = {
						has_country_flag = early_space_age
						has_country_flag = tomb_world_primitives
					}
				}
			}
		}
	}
}
planet_event = {
	id = prim_orig.56
	title = evt_necrophage_takeover_post_invasion
	picture = GFX_evt_ship_in_orbit
	location = root
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_necrophage_takeover_post_invasion_desc
	immediate = {
		owner = {
			save_event_target_as = primitive_invader
		}
		event_target:prepatent_species = {
			create_necrophage_species = yes
		}
		create_country = {
			name = random
			name_list = random
			species = last_created_species
			type = default
			origin = "origin_necrophage"
			ignore_initial_colony_error = yes
			day_zero_contact = no
			ethos = random
		}
		set_owner = last_created_country
		set_capital = yes
		while = {
			limit = {
				pop_percentage = {
					percentage < 0.2
					limit = {
						is_same_species = owner
					}
				}	
			}
			random_owned_pop = {
				limit = {
					NOT = { is_same_species = owner }
				}
				kill_pop = yes
			}
			create_pop = {
				species = owner
				ethos = owner
			}
		}
		solar_system = {
			starbase = {
				set_owner = last_created_country
			}
		}
	}
	option = {
		solar_system = {
			add_claims = {
				who = event_target:primitive_invader
				num_of_claims = 2 show_notification = yes
			}
		}
		name = TERRIBLE
	}
}

# xenophile primitives with neighbors will try to contact them
country_event = {
	id = prim_orig.60
	
	hide_window = yes
	
	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		OR = {
			has_country_flag = machine_age
			has_country_flag = atomic_age
			has_country_flag = early_space_age
			has_country_flag = vbp_hive_superego_stage
			has_country_flag = vbp_primitive_robots
		}
		NOT = {
			has_country_flag = mpo_no_contacts
		}
		capital_scope = {
			is_inside_nebula = no
		}
		host_has_dlc = Federations
	}
	
	mean_time_to_happen = {
		years = 3
	}
	
	immediate = {
		capital_scope.solar_system = {
			every_system_planet = {
				limit = {
					exists = owner
					owner = {
						NOT = {
							is_same_value = root
						}
						OR = {
							is_country_type = primitive
							is_country_type = vbp_hive
							is_country_type = vbp_machine
						}
						OR = {
							has_country_flag = industrial_age
							has_country_flag = machine_age
							has_country_flag = atomic_age
							has_country_flag = early_space_age
							has_country_flag = vbp_hive_ego_stage
							has_country_flag = vbp_hive_superego_stage
							has_country_flag = vbp_primitive_robots
							has_country_flag = vbp_tomb_primitives
						}
					}	
				}
				owner = {
					IF = {
						limit = {
							NOR = {
								has_country_flag = industrial_age
								has_country_flag = vbp_hive_ego_stage
								has_country_flag = vbp_tomb_primitives
							}
							is_xenophobe = no
							OR = {
								is_xenophile = yes
								AND = {
									is_authoritarian = yes
									ROOT = { is_authoritarian = yes }
								}
								AND = {
									is_egalitarian = yes
									ROOT = { is_egalitarian = yes }
								}
								AND = {
									is_militarist = yes
									ROOT = { is_militarist = yes }
								}
								AND = {
									is_pacifist = yes
									ROOT = { is_pacifist = yes }
								}
								AND = {
									is_spiritualist = yes
									ROOT = { is_spiritualist = yes }
								}
								AND = {
									is_materialist = yes
									ROOT = { is_materialist = yes }
								}
							}
						}
						primitive_seti_effect = {
							delay = 1
							receiver = root
						}
						root = {
							primitive_seti_effect = {
								delay = 1
								receiver = prev
							}	
						}
					}
				}
				root = {
					set_timed_country_flag = {
						flag = keep_looking
						days = 2
					}
				}
			}
			every_neighbor_system = {
				limit = {
					is_inside_nebula = no
				}
				every_system_planet = {
					limit = {
						exists = owner
						owner = {
							NOT = {
								is_same_value = root
							}
							OR = {
								is_country_type = primitive
								is_country_type = vbp_hive
								is_country_type = vbp_machine
							}
							OR = {
								has_country_flag = industrial_age
								has_country_flag = machine_age
								has_country_flag = atomic_age
								has_country_flag = early_space_age
								has_country_flag = vbp_hive_ego_stage
								has_country_flag = vbp_hive_superego_stage
								has_country_flag = vbp_primitive_robots
								has_country_flag = vbp_tomb_primitives
							}
						}	
					}
					owner = {
						IF = {
							limit = {
								NOR = {
									has_country_flag = industrial_age
									has_country_flag = vbp_hive_ego_stage
									has_country_flag = vbp_tomb_primitives
								}
								is_xenophobe = no
								OR = {
									is_xenophile = yes
									AND = {
										is_authoritarian = yes
										ROOT = { is_authoritarian = yes }
									}
									AND = {
										is_egalitarian = yes
										ROOT = { is_egalitarian = yes }
									}
									AND = {
										is_militarist = yes
										ROOT = { is_militarist = yes }
									}
									AND = {
										is_pacifist = yes
										ROOT = { is_pacifist = yes }
									}
									AND = {
										is_spiritualist = yes
										ROOT = { is_spiritualist = yes }
									}
									AND = {
										is_materialist = yes
										ROOT = { is_materialist = yes }
									}
								}
							}
							IF = {
								limit = { years_passed < 1 }
								primitive_seti_effect = {
									delay = 1
									receiver = root
								}
								root = {
									primitive_seti_effect = {
										delay = 1
										receiver = prev
									}	
								}
							}
							ELSE_IF = {
								limit = {
									has_country_flag = mpo_primitive_contact@root
									NOT = {
										has_country_flag = mpo_delay_contact@root
										has_country_flag = recently_advanced
									}
								}
								primitive_seti_effect = {
									delay = 1800
									receiver = root
								}
								root = {
									primitive_seti_effect = {
										delay = 1800
										receiver = prev
									}	
								}
							}
							ELSE = {
								primitive_seti_effect = {
									delay = 1800
									receiver = root
								}
								root = {
									primitive_seti_effect = {
										delay = 3600
										receiver = prev
									}	
								}
							}
						}
					}
					root = {
						set_timed_country_flag = {
							flag = keep_looking
							days = 2
						}
					}
				}	
			}
		}
		IF = {
			limit = {
				NOT = {
					has_country_flag = keep_looking
				}
			}
			set_timed_country_flag = {
				flag = mpo_no_contacts
				days = 21600
			}
		}
	}
}
country_event = {
	id = prim_orig.61
	is_triggered_only = yes
	
	hide_window = yes
	
	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		has_country_flag = machine_age
	}

	immediate = {
		set_primitive_age_effect = { primitive_age = atomic_age }
		capital_scope = {
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.63 }
				}
			}
		}
	}
}
country_event = {
	id = prim_orig.62
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		OR = {
			has_country_flag = machine_age
			has_country_flag = atomic_age
		}
	}

	immediate = {
		set_primitive_age_effect = { primitive_age = early_space_age }
		capital_scope = {
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.64 }
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.63
	title = evt_primitive_seti_atomic_age
	picture = GFX_evt_metropolis
	location = from.capital_scope
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_seti_atomic_age_desc
		
	is_triggered_only = yes
	
	option = {
		name = primitive.13.a
	}
}
#Player is notified
country_event = {
	id = prim_orig.64
	title = evt_primitive_seti_early_space_age
	picture = GFX_evt_satellite_in_orbit
	location = from.capital_scope
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_seti_early_space_age_desc
		
	is_triggered_only = yes
	
	option = {
		name = primitive.19.a
	}
}


#########################
#Random ethics shifts	#
#########################

# Random ethics shift from advancement
country_event = {
	id = prim_orig.140
	
	hide_window = yes
	
	trigger = {
		is_country_type = primitive
		has_country_flag = recently_advanced
		NOR = {
			has_country_flag = stone_age
			has_country_flag = vbp_tomb_primitives
		}
	}
	
	mean_time_to_happen = {
		years = 180
	}
	
	immediate = {
		random_list = {
			10 = {
				primitive_ethic_shift_effect = { ethic = authoritarian notification_event = prim_orig.141 }
				modifier = {
					factor = 2.9
					has_country_flag = bronze_age
				}
				modifier = {
					factor = 0.1
					has_country_flag = renaissance_age
				}
			}
			10 = {
				primitive_ethic_shift_effect = { ethic = egalitarian notification_event = prim_orig.142 }
				modifier = {
					factor = 2.4
					has_country_flag = renaissance_age
				}
				modifier = {
					factor = 1.5
					has_country_flag = industrial_age
				}
				modifier = {
					factor = 0.1
					has_country_flag = bronze_age
				}
			}
			11 = {
				primitive_ethic_shift_effect = { ethic = xenophobe notification_event = prim_orig.143 }
			}
			10 = {
				primitive_ethic_shift_effect = { ethic = xenophile notification_event = prim_orig.144 }
			}
			11.5 = {
				primitive_ethic_shift_effect = { ethic = militarist notification_event = prim_orig.145 }
			}
			10 = {
				primitive_ethic_shift_effect = { ethic = pacifist notification_event = prim_orig.146 }
			}
			10 = {
				primitive_ethic_shift_effect = { ethic = materialist notification_event = prim_orig.147 }
				modifier = {
					factor = 1.5
					OR = {
						has_country_flag = renaissance_age
						has_country_flag = steam_age
						has_country_flag = industrial_age
						has_country_flag = machine_age
						has_country_flag = atomic_age
						has_country_flag = early_space_age
					}
				}
			}
			9 = {
				primitive_ethic_shift_effect = { ethic = spiritualist notification_event = prim_orig.148 }
				modifier = {
					factor = 0.5
					OR = {
						has_country_flag = machine_age
						has_country_flag = atomic_age
						has_country_flag = early_space_age
					}
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.141
	title = evt_primitive_shift_to_authoritarian
	desc = evt_primitive_shift_to_authoritarian_desc
	picture = GFX_evt_primitive_civilization
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.142
	title = evt_primitive_shift_to_egalitarian
	desc = evt_primitive_shift_to_egalitarian_desc
	
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.143
	title = evt_primitive_shift_to_xenophobe
	desc = evt_primitive_shift_to_xenophobe_desc
	
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.144
	title = evt_primitive_shift_to_xenophile
	desc = evt_primitive_shift_to_xenophile_desc
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.145
	title = evt_primitive_shift_to_militarist
	desc = evt_primitive_shift_to_militarist_desc
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.146
	title = evt_primitive_shift_to_pacifist
	desc = evt_primitive_shift_to_pacifist_desc
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.147
	title = evt_primitive_shift_to_spiritualist
	desc = evt_primitive_shift_to_spiritualist_desc
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.148
	title = evt_primitive_shift_to_materialist
	desc = evt_primitive_shift_to_materialist_desc
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}

# Postapocalyptic
country_event = {
	id = prim_orig.150
	
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = recently_advanced
	}
	
	immediate = {
		random_list = {
			1 = {
				primitive_ethic_shift_effect = { ethic = spiritualist notification_event = prim_orig.151 }
			}
			1 = {
				primitive_ethic_shift_effect = { ethic = materialist notification_event = prim_orig.152 }
			}
			3 = {
				primitive_ethic_shift_effect = { ethic = pacifist notification_event = prim_orig.153 }
			}
		}
		capital_scope = {
			random_owned_pop = {
				pop_change_ethic = ethic_materialist
			}
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.141 }
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.151
	title = evt_primitive_shift_to_spiritualist_postapoc
	desc = evt_primitive_shift_to_spiritualist_postapoc_desc
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.152
	title = evt_primitive_shift_to_materialist
	desc = evt_primitive_shift_to_materialist_postapoc_desc
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.153
	title = evt_primitive_shift_to_pacifist
	desc = evt_primitive_shift_to_pacifist_postapoc_desc
	picture = GFX_evt_primitive_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
