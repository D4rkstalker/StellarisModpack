####################################################
#
# War Amoeba Country Events
#
# Written by Wyatt Sanders and Jared Sager
#
####################################################

namespace = war_amoeba_country

# religious discovery of War Amoeba
country_event = { 
	id = war_amoeba_country.1 # event ids need to be in the form namespace.number
	title = "war_amoeba_country.1.name"
	desc = "war_amoeba_country.1.desc"

	show_sound = event_mystic_reveal
	picture = GFX_evt_satellite_in_orbit
	location = from
	trackable = yes

	is_triggered_only = no
	fire_only_once = yes
	mean_time_to_happen = { months = 120 }

	trigger = {
		is_country_type = default
		OR = {
			has_ethic = ethic_fanatic_spiritualist
            has_ethic = ethic_spiritualist
        }
        any_owned_leader = {
            leader_class = scientist
            is_researching_area = society
        }
	}

	immediate = {
		random_owned_leader = {
			limit = {
				AND = {
                	leader_class = scientist
                	is_researching_area = society
            	}
			}
            log = "[This.GetName] is the guy who'll get the trait"
            save_event_target_as = researching_scientist_religious_discovery
        }
    }

	option = {
		name = war_amoeba_country.1.congradulate
		event_target:researching_scientist_religious_discovery = {
			
				add_trait = leader_trait_expertise_biology
			
		}
		owner = {
			if = {
				limit = {
					has_tech_option = war_amoeba_tech_amoeba_training
				}
				add_tech_progress = {
					tech = war_amoeba_tech_amoeba_training
					progress = 0.40
				}
			}
			else = {
				add_research_option = war_amoeba_tech_amoeba_training
				add_tech_progress = {
					tech = war_amoeba_tech_amoeba_training
					progress = 0.10
				}
			}
		}
	}

	option = {
		name = war_amoeba_country.1.excommunicate
		
        event_target:researching_scientist_religious_discovery = {
        	kill_leader = {
        		show_notification = no
        	}
        }
        add_resource = { influence = 40 }
	}
	
}

# Amoeba pacification tech option event
country_event = { 
	id = war_amoeba_country.2
	title = "war_amoeba_country.2.name"
	desc = "war_amoeba_country.2.desc"

	picture = GFX_evt_genetic_modification
	location = from
	show_sound = event_scanner

	hide_window = no
	#is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		has_modifier = pacified_amoebas
	}

	mean_time_to_happen = {
		days = 0
	}

	option = {
		name = INTERESTING
		IF = {
			limit = {
				NOR = {
					has_tech_option = war_amoeba_tech_amoeba_training
					has_technology = war_amoeba_tech_amoeba_training
				}
			}
			add_research_option = war_amoeba_tech_amoeba_training
		}
	}
}

##########################
# HOW TO MAKE AN EVENT #
##########################

#country_event = { # Specifies the type of the event. 
#	id = example.1 #Unique ID for your event. Must match namespace parameter
#	title = example.1.name #Specifies localization string for the title (Header) of the event
#	desc = example.1.desc #Specifies localization string for event text. Description of what is happening goes there. Multiple can be specified, random one will be selected in this case
#	desc = { #Descriptions can be conditonal
#		text = example.1.desc.conditional #Localization string
#		trigger {
#			#Conditions for this to be avalable. For example: has_authory = auth_machine_intelligence to create robot-specific text
#		}
#	}
#	
#	picture = #a name of a picture to display
#	location = from #A scope to the object that is relevant to the event that player can move to. For example, the planet where event is happening
#	show_sound = #Name of the sound clip to be played when event is shown
#	
#	hide_window = yes #If event is not meant to be seen (Service event that runs some sort of routine or prepares grounds for other events), or there's no person to see (Triggers for AI or object with no owner). Makes title and desc unnecessary.
#	
#	diplomatic = yes #Makes event look like diplomatic communications. For example, first contact event or a conversation with the subterranean people
#	picture_event_data = { #Specifies picture for diplomatic event. Most options are optional here
#		portrait = event_target:contact_empire #Animated portrait. Accepts country, leader or species scope as an input
#		planet_background = event_target:contact_empire #Planet background, if your picture has a window
#		graphical_culture = event_target:contact_empire #City on the planet in the window
#		city_level = event_target:contact_empire #The size of the city. Usable to make planet behind look like capital
#		room = event_target:contact_empire.ruler #Static background. Can use static pictures or scopes as the input
#	}
#	
#	is_triggered_only = yes #The game will not consider this event for starting on its own. Event will need to be triggered by another event, or by some other effect. Most events will use this.
#	fire_only_once = yes #Makes the event happen only once per game
#	
#	mean_time_to_happen = { #The event be considered for starting with daily probability calculated so on average it would happen in time specified. Is not completely reliable, as the event might happen on the first day or never. Useful for events where conditions are not easily acoounted for
#		years = 100 #To specify average time for the event to fire. "months" or "days" are also acceptable input.
#		modifier = { #Mean time to happen can be conditionally modified
#			factor = 0.1 #Multiply MTTH by number specify. Here it will make event 10 times as likely
#			#Conditions for this modifier to apply
#		}
#	}
#	
#	#If neither is_triggered_only or MTTH is set, the event will trigger every day the conditions are met. So don't forget them, lest you might affect the entire galaxy or see event trigger again and again forever.
#	
#	trigger = {
#		#Trigger block contains conditions. The event will not start if conditions inside aren't met, even if explicitly called. Used for events on mean_time_to_happen or for events that called from situation where you can't or want specify conditions for it to happen, before calling (For example an event in on_action block or a delayed event that might be blocked by other events)
#	}
#	
#	immediate = {
#		#Effects that are applied the moment event fires. Can be effects that can't wait like setting a flag to prevent other events, or the undesirable effects you don't want player to be able to delay (For example, killing science ship's captain.) Also the only block you'll need on hidden events
#	}
#	
#	option = { #The button under the event, allowing player to pic a reaction. Any event that is not hidden, needs at least one. Multiple can be specified
#		name = example.1.a #Reference to localization string with option text
#		custom_tooltip = example.1.a.tooltip #Reference to localiation string for tooltip when hovering over option. Optional, usually allowing game to generate tooltips for you will suffice
#		
#		tooltip = {
#			#You can put effects here to generate a tooltip describing them. Useful when you want to notify player of something within immediate block or something that happened elsewhere
#		}
#	
#		trigger = {
#			#Conditions to display this option. AI does not need to see this option to pick it
#		}
#		
#		allow = {
#			#If these conditions aren't met, the option will be displayed but disabled. At least in theory. AI will respect this
#		}
#		
#		#Effects of the event can be described here. They will generate tooltips
#		
#		hidden_effect = {
#			#Some effects do not have good tooltips or you might want to conceal them for other reasons. Put them here
#		}
#	}
#	
#	after = {
#		#Effects that are applied after option is chosen. Will generate a tooltip, unless hidden_effect is used
#	}
#}