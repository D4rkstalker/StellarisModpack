namespace = unrest

@unrest_event_cooldown = 360

###### These events have been repurposed:

planet_event = { # Never Fires
	id = unrest.50
	is_triggered_only = yes
	hide_window = yes

	pre_triggers = {
		has_owner = yes
		has_ground_combat = no
	}

	trigger = {
		always = no
		# planet_stability < @stabilitylevel2
		# num_pops >= 10
		# pop_percentage = {
		# 	percentage >= 0.4
		# 	limit = {
		# 		is_enslaved = yes
		# 		happiness < 60
		# 	}
		# 	exclude = { can_think = no }
		# }
		# has_orbital_bombardment = no
		# exists = owner
		# owner = {
		# 	is_country_type = default
		# 	NOT = { any_situation = { has_situation_flag = slave_sit_@root } }
		# }
		# NOR = {
		# 	has_planet_flag = 3_year_owner_change_flag
		# 	has_planet_flag = recent_revolt_attempt
		# }
		# is_doomsday_planet = no
		# exists = controller
		# controller = { is_same_empire = root.owner }
		# OR = {
		# 	owner = { is_gestalt = yes }
		# 	any_owned_species = { species_has_happiness_with_owner = root.owner }
		# }
		# check_variable_arithmetic = { #will the revolt actually tick up?
		# 	which = value:potential_revolt_situation_monthly_progress_estimation
		# 	value > 0
		# }
	}

	immediate = {}
}

planet_event = { # Never Fires
	id = unrest.54
	is_triggered_only = yes
	hide_window = yes

	pre_triggers = {
		has_owner = yes
		has_ground_combat = no
	}

	trigger = {
		always = no
		# planet_stability < @stabilitylevel2
		# num_pops >= 10
		# pop_percentage = {
		# 	percentage >= 0.4
		# 	limit = {
		# 		is_enslaved = yes
		# 		happiness < 60
		# 	}
		# 	exclude = { can_think = no }
		# }
		# has_orbital_bombardment = no
		# exists = owner
		# owner = {
		# 	is_country_type = default
		# 	NOT = { any_situation = { has_situation_flag = slave_sit_@root } }
		# }
		# NOR = {
		# 	has_planet_flag = 3_year_owner_change_flag
		# 	has_planet_flag = recent_revolt_attempt
		# }
		# is_doomsday_planet = no
		# exists = controller
		# controller = { is_same_empire = root.owner }
		# OR = {
		# 	owner = { is_gestalt = yes }
		# 	any_owned_species = { species_has_happiness_with_owner = root.owner }
		# }
		# check_variable_arithmetic = { #will the revolt actually tick up?
		# 	which = value:potential_revolt_situation_monthly_progress_estimation
		# 	value > 0
		# }
	}

	immediate = {}
}

situation_event = { ### Stability Revolt - Faction Check - currently unused
	id = unrest.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		situation_progress > 25
		NOT = { has_situation_flag = 25_percent_event }
	}

	immediate = {
		set_situation_flag = 25_percent_event

		# owner = { # 30% or more pops on planet, revolt can take ethical shape. Increased severity, coordination.
			
		# }

		target = {
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
			random_list = {
				1 = {
					planet_event = { id = unrest.115 }
					root = { set_situation_flag = spiritualist }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_spiritualist
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_spiritualist }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_spiritualist = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.120 }
					root = { set_situation_flag = authoritarian }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_authoritarian
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_authoritarian }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_authoritarian = yes }
					}
					modifier = {
						factor = 0.5
						owner = { is_imperial = yes }
					}
					modifier = {
						factor = 2
						owner = { is_democracy = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.125 }
					root = { set_situation_flag = xenophobe }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_xenophobe
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_xenophobe }
						}
						mode = add
					}
					modifier = {
						factor = 0
						owner = { has_comms_with_alien_empire = no }
					}
					modifier = {
						factor = 0.25
						NOT = {
							any_owned_pop = {
								NOT = { is_same_species = owner }
								pop_has_happiness = no
							}
						}
					}
					modifier = {
						factor = 0.5
						owner = { is_xenophobe = yes }
					}
					modifier = {
						factor = 0.5
						is_majority_species = owner
					}
					modifier = {
						factor = 2
						NOT = { is_majority_species = owner }
					}
				}
				1 = {
					planet_event = { id = unrest.130 }
					root = { set_situation_flag = spiritualist }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_materialist
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_materialist }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_materialist = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.135 }
					root = { set_situation_flag = xenophile }
					modifier = {
						factor = 0
						owner = { has_comms_with_alien_empire = no }
					}
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_xenophile
							}
						}
					}
					modifier = {
						factor = 0.25
						NOT = {
							any_owned_pop = {
								NOT = { is_same_species = owner }
								pop_has_happiness = no
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_xenophile }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_xenophile = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.140 }
					root = { set_situation_flag = egalitarian }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_egalitarian
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_egalitarian }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_egalitarian = yes }
					}
					modifier = {
						factor = 0.5
						owner = { is_democracy = yes }
					}
					modifier = {
						factor = 2
						owner = { is_imperial = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.145 }
					root = { set_situation_flag = pacifist }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_pacifist
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_pacifist }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_pacifist = yes }
					}
					modifier = {
						factor = 2
						owner = { is_at_war = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.150 }
					root = { set_situation_flag = militarist }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_militarist
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_militarist }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_militarist = yes }
					}
					modifier = {
						factor = 0.75
						owner = { is_at_war = yes }
					}
				}
				1 = {
					if = {
						limit = {
							owner = { is_hive_empire = yes }
						}
						root = { set_situation_flag = hive }
					}
					else_if = {
						limit = {
							owner = { is_machine_empire = yes }
						}
						root = { set_situation_flag = machine }
					}
					#Nothing else. We don't really need an event here for them.

					modifier = {
						factor = 0
						OR = {
							owner = { is_gestalt = no }
							count_owned_pop = {
								limit = {
									is_gestalt = no
								}
								count = 0
							}
						}
					}
				}
			}
		}
	}
}


# These events are still important and are used.
### Random events

# # Unrest: Terror
situation_event = {
	id = unrest.101
	title = unrest.101.name
	desc = unrest.101.civstrife.desc
	picture = GFX_evt_night_raid
	show_sound = event_air_raid_siren
	location = event_target:target_planet
	is_triggered_only = yes
	situation = this

	trigger = {
		situation_progress >= 30
		NOT = { has_situation_flag = random_event_happened }
		owner = {
			is_country_type_with_subjects = yes
			is_gestalt = no
		}
		OR = {
			AND = {
				NOT = { is_situation_type = situation_civstrife_sep_slaves_sec }
				target = {
					any_owned_pop = {
						planet = {
							exists = controller
							controller = { is_same_empire = root.owner }
							planet_stability < @stabilitylevel2
							NOT = { has_planet_flag = recent_unrest_event }
							has_orbital_bombardment = no
							has_ground_combat = no
						}
					}	
				}
			}
			AND = {
				is_situation_type = situation_civstrife_sep_slaves_sec
				target = {
					any_owned_planet = {
						exists = controller
						controller = { is_same_empire = root.owner }
						planet_stability < @stabilitylevel2
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
				}
			}
		}
	}

	immediate = {
		set_timed_situation_flag = { flag = random_event_happened years = 1 }
		if = {
			limit = { NOT = { is_situation_type = situation_civstrife_sep_slaves_sec } }
			
		}
		else = {
			target = {
				random_owned_planet = {
					limit = {
						exists = controller
						controller = { is_same_empire = root.owner }
						planet_stability < @stabilitylevel2
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
					add_modifier = {
						modifier = minor_terrorist_action
						days = 3600 # 10 years
					}
					set_timed_planet_flag = {
						flag = recent_unrest_event
						days = @unrest_event_cooldown
					}
					save_event_target_as = target_planet
				}
			}
		}
		
	}

	option = {
		name = UNFORTUNATE
		tooltip = {
			event_target:target_planet = {
				add_modifier = {
					modifier = minor_terrorist_action
					days = 3600 # 10 years
				}
			}
		}
	}
}

# Unrest: Severe Terror
situation_event = {
	id = unrest.105
	title = unrest.105.name
	desc = unrest.105.civstrife.desc
	picture = GFX_evt_night_raid
	show_sound = event_air_raid_siren
	location = event_target:target_planet
	is_triggered_only = yes
	situation = this

	trigger = {
		situation_progress >= 30
		NOT = { has_situation_flag = random_event_happened }
		owner = {
			is_country_type_with_subjects = yes
			is_gestalt = no
		}
		OR = {
			AND = {
				NOT = { is_situation_type = situation_civstrife_sep_slaves_sec }
				target = {
					any_owned_pop = {
						planet = {
							exists = controller
							controller = { is_same_empire = root.owner }
							planet_stability < @stabilitylevel2
							NOT = { has_planet_flag = recent_unrest_event }
							has_orbital_bombardment = no
							has_ground_combat = no
						}
					}	
				}
			}
			AND = {
				is_situation_type = situation_civstrife_sep_slaves_sec
				target = {
					any_owned_planet = {
						exists = controller
						controller = { is_same_empire = root.owner }
						planet_stability < @stabilitylevel2
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
				}
			}
		}
	}

	immediate = {
		set_timed_situation_flag = { flag = random_event_happened years = 1 }
		if = {
			limit = { NOT = { is_situation_type = situation_civstrife_sep_slaves_sec } }
			target = {
				random_owned_pop = {
					limit = {
						planet = {
							exists = controller
							controller = { is_same_empire = root.owner }
							planet_stability < @stabilitylevel2
							NOT = { has_planet_flag = recent_unrest_event }
							has_orbital_bombardment = no
							has_ground_combat = no
						}
					}
					planet = {
						add_modifier = {
							modifier = major_terrorist_action
							days = 7200 # 20 years
						}
						set_timed_planet_flag = {
							flag = recent_unrest_event
							days = @unrest_event_cooldown
						}
						save_event_target_as = target_planet
					}
				}
			}
		}
		else = {
			target = {
				random_owned_planet = {
					limit = {
						exists = controller
						controller = { is_same_empire = root.owner }
						planet_stability < @stabilitylevel2
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
					add_modifier = {
						modifier = major_terrorist_action
						days = 7200 # 20 years
					}
					set_timed_planet_flag = {
						flag = recent_unrest_event
						days = @unrest_event_cooldown
					}
					save_event_target_as = target_planet
				}
			}
		}
		
	}

	option = {
		name = UNFORTUNATE
		tooltip = {
			event_target:target_planet = {
				add_modifier = {
					modifier = major_terrorist_action
					days = 7200 # 20 years
				}
			}
		}
	}
}

# Unrest : Keeping the Peace
situation_event = {
	id = unrest.110
	title = unrest.110.name
	desc = unrest.110.civstrife.desc
	picture = GFX_evt_announcement
	show_sound = event_announcement
	location = root.target
	is_triggered_only = yes
	situation = this

	trigger = {
		situation_progress >= 30
		NOT = { has_situation_flag = random_event_happened }
		owner = {
			is_country_type = default
			is_gestalt = no
		}
		OR = {
			AND = {
				is_faction_based_situation = yes
				target = {
					any_owned_pop = {
						planet = {
							exists = controller
							controller = { is_same_empire = root.owner }
							planet_stability < @stabilitylevel2
							planet_stability >= @stabilitylevel1
							NOT = { has_planet_flag = recent_unrest_event }
							has_orbital_bombardment = no
							has_ground_combat = no
						}
					}
					
				}
			}
			AND = {
				OR = {
					is_situation_type = situation_civstrife_election
					is_situation_type = situation_civstrife_selection
					is_situation_type = situation_civstrife_succession
					is_situation_type = situation_civstrife_sep_slaves_sec
				}
				target = {
					any_owned_planet = {
						exists = controller
						controller = { is_same_empire = root.owner }
						planet_stability < @stabilitylevel2
						planet_stability >= @stabilitylevel1
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
				}
			}
			AND = {
				is_situation_type = situation_civstrife_sep_slaves_plan
				target = {
					exists = controller
					controller = { is_same_empire = root.owner }
					planet_stability < @stabilitylevel2
					planet_stability >= @stabilitylevel1
					NOT = { has_planet_flag = recent_unrest_event }
					has_orbital_bombardment = no
					has_ground_combat = no
				}
			}
		}
	}

	immediate = {
		set_situation_flag = random_event_happened

		if = {
			limit = { is_faction_based_situation = yes }
			target = {
				random_owned_pop = {
					limit = {
						planet = {
							exists = controller
							controller = { is_same_empire = root.owner }
							planet_stability < @stabilitylevel2
							planet_stability >= @stabilitylevel1
							NOT = { has_planet_flag = recent_unrest_event }
							has_orbital_bombardment = no
							has_ground_combat = no
						}
					}
					planet = {
						save_event_target_as = riot_avert_planet
						add_modifier = {
							modifier = riots_averted
							days = 3600 # 10 years
						}
						set_timed_planet_flag = {
							flag = recent_unrest_event
							days = @unrest_event_cooldown
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					is_situation_type = situation_civstrife_election
					is_situation_type = situation_civstrife_selection
					is_situation_type = situation_civstrife_succession
					is_situation_type = situation_civstrife_sep_slaves_sec
				}
			}
			target = {
				random_owned_planet = {
					limit = {
						exists = controller
						controller = { is_same_empire = root.owner }
						planet_stability < @stabilitylevel2
						planet_stability >= @stabilitylevel1
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
					save_event_target_as = riot_avert_planet
					add_modifier = {
						modifier = riots_averted
						days = 3600 # 10 years
					}
					set_timed_planet_flag = {
						flag = recent_unrest_event
						days = @unrest_event_cooldown
					}
				}
			}
		}
		else = {
			target = {
				save_event_target_as = riot_avert_planet
				add_modifier = {
					modifier = riots_averted
					days = 3600 # 10 years
				}
				set_timed_planet_flag = {
					flag = recent_unrest_event
					days = @unrest_event_cooldown
				}
			}
		}
	}

	option = {
		name = GOOD
		tooltip = {
			target = {
				add_modifier = {
					modifier = riots_averted
					days = 3600 # 20 years
				}
			}
		}
	}
}

# Extra slave revolt content

# Resistance: Sabotage
planet_event = {
	id = unrest.156
	title = unrest.156.name
	desc = unrest.156.desc
	picture = GFX_evt_night_raid
	show_sound = event_ship_explosion
	location = event_target:revolt_planet
	situation = from

	is_triggered_only = yes

	immediate = {
		add_planet_devastation = 30
	}
	option = {
		name = unrest.156.a
		tooltip = { add_planet_devastation = 30 }
	}
	option = {
		name = unrest.156.b
		tooltip = { add_planet_devastation = 30 }
	}
}

# Riots
situation_event = {
	id = unrest.157
	title = unrest.157.name
	desc = unrest.157.desc
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot
	location = target
	situation = this

	trigger = {
		situation_progress >= 20
		has_situation_flag = slave_revolt
		NOT = { has_situation_flag = slave_riots }
		owner = { is_country_type = default }
		OR = {
			AND = {
				is_situation_type = situation_civstrife_sep_slaves_plan
				target = {
					exists = controller
					controller = { is_same_empire = root.owner }
					planet_stability < @stabilitylevel2
					NOT = { has_planet_flag = recent_unrest_event }
					has_orbital_bombardment = no
					has_ground_combat = no
				}
			}
			AND = {
				is_situation_type = situation_civstrife_sep_slaves_sec
				target = {
					any_owned_planet = {
						exists = controller
						controller = { is_same_empire = root.owner }
						any_owned_pop = { is_enslaved_or_purged = yes }
						planet_stability < @stabilitylevel2
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
				}
			}
		}
		
	}

	is_triggered_only = yes

	immediate = {
		set_situation_flag = random_event_happened
		set_situation_flag = slave_riots
		target = {
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
			add_modifier = {
				modifier = slave_riots
				years = 10
			}
		}
	}
	option = {
		name = unrest.157.a
	}
	option = {
		name = unrest.157.b
	}
	after = {
		tooltip = {
			target = {
				add_modifier = {
					modifier = slave_riots
					years = 10
				}
			}
		}
	}
}

# Resistance: hunger strike
situation_event = {
	id = unrest.159
	title = unrest.159.name
	desc = unrest.159.desc
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = target
	situation = this

	trigger = {
		situation_progress >= 20
		has_situation_flag = slave_revolt
		NOT = { has_situation_flag = slave_hunger_strikes }
		owner = { is_country_type = default }
		OR = {
			AND = {
				is_situation_type = situation_civstrife_sep_slaves_plan
				target = {
					exists = controller
					controller = { is_same_empire = root.owner }
					planet_stability < @stabilitylevel2
					NOT = { has_planet_flag = recent_unrest_event }
					has_orbital_bombardment = no
					has_ground_combat = no
				}
			}
			AND = {
				is_situation_type = situation_civstrife_sep_slaves_sec
				target = {
					any_owned_planet = {
						exists = controller
						controller = { is_same_empire = root.owner }
						planet_stability < @stabilitylevel2
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
				}
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		set_situation_flag = random_event_happened
		set_situation_flag = slave_hunger_strikes
		target = {
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
			add_modifier = {
				modifier = slave_hunger_strike
				years = 5
			}
		}
	}

	option = {
		name = unrest.159.a
	}
	option = {
		name = unrest.159.b
	}
	after = {
		tooltip = {
			target = {
				add_modifier = {
					modifier = slave_hunger_strike
					years = 5
				}
			}
		}
	}
}

######## SECESSION/NATIONALIST REVOLT HAPPENS ##########

situation_event = {
	id = unrest.4200
	# title = unrest.4200.name
	# situation = this
	# force_open = yes
	hide_window = yes

	is_triggered_only = yes

	is_test_event = yes

	trigger = {
		always = no
	}

	immediate = {}
}