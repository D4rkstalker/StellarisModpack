###########################################
#
# Nemesis Espionage Events
# Written by Henrik Thyrwall
#
###########################################

namespace = operation

@OperationBribeCost1 = -400
@OperationBribeCost2 = -600
@OperationBribeCost3 = -800
@OperationBribeThreshold1 = 400
@OperationBribeThreshold2 = 600
@OperationBribeThreshold3 = 800

@StealTechnologyAmount = 1000 #Amount of science research in every discipline which will be granted if the operation cannot steal a Technology
@StealTechnologyTimer = 2160 #days (6 years) until Steal Technology can be repeated. Referenced in tooltip strings "operation.1026.tooltip.cooldown" and "operation_steal_technology_too_recent".
@SabotageStarbaseTimer = 1440 #days (4 years) until Sabotage Starbase can be repeated against this target.
@CrisisBeaconTimer = 1440 #days (4 years) until Crisis Beacon can be attempted again. Referenced in tooltip string "operation_crisis_beacon_too_recent".

# Number of days before a single event should (ideally) stand a chance of coming up again.
@RandomOperationEventTimer = 600
@RandomOperationEventTimerLong = 1000

@gather_info_infiltration_days = 3600

############################
# SUBTERFUGE: ACQUIRE ASSET
############################

# FinalÃ© | from = operation
country_event = {
    id = operation.1006
    title = operation.1006.name
    desc = {
        trigger = {
            switch = {
                trigger = has_country_flag
                asset_bureaucrat = { text = operation.1006.desc.official }
                asset_clerk = { text = operation.1006.desc.official }
                asset_economist = { text = operation.1006.desc.professional }
                asset_scientist = { text = operation.1006.desc.professional }
                asset_junior_officer = { text = operation.1006.desc.underling }
                asset_criminal_underling = { text = operation.1006.desc.rebel }
                asset_attache = { text = operation.1006.desc.official }
                asset_laborer = { text = operation.1006.desc.underling }
                asset_hacker = { text = operation.1006.desc.rebel }
                asset_arms_smuggler = { text = operation.1006.desc.rebel }
                asset_agitator = { text = operation.1006.desc.rebel }
                asset_newscaster = { text = operation.1006.desc.celebrity }
                asset_pop_icon = { text = operation.1006.desc.celebrity }
                asset_academic = { text = operation.1006.desc.professional }
                asset_veteran = { text = operation.1006.desc.underling }
                asset_synapse_drone = { text = operation.1006.desc.drone }
                asset_ephapse_relay = { text = operation.1006.desc.organ }
                asset_labor_drone = { text = operation.1006.desc.drone }
                asset_research_drone = { text = operation.1006.desc.drone }
                asset_warrior_drone = { text = operation.1006.desc.drone }
                asset_behavioral_regulator = { text = operation.1006.desc.organ }
                asset_pheromone_emitter = { text = operation.1006.desc.organ }
                asset_resource_distribution_node = { text = operation.1006.desc.network }
                asset_cortex_node = { text = operation.1006.desc.organ }
                asset_subspace_tendril = { text = operation.1006.desc.organ }
                asset_coordination_system = { text = operation.1006.desc.component }
                asset_engagement_protocol = { text = operation.1006.desc.network }
                asset_logistics_system = { text = operation.1006.desc.network }
                asset_research_database = { text = operation.1006.desc.network }
                asset_war_algorithm = { text = operation.1006.desc.network }
                asset_command_relay = { text = operation.1006.desc.component }
                asset_dispatch_uplink = { text = operation.1006.desc.component }
                asset_resource_pylon = { text = operation.1006.desc.component }
                asset_memory_cache = { text = operation.1006.desc.network }
                asset_weapons_platform = { text = operation.1006.desc.network }
				# Bio-Trophy
                asset_pop_icon_bio_trophy = { text = operation.1006.desc.celebrity.bio_trophy }
                asset_agitator_bio_trophy = { text = operation.1006.desc.rebel.bio_trophy }
                asset_hacker_bio_trophy = { text = operation.1006.desc.rebel.bio_trophy }
				# Cyborg
                asset_agitator_cyborg = { text = operation.1006.desc.rebel.cyborg }
                asset_criminal_underling_cyborg = { text = operation.1006.desc.rebel.cyborg }
                asset_hacker_cyborg = { text = operation.1006.desc.rebel.cyborg }
                asset_arms_smuggler_cyborg = { text = operation.1006.desc.rebel.cyborg }
				# Infestation
                asset_agitator_infestation = { text = operation.1006.desc.rebel.infestation }
                asset_criminal_underling_infestation = { text = operation.1006.desc.rebel.infestation }
                asset_hacker_infestation = { text = operation.1006.desc.rebel.infestation }
                asset_arms_smuggler_infestation = { text = operation.1006.desc.rebel.infestation }
				# Open Gestalt
				asset_laborer_open = { text = operation.1006.desc.underling.open }
				asset_agitator_open = { text = operation.1006.desc.rebel.open }
				asset_criminal_underling_open = { text = operation.1006.desc.rebel.open }
				asset_bureaucrat_open = { text = operation.1006.desc.official.open }
				asset_academic_open = { text = operation.1006.desc.professional.open }
				asset_pop_icon_open = { text = operation.1006.desc.celebrity.open }
                default = { text = operation.1006.desc.default }
            }
        }
    }
    picture = {
        trigger = {
            from.target = { is_gestalt = no }
        }
        picture = GFX_evt_acquire_asset
    }
    picture = {
        trigger = {
            from.target = { is_machine_empire = yes }
        }
        picture = GFX_evt_sapient_AI
    }
    picture = {
        trigger = {
            from.target = { is_hive_empire = yes }
        }
        picture = GFX_evt_hive_mind
    }
    location = from.target.capital_scope
    show_sound = event_nem_asset_acquired_positive
    is_triggered_only = yes

    immediate = {
        country_event = { id = tutorial.2010 } #Assigning Assets
    }

    option = {
        name = EXCELLENT
        root = {
            espionage_acquire_asset_create_asset = yes
        }
        from.spynetwork = {
            add_spy_network_level_on_success_effect = { VALUE = -15 }
        }
    }

    after = {
        hidden_effect = {
            owner = {
                if = {
                    limit = {
                        NOT = { has_country_flag = operation_complete_acquire_asset }
                    }
                    change_variable = {
                        which = tinker_tailor_soldier_blorg_achievement_count
                        value = 1
                    }
                    set_country_flag = operation_complete_acquire_asset
                }
            }
        }
        destroy_espionage_operation = from
    }
}

###############################
# SUBTERFUGE: STEAL TECHNOLOGY
###############################
# this = operation
# from = operation.target (country)

# Finding an 'in'
espionage_operation_event = {
	id = operation.1020
	title = operation.1020.name
	espionage_operation = yes
	desc = {
		text = operation.1020.desc.conf_external
		trigger = {
			has_espionage_operation_flag = steal_tech_conference
			target = {
				is_xenophobe = no
				is_xenophobic_isolationists = no
			}
		}
	}
	desc = {
		text = operation.1020.desc.conf_hosted
		trigger = {
			has_espionage_operation_flag = steal_tech_conference
		}
	}
	desc = {
		text = operation.1020.desc.lecture
		trigger = {
			has_espionage_operation_flag = steal_tech_lecture
		}
	}
	desc = {
		text = operation.1020.desc.outreach
		trigger = {
			has_espionage_operation_flag = steal_tech_outreach
		}
	}
	desc = {
		text = operation.1020.desc.theft
		trigger = {
			has_espionage_operation_flag = steal_tech_theft
		}
	}
	desc = {
		text = operation.1020.desc.enigmatic
		trigger = {
			owner = {
				has_country_flag = cannot_steal_enigmatic_tech@root.target
			}
		}
	}
	picture = {
		trigger = {
			OR = {
				has_espionage_operation_flag = steal_tech_conference
				has_espionage_operation_flag = steal_tech_lecture
				has_espionage_operation_flag = steal_tech_outreach
			}
		}
		picture = GFX_evt_voting
	}
	picture = {
		trigger = {
			has_espionage_operation_flag = steal_tech_theft
		}
		picture = GFX_evt_smugglers_in_bar
	}
	show_sound = event_default
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				target = { has_ascension_perk = ap_enigmatic_engineering }
			}
			set_espionage_operation_progress_locked = yes
			owner = {
				set_country_flag = cannot_steal_enigmatic_tech@root.target
				country_event = { id = operation.1027 }
			}
		}
		else = {
			if = {
				limit = { #Disregard empires which wouldn't hold a scientific debate
					target = {
						NOR = {
							has_valid_civic = civic_fanatic_purifiers
							has_valid_civic = civic_ruthless_competition
							has_valid_civic = civic_hive_subsumed_will
							has_valid_civic = civic_machine_introspective
							is_homicidal = yes
						}
					}
				}
				random_list = {
					2 = { set_espionage_operation_flag = steal_tech_conference }
					2 = {
						modifier = { factor = 0 target = { is_gestalt = yes } }
						set_espionage_operation_flag = steal_tech_lecture
					}
					2 = {
						modifier = { factor = 0 target = { is_gestalt = yes } }
						set_espionage_operation_flag = steal_tech_outreach
					}
					1 = {
						modifier = { factor = 0 target = { opinion_level = { who = root.owner level >= good } } }
						set_espionage_operation_flag = steal_tech_theft
					}
				}
			}
			else = {
				set_espionage_operation_flag = steal_tech_theft
			}
		}
	}

	option = {
		name = CURIOUS
		trigger = {
			owner = { has_country_flag = cannot_steal_enigmatic_tech@root.target }
		}
	}
	option = {
		name = ACKNOWLEDGED
		trigger = {
			owner = {
				NOT = { has_country_flag = cannot_steal_enigmatic_tech@root.target }
			}
		}
	}
}

###########################
# SABOTAGE STARBASE
###########################
# this = operation; from = target (starbase)

# FinalÃ© | from = operation; fromfrom = target (starbase)
country_event = {
    id = operation.2005
    title = operation.2005.name
    desc = {
        text = operation.2005.desc.military
        trigger = {
            from.target.owner = {
                has_country_flag = military_sabotaged
            }
        }
    }
    desc = {
        text = operation.2005.desc.trade
        trigger = {
            from.target.owner = {
                has_country_flag = trade_sabotaged
            }
        }
    }
    desc = {
        text = operation.2005.desc.civic
        trigger = {
            from.target.owner = {
                has_country_flag = civic_sabotaged
            }
        }
    }
    location = event_target:sabotaged_starbase_system
    picture = GFX_evt_archaeologists_escaping
    show_sound = event_espionage_concluded
    is_triggered_only = yes

    trigger = {
        exists = from
        exists = event_target:sabotaged_starbase
    }

    immediate = {
        from.target = {
            espionage_sabotage_starbase_diplo = yes
        }
        #Bonus actions
        if = {
            limit = {
                from = { has_espionage_asset_sabotage = yes }
            }
            random_list = {
                1 = { #Take down another module
                    modifier = {
                        factor = 6
                        from = { has_espionage_asset_technology = yes }
                    }
                    modifier = {
                        factor = 0
                        from.target = {
                            count_starbase_modules = {
                                type != shipyard
                                count < 2
                            }
                        }
                    }
                    set_country_flag = sabotage_starbase_collateral@from.target.owner
                }
				1 = { #Take down another building
                    modifier = {
                        factor = 6
                        from = { has_espionage_asset_economy = yes }
                    }
                    modifier = {
                        factor = 0
                        from.target = {
                            has_nonshipyard_starbase_buildings = no
                        }
                    }
                    set_country_flag = sabotage_building_collateral@from.target.owner
                }
				1 = { #Take down a shipyard module
                    modifier = {
                        factor = 6
                        from = { has_espionage_asset_government = yes }
                    }
                    modifier = {
                        factor = 0
                        from.target = {
                            count_starbase_modules = {
                                type = shipyard
                                count < 2
                            }
                        }
                    }
                    set_country_flag = sabotage_shipyard_collateral@from.target.owner
                }
                1 = { #Take down a defense platform
                    modifier = {
                        factor = 6
                        from = { has_espionage_asset_military = yes }
                    }
                    set_country_flag = sabotage_starbase_defence@from.target.owner
                }
                6 = {
                    modifier = {
                        factor = 2.5
                        root = {
                            relative_encryption_decryption = { target = from.target.owner value < 0.6 }
                        }
                    }
                    #No bonus action
                }
            }
        }
    }

    option = { #We're done here (smooth)
        name = operation.2005.a
        trigger = {
            from.target.owner = {
                NOR = {
                    has_hostile_espionage_operation_ethics = yes
                    has_closed_borders = root
                    is_at_war_with = root
                }
            }
        }
        from.spynetwork = {
            add_spy_network_level_on_success_effect = { VALUE = -30 }
        }
        owner = {
            if = {
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_perform_upsetting_operations
            }
        }
    }
    option = { #We're done here (messy)
        name = operation.2005.a
        trigger = {
            from.target.owner = {
                OR = {
                    has_hostile_espionage_operation_ethics = yes
                    has_closed_borders = root
                    is_at_war_with = root
                }
            }
        }
        from.spynetwork = {
            add_spy_network_level_on_success_effect = { VALUE = -45 }
        }
        owner = {
            if = {
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_perform_upsetting_operations
            }
        }
    }
    option = { #Collateral damage (module)
        name = operation.2005.b
        icon = {
			icon = GFX_espionage_asset_icon
			text = ESPIONAGE_OPERATION_ASSET_EVENT_OPTION
		}
        trigger = {
            has_country_flag = sabotage_starbase_collateral@from.target.owner
        }
        hidden_effect = {
            remove_country_flag = sabotage_starbase_collateral@from.target.owner
        }
        from = {
            destroy_espionage_asset_technology = yes
            target = {
                remove_random_starbase_module = {
                    type != shipyard
                    count = 1
                }
            }
            spynetwork = {
				add_spy_network_level_on_success_effect = { VALUE = -45 }
			}
        }
        owner = {
            if = {
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_perform_upsetting_operations
            }
        }
    }
	option = { #Collateral damage (building)
        name = operation.2005.b
        icon = {
			icon = GFX_espionage_asset_icon
			text = ESPIONAGE_OPERATION_ASSET_EVENT_OPTION
		}
        trigger = {
            has_country_flag = sabotage_building_collateral@from.target.owner
        }
        hidden_effect = {
            remove_country_flag = sabotage_building_collateral@from.target.owner
        }
        from = {
            destroy_espionage_asset_technology = yes
            target = {
                remove_random_starbase_building = {
                    count = 1
                }
            }
            spynetwork = {
				add_spy_network_level_on_success_effect = { VALUE = -45 }
			}
        }
        owner = {
            if = {
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_perform_upsetting_operations
            }
        }
    }
	option = { #Collateral damage (shipyard)
        name = operation.2005.b
        icon = {
			icon = GFX_espionage_asset_icon
			text = ESPIONAGE_OPERATION_ASSET_EVENT_OPTION
		}
        trigger = {
            has_country_flag = sabotage_shipyard_collateral@from.target.owner
        }
		allow = { resource_stockpile_compare = { resource = volatile_motes value >= 1 } }
        hidden_effect = {
            remove_country_flag = sabotage_shipyard_collateral@from.target.owner
        }
        from = {
            destroy_espionage_asset_technology = yes
            target = {
                remove_random_starbase_module = {
                    type = shipyard
                    count = 1
                }
            }
            spynetwork = {
				add_spy_network_level_on_success_effect = { VALUE = -45 }
			}
        }
		root = {
            add_resource = { volatile_motes = -1 }
        }
        owner = {
            if = {
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_perform_upsetting_operations
            }
        }
    }
    option = { #Collateral damage (defense platform)
        name = operation.2005.c
        icon = {
			icon = GFX_espionage_asset_icon
			text = ESPIONAGE_OPERATION_ASSET_EVENT_OPTION
		}
        trigger = {
            has_country_flag = sabotage_starbase_defence@from.target.owner
        }
        custom_tooltip = operation.2005.c.tooltip
        allow = {
            custom_tooltip = {
                fail_text = STARBASE_NO_PLATFORMS
                from.target = {
                    fleet = {
                        count_owned_ship = {
                            count > 0
                            limit = {
                                exists = owner
                                is_ship_size = military_station_small
                            }
                        }
                    }
                }
            }
            resource_stockpile_compare = { resource = volatile_motes value >= 2 }
        }
        hidden_effect = {
            from.target = {
                fleet = {
					while = {
						count = 3
						random_owned_ship = {
							limit = { is_ship_size = military_station_small }
							destroy_ship = this
						}
					}
                }
            }
        }
        root = {
            add_resource = { volatile_motes = -2 }
        }
        from.spynetwork = { add_spy_network_level_on_success_effect = { VALUE = -45 } }
        owner = {
            if = {
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_perform_upsetting_operations
            }
        }
    }

    after = {
		if = {
			limit = {
				from.target.owner = {
					has_country_flag = military_sabotaged
				}
			}
			from.target = {
				custom_tooltip = starbase_sabotaged_tooltip
				hidden_effect = {
					fleet = {
						every_owned_ship = {
							limit = {
								OR = {
									is_ship_size = military_station_small
									is_ship_size = ion_cannon
								}
							}
							remove_modifier = sabotaged_starbase
							add_modifier = { modifier = sabotaged_starbase days = 720 }
						}
					}
				}
			}
		}
		else = {
			from.target = {
				custom_tooltip = starbase_sabotaged_tooltip
				hidden_effect = {
					fleet = {
						every_owned_ship = {
							limit = {
								OR = {
									is_ship_size = military_station_small
									is_ship_size = ion_cannon
								}
							}
							remove_modifier = sabotaged_starbase
							add_modifier = { modifier = sabotaged_starbase days = 360 }
						}
					}
				}
			}
		}
        hidden_effect = {
            if = {
                limit = {
                    owner = { NOT = { has_country_flag = operation_complete_sabotage_starbase } }
                }
                owner = {
                    change_variable = {
                        which = tinker_tailor_soldier_blorg_achievement_count
                        value = 1
                    }
                    set_country_flag = operation_complete_sabotage_starbase
                }
            }
            from.target.owner = {
                set_timed_country_flag = {
                    flag = sabotaged_starbase_alert@root
                    days = @SabotageStarbaseTimer
                }
                country_event = { id = operation.2010 } #Notification of sabotage
            }
        }
        destroy_espionage_operation = from
    }
}

# Starbase sabotaged! (victim) | from = instigating country; event_target:sabotaged_starbase = target
country_event = {
    id = operation.2010
    title = operation.2010.name
    desc = {
        text = operation.2010.desc.phobe
        trigger = {
            is_xenophobe = yes
        }
    }
    desc = {
        text = operation.2010.desc.regular
        trigger = {
            is_xenophobe = no
            is_gestalt = no
        }
    }
    desc = {
        text = operation.2010.desc.gestalt
        trigger = {
            is_gestalt = yes
        }
    }
    picture = GFX_evt_archaeologists_escaping
    show_sound = event_default
    is_triggered_only = yes
    location = event_target:sabotaged_starbase

    trigger = {
        exists = from
        exists = event_target:sabotaged_starbase
    }

    immediate = {
        random_list = {
            1 = { #Saboteurs caught
                modifier = {
                    factor = 0
                    OR = {
                        NOT = {
                            any_spynetwork = {
                                owner = { is_same_value = root }
                                target = { is_same_value = from }
                            }
                        }
                        has_country_flag = recently_received_espionage_asset
                    }
                }
                modifier = {
                    factor = 3
                    relative_encryption_decryption = { target = from value > 0.8 }
                    relative_encryption_decryption = { target = from value < 1.6 }
                }
                modifier = {
                    factor = 10
                    relative_encryption_decryption = { target = from value >= 1.6 }
                }
                set_timed_country_flag = {
                    flag = espionage_caught_saboteurs
                    days = 20
                }
                if = {
                    limit = {
                        any_spynetwork = {
                            owner = { is_same_value = root }
                            target = { is_same_value = from }
                            is_spynetwork_level > 5
                        }
                        NOT = { has_country_flag = recently_received_espionage_asset }
                    }
                    country_event = { #A Surprise Catch (asset granted)
                        id = espionage.1040
                        days = 15
                        scopes = { from = fromfrom }
                    }
                }
            }
            9 = { } #Nothing
        }
    }

    option = {
        name = {
            text = APPALLING
            trigger = {
                OR = {
                    is_xenophobe = yes
                    is_gestalt = yes
                }
            }
        }
        name = {
            text = CURSES
            trigger = {
                NOT = {
                    OR = {
                        is_xenophobe = yes
                        is_gestalt = yes
                    }
                }
            }
        }
    }

    after = {
        remove_sabotage_starbase_flag_diplo = yes
    }
}

###########################
# SMEAR CAMPAIGN
###########################
# this = operation; from = target (country)

# NB: This operation targets two empires. 'target' is the Operation's target as seen in the UI, i.e. the empire which will actually suffer the diplomatic penalty. 'event_target:smear_campaign_recipient@target' refers to the empire chosen by the player in chapter 1, who will be made to look unfavourably upon the Smear Campaign's actual target.

# Targets drawn up
espionage_operation_event = {
    id = operation.3000
    title = operation.3000.name
    espionage_operation = yes
    desc = {
        text = operation.3000.desc
        trigger = {
            exists = event_target:smear_option_1
            exists = event_target:smear_option_2
        }
    }
    desc = {
        text = operation.3000.desc.single
        trigger = {
            exists = event_target:smear_option_1
            NOT = { exists = event_target:smear_option_2 }
        }
    }
    desc = { #No 3rd-party target could be found
        text = operation.3000.desc.error
        trigger = {
            NOT = {
                exists = event_target:smear_option_1
            }
        }
    }
    picture = GFX_evt_smear_campaign
    show_sound = event_default
    is_triggered_only = yes

    immediate = {
        set_espionage_operation_progress_locked = yes
        while = {
            count = 3
			if = { #Identify allies and vassals first, if they exist
                limit = {
                    any_playable_country = {
                        NOR = {
                            is_same_value = root.owner
                            is_same_value = root.target
                        }
                        has_communications = root.owner
                        has_communications = root.target
						OR = {
							is_in_federation_with = root.target
							has_defensive_pact = root.target
							AND = {
								is_subject = yes
								overlord = { is_same_value = root.target }
							}
						}
                        NOR = {
                            AND = {
                                exists = event_target:smear_option_1
                                is_same_value = event_target:smear_option_1
                            }
                            AND = {
                                exists = event_target:smear_option_2
                                is_same_value = event_target:smear_option_2
                            }
                            AND = {
                                exists = event_target:smear_option_3
                                is_same_value = event_target:smear_option_3
                            }
							AND = {
                                exists = event_target:smear_option_4
                                is_same_value = event_target:smear_option_4
                            }
							AND = {
                                exists = event_target:smear_option_5
                                is_same_value = event_target:smear_option_5
                            }
							AND = {
                                exists = event_target:smear_option_6
                                is_same_value = event_target:smear_option_6
                            }
                            has_country_flag = smear_campaign_recipient@root
                        }
                    }
                }
                random_playable_country = {
                    limit = {
                        NOR = {
                            is_same_value = root.owner
                            is_same_value = root.target
                        }
                        has_communications = root.owner
                        has_communications = root.target
                        OR = {
							is_in_federation_with = root.target
							has_defensive_pact = root.target
							AND = {
								is_subject = yes
								overlord = { is_same_value = root.target }
							}
						}
                        NOR = {
                            AND = {
                                exists = event_target:smear_option_1
                                is_same_value = event_target:smear_option_1
                            }
                            AND = {
                                exists = event_target:smear_option_2
                                is_same_value = event_target:smear_option_2
                            }
                            AND = {
                                exists = event_target:smear_option_3
                                is_same_value = event_target:smear_option_3
                            }
							AND = {
                                exists = event_target:smear_option_4
                                is_same_value = event_target:smear_option_4
                            }
							AND = {
                                exists = event_target:smear_option_5
                                is_same_value = event_target:smear_option_5
                            }
							AND = {
                                exists = event_target:smear_option_6
                                is_same_value = event_target:smear_option_6
                            }
                            has_country_flag = smear_campaign_recipient@root
                        }
                    }
                    if = {
                        limit = { NOT = { exists = event_target:smear_option_1 } }
                        save_event_target_as = smear_option_1
                    }
                    else_if = {
                        limit = { NOT = { exists = event_target:smear_option_2 } }
                        save_event_target_as = smear_option_2
                    }
                    else_if = {
                        limit = { NOT = { exists = event_target:smear_option_3 } }
                        save_event_target_as = smear_option_3
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_4 } }
                        save_event_target_as = smear_option_4
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_5 } }
                        save_event_target_as = smear_option_5
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_6 } }
                        save_event_target_as = smear_option_6
                    }
                }
			}
            else_if = { #Identify a good relation, if they exist
                limit = {
                    any_playable_country = {
                        NOR = {
                            is_same_value = root.owner
                            is_same_value = root.target
                        }
                        has_communications = root.owner
                        has_communications = root.target
						opinion_level = {
							who = root.target
							level >= good
						}
                        NOR = {
                            AND = {
                                exists = event_target:smear_option_1
                                is_same_value = event_target:smear_option_1
                            }
                            AND = {
                                exists = event_target:smear_option_2
                                is_same_value = event_target:smear_option_2
                            }
                            AND = {
                                exists = event_target:smear_option_3
                                is_same_value = event_target:smear_option_3
                            }
							AND = {
                                exists = event_target:smear_option_4
                                is_same_value = event_target:smear_option_4
                            }
							AND = {
                                exists = event_target:smear_option_5
                                is_same_value = event_target:smear_option_5
                            }
							AND = {
                                exists = event_target:smear_option_6
                                is_same_value = event_target:smear_option_6
                            }
                            has_country_flag = smear_campaign_recipient@root
                        }
                    }
                }
                random_playable_country = {
                    limit = {
                        NOR = {
                            is_same_value = root.owner
                            is_same_value = root.target
                        }
                        has_communications = root.owner
                        has_communications = root.target
                        opinion_level = {
							who = root.target
							level >= good
						}
                        NOR = {
                            AND = {
                                exists = event_target:smear_option_1
                                is_same_value = event_target:smear_option_1
                            }
                            AND = {
                                exists = event_target:smear_option_2
                                is_same_value = event_target:smear_option_2
                            }
                            AND = {
                                exists = event_target:smear_option_3
                                is_same_value = event_target:smear_option_3
                            }
							AND = {
                                exists = event_target:smear_option_4
                                is_same_value = event_target:smear_option_4
                            }
							AND = {
                                exists = event_target:smear_option_5
                                is_same_value = event_target:smear_option_5
                            }
							AND = {
                                exists = event_target:smear_option_6
                                is_same_value = event_target:smear_option_6
                            }
                            has_country_flag = smear_campaign_recipient@root
                        }
                    }
                    if = {
                        limit = { NOT = { exists = event_target:smear_option_1 } }
                        save_event_target_as = smear_option_1
                    }
                    else_if = {
                        limit = { NOT = { exists = event_target:smear_option_2 } }
                        save_event_target_as = smear_option_2
                    }
                    else_if = {
                        limit = { NOT = { exists = event_target:smear_option_3 } }
                        save_event_target_as = smear_option_3
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_4 } }
                        save_event_target_as = smear_option_4
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_5 } }
                        save_event_target_as = smear_option_5
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_6 } }
                        save_event_target_as = smear_option_6
                    }
                }
            }
            else_if = { #Identify adequate relations, if they exist
                limit = {
                    any_playable_country = {
                        NOR = {
                            is_same_value = root.owner
                            is_same_value = root.target
                        }
                        has_communications = root.owner
                        has_communications = root.target
                        opinion_level = {
                            who = root.target
                            level >= neutral
                        }
                        NOR = {
                            AND = {
                                exists = event_target:smear_option_1
                                is_same_value = event_target:smear_option_1
                            }
                            AND = {
                                exists = event_target:smear_option_2
                                is_same_value = event_target:smear_option_2
                            }
                            AND = {
                                exists = event_target:smear_option_3
                                is_same_value = event_target:smear_option_3
                            }
							AND = {
                                exists = event_target:smear_option_4
                                is_same_value = event_target:smear_option_4
                            }
							AND = {
                                exists = event_target:smear_option_5
                                is_same_value = event_target:smear_option_5
                            }
							AND = {
                                exists = event_target:smear_option_6
                                is_same_value = event_target:smear_option_6
                            }
                            has_country_flag = smear_campaign_recipient@root
                        }
                    }
                }
                random_playable_country = {
                    limit = {
                        NOR = {
                            is_same_value = root.owner
                            is_same_value = root.target
                        }
                        has_communications = root.owner
                        has_communications = root.target
                        opinion_level = {
                            who = root.target
                            level >= neutral
                        }
                        NOR = {
                            AND = {
                                exists = event_target:smear_option_1
                                is_same_value = event_target:smear_option_1
                            }
                            AND = {
                                exists = event_target:smear_option_2
                                is_same_value = event_target:smear_option_2
                            }
                            AND = {
                                exists = event_target:smear_option_3
                                is_same_value = event_target:smear_option_3
                            }
							AND = {
                                exists = event_target:smear_option_4
                                is_same_value = event_target:smear_option_4
                            }
							AND = {
                                exists = event_target:smear_option_5
                                is_same_value = event_target:smear_option_5
                            }
							AND = {
                                exists = event_target:smear_option_6
                                is_same_value = event_target:smear_option_6
                            }
                            has_country_flag = smear_campaign_recipient@root
                        }
                    }
                    if = {
                        limit = { NOT = { exists = event_target:smear_option_1 } }
                        save_event_target_as = smear_option_1
                    }
                    else_if = {
                        limit = { NOT = { exists = event_target:smear_option_2 } }
                        save_event_target_as = smear_option_2
                    }
                    else_if = {
                        limit = { NOT = { exists = event_target:smear_option_3 } }
                        save_event_target_as = smear_option_3
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_4 } }
                        save_event_target_as = smear_option_4
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_5 } }
                        save_event_target_as = smear_option_5
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_6 } }
                        save_event_target_as = smear_option_6
                    }
                }
            }
			else = { #Identify random relations, if they exist
				random_playable_country = {
                    limit = {
                        NOR = {
                            is_same_value = root.owner
                            is_same_value = root.target
                        }
                        has_communications = root.owner
                        has_communications = root.target
                        is_homicidal = no
                        NOR = {
                            AND = {
                                exists = event_target:smear_option_1
                                is_same_value = event_target:smear_option_1
                            }
                            AND = {
                                exists = event_target:smear_option_2
                                is_same_value = event_target:smear_option_2
                            }
                            AND = {
                                exists = event_target:smear_option_3
                                is_same_value = event_target:smear_option_3
                            }
							AND = {
                                exists = event_target:smear_option_4
                                is_same_value = event_target:smear_option_4
                            }
							AND = {
                                exists = event_target:smear_option_5
                                is_same_value = event_target:smear_option_5
                            }
							AND = {
                                exists = event_target:smear_option_6
                                is_same_value = event_target:smear_option_6
                            }
                            has_country_flag = smear_campaign_recipient@root
                        }
                    }
                    if = {
                        limit = { NOT = { exists = event_target:smear_option_1 } }
                        save_event_target_as = smear_option_1
                    }
                    else_if = {
                        limit = { NOT = { exists = event_target:smear_option_2 } }
                        save_event_target_as = smear_option_2
                    }
                    else_if = {
                        limit = { NOT = { exists = event_target:smear_option_3 } }
                        save_event_target_as = smear_option_3
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_4 } }
                        save_event_target_as = smear_option_4
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_5 } }
                        save_event_target_as = smear_option_5
                    }
					else_if = {
                        limit = { NOT = { exists = event_target:smear_option_6 } }
                        save_event_target_as = smear_option_6
                    }
                }
			}
        }
    }

    option = {
        name = operation.3000.a
        trigger = {
            exists = event_target:smear_option_2 #Otherwise only "PROCEED" should appear
        }
        hidden_effect = {
            event_target:smear_option_1 = {
                set_timed_country_flag = {
                    flag = smear_campaign_recipient@root
                    days = 3600 #10 years
                }
            }
            set_espionage_operation_progress_locked = no
        }
    }
    option = {
        name = operation.3000.b
        trigger = {
            exists = event_target:smear_option_2
        }
        hidden_effect = {
            event_target:smear_option_2 = {
                set_timed_country_flag = {
                    flag = smear_campaign_recipient@root
                    days = 3600 #10 years
                }
            }
            set_espionage_operation_progress_locked = no
        }
    }
    option = {
        name = operation.3000.c
        trigger = {
            exists = event_target:smear_option_3
        }
        hidden_effect = {
            event_target:smear_option_3 = {
                set_timed_country_flag = {
                    flag = smear_campaign_recipient@root
                    days = 3600 #10 years
                }
            }
            set_espionage_operation_progress_locked = no
        }
    }
	option = {
        name = operation.3000.d
        trigger = {
            exists = event_target:smear_option_4
        }
        hidden_effect = {
            event_target:smear_option_4 = {
                set_timed_country_flag = {
                    flag = smear_campaign_recipient@root
                    days = 3600 #10 years
                }
            }
            set_espionage_operation_progress_locked = no
        }
    }
	option = {
        name = operation.3000.e
        trigger = {
            exists = event_target:smear_option_5
        }
        hidden_effect = {
            event_target:smear_option_5 = {
                set_timed_country_flag = {
                    flag = smear_campaign_recipient@root
                    days = 3600 #10 years
                }
            }
            set_espionage_operation_progress_locked = no
        }
    }
	option = {
        name = operation.3000.f
        trigger = {
            exists = event_target:smear_option_6
        }
        hidden_effect = {
            event_target:smear_option_6 = {
                set_timed_country_flag = {
                    flag = smear_campaign_recipient@root
                    days = 3600 #10 years
                }
            }
            set_espionage_operation_progress_locked = no
        }
    }
    option = {
        name = PROCEED
        trigger = {
            exists = event_target:smear_option_1
            NOT = { exists = event_target:smear_option_2 }
        }
        hidden_effect = {
            event_target:smear_option_1 = {
                set_timed_country_flag = {
                    flag = smear_campaign_recipient@root
                    days = 3600 #10 years
                }
            }
            set_espionage_operation_progress_locked = no
        }
    }
    option = { #No target found
        name = operation.3000.d
        exclusive_trigger = {
            NOT = {
                exists = event_target:smear_option_1
            }
        }
        root = {
            destroy_espionage_operation = this
        }
    }
}

# Smear Campaign Detected (Espionage) | from = inciting country; event_target:smear_campaign_target = victim country
country_event = {
    id = operation.3010
    title = operation.3010.name
    desc = operation.3010.desc
    picture = GFX_evt_decryption
    show_sound = event_default
    is_triggered_only = yes

    trigger = {
        exists = event_target:smear_campaign_instigator
        exists = event_target:smear_campaign_target
    }

    immediate = { }

    option = { #Play along (mirrors espionage.1070)
        name = operation.3010.a
		ai_chance = {
			factor = 2
			modifier = {
				factor = 3
				is_spy_empire = yes
			}
			modifier = {
				factor = 0.01
				is_rival = event_target:smear_campaign_instigator
			}
		}
        allow = {
            resource_stockpile_compare = { resource = influence value >= 20 }
        }
        add_resource = { influence = -20 }
        root = {
			if = {
				limit = {
					opinion_level = { who = event_target:smear_campaign_target level >= good }
				}
				add_opinion_modifier = {
					who = event_target:smear_campaign_target
					modifier = opinion_betrayed_trust
				}
			}
            add_opinion_modifier = {
                who = event_target:smear_campaign_target
                modifier = opinion_smear_campaign_espionage
            }
        }
        if = {
            limit = {
                event_target:smear_campaign_target = {
                    has_federation = yes
                    federation = { is_same_value = root.federation }
                }
            }
            federation = { add_cohesion = -30 }
        }
		if = {
			limit = {
				root = { is_overlord_to = event_target:smear_campaign_target }
			}
			random_agreement = {
				limit = {
					owner = { is_same_value = root }
					target = { is_same_value = event_target:smear_campaign_target }
				}
				add_loyalty = -30
			}
		}
		if = {
			limit = {
				event_target:smear_campaign_target = { is_overlord_to = root }
			}
			random_agreement = {
				limit = {
					owner = { is_same_value = event_target:smear_campaign_target }
					target = { is_same_value = root }
				}
				add_loyalty = -30
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = @tier1unityreward
			min = @tier1unitymin
			max = @tier1unitymax
		}
        hidden_effect = {
            remove_country_flag = smear_campaign_espionage@event_target:smear_campaign_instigator
            event_target:smear_campaign_target = {
                country_event = { id = espionage.1072 days = 1 } #Allegation of Espionage
            }
			if = {
				limit = {
					any_spynetwork = {
						owner = { is_same_value = root }
						target = { is_same_value = from }
					}
				}
				random_list = {
					1 = {
						modifier = {
							factor = 2
							from = {
								relative_encryption_decryption = {
									target = from.target
									value < 0.8
								}
							}
						}
						modifier = {
							factor = 0.5
							from = {
								relative_encryption_decryption = {
									target = from.target
									value > 1.4
								}
							}
						}
						set_timed_country_flag = {
							flag = espionage_caught_spies
							days = 20
						}
						country_event = { #A Surprise Catch (asset granted)
							id = espionage.1040
							days = 15
							scopes = { from = fromfrom }
						}
					}
					1 = {
						# nothing happens
					}
				}
			}
        }
    }
    option = { #Inform victim
        name = operation.3010.b
		ai_chance = {
			factor = 1
			modifier = {
				factor = 3
				is_civic_diplomatic_corps = yes
			}
			modifier = {
				factor = 3
				OR = {
					#Eager friends
					has_ai_personality = fanatic_befrienders
					#Federation allies against an outsider
					AND = {
						has_federation = yes
						event_target:smear_campaign_target = {
							has_federation = yes
							federation = { is_same_value = root.federation }
						}
						event_target:smear_campaign_instigator = {
							NOR = {
								has_federation = no
								AND = {
									has_federation = yes
									federation = { is_same_value = root.federation }
								}
							}
						}
					}
					#Moderate, relative trust
					AND = {
						trust = { who = event_target:smear_campaign_target value > 50 }
						trust = { who = event_target:smear_campaign_instigator value < 50 }
					}
					#The instigators rival us
					event_target:smear_campaign_instigator = { is_rival = root }
				}
			}
			modifier = {
				factor = 4
				is_rival = event_target:smear_campaign_instigator
			}
			modifier = {
				factor = 0.01
				is_rival = event_target:smear_campaign_target
			}
		}
        root = {
            add_opinion_modifier = {
                who = event_target:smear_campaign_instigator
                modifier = opinion_smear_campaign_caught
            }
        }
        event_target:smear_campaign_target = {
            country_event = { id = operation.3020 } #Smear Campaign Exposed
        }
        custom_tooltip = operation.3010.favortooltip
    }
}
# Smear Campaign Detected (Insult) | from = inciting country; event_target:smear_campaign_target = victim country
country_event = {
    id = operation.3011
    title = operation.3011.name
    desc = operation.3011.desc
    picture = GFX_evt_decryption
    show_sound = event_encrypted_comms
    is_triggered_only = yes

    trigger = {
        exists = event_target:smear_campaign_instigator
        exists = event_target:smear_campaign_target
    }

    immediate = { }

    option = { #Play along (mirrors envoy_events.100)
        name = operation.3010.a
		ai_chance = {
			factor = 2
			modifier = {
				factor = 3
				is_spy_empire = yes
			}
			modifier = {
				factor = 0.01
				is_rival = event_target:smear_campaign_instigator
			}
		}
        allow = {
            resource_stockpile_compare = { resource = influence value >= 15 }
        }
        add_resource = { influence = -15 }
        root = {
			if = {
				limit = {
					opinion_level = { who = event_target:smear_campaign_target level >= good }
				}
				add_opinion_modifier = {
					who = event_target:smear_campaign_target
					modifier = opinion_betrayed_trust
				}
			}
            add_opinion_modifier = {
                who = event_target:smear_campaign_target
                modifier = opinion_smear_campaign_insulted
            }
        }
        if = {
            limit = {
                has_federation = yes
                event_target:smear_campaign_target = {
                    has_federation = yes
                    federation = { is_same_value = root.federation }
                }
            }
            federation = { add_cohesion = -20 }
        }
		if = {
			limit = {
				root = { is_overlord_to = event_target:smear_campaign_target }
			}
			random_agreement = {
				limit = {
					owner = { is_same_value = root }
					target = { is_same_value = event_target:smear_campaign_target }
				}
				add_loyalty = -20
			}
		}
		if = {
			limit = {
				event_target:smear_campaign_target = { is_overlord_to = root }
			}
			random_agreement = {
				limit = {
					owner = { is_same_value = event_target:smear_campaign_target }
					target = { is_same_value = root }
				}
				add_loyalty = -20
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = @tier1unityreward
			min = @tier1unitymin
			max = @tier1unitymax
		}
        hidden_effect = {
            remove_country_flag = smear_campaign_insulted@event_target:smear_campaign_instigator
            event_target:smear_campaign_target = {
                country_event = { id = envoy_events.101 days = 1 } #Scandalous Insult
            }
			if = {
				limit = {
					any_spynetwork = {
						owner = { is_same_value = root }
						target = { is_same_value = from }
					}
				}
				random_list = {
					1 = {
						modifier = {
							factor = 2
							from = {
								relative_encryption_decryption = {
									target = from.target
									value < 0.8
								}
							}
						}
						modifier = {
							factor = 0.5
							from = {
								relative_encryption_decryption = {
									target = from.target
									value > 1.4
								}
							}
						}
						set_timed_country_flag = {
							flag = espionage_caught_spies
							days = 20
						}
						country_event = { #A Surprise Catch (asset granted)
							id = espionage.1040
							days = 15
							scopes = { from = fromfrom }
						}
					}
					1 = {
						# nothing happens
					}
				}
			}
        }
    }
    option = { #Inform victim
        name = operation.3010.b
		ai_chance = {
			factor = 1
			modifier = {
				factor = 3
				is_civic_diplomatic_corps = yes
			}
			modifier = {
				factor = 3
				OR = {
					#Eager friends
					has_ai_personality = fanatic_befrienders
					#Federation allies against an outsider
					AND = {
						has_federation = yes
						event_target:smear_campaign_target = {
							has_federation = yes
							federation = { is_same_value = root.federation }
						}
						event_target:smear_campaign_instigator = {
							NOR = {
								has_federation = no
								AND = {
									has_federation = yes
									federation = { is_same_value = root.federation }
								}
							}
						}
					}
					#Moderate, relative trust
					AND = {
						trust = { who = event_target:smear_campaign_target value > 50 }
						trust = { who = event_target:smear_campaign_instigator value < 50 }
					}
					#The instigators rival us
					event_target:smear_campaign_instigator = { is_rival = root }
				}
			}
			modifier = {
				factor = 4
				is_rival = event_target:smear_campaign_instigator
			}
			modifier = {
				factor = 0.01
				is_rival = event_target:smear_campaign_target
			}
		}
        root = {
            add_opinion_modifier = {
                who = event_target:smear_campaign_instigator
                modifier = opinion_smear_campaign_caught
            }
        }
        event_target:smear_campaign_target = {
            country_event = { id = operation.3020 } #Smear Campaign Exposed
        }
        custom_tooltip = operation.3010.favortooltip
    }
}
# Smear Campaign Detected (Deception) | from = inciting country; event_target:smear_campaign_target = victim country
country_event = {
    id = operation.3012
    title = operation.3012.name
    desc = operation.3012.desc
    picture = GFX_evt_decryption
    show_sound = event_encrypted_comms
    is_triggered_only = yes

    trigger = {
        exists = event_target:smear_campaign_instigator
        exists = event_target:smear_campaign_target
    }

    immediate = { }

    option = { #Play along (mirrors espionage.1080)
        name = operation.3010.a
		ai_chance = {
			factor = 2
			modifier = {
				factor = 3
				is_spy_empire = yes
			}
			modifier = {
				factor = 0.01
				is_rival = event_target:smear_campaign_instigator
			}
		}
        allow = {
            resource_stockpile_compare = { resource = influence value >= 15 }
        }
        add_resource = { influence = -15 }
        root = {
			if = {
				limit = {
					opinion_level = { who = event_target:smear_campaign_target level >= good }
				}
				add_opinion_modifier = {
					who = event_target:smear_campaign_target
					modifier = opinion_betrayed_trust
				}
			}
            add_opinion_modifier = {
                who = event_target:smear_campaign_target
                modifier = opinion_smear_campaign_deceived
            }
        }
        if = {
            limit = {
                has_federation = yes
                event_target:smear_campaign_target = {
                    has_federation = yes
                    federation = { is_same_value = root.federation }
                }
            }
            federation = { add_cohesion = -45 }
        }
		if = {
			limit = {
				root = { is_overlord_to = event_target:smear_campaign_target }
			}
			random_agreement = {
				limit = {
					owner = { is_same_value = root }
					target = { is_same_value = event_target:smear_campaign_target }
				}
				add_loyalty = -45
			}
		}
		if = {
			limit = {
				event_target:smear_campaign_target = { is_overlord_to = root }
			}
			random_agreement = {
				limit = {
					owner = { is_same_value = event_target:smear_campaign_target }
					target = { is_same_value = root }
				}
				add_loyalty = -45
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = @tier1unityreward
			min = @tier1unitymin
			max = @tier1unitymax
		}
        hidden_effect = {
            remove_country_flag = smear_campaign_deceived@event_target:smear_campaign_instigator
            event_target:smear_campaign_target = {
                country_event = { id = espionage.1085 days = 1 } #Implicated in a Plot
            }
			if = {
				limit = {
					any_spynetwork = {
						owner = { is_same_value = root }
						target = { is_same_value = from }
					}
				}
				random_list = {
					1 = {
						modifier = {
							factor = 2
							from = {
								relative_encryption_decryption = {
									target = from.target
									value < 0.8
								}
							}
						}
						modifier = {
							factor = 0.5
							from = {
								relative_encryption_decryption = {
									target = from.target
									value > 1.4
								}
							}
						}
						set_timed_country_flag = {
							flag = espionage_caught_spies
							days = 20
						}
						country_event = { #A Surprise Catch (asset granted)
							id = espionage.1040
							days = 15
							scopes = { from = fromfrom }
						}
					}
					1 = {
						# nothing happens
					}
				}
			}
        }
    }
    option = { #Inform victim
        name = operation.3010.b
		ai_chance = {
			factor = 1
			modifier = {
				factor = 3
				is_civic_diplomatic_corps = yes
			}
			modifier = {
				factor = 3
				OR = {
					#Eager friends
					has_ai_personality = fanatic_befrienders
					#Federation allies against an outsider
					AND = {
						has_federation = yes
						event_target:smear_campaign_target = {
							has_federation = yes
							federation = { is_same_value = root.federation }
						}
						event_target:smear_campaign_instigator = {
							NOR = {
								has_federation = no
								AND = {
									has_federation = yes
									federation = { is_same_value = root.federation }
								}
							}
						}
					}
					#Moderate, relative trust
					AND = {
						trust = { who = event_target:smear_campaign_target value > 50 }
						trust = { who = event_target:smear_campaign_instigator value < 50 }
					}
					#The instigators rival us
					event_target:smear_campaign_instigator = { is_rival = root }
				}
			}
			modifier = {
				factor = 4
				is_rival = event_target:smear_campaign_instigator
			}
			modifier = {
				factor = 0.01
				is_rival = event_target:smear_campaign_target
			}
		}
        root = {
            add_opinion_modifier = {
                who = event_target:smear_campaign_instigator
                modifier = opinion_smear_campaign_caught
            }
        }
        event_target:smear_campaign_target = {
            country_event = { id = operation.3020 } #Smear Campaign Exposed
        }
        custom_tooltip = operation.3010.favortooltip
    }
}

# Smear Campaign about us, exposed by its recipient | from = recipient country; fromfrom = instigating country
country_event = {
	id = operation.3020
	title = operation.3020.name
	desc = {
		trigger = {
			hidden:from = {
				switch = {
					trigger = has_country_flag
					smear_campaign_espionage@event_target:smear_campaign_instigator = { text = operation.3020.desc.espionage }
					smear_campaign_insulted@event_target:smear_campaign_instigator = { text = operation.3020.desc.insult }
					smear_campaign_deceived@event_target:smear_campaign_instigator = { text = operation.3020.desc.deception }
					default = { text = operation.3020.desc.espionage }
				}
			}
		}
	}
	picture = GFX_evt_decryption
	show_sound = event_default
	is_triggered_only = yes

	trigger = {
		exists = event_target:smear_campaign_instigator
		exists = event_target:smear_campaign_recipient #from
		exists = event_target:smear_campaign_target
	}

	immediate = { }

	option = { #Scepticism
		name = operation.3020.a
		ai_chance = {
			factor = 2
			modifier = {
				factor = 10
				is_xenophobic_isolationists = yes
			}
		}
	}
	option = { #Gratitude
		name = operation.3020.b
		add_favors = {
			target = event_target:smear_campaign_recipient
			value = 2
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 3
				OR = {
					#Eager friends
					has_ai_personality = fanatic_befrienders
					#Federation allies against an outsider
					AND = {
						has_federation = yes
						event_target:smear_campaign_recipient = {
							has_federation = yes
							federation = { is_same_value = root.federation }
						}
						event_target:smear_campaign_instigator = {
							NOR = {
								has_federation = no
								AND = {
									has_federation = yes
									federation = { is_same_value = root.federation }
								}
							}
						}
					}
					#Moderate, relative trust
					AND = {
						trust = { who = event_target:smear_campaign_recipient value > 50 }
						trust = { who = event_target:smear_campaign_instigator value < 50 }
					}
					#The instigators rival us
					fromfrom = { is_rival = root }
				}
			}
			modifier = {
				factor = 4
				trust = { who = event_target:smear_campaign_recipient value > 80 }
				is_rival = event_target:smear_campaign_instigator
			}
		}
	}

	after = {
		event_target:smear_campaign_recipient = {
			remove_country_flag = smear_campaign_espionage@event_target:smear_campaign_instigator
			remove_country_flag = smear_campaign_insulted@event_target:smear_campaign_instigator
			remove_country_flag = smear_campaign_deceived@event_target:smear_campaign_instigator
		}
	}
}

###########################
# RANDOM EVENTS
###########################
# Triggered by operation_random_events_generic via e.g. operation_random_events_regular_regular

# OPERATIVE DEFECTS (regular vs. any)
# from = operation; fromfrom = target
country_event = {
    id = operation.5045
    title = operation.5045.name
    desc = {
        text = operation.5045.desc.culture
        trigger = {
			has_country_flag = operative_defects_culture
			is_gestalt = no
		}
    }
    desc = {
        text = operation.5045.desc.turned
        trigger = {
			has_country_flag = operative_defects_turned
			is_gestalt = no
		}
    }
	desc = {
        text = operation.5045.desc.turned.mach
        trigger = {
			has_country_flag = operative_defects_turned
			is_machine_empire = yes
		}
    }
	desc = {
        text = operation.5045.desc.turned.hive
        trigger = {
			has_country_flag = operative_defects_turned
			is_hive_empire = yes
		}
    }
    picture = GFX_evt_operative_chase
    show_sound = event_default
    is_triggered_only = yes
    location = from.target.capital_scope

    trigger = {
        exists = from
        is_regular_empire = yes
        from.target = { is_homicidal = no }
    }

    immediate = {
        from = {
            set_espionage_operation_progress_locked = yes
            operation_choose_operative_role = yes #for scripted loc.
        }
        set_timed_country_flag = {
            flag = recent_op_operative_defects
            days = @RandomOperationEventTimer
        }
        random_list = {
            1 = {
                modifier = {
                    factor = 2
                    OR = {
                        has_opposing_ethics = { COUNTRY1 = root COUNTRY2 = from.target }
                        AND = {
                            OR = {
                                is_autocracy = yes
                                is_oligarchy = yes
                            }
                            from.target = { is_civic_shared_burden = yes }
                        }
                    }
                }
				modifier = {
                    factor = 0
					from.target = { is_gestalt = yes }
                }
				modifier = {
                    factor = 0
					is_gestalt = yes
                }
                set_country_flag = operative_defects_culture
            }
            3 = {
                modifier = {
                    factor = 2
                    root = {
                        relative_encryption_decryption = { target = from.target value < 0.7 }
                    }
                }
                set_country_flag = operative_defects_turned
            }
        }
    }

    option = { #Accept the loss
        name = operation.5045.a
        from = { set_espionage_operation_progress_locked = no }
        allow = {
            resource_stockpile_compare = { resource = influence value >= 20 }
        }
        add_resource = { influence = -20 }
        custom_tooltip = operation.5045.a.tooltip
        hidden_effect = {
            from = {
                if = {
                    limit = {
                        OR = {
                            has_espionage_category = op_cat_provocation
                            has_espionage_category = op_cat_sabotage
                        }
                        no_scope = {
                            any_spynetwork = {
                                owner = { is_same_value = from.target }
                                target = { is_same_value = root }
                            }
                        }
                    }
                    owner = { save_event_target_as = insidious_plot_country }
                    target = {
                        country_event = { id = espionage.1070 days = 10 } #Hostile Infiltration Detected
                    }
                }
                else_if = {
                    limit = {
                        no_scope = {
                            any_spynetwork = {
                                owner = { is_same_value = from.target }
                                target = { is_same_value = root }
                            }
                        }
                    }
                    owner = { save_event_target_as = insidious_plot_country }
                    target = {
                        country_event = { id = espionage.1080 days = 10 } #Insidious Plot Uncovered
                    }
                }
            }
        }
        ai_chance = {
            factor = 10
        }
    }
    option = { #Discipline Spymaster
		name = {
            text = operation.5045.b
            trigger = { is_gestalt = no }
        }
        name = {
            text = operation.5045.b.ges
            trigger = { is_gestalt = yes }
        }
        trigger = {
            from.spynetwork = {
                NOT = { has_modifier = spynetwork_rigorous_screening }
            }
        }
        from = { set_espionage_operation_progress_locked = no }
        custom_tooltip = operation.5045.b.tooltip
        add_modifier = { modifier = spynetwork_rigorous_screening days = 360 }
        hidden_effect = {
            random_list = { #Note that these odds are described in operation.5045.b.tooltip. Update that string if necessary.
                1 = {
                    from = {
                        if = {
                            limit = {
                                OR = {
                                    has_espionage_category = op_cat_provocation
                                    has_espionage_category = op_cat_sabotage
                                }
                                no_scope = { #makes any_spynetwork check any in the game
                                    any_spynetwork = {
                                        owner = { is_same_value = from.target }
                                        target = { is_same_value = root }
                                    }
                                }
                            }
                            owner = { save_event_target_as = insidious_plot_country }
                            target = {
                                country_event = { id = espionage.1070 days = 10 } #Hostile Infiltration Detected
                            }
                        }
                        else_if = {
                            limit = {
                                no_scope = { #makes any_spynetwork check any in the game
                                    any_spynetwork = {
                                        owner = { is_same_value = from.target }
                                        target = { is_same_value = root }
                                    }
                                }
                            }
                            owner = { save_event_target_as = insidious_plot_country }
                            target = {
                                country_event = { id = espionage.1080 days = 10 } #Insidious Plot Uncovered
                            }
                        }
                    }
                }
                1 = {
                    #No further consequences
                }
            }
        }
        ai_chance = {
            factor = 1
            modifier = {
                factor = 5
				OR = {
					is_authoritarian = yes
					is_hive_empire = yes
				}
            }
        }
    }
    option = { #Cancel the Operation
        name = DISAVOW
        hidden_effect = {
            root = {
                set_timed_country_flag = {
                    flag = has_disavowed_operative
                    days = 36000 #100 years
                }
                set_country_flag = burn_notice_achievement
            }
        }
        from = { destroy_espionage_operation = this }
        ai_chance = {
            factor = 5
            modifier = {
                factor = 4
                relative_encryption_decryption = { target = from.target value < 0.85 }
            }
        }
    }

    after = {
        remove_country_flag = operative_defects_ethics
        remove_country_flag = operative_defects_turned
    }
}

# CONFIDENCE/SYNCHRONICITY WAVERS (any vs. any)
# Panicked Operatives
# fromfrom = operation; event_target:target_country = target (country)
country_event = {
	id = operation.5057
	title = operation.5057.name
	desc = operation.5057.desc
	picture = GFX_evt_operative_chase
	show_sound = event_spymaster
	is_triggered_only = yes
	location = fromfrom.target

	trigger = {
		exists = fromfrom
		exists = event_target:target_country
	}

	immediate = { }

	option = {
		name = CURSES
		fromfrom.spynetwork = {
			add_modifier = { modifier = spynetwork_auxiliaries_leak days = 360 }
		}
	}
}

###########################
# ARM PRIVATEERS
###########################

### Arm Privateers - Intermediate setup (in case of double-whammy)
country_event = {
	id = operation.6204
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				event_target:target_country = {
					NOT = { has_country_flag = target_of_operation_arm_privateers }
				}
			}
			event_target:target_country = {
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						solar_system = {
							save_event_target_as = privateer_system
							create_privateer_country = yes
							create_privateer_fleet = yes
							create_privateer_fleet = yes
							create_privateer_fleet = yes
						}
					}
				}
				else = {
					random_system_within_border = {
						save_event_target_as = privateer_system
						create_privateer_country = yes
						create_privateer_fleet = yes
						create_privateer_fleet = yes
						create_privateer_fleet = yes
					}
				}
			}
			country_event = { id = operation.6205 } #Conclusion (instigator)
			event_target:target_country = {
				country_event = { id = operation.6206 } #Conclusion (victim)
				set_saved_date = {
					key = target_of_operation_arm_privateers
					days_from_present = 1080
					expires = 1080
				}
			}
		}
		else = {
			from = {
				espionage_operation_event = { id = operation.6207 } #Privateers already at large; operation aborts
			}
		}
	}
}

### Arm Privateers - Conclusion (Instigator)
country_event = {
	id = operation.6205
	title = operation.6205.name
	desc = {
		text = operation.6205.1.desc
		trigger = {
			event_target:target_country = {
				is_hive_empire = no
				is_machine_empire = no
			}
		}
	}
	desc = {
		text = operation.6205.2.desc
		trigger = {
			event_target:target_country = { is_machine_empire = yes }
		}
	}
	desc = {
		text = operation.6205.3.desc
		trigger = {
			event_target:target_country = { is_hive_empire = yes }
		}
	}
	picture = GFX_evt_pirates_attacking_cargo
	show_sound = event_space_battle
	location = event_target:privateer_system

	is_triggered_only = yes

	immediate = {
		#Notify anyone else attempting Arm Privateers on this target
		if = {
			limit = {
				any_playable_country = {
					NOT = { is_same_value = root }
					count_espionage_operation = {
						limit = {
							has_espionage_type = operation_arm_privateers
							target = { is_same_value = event_target:target_country }
						}
						count >= 1
					}
				}
			}
			every_playable_country = {
				limit = {
					NOT = { is_same_value = root }
					count_espionage_operation = {
						limit = {
							has_espionage_type = operation_arm_privateers
							target = { is_same_value = event_target:target_country }
						}
						count >= 1
					}
				}
				random_espionage_operation = {
					limit = {
						has_espionage_type = operation_arm_privateers
						target = { is_same_value = event_target:target_country } #Redundant only so long as operations are limited to one at a time
					}
					espionage_operation_event = { id = operation.6207 days = 2 } #Privateers already at large
				}
			}
		}
	}

	option = {
		name = EXCELLENT
		owner = {
			if = {
				limit = { has_ascension_perk = ap_become_the_crisis }
				complete_crisis_objective = crisobj_perform_upsetting_operations
			}
		}
		event_target:target_country = {
			if = {
				limit = { is_gestalt = no }
				tooltip = { add_modifier = { modifier = privateers_trade_protection days = 3600 } }
			}
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					owner = { NOT = { has_country_flag = operation_complete_arm_privateers } }
				}
				owner = {
					change_variable = {
						which = tinker_tailor_soldier_blorg_achievement_count
						value = 1
					}
					set_country_flag = operation_complete_arm_privateers
				}
			}
		}
		destroy_espionage_operation = fromfrom
	}
}

### Arm Privateers - Conclusion (Victim)
country_event = {
	id = operation.6206
	title = operation.6206.name
	desc = {
		text = operation.6206.1.desc
		trigger = {
			is_hive_empire = no
			is_machine_empire = no
		}
	}
	desc = {
		text = operation.6206.2.desc
		trigger = {
			is_machine_empire = yes
		}
	}
	desc = {
		text = operation.6206.3.desc
		trigger = {
			is_hive_empire = yes
		}
	}
	picture = GFX_evt_pirates_attacking_cargo
	show_sound = event_space_battle
	location = event_target:privateer_system

	is_triggered_only = yes

	option = {
		name = operation.6206.a
		hidden_effect = {
			remove_modifier = privateers_trade_protection
		}
		if = {
			limit = { is_gestalt = no }
			add_modifier = { modifier = privateers_trade_protection days = 3600 }
		}
	}
}

###########################
# EXTORT FAVORS
###########################

### Extort Favors - Conclusion
country_event = {
	id = operation.6255
	title = operation.6255.name
	desc = operation.6255.desc
	picture = GFX_evt_hand_shake
	show_sound = event_hand_shake

	is_triggered_only = yes

	option = {
		name = EXCELLENT
		locked_random_list = {
			80 = {
				add_favors = {
					target = event_target:target_country
					value = 1
				}
			}
			20 = {
				add_favors = {
					target = event_target:target_country
					value = 2
				}
			}
		}
		add_resource = { influence = 50 }
		from.spynetwork = {
			add_spy_network_level_on_success_effect = { VALUE = -20 }
		}
		owner = {
            if = {  
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_perform_upsetting_operations 
            }
        }
	}
	
	option = {
		name = operation.6255.b
		icon = {
			icon = GFX_espionage_asset_icon
			text = ESPIONAGE_OPERATION_ASSET_EVENT_OPTION
		}
		trigger = {
			from = { has_espionage_asset_diplomacy = yes }
		}
		locked_random_list = {
			80 = {
				add_favors = {
					target = event_target:target_country
					value = 2
				}
			}
			20 = {
				add_favors = {
					target = event_target:target_country
					value = 3
				}
			}
		}
		add_resource = { influence = 100 }
		from = { destroy_espionage_asset_diplomacy = yes }
		from.spynetwork = {
			add_spy_network_level_on_success_effect = { VALUE = -20 }
		}
		owner = {
            if = { 
                limit = { has_ascension_perk = ap_become_the_crisis }
                complete_crisis_objective = crisobj_perform_upsetting_operations 
            }
        }
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					owner = { NOT = { has_country_flag = operation_complete_extort_favors } }
				}
				owner = {
					change_variable = {
						which = tinker_tailor_soldier_blorg_achievement_count
						value = 1
					}
					set_country_flag = operation_complete_extort_favors
				}
			}
			destroy_espionage_operation = from
		}
	}
}

###########################
# GATHER INFORMATION
###########################
# this = operation; from = target (country)

# Single Stage Operation - the stakes have never been lower
espionage_operation_event = {
	id = operation.7000
	title = operation_gather_information
	desc = operation.7000.desc

	picture = GFX_evt_spymaster
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		random_list = {
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = government
								level = 2
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_government = yes
				}
				set_espionage_operation_flag = intel_report_gov_3
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = government
								level = 1
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_government = yes
				}
				set_espionage_operation_flag = intel_report_gov_2
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = government
								level = 0
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_government = yes
				}
				set_espionage_operation_flag = intel_report_gov_1
			}
			1 = {
				 modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = diplomacy
								level = 2
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_diplomacy = yes
				}
				set_espionage_operation_flag = intel_report_dip_3
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = diplomacy
								level = 1
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_diplomacy = yes
				}
				set_espionage_operation_flag = intel_report_dip_2
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = diplomacy
								level = 0
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_diplomacy = yes
				}
				set_espionage_operation_flag = intel_report_dip_1
			}
			1 = {
				 modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = economy
								level = 2
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_economy = yes
				}
				set_espionage_operation_flag = intel_report_eco_3
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = economy
								level = 1
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_economy = yes
				}
				set_espionage_operation_flag = intel_report_eco_2
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = economy
								level = 0
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_economy = yes
				}
				set_espionage_operation_flag = intel_report_eco_1
			}
			1 = {
				 modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = technology
								level = 2
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_technology = yes
				}
				set_espionage_operation_flag = intel_report_tec_3
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								who = prev.target
								category = technology
								level = 1
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_technology = yes
				}
				set_espionage_operation_flag = intel_report_tec_2
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								who = prev.target
								category = technology
								level = 0
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_technology = yes
				}
				set_espionage_operation_flag = intel_report_tec_1
			}
			1 = {
				 modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								category = military
								level = 2
								who = prev.target
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_military = yes
				}
				set_espionage_operation_flag = intel_report_mil_3
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								who = prev.target
								category = military
								level = 1
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_military = yes
				}
				set_espionage_operation_flag = intel_report_mil_2
			}
			1 = {
				modifier = {
					factor = 0
					owner = {
						NOT = {
							has_intel_level = {
								who = prev.target
								category = military
								level = 0
							}
						}
					}
				}
				modifier = {
					factor = 5
					has_espionage_asset_military = yes
				}
				set_espionage_operation_flag = intel_report_mil_1
			}
			10 = {
				set_espionage_operation_flag = intel_report_intel_5
			}
			5 = {
				modifier = {
					factor = 0.5
					owner = {
						intel = { who = prev.target value >= 40 }
					}
				}
				set_espionage_operation_flag = intel_report_intel_10
			}
			2 = {
				 modifier = {
					factor = 0.25
					owner = {
						intel = { who = prev.target value >= 50 }
					}
				 }
				set_espionage_operation_flag = intel_report_intel_15
			}
		}
	}

	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_gov_3
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = government level = 3 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_gov_2
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = government level = 2 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_gov_1
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = government level = 1 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_dip_3
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = diplomacy level = 3 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_dip_2
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = diplomacy level = 2 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_dip_1
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = diplomacy level = 1 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_eco_3
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = economy level = 3 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_eco_2
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = economy level = 2 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_eco_1
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = economy level = 1 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_tec_3
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = technology level = 3 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_tec_2
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = technology level = 2 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_tec_1
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = technology level = 1 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_mil_3
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = military level = 3 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_mil_2
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = military level = 2 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_mil_1
		}
		name = operation.7000.a
		owner = { add_intel_report = { category = military level = 1 days = 360 who = prev.target } }
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_intel_5
		}
		name = operation.7000.a
		owner = {
			add_intel = {
				amount = 5
				who = prev.target
			}
		}
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_intel_10
		}
		name = operation.7000.a
		owner = {
			add_intel = {
				amount = 10
				who = prev.target
			}
		}
	}
	option = {
		trigger = {
			has_espionage_operation_flag = intel_report_intel_15
		}
		name = operation.7000.a
		owner = {
			add_intel = {
				amount = 15
				who = prev.target
			}
		}
	}

	after = {
		if = {
			limit = {
				owner = {
					NOT = { has_tradition = tr_subterfuge_adopt }
				}
			}
			spynetwork = {
				add_spy_network_level_on_success_effect = { VALUE = -5 }
			}
		}
		#Scope doubled up for tooltip reasons
		spynetwork = {
			if = {
				limit = {
					NOR = {
						has_modifier = gather_information_infiltration_5
						has_modifier = gather_information_infiltration_10
						has_modifier = gather_information_infiltration_15
						has_modifier = gather_information_infiltration_20
					}
				}
				add_modifier = { modifier = gather_information_infiltration_5 days = @gather_info_infiltration_days }
			}
			else_if = {
				limit = { has_modifier = gather_information_infiltration_5 }
				hidden_effect = {
					remove_modifier = gather_information_infiltration_5
				}
				add_modifier = { modifier = gather_information_infiltration_10 days = @gather_info_infiltration_days }
			}
			else_if = {
				limit = { has_modifier = gather_information_infiltration_10 }
				hidden_effect = {
					remove_modifier = gather_information_infiltration_10
				}
				add_modifier = { modifier = gather_information_infiltration_15 days = @gather_info_infiltration_days }
			}
			else = {
				 hidden_effect = {
					remove_modifier = gather_information_infiltration_15
					remove_modifier = gather_information_infiltration_20
				}
				add_modifier = { modifier = gather_information_infiltration_20 days = @gather_info_infiltration_days }
			}
		}
		hidden_effect = {
			if = {
				limit = {
					owner = { NOT = { has_country_flag = operation_complete_gather_information } }
				}
				owner = {
					change_variable = {
						which = tinker_tailor_soldier_blorg_achievement_count
						value = 1
					}
					set_country_flag = operation_complete_gather_information
				}
			}
		}
		destroy_espionage_operation = this
	}
}

############################
# SUBTERFUGE: SLEEPER CELLS
############################

# FinalÃ© (in operation scope, so we don't need to clean up the flags afterwards)
espionage_operation_event = {
	id = operation.8002
	title = operation.8002.name
	desc = {
		trigger = {
			switch = {
				trigger = has_espionage_operation_flag
				sleeper_cells_boring = { text = operation.8002.desc.boring }
				sleeper_cells_materialist = { text = operation.8002.desc.materialist }
				sleeper_cells_megacorp = { text = operation.8002.desc.megacorp }
				sleeper_cells_spiritualist = { text = operation.8002.desc.spiritualist }
				sleeper_cells_authoritarian_imperial = { text = operation.8002.desc.authoritarian.imperial }
				sleeper_cells_authoritarian_non_imperial = { text = operation.8002.desc.authoritarian.non_imperial }
				sleeper_cells_militarist = { text = operation.8002.desc.militarist }
				sleeper_cells_hive = { text = operation.8002.desc.hive }
				sleeper_cells_hive_on_hive = { text = operation.8002.desc.hive_on_hive }
				sleeper_cells_machine = { text = operation.8002.desc.machine }
				sleeper_cells_machine_on_machine = { text = operation.8002.desc.machine_on_machine }
				default = { text = operation.8002.desc.boring }
			}
		}
	}
	picture = {
		trigger = {
			target = {
				is_machine_empire = yes
			}
		}
		picture = GFX_evt_synth_sabotage
	}
	picture = {
		trigger = {
			target = {
				is_machine_empire = no
			}
		}
		picture = GFX_evt_spy_network
	}
	location = target.capital_scope
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	immediate = {
		random_list = {
			100 = {
				modifier = {
					factor = 0
					target = { is_materialist = no }
				}
				modifier = {
					factor = 2
					target = { has_ethic = ethic_fanatic_materialist }
				}
				set_espionage_operation_flag = sleeper_cells_materialist
			}
			300 = {
				modifier = {
					factor = 0
					target = { is_megacorp = no }
				}
				set_espionage_operation_flag = sleeper_cells_megacorp
			}
			100 = {
				modifier = {
					factor = 0
					target = { is_spiritualist = no }
				}
				modifier = {
					factor = 2
					target = { has_ethic = ethic_fanatic_spiritualist }
				}
				set_espionage_operation_flag = sleeper_cells_spiritualist
			}
			100 = {
				modifier = {
					factor = 0
					target = {
						OR = {
							is_authoritarian = no
							has_authority = auth_imperial
						}
					}
				}
				modifier = {
					factor = 2
					target = { has_ethic = ethic_fanatic_authoritarian }
				}
				set_espionage_operation_flag = sleeper_cells_authoritarian_non_imperial
			}
			100 = {
				modifier = {
					factor = 0
					target = {
						OR = {
							is_authoritarian = no
							NOT = { has_authority = auth_imperial }
						}
					}
				}
				modifier = {
					factor = 2
					target = { has_ethic = ethic_fanatic_authoritarian }
				}
				set_espionage_operation_flag = sleeper_cells_authoritarian_imperial
			}
			100 = {
				modifier = {
					factor = 0
					target = { is_militarist = no }
				}
				modifier = {
					factor = 2
					target = { has_ethic = ethic_fanatic_militarist }
				}
				set_espionage_operation_flag = sleeper_cells_militarist
			}
			100 = {
				modifier = {
					factor = 0
					OR = {
						owner = { is_hive_empire = yes }
						target = { is_hive_empire = no }
					}
				}
				set_espionage_operation_flag = sleeper_cells_hive
			}
			100 = {
				modifier = {
					factor = 0
					OR = {
						owner = { is_hive_empire = no }
						target = { is_hive_empire = no }
					}
				}
				set_espionage_operation_flag = sleeper_cells_hive_on_hive
			}
			100 = {
				modifier = {
					factor = 0
					OR = {
						owner = { is_machine_empire = yes }
						target = { is_machine_empire = no }
					}
				}
				set_espionage_operation_flag = sleeper_cells_machine
			}
			100 = {
				modifier = {
					factor = 0
					OR = {
						owner = { is_machine_empire = no }
						target = { is_machine_empire = no }
					}
				}
				set_espionage_operation_flag = sleeper_cells_machine_on_machine
			}
			50 = {
				modifier = {
					factor = 0.01
					target = {
						is_pacifist = no
						is_xenophile = no
						is_egalitarian = no
					}
				}
				modifier = {
					factor = 0
					target = {
						is_gestalt = yes
					}
				}
				modifier = {
					factor = 2
					target = {
						OR = {
							has_ethic = ethic_fanatic_pacifist
							has_ethic = ethic_fanatic_xenophile
							has_ethic = ethic_fanatic_egalitarian
						}
					}
				}
				set_espionage_operation_flag = sleeper_cells_boring
			}
		}
	}

	option = {
		name = EXCELLENT
		spynetwork = {
			add_modifier = {
				modifier = sleeper_cell_operation_success
				years = 15
			}
			set_saved_date = {
				key = sleeper_cell_success
				days_from_present = 5400
				expires = 5400
			}
		}
	}

	option = { #Extended Sleeper Cells
		name = operation.8002.b
		icon = {
			icon = GFX_espionage_asset_icon
			text = ESPIONAGE_OPERATION_ASSET_EVENT_OPTION
		}
		trigger = {
			has_espionage_asset_subterfuge = yes
		}
		spynetwork = {
			add_modifier = {
				modifier = sleeper_cell_operation_success
				years = 30
			}
			set_saved_date = {
				key = sleeper_cell_success
				days_from_present = 10800
				expires = 10800
			}
		}
		destroy_espionage_asset_subterfuge = yes
	}
	
	option = { #Decode Encryption
		name = operation.8002.c
		icon = {
			icon = GFX_espionage_asset_icon
			text = ESPIONAGE_OPERATION_ASSET_EVENT_OPTION
		}
		trigger = {
			spynetwork = {
				NOT = { has_modifier = spynetwork_sleeper_cell_encryption }
			}
			OR = {
				has_espionage_asset_technology = yes
				spynetwork = { has_espionage_asset_technology = yes }
			}
		}
		spynetwork = {
			add_modifier = {
				modifier = sleeper_cell_operation_success
				years = 15
			}
			add_modifier = {
				modifier = spynetwork_sleeper_cell_encryption
				years = 15
			}
			set_saved_date = {
				key = sleeper_cell_success
				days_from_present = 5400
				expires = 5400
			}
		}
		if = {
			limit = { has_espionage_asset_technology = yes }
			destroy_espionage_asset_technology = yes # destroys assigned assets first
		}
		else = {
			spynetwork = { destroy_espionage_asset_technology = yes }
		}
	}
	
	after = {
		hidden_effect = {
			if = {
				limit = {
					owner = { NOT = { has_country_flag = operation_complete_sleeper_cells } }
				}
				owner = {
					change_variable = {
						which = tinker_tailor_soldier_blorg_achievement_count
						value = 1
					}
					set_country_flag = operation_complete_sleeper_cells
				}
			}
		}
		destroy_espionage_operation = this
	}
}

############################
# MANIPULATION: DIPLOMATIC INCIDENT
############################

# FinalÃ© (succeeded)
espionage_operation_event = {
	id = operation.8230
	title = operation.8230.name
	desc = {
		trigger = {
			switch = {
				trigger = has_espionage_operation_flag
				salacious_affair = { text = operation.8230.desc.salacious_affair } #with event target offended_party
				salacious_affair_self = { text = operation.8230.desc.salacious_affair_self } #in which event target offended_party = root
				galactic_comedy = { text = operation.8230.desc.galactic_comedy }
				insulting_envoy = { text = operation.8230.desc.insulting_envoy } #with event target offended_party
				insulting_envoy_self = { text = operation.8230.desc.insulting_envoy_self } #in which event target offended_party = root
				galcom_lobbying = { text = operation.8230.desc.lobbying }
				eloping_envoy = { text = operation.8230.desc.elope }
				wayward_envoy = { text = operation.8230.desc.wayward }
				substance_abuse = { text = operation.8230.desc.substances }
				caught_stealing_research = { text = operation.8230.desc.caught_stealing_research }
				caught_stealing_research_self = { text = operation.8230.desc.caught_stealing_research_self }
			}
		}
	}
	picture = GFX_evt_tradedeal
	location = target.capital_scope
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				has_country_flag = offended_party@root
			}
			save_event_target_as = offended_party
			remove_country_flag = offended_party@root
		}
	}

	option = {
		name = EXCELLENT

		custom_tooltip = diplo_incident_succeeded
		spynetwork = {
			add_spy_network_level_on_success_effect = { VALUE = -10 }
		}
		owner = {
			if = {
				limit = { has_ascension_perk = ap_become_the_crisis }
				complete_crisis_objective = crisobj_perform_upsetting_operations
			}
			hidden_effect = { remove_modifier = diplomatic_incident_good }
			add_modifier = { modifier = diplomatic_incident_good days = 3600 }
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					owner = { NOT = { has_country_flag = operation_complete_diplo_incident } }
				}
				owner = {
					change_variable = {
						which = tinker_tailor_soldier_blorg_achievement_count
						value = 1
					}
					set_country_flag = operation_complete_diplo_incident
				}
			}
		}
		destroy_espionage_operation = this
	}
}