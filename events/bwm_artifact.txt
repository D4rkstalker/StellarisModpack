namespace = bwm_artifact

#Shroudborn abilities

country_event = {
	id = bwm_artifact.0
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			is_ship_size = bwm_artifact_shroudborn
		}
	}
	
	immediate = {
		FROMFROM = {
			random_list = {
				50 = {
				}
				50 = {
					add_modifier = {
						modifier = "bwm_artifact_shroudborn_power"
						days = 90
					}
				}
			}
			if = {
				limit = {
					has_modifier = bwm_artifact_shroudborn_power
				}
				random_list = {
					50 = {
					}
					50 = {
						remove_modifier = "bwm_artifact_shroudborn_power"
						add_modifier = {
							modifier = "bwm_artifact_shroudborn_bonus"
							days = 90
						}
						repair_ship = yes
					}
				}
			}
		}
	}
}

#Shroudtech ship abilities

country_event = {
	id = bwm_artifact.1
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			AND = {
				OR = {
					is_ship_size = bwm_artifact_station
					is_ship_size = bwm_artifact_ship
					has_ship_flag = bwm_artifact_prototype
				}
				OR = {
					has_component = bwm_ARTIFACT_PRIMARY_WEAPON
					has_component = bwm_ARTIFACT_PRIMARY_STATION_WEAPON
				}
			}
		}
	}
	
	immediate = {
		FROMFROMFROM = {
			if = {
				limit = {
					exists = this
				}
				save_event_target_as = bwm_artifact_bomb_loc
			}
			else = {
				FROMFROM = {
					save_event_target_as = bwm_artifact_bomb_loc
				}
			}
		}
		if = {
			limit = {
				FROM = {
					OR = {
						is_country_type = shroud
						is_country_type = shroud_spirits
					}
				}
			}
			FROMFROM = {
				add_modifier = {
					modifier = "bwm_power_bonus"
					days = 30
				}
			}
		}
		FROMFROM = {
			save_event_target_as = bwm_artifact_ship_loc
			owner = {
				save_event_target_as = bwm_artifact_ship_owner
			}
			random_list = {
				20 = {
					add_modifier = {
						modifier = "bwm_artifact_ship_power_1"
						days = 60
					}
				}
				20 = {
					add_modifier = {
						modifier = "bwm_artifact_ship_power_2"
						days = 60
					}
				}
				20 = {
					add_modifier = {
						modifier = "bwm_artifact_ship_power_3"
						days = 60
					}
				}
				20 = {
					add_modifier = {
						modifier = "bwm_artifact_ship_power_4"
						days = 60
					}
				}
				20 = {
					add_modifier = {
						modifier = "bwm_artifact_ship_power_5"
						days = 60
					}
				}
			}
			random_list = {
				20 = {
					if = {
						limit = {
							has_modifier = bwm_artifact_ship_power_1
						}
						remove_modifier = "bwm_artifact_ship_power_1"
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no
								is_boss = yes
							}
							effect = {
								set_owner = event_target:bwm_artifact_ship_owner
								create_ship = {
									name = "Vic'Inta"
									design = "Av'Rta I"
									prefix = no
								}
								set_location = event_target:bwm_artifact_ship_loc
								set_fleet_stance = aggressive
								set_aggro_range = 500
								set_aggro_range_measure_from = self
								
								fleet_event = { id = bwm_artifact.2 days = 30 }
								
								set_event_locked = yes
							}
						}
						break = yes
					}
				}
				20 = {
					if = {
						limit = {
							has_modifier = bwm_artifact_ship_power_2
						}
						remove_modifier = "bwm_artifact_ship_power_2"
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no
								is_boss = yes
							}
							effect = {
								set_owner = event_target:bwm_artifact_ship_owner
								create_ship = {
									name = "Prat'Ibha"
									design = "Av'Rta II"
									prefix = no
								}
								set_location = event_target:bwm_artifact_ship_loc
								
								set_fleet_stance = aggressive
								set_aggro_range = 500
								set_aggro_range_measure_from = self
								
								fleet_event = { id = bwm_artifact.2 days = 30 }
								
								set_event_locked = yes
							}
						}
						break = yes
					}
				}
				20 = {
					if = {
						limit = {
							has_modifier = bwm_artifact_ship_power_3
						}
						remove_modifier = "bwm_artifact_ship_power_3"
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no 
								is_boss = yes
							}
							effect = {
								set_owner = event_target:bwm_artifact_ship_owner
								create_ship = {
									name = "Zun'Yata"
									design = "Nir'Rti I"
									prefix = no
								}
								set_location = event_target:bwm_artifact_bomb_loc

								fleet_event = { id = bwm_artifact.2 days = 1 }
								
								set_event_locked = yes
							}
						}
						break = yes
					}
				}
				20 = {
					if = {
						limit = {
							has_modifier = bwm_artifact_ship_power_4
						}
						remove_modifier = "bwm_artifact_ship_power_4"
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no 
								is_boss = yes
							}
							effect = {
								set_owner = event_target:bwm_artifact_ship_owner
								create_ship = {
									name = "Val'Ukatva"
									design = "Nir'Rti II"
									prefix = no
								}
								set_location = event_target:bwm_artifact_bomb_loc

								fleet_event = { id = bwm_artifact.2 days = 1 }
								
								set_event_locked = yes
							}
						}
						break = yes
					}
				}
				20 = {
					if = {
						limit = {
							has_modifier = bwm_artifact_ship_power_5
						}
						remove_modifier = "bwm_artifact_ship_power_5"
						repair_ship = yes
						solar_system = {
							every_fleet_in_system = {
								if = {
									limit = {
										exists = this
										owner = {
											is_country = event_target:bwm_artifact_ship_owner
										}
									}
									add_modifier = {
										modifier = "bwm_artifact_ship_booster"
										days = 30
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

#Disband Drones

fleet_event = {
	id = bwm_artifact.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		destroy_fleet = THIS
	}
}

#Player System Buster Type 2

planet_event = {
	id = bwm_artifact.3
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		solar_system = {
			NOT = {
				has_star_flag = bwm_artifact_buster_2_flag
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					exists = event_target:bwm_beautiful_erasure_country
				} 
			}
			create_country = {
				name = "Beautiful Erasure"
				type = bwm_shroud_guardian
				flag = {
					icon = {
						category = "blocky"
						file = "flag_blocky_11.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"dark_purple"
						"dark_purple"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = bwm_beautiful_erasure_country
				}
			}
			every_country = {
				if = {
					limit = {
						NOT = {
							has_communications = event_target:bwm_beautiful_erasure_country
						}
					}
					establish_communications_no_message = event_target:bwm_beautiful_erasure_country
				}
			}
		}
		solar_system = {
			bwm_megastructure_swap = yes
			every_system_ambient_object = {
				if = {
					limit = {
						OR = {
							has_ambient_object_flag = bwm_artifact_bomb_1_fog_1
							has_ambient_object_flag = bwm_artifact_bomb_2_fog_1
							has_ambient_object_flag = bwm_artifact_doom_fog_1
						}
					}
					destroy_ambient_object = this
				}
			}
			random_system_planet = {
				limit = {
					is_star = yes 
				}
				save_event_target_as = bwm_artifact_bomb_2_loc
				bwm_effect_explosion_AOE = yes
				create_ambient_object = {
					type = "bwm_cloud_ambient_object"
					location = this
					duration = 360
				}
				last_created_ambient_object = {
					set_ambient_object_flag = bwm_artifact_bomb_2_fog_1
				}
				planet_event = { id = bwm_artifact.400 days = 5 }
			}
			every_system_planet = {
				if = {
					limit = {
						exists = this
						is_star = no 
					}
					if = {
						limit = {
							has_army = yes
						}
						while = {
							limit = {
								has_army = yes
							}
							random_planet_army = {
								remove_army = yes
							}
						}
					}
					# TODO
					#every_tile = {
					#	if = {
					#		limit = {
					#			OR = {
					#				has_grown_pop = yes
					#				has_growing_pop = yes
					#			}
					#		}
					#		kill_pop = yes
					#	}
					#	if = {
					#		limit = {
					#			has_building = yes
					#			is_ruined = no
					#		}
					#		set_ruined = yes
					#	}
					#}
					every_owned_pop = {
						kill_pop = yes
					}
					if = {
						limit = {
							habitable_planet = yes
						}
						random_list = {
							50 = {
								if = {
									limit = {
										NOT = {
											has_modifier = bwm_artifact_bomb_2_planet_effect
										}
									}
									add_modifier = {
										modifier = "bwm_artifact_bomb_2_planet_effect"
										days = 1800
									}
								}
							}
							50 = {
								change_pc = pc_shrouded
							}
						}
					}
					if = {
						limit = {
							is_planet_class = pc_ringworld_tech
						}
						random_list = {
							50 = {
							}
							50 = {
								change_pc = pc_ringworld_tech_damaged
							}
						}
					}
					if = {
						limit = {
							is_planet_class = pc_ringworld_seam
						}
						random_list = {
							50 = {
							}
							50 = {
								change_pc = pc_ringworld_seam_damaged
							}
						}
					}
					if = {
						limit = {
							OR = {
								is_planet_class = pc_ringworld_habitable
								is_planet_class = pc_habitat
							}
						}
						random_list = {
							50 = {
								if = {
									limit = {
										NOT = {
											has_modifier = bwm_artifact_bomb_2_planet_effect
										}
									}
									add_modifier = {
										modifier = "bwm_artifact_bomb_2_planet_effect"
										days = 1800
									}
								}
							}
							50 = {
								if = {
									limit = {
										is_planet_class = pc_habitat
									}
									remove_planet = yes
								}
								else = {
									if = {
										limit = {
											is_planet_class = pc_ringworld_habitable
										}
										change_pc = pc_ringworld_habitable_damaged
										set_planet_entity = {
											entity = "bwm_ringworld_shrouded_01_entity"
										}
									}
								}
							}
						}
					}
				}
			}
			if = {
				limit = {
					NOT = {
						has_star_flag = bwm_artifact_buster_2_flag
					}
				}
				set_timed_star_flag = {
					flag = bwm_artifact_buster_2_flag
					days = 360
				}
			}
			create_fleet = {
				name = "Psionic Projection"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_beautiful_erasure_country
					create_ship = {
						name = "Ab'Hu"
						design = "Nir'Rti III"
						prefix = no
					}
					set_location = event_target:bwm_artifact_bomb_2_loc

					fleet_event = { id = bwm_artifact.8 days = 1 }
					
					set_event_locked = yes
				}
			}
		}
	}
}

#Player System Buster Type 1

planet_event = {
	id = bwm_artifact.4
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		solar_system = {
			NOT = {
				has_star_flag = bwm_artifact_buster_1_flag
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					exists = event_target:bwm_beautiful_erasure_country
				} 
			}
			create_country = {
				name = "Beautiful Erasure"
				type = bwm_shroud_guardian
				flag = {
					icon = {
						category = "blocky"
						file = "flag_blocky_11.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"dark_purple"
						"dark_purple"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = bwm_beautiful_erasure_country
				}
			}
			every_country = {
				if = {
					limit = {
						NOT = {
							has_communications = event_target:bwm_beautiful_erasure_country
						}
					}
					establish_communications_no_message = event_target:bwm_beautiful_erasure_country
				}
			}
		}
		solar_system = {
			bwm_megastructure_erase = yes
			every_system_ambient_object = {
				if = {
					limit = {
						OR = {
							has_ambient_object_flag = bwm_artifact_bomb_1_fog_1
							has_ambient_object_flag = bwm_artifact_bomb_1_fog_2
							has_ambient_object_flag = bwm_artifact_bomb_2_fog_1
							has_ambient_object_flag = bwm_artifact_bomb_2_fog_2
							has_ambient_object_flag = bwm_artifact_doom_fog_1
							has_ambient_object_flag = bwm_artifact_doom_fog_2
						}
					}
					destroy_ambient_object = this
				}
			}
			random_system_planet = {
				limit = {
					is_star = yes 
				}
				save_event_target_as = bwm_artifact_bomb_1_loc
				bwm_effect_explosion_AOE = yes
				last_created_ambient_object = {
					set_ambient_object_flag = bwm_artifact_bomb_1_explosion_ambient
				}
				create_ambient_object = {
				type = "bwm_cloud_ambient_object"
				duration = 360
				location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = bwm_artifact_bomb_1_fog_1
				}
				create_ambient_object = {
				type = "bwm_cloud_ambient_alt_object"
				duration = 360
				location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = bwm_artifact_bomb_1_fog_2
				}
				if = {
					limit = {
						NOT = {
							is_planet_class = pc_bwm_star_dummy
						}
					}
					prevent_anomaly = yes
					#orbital_deposit_tile = {
						clear_deposits = yes
					#}
					change_pc = pc_bwm_star_dummy
				}
				planet_event = { id = bwm_artifact.400 days = 5 }
			}
			every_system_planet = {
				if = {
					limit = {
						exists = this
						is_star = no
					}
					if = {
						limit = {
							has_army = yes
						}
						while = {
							limit = {
								has_army = yes
							}
							random_planet_army = {
								remove_army = yes
							}
						}
					}
					every_owned_pop = {
						kill_pop = yes
					}
					remove_planet = yes 
				}
			}
			every_system_ambient_object = {
				if = {
					limit = {
						exists = this
						NOR = {
							has_ambient_object_flag = bwm_ancestor_prison_ambient
							has_ambient_object_flag = bwm_ancestor_prison_weakened_1
							has_ambient_object_flag = bwm_ancestor_prison_weakened_2
							has_ambient_object_flag = bwm_ancestor_prison_weakened_3
							has_ambient_object_flag = bwm_ancestor_seal_1_burst
							has_ambient_object_flag = bwm_ancestor_seal_2_burst
							has_ambient_object_flag = bwm_ancestor_seal_3_burst
							has_ambient_object_flag = bwm_ancestor_seal_4_burst
							has_ambient_object_flag = bwm_ancestor_seal_5_burst
							has_ambient_object_flag = bwm_ancestor_seal_6_burst
							has_ambient_object_flag = bwm_enigma_archive_1_ambient
							has_ambient_object_flag = bwm_enigma_archive_2_ambient
							has_ambient_object_flag = bwm_enigma_archive_3_ambient
							has_ambient_object_flag = bwm_enigma_archive_4_ambient
							has_ambient_object_flag = bwm_enigma_archive_5_ambient
							has_ambient_object_flag = bwm_enigma_archive_6_ambient
							has_ambient_object_flag = bwm_enigma_archive_7_ambient
							has_ambient_object_flag = bwm_enigma_archive_8_ambient
							has_ambient_object_flag = bwm_enigma_archive_9_ambient
							has_ambient_object_flag = bwm_artifact_bomb_1_fog_1
							has_ambient_object_flag = bwm_artifact_bomb_1_fog_2
							has_ambient_object_flag = bwm_artifact_bomb_1_explosion_ambient
						}
					}
					destroy_ambient_object = this
				}
			}
			if = {
				limit = {
					NOT = {
						has_star_flag = bwm_artifact_buster_1_flag
					}
				}
				set_timed_star_flag = {
					flag = bwm_artifact_buster_1_flag
					days = 360
				}
			}
			create_fleet = {
				name = "Psionic Projection"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_beautiful_erasure_country
					create_ship = {
						name = "Va'Zin"
						design = "Nir'Rti IV"
						prefix = no
					}
					set_location = event_target:bwm_artifact_bomb_1_loc

					fleet_event = { id = bwm_artifact.7 days = 1 }
					
					set_event_locked = yes
				}
			}
		}
	}
}

country_event = {
	id = bwm_artifact.5
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROMFROMFROM = {
			is_ship_size = bwm_artifact_bomb_2
		}
	}
	
	immediate = {
		FROMFROMFROM = {
			OWNER = {
				save_event_target_as = bwm_artifact_bomb_2_owner
			}
		}
		FROMFROM = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					planet_event = { id = bwm_artifact.3 days = 1 }
				}
				if = {
					limit = {
						exists =  space_owner
						space_owner = {
							AND = {
								OR = {
									is_country_type = default
									is_country_type = fallen_empire
									is_country_type = awakened_fallen_empire
								}
								NOT = {
									is_country = event_target:bwm_artifact_bomb_2_owner
								}
							}
						}
					}
					space_owner = {
						add_opinion_modifier = { who = event_target:bwm_artifact_bomb_2_owner modifier = bwm_artifact_bomb_2_victim }
						if = {
							limit = {
								NOT = {
									is_at_war_with = event_target:bwm_artifact_bomb_2_owner
								}
							}
							add_casus_belli = {
								type = bwm_cb_stop_atrocity
								who = event_target:bwm_artifact_bomb_2_owner
								days = 720
							}
							declare_war = {
								target = event_target:bwm_artifact_bomb_2_owner
								attacker_war_goal = "bwm_wg_end_threat_atrocity"
							}
						}
					}
				}
			}
		}
		every_country = {
			limit = {
				has_communications = event_target:bwm_artifact_bomb_2_owner
				AND = {
					NOR = {
						is_country = event_target:bwm_artifact_bomb_2_owner
						has_ai_personality_behaviour = purger
					}
					OR = {
						is_country_type = default
						has_ai_personality = awakened_fallen_empire_xenophile				
					}
				}	
			}
			add_opinion_modifier = { who = event_target:bwm_artifact_bomb_2_owner modifier = opinion_genocidal }
		}
		add_threat = {
			who = event_target:bwm_artifact_bomb_2_owner
			amount = 10
		}
	}
}

country_event = {
	id = bwm_artifact.6
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROMFROMFROM = {
			is_ship_size = bwm_artifact_bomb_1
		}
	}
	
	immediate = {
		FROMFROMFROM = {
			OWNER = {
				save_event_target_as = bwm_artifact_bomb_1_owner
			}
		}
		FROMFROM = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					planet_event = { id = bwm_artifact.4 days = 1 }
				}
				if = {
					limit = {
						exists = space_owner
						space_owner = {
							AND = {
								OR = {
									is_country_type = default
									is_country_type = fallen_empire
									is_country_type = awakened_fallen_empire
								}
								NOT = {
									is_country = event_target:bwm_artifact_bomb_1_owner
								}
							}
						}
					}
					space_owner = {
						add_opinion_modifier = { who = event_target:bwm_artifact_bomb_1_owner modifier = bwm_artifact_bomb_1_victim }
						if = {
							limit = {
								NOT = {
									is_at_war_with = event_target:bwm_artifact_bomb_1_owner
								}
							}
							add_casus_belli = {
								type = bwm_cb_stop_atrocity
								who = event_target:bwm_artifact_bomb_2_owner
								days = 720
							}
							declare_war = {
								target = event_target:bwm_artifact_bomb_1_owner
								attacker_war_goal = "bwm_wg_end_threat_atrocity"
							}
						}
					}
				}
			}
		}
		every_country = {
			limit = {
				has_communications = event_target:bwm_artifact_bomb_1_owner
				AND = {
					NOR = {
						is_country = event_target:bwm_artifact_bomb_1_owner
						has_ai_personality_behaviour = purger
					}
					OR = {
						is_country_type = default
						has_ai_personality = awakened_fallen_empire_xenophile				
					}
				}	
			}
			add_opinion_modifier = { who = event_target:bwm_artifact_bomb_1_owner modifier = opinion_genocidal }
		}
		add_threat = {
			who = event_target:bwm_artifact_bomb_1_owner
			amount = 10
		}
	}
}

#Player System Buster Type 1 - Surviving ships get crippled

fleet_event = {
	id = bwm_artifact.7
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		this = {
			solar_system = {
				save_event_target_as = bwm_artifact_bomb_1_debuff_loc
			}
		}
		destroy_fleet = THIS
		event_target:bwm_artifact_bomb_1_debuff_loc = {
			if = {
				limit = {
					any_ship_in_system = {
						exists = this
					}
				}
				every_fleet_in_system = {
					if = {
						limit = {
							NOT = {
								owner = {
									is_country_type = bwm_shroud_guardian
								}
							}
						}
						add_modifier = {
							modifier = "bwm_artifact_bomb_1_temp"
							days = 1800
						}
					}
				}
			}
		}
	}
}

#Player System Buster Type 2 - Surviving ships get crippled

fleet_event = {
	id = bwm_artifact.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		this = {
			solar_system = {
				save_event_target_as = bwm_artifact_bomb_2_debuff_loc
			}
		}
		destroy_fleet = THIS
		event_target:bwm_artifact_bomb_2_debuff_loc = {
			if = {
				limit = {
					any_ship_in_system = {
						exists = this
					}
				}
				every_fleet_in_system = {
					if = {
						limit = {
							NOT = {
								owner = {
									is_country_type = bwm_shroud_guardian
								}
							}
						}
						add_modifier = {
							modifier = "bwm_artifact_bomb_2_temp"
							days = 1800
						}
					}
				}
			}
		}
	}
}

# Beautiful Erasure - End of Days

planet_event = {
	id = bwm_artifact.9
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		solar_system = {
			NOT = {
				has_star_flag = bwm_artifact_doom_flag
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					exists = event_target:bwm_beautiful_erasure_country
				} 
			}
			create_country = {
				name = "Beautiful Erasure"
				type = bwm_shroud_guardian
				flag = {
					icon = {
						category = "blocky"
						file = "flag_blocky_11.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"dark_purple"
						"dark_purple"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = bwm_beautiful_erasure_country
				}
			}
			every_country = {
				if = {
					limit = {
						NOT = {
							has_communications = event_target:bwm_beautiful_erasure_country
						}
					}
					establish_communications_no_message = event_target:bwm_beautiful_erasure_country
				}
			}
		}
		solar_system = {
			bwm_megastructure_erase = yes
			every_fleet_in_system = {
				destroy_fleet = this
			}
			#if = {
			#	limit = { exists = starbase }
			#	starbase = { fleet = { destroy_fleet = this } }
			#}
			every_system_ambient_object = {
				if = {
					limit = {
						OR = {
							has_ambient_object_flag = bwm_artifact_bomb_1_fog_1
							has_ambient_object_flag = bwm_artifact_bomb_1_fog_2
							has_ambient_object_flag = bwm_artifact_bomb_2_fog_1
							has_ambient_object_flag = bwm_artifact_bomb_2_fog_2
							has_ambient_object_flag = bwm_artifact_doom_fog_1
							has_ambient_object_flag = bwm_artifact_doom_fog_2
						}
					}
					destroy_ambient_object = this
				}
			}
			random_system_planet = {
				limit = {
					is_star = yes 
				}
				save_event_target_as = bwm_artifact_bomb_0_loc
				planet_event = { id = bwm_artifact.400 days = 5 }
			}
			every_system_planet = {
				limit = {
					exists = this
				}
				if = {
					limit = { is_star = yes }
					
					bwm_effect_explosion_AOE = yes
					last_created_ambient_object = {
						set_ambient_object_flag = bwm_artifact_doom_ambient
					}
					create_ambient_object = {
					type = "bwm_cloud_ambient_object"
					duration = 360
					location = this
					}
					last_created_ambient_object = {
						set_ambient_object_flag = bwm_artifact_doom_fog_1
					}
					create_ambient_object = {
					type = "bwm_cloud_ambient_alt_object"
					duration = 360
					location = this
					}
					last_created_ambient_object = {
						set_ambient_object_flag = bwm_artifact_doom_fog_2
					}
					if = {
						limit = {
							NOT = {
								is_planet_class = pc_bwm_star_dummy
							}
						}
						prevent_anomaly = yes
						#orbital_deposit_tile = {
							clear_deposits = yes
						#}
						change_pc = pc_bwm_star_dummy
					}
				}
				else = {
					every_owned_pop = {
						kill_pop = yes
					}
					remove_all_buildings = yes
					# destroy habitats and ringworlds
					if = {
						limit = { is_planet_class = pc_habitat }
						spawn_habitat_cracker_effect = yes
						remove_planet = yes
					} else_if = {
						limit = { is_planet_class = pc_ringworld_habitable }
						spawn_ringworld_cracker_effect = yes
						change_pc = pc_ringworld_habitable_damaged
					} else = {
						change_pc = pc_shattered
						clear_deposits = yes
					}
				}
			}
			every_system_ambient_object = {
				if = {
					limit = {
						exists = this
						NOR = {
							has_ambient_object_flag = bwm_ancestor_prison_ambient
							has_ambient_object_flag = bwm_ancestor_prison_weakened_1
							has_ambient_object_flag = bwm_ancestor_prison_weakened_2
							has_ambient_object_flag = bwm_ancestor_prison_weakened_3
							has_ambient_object_flag = bwm_ancestor_seal_1_burst
							has_ambient_object_flag = bwm_ancestor_seal_2_burst
							has_ambient_object_flag = bwm_ancestor_seal_3_burst
							has_ambient_object_flag = bwm_ancestor_seal_4_burst
							has_ambient_object_flag = bwm_ancestor_seal_5_burst
							has_ambient_object_flag = bwm_ancestor_seal_6_burst
							has_ambient_object_flag = bwm_enigma_archive_1_ambient
							has_ambient_object_flag = bwm_enigma_archive_2_ambient
							has_ambient_object_flag = bwm_enigma_archive_3_ambient
							has_ambient_object_flag = bwm_enigma_archive_4_ambient
							has_ambient_object_flag = bwm_enigma_archive_5_ambient
							has_ambient_object_flag = bwm_enigma_archive_6_ambient
							has_ambient_object_flag = bwm_enigma_archive_7_ambient
							has_ambient_object_flag = bwm_enigma_archive_8_ambient
							has_ambient_object_flag = bwm_enigma_archive_9_ambient
							has_ambient_object_flag = bwm_artifact_doom_ambient
							has_ambient_object_flag = bwm_artifact_doom_fog_1
							has_ambient_object_flag = bwm_artifact_doom_fog_2
						}
					}
					destroy_ambient_object = this
				}
			}
			create_fleet = {
			name = "Psionic Projection"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_beautiful_erasure_country
					create_ship = {
						name = "San'Atana"
						design = "Nir'Rti V"
						prefix = no
					}
					set_location = event_target:bwm_artifact_bomb_0_loc

					fleet_event = { id = bwm_artifact.2 days = 1 }
					
					set_event_locked = yes
				}
			}
			if = {
				limit = {
					NOT = {
						has_star_flag = bwm_artifact_doom_flag
					}
				}
				set_star_flag = bwm_artifact_doom_flag
			}
			if = {
				limit = {
					solar_system = {
						any_neighbor_system = {
							NOR = {
								has_star_flag = bwm_artifact_doom_flag
								any_ship_in_system = {
									is_ship_size = bwm_artifact_cipher_alt
								}
							}
						}
					}
				}
				solar_system = {
					random_neighbor_system = {
						limit = {
							NOR = {
								has_star_flag = bwm_artifact_doom_flag
								any_ship_in_system = {
									is_ship_size = bwm_artifact_cipher_alt
								}
							}
						}
						random_system_planet = {
							limit = {
								is_star = yes
							}
							planet_event = { id = bwm_artifact.9 days = 30 }
						}
					
					}
				}
			}
			else = {
				random_system = {
					limit = {
						NOR = {
							has_star_flag = bwm_artifact_doom_flag
							any_ship_in_system = {
								is_ship_size = bwm_artifact_cipher_alt
							}
						}
						any_neighbor_system = {
							OR = {
								has_star_flag = bwm_artifact_doom_flag
								any_ship_in_system = {
									is_ship_size = bwm_artifact_cipher_alt
								}
							}
						}
					}
					random_system_planet = {
						limit = {
							is_star = yes
						}
						planet_event = { id = bwm_artifact.9 days = 30 }
					}
				}
			}
		}
	}
}

# Cipher 1 Power

country_event = {
	id = bwm_artifact.10
	hide_window = yes
	
	trigger = {
		NOT = {
			has_modifier = bwm_cipher_1_power
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = bwm_artifact_cipher_1
				is_ship_size = bwm_artifact_cipher
			}
		}
	}
	
	immediate = {
		add_modifier = {
			modifier = bwm_cipher_1_power
			days = -1
		}
	}
}

# Cipher 2 Power

country_event = {
	id = bwm_artifact.11
	hide_window = yes
	
	trigger = {
		NOT = {
			has_modifier = bwm_cipher_2_power
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = bwm_artifact_cipher_2
				is_ship_size = bwm_artifact_cipher
			}
		}
	}
	
	immediate = {
		add_modifier = {
			modifier = bwm_cipher_2_power
			days = -1
		}
	}
}

# Cipher 3 Power

country_event = {
	id = bwm_artifact.12
	hide_window = yes
	
	trigger = {
		NOT = {
			has_modifier = bwm_cipher_3_power
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = bwm_artifact_cipher_3
				is_ship_size = bwm_artifact_cipher
			}
		}
	}
	
	immediate = {
		add_modifier = {
			modifier = bwm_cipher_3_power
			days = -1
		}
	}
}

# Full Cipher Power

country_event = {
	id = bwm_artifact.13
	hide_window = yes
	
	trigger = {
		NOT = {
			has_modifier = bwm_cipher_full_power
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = bwm_artifact_cipher_4
				is_ship_size = bwm_artifact_cipher_alt
			}
		}
	}
	
	immediate = {
		add_modifier = {
			modifier = bwm_cipher_full_power
			days = -1
		}
	}
}

# Cipher 1 Lost

country_event = {
	id = bwm_artifact.14
	hide_window = yes
	
	trigger = {
		has_modifier = bwm_cipher_1_power
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = bwm_artifact_cipher_1
					is_ship_size = bwm_artifact_cipher
				}
			}
		}
	}
	
	immediate = {
		remove_modifier = bwm_cipher_1_power
	}
}

# Cipher 2 Lost

country_event = {
	id = bwm_artifact.15
	hide_window = yes
	
	trigger = {
		has_modifier = bwm_cipher_2_power
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = bwm_artifact_cipher_2
					is_ship_size = bwm_artifact_cipher
				}
			}
		}
	}
	
	immediate = {
		remove_modifier = bwm_cipher_2_power
	}
}

# Cipher 3 Lost

country_event = {
	id = bwm_artifact.16
	hide_window = yes
	
	trigger = {
		has_modifier = bwm_cipher_3_power
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = bwm_artifact_cipher_3
					is_ship_size = bwm_artifact_cipher
				}
			}
		}
	}
	
	immediate = {
		remove_modifier = bwm_cipher_3_power
	}
}

# Cipher 4 Lost

country_event = {
	id = bwm_artifact.17
	hide_window = yes
	
	trigger = {
		has_modifier = bwm_cipher_full_power
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = bwm_artifact_cipher_4
					is_ship_size = bwm_artifact_cipher_alt
				}
			}
		}
	}
	
	immediate = {
		remove_modifier = bwm_cipher_full_power
	}
}

# Cipher 1 Activated

ship_event = {
	id = bwm_artifact.18
	hide_window = yes
	
	fire_only_once = yes
	
	mean_time_to_happen = {
		days = 30
	}
	
	trigger ={
		AND = {
			is_ship_size = bwm_artifact_cipher
			OR = {
				has_ship_flag = bwm_artifact_cipher_1
				has_ship_flag = bwm_artifact_cipher_1_locked
			}
		}
		any_system = {
			AND = {
				any_ship_in_system = {
					AND = {
						exists = this
						is_same_value = root
						is_ship_size = bwm_artifact_cipher
						OR = {
							has_ship_flag = bwm_artifact_cipher_1
							has_ship_flag = bwm_artifact_cipher_1_locked
						}
					}
				}
				has_star_flag = bwm_gate_system
			}
		}
		NOR = {
			has_global_flag = bwm_artifact_activation
			has_global_flag = bwm_artifact_awakening 
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = bwm_artifact_cipher_1_former_owner
		}
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			random_system_planet = {
				limit = {
					has_planet_flag = bwm_gate_stone_1
				}
				bwm_effect_explosion_small_1 = yes
				create_ambient_object = {
				type = "bwm_artifact_cipher_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_cipher_1_ambient
				}
			}
		}
		if = {
			limit = {
				has_ship_flag = bwm_artifact_cipher_1
			}
			set_global_flag = Cipher_1_activation
		}
		else = {
			owner = {
				if = {
					limit = {
						NOT = {
							has_country_flag = bwm_artifact_forceful_access_toggle
						}
					}
					set_country_flag = bwm_artifact_forceful_access_toggle
				}
			}
			set_global_flag = Cipher_1_false_activation
		}
		fleet = {
			delete_fleet = this
		}
	}
}

# Cipher 2 Activated

ship_event = {
	id = bwm_artifact.19
	hide_window = yes
	
	fire_only_once = yes
	
	mean_time_to_happen = {
		days = 30
	}
	
	trigger ={
		AND = {
			is_ship_size = bwm_artifact_cipher
			OR = {
				has_ship_flag = bwm_artifact_cipher_2
				has_ship_flag = bwm_artifact_cipher_2_locked
			}
		}
		any_system = {
			AND = {
				any_ship_in_system = {
					AND = {
						exists = this
						is_same_value = root
						is_ship_size = bwm_artifact_cipher
						OR = {
							has_ship_flag = bwm_artifact_cipher_2
							has_ship_flag = bwm_artifact_cipher_2_locked
						}
					}
				}
				has_star_flag = bwm_gate_system
			}
		}
		NOR = {
			has_global_flag = bwm_artifact_activation
			has_global_flag = bwm_artifact_awakening 
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = bwm_artifact_cipher_2_former_owner
		}
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			random_system_planet = {
				limit = {
					has_planet_flag = bwm_gate_stone_2
				}
				bwm_effect_explosion_small_1 = yes
				create_ambient_object = {
				type = "bwm_artifact_cipher_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_cipher_2_ambient
				}
			}
		}
		if = {
			limit = {
				has_ship_flag = bwm_artifact_cipher_2
			}
			set_global_flag = Cipher_2_activation
		}
		else = {
			owner = {
				if = {
					limit = {
						NOT = {
							has_country_flag = bwm_artifact_forceful_access_toggle
						}
					}
					set_country_flag = bwm_artifact_forceful_access_toggle
				}
			}
			set_global_flag = Cipher_2_false_activation
		}
		fleet = {
			delete_fleet = this
		}
	}
}

# Cipher 3 Activated

ship_event = {
	id = bwm_artifact.20
	hide_window = yes
	
	fire_only_once = yes
	
	mean_time_to_happen = {
		days = 30
	}
	
	trigger ={
		AND = {
			is_ship_size = bwm_artifact_cipher
			OR = {
				has_ship_flag = bwm_artifact_cipher_3
				has_ship_flag = bwm_artifact_cipher_3_locked
			}
		}
		any_system = {
			AND = {
				any_ship_in_system = {
					AND = {
						exists = this
						is_same_value = root
						is_ship_size = bwm_artifact_cipher
						OR = {
							has_ship_flag = bwm_artifact_cipher_3
							has_ship_flag = bwm_artifact_cipher_3_locked
						}
					}
				}
				has_star_flag = bwm_gate_system
			}
		}
		NOR = {
			has_global_flag = bwm_artifact_activation
			has_global_flag = bwm_artifact_awakening 
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = bwm_artifact_cipher_3_former_owner
		}
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			random_system_planet = {
				limit = {
					has_planet_flag = bwm_gate_stone_3
				}
				bwm_effect_explosion_small_1 = yes
				create_ambient_object = {
				type = "bwm_artifact_cipher_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_cipher_3_ambient
				}
			}
		}
		if = {
			limit = {
				has_ship_flag = bwm_artifact_cipher_3
			}
			set_global_flag = Cipher_3_activation
		}
		else = {
			owner = {
				if = {
					limit = {
						NOT = {
							has_country_flag = bwm_artifact_forceful_access_toggle
						}
					}
					set_country_flag = bwm_artifact_forceful_access_toggle
				}
			}
			set_global_flag = Cipher_3_false_activation
		}
		fleet = {
			delete_fleet = this
		}
	}
}

# Relic Activation

country_event = {
	id = bwm_artifact.21
	hide_window = yes
	
	fire_only_once = yes
	
	trigger = {
		NOR = {
			has_global_flag = bwm_artifact_awakening 
			has_global_flag = bwm_artifact_activation
		}
		AND = {
			OR = {
				has_global_flag = Cipher_1_activation
				has_global_flag = Cipher_1_false_activation
			}
			OR = {
				has_global_flag = Cipher_2_activation
				has_global_flag = Cipher_2_false_activation
			}
			OR = {
				has_global_flag = Cipher_3_activation
				has_global_flag = Cipher_3_false_activation
			}
		}
	}
	
	mean_time_to_happen = {
		days = 60
	}
	
	immediate = {
		every_country = {
			if = {
				limit = {
					has_event_chain = "bwm_artifact_cipher_chain"
				}
				end_event_chain = "bwm_artifact_cipher_chain"
			}
			if = {
				limit = {
					has_special_project = bwm_GATE_EXPLORE
				}
				abort_special_project = {
					type = "bwm_GATE_EXPLORE"
				}
			}
			if = {
				limit = {
					has_special_project = bwm_RELIC_ACCESS
				}
				abort_special_project = {
					type = "bwm_RELIC_ACCESS"
				}
			}
			if = {
				limit = {
					OR = {
						has_country_flag = bwm_artifact_cipher_1_former_owner
						has_country_flag = bwm_artifact_cipher_2_former_owner
						has_country_flag = bwm_artifact_cipher_3_former_owner
					}
				}
				country_event = { id = bwm_artifact.27 }
			}
		}
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_relic_alt_target
				}
				create_ambient_object = {
				type = "bwm_artifact_relic_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_relic_alt_2_target
				}
				destroy_ambient_object = this
			}
		}
		
		if = {
			limit = {
				AND = {
					has_global_flag = Cipher_1_activation
					has_global_flag = Cipher_2_activation
					has_global_flag = Cipher_3_activation
				}
			}
			set_global_flag = bwm_artifact_activation
			country_event = { id = bwm_artifact.22 days = 60 }
		}
		else = {
			set_global_flag = bwm_artifact_awakening
			country_event = { id = bwm_artifact.54 days = 60 }
		}
	}
}

# Relic Activation - Thunderstorm

country_event = {
	id = bwm_artifact.22
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = bwm_artifact_activation
		NOT = {
			has_global_flag = bwm_artifact_awakening 
		}
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_relic_alt_target
				}
				create_ambient_object = {
				type = "bwm_artifact_relic_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_relic_alt_2_target
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_1_ambient
				}
				create_ambient_object = {
				type = "bwm_artifact_cipher_ambient_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_cipher_1_ambient_alt
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_2_ambient
				}
				create_ambient_object = {
				type = "bwm_artifact_cipher_ambient_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_cipher_2_ambient_alt
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_3_ambient
				}
				create_ambient_object = {
				type = "bwm_artifact_cipher_ambient_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_cipher_3_ambient_alt
				}
				destroy_ambient_object = this
			}
			create_ambient_object = {
			type = "bwm_cloud_ambient_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:bwm_artifact_relic_loc
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = bwm_gate_system_storm
			}
		}
		country_event = { id = bwm_artifact.62 days = 60 }
	}
}

#Cipher Auto Repair

ship_event = {
	id = bwm_artifact.23
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_ship_size = bwm_artifact_cipher
			is_ship_size = bwm_artifact_cipher_alt
		}
	}
	
	immediate = {
		this = {
			bwm_effect_explosion_small_1 = yes
		}
		owner = {
			capital_scope = {
				save_event_target_as = bwm_artifact_cipher_escape
			}
		}
		set_disabled = no
		repair_ship = yes
		if = {
			limit = {
				NOT = {
					has_modifier = bwm_artifact_ship_booster
				}
			}
			add_modifier = {
				modifier = "bwm_artifact_ship_booster"
				days = 30
			}
		}
		fleet = {
			set_location = event_target:bwm_artifact_cipher_escape
			clear_orders = yes 
		}
	}
}

#Galaxy Buster - Remote Trigger

country_event = {
	id = bwm_artifact.24
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_global_flag = bwm_artifact_endtime
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_owned_ship = {
					is_ship_size = bwm_artifact_relic_frame
				}
			}
			random_system = {
				limit = {
					any_ship_in_system = {
						is_ship_size = bwm_artifact_relic_frame
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = bwm_artifact_doom_start_system
					planet_event = { id = bwm_artifact.9 days = 1 }
				}
				if = {
					limit = {
						exists = space_owner
						space_owner = {
							AND = {
								OR = {
									is_country_type = default
									is_country_type = fallen_empire
									is_country_type = awakened_fallen_empire
								}
								NOT = {
									is_country = ROOT
								}
							}
						}
					}
					space_owner = {
						add_opinion_modifier = { who = ROOT modifier = bwm_artifact_bomb_1_victim }
						if = {
							limit = {
								NOT = {
									is_at_war_with = ROOT
								}
							}
							add_casus_belli = {
								type = bwm_cb_stop_atrocity
								who = event_target:bwm_artifact_bomb_2_owner
								days = 720
							}
							declare_war = {
								target = ROOT
								attacker_war_goal = "bwm_wg_end_threat_atrocity"
							}
						}
					}
				}
			}
			every_owned_ship = {
				limit = {
					is_ship_size = bwm_artifact_relic_frame
				}
				fleet = {
					destroy_fleet = THIS
				}
			}
			every_country = {
				limit = {
					NOT = {
						is_country = ROOT 
					}
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
				add_opinion_modifier = {
					modifier = opinion_doomed_us_all
					who = ROOT
				}
			}
			every_country = {
				limit = {
					is_ai = no
				}
				country_event = { id = bwm_artifact.28 days = 5 }
			}
			set_global_flag = bwm_artifact_endtime
			add_threat = {
				who = root
				amount = 100
			}
		}
	}
}

#Galaxy Buster - Relic destroyed

country_event = {
	id = bwm_artifact.25
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_global_flag = bwm_artifact_endtime
		}
		FROMFROMFROM = {
			is_ship_size = bwm_artifact_relic_frame
		}
	}
	
	immediate = {
		FROMFROMFROM = {
			owner = {
				save_event_target_as = bwm_artifact_endtime_owner
			}
		}
		if = {
			limit = {
				NOT = {
					has_global_flag = bwm_artifact_endtime
				}
			}
			FROMFROM = {
				solar_system = {
					random_system_planet = {
						limit = {
							is_star = yes
						}
						save_event_target_as = bwm_artifact_doom_start_system
						planet_event = { id = bwm_artifact.9 days = 1 }
					}
					if = {
						limit = {
							exists = space_owner
							space_owner = {
								AND = {
									OR = {
										is_country_type = default
										is_country_type = fallen_empire
										is_country_type = awakened_fallen_empire
									}
									NOT = {
										is_country = event_target:bwm_artifact_endtime_owner
									}
								}
							}
						}
						space_owner = {
							add_opinion_modifier = { who = event_target:bwm_artifact_endtime_owner modifier = bwm_artifact_bomb_1_victim }
							if = {
								limit = {
									NOT = {
										is_at_war_with = event_target:bwm_artifact_endtime_owner
									}
								}
								add_casus_belli = {
									type = bwm_cb_stop_atrocity
									who = event_target:bwm_artifact_bomb_2_owner
									days = 720
								}
								declare_war = {
									target = event_target:bwm_artifact_endtime_owner
									attacker_war_goal = "bwm_wg_end_threat_atrocity"
								}
							}
						}
					}
				}
			}
			every_country = {
				limit = {
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
				add_opinion_modifier = {
					modifier = opinion_doomed_us_all
					who = event_target:bwm_artifact_endtime_owner
				}
			}
			every_country = {
				limit = {
					is_ai = no
				}
				country_event = { id = bwm_artifact.28 days = 5 }
			}
			set_global_flag = bwm_artifact_endtime
			add_threat = {
				who = event_target:bwm_artifact_endtime_owner
				amount = 100
			}
		}
	}
}

#Cipher activation notify

country_event = {
	id = bwm_artifact.27
	title = "bwm_artifact.27.name"
	desc = "bwm_artifact.27.desc"
	picture = GFX_evt_star_pulsar
	location = event_target:bwm_artifact_relic_loc
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_cipher_activation_notify
		}
	}
	
	immediate = {
		set_country_flag = bwm_artifact_cipher_activation_notify
	}
	
	option = {
		name = "bwm_artifact.27.a"
	}
}

#Cipher activation notify

country_event = {
	id = bwm_artifact.28
	title = "bwm_artifact.28.name"
	desc = "bwm_artifact.28.desc"
	picture = GFX_evt_wormhole
	location = event_target:bwm_artifact_doom_start_system
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_doom_notify
		}
	}
	
	immediate = {
		set_country_flag = bwm_artifact_doom_notify
	}
	
	option = {
		name = "bwm_artifact.28.a"
	}
}

# Psionic Resonance Shock

country_event = {
	id = bwm_artifact.29
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			OR = {
				is_ship_size = bwm_artifact_ship
				has_ship_flag = bwm_artifact_prototype
			}
		}
	}
	
	immediate = {
		this = {
			save_event_target_as = bwm_artifact_victim_owner
		}
		FROMFROMFROM = {
			if = {
				limit = {
					exists = this
				}
				random_list = {
					75 = {
						this = {
							save_event_target_as = bwm_artifact_victim_3_destroyer
						}
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no 
								is_boss = yes
							}
							effect = {
								set_owner = event_target:bwm_artifact_victim_owner
								create_ship = {
									name = "Cap'Ala"
									design = "Dh'Vani III"
									prefix = no
								}
								set_location = event_target:bwm_artifact_victim_3_destroyer

								fleet_event = { id = bwm_artifact.2 days = 1 }
								
								set_event_locked = yes
							}
						}
					}
					25 = {
						this = {
							solar_system = {
								random_system_planet = {
									if = {
										limit = {
											NOT = {
												has_planet_flag = bwm_artifact_shroudborn_accident
											}
											is_star = yes
										}
										save_event_target_as = bwm_artifact_shroudborn_accident_loc
										bwm_effect_explosion_AOE = yes
										event_target:bwm_artifact_victim_owner = {
											country_event = { id = bwm_artifact.30 }
										}
										prevprev.owner = {
											if = {
												limit = {
													is_ai = no
												}
												country_event = { id = bwm_artifact.31 }
											}
										}
										planet_event = { id = bwm_artifact.400 }
										set_timed_planet_flag = {
											flag = bwm_artifact_shroudborn_accident
											days = 30
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

#Victim Notify

country_event = {
	id = bwm_artifact.30
	title = "bwm_artifact.30.name"
	desc = "bwm_artifact.30.desc"
	picture = GFX_evt_exploding_ship
	location = event_target:bwm_artifact_shroudborn_accident_loc
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_shroudborn_victim_notify
		}
	}
	
	immediate = {
		set_country_flag = bwm_artifact_shroudborn_victim_notify
	}
	
	option = {
		name = TERRIBLE
	}
}

#Attacker Notify

country_event = {
	id = bwm_artifact.31
	title = "bwm_artifact.31.name"
	desc = "bwm_artifact.31.desc"
	picture = GFX_evt_exploding_ship
	location = event_target:bwm_artifact_shroudborn_accident_loc
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_shroudborn_attacker_notify
		}
	}
	
	immediate = {
		set_country_flag = bwm_artifact_shroudborn_attacker_notify
	}
	
	option = {
		name = BATTLESTATIONS
	}
}

# Harmonizer Remote Trigger

country_event = {
	id = bwm_artifact.32
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		if = {
			limit = {
				any_owned_ship = {
					is_ship_size = bwm_artifact_bomb_2
				}
			}
			this = {
				save_event_target_as = bwm_artifact_bomb_2_owner_remote
			}
			every_owned_ship = {
				limit = {
					is_ship_size = bwm_artifact_bomb_2
				}
				solar_system = {
					random_system_planet = {
						limit = {
							is_star = yes
						}
						planet_event = { id = bwm_artifact.3 days = 1 }
					}
					if = {
						limit = {
							exists = space_owner
							space_owner = {
								AND = {
									OR = {
										is_country_type = default
										is_country_type = fallen_empire
										is_country_type = awakened_fallen_empire
									}
									NOT = {
										is_country = event_target:bwm_artifact_bomb_2_owner_remote
									}
								}
							}
						}
						space_owner = {
							add_opinion_modifier = { who = event_target:bwm_artifact_bomb_2_owner_remote modifier = bwm_artifact_bomb_1_victim }
							if = {
								limit = {
									NOT = {
										is_at_war_with = event_target:bwm_artifact_bomb_2_owner_remote
									}
								}
								add_casus_belli = {
									type = bwm_cb_stop_atrocity
									who = event_target:bwm_artifact_bomb_2_owner
									days = 720
								}
								declare_war = {
									target = event_target:bwm_artifact_bomb_2_owner_remote
									attacker_war_goal = "bwm_wg_end_threat_atrocity"
								}
							}
						}
					}
				}
				fleet = {
					destroy_fleet = THIS
				}
			}
			every_country = {
				limit = {
					has_communications = event_target:bwm_artifact_bomb_2_owner_remote
					AND = {
						NOR = {
							is_country = event_target:bwm_artifact_bomb_2_owner_remote
							has_ai_personality_behaviour = purger
						}
						OR = {
							is_country_type = default
							has_ai_personality = awakened_fallen_empire_xenophile				
						}
					}	
				}
				add_opinion_modifier = { who = event_target:bwm_artifact_bomb_2_owner_remote modifier = opinion_genocidal }
			}
			add_threat = {
				who = event_target:bwm_artifact_bomb_2_owner_remote
				amount = 10
			}
		}
		else = {
			country_event = { id = bwm_artifact.34 }
		}
	}
}

# Starbreaker Remote Trigger

country_event = {
	id = bwm_artifact.33
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		if = {
			limit = {
				any_owned_ship = {
					is_ship_size = bwm_artifact_bomb_1
				}
			}
			this = {
				save_event_target_as = bwm_artifact_bomb_1_owner_remote
			}
			every_owned_ship = {
				limit = {
					is_ship_size = bwm_artifact_bomb_1
				}
				solar_system = {
					random_system_planet = {
						limit = {
							is_star = yes
						}
						planet_event = { id = bwm_artifact.4 days = 1 }
					}
					if = {
						limit = {
							exists = space_owner
							space_owner = {
								AND = {
									OR = {
										is_country_type = default
										is_country_type = fallen_empire
										is_country_type = awakened_fallen_empire
									}
									NOT = {
										is_country = event_target:bwm_artifact_bomb_1_owner_remote
									}
								}
							}
						}
						space_owner = {
							add_opinion_modifier = { who = event_target:bwm_artifact_bomb_1_owner_remote modifier = bwm_artifact_bomb_1_victim }
							if = {
								limit = {
									NOT = {
										is_at_war_with = event_target:bwm_artifact_bomb_1_owner_remote
									}
								}
								add_casus_belli = {
									type = bwm_cb_stop_atrocity
									who = event_target:bwm_artifact_bomb_2_owner
									days = 720
								}
								declare_war = {
									target = event_target:bwm_artifact_bomb_1_owner_remote
									attacker_war_goal = "bwm_wg_end_threat_atrocity"
								}
							}
						}
					}
				}
				fleet = {
					destroy_fleet = THIS
				}
			}
			every_country = {
				limit = {
					has_communications = event_target:bwm_artifact_bomb_1_owner_remote
					AND = {
						NOR = {
							is_country = event_target:bwm_artifact_bomb_1_owner_remote
							has_ai_personality_behaviour = purger
						}
						OR = {
							is_country_type = default
							has_ai_personality = awakened_fallen_empire_xenophile				
						}	
					}
				}
				add_opinion_modifier = { who = event_target:bwm_artifact_bomb_1_owner_remote modifier = opinion_genocidal }
			}
			add_threat = {
				who = event_target:bwm_artifact_bomb_1_owner_remote
				amount = 10
			}
		}
		else = {
			country_event = { id = bwm_artifact.35 }
		}
	}
}

country_event = {
	id = bwm_artifact.34
	title = "bwm_artifact.34.name"
	desc = "bwm_artifact.34.desc"
	picture = GFX_evt_throne_room
	location = event_target:bwm_artifact_bomb_2_owner_remote_home
	
	is_triggered_only = yes

	option = {
		name = OOPS
	}
}

country_event = {
	id = bwm_artifact.35
	title = "bwm_artifact.35.name"
	desc = "bwm_artifact.35.desc"
	picture = GFX_evt_throne_room
	location = event_target:bwm_artifact_bomb_1_owner_remote_home
	
	is_triggered_only = yes

	option = {
		name = OOPS
	}
}

#Remote Trigger Init - Harmonizer

ship_event = {
	id = bwm_artifact.36
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = {
				has_special_project = bwm_ARTIFACT_HARMONIZER_TRIGGER
			}
		}
		is_ship_size = bwm_artifact_bomb_2
	}
	
	immediate = {
		owner = {
			save_event_target_as = bwm_artifact_bomb_2_project_owner
			capital_scope = {
				save_event_target_as = bwm_artifact_bomb_2_project_home
			}
		}
		enable_special_project = {
			name = "bwm_ARTIFACT_HARMONIZER_TRIGGER"
			location = event_target:bwm_artifact_bomb_2_project_home
			owner = event_target:bwm_artifact_bomb_2_project_owner
		}
	}
}

#Remote Trigger Init - Starbreaker

ship_event = {
	id = bwm_artifact.37
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = {
				has_special_project = bwm_ARTIFACT_STARBREAKER_TRIGGER
			}
		}
		is_ship_size = bwm_artifact_bomb_1
	}
	
	immediate = {
		owner = {
			save_event_target_as = bwm_artifact_bomb_1_project_owner
			capital_scope = {
				save_event_target_as = bwm_artifact_bomb_1_project_home
			}
		}
		enable_special_project = {
			name = "bwm_ARTIFACT_STARBREAKER_TRIGGER"
			location = event_target:bwm_artifact_bomb_1_project_home
			owner = event_target:bwm_artifact_bomb_1_project_owner
		}
	}
}

#Entering System

ship_event = {
	id = bwm_artifact.50
	title = "bwm_artifact.50.name"
	desc = "bwm_artifact.50.desc"
	picture = GFX_evt_ship_in_orbit
	location = FROM
	
	is_triggered_only = yes
	
	fire_only_once = yes

	trigger = {
	    NOR = {
			has_global_flag = bwm_artifact_activation
			has_global_flag = bwm_artifact_awakening 
		}
		owner = {
			is_ai = no
			NOT = {
				has_country_flag = encountered_bwm_artifact 
			}
		}
		FROM = {
			has_star_flag = bwm_gate_system
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = encountered_bwm_artifact
			set_timed_country_flag = {
				flag = encountered_bwm_artifact_delay  days = 30 
			}
		}
		every_country = {
			if = {
				limit = {
					has_event_chain = "bwm_lex_gate_chain" 
				}
				end_event_chain = "bwm_lex_gate_chain"
			}
		}
	}		
	
	option = {
		name = "bwm_artifact.50.a"
	}
}

#Sensor Calibration

ship_event = {
	id = bwm_artifact.51
	title = "bwm_artifact.51.name"
	desc = "bwm_artifact.51.desc"
	picture = GFX_evt_gas_giant
	location = THIS
	
	fire_only_once = yes

	trigger = {
		NOR = {
			has_global_flag = bwm_artifact_activation
			has_global_flag = bwm_artifact_awakening 
		}
		owner = {
			is_ai = no
			has_country_flag = encountered_bwm_artifact
			NOR = {
				has_country_flag = bwm_artifact_sensor_calibrate
				has_country_flag = encountered_bwm_artifact_delay
				has_special_project = bwm_GATE_EXPLORE
			}
		}
		any_system = {
			AND = {
				has_star_flag = bwm_gate_system
				any_ship_in_system = {
					exists = this
					owner = {
						is_same_value = root.owner
						has_technology = "tech_sensors_4"
					}
					is_ship_class = shipclass_science_ship
				}
			}
		}
	}
	
	mean_time_to_happen = {
		days = 90
	}
	
	immediate = {
		owner = {
			set_country_flag = bwm_artifact_sensor_calibrate
		}
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_gate_starbase
				}
				save_event_target_as = bwm_gate_starbase_loc
			}
		}
	}
	
	option = {
		name = "bwm_artifact.51.a"
		event_target:bwm_gate_starbase_loc = {
			enable_special_project = {
				name = "bwm_GATE_EXPLORE"
				location = THIS
				owner = ROOT
			}
		}
	}
}

#Station Explored - Choice

ship_event = {
	id = bwm_artifact.52
	title = "bwm_artifact.52.name"
	desc = "bwm_artifact.52.desc"
	picture = GFX_evt_space_station
	location = THIS
	
	is_triggered_only = yes
	
	trigger = {
		NOR = {
			has_global_flag = bwm_artifact_activation
			has_global_flag = bwm_artifact_awakening 
		}
		owner = {
			NOT = {
				has_country_flag = bwm_artifact_station_expedition
			}
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_relic_alt_target
				}
				save_event_target_as = bwm_artifact_relic_explore
			}
		}
		owner = {
			set_country_flag = bwm_artifact_station_expedition
		}
	}
	
	option = {
		name = bwm_artifact.52.a
		hidden_effect = {
			if = {
				limit = {
					NOR = {
						has_global_flag = bwm_cipher_1_seed
						any_system = {
							OR = {
								has_star_flag = bwm_cipher_1_system
								has_star_flag = bwm_cipher_1_system_spawn
							}
						}
					}
				}
				random_system = {
					limit = {
						NOR = {
							has_star_flag = bwm_cipher_1_system
							has_star_flag = bwm_cipher_2_system
							has_star_flag = bwm_cipher_3_system
							has_star_flag = bwm_grave_system
							has_star_flag = bwm_garden_system
							has_star_flag = bwm_prison_system
							has_star_flag = bwm_gate_system
							has_star_flag = bwm_system_spawn_1
							has_star_flag = bwm_system_spawn_2
							has_star_flag = bwm_system_spawn_3
							has_star_flag = bwm_system_spawn_4
							has_star_flag = bwm_system_spawn_5
							has_star_flag = bwm_cipher_1_system_spawn
							has_star_flag = bwm_cipher_2_system_spawn
							has_star_flag = bwm_cipher_3_system_spawn
						}
					}
					spawn_system = {
						min_distance = 30
						max_distance = 60
						initializer = "bwm_cipher_1"
					}
					set_star_flag = bwm_cipher_1_system_spawn
				}
				set_global_flag = bwm_cipher_1_seed
			}
			if = {
				limit = {
					NOR = {
						has_global_flag = bwm_cipher_2_seed
						any_system = {
							OR = {
								has_star_flag = bwm_cipher_2_system
								has_star_flag = bwm_cipher_2_system_spawn
							}
						}
					}
				}
				random_system = {
					limit = {
						NOR = {
							has_star_flag = bwm_cipher_1_system
							has_star_flag = bwm_cipher_2_system
							has_star_flag = bwm_cipher_3_system
							has_star_flag = bwm_grave_system
							has_star_flag = bwm_garden_system
							has_star_flag = bwm_prison_system
							has_star_flag = bwm_gate_system
							has_star_flag = bwm_system_spawn_1
							has_star_flag = bwm_system_spawn_2
							has_star_flag = bwm_system_spawn_3
							has_star_flag = bwm_system_spawn_4
							has_star_flag = bwm_system_spawn_5
							has_star_flag = bwm_cipher_1_system_spawn
							has_star_flag = bwm_cipher_2_system_spawn
							has_star_flag = bwm_cipher_3_system_spawn
						}
					}
					spawn_system = {
						min_distance = 30
						max_distance = 60
						initializer = "bwm_cipher_2"
					}
					set_star_flag = bwm_cipher_2_system_spawn
				}
				set_global_flag = bwm_cipher_2_seed
			}
			if = {
				limit = {
					NOR = {
						has_global_flag = bwm_cipher_3_seed
						any_system = {
							OR = {
								has_star_flag = bwm_cipher_3_system
								has_star_flag = bwm_cipher_3_system_spawn
							}
						}
					}
				}
				random_system = {
					limit = {
						NOR = {
							has_star_flag = bwm_cipher_1_system
							has_star_flag = bwm_cipher_2_system
							has_star_flag = bwm_cipher_3_system
							has_star_flag = bwm_grave_system
							has_star_flag = bwm_garden_system
							has_star_flag = bwm_prison_system
							has_star_flag = bwm_gate_system
							has_star_flag = bwm_system_spawn_1
							has_star_flag = bwm_system_spawn_2
							has_star_flag = bwm_system_spawn_3
							has_star_flag = bwm_system_spawn_4
							has_star_flag = bwm_system_spawn_5
							has_star_flag = bwm_cipher_1_system_spawn
							has_star_flag = bwm_cipher_2_system_spawn
							has_star_flag = bwm_cipher_3_system_spawn
						}
					}
					spawn_system = {
						min_distance = 30
						max_distance = 60
						initializer = "bwm_cipher_3"
					}
					set_star_flag = bwm_cipher_3_system_spawn
				}
				set_global_flag = bwm_cipher_3_seed
			}
		}
		if = {
			limit = {
				NOT = {
					owner = {
						has_event_chain = "bwm_artifact_cipher_chain"
					}
				}
			}
			begin_event_chain = {
			event_chain = "bwm_artifact_cipher_chain"
			target = ROOT
			}
			random_system = {
				limit = {
					has_star_flag = bwm_cipher_1_system
				}
				save_event_target_as = bwm_cipher_1_poi
			}
			create_point_of_interest = {
				id = bwm_artifact_cipher_poi.1
				name = "bwm_artifact_cipher_1_poi"
				desc = "bwm_artifact_cipher_1_poi_desc"
				event_chain = bwm_artifact_cipher_chain
				location = event_target:bwm_cipher_1_poi
			}
			random_system = {
				limit = {
					has_star_flag = bwm_cipher_2_system
				}
				save_event_target_as = bwm_cipher_2_poi
			}
			create_point_of_interest = {
				id = bwm_artifact_cipher_poi.2
				name = "bwm_artifact_cipher_2_poi"
				desc = "bwm_artifact_cipher_2_poi_desc"
				event_chain = bwm_artifact_cipher_chain
				location = event_target:bwm_cipher_2_poi
			}
			random_system = {
				limit = {
					has_star_flag = bwm_cipher_3_system
				}
				save_event_target_as = bwm_cipher_3_poi
			}
			create_point_of_interest = {
				id = bwm_artifact_cipher_poi.3
				name = "bwm_artifact_cipher_3_poi"
				desc = "bwm_artifact_cipher_3_poi_desc"
				event_chain = bwm_artifact_cipher_chain
				location = event_target:bwm_cipher_3_poi
			}
		}
	}
	
	option = {
		name = bwm_artifact.52.b
		event_target:bwm_artifact_relic_explore = {
			enable_special_project = {
				name = "bwm_RELIC_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}
}

#Relic Forceful Access - Choice

ship_event = {
	id = bwm_artifact.53
	title = "bwm_artifact.53"
	desc = "bwm_artifact.53.desc"
	picture = GFX_evt_physics_research
	location = THIS
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = {
				has_country_flag = bwm_artifact_forceful_access_toggle
			}
		}
		NOR = {
			has_global_flag = bwm_artifact_activation
			has_global_flag = bwm_artifact_awakening 
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = bwm_artifact_forceful_access_toggle
		}
	}
	
	option = {
		name = bwm_artifact.53.a
		hidden_effect = {
			if = {
				limit = {
					NOR = {
						has_global_flag = bwm_cipher_1_seed
						any_system = {
							OR = {
								has_star_flag = bwm_cipher_1_system
								has_star_flag = bwm_cipher_1_system_spawn
							}
						}
					}
				}
				random_system = {
					limit = {
						NOR = {
							has_star_flag = bwm_cipher_1_system
							has_star_flag = bwm_cipher_2_system
							has_star_flag = bwm_cipher_3_system
							has_star_flag = bwm_grave_system
							has_star_flag = bwm_garden_system
							has_star_flag = bwm_prison_system
							has_star_flag = bwm_gate_system
							has_star_flag = bwm_system_spawn_1
							has_star_flag = bwm_system_spawn_2
							has_star_flag = bwm_system_spawn_3
							has_star_flag = bwm_system_spawn_4
							has_star_flag = bwm_system_spawn_5
							has_star_flag = bwm_cipher_1_system_spawn
							has_star_flag = bwm_cipher_2_system_spawn
							has_star_flag = bwm_cipher_3_system_spawn
						}
					}
					spawn_system = {
						min_distance = 30
						max_distance = 60
						initializer = "bwm_cipher_1"
					}
					set_star_flag = bwm_cipher_1_system_spawn
				}
				set_global_flag = bwm_cipher_1_seed
			}
			if = {
				limit = {
					NOR = {
						has_global_flag = bwm_cipher_2_seed
						any_system = {
							OR = {
								has_star_flag = bwm_cipher_2_system
								has_star_flag = bwm_cipher_2_system_spawn
							}
						}
					}
				}
				random_system = {
					limit = {
						NOR = {
							has_star_flag = bwm_cipher_1_system
							has_star_flag = bwm_cipher_2_system
							has_star_flag = bwm_cipher_3_system
							has_star_flag = bwm_grave_system
							has_star_flag = bwm_garden_system
							has_star_flag = bwm_prison_system
							has_star_flag = bwm_gate_system
							has_star_flag = bwm_system_spawn_1
							has_star_flag = bwm_system_spawn_2
							has_star_flag = bwm_system_spawn_3
							has_star_flag = bwm_system_spawn_4
							has_star_flag = bwm_system_spawn_5
							has_star_flag = bwm_cipher_1_system_spawn
							has_star_flag = bwm_cipher_2_system_spawn
							has_star_flag = bwm_cipher_3_system_spawn
						}
					}
					spawn_system = {
						min_distance = 30
						max_distance = 60
						initializer = "bwm_cipher_2"
					}
					set_star_flag = bwm_cipher_2_system_spawn
				}
				set_global_flag = bwm_cipher_2_seed
			}
			if = {
				limit = {
					NOR = {
						has_global_flag = bwm_cipher_3_seed
						any_system = {
							OR = {
								has_star_flag = bwm_cipher_3_system
								has_star_flag = bwm_cipher_3_system_spawn
							}
						}
					}
				}
				random_system = {
					limit = {
						NOR = {
							has_star_flag = bwm_cipher_1_system
							has_star_flag = bwm_cipher_2_system
							has_star_flag = bwm_cipher_3_system
							has_star_flag = bwm_grave_system
							has_star_flag = bwm_garden_system
							has_star_flag = bwm_prison_system
							has_star_flag = bwm_gate_system
							has_star_flag = bwm_system_spawn_1
							has_star_flag = bwm_system_spawn_2
							has_star_flag = bwm_system_spawn_3
							has_star_flag = bwm_system_spawn_4
							has_star_flag = bwm_system_spawn_5
							has_star_flag = bwm_cipher_1_system_spawn
							has_star_flag = bwm_cipher_2_system_spawn
							has_star_flag = bwm_cipher_3_system_spawn
						}
					}
					spawn_system = {
						min_distance = 30
						max_distance = 60
						initializer = "bwm_cipher_3"
					}
					set_star_flag = bwm_cipher_3_system_spawn
				}
				set_global_flag = bwm_cipher_3_seed
			}
		}
		if = {
			limit = {
				NOT = {
					owner = {
						has_event_chain = "bwm_artifact_cipher_chain"
					}
				}
			}
			begin_event_chain = {
			event_chain = "bwm_artifact_cipher_chain"
			target = ROOT
			}
			random_system = {
				limit = {
					has_star_flag = bwm_cipher_1_system
				}
				save_event_target_as = bwm_cipher_1_poi
			}
			create_point_of_interest = {
				id = bwm_artifact_cipher_poi.1
				name = "bwm_artifact_cipher_1_poi"
				desc = "bwm_artifact_cipher_1_poi_desc"
				event_chain = bwm_artifact_cipher_chain
				location = event_target:bwm_cipher_1_poi
			}
			random_system = {
				limit = {
					has_star_flag = bwm_cipher_2_system
				}
				save_event_target_as = bwm_cipher_2_poi
			}
			create_point_of_interest = {
				id = bwm_artifact_cipher_poi.2
				name = "bwm_artifact_cipher_2_poi"
				desc = "bwm_artifact_cipher_2_poi_desc"
				event_chain = bwm_artifact_cipher_chain
				location = event_target:bwm_cipher_2_poi
			}
			random_system = {
				limit = {
					has_star_flag = bwm_cipher_3_system
				}
				save_event_target_as = bwm_cipher_3_poi
			}
			create_point_of_interest = {
				id = bwm_artifact_cipher_poi.3
				name = "bwm_artifact_cipher_3_poi"
				desc = "bwm_artifact_cipher_3_poi_desc"
				event_chain = bwm_artifact_cipher_chain
				location = event_target:bwm_cipher_3_poi
			}
		}
	}

	option = {
		name = bwm_artifact.53.b
		hidden_effect = {
			random_system = {
				limit = {
					has_star_flag = bwm_gate_system
				}
				every_system_ambient_object = {
					limit = {
						has_ambient_object_flag = bwm_artifact_relic_alt_target
					}
					create_ambient_object = {
					type = "bwm_artifact_relic_alt_2_object"
					}
					last_created_ambient_object = {
						set_location = {
							target = this
							distance = 0
							angle = 0
						}
						set_ambient_object_flag = bwm_artifact_relic_alt_2_target
					}
					destroy_ambient_object = this
				}
			}
			every_country = {
				if = {
					limit = {
						has_event_chain = "bwm_artifact_cipher_chain"
					}
					end_event_chain = "bwm_artifact_cipher_chain"
				}
				if = {
					limit = {
						has_special_project = bwm_GATE_EXPLORE
					}
					abort_special_project = {
						type = "bwm_GATE_EXPLORE"
					}
				}
				if = {
					limit = {
						has_special_project = bwm_RELIC_ACCESS
					}
					abort_special_project = {
						type = "bwm_RELIC_ACCESS"
					}
				}
			}
			owner = {
				country_event = { id = bwm_artifact.54 days = 60 }
			}
			set_global_flag = bwm_artifact_awakening
		}
	}
}

#Enable Storm Clouds

country_event = {
	id = bwm_artifact.54
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = bwm_artifact_awakening 
		NOT = {
			has_global_flag = bwm_artifact_activation
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_alt_ward_1
				}
				create_ambient_object = {
				type = "bwm_artifact_station_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_alt_2_ward_1
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object= {
				limit = {
					has_ambient_object_flag = bwm_artifact_alt_ward_2
				}
				create_ambient_object = {
				type = "bwm_artifact_station_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_alt_2_ward_2
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_alt_ward_3
				}
				create_ambient_object = {
				type = "bwm_artifact_station_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_alt_2_ward_3
				}
				destroy_ambient_object = this
			}
			create_ambient_object = {
			type = "bwm_cloud_ambient_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:bwm_artifact_relic_loc
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = bwm_gate_system_storm
			}
		}
		country_event = { id = bwm_artifact.55 days = 60 }
	}
}

#Boss Encounter Spawn

country_event = {
	id = bwm_artifact.55
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = bwm_artifact_awakening
		NOT = {
			has_global_flag = bwm_artifact_activation
		}
	}
	
	immediate = {
		create_country = {
			name = "The Lament"
			type = bwm_gate_guardian
			flag = {
				icon = {
					category = "spherical"
					file = "flag_spherical_11.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"dark_purple"
					"dark_purple"
					"null"
					"null"
				}
			}
			effect = {
				if = {
					limit = {
						NOT = {
							has_modifier = bwm_gate_power
						}
					}
					add_modifier = {
						modifier = bwm_gate_power
						days = -1
					}
				}
				if = {
					limit = {
						has_global_flag = Cipher_1_false_activation
					}
					add_modifier = {
						modifier = bwm_gate_1_extra_power
						days = -1
					}
				}
				if = {
					limit = {
						has_global_flag = Cipher_2_false_activation
					}
					add_modifier = {
						modifier = bwm_gate_2_extra_power
						days = -1
					}
				}
				if = {
					limit = {
						has_global_flag = Cipher_3_false_activation
					}
					add_modifier = {
						modifier = bwm_gate_3_extra_power
						days = -1
					}
				}
				save_global_event_target_as = bwm_gate_country
				set_country_flag = bwm_gate_country
				#guardian_difficulty = yes
			}
		}
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			set_star_flag = bwm_gate_snare_1
			set_star_flag = bwm_gate_snare_2
			set_star_flag = bwm_gate_snare_3
			every_fleet_in_system = {
				if = {
					limit = {
						exists = this
						NOT = {
							owner = {
								has_country_flag = bwm_gate_country
								is_country_type = bwm_gate_guardian
							}
							is_ship_class = shipclass_starbase
							is_ship_class = shipclass_research_station
							is_ship_class = shipclass_mining_station
						}
					}
					set_location = event_target:bwm_artifact_relic_loc
					add_modifier = {
						modifier = "bwm_artifact_fleet_snare"
						days = 360
					}
				}
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_relic_alt_2_target
				}
				bwm_effect_explosion_AOE = yes
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_alt_2_ward_1
				}
				save_event_target_as = bwm_artifact_alt_ward_1_loc
			}
			every_system_ambient_object= {
				limit = {
					has_ambient_object_flag = bwm_artifact_alt_2_ward_2
				}
				save_event_target_as = bwm_artifact_alt_ward_2_loc
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_alt_2_ward_3
				}
				save_event_target_as = bwm_artifact_alt_ward_3_loc
			}
			create_fleet = {
				name = "Shroudward"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_gate_country
					create_ship = {
						name = "An'Tu"
						design = "Var'Utr"
						prefix = no
						
						effect = {
							set_disable_at_health = 0.05	
							set_ship_flag = bwm_artifact_ward_1
						}
					}
					set_location = event_target:bwm_artifact_alt_ward_1_loc
				}
			}
			create_fleet = {
				name = "Shroudward"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_gate_country
					create_ship = {
						name = "Go'Pa"
						design = "Var'Utr"
						prefix = no
						
						effect = {
							set_disable_at_health = 0.05	
							set_ship_flag = bwm_artifact_ward_2
						}
					}
					set_location = event_target:bwm_artifact_alt_ward_2_loc
				}
			}
			create_fleet = {
				name = "Shroudward"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_gate_country
					create_ship = {
						name = "Pa'Ra"
						design = "Var'Utr"
						prefix = no
						
						effect = {
							set_disable_at_health = 0.05
							set_ship_flag = bwm_artifact_ward_3
						}
					}
					set_location = event_target:bwm_artifact_alt_ward_3_loc
				}
			}
			every_system_ambient_object = {
				limit = {
					OR = {
						has_ambient_object_flag = bwm_artifact_alt_2_ward_1
						has_ambient_object_flag = bwm_artifact_alt_2_ward_2
						has_ambient_object_flag = bwm_artifact_alt_2_ward_3
					}
				}
				destroy_ambient_object = this
			}
		}
		every_country = {
			limit = {
				is_ai = no
			}
			if = {
				limit = {
					has_country_flag = bwm_artifact_forceful_access_toggle
				}
				country_event = { id = bwm_artifact.65 }
			}
			establish_communications_no_message = event_target:bwm_gate_country
		}
	}
}

#Boss Encounter Snare

fleet_event = {
	id = bwm_artifact.56
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			has_star_flag = bwm_gate_system
			OR = {
				has_star_flag = bwm_gate_snare_1
				has_star_flag = bwm_gate_snare_2
				has_star_flag = bwm_gate_snare_3
			}
		}
	}
	
	immediate = {
		set_location = event_target:bwm_artifact_relic_loc
		add_modifier = {
			modifier = "bwm_artifact_fleet_snare"
			days = 360
		}
	}
}

#Tower Destroyed - Spawn Avatar & Interrupt Snare

ship_event = {
	id = bwm_artifact.57
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_ship_size = bwm_artifact_station
		OWNER = {
			is_country_type = bwm_gate_guardian
			has_country_flag = bwm_gate_country
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_relic_alt_2_target
				}
				create_ambient_object = {
					type = bwm_artifact_pulse_object
					location = this
					duration = 3
						
					use_3d_location = yes
						
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
						
					entity_scale_to_size = no
					scale = 1
				}
			}
		}
		owner = {
			if = {
				limit = {
					any_owned_ship = {
						exists = this
						is_ship_size = bwm_artifact_station
					}
				}
				every_owned_ship = {
					limit = {
						is_ship_size = bwm_artifact_station
					}
					repair_ship = yes
					add_modifier = {
						modifier = "bwm_artifact_tower_buff"
						days = -1
					}
				}
			}
		}
		if = {
			limit = {
				exists = this
				has_ship_flag = bwm_artifact_ward_1
			}
			random_system = {
				if = {
					limit = {
						has_star_flag = bwm_gate_snare_1
					}
					remove_star_flag = bwm_gate_snare_1
				}
			}
			create_ambient_object = {
			type = "bwm_artifact_station_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = this
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = bwm_artifact_alt_ward_1_reset
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_gate_country
					create_ship = {
						name = "Ai'Za"
						design = "Ru'Ha"
						prefix = no
						
						effect = {
							set_ship_flag = bwm_artifact_shroudborn_1
						}
					}
					set_location = event_target:bwm_artifact_relic_loc
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
			fleet = {
				delete_fleet = this
			}
			break = yes
		}
		if = {
			limit = {
				exists = this
				has_ship_flag = bwm_artifact_ward_2
			}
			random_system = {
				if = {
					limit = {
						has_star_flag = bwm_gate_snare_2
					}
					remove_star_flag = bwm_gate_snare_2
				}
			}
			create_ambient_object = {
			type = "bwm_artifact_station_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = this
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = bwm_artifact_alt_ward_2_reset
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_gate_country
					create_ship = {
						name = "Sau'Ra"
						design = "Ru'Ha"
						prefix = no
						
						effect = {
							set_ship_flag = bwm_artifact_shroudborn_2
						}
					}
					set_location = event_target:bwm_artifact_relic_loc
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
			fleet = {
				delete_fleet = this
			}
			break = yes
		}
		if = {
			limit = {
				exists = this
				has_ship_flag = bwm_artifact_ward_3
			}
			random_system = {
				if = {
					limit = {
						has_star_flag = bwm_gate_snare_3
					}
					remove_star_flag = bwm_gate_snare_3
				}
			}
			create_ambient_object = {
			type = "bwm_artifact_station_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = this
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = bwm_artifact_alt_ward_3_reset
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_gate_country
					create_ship = {
						name = "Yaj'Jiya"
						design = "Ru'Ha"
						prefix = no
						
						effect = {
							set_ship_flag = bwm_artifact_shroudborn_3
						}
					}
					set_location = event_target:bwm_artifact_relic_loc
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
			fleet = {
				delete_fleet = this
			}
			break = yes
		}
	}
}

#Specter defeated

country_event = {
	id = bwm_artifact.60
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = bwm_gate_country
		is_country_type = bwm_gate_guardian
		FROMFROM = {
			is_ship_size = bwm_artifact_shroudborn
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_global_flag = bwm_shroudborn_1_slain
				}
				FROMFROM = {
					has_ship_flag = bwm_artifact_shroudborn_1
				}
			}
			FROM = {
				set_country_flag = bwm_shroudborn_1_slayer
			}
			set_global_flag = bwm_shroudborn_1_slain
			break = yes
		}
		if = {
			limit = {
				NOT = {
					has_global_flag = bwm_shroudborn_2_slain
				}
				FROMFROM = {
					has_ship_flag = bwm_artifact_shroudborn_2
				}
			}
			FROM = {
				set_country_flag = bwm_shroudborn_2_slayer
			}
			set_global_flag = bwm_shroudborn_2_slain
			break = yes
		}
		if = {
			limit = {
				NOT = {
					has_global_flag = bwm_shroudborn_3_slain
				}
				FROMFROM = {
					has_ship_flag = bwm_artifact_shroudborn_3
				}
			}
			FROM = {
				set_country_flag = bwm_shroudborn_3_slayer
			}
			set_global_flag = bwm_shroudborn_3_slain
			break = yes
		}
	}
}

#Encounter Clear Combat Path

country_event = {
	id = bwm_artifact.61
	hide_window = yes
	
	fire_only_once = yes
	
	trigger = {
		AND ={
			has_global_flag = bwm_shroudborn_1_slain
			has_global_flag = bwm_shroudborn_2_slain
			has_global_flag = bwm_shroudborn_3_slain
		}
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_relic_alt_2_target
				}
				bwm_effect_explosion_AOE = yes
				create_ambient_object = {
					type = bwm_artifact_pulse_object
					location = this
					duration = 3
						
					use_3d_location = yes
						
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
						
					entity_scale_to_size = no
					scale = 4
				}
				create_ambient_object = {
				type = "bwm_artifact_relic_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_activated_relic
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					OR = {
						has_ambient_object_flag = bwm_artifact_cipher_1_ambient
						has_ambient_object_flag = bwm_artifact_cipher_2_ambient
						has_ambient_object_flag = bwm_artifact_cipher_3_ambient
						has_ambient_object_flag = bwm_artifact_alt_ward_1_reset
						has_ambient_object_flag = bwm_artifact_alt_ward_2_reset
						has_ambient_object_flag = bwm_artifact_alt_ward_3_reset
						has_ambient_object_flag = bwm_artifact_relic_fog
						has_ambient_object_flag = bwm_gate_system_storm
					}
				}
				destroy_ambient_object = this
			}
			every_system_planet = {
				if = {
					limit = {
						AND = {
							is_planet_class = pc_shrouded
							has_planet_flag = bwm_gate_shrouded
						}
					}
					change_pc = pc_nuked
					reroll_deposits = yes
					# TODO
					#random_tile = {
					#	limit = { has_blocker = no has_building = no num_adjacent_tiles > 3 }
						add_building = "bwm_building_shipwreck_0"		
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	set_building = "bwm_building_crisis_ruin"							
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	set_building = "bwm_building_crisis_ruin"									
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	set_building = "bwm_building_crisis_ruin"									
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	add_deposit = "tb_ancient_ruins"				
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	add_deposit = "tb_ancient_ruins"					
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	add_deposit = "tb_ancient_ruins"					
					#}
				}
			}
		}
		every_country = {
			if = {
				limit = {
					has_special_project = bwm_ARTIFACT_WEAKNESS_PROJECT
				}
				abort_special_project = {
					type = "bwm_ARTIFACT_WEAKNESS_PROJECT"
					location = capital_scope
				}
			}
			if = {
				limit = {
					has_special_project = bwm_ARTIFACT_DRONE_WEAKNESS_PROJECT
				}
				abort_special_project = {
					type = "bwm_ARTIFACT_DRONE_WEAKNESS_PROJECT"
					location = capital_scope
				}
			}
		}
		every_country = {
			limit = {
				is_ai = no
				OR = {
					has_country_flag = bwm_shroudborn_1_slayer
					has_country_flag = bwm_shroudborn_2_slayer
					has_country_flag = bwm_shroudborn_3_slayer
				}
			}
			country_event = { id = bwm_artifact.63 }
		}
	}
}

#Encounter Clear Cipher Path

country_event = {
	id = bwm_artifact.62
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = bwm_artifact_activation
		NOT = {
			has_global_flag = bwm_artifact_awakening 
		}
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_relic_alt_2_target
				}
				bwm_effect_explosion_AOE = yes
				create_ambient_object = {
					type = bwm_artifact_pulse_object
					location = this
					duration = 3
						
					use_3d_location = yes
						
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
						
					entity_scale_to_size = no
					scale = 4
				}
				create_ambient_object = {
				type = "bwm_artifact_relic_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = bwm_artifact_activated_relic
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					OR = {
						has_ambient_object_flag = bwm_artifact_cipher_1_ambient_alt
						has_ambient_object_flag = bwm_artifact_cipher_2_ambient_alt
						has_ambient_object_flag = bwm_artifact_cipher_3_ambient_alt
						has_ambient_object_flag = bwm_artifact_relic_fog
						has_ambient_object_flag = bwm_gate_system_storm
					}
				}
				destroy_ambient_object = this
			}
			every_system_planet = {
				if = {
					limit = {
						AND = {
							is_planet_class = pc_shrouded
							has_planet_flag = bwm_gate_shrouded
						}
					}
					change_pc = pc_nuked
					# TODO
					#random_tile = {
					#	limit = { has_blocker = no has_building = no num_adjacent_tiles > 3 }
						add_building = "bwm_building_shipwreck_0"		
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	set_building = "bwm_building_crisis_ruin"							
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	set_building = "bwm_building_crisis_ruin"									
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	set_building = "bwm_building_crisis_ruin"									
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	add_deposit = "tb_ancient_ruins"				
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	add_deposit = "tb_ancient_ruins"					
					#}
					#random_tile = {
					#	limit = { has_blocker = no has_building = no }
					#	add_deposit = "tb_ancient_ruins"					
					#}
				}
			}
		}
		every_country = {
			if = {
				limit = {
					has_special_project = bwm_ARTIFACT_WEAKNESS_PROJECT
				}
				abort_special_project = {
					type = "bwm_ARTIFACT_WEAKNESS_PROJECT"
					location = capital_scope
				}
			}
			if = {
				limit = {
					has_special_project = bwm_ARTIFACT_DRONE_WEAKNESS_PROJECT
				}
				abort_special_project = {
					type = "bwm_ARTIFACT_DRONE_WEAKNESS_PROJECT"
					location = capital_scope
				}
			}
		}
		every_country = {
			limit = {
				OR = {
					has_country_flag = bwm_cipher_1_system_unlock
					has_country_flag = bwm_cipher_2_system_unlock
					has_country_flag = bwm_cipher_3_system_unlock
				}
			}
			country_event = { id = bwm_artifact.63 }
		}
	}
}

#Reward Project

country_event = {
	id = bwm_artifact.63
	title = "bwm_artifact.63.name"
	desc = {
		text = bwm_artifact.63.1.desc
		trigger = {
			has_global_flag = bwm_artifact_awakening 
			NOT = {
				has_global_flag = bwm_artifact_activation 
			}
		}
	}
	desc = {
		text = bwm_artifact.63.2.desc
		trigger = {
			has_global_flag = bwm_artifact_activation
			NOT = {
				has_global_flag = bwm_artifact_awakening 
			}
		}
	}
	picture = GFX_evt_unity_symbol
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_relic_unlock_notify_toggle
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_activated_relic
				}
				save_event_target_as = bwm_artifact_relic_final_loc
			}
		}
		set_country_flag = bwm_relic_unlock_notify_toggle
		every_country = {
			limit = {
				is_ai = no
				NOT = {
					has_country_flag = bwm_relic_unlock_notify_toggle
				}
			}
			country_event = { id = bwm_artifact.112 days = 10 }
		}
	}
	
	option = {
		name = bwm_artifact.63.1.a
		trigger = {
			has_global_flag = bwm_artifact_awakening 
			NOT = {
				has_global_flag = bwm_artifact_activation 
			}
		}
		event_target:bwm_artifact_relic_final_loc = {
			enable_special_project = {
				name = "bwm_RELIC_TRUE_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}

	option = {
		name = bwm_artifact.63.2.a
		trigger = {
			has_global_flag = bwm_artifact_activation
			NOT = {
				has_global_flag = bwm_artifact_awakening 
			}
		}
		event_target:bwm_artifact_relic_final_loc = {
			enable_special_project = {
				name = "bwm_RELIC_TRUE_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}
}

#Reward distribution

ship_event = {
	id = bwm_artifact.64
	title = "bwm_artifact.64.name"
	desc = "bwm_artifact.64.desc"
	picture = GFX_evt_psionics
	location = THIS
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			owner = {
				has_country_flag = bwm_artifact_relic_unlock
			}
		}
	}
	
	immediate = {
		owner = {
			capital_scope = {
				save_event_target_as = bwm_artifact_owner_home
			}
			save_event_target_as = bwm_artifact_relic_owner
			add_threat = {
				who = owner 
				amount = 5
			}
			set_country_flag = bwm_artifact_relic_unlock
		}
		every_country = {
			limit = {
				has_communications = event_target:bwm_artifact_relic_owner
				NOT = {
					is_country = event_target:bwm_artifact_relic_owner
				}
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire		
				}	
			}
			add_opinion_modifier = { who = event_target:bwm_artifact_relic_owner modifier = bwm_gate_leviathan_owner }
		}
		bwm_awaken = yes
	}
	
	option = {
		name = "bwm_artifact.64.a"
		if = {
			limit = {
				OR = {
					has_global_flag = bwm_artifact_activation
					owner = {
						has_global_flag = bwm_artifact_forceful_access_toggle
					}
				}
			}
			create_fleet = {
				name = "The Cipher"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_artifact_relic_owner
					create_ship = {
						name = "Ra'Mi"
						design = "Amb'Ara II"
						prefix = no
						
						effect = {
							set_ship_flag = bwm_artifact_cipher_4
						}
					}
					set_location = {
						target = event_target:bwm_artifact_relic_loc
						distance = 0
						angle = 0
					}
				}
			}
		}
		create_fleet = {
			name = "The Relic"
			settings = {
				spawn_debris = no 
				is_boss = yes
			}
			effect = {
				set_owner = event_target:bwm_artifact_relic_owner
				create_ship = {
					name = "Am'Rta"
					design = "Dai'Vata"
					prefix = no
				}
				set_location = {
					target = event_target:bwm_artifact_relic_loc
					distance = 0
					angle = 0
				}
			}
		}
		enable_special_project = {
			name = "bwm_ARTIFACT_TRIGGER"
			location = event_target:bwm_artifact_owner_home
			owner = ROOT
		}	
		hidden_effect = {
			owner = {
				set_country_flag = bwm_artifact_tech_target
			}
			random_system = {
				limit = {
					has_star_flag = bwm_gate_system
				}
				random_system_ambient_object = {
					limit = {
						has_ambient_object_flag = bwm_artifact_activated_relic
					}
					destroy_ambient_object = this
				}
			}
		}
	}
}

#Combat Encounter Notify

country_event = {
	id = bwm_artifact.65
	title = "bwm_artifact.65.name"
	desc = "bwm_artifact.65.desc"
	picture = GFX_evt_unspeakable_horror
	location = event_target:bwm_artifact_relic_loc
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_relic_defense_notify
		}
	}
	
	immediate = {
		set_country_flag = bwm_artifact_relic_defense_notify
	}

	
	option = {
		name = "bwm_artifact.65.a"
	}
}

planet_event = {
	id = bwm_artifact.66
	hide_window = yes
	
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		has_building = bwm_building_shipwreck_1
	}

	immediate = {
		log = "shipwreck"
		owner = {
			save_event_target_as = bwm_artifact_prototype_owner
			country_event = { id = bwm_artifact.67 }
		}
		if = {
			limit = {
				has_building = bwm_building_shipwreck_1
			}
			remove_building = bwm_building_shipwreck_1
		}
		create_fleet = {
			name = "Royal Heartbreaker"
			settings = {
				spawn_debris = no 
			}
			effect = {
				set_owner = event_target:bwm_artifact_prototype_owner
				create_ship = {
					name = "Prototype Nauthiz"
					design = "Garmr"
					graphical_culture = "bwm_ancient_01"
					prefix = no
					
					effect = {
						set_ship_flag = bwm_artifact_prototype
					}
				}
				set_location = {
					target = root
					distance = 0
					angle = 0
				}
			}
		}
	}
}

#Ship retrieval notify

country_event = {
	id = bwm_artifact.67
	title = "bwm_artifact.67.name"
	desc = "bwm_artifact.67.desc"
	picture = GFX_evt_big_landing_ship
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_prototype_retrieval_notify
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_gate_system
			}
			save_event_target_as = bwm_gate_system_name
			random_system_planet = {
				limit = {
					has_planet_flag = bwm_gate_shrouded
				}
				save_event_target_as = bwm_gate_planet_name
			}
		}
		set_country_flag = bwm_artifact_prototype_retrieval_notify
	}

	
	option = {
		name = "bwm_artifact.67.a"
	}
}

ship_event = {
	id = bwm_artifact.100
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_ship_size = bwm_artifact_pillar_station
	}

	immediate = {
		if = {
			limit = {
				OR = {
					has_ship_flag = bwm_cipher_lock_1_pillar_1
					has_ship_flag = bwm_cipher_lock_1_pillar_2
					has_ship_flag = bwm_cipher_lock_1_pillar_3
					has_ship_flag = bwm_cipher_lock_1_pillar_4
					has_ship_flag = bwm_cipher_lock_1_pillar_5
					has_ship_flag = bwm_cipher_lock_1_pillar_6
				}
			}
			from = {
				owner = {
					if = {
						limit = {
							NOT = {
								has_country_flag = bwm_artifact_seal_destroyer_1
							}
						}
					}
					set_country_flag = bwm_artifact_seal_destroyer_1
				}
			}
		}
		if = {
			limit = {
				OR = {
					has_ship_flag = bwm_cipher_lock_2_pillar_1
					has_ship_flag = bwm_cipher_lock_2_pillar_2
					has_ship_flag = bwm_cipher_lock_2_pillar_3
					has_ship_flag = bwm_cipher_lock_2_pillar_4
					has_ship_flag = bwm_cipher_lock_2_pillar_5
					has_ship_flag = bwm_cipher_lock_2_pillar_6
				}
			}
			from = {
				owner = {
					if = {
						limit = {
							NOT = {
								has_country_flag = bwm_artifact_seal_destroyer_2
							}
						}
					}
					set_country_flag = bwm_artifact_seal_destroyer_2
				}
			}
		}
		if = {
			limit = {
				OR = {
					has_ship_flag = bwm_cipher_lock_3_pillar_1
					has_ship_flag = bwm_cipher_lock_3_pillar_2
					has_ship_flag = bwm_cipher_lock_3_pillar_3
					has_ship_flag = bwm_cipher_lock_3_pillar_4
					has_ship_flag = bwm_cipher_lock_3_pillar_5
					has_ship_flag = bwm_cipher_lock_3_pillar_6
				}
			}
			from = {
				owner = {
					if = {
						limit = {
							NOT = {
								has_country_flag = bwm_artifact_seal_destroyer_3
							}
						}
					}
					set_country_flag = bwm_artifact_seal_destroyer_3
				}
			}
		}
		bwm_artifact_seal_change_1_1 = yes
		bwm_artifact_seal_change_1_2 = yes
		bwm_artifact_seal_change_1_3 = yes
		bwm_artifact_seal_change_1_4 = yes
		bwm_artifact_seal_change_1_5 = yes
		bwm_artifact_seal_change_1_6 = yes
		bwm_artifact_seal_change_2_1 = yes
		bwm_artifact_seal_change_2_2 = yes
		bwm_artifact_seal_change_2_3 = yes
		bwm_artifact_seal_change_2_4 = yes
		bwm_artifact_seal_change_2_5 = yes
		bwm_artifact_seal_change_2_6 = yes
		bwm_artifact_seal_change_3_1 = yes
		bwm_artifact_seal_change_3_2 = yes
		bwm_artifact_seal_change_3_3 = yes
		bwm_artifact_seal_change_3_4 = yes
		bwm_artifact_seal_change_3_5 = yes
		bwm_artifact_seal_change_3_6 = yes
	}
}

planet_event = {
	id = bwm_artifact.101
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				solar_system = {
					has_star_flag = bwm_cipher_1_system
				}
			}
			solar_system = {
				every_system_ambient_object = {
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_1_pillar_1_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_1_pillar_1_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_1_pillar_2_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_1_pillar_2_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_1_pillar_3_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_1_pillar_3_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_1_pillar_4_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_1_pillar_4_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_1_pillar_5_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_1_pillar_5_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_1_pillar_6_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_1_pillar_6_global
						break = yes
					}
				}
			}
		}
		if = {
			limit = {
				solar_system = {
					has_star_flag = bwm_cipher_2_system
				}
			}
			solar_system = {
				every_system_ambient_object = {
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_2_pillar_1_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_2_pillar_1_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_2_pillar_2_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_2_pillar_2_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_2_pillar_3_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_2_pillar_3_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_2_pillar_4_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_2_pillar_4_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_2_pillar_5_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_2_pillar_5_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_2_pillar_6_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_2_pillar_6_global
						break = yes
					}
				}
			}
		}
		if = {
			limit = {
				solar_system = {
					has_star_flag = bwm_cipher_3_system
				}
			}
			solar_system = {
				every_system_ambient_object = {
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_3_pillar_1_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_3_pillar_1_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_3_pillar_2_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_3_pillar_2_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_3_pillar_3_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_3_pillar_3_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_3_pillar_4_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_3_pillar_4_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_3_pillar_5_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_3_pillar_5_global
						break = yes
					}
					if = {
						limit = {
							has_ambient_object_flag = bwm_cipher_lock_3_pillar_6_burst
						}
						this = {
							bwm_effect_explosion_2 = yes
						}
						destroy_ambient_object = this
						set_global_flag = bwm_cipher_lock_3_pillar_6_global
						break = yes
					}
				}
			}
		}
	}
}

country_event = {
	id = bwm_artifact.102
	hide_window = yes
	
	fire_only_once = yes
	
	trigger = {
		AND = {
			has_global_flag = bwm_cipher_lock_1_pillar_1_global
			has_global_flag = bwm_cipher_lock_1_pillar_2_global
			has_global_flag = bwm_cipher_lock_1_pillar_3_global
			has_global_flag = bwm_cipher_lock_1_pillar_4_global
			has_global_flag = bwm_cipher_lock_1_pillar_5_global
			has_global_flag = bwm_cipher_lock_1_pillar_6_global
		}
	}
	
	mean_time_to_happen = {
		days = 30
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			save_event_target_as = bwm_cipher_1_system_local
			random_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_1_star
				}
			}
			every_system_ambient_object = { 
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_1_lock
				}
				this = {
				 save_event_target_as = bwm_artifact_cipher_1_lock_loc
				}
				create_ambient_object = {
					type = "bwm_artifact_lock_damaged"
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_artifact_cipher_1_lock_loc
					set_ambient_object_flag = bwm_artifact_cipher_1_broken_lock_ambient
				}
				create_ambient_object = {
					type = bwm_effect_explosion_2_object
					duration = 10
					
					use_3d_location = yes
					
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
					
					entity_scale_to_size = yes
					scale = 10
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_artifact_cipher_1_lock_loc
				}
				destroy_ambient_object = this
			}
		}
		country_event = { id = bwm_artifact.103 days = 90 }
	}
}

country_event = {
	id = bwm_artifact.103
	hide_window = yes
	is_triggered_only = yes
	
	fire_only_once = yes

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			save_event_target_as = bwm_cipher_1_system_loc
			every_system_ambient_object = { 
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_1_broken_lock_ambient
				}
				save_event_target_as = bwm_cipher_1_spawn_loc
				create_ambient_object = {
					type = bwm_effect_explosion_2_object
					location = this
					duration = 10
					
					use_3d_location = yes
					
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
					
					entity_scale_to_size = yes
					scale = 20
				}
				create_ambient_object = {
					type = "bwm_artifact_cipher_spawn_object"
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_cipher_1_spawn_loc
					set_ambient_object_flag = bwm_artifact_cipher_1_spawned
					every_country = {
						limit = {
							has_country_flag = bwm_artifact_seal_destroyer_1
						}
						save_event_target_as = bwm_artifact_seal_destroyer_1_loc
					}
					enable_special_project = {
						name = "bwm_CIPHER_1_ACCESS"
						location = this
						owner = event_target:bwm_artifact_seal_destroyer_1_loc
					}
				}
				destroy_ambient_object = this
			}
		}
	}
}

country_event = {
	id = bwm_artifact.104
	hide_window = yes
	
	fire_only_once = yes
	
	trigger = {
		AND = {
			has_global_flag = bwm_cipher_lock_2_pillar_1_global
			has_global_flag = bwm_cipher_lock_2_pillar_2_global
			has_global_flag = bwm_cipher_lock_2_pillar_3_global
			has_global_flag = bwm_cipher_lock_2_pillar_4_global
			has_global_flag = bwm_cipher_lock_2_pillar_5_global
			has_global_flag = bwm_cipher_lock_2_pillar_6_global
		}
	}
	
	mean_time_to_happen = {
		days = 30
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			save_event_target_as = bwm_cipher_2_system_local
			random_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_2_star
				}
			}
			every_system_ambient_object = { 
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_2_lock
				}
				this = {
				 save_event_target_as = bwm_artifact_cipher_2_lock_loc
				}
				create_ambient_object = {
					type = "bwm_artifact_lock_damaged"
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_artifact_cipher_2_lock_loc
					set_ambient_object_flag = bwm_artifact_cipher_2_broken_lock_ambient
				}
				create_ambient_object = {
					type = bwm_effect_explosion_2_object
					duration = 10
					
					use_3d_location = yes
					
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
					
					entity_scale_to_size = yes
					scale = 10
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_artifact_cipher_2_lock_loc
				}
				destroy_ambient_object = this
			}
		}
		country_event = { id = bwm_artifact.105 days = 90 }
	}
}

country_event = {
	id = bwm_artifact.105
	hide_window = yes
	is_triggered_only = yes
	
	fire_only_once = yes

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			save_event_target_as = bwm_cipher_2_system_loc
			every_system_ambient_object = { 
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_2_broken_lock_ambient
				}
				save_event_target_as = bwm_cipher_2_spawn_loc
				create_ambient_object = {
					type = bwm_effect_explosion_2_object
					location = this
					duration = 10
					
					use_3d_location = yes
					
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
					
					entity_scale_to_size = yes
					scale = 20
				}
				create_ambient_object = {
					type = "bwm_artifact_cipher_spawn_object"
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_cipher_2_spawn_loc
					set_ambient_object_flag = bwm_artifact_cipher_2_spawned
					every_country = {
						limit = {
							has_country_flag = bwm_artifact_seal_destroyer_2
						}
						save_event_target_as = bwm_artifact_seal_destroyer_2_loc
					}
					enable_special_project = {
						name = "bwm_CIPHER_2_ACCESS"
						location = this
						owner = event_target:bwm_artifact_seal_destroyer_2_loc
					}
				}
				destroy_ambient_object = this
			}
		}
	}
}

country_event = {
	id = bwm_artifact.106
	hide_window = yes
	
	fire_only_once = yes
	
	trigger = {
		AND = {
			has_global_flag = bwm_cipher_lock_3_pillar_1_global
			has_global_flag = bwm_cipher_lock_3_pillar_2_global
			has_global_flag = bwm_cipher_lock_3_pillar_3_global
			has_global_flag = bwm_cipher_lock_3_pillar_4_global
			has_global_flag = bwm_cipher_lock_3_pillar_5_global
			has_global_flag = bwm_cipher_lock_3_pillar_6_global
		}
	}
	
	mean_time_to_happen = {
		days = 30
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			save_event_target_as = bwm_cipher_3_system_local
			random_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_3_star
				}
			}
			every_system_ambient_object = { 
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_3_lock
				}
				this = {
				 save_event_target_as = bwm_artifact_cipher_3_lock_loc
				}
				create_ambient_object = {
					type = "bwm_artifact_lock_damaged"
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_artifact_cipher_3_lock_loc
					set_ambient_object_flag = bwm_artifact_cipher_3_broken_lock_ambient
				}
				create_ambient_object = {
					type = bwm_effect_explosion_2_object
					duration = 10
					
					use_3d_location = yes
					
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
					
					entity_scale_to_size = yes
					scale = 10
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_artifact_cipher_3_lock_loc
				}
				destroy_ambient_object = this
			}
		}
		country_event = { id = bwm_artifact.107 days = 90 }
	}
}

country_event = {
	id = bwm_artifact.107
	hide_window = yes
	is_triggered_only = yes
	
	fire_only_once = yes

	immediate = {
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			save_event_target_as = bwm_cipher_3_system_loc
			every_system_ambient_object = { 
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_3_broken_lock_ambient
				}
				save_event_target_as = bwm_cipher_3_spawn_loc
				create_ambient_object = {
					type = bwm_effect_explosion_2_object
					location = this
					duration = 10
					
					use_3d_location = yes
					
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
					
					entity_scale_to_size = yes
					scale = 20
				}
				create_ambient_object = {
					type = "bwm_artifact_cipher_spawn_object"
				}
				last_created_ambient_object = {
					set_location = event_target:bwm_cipher_3_spawn_loc
					set_ambient_object_flag = bwm_artifact_cipher_3_spawned
					every_country = {
						limit = {
							has_country_flag = bwm_artifact_seal_destroyer_3
						}
						save_event_target_as = bwm_artifact_seal_destroyer_3_loc
					}
					enable_special_project = {
						name = "bwm_CIPHER_3_ACCESS"
						location = this
						owner = event_target:bwm_artifact_seal_destroyer_3_loc
					}
				}
				destroy_ambient_object = this
			}
		}
	}
}

ship_event = {
	id = bwm_artifact.108
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = no
			NAND = {
				has_country_flag = encountered_bwm_cipher_1_system
				has_country_flag = encountered_bwm_cipher_2_system
				has_country_flag = encountered_bwm_cipher_3_system
			}
		}
		FROM = {
			OR = {
				has_star_flag = bwm_cipher_1_system
				has_star_flag = bwm_cipher_2_system
				has_star_flag = bwm_cipher_3_system
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					owner = {
						has_country_flag = encountered_bwm_cipher_1_system
					}
				}
				FROM = {
					has_star_flag = bwm_cipher_1_system
				}
			}
			owner = {
				establish_communications_no_message = event_target:bwm_cipher_lock_country_1_1
				establish_communications_no_message = event_target:bwm_cipher_lock_country_1_2
				establish_communications_no_message = event_target:bwm_cipher_lock_country_1_3
				establish_communications_no_message = event_target:bwm_cipher_lock_country_1_4
				establish_communications_no_message = event_target:bwm_cipher_lock_country_1_5
				establish_communications_no_message = event_target:bwm_cipher_lock_country_1_6
				set_country_flag = encountered_bwm_cipher_1_system
				country_event = { id = bwm_artifact.113 }
			}
		}
		if = {
			limit = {
				NOT = {
					owner = {
						has_country_flag = encountered_bwm_cipher_2_system
					}
				}
				FROM = {
					has_star_flag = bwm_cipher_2_system
				}
			}
			owner = {
				establish_communications_no_message = event_target:bwm_cipher_lock_country_2_1
				establish_communications_no_message = event_target:bwm_cipher_lock_country_2_2
				establish_communications_no_message = event_target:bwm_cipher_lock_country_2_3
				establish_communications_no_message = event_target:bwm_cipher_lock_country_2_4
				establish_communications_no_message = event_target:bwm_cipher_lock_country_2_5
				establish_communications_no_message = event_target:bwm_cipher_lock_country_2_6
				set_country_flag = encountered_bwm_cipher_2_system
				country_event = { id = bwm_artifact.113 }
			}
		}
		if = {
			limit = {
				NOT = {
					owner = {
						has_country_flag = encountered_bwm_cipher_3_system
					}
				}
				FROM = {
					has_star_flag = bwm_cipher_3_system
				}
			}
			owner = {
				establish_communications_no_message = event_target:bwm_cipher_lock_country_3_1
				establish_communications_no_message = event_target:bwm_cipher_lock_country_3_2
				establish_communications_no_message = event_target:bwm_cipher_lock_country_3_3
				establish_communications_no_message = event_target:bwm_cipher_lock_country_3_4
				establish_communications_no_message = event_target:bwm_cipher_lock_country_3_5
				establish_communications_no_message = event_target:bwm_cipher_lock_country_3_6
				set_country_flag = encountered_bwm_cipher_3_system
				country_event = { id = bwm_artifact.113 }
			}
		}
	}		
}

#Cipher 1 Upgrade

country_event = {
	id = bwm_artifact.109
	title = "bwm_artifact.109.name"
	desc = "bwm_artifact.109.desc"
	picture = GFX_evt_physics_research
	
	fire_only_once = yes
	
	trigger = {
		AND = {
			has_technology = "tech_basic_science_lab_3"
			has_technology = "tech_sapient_ai"
		}
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = bwm_artifact_cipher_1
					is_ship_size = bwm_artifact_cipher
				}
			}	
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = bwm_artifact_cipher_1_locked
				is_ship_size = bwm_artifact_cipher
			}
		}	
	}
	
	mean_time_to_happen = {
		years = 5
	}
	
	option = {
		name = "bwm_artifact.109.a"
		hidden_effect = {
			every_owned_ship = {
				limit = {
					AND = {
						is_ship_size = bwm_artifact_cipher
						has_ship_flag = bwm_artifact_cipher_1_locked
					}
				}
				remove_ship_flag = bwm_artifact_cipher_1_locked
				set_ship_flag = bwm_artifact_cipher_1
			}
		}
	}
}

#Cipher 2 Upgrade

country_event = {
	id = bwm_artifact.110
	title = "bwm_artifact.110.name"
	desc = "bwm_artifact.110.desc"
	picture = GFX_evt_physics_research
	
	fire_only_once = yes
	
	trigger = {
		AND = {
			has_technology = "tech_basic_science_lab_3"
			has_technology = "tech_sapient_ai"
		}
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = bwm_artifact_cipher_2
					is_ship_size = bwm_artifact_cipher
				}
			}	
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = bwm_artifact_cipher_2_locked
				is_ship_size = bwm_artifact_cipher
			}
		}	
	}
	
	mean_time_to_happen = {
		years = 5
	}
	
	option = {
		name = "bwm_artifact.110.a"
		hidden_effect = {
			every_owned_ship = {
				limit = {
					AND = {
						is_ship_size = bwm_artifact_cipher
						has_ship_flag = bwm_artifact_cipher_2_locked
					}
				}
				remove_ship_flag = bwm_artifact_cipher_2_locked
				set_ship_flag = bwm_artifact_cipher_2
			}
		}
	}
}

#Cipher 3 Upgrade

country_event = {
	id = bwm_artifact.111
	title = "bwm_artifact.111.name"
	desc = "bwm_artifact.111.desc"
	picture = GFX_evt_physics_research
	
	fire_only_once = yes
	
	trigger = {
		AND = {
			has_technology = "tech_basic_science_lab_3"
			has_technology = "tech_sapient_ai"
		}
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = bwm_artifact_cipher_3
					is_ship_size = bwm_artifact_cipher
				}
			}	
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = bwm_artifact_cipher_3_locked
				is_ship_size = bwm_artifact_cipher
			}
		}	
	}
	
	mean_time_to_happen = {
		years = 5
	}
	
	option = {
		name = "bwm_artifact.111.a"
		hidden_effect = {
			every_owned_ship = {
				limit = {
					AND = {
						is_ship_size = bwm_artifact_cipher
						has_ship_flag = bwm_artifact_cipher_3_locked
					}
				}
				remove_ship_flag = bwm_artifact_cipher_3_locked
				set_ship_flag = bwm_artifact_cipher_3
			}
		}
	}
}

#Event Clear - Global notify

country_event = {
	id = bwm_artifact.112
	title = "bwm_artifact.112.name"
	desc = "bwm_artifact.112.desc"
	picture = GFX_evt_unity_symbol
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_global_notify
		}
	}
	
	immediate = {
		set_country_flag = bwm_artifact_global_notify
	}
	
	option = {
		name = "bwm_artifact.112.a"
	}
}

#Entering Cipher System notify

country_event = {
	id = bwm_artifact.113
	title = "bwm_artifact.113.name"
	desc = "bwm_artifact.113.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_mystic_reveal_light
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_cipher_notify
		}
	}
	
	immediate = {
		set_country_flag = bwm_artifact_cipher_notify
	}

	option = {
		name = "bwm_artifact.113.a"
		custom_tooltip = bwm_artifact.113.a.tooltip
	}
}

#Cipher Guardians

planet_event = {
	id = bwm_artifact.114
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_global_flag = bwm_artifact_drone_spawned
		}
		AND = {
			OR = {
				has_global_flag = bwm_cipher_lock_1_pillar_1_global
				has_global_flag = bwm_cipher_lock_2_pillar_1_global
				has_global_flag = bwm_cipher_lock_3_pillar_1_global
			}
			OR = {
				has_global_flag = bwm_cipher_lock_1_pillar_2_global
				has_global_flag = bwm_cipher_lock_2_pillar_2_global
				has_global_flag = bwm_cipher_lock_3_pillar_2_global
			}
			OR = {
				has_global_flag = bwm_cipher_lock_1_pillar_3_global
				has_global_flag = bwm_cipher_lock_2_pillar_3_global
				has_global_flag = bwm_cipher_lock_3_pillar_3_global
			}
			OR = {
				has_global_flag = bwm_cipher_lock_1_pillar_4_global
				has_global_flag = bwm_cipher_lock_2_pillar_4_global
				has_global_flag = bwm_cipher_lock_3_pillar_4_global
			}
			OR = {
				has_global_flag = bwm_cipher_lock_1_pillar_5_global
				has_global_flag = bwm_cipher_lock_2_pillar_5_global
				has_global_flag = bwm_cipher_lock_3_pillar_5_global
			}
			OR = {
				has_global_flag = bwm_cipher_lock_1_pillar_6_global
				has_global_flag = bwm_cipher_lock_2_pillar_6_global
				has_global_flag = bwm_cipher_lock_3_pillar_6_global
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOR = {
					AND = {
						has_planet_flag = bwm_cipher_system_1_pillar_1_lock
						has_planet_flag = bwm_cipher_system_1_pillar_2_lock
						has_planet_flag = bwm_cipher_system_1_pillar_3_lock
						has_planet_flag = bwm_cipher_system_1_pillar_4_lock
						has_planet_flag = bwm_cipher_system_1_pillar_5_lock
						has_planet_flag = bwm_cipher_system_1_pillar_6_lock
					}
					AND = {
						has_planet_flag = bwm_cipher_system_2_pillar_1_lock
						has_planet_flag = bwm_cipher_system_2_pillar_2_lock
						has_planet_flag = bwm_cipher_system_2_pillar_3_lock
						has_planet_flag = bwm_cipher_system_2_pillar_4_lock
						has_planet_flag = bwm_cipher_system_2_pillar_5_lock
						has_planet_flag = bwm_cipher_system_2_pillar_6_lock
					}
					AND = {
						has_planet_flag = bwm_cipher_system_3_pillar_1_lock
						has_planet_flag = bwm_cipher_system_3_pillar_2_lock
						has_planet_flag = bwm_cipher_system_3_pillar_3_lock
						has_planet_flag = bwm_cipher_system_3_pillar_4_lock
						has_planet_flag = bwm_cipher_system_3_pillar_5_lock
						has_planet_flag = bwm_cipher_system_3_pillar_6_lock
					}
				}
			}
			set_global_flag = bwm_artifact_drone_spawned
			bwm_effect_explosion_AOE = yes
			solar_system = {
				every_fleet_in_system = {
					if = {
						limit = {
							exists = this
							owner = {
								is_ai = no
								OR = {
									has_country_flag = bwm_artifact_seal_destroyer_1
									has_country_flag = bwm_artifact_seal_destroyer_2
									has_country_flag = bwm_artifact_seal_destroyer_3
								}
							}
						}
						owner = {
							country_event = { id = bwm_artifact.115 }
						}
					}
				}
			}
			create_country = {
				name = "Abyss Wardens"
				type = bwm_ancient_drone_guardian
				flag = {
					icon = {
					category = "blocky"
					file = "flag_blocky_16.dds"
					}
					background = {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors = {
						"grey"
						"beige"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = bwm_artifact_drone_country
					if = {
						limit = {
							NOT = {
								has_modifier = bwm_artifact_drone_power
							}
						}
						add_modifier = {
							modifier = bwm_artifact_drone_power
							days = -1
						}
					}
				}
			}
			every_country = {
				if = {
					limit = {
						NOT = {
							has_communications = event_target:bwm_artifact_drone_country
						}
					}
					establish_communications_no_message = event_target:bwm_artifact_drone_country
				}
			}
			create_fleet = {
				name = "Drone Squadron Algiz"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_artifact_drone_country
					create_ship = {
						name = "Thurisaz"
						design = "NAME_bwm_geri_alt"
						graphical_culture = "bwm_ancient_01"
						prefix = no
						
						effect = {
							while = {
								count = 23
								add_modifier = {
									modifier = "bwm_artifact_drone_boss_stack_buff"
									days = -1
								}
							}
						}
					}
					while = {
						count = 23
						create_ship = {
							name = "Teiwaz"
							design = "NAME_bwm_freki_alt"
							graphical_culture = "bwm_ancient_01"
							prefix = no
						}	
					}
					set_location = {
						target = root
						distance = 5
						angle = random
					}
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
			create_fleet = {
				name = "Drone Squadron Nauthiz"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_artifact_drone_country
					create_ship = {
						name = "Thurisaz"
						design = "NAME_bwm_geri_alt"
						graphical_culture = "bwm_ancient_01"
						prefix = no
						
						effect = {
							while = {
								count = 23
								add_modifier = {
									modifier = "bwm_artifact_drone_boss_stack_buff"
									days = -1
								}
							}
						}
					}
					while = {
						count = 23
						create_ship = {
							name = "Teiwaz"
							design = "NAME_bwm_freki_alt"
							graphical_culture = "bwm_ancient_01"
							prefix = no
						}	
					}
					set_location = {
						target = root
						distance = 5
						angle = random
					}
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
			create_fleet = {
				name = "Drone Squadron Eiwaz"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:bwm_artifact_drone_country
					create_ship = {
						name = "Thurisaz"
						design = "NAME_bwm_geri_alt"
						graphical_culture = "bwm_ancient_01"
						prefix = no
						
						effect = {
							while = {
								count = 23
								add_modifier = {
									modifier = "bwm_artifact_drone_boss_stack_buff"
									days = -1
								}
							}
						}
					}
					while = {
						count = 23
						create_ship = {
							name = "Teiwaz"
							design = "NAME_bwm_freki_alt"
							graphical_culture = "bwm_ancient_01"
							prefix = no
						}	
					}
					set_location = {
						target = root
						distance = 5
						angle = random
					}
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
		}
	}
}

#Entering Cipher System notify

country_event = {
	id = bwm_artifact.115
	title = "bwm_artifact.115.name"
	desc = "bwm_artifact.115.desc"
	picture = GFX_evt_fleet_evil
	show_sound = event_red_alert
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_cipher_guardian_notify
		}
	}
	
	immediate = {
		set_timed_country_flag = { flag = bwm_artifact_cipher_guardian_notify  days = 10 }
	}

	option = {
		name = BATTLESTATIONS
	}
}

# Cipher 1 Reward

ship_event = {
	id = bwm_artifact.150
	title = "bwm_artifact.150.name"
	desc = "bwm_artifact.150.desc"
	picture = GFX_evt_satellite_in_orbit
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_country_flag = bwm_artifact_seal_destroyer_1
			NOT = {
				has_country_flag = bwm_cipher_1_system_unlock
			}
		}
	}
	
	immediate = {
		this = {
			save_event_target_as = bwm_artifact_cipher_1_ship_name
			owner = {
				save_event_target_as = bwm_artifact_cipher_1_owner
				set_country_flag = bwm_cipher_1_system_unlock
			}
		}
	}
	
	option = {
		name = "bwm_artifact.150.a"
		hidden_effect = {
			owner = {
				if = {
					limit = {
						has_event_chain = "bwm_artifact_cipher_chain"
					}
					add_event_chain_counter = { 
						event_chain = "bwm_artifact_cipher_chain" 
						counter = "bwm_artifact_cipher_counter" 
						amount = 1 
					}
					remove_point_of_interest = bwm_artifact_cipher_poi.1
				}
			}
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_1_spawned
				}
				save_event_target_as = bwm_artifact_cipher_1_loc
				create_fleet = {
					name = "1st Cipher"
					settings = {
						spawn_debris = no 
						is_boss = yes
					}
					effect = {
						set_owner = event_target:bwm_artifact_cipher_1_owner
						create_ship = {
							name = "Ti'Mira"
							design = "Amb'Ara I"
							prefix = no
							
							effect = {
								set_disable_at_health = 0.05
								set_ship_flag = bwm_artifact_cipher_1_locked
							}
						}
						set_location = {
							target = event_target:bwm_artifact_cipher_1_loc
							distance = 0
							angle = random
						}
					}
				}
				destroy_ambient_object = this
			}
		}
	}
}

# Cipher 2 Reward

ship_event = {
	id = bwm_artifact.151
	title = "bwm_artifact.151.name"
	desc = "bwm_artifact.151.desc"
	picture = GFX_evt_satellite_in_orbit
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_country_flag = bwm_artifact_seal_destroyer_2
			NOT = {
				has_country_flag = bwm_cipher_2_system_unlock
			}
		}
	}
	
	immediate = {
		this = {
			save_event_target_as = bwm_artifact_cipher_2_ship_name
			owner = {
				save_event_target_as = bwm_artifact_cipher_2_owner
				set_country_flag = bwm_cipher_2_system_unlock
			}
		}
	}
	
	option = {
		name = "bwm_artifact.151.a"
		hidden_effect = {
			owner = {
				if = {
					limit = {
						has_event_chain = "bwm_artifact_cipher_chain"
					}
					add_event_chain_counter = { 
						event_chain = "bwm_artifact_cipher_chain" 
						counter = "bwm_artifact_cipher_counter" 
						amount = 1 
					}
					remove_point_of_interest = bwm_artifact_cipher_poi.2
				}
			}
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_2_spawned
				}
				save_event_target_as = bwm_artifact_cipher_2_loc
				create_fleet = {
					name = "2nd Cipher"
					settings = {
						spawn_debris = no 
						is_boss = yes
					}
					effect = {
						set_owner = event_target:bwm_artifact_cipher_2_owner
						create_ship = {
							name = "Ti'Mira"
							design = "Amb'Ara I"
							prefix = no
							
							effect = {
								set_disable_at_health = 0.05
								set_ship_flag = bwm_artifact_cipher_2_locked
							}
						}
						set_location = {
							target = event_target:bwm_artifact_cipher_2_loc
							distance = 0
							angle = random
						}
					}
				}
				destroy_ambient_object = this
			}
		}
	}
}

# Cipher 3 Reward

ship_event = {
	id = bwm_artifact.152
	title = "bwm_artifact.152.name"
	desc = "bwm_artifact.152.desc"
	picture = GFX_evt_satellite_in_orbit
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_country_flag = bwm_artifact_seal_destroyer_3
			NOT = {
				has_country_flag = bwm_cipher_3_system_unlock
			}
		}
	}
	
	immediate = {
		this = {
			save_event_target_as = bwm_artifact_cipher_3_ship_name
			owner = {
				save_event_target_as = bwm_artifact_cipher_3_owner
				set_country_flag = bwm_cipher_3_system_unlock
			}
		}
	}
	
	option = {
		name = "bwm_artifact.152.a"
		hidden_effect = {
			owner = {
				if = {
					limit = {
						has_event_chain = "bwm_artifact_cipher_chain"
					}
					add_event_chain_counter = { 
						event_chain = "bwm_artifact_cipher_chain" 
						counter = "bwm_artifact_cipher_counter" 
						amount = 1 
					}
					remove_point_of_interest = bwm_artifact_cipher_poi.3
				}
			}
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = bwm_artifact_cipher_3_spawned
				}
				save_event_target_as = bwm_artifact_cipher_3_loc
				create_fleet = {
					name = "3rd Cipher"
					settings = {
						spawn_debris = no 
						is_boss = yes
					}
					effect = {
						set_owner = event_target:bwm_artifact_cipher_3_owner
						create_ship = {
							name = "Ti'Mira"
							design = "Amb'Ara I"
							prefix = no
							
							effect = {
								set_disable_at_health = 0.05
								set_ship_flag = bwm_artifact_cipher_3_locked
							}
						}
						set_location = {
							target = event_target:bwm_artifact_cipher_3_loc
							distance = 0
							angle = random
						}
					}
				}
				destroy_ambient_object = this
			}
		}
	}
}

#Technology Unlock

country_event = {
	id = bwm_artifact.200
	title = "bwm_artifact.200.name"
	desc = "bwm_artifact.200.desc"
	picture = GFX_evt_genetic_modification

	trigger = {
		NOT = {
			has_country_flag = bwm_artifact_tech_unlock
		}
		has_country_flag = bwm_artifact_tech_target
		has_technology = "tech_mine_zro"
		any_owned_ship = {
			is_ship_size = bwm_artifact_relic_frame
		}
	}
	
	mean_time_to_happen = {
		years = 5
	}
	
	immediate = {
		set_country_flag = bwm_artifact_tech_unlock
	}
	
	option = {
		name = "bwm_artifact.200.a"
		if = {
			limit = {
				NOT = {
					has_technology = "tech_bwm_lex_artifact"
				}
			}
			add_research_option = tech_bwm_lex_artifact
			add_tech_progress = {
				tech = tech_bwm_lex_artifact
				progress = 0.1
			}
		}
	}
}

#Weakness Research Init

country_event = {
	id = bwm_artifact.300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = bwm_gate_guardian
		from = {
			NOT = {
				has_country_flag = bwm_artifact_weakness_check
			}
			is_ai = no
	
			AND = {
				OR = {
					has_technology = "tech_ship_armor_5"
					has_technology = "tech_dragon_armor"
					has_technology = "tech_bwm_lex_armor"
				}
				OR = {
					has_technology = "tech_shields_5"
					has_technology = "tech_psionic_shield"
					#has_technology = "tech_enigmatic_deflector"
					has_technology = "tech_bwm_lex_shield"
				}		
				OR = {
					has_technology = "tech_zero_point_power"
					#has_technology = "tech_enigmatic_power_core"
					has_technology = "tech_bwm_lex_power"
				}
				OR = {
					has_technology = "tech_energy_lance_2"
					has_technology = "tech_arc_emitter_2"
					has_technology = "tech_mass_accelerator_2"
				}
			}
		}
	}

	immediate = {
		random_list = {
			50 = {
				if = {
					limit = {
						check_variable = {
							which = "bwm_artifact_kill_counter"
							value < 1
						}
					}
					set_variable = {
						which = "bwm_artifact_kill_counter"
						value = 1
					}
				}
				else = {
					change_variable = {
						which = "bwm_artifact_kill_counter"
						value = 1
					}
					if = {
						limit ={
							check_variable = {
								which = "bwm_artifact_kill_counter"
								value > 5
							}
						}
						set_variable = {
							which = "bwm_artifact_kill_counter"
							value = 5
						}
					}
					if = {
						limit = {
							AND = {
								check_variable = {
									which = "bwm_artifact_kill_counter"
									value = 5
								}
							}
						}
						from = {
							set_country_flag = bwm_artifact_weakness_check
							country_event = { id = bwm_artifact.301 days = 30 }
						}
					}
				}
			}
			50 = {
			}
		}
	}
}

#Weakness Research Project

country_event = {
	id = bwm_artifact.301
	title = "bwm_artifact.301.name"
	desc = "bwm_artifact.301.desc"
	picture = GFX_evt_exploding_ship
	is_triggered_only = yes

	trigger = {
		NOT = {
			any_country = {
				has_country_flag = bwm_artifact_relic_unlock
			}
			has_country_flag = bwm_artifact_weakness_researched 
		}
	}

	option = {
		name = bwm_artifact.301.a
		allow = {
			hidden_trigger = {
				NOT = { has_modifier = bwm_gate_weakness }
			}
		}
		hidden_effect = { set_country_flag = bwm_artifact_weakness_researched  }
		capital_scope = { save_event_target_as = bwm_pc_home }
		enable_special_project = {
			name = "bwm_ARTIFACT_WEAKNESS_PROJECT"
			location = event_target:bwm_pc_home
			owner = ROOT
		}
	}	
	option = {
		name = bwm_artifact.301.b
		add_resource = { influence = 100 }
	}
}

#Weakness research project complete

country_event = {
	id = bwm_artifact.302
	title = "bwm_artifact.302.name"
	desc = "bwm_artifact.302.desc"
	picture = GFX_evt_physics_research
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_modifier = bwm_gate_weakness
		}
	}

	option = {
		name = bwm_artifact.302.a
		add_modifier = {
			modifier = bwm_gate_weakness
			days = -1
		}
	}
}

#Weakness Research Init 2

country_event = {
	id = bwm_artifact.303
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = bwm_ancient_drone_guardian
		from = {
			NOT = {
				has_country_flag = bwm_artifact_drone_weakness_check
			}
			is_ai = no
	
			AND = {
				OR = {
					has_technology = "tech_ship_armor_5"
					has_technology = "tech_dragon_armor"
					has_technology = "tech_bwm_lex_armor"
				}
				OR = {
					has_technology = "tech_shields_5"
					has_technology = "tech_psionic_shield"
					#has_technology = "tech_enigmatic_deflector"
					has_technology = "tech_bwm_lex_shield"
				}		
				OR = {
					has_technology = "tech_zero_point_power"
					#has_technology = "tech_enigmatic_power_core"
					has_technology = "tech_bwm_lex_power"
				}
				OR = {
					has_technology = "tech_energy_lance_2"
					has_technology = "tech_arc_emitter_2"
					has_technology = "tech_mass_accelerator_2"
				}
			}
		}
	}

	immediate = {
		random_list = {
			50 = {
				if = {
					limit = {
						check_variable = {
							which = "bwm_artifact_drone_kill_counter"
							value < 1
						}
					}
					set_variable = {
						which = "bwm_artifact_drone_kill_counter"
						value = 1
					}
				}
				else = {
					change_variable = {
						which = "bwm_artifact_drone_kill_counter"
						value = 1
					}
					if = {
						limit ={
							check_variable = {
								which = "bwm_artifact_drone_kill_counter"
								value > 5
							}
						}
						set_variable = {
							which = "bwm_artifact_drone_kill_counter"
							value = 5
						}
					}
					if = {
						limit = {
							AND = {
								check_variable = {
									which = "bwm_artifact_drone_kill_counter"
									value = 5
								}
							}
						}
						from = {
							set_country_flag = bwm_artifact_drone_weakness_check
							country_event = { id = bwm_artifact.304 days = 30 }
						}
					}
				}
			}
			50 = {
			}
		}
	}
}

#Weakness Research Project 2

country_event = {
	id = bwm_artifact.304
	title = "bwm_artifact.304.name"
	desc = "bwm_artifact.304.desc"
	picture = GFX_evt_exploding_ship
	is_triggered_only = yes

	trigger = {
		NOT = {
			any_country = {
				has_country_flag = bwm_artifact_relic_unlock
			}
			has_country_flag = bwm_artifact_drone_weakness_researched 
		}
	}

	option = {
		name = bwm_artifact.304.a
		allow = {
			hidden_trigger = {
				NOT = { has_modifier = bwm_artifact_drone_weakness }
			}
		}
		hidden_effect = { set_country_flag = bwm_artifact_drone_weakness_researched   }
		capital_scope = { save_event_target_as = bwm_pc_home }
		enable_special_project = {
			name = "bwm_ARTIFACT_DRONE_WEAKNESS_PROJECT"
			location = event_target:bwm_pc_home
			owner = ROOT
		}
	}	
	option = {
		name = bwm_artifact.304.b
		add_resource = { influence = 100 }
	}
}

#Weakness research project 2 complete

country_event = {
	id = bwm_artifact.305
	title = "bwm_artifact.305.name"
	desc = "bwm_artifact.305.desc"
	picture = GFX_evt_physics_research
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_modifier = bwm_artifact_drone_weakness
		}
	}

	option = {
		name = bwm_artifact.305.a
		add_modifier = {
			modifier = bwm_artifact_drone_weakness
			days = -1
		}
	}
}

#Enraged Shroud Spirit

planet_event = {
	id = bwm_artifact.400
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		this = {
			save_event_target_as = bwm_artifact_shroud_escape_loc
		}
		if = {
			limit = {
				NOT = {
					exists = event_target:bwm_shroud_country
				} 
			}
			create_country = {
				name = "NAME_Creatures_of_the_Shroud"
				type = bwm_shroud_guardian
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"dark_purple"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = bwm_shroud_country
					if = {
						limit = {
							NOT = {
								has_modifier = bwm_shroud_power
							}
						}
						add_modifier = {
							modifier = bwm_shroud_power
							days = -1
						}
					}
				}
			}
			every_country = {
				if = {
					limit = {
						NOT = {
							has_communications = event_target:bwm_shroud_country
						}
					}
					establish_communications_no_message = event_target:bwm_shroud_country
				}
			}
		}
		create_fleet = {
			name = "Shroudborn"
			settings = {
				spawn_debris = no
				is_boss = yes
			}			
			effect = {
				set_owner = event_target:bwm_shroud_country
				create_ship = {
					name = "Un'Mada"
					design = "Ru'Ha"
				}
				set_location = event_target:bwm_artifact_shroud_escape_loc
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
				
				fleet_event = { id = bwm_artifact.2 days = 1800 }
			}
		}
	}
}

country_event = {
	id = bwm_artifact.1000
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			OR = {
				is_ship_size = bwm_artifact_station
				is_ship_size = bwm_artifact_ship
				has_ship_flag = bwm_artifact_prototype
			}
		}
		FROM = {
			OR = {
				is_country_type = shroud
				is_country_type = shroud_spirits
			}
		}
	}
	
	immediate = {
		FROMFROM = {
			add_modifier = {
				modifier = "bwm_power_bonus"
				days = 360
			}
		}
	}
}
