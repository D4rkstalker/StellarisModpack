namespace = emex_planet_destruction

#planet_event = {
#	id = planet_destruction.1
#	is_triggered_only = yes
#	hide_window = yes
#
#	immediate = {
#		remove_planet = yes
#	}
#}

# Add static war exhaustion for these planet destruction events with: 
# add_static_war_exhaustion = {
#				attacker = <country>		 				# attacker in this battle
#				location = <planet>							# location for battle
#				value_for_planet_destruction = <0.0-1.0>	# scale amount of WE added to this battle
#			}

# Corrupted
planet_event = {
	id = emex_planet_destruction.1
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				NOT = {	has_global_flag = emex_corrupt_matter_intro }
			}
			add_deposit = d_emex_sr_warped_matter_deposit_2
			owner = { country_event = { id = maai.8 } } #for corrupted empire
			set_global_flag = emex_corrupt_matter_intro
		}
		if = {
			limit = {
				from.owner = { is_country_type = master_ai_country }
				NOT = {
					has_global_flag = corrupter_fired_by_master_ai
				}
			}
			every_playable_country = {
				limit = {
					is_ai = no
					NOR = {
						is_same_value = owner
						is_same_value = from.owner
					}
				}
				country_event = { id = maai.5 days = 3 } #for galaxy (master ai first time)
			}
		}
		else_if = {
			limit = {
				from.owner = { NOT = { is_country_type = master_ai_country } }
				NOT = {
					has_global_flag = corrupter_fired_by_default_empire
				}
			}
			owner = { country_event = { id = maai.4 } } #for corrupted empire
			every_playable_country = {
				limit = {
					is_ai = no
					NOR = {
						is_same_value = owner
						is_same_value = from.owner
					}
				}
				country_event = { id = maai.6 days = 3 } #for galaxy (normal empire first time)
			}
		}
		else = {
			#nothing
		}
		if = { #for corrupter empire
			limit = {
				exists = owner
				owner = { NOT = { is_country_type = swarm } }
				NOT = { is_planet_class = pc_ai }
			}
			from.owner = { country_event = { id = maai.3 } } #for tech + other shit
		}
		if = {
			limit = {
				exists = owner
				owner = {
					NOT = { is_same_value = from.owner }
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
			}
			# Generate threat
			if = {
				limit = {
					is_colony = yes
				}
				add_threat = { who = from.owner amount = 1 }
				# modifier for allies + those upset by genocide
				every_country = {
					limit = {
						NOR = {
							is_same_value = from.owner
							is_same_value = root.owner
							AND = {
								has_federation = yes
								is_in_federation_with = from.owner
							}
						}
						OR = {
							has_communications = from.owner
							has_communications = root.owner
						}
						OR = {
							AND = {
								has_federation = yes
								is_in_federation_with = root.owner
							}
							has_ai_personality = awakened_fallen_empire_xenophile
							AND = {
								is_country_type = default
								OR = {
									is_egalitarian = yes
									is_xenophile = yes
								}
							}
						}
					}
					if = {
						limit = { root = { is_colony = no } }
						add_opinion_modifier = {
							modifier = opinion_cracked_an_uninhabited_world
							who = from.owner
						}
					}
					else = {
						add_opinion_modifier = {
							modifier = opinion_cracked_a_world
							who = from.owner
						}
					}
				}
			}
			else = {
				add_threat = { who = from.owner amount = 1 }
			}
			# modifiers for victim
			owner = {
				if = {
					limit = { root = { is_colony = no } }
					add_opinion_modifier = {
						modifier = opinion_cracked_my_uninhabited_world
						who = from.owner
					}
				}
				else = {
					add_opinion_modifier = {
						modifier = opinion_cracked_my_world
						who = from.owner
					}
				}
				if = {
					limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
					add_modifier = {
						modifier = colossus_victim
						days = 10800 # 30 years
					}
				}
			}
			if = {
				limit = {
					exists = owner
					owner = { is_country_type = primitive }
				}
				# modifier for allies + those upset by genocide
				every_country = {
					limit = {
						NOT = { is_same_value = from.owner }
						OR = {
							has_communications = from.owner
							has_communications = root.owner
						}
						OR = {
							has_ai_personality = awakened_fallen_empire_xenophile
							AND = {
								is_country_type = default
								NOR = {
									is_xenophobe = yes
									is_homicidal = yes
									is_xenophile = yes
								}
							}
						}
					}
					add_opinion_modifier = {
						modifier = opinion_cracked_a_primitive_world
						who = from.owner
					}
				}
				every_country = {
					limit = {
						NOT = { is_same_value = from.owner }
						OR = {
							has_communications = from.owner
							has_communications = root.owner
						}
						OR = {
							has_ai_personality = awakened_fallen_empire_xenophile
							AND = {
								is_country_type = default
								is_xenophile = yes
							}
						}
					}
					add_opinion_modifier = {
						modifier = opinion_cracked_a_primitive_world_phile
						who = from.owner
					}
				}
			}
		}
		# Add war exhaustion to planet owner 
		if = {
			limit = {
				exists = owner
			}
			owner = {
				add_static_war_exhaustion = {
					attacker = from.fleet.owner
					location = root
					value_for_planet_destruction = 0.75
				}
			}			
		}
		every_owned_pop = {
			kill_pop = yes
		}
		remove_all_buildings = yes
		# destroy habitats and ringworlds
		# Special graphics for Habitats and Ring Worlds
		if = {
			limit = {
				is_planet_class = pc_habitat
			}
			spawn_habitat_cracker_effect = yes
			remove_planet = yes
		}
		else_if = {
			limit = {
				is_planet_class = pc_ringworld_habitable
			}
			spawn_ringworld_cracker_effect = yes
			change_pc = pc_ringworld_habitable_damaged
		}
		else = {
			change_pc = pc_corrupted
			clear_deposits = yes
			random_list = {
				#1 = {
				#	add_deposit = d_emex_sr_warped_matter_deposit_3
				#}
				1 = {
					add_deposit = d_emex_sr_warped_matter_deposit_2
				}
				7 = {
					add_deposit = d_emex_sr_warped_matter_deposit_1
				}
				10 = {
					add_deposit = d_dark_matter_deposit_3
				}
				15 = {
					add_deposit = d_dark_matter_deposit_2
				}
				5 = {
					add_deposit = d_dark_matter_deposit_1
				}
			}
		}
	}
}