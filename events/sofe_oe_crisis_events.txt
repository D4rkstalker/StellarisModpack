namespace = sofe_crisis

# Origin Empire Emerges, time to remove your save
country_event = {
	id = sofe_crisis.1
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = outergates_activated_globally
		set_global_flag = active_origin_crisis
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					is_country_type = ascended_empire
					#is_country_type = lost_empire
					is_country_type = eternal_empire
					is_country_type = original_empire_active
				}
			}
			begin_event_chain = {
				event_chain = "origin_crisis_chain"
				target = this
			}
			add_event_chain_counter = {
				event_chain = "origin_crisis_chain"
				counter = "active_original_worlds"
				amount = 4
			}
		}
		every_megastructure = {
			limit = {
				is_megastructure_type = sofe_outer_gate
			}
			activate_gateway = this
		}
		random_system = {
			limit = { has_star_flag = original_fortress_system }
			random_system_planet = {
				limit = { has_planet_flag = star_heart }
				save_event_target_as = star_heart
			}
		}
		create_species = {
			name = "NAME_ORIGINAL"
			class = PROGENITOR
			portrait = progenitors
			traits = {
				trait = trait_pc_all_preference
				trait = trait_bionic_implants
				trait = trait_ancient_race
				trait = trait_ancient_knowledge
				trait = trait_master_mind
				}
			immortal = yes
			effect = { save_global_event_target_as = origin_species }
		}
		create_species = {
			name = "NAME_OE_CARETAKER"
			class = PROGENITOR
			portrait = progenitors
			traits = {
				trait = trait_pc_all_preference
				}
			immortal = yes
			effect = { save_global_event_target_as = oe_caretaker_species }
		}
		create_country = {
			name = "NAME_ORIGINAL_EMPIRE"
			type = "original_empire"
			species = event_target:origin_species
			name_list = "Stellarborne"
			authority = auth_sofe_ancients
			civics = { 						# Custom civics with bonuses against AEs here
				civic = civic_eternal_fleet
				civic = civic_know_everything
				civic = civic_solar_empire
			}
			ignore_initial_colony_error = yes
			flag = {
				icon= {
					category = "original"
					file = "original_empire_flag.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"beige"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = origin_crisis_country
				create_ship_design = { design = "NAME_PROGENITOR_ESCORT" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_PROGENITOR_BATTLECRUISER" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_PROGENITOR_TITAN" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_PROGENITOR_AVATAR" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_PROGENITOR_SENTINEL" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_ORIGIN_CARRIER" }
				add_ship_design = last_created_design

				create_ship_design = { design = "NAME_ORIGIN_TOWER" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_ORIGIN_CITADEL" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_OE_Super_Starbase" }
				add_ship_design = last_created_design

				give_technology = { tech = tech_progenitor_escort } 	
				give_technology = { tech = tech_progenitor_battlecruiser } 	
				give_technology = { tech = tech_progenitor_titan } 		
				give_technology = { tech = tech_progenitor_avatar } 
		
				give_technology = { tech = tech_omega_warmech } 	
				give_technology = { tech = tech_ultimate_weapon } 	
			}
		}
	last_created_country = {
		clear_ethos = yes
		change_dominant_species = { species = event_target:origin_species change_all = yes }
		every_country = {
			limit = {
				OR = {
					is_country_type = primitive
					is_country_type = tiyanki		
					is_country_type = guardian	
					is_country_type = cloud	
					is_country_type = enigmatic_cache	
					is_country_type = enclave	
					is_country_type = caravaneer_fleet		
					is_country_type = caravaneer_home		
					is_country_type = guardian_stellarite
					is_country_type = nivlacs		
					is_country_type = nomad
					is_country_type = guardian_elderly_tiyanki																	
				}
			}
			set_faction_hostility = {
				target = prev
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = enigmatic_cache		
					is_country_type = guardian_stellarite
					is_country_type = guardian_elderly_tiyanki																								
				}
			}
			set_faction_hostility = {
				target = prev
				set_hostile = no
				set_neutral = yes
				set_friendly = no
			}
		}

		add_resource = {
			minerals = 1000000
			energy = 1000000
			alloys = 1000000
			food = 1000000
			consumer_goods = 1000000
			sr_dark_matter = 1000000
			acot_sr_dark_energy = 1000000
			acot_sr_stellarite = 1000000
			acot_sr_light_matter = 1000000				
			influence = 1000
			unity = 100000
		}
		country_event = { id = sofe_crisis.14 days = 30 } #REINFORCERER
		create_leader = {
			class = ruler
			species = event_target:origin_species
			name = "leader_kolyn"
			skill = 10
			gender = male
			leader_age_min = 1731241
			leader_age_max = 2002416
			traits = {
				trait = leader_trait_ruler_ancient_knowledge
				trait = leader_trait_ruler_bionic_implant
				trait = leader_trait_ruler_master_mind
			}
		}
		assign_leader = last_created_leader
		create_leader = {
			class = admiral
			species = event_target:origin_species
			name = "leader_the_executor"
			traits = {
				trait = leader_trait_admiral_ancient_knowledge
				trait = leader_trait_admiral_bionic_implant
				trait = leader_trait_admiral_master_mind
			}
			gender = female
			set_age = 1816751
			skill = 10
		}
			create_fleet = {
				name = "NAME_Origin_Fleet_Arkship"
				settings = {
					spawn_debris = no 
					is_boss = yes
					garrison = yes
					can_upgrade = no
				}
			effect = {
				set_owner = event_target:origin_crisis_country
				create_ship = {
					name = "ORIGIN_GAIA_MAIN"
					design = "ORIGIN_GAIA_MAIN"
					effect = {
						set_ship_flag = arkship_first_life
						set_disable_at_health = 0.01
						}
					}
				assign_leader = last_created_leader
				set_location = {
					target = event_target:star_heart
					distance = 75
					angle = 265
					}
					save_event_target_as = origin_flagship_factory
				}
			}
		}
	every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					is_country_type = eternal_empire
					is_country_type = original_empire_active
					is_country_type = ascended_empire
					#is_country_type = lost_empire
					is_country_type = sofe_light_seeker
					is_ai = no
				}
			}
		establish_communications_no_message = event_target:origin_crisis_country
	}

###############################################
### THIS PART HANDLES PLANET SPAWN
###############################################


	random_system = {
		limit = { has_star_flag = original_fortress_system }
		random_planet = {
			limit = { has_planet_flag = CapitalFortress }
			planet_event = { id = sofe_crisis.2555 days = 2  }
		}
	}
	random_system = {
		limit = { has_star_flag = outercluster2 }
		random_planet = {
			limit = { has_planet_flag = wardena }
			planet_event = { id = sofe_crisis.10 }
		}
	}
	random_system = {
		limit = { has_star_flag = outercluster3 }
		random_planet = {
			limit = { has_planet_flag = wardenb }
			save_global_event_target_as = WardenB
			planet_event = { id = sofe_crisis.11 }
		}
	}
	random_system = {
		limit = { has_star_flag = outercluster4 }
		random_planet = {
			limit = { has_planet_flag = wardenc }
			planet_event = { id = sofe_crisis.12 }
		}
	}
	random_system = {
		limit = { has_star_flag = outercluster5 }
		random_planet = {
			limit = { has_planet_flag = wardend }
			planet_event = { id = sofe_crisis.13 }
		}
	}
###############################################
#### 
###############################################

	event_target:origin_crisis_country = {
		create_leader = {
			class = admiral
			species = event_target:origin_species
			name = random
			traits = {
				trait = leader_trait_admiral_ancient_knowledge
				trait = leader_trait_admiral_bionic_implant
				trait = leader_trait_admiral_master_mind
			}
			set_age = 871378
			skill = 10
		}
	create_fleet = {
		name = "NAME_Origin_Fleet_Garrison_Home"
		effect = {
			set_owner = event_target:origin_crisis_country
			create_origin_homeworld_ships = yes
			assign_leader = last_created_leader	
			set_formation_scale = 2
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 250
			set_location = {
				target = event_target:origin_flagship_factory
				distance = 65
				angle = 0
			}
		}
		settings = {
				garrison = yes
				spawn_debris = yes 
				is_boss = yes
				uses_naval_capacity = no
			}
		}	
		
	create_leader = {
			class = admiral
			species = event_target:origin_species
			name = random
			traits = {
				trait = leader_trait_admiral_ancient_knowledge
				trait = leader_trait_admiral_bionic_implant
				trait = leader_trait_admiral_master_mind
			}
			set_age = 437382
			skill = 10
		}
	create_fleet = {
		name = "NAME_Origin_Fleet_Garrison_Home"
		effect = {
			set_owner = event_target:origin_crisis_country
			create_origin_homeworld_ships = yes
			assign_leader = last_created_leader
			set_formation_scale = 3
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = return_point
			set_aggro_range = 250
			set_location = {
				target = event_target:origin_flagship_factory
				distance = 65
				angle = 90
			}
		}
		settings = {
				spawn_debris = yes 
				is_boss = yes
				garrison = yes
				uses_naval_capacity = no
			}
		}
	}

		every_system = {
			limit = {
				has_star_flag = outercluster
			}
				every_system_planet = {
					limit = { is_planet_class = pc_golden_world }
					create_fleet = {
						name = "NAME_Origin_Fleet_Garrison"
							settings = {
								spawn_debris = no
								is_boss = yes
								garrison = yes
								uses_naval_capacity = no
								can_upgrade = no
							}
						effect = {
							set_owner = event_target:origin_crisis_country
							create_origin_garrison_ships = yes
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 350
							set_location = {
								target = prev
								distance = 65
								angle = random
							}
						}
					}
					create_fleet = {
						name = "NAME_Origin_Fleet_Garrison"
							settings = {
								spawn_debris = no
								is_boss = yes
								garrison = yes
								uses_naval_capacity = no
								can_upgrade = no
							}
						effect = {
							set_owner = event_target:origin_crisis_country
							create_origin_garrison_ships = yes
							set_formation_scale = 2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 350
							set_location = {
								target = prev
								distance = 45
								angle = random
							}
						}
					}	
					create_fleet = {
						name = "NAME_Origin_Colossus_Fleet"
						effect = {
							set_owner = event_target:origin_crisis_country
							create_origin_colossus = yes
							set_formation_scale = 2
							set_location = {
								target = prev
								distance = 15
								angle = random
							}
						}
						settings = {
							spawn_debris = no 
							is_boss = yes
							garrison = yes
							can_upgrade = no
						}
					}
				}
			solar_system = {
				create_original_home_citadel = yes
			}
		}
		country_event = { id = sofe_crisis.20 }
		random_country = {
			limit = { 
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire				
				}
				NOT = { has_authority = auth_machine_intelligence }
			}
			country_event = { id = sofe_crisis.32 days = 60 }
		}
		awaken_guardians_against_orginal = yes
		awaken_afe_against_orginal = yes
		awaken_caretaker_against_original = yes
		every_playable_country = {
			limit = {
				NOR = {
					is_ai = yes
					is_same_value = root 
				}
			}
			country_event = { id = sofe_crisis.21 }
		}
		every_system = {
			limit = {
				has_star_flag = outercluster_gate
				any_system_megastructure = { 
					is_megastructure_type = sofe_outer_gate
				}
			}
		random_system_megastructure = {
			limit = {
				is_megastructure_type = sofe_outer_gate
			}
				create_fleet = {
					name = "NAME_Origin_Fleet_Garrison"
						settings = {
							spawn_debris = no
							is_boss = yes
							garrison = yes
							uses_naval_capacity = no
							can_upgrade = no
						}
					effect = {
						set_owner = event_target:origin_crisis_country
						create_origin_garrison_ships = yes
						set_formation_scale = 2
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 350
						set_location = {
							target = prev
							distance = 75
							angle = 0
						}
					}
				}
				create_fleet = {
					name = "NAME_Origin_Fleet_Garrison"
						settings = {
							spawn_debris = no
							is_boss = yes
							garrison = yes
							uses_naval_capacity = no
							can_upgrade = no
						}
					effect = {
						set_owner = event_target:origin_crisis_country
						create_origin_garrison_ships = yes
						set_formation_scale = 2
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 350
						set_location = {
							target = prev
							distance = 120
							angle = 180
						
						}
					}
				}
			}
		}
		every_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = { 
					is_megastructure_type = sofe_outer_gate
				}
			}
			solar_system = {
				if = {
					limit = {
						any_ship_in_system = {
							is_ship_class = shipclass_starbase
						}
					}
					random_fleet_in_system = {
						limit = {
							any_owned_ship = {
								is_ship_class = shipclass_starbase
							}
						}
						destroy_fleet = this
					}
				}
				create_original_citadel = yes
			}
		random_system_megastructure = {
			limit = {
				is_megastructure_type = sofe_outer_gate
			}
				create_fleet = {
					name = "NAME_Origin_Fleet_Garrison"
						settings = {
							spawn_debris = no
							is_boss = yes
							garrison = yes
							uses_naval_capacity = no
							can_upgrade = no
						}
					effect = {
						set_owner = event_target:origin_crisis_country
						create_origin_outsider_ships = yes
						set_formation_scale = 2
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 350
						set_location = {
							target = prev
							distance = 35
							angle = 0
						
						}
					}
				}
			}
		}
	}
}

###########################################
### WORLDS 
###########################################

# Original Emprie Fortress
planet_event = {
	id = sofe_crisis.2555
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {	
		set_capital = yes
		save_event_target_as = OE_Fortress
		set_owner = event_target:origin_crisis_country
		set_controller = event_target:origin_crisis_country
		planet_event = { id = sofe_crisis.1302 days = 360 }
		while = {
			count = 3
			create_pop = {
				species = event_target:oe_caretaker_species
			}
		}	
		
		root.owner = {
			create_leader = {
				class = general
				species = event_target:origin_species
				name = random
				traits = {
					trait = leader_trait_general_ancient_knowledge
					trait = leader_trait_general_bionic_implant
					trait = leader_trait_general_master_mind
				}
				leader_age_min = 116501
				leader_age_max = 982141
				skill = 10
			}
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		last_created_army = { assign_leader = last_created_leader }
	}
}

###GOLDEN WORLD###
planet_event = {
	id = sofe_crisis.10
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {	
		save_global_event_target_as = wardenworldA
		set_owner = event_target:origin_crisis_country
		create_point_of_interest = {
			id = sofe_golden_world.1
			name = sofe_golden_world.poi
			event_chain = origin_crisis_chain
			location = THIS
		}


		planet_event = { id = sofe_crisis.1300 } # Start Fleet reinforcement cycle
	}
}

planet_event = {
	id = sofe_crisis.11
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {	
		save_global_event_target_as = wardenworldB
		set_owner = event_target:origin_crisis_country
		#set_controller = event_target:origin_crisis_country
		create_point_of_interest = {
			id = sofe_golden_world.2
			name = sofe_golden_world.poi
			event_chain = origin_crisis_chain
			location = THIS
		}


		planet_event = { id = sofe_crisis.1300 } # Start Fleet reinforcement cycle
	}
}

planet_event = {
	id = sofe_crisis.12
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {	
		save_global_event_target_as = wardenworldC
		set_owner = event_target:origin_crisis_country
		create_point_of_interest = {
			id = sofe_golden_world.3
			name = sofe_golden_world.poi
			event_chain = origin_crisis_chain
			location = THIS
		}


		planet_event = { id = sofe_crisis.1300 } # Start Fleet reinforcement cycle
	}
}

planet_event = {
	id = sofe_crisis.13
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {	
		save_global_event_target_as = wardenworldD
		set_owner = event_target:origin_crisis_country
		create_point_of_interest = {
			id = sofe_golden_world.4
			name = sofe_golden_world.poi
			event_chain = origin_crisis_chain
			location = THIS
		}

		planet_event = { id = sofe_crisis.1300 } # Start Fleet reinforcement cycle
	}
}

###########################################
### Reinforcement Cycle
###########################################

# Golden WorldFleet Reinforcement Cycle
planet_event = {
	id = sofe_crisis.1300
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_planet_class = pc_golden_world
		NOT = { has_planet_flag = golden_world_disabled }
		owner = { is_country_type = original_empire }
	}
	
	immediate = {
		# If at fleet cap, check again later
		if = {
			limit = {
				owner = { num_ships > 4000 }
			}
			planet_event = { id = sofe_crisis.1300 days = 300 }
			break = yes
		}
		# If being bombarded, check again later
		if = {
			limit = { has_orbital_bombardment = yes }
			planet_event = { id = sofe_crisis.1300 days = 300 }
			break = yes
		}
		# BOmbs away
		else = {
			planet_event = { id = sofe_crisis.1301 days = 3600 }
			break = yes
		}
	}
}


# OE Fleet Reinforcements Arrive
planet_event = {
	id = sofe_crisis.1301
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_planet_class = pc_golden_world
		owner = { is_country_type = "original_empire" }
	}
	
	immediate = {
		create_origin_main_fleet = yes
		planet_event = { id = sofe_crisis.1300 }
	}
}

# OE Heavy Fleet Checker
planet_event = {
	id = sofe_crisis.1302
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		has_global_flag = active_origin_crisis
		owner = { is_country_type = "original_empire" }
	}
	
	immediate = {
		if = {
			limit = {
				any_system = {
					has_star_flag = outercluster
					any_ship_in_system = {
						owner = { 
							OR = {
								is_country_type = default
								is_country_type = fallen_empire
								is_country_type = awakened_fallen_empire
								is_country_type = ascended_empire
								#is_country_type = lost_empire							
								is_country_type = eternal_empire	
								is_country_type = original_empire_active								
							}
							NOT = {
								is_same_value = event_target:origin_crisis_country
							}
						}
					}
				}
			}
			planet_event = { id = sofe_crisis.1303 }		
		}
		else = {
			planet_event = { id = sofe_crisis.1302 days = 360 }		#Check Again	
		}
	}
}

# OE Fleet Reinforcements Arrive
planet_event = {
	id = sofe_crisis.1303
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		owner = { is_country_type = "original_empire" }
	}
	
	immediate = {
		create_origin_heavy_fleet = yes
		create_origin_heavy_fleet = yes
		create_origin_heavy_fleet = yes
		if = {
			limit = {
				has_global_flag = terrible_sofe
			 }
			 create_origin_arkship_attack_fleet = yes			
		}
		planet_event = { id = sofe_crisis.1302 days = 3600 }
	}
}


# Outsider Reinforcer
country_event = {
	id = sofe_crisis.14
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = active_origin_crisis
		exists = event_target:origin_crisis_country
	}

	immediate = {
		every_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
					event_target:origin_crisis_country = {
						num_ships > 4000
					}
				}
				any_system_megastructure = { 
					is_megastructure_type = sofe_outer_gate
				}
				is_owned_by = event_target:origin_crisis_country
			}
			random_system_megastructure = {
				limit = {
					is_megastructure_type = sofe_outer_gate
				}
				create_fleet = {
					name = "NAME_Origin_Fleet_Scout"
					settings = { 
						can_upgrade = no 
						can_disband = no
						uses_naval_capacity = no
						is_boss = yes
						spawn_debris = no
						can_change_composition = no 
						can_change_leader = no 
					}
					effect = {
						set_owner = event_target:origin_crisis_country
						create_origin_scout_ships = yes
						set_formation_scale = 2
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 250
						set_location = {
							target = prev
							distance = 0
							angle = 0
							}
						}
					}
				}	
			}	
		every_country = {
			limit = {
				is_ai =yes
					OR = {
						is_country_type = awakened_fallen_empire
						is_country_type = fallen_empire						
					}
				}
			# Gives AFE more resources
				add_resource = {
					minerals = 350000
					energy = 350000
					sr_dark_matter = 2500
					acot_sr_dark_energy = 2500
					alloys = 25000
				}
			
			# Add some more fleet for FEs
			country_event = { id = sofe_crisis.1400 }
			country_event = { id = sofe_crisis.1400 days = 180 }
		}
			country_event = { id = sofe_crisis.14 days = 720 }
	}
}

# Fallen Empire fleet spawning event special for Crisis Suprano Lorenzo
country_event = {
	id = sofe_crisis.1400
	title = OK
	desc = OK
	
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				num_ships <= 2000
			 }
			 capital_scope = {	
				create_fallen_empire_origin_response_fleet = yes
			}			
		}
	}
}

###########################################
### OTHERS 
###########################################

# The Gate (Instigator)
country_event = {
	id = sofe_crisis.20
	title = "origin_crisis.10.name"
	desc = {
		text = "origin_crisis.10.desc"
		trigger = {
			is_progenitor_empires = no
		}
	}
	desc = {
		text = "origin_crisis.10.playoe.desc"
		trigger = {
			is_progenitor_empires = yes
		}
	}

	picture = GFX_evt_sofe_outergate_ship_emerges
	show_sound = event_critical_alert
	
	immediate = {
		end_event_chain = sofe_outergate_chain
	}

	is_triggered_only = yes

	option = {
		name = origin_crisis.10.a
		trigger = {
			is_progenitor_empires = no			
		}
		default_hide_option = yes
		hidden_effect = {
			country_event = { id = sofe_crisis.23 }
		}
	}

	option = {
		name = origin_crisis.10.a.playoe
		trigger = {
			is_progenitor_empires = yes			
		}
		default_hide_option = yes
		hidden_effect = {
			country_event = { id = sofe_crisis.24 }
		}
	}
}


# The Gate (Other, has project/chain)
country_event = {
	id = sofe_crisis.21
	title = "origin_crisis.10.name"
	desc = {
		text = "origin_crisis.11.desc"
		trigger = {
			is_progenitor_empires = no
		}
	}
	desc = {
		text = "origin_crisis.11.playoe.desc"
		trigger = {
			is_progenitor_empires = yes
		}
	}
	picture = GFX_evt_sofe_outergate_ship_emerges
	show_sound = event_critical_alert

	is_triggered_only = yes

	immediate = {
		end_event_chain = sofe_outergate_chain
	}

	option = {
		name = origin_crisis.10.a
		default_hide_option = yes
		hidden_effect = {
			country_event = { id = sofe_crisis.23 }
		}
	}

	option = {
		name = origin_crisis.11.a.playoe
		trigger = {
			is_progenitor_empires = yes			
		}
		default_hide_option = yes
		hidden_effect = {
			country_event = { id = sofe_crisis.24 }
		}
	}
}

# Incoming Transmission
country_event = {
	id = sofe_crisis.23 
	title = "TRANSMISSION"
	desc = "origin_crisis.12.desc"
	
	diplomatic = yes
	
	picture_event_data = {
		room = sofe_records_room
	}
	
	is_triggered_only = yes
	
	option = {
		name = origin_crisis.12.a
		response_text = origin_crisis.12.a.response
		is_dialog_only = yes
	}
	option = {
		name = origin_crisis.12.b
		response_text = origin_crisis.12.b.response
		is_dialog_only = yes
	}
	option = {
		name = origin_crisis.12.c
		response_text = origin_crisis.12.c.response
		is_dialog_only = yes
	}
	option = {
		name = origin_crisis.12.d
		default_hide_option = yes
		hidden_effect = {
			country_event = { id = sofe_crisis.24 }
		}
	}
}

# Origin Introduction
country_event = {
	id = sofe_crisis.24
	title = "origin_diplo_header_2"
	desc = {
		trigger = {
			NOR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
				is_country_type = eternal_empire
				is_country_type = original_empire_active
			}
		}
		text = origin.15.1.desc
	}
	desc = {
		trigger = {
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
		}
		text = origin.15.1.desc.fallen
	}
	desc = {
		trigger = {
			OR = {
				is_country_type = eternal_empire
			}
		}
		text = origin.15.1.desc.eternal
	}
	desc = {
		trigger = {
			is_progenitor_empires = yes
		}
		text = origin.15.1.desc.oe
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	
	immediate = {
	}

	option = {
		name = origin.15.a
		trigger = {
			NOR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
				is_country_type = eternal_empire
				is_country_type = original_empire_active
			}			
		}
		response_text = origin.15.a.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.b
		trigger = {
			NOR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
				is_country_type = eternal_empire
				is_country_type = original_empire_active
			}			
		}
		response_text = origin.15.b.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.c
		trigger = {
			NOR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
				is_country_type = eternal_empire
				is_country_type = original_empire_active
			}			
		}
		response_text = origin.15.c.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.d
		trigger = {
			NOR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
				is_country_type = eternal_empire
				is_country_type = original_empire_active
			}			
		}
		response_text = origin.15.d.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.e
		trigger = {
			NOR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
				is_country_type = eternal_empire
				is_country_type = original_empire_active
			}			
		}
		default_hide_option = yes
	}

	option = {
		name = origin.15.fallen.a
		trigger = {
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}			
		}
		response_text = origin.15.fallen.a.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.fallen.b
		trigger = {
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}		
		}
		response_text = origin.15.fallen.b.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.fallen.c
		trigger = {
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}			
		}
		response_text = origin.15.fallen.c.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.fallen.d
		response_text = origin.15.fallen.d.response
		trigger = {
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}		
		}
		default_hide_option = yes
	}

	option = {
		name = origin.15.eternal.a
		trigger = {
			OR = {
				is_country_type = eternal_empire
			}
		}
		response_text = origin.15.eternal.a.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.eternal.b
		trigger = {
			OR = {
				is_country_type = eternal_empire
			}
		}
		response_text = origin.15.eternal.b.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.eternal.c
		trigger = {
			OR = {
				is_country_type = eternal_empire
			}	
		}
		response_text = origin.15.eternal.c.response
		is_dialog_only = yes
	}
	option = {
		name = origin.15.eternal.d
		trigger = {
			OR = {
				is_country_type = eternal_empire
			}	
		}
		default_hide_option = yes
	}

	option = {
		name = origin.15.oe.a
		custom_tooltip = origin.15.oe.a.tooltip
		response_text = origin.15.oe.a.response
		is_dialog_only = yes
		trigger = {
			is_progenitor_empires = yes
		}
	}

	option = {
		name = origin.15.oe.b
		#custom_tooltip = origin.15.oe.b.tooltip
		response_text = origin.15.oe.b.response
		is_dialog_only = yes
		trigger = {
			is_progenitor_empires = yes
		}
	}

	option = {
		name = origin.15.oe.c
		#custom_tooltip = origin.15.oe.c.tooltip
		response_text = origin.15.oe.c.response
		is_dialog_only = yes
		trigger = {
			is_progenitor_empires = yes
		}
	}

	option = {
		name = origin.15.oe.d
		custom_tooltip = origin.15.oe.d.tooltip
		trigger = {
			is_progenitor_empires = yes
		}
		default_hide_option = yes
	}

	after = {
	}
}


# Machine Fallen Empire - Awakening to stop Original Crisis
country_event = {
	id = sofe_crisis.30
	title = OK
	desc = OK

	hide_window = yes

	is_triggered_only = yes

	immediate = {	
		set_country_type = awakened_fallen_empire
		
		change_government = {
				civics = {
					civic = civic_awakened_machine
					civic = civic_final_defense_protocols
			}
		}				

		# Changing country type resets resources, so give them full stores
		add_resource = {
			minerals = 500000
			energy = 500000
			alloys = 50000
			sr_dark_matter = 5000
			acot_sr_dark_energy = 5000
			influence = 1000
		}

		# Add some more fleet
		country_event = { id = sofe_crisis.1400 }
		country_event = { id = sofe_crisis.1400 days = 10 }
		country_event = { id = sofe_crisis.1400 days = 20 }
		country_event = { id = sofe_crisis.1400 days = 200 }
		country_event = { id = sofe_crisis.1400 days = 300 }
		# Establish communications
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { has_communications = root }
			}

			establish_communications_no_message = root
		}
		
		root = { save_event_target_as = awakened_machine_empire }
		
		# Notify players
		every_country = {
			limit = {
				is_ai = no
				NOT = {
					is_same_empire = root
				}
			}
			country_event = { id = sofe_crisis.31 }
		}
	}
}

country_event = {
	id = sofe_crisis.31
	title = fallenorigin.2.name
	location = event_target:awakened_machine_empire.capital_scope
	
	diplomatic = yes
	is_triggered_only = yes
	show_sound = event_ai_started
	
	picture_event_data = {
		portrait = event_target:awakened_machine_empire
		planet_background = event_target:awakened_machine_empire
		graphical_culture = event_target:awakened_machine_empire
		city_level = event_target:awakened_machine_empire
		room = event_target:awakened_machine_empire.ruler
	}
	
	desc = {
		text = fallenorigin.2.desc_01
	}
	
	option = {
		name = fallenorigin.2.a
		response_text = fallenorigin.2.a.response
		is_dialog_only = yes
	}
	
	option = {
		name = fallenorigin.2.b
		response_text = fallenorigin.2.b.response
		is_dialog_only = yes
	}

	option = {
		name = fallenorigin.2.c
	}
}


# Random Falen Empire Awakes to combat Original Empire
country_event = {
	id = sofe_crisis.32
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { NOT = { has_global_flag = sleepers_awake_happened } }
			set_global_flag = sleepers_awake_happened			
		}

		country_event = { id = sofe_crisis.33 }
		set_country_flag = fe_oe_combatant
		# Notify players
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = { id = sofe_crisis.34 }
		}
		if = {
			limit = { 
				any_country = {
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire						
					}
					is_ai = yes
					NOT = { has_authority = auth_machine_intelligence }		
					NOT = { has_country_flag = fe_oe_combatant }			
				}
			}
			random_country = {
				limit = { 
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire						
					}
					is_ai = yes
					NOT = { has_authority = auth_machine_intelligence }
					NOT = { has_country_flag = fe_oe_combatant }			
				}
				country_event = { id = sofe_crisis.32 days = 80 }
			}	
		}
	}
}

country_event = {
	id = sofe_crisis.33

	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_country_type = fallen_empire }
			set_country_flag = sleepers_awake_first_sleeper
			set_country_type = awakened_fallen_empire	
			change_government = {
				civics = {
					civic = civic_revanchist_fervor
					civic = civic_ancient_caches_of_technology
				}
			}		
		}
		every_country = {
			limit = { 
				OR = {
					is_country_type = default
					is_country_type = ascended_empire
					is_country_type = awakened_fallen_empire
				}
			}
			set_timed_country_flag = { flag = ai_no_wars days = 3600 }
		}

		# Changing country type resets resources, so give them full stores
		add_resource = {
			minerals = 500000
			energy = 500000
			alloys = 500000
			consumer_goods = 500000
			unity = 500000
			sr_dark_matter = 50000
			acot_sr_dark_energy = 50000
			influence = 1000
		}
		# Add some more fleet
		country_event = { id = sofe_crisis.1400 }
		country_event = { id = sofe_crisis.1400 days = 10 }
		country_event = { id = sofe_crisis.1400 days = 20 }
		country_event = { id = sofe_crisis.1400 days = 200 }
		country_event = { id = sofe_crisis.1400 days = 300 }

		every_country = {
			limit = {
				is_country_type = default
			}
			random_list = {
				45 = { add_opinion_modifier = { who = root modifier = opinion_crisis_fighter } }
				55 = { add_opinion_modifier = { who = root modifier = opinion_crisis_fighter_small } }
			}
		}

		# Establish communications
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = ascended_empire
					#is_country_type = lost_empire
					is_country_type = eternal_empire
					is_country_type = original_empire_active
				}
			}

			establish_communications_no_message = root
			root = { save_event_target_as = contact_empire }
			country_event = { id = sofe_crisis.35 }
		}
	}
}

country_event = {
	id = sofe_crisis.34
	title = origin_fallen_empires_awakening.2.name
	desc = origin_fallen_empires_awakening.5.desc
	picture = GFX_evt_fallen_empire
	show_sound = event_fallen_response
	location = from

	is_triggered_only = yes

	option = {
		name = origin_fallen_empires_awakening.2.a
	}
	option = {
		name = origin_fallen_empires_awakening.5.a
	}
	option = {
		trigger = {
				is_country_type = ascended_empire
			}
		name = origin_fallen_empires_awakening.5.b
	}
	option = {
		trigger = {
			OR = {
				is_country_type = fallen_empire	
				is_country_type = awakened_fallen_empire				
			}
		}
		name = origin_fallen_empires_awakening.5.b
	}
}

### Fallen Empire Explains Why They No Longer AFK, because you stupid fools try to do something only stupid fools would do
country_event = {
	id = sofe_crisis.35
	title = fallenorigin.1.name
	message_desc = fallenorigin.1.message
	location = event_target:contact_empire.capital_scope
	
	picture_event_data = {
		portrait = event_target:contact_empire
		planet_background = event_target:contact_empire
		graphical_culture = event_target:contact_empire
		city_level = event_target:contact_empire
		room = event_target:contact_empire.ruler
	}
	
	# Awakened Fallen Empire 1 - Spiritualist Idiots that do nothing but AFK until shit happens
	desc = {
		text = fallenorigin.1.desc_66
		trigger = {
			event_target:contact_empire = {
				is_country_type = awakened_fallen_empire
				has_ethic = ethic_fanatic_spiritualist
			}
		}
	}
	# Awakened Fallen Empire 2 - Xenophile, the only real good guy. At least until it is revealed what a terribly shitty scumbag losers they are
	desc = {
		text = fallenorigin.1.desc_67
		trigger = {
			event_target:contact_empire = {
				is_country_type = awakened_fallen_empire
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}
	# Awakened Fallen Empire 3 - Xenophobe, why did you allow this garbage to live this long? You're terrible at playing Stellaris!!!
	desc = {
		text = fallenorigin.1.desc_68
		trigger = {
			event_target:contact_empire = {
				is_country_type = awakened_fallen_empire
				has_ethic = ethic_fanatic_xenophobe				
			}
		}
	}
	# Awakened Fallen Empire 4 - Materialist. They are ok I guess, just not very helpful because they think we're better off with red lasers
	desc = {
		text = fallenorigin.1.desc_69
		trigger = {
			event_target:contact_empire = {
				is_country_type = awakened_fallen_empire
				has_ethic = ethic_fanatic_materialist
			}
		}
	}
	
	diplomatic = yes
	is_triggered_only = yes
	
	trigger = {
		is_ai = no
		event_target:contact_empire = {
			is_primitive = no
			NOR = {
				is_country_type = tiyanki
				is_country_type = neutral_faction
				is_country_type = faction
				is_country_type = pirate
				#is_country_type = nomad #triggered in a special case event
				is_country_type = amoeba
				is_country_type = crystal
				is_country_type = drone
				is_country_type = cloud
				has_relation_flag = { flag = AbandonedRefugees who = root }
			}
		}
	}
	
	immediate = {
		event_target:contact_empire = {
			save_event_target_as = contact_speaker
		}
	}
	
	option = {
		name = fallenorigin.1.ask_origin
		trigger = {
			FROM = { has_ethic = ethic_fanatic_xenophile }
		}	
		response_text = fallenorigin.1.ask_origin_phile_response
		is_dialog_only = yes
	}
	option = {
		name = fallenorigin.1.ask_light
		trigger = {
			FROM = { has_ethic = ethic_fanatic_xenophile }
		}	
		response_text =  fallenorigin.1.ask_light_phile_response
		is_dialog_only = yes
	}
	option = {
		name = fallenorigin.1.ask_origin
		trigger = {
			FROM = { has_ethic = ethic_fanatic_xenophobe }
		}	
		response_text = fallenorigin.1.ask_origin_phobe_response
		is_dialog_only = yes
	}
	option = {
		name = fallenorigin.1.ask_light
		trigger = {
			FROM = { has_ethic = ethic_fanatic_xenophobe }
		}	
		response_text = fallenorigin.1.ask_light_phobe_response
		is_dialog_only = yes
	}
	option = {
		name = fallenorigin.1.ask_origin
		trigger = {
			FROM = { has_ethic = ethic_fanatic_spiritualist }
		}	
		response_text = fallenorigin.1.ask_origin_spirit_response
		is_dialog_only = yes
	}
	option = {
		name = fallenorigin.1.ask_light
		trigger = {
			FROM = { has_ethic = ethic_fanatic_spiritualist }
		}	
		response_text = fallenorigin.1.ask_light_spirit_response
		is_dialog_only = yes
	}
	option = {
		name = fallenorigin.1.ask_origin
		trigger = {
			FROM = { has_ethic = ethic_fanatic_materialist }
		}	
		response_text = fallenorigin.1.ask_origin_mat_response
		is_dialog_only = yes
	}
	option = {
		name = fallenorigin.1.ask_light
		trigger = {
			FROM = { has_ethic = ethic_fanatic_materialist }
		}	
		response_text = fallenorigin.1.ask_light_mat_response
		is_dialog_only = yes
	}
	option = {
		name = fallenorigin.1.end
	}
}

# Colony Bombarded
planet_event = {
	id = sofe_crisis.40
	title = "origin_crisis.2.name"
	desc = "origin_crisis.2.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_ghost_town

	is_triggered_only = yes

	trigger = {
		planet_devastation >= 100
		FROM = { is_country_type = original_empire }
	}

	immediate = {
		reset_planet = yes
		destroy_colony = yes
		if = {
			limit = { NOT = { has_modifier = natural_beauty }}
			add_modifier = { modifier = natural_beauty }				
		}
		if = {
			limit = { NOT = { has_modifier = mineral_rich }}
			add_modifier = { modifier = mineral_rich }				
		}
		if = {
			limit = { NOT = { has_modifier = lush_planet }}
			add_modifier = { modifier = lush_planet }				
		}
		if = {
			limit = { has_modifier = low_gravity }
			remove_modifier = low_gravity
		}
		if = {
			limit = { has_modifier = high_gravity }
			remove_modifier = high_gravity
		}
		if = {
			limit = { has_modifier = wild_storms }
			remove_modifier = wild_storms
		}
		if = {
			limit = { has_modifier = extreme_storms }
			remove_modifier = extreme_storms
		}
		add_deposit = d_underwater_vent
		add_deposit = d_frozen_gas_lake
		add_deposit = d_tempestous_mountain
		add_deposit = d_searing_desert
		add_deposit = d_buzzing_plains

		add_deposit = d_rich_mountain
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins
		add_deposit = d_ore_rich_caverns
		add_deposit = d_mineral_striations

		add_deposit = d_teeming_reef
		add_deposit = d_lush_jungle
		add_deposit = d_black_soil
		add_deposit = d_fertile_lands
		add_deposit = d_natural_farmland

		add_deposit = d_dust_desert
		add_deposit = d_fuming_bog
		add_deposit = d_dust_caverns
		add_deposit = d_bubbling_swamp
		add_deposit = d_crystal_reef
		add_deposit = d_crystal_forest

		add_deposit = d_betharian_deposit
		add_deposit = d_alien_pets_deposit
		if = {
			limit = {
				OR = {
					habitable_planet = yes
					is_planet_class = pc_toxic
					is_planet_class = pc_shrouded
				}
				NOR = {
					is_ringworld = yes
					habitable_structure = yes
					is_planet_class = pc_golden_world_habitable
					is_planet_class = pc_golden_world
					is_planet_class = pc_golden_world_habitable
				}
			}
			change_pc = pc_gaia
		}
		else = {
			if = {
				limit = { is_planet_class = pc_ringworld_habitable }
			}
			if = {
				limit = { is_planet_class = pc_habitat }
				remove_planet = yes
			}
		}
		add_threat = { who = from amount = 20 }

		from = {
			change_variable = { 
				which = "planets_lost_to_origin" 
				value = 1 
			}
		}
		if = {
			limit = { FROM = { is_country_type = original_empire } }
			every_country = {
				limit = { has_event_chain = "origin_crisis_chain" }
				add_event_chain_counter = {
					event_chain = "origin_crisis_chain"
					counter = "nanited_worlds"
					amount = 1
				}
			}
			break = yes
		}
	}

	option = {
		name = origin_crisis.2.a
	}
}

#########################VICTORY CONDITION###############

# Golden World Destroyed
planet_event = {
	id = sofe_crisis.401
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_planet_class = pc_golden_world
		OR = { # cracked or bombarded to death
			from = { is_same_value = root }
			planet_devastation >= 100
		}
	}
	
	immediate = {
		set_planet_flag = golden_world_disabled
		if = {
			limit = { has_planet_flag = wardena }
			every_country = {
				limit = { has_event_chain = "origin_crisis_chain" }
				remove_point_of_interest = sofe_golden_world.1
			}
		}
		if = {
			limit = { has_planet_flag = wardenb }
			every_country = {
				limit = { has_event_chain = "origin_crisis_chain" }
				remove_point_of_interest = sofe_golden_world.2
			}
		}
		if = {
			limit = { has_planet_flag = wardenc }
			every_country = {
				limit = { has_event_chain = "origin_crisis_chain" }
				remove_point_of_interest = sofe_golden_world.3
			}
		}
		if = {
			limit = { has_planet_flag = wardend }
			every_country = {
				limit = { has_event_chain = "origin_crisis_chain" }
				remove_point_of_interest = sofe_golden_world.4
			}
		}
		if = {
			limit = {
				NOT = { has_planet_flag = destroyed_by_colossus }
			}
			destroy_colony = yes
			reset_planet = yes
		}

		every_country = {
			limit = { has_event_chain = "origin_crisis_chain" }
			add_event_chain_counter = {
				event_chain = "origin_crisis_chain"
				counter = "active_original_worlds"
				amount = -1 
			}
		}
		random_country = {
			limit = { is_country_type = "original_empire" }
			random_planet = {
				limit = {
					has_planet_flag = CapitalA
				}
				create_origin_heavy_fleet = yes
				if = {
					limit = {
						has_global_flag = terrible_sofe
					 }
					 create_origin_arkship_attack_fleet = yes			
				}
			}
			random_planet = {
				limit = {
					has_planet_flag = CapitalB
				}
				create_origin_heavy_fleet = yes
			}
			change_variable = { 
				which = "golden_world_destroyed" 
				value = 1
			}
			if = {
				limit = {
					check_variable = { 
						which = "golden_world_destroyed" 
						value = 1 
					}
				}
				every_country = {
					limit = { is_ai = no }
					country_event = { id = sofe_crisis.402 }
				}
				break = yes
			}
			if = {
				limit = {
					check_variable = { 
						which = "golden_world_destroyed" 
						value = 2 
					}
				}
				set_global_flag = first_golden_world_destroyed
				every_country = {
					limit = { is_ai = no }
					country_event = { id = sofe_crisis.402 }
				}
				break = yes
			}
			if = {
				limit = {
					check_variable = { 
						which = "golden_world_destroyed" 
						value = 3 
					}
				}
				every_country = {
					limit = { is_ai = no }
					country_event = { id = sofe_crisis.402 }
				}
				break = yes
			}
			if = {
				limit = {
					check_variable = { 
						which = "golden_world_destroyed" 
						value = 4 
					}
				}
				every_country = {
					limit = { is_ai = no }
					country_event = { id = sofe_crisis.403 }
				}
				break = yes
			}
		}
	}
}

# Golden World World Destroyed
country_event = {
	id = sofe_crisis.402
	title = "sofe_crisis.402.name"

	desc = {
		text = sofe_crisis.402.desc
		trigger = { 
			NOT = {
				has_global_flag = first_golden_world_destroyed
			}
		}
	}
	desc = {
		text = sofe_crisis.402.desc.again
		trigger = { 
			has_global_flag = first_golden_world_destroyed
		}
	}

	picture = GFX_evt_exploding_planet
	show_sound = event_super_explosion
	location = from
	
	is_triggered_only = yes

	option = {
		trigger = { 
			NOT = { has_global_flag = first_golden_world_destroyed }
		}
		name = sofe_crisis.402.a
		hidden_effect = {
			country_event = { id = sofe_crisis.405 }
		}
	}

	option = {
		trigger = { 
			has_global_flag = first_golden_world_destroyed 
		}
		name = sofe_crisis.402.b
	}
}

# Final Golden World Destroyed
country_event = {
	id = sofe_crisis.403
	title = "sofe_crisis.402.name"
	desc = sofe_crisis.403.desc

	picture = GFX_evt_exploding_planet
	show_sound = event_super_explosion
	location = from
	
	is_triggered_only = yes

	option = {
		name = sofe_crisis.402.a
		trigger = {
			OR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 
		}
	}

	option = {
		name = sofe_crisis.402.b
		trigger = {
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 
		}
	}

	after = {
		hidden_effect = {
			country_event = { id = sofe_crisis.406 }
		}		
	}
}

# Origin Complement upon killing at least one homeworld.
country_event = {
	id = sofe_crisis.405
	title = "origin_diplo_header_2"
	desc = {
		trigger = {
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		text = sofe_crisis.405.desc
	}
	desc = {
		trigger = {
			OR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		text = sofe_crisis.405.desc.edge
	}	

	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	
	immediate = {
	}

	option = {
		name = origin.405.a
		trigger = {
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		response_text = origin.405.a.response
		is_dialog_only = yes
	}
	option = {
		name = origin.405.b
		trigger = {
			OR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		response_text = origin.405.b.response
	}
	option = {
		name = origin.405.c
		trigger = {
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		response_text = origin.405.c.response
		default_hide_option = yes
	}
}

# Origin Complement upon killing all golden worlds.
country_event = {
	id = sofe_crisis.406
	title = "origin_diplo_header_2"
	desc = {
		trigger = {
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		text = sofe_crisis.406.desc
	}
	desc = {
		trigger = {
			OR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		text = sofe_crisis.406.desc.edge
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	
	immediate = {
	}

	option = {
		trigger = {
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		name = origin.406.a
		response_text = origin.406.a.response
	}
	option = {
		trigger = {
			OR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		name = origin.406.b
		response_text = origin.406.b.response
	}
}

# Original Fortress WOrld conquered
country_event = {
	id = sofe_crisis.50
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = { is_country_type = original_empire }	
		has_global_flag = active_origin_crisis
		fromfrom = {
			is_planet_class = pc_golden_fortress			
		}
	}

	immediate = {
		FROMFROM = {
			set_controller = event_target:origin_crisis_country
		}
		country_event = { id = sofe_crisis.501 }
	}	
}

# Original Fortress WOrld conquered Passive
country_event = {
	id = sofe_crisis.50100
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = { is_country_type = original_empire_passive }	
	}

	immediate = {
		FROMFROM = {
			set_owner = root	
		}
	}	
}

# Origin Complement upon victory over Fortress World
country_event = {
	id = sofe_crisis.501
	title = "origin_diplo_header_2"
	desc = {
		trigger = {
			is_progenitor_empires = no
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		text = sofe_crisis.501.desc
	}
	desc = {
		trigger = {
			is_progenitor_empires = no
			OR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		text = sofe_crisis.501.desc.edge
	}
	desc = {
		trigger = {
			is_progenitor_empires = yes		
		}
		text = sofe_crisis.501.desc.playoe
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	
	immediate = {
	}

	option = {
		name = origin.501.a
		trigger = {
			is_progenitor_empires = no
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		response_text = origin.501.a.response
		is_dialog_only = yes
	}
	option = {
		name = origin.501.a.fallenask
		trigger = {
			is_progenitor_empires = no
			any_country = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = {
					has_authority = auth_machine_intelligence
				}
			}
		}
		response_text = origin.501.a.fallenask.response
		is_dialog_only = yes
	}
	option = {
		name = sofe_crisis.501.b
		custom_tooltip = sofe_crisis.501.b_explain
		trigger = {
			is_progenitor_empires = no
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		response_text = sofe_crisis.501.b.response
		country_event = { id = sofe_crisis.502 }
	}
	option = {
		name = sofe_crisis.501.c
		custom_tooltip = sofe_crisis.501.c_explain
		trigger = {
			is_progenitor_empires = no
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		response_text = sofe_crisis.501.c.response
		country_event = { id = sofe_crisis.503 }
	}
	option = {
		name = sofe_crisis.501.c.edge
		trigger = {
			is_progenitor_empires = no
			OR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		response_text = sofe_crisis.501.c.response.edge
		custom_tooltip = sofe_crisis.501.c_explain
		country_event = { id = sofe_crisis.503 }
	}
	option = {
		name = sofe_crisis.501.d
		trigger = {
			is_progenitor_empires = no
			NOR = { 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		response_text = sofe_crisis.501.d.response
		custom_tooltip = sofe_crisis.501.d_explain
		hidden_effect = {
			event_target:origin_crisis_country = {
				country_event = { id = sofe_crisis.504 days = 3 }
			}
		}
	}
	option = {
		name = sofe_crisis.501.e
		response_text = sofe_crisis.501.e.response
		custom_tooltip = sofe_crisis.501.e_explain
		trigger = {
			is_progenitor_empires = no
			OR = { 
				has_ethic = ethic_fanatic_xenophobe
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			} 			
		}
		hidden_effect = {
			event_target:origin_crisis_country = {
				country_event = { id = sofe_crisis.504 days = 3 }
			}
		}
	}

	option = {
		name = origin.501.playoe.a
		trigger = {
			is_progenitor_empires = yes	
		}
		response_text = origin.501.playoe.a.response
		country_event = { id = sofe_crisis.502 }
	}

	option = {
		name = origin.501.playoe.b
		trigger = {
			is_progenitor_empires = yes	
		}
		response_text = origin.501.playoe.b.response
		event_target:origin_crisis_country = {
			country_event = { id = sofe_crisis.505 days = 3 }
		}
	}
}

# Death
country_event = {
	id = sofe_crisis.50101
	title = sofe_crisis.50101.name
	desc =  sofe_crisis.50101.desc
	show_sound = event_divine_punishment
	is_triggered_only = yes
	picture = GFX_evt_sofe_vanish

	immediate = {
	}	

	option = {
		name = sofe_crisis.50101.a	
		custom_tooltip = sofe_crisis.50101.explain	
	}
	option = {
		name = sofe_crisis.50101.b		
		custom_tooltip = sofe_crisis.50101.explain	
	}
	option = {
		name = sofe_crisis.50101.c	
		custom_tooltip = sofe_crisis.50101.explain		
	}
	option = {
		name = sofe_crisis.50101.d	
		custom_tooltip = sofe_crisis.50101.explain	
	}
	option = {
		name = sofe_crisis.50101.e	
		custom_tooltip = sofe_crisis.50101.explain	
	}
}


# Original Empire selects the winner as the champion
country_event = {
	id = sofe_crisis.502
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		remove_global_flag = active_origin_crisis
		save_global_event_target_as = sofe_champion_country
		set_country_flag = winner_of_sofe
		create_ship_design = { design = "NAME_OE_Super_Starbase_Playable" }
		add_ship_design = last_created_design		
		event_target:outercluster1 = {
			spawn_system = {
				min_distance >= 31
				max_distance <= 31
				min_orientation_angle = 100
				max_orientation_angle = 100
				initializer = sofe_original_homeworld_init
			}		
		}
		every_system = {
			limit = {
				has_star_flag = outercluster
			}
			isolate_system = yes	
		}
		event_target:origin_crisis_country = {
			set_country_type = original_empire_passive
			set_country_flag = origin_has_champion
			change_government = {
				civics = {
					civic = civic_eternal_fleet_passive
					civic = civic_know_everything_passive
					civic = civic_solar_empire_passive
				}
			}
			every_owned_ship = {
				delete_ship = this
			}
			every_owned_fleet = {
				delete_fleet = this
			}
			every_owned_pop = {
				kill_pop = yes
			}
		}
		every_planet = {
			limit = {
				is_planet_class = pc_golden_world
				has_planet_flag = oe_warden_world
			}
			change_pc = pc_golden_world_habitable
			remove_all_districts = yes
			while = {
				count = 50
				add_district = district_sofe_omega_city
			}
			while = {
				count = 25
				add_district = district_sofe_omega_logistics
			}
			while = {
				count = 25
				add_district = district_sofe_omega_progression
			}

			add_building = building_heaven_sanctuary
			add_building = building_eden_garden
			add_building = building_crystal_arch
			add_building = building_chamber_of_hope
			add_building = building_library_of_fate
			add_building = building_power_pyramid
			add_building = building_super_shelter
			add_building = building_light_foundry
			set_owner = root
			set_controller = root
			while = {
				count = 20
				create_pop = {
					species = owner_main_species
				}
			}	
		}
		every_planet = {
			limit = {
				is_planet_class = pc_golden_fortress
				has_planet_flag = CapitalFortress
			}
			remove_all_districts = yes
			remove_all_buildings = yes
			while = {
				count = 50
				add_district = district_sofe_omega_city
			}
			while = {
				count = 25
				add_district = district_sofe_omega_logistics
			}
			while = {
				count = 25
				add_district = district_sofe_omega_progression
			}

			add_building = building_heaven_sanctuary
			add_building = building_eden_garden
			add_building = building_crystal_arch
			add_building = building_chamber_of_hope
			add_building = building_library_of_fate
			add_building = building_power_pyramid
			add_building = building_super_shelter
			add_building = building_light_foundry
			set_owner = root
			set_controller = root
			while = {
				count = 20
				create_pop = {
					species = owner_main_species
				}
			}	
		}
		country_event = {
			id = sofe_crisis.50303
			days = 1
		}
		every_country = {
			limit = {
				has_event_chain = origin_crisis_chain
			}
			end_event_chain = origin_crisis_chain
		}
		if = {
			limit = {
				any_country = {
					is_fallen_machine_empire = yes					
				}
			 }
			random_country = {
				limit = {
					is_fallen_machine_empire = yes
				}
				country_event = { id = sofe_crisis.5004 days = 30 }				
			}
		}
		every_country = {
			limit = {
				is_subject = yes
				has_overlord = event_target:origin_crisis_country
			}
			set_subject_of = {
				who = none
			}
			country_event = { id = sofe_crisis.611 }		
		}
		every_playable_country = {
			limit = {
				NOR = {
					is_same_value = root
					is_ai = yes
				}
			}
			country_event = { id = sofe_crisis.5001 }
		}
	}	
}

# Original Empire leaves the galaxy forevah
country_event = {
	id = sofe_crisis.50303
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		every_system = {
			limit = {
				OR = {
					has_star_flag = outercluster
					has_megastructure = sofe_outer_gate
				}
			}
			solar_system = {
				if = {
					limit = {
						exists = starbase
					}
					starbase = { set_owner = root }
				}
				else = {
					create_starbase = {
						size = starbase_citadel
						module = shipyard
						owner = root
					}
				}
			}
		}
	}	
}

# Original Empire leaves the galaxy forevah
country_event = {
	id = sofe_crisis.503
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		remove_global_flag = active_origin_crisis
		every_country = {
			limit = {
				has_event_chain = origin_crisis_chain
			}
			end_event_chain = origin_crisis_chain
		}
		if = {
			limit = {
				any_country = {
					is_fallen_machine_empire = yes					
				}
			 }
			random_country = {
				limit = {
					is_fallen_machine_empire = yes
				}
				country_event = { id = sofe_crisis.5004 days = 30 }				
			}
		}
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
			}
			country_event = { id = sofe_crisis.5002 }
		}
		every_system = {
			limit = {
				has_star_flag = outercluster
			}
			every_fleet_in_system = {
				owner = {
					capital_scope = {
						save_event_target_as = go_back_to_base_sofe
					}
				}
				set_location = event_target:go_back_to_base_sofe
				clear_orders = yes 
			}
		}
		event_target:origin_crisis_country = {
			set_country_type = original_empire_passive
			set_country_flag = origin_no_champion
			change_government = {
				civics = {
					civic = civic_eternal_fleet_passive
					civic = civic_know_everything_passive
					civic = civic_solar_empire_passive
				}
			}	
			add_resource = {
				minerals = 100000
				energy = 100000
				alloys = 100000
				food = 100000
				consumer_goods = 100000
				sr_dark_matter = 100000
				acot_sr_dark_energy = 100000
				acot_sr_stellarite = 100000
				acot_sr_light_matter = 100000				
				influence = 1000
				unity = 100000
			}
			every_owned_fleet = {
				delete_fleet = this
			}
			every_system = {
				limit = {
					has_star_flag = outercluster
				}
				every_system_planet = {
					remove_planet = yes
				}
				every_system_megastructure = {
					remove_megastructure = this
				}
			}
			every_megastructure = {
				limit = {
					is_megastructure_type = sofe_outer_gate
				}
				remove_megastructure = this
			}
		every_country = {
			limit = {
				is_subject = yes
				has_overlord = event_target:origin_crisis_country
			}
			set_subject_of = {
				who = none
			}
			if = {
				limit = {
					is_country_type = default
				 }
				 country_event = { id = sofe_crisis.611 }				
			}
			if = {
				limit = {
					OR = {
						is_country_type = ascended_empire
						#is_country_type = lost_empire											
					}
				 }
				 	country_event = { id = sofe_crisis.612 }				
				}
			}		
		}
	}	
}

# Original Empire erases the galaxy - AHAHAHHAHAHAHAHAHHAH
country_event = {
	id = sofe_crisis.504
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		remove_global_flag = active_origin_crisis
		every_country = {
			limit = {
				has_event_chain = origin_crisis_chain
			}
			end_event_chain = origin_crisis_chain
		}
		event_target:origin_crisis_country = {
			set_country_type = original_empire_passive
			set_country_flag = origin_mournful
		}
		every_planet = {
			limit = {
				is_planet_class = pc_golden_world
			}
			change_pc = pc_golden_world_habitable

			remove_all_districts = yes
			while = {
				count = 50
				add_district = district_sofe_omega_city
			}
			while = {
				count = 25
				add_district = district_sofe_omega_logistics
			}
			while = {
				count = 25
				add_district = district_sofe_omega_progression
			}

			add_building = building_heaven_sanctuary
			add_building = building_eden_garden
			add_building = building_crystal_arch
			add_building = building_chamber_of_hope
			add_building = building_library_of_fate
			add_building = building_power_pyramid
			add_building = building_super_shelter
			add_building = building_light_foundry
		}
		every_country = {
			limit = {
				NOR = {
					is_country_type = global_event
					is_progenitor_empires = yes
				}
			}
			IF = {
				limit = {
					is_ai = no				
				}
				country_event = { id = sofe_crisis.50101 }				
			}
			destroy_country = yes
		}
		every_planet = {
			limit = {
				NOT = {
					is_owned_by = event_target:origin_crisis_country
				}
			}
			remove_planet = yes
		}
		every_megastructure = {
			remove_megastructure = this
		}
	}	
}

# You and the OE erases the galaxy - AHAHAHHAHAHAHAHAHHAH
country_event = {
	id = sofe_crisis.505
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		remove_global_flag = active_origin_crisis
		save_global_event_target_as = sofe_champion_country
		set_country_flag = winner_of_sofe
		event_target:outercluster1 = {
			spawn_system = {
				min_distance >= 31
				max_distance <= 31
				min_orientation_angle = 100
				max_orientation_angle = 100
				initializer = sofe_original_homeworld_init
			}		
		}
		every_system = {
			limit = {
				has_star_flag = outercluster
			}
			isolate_system = yes	
		}
		if = {
			limit = { 
				is_progenitor_empires = no
			}
			create_ship_design = { design = "NAME_OE_Super_Starbase_Playable" }
			add_ship_design = last_created_design		
		}
		event_target:origin_crisis_country = {
			set_country_type = original_empire_passive
			set_country_flag = origin_has_champion
			change_government = {
				civics = {
					civic = civic_eternal_fleet_passive
					civic = civic_know_everything_passive
					civic = civic_solar_empire_passive
				}
			}
			every_owned_ship = {
				delete_ship = this
			}
			every_owned_pop = {
				kill_pop = yes
			}
		}
		every_planet = {
			limit = {
				is_planet_class = pc_golden_world
				has_planet_flag = oe_warden_world
			}
			change_pc = pc_golden_world_habitable
			remove_all_districts = yes
			while = {
				count = 50
				add_district = district_sofe_omega_city
			}
			while = {
				count = 25
				add_district = district_sofe_omega_logistics
			}
			while = {
				count = 25
				add_district = district_sofe_omega_progression
			}

			add_building = building_heaven_sanctuary
			add_building = building_eden_garden
			add_building = building_crystal_arch
			add_building = building_chamber_of_hope
			add_building = building_library_of_fate
			add_building = building_power_pyramid
			add_building = building_super_shelter
			add_building = building_light_foundry
			set_owner = root
			while = {
				count = 20
				create_pop = {
					species = owner_main_species
				}
			}	
		}
		every_planet = {
			limit = {
				is_planet_class = pc_golden_fortress
				has_planet_flag = CapitalFortress
			}
			remove_all_districts = yes
			remove_all_buildings = yes
			while = {
				count = 50
				add_district = district_sofe_omega_city
			}
			while = {
				count = 25
				add_district = district_sofe_omega_logistics
			}
			while = {
				count = 25
				add_district = district_sofe_omega_progression
			}

			add_building = building_heaven_sanctuary
			add_building = building_eden_garden
			add_building = building_crystal_arch
			add_building = building_chamber_of_hope
			add_building = building_library_of_fate
			add_building = building_power_pyramid
			add_building = building_super_shelter
			add_building = building_light_foundry
			set_owner = root
			while = {
				count = 20
				create_pop = {
					species = owner_main_species
				}
			}	
		}
		every_system = {
			limit = {
				OR = {
					has_star_flag = outercluster
					has_megastructure = sofe_outer_gate
				}
			}
			solar_system = {
				if = {
					limit = {
						any_ship_in_system = {
							is_ship_class = shipclass_starbase
						}
					}
					random_fleet_in_system = {
						limit = {
							any_owned_ship = {
								is_ship_class = shipclass_starbase
							}
						}
						destroy_fleet = this
					}
				}
				create_starbase = {
					size = "origin_super_citadel_playable"
					owner = root
			
					module = "sofe_omega_shipyard"
					module = "sofe_omega_shipyard"
					module = "sofe_gun_battery"
					module = "sofe_gun_battery"
					module = "sofe_pd_battery"
					module = "sofe_pd_battery"
					
					building = "sofe_module_lm_generator"
					building = "sofe_module_lm_generator"
				}
			}
		}
		every_country = {
			limit = {
				has_event_chain = origin_crisis_chain
			}
			end_event_chain = origin_crisis_chain
		}
		event_target:origin_crisis_country = {
			set_country_type = original_empire_passive
			set_country_flag = origin_mournful
		}
		every_planet = {
			limit = {
				is_planet_class = pc_golden_world
			}
			change_pc = pc_golden_world_habitable

			remove_all_districts = yes
			while = {
				count = 50
				add_district = district_sofe_omega_city
			}
			while = {
				count = 25
				add_district = district_sofe_omega_logistics
			}
			while = {
				count = 25
				add_district = district_sofe_omega_progression
			}

			add_building = building_heaven_sanctuary
			add_building = building_eden_garden
			add_building = building_crystal_arch
			add_building = building_chamber_of_hope
			add_building = building_library_of_fate
			add_building = building_power_pyramid
			add_building = building_super_shelter
			add_building = building_light_foundry
		}
		every_country = {
			limit = {
				NOR = {
					is_country_type = global_event
					is_progenitor_empires = yes
				}
			}
			IF = {
				limit = {
					is_ai = no				
				}
				country_event = { id = sofe_crisis.50101 }				
			}
			destroy_country = yes
		}
		every_planet = {
			limit = {
				NOR = {
					is_owned_by = event_target:origin_crisis_country
					is_owned_by = event_target:sofe_champion_country
				}
			}
			remove_planet = yes
		}
		every_megastructure = {
			limit = {
				NOR = {
					is_megastructure_type = sofe_inner_gate
					is_megastructure_type = sofe_outer_gate
				}
				owner = {
					NOR = {
						is_same_value = event_target:origin_crisis_country
						is_same_value = event_target:sofe_champion_country
					}
				}
			}
			remove_megastructure = this
		}
	}	
}


#
country_event = {
	id = sofe_crisis.5001
	title = "sofe_crisis.5001.name"
	desc = sofe_crisis.5001.desc

	picture = GFX_evt_origin_empire
	show_sound = event_celebration
	location = from
	
	is_triggered_only = yes

	option = {
		name = sofe_crisis.5001.a
	}

	option = {
		name = sofe_crisis.5001.b
	}
}

# 
country_event = {
	id = sofe_crisis.5002
	title = "sofe_crisis.5001.name"
	desc = sofe_crisis.5002.desc

	picture = GFX_evt_origin_empire
	show_sound = event_celebration
	location = from
	
	is_triggered_only = yes

	option = {
		name = sofe_crisis.5001.a
	}

	option = {
		name = sofe_crisis.5001.b
	}
}

#
country_event = {
	id = sofe_crisis.5003
	title = "sofe_crisis.5001.name"
	desc = sofe_crisis.5003.desc

	picture = GFX_evt_origin_empire
	show_sound = event_celebration
	location = from
	
	is_triggered_only = yes

	option = {
		name = sofe_crisis.5003.a
	}
}

# Machine Fallen Empire - Shutdown
country_event = {
	id = sofe_crisis.5004
	title = OK
	desc = OK

	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		NOT = { has_civic = civic_malfunctioning_custodian }
	}

	immediate = {
		set_country_flag = silence_destroy_event
		
		every_owned_fleet = {
			limit = {
				OR = {
					is_ship_class = shipclass_constructor
					is_ship_class = shipclass_transport
					is_ship_class = shipclass_military_station
					is_ship_class = shipclass_military
				}			
			}
			destroy_fleet = this
		}

		every_owned_fleet = {
			limit = {
				OR = {
					is_ship_class = shipclass_military_station
				}			
			}
			destroy_fleet = this
		}		
	
		every_owned_planet = {
			destroy_colony = yes
		}

		destroy_country = yes
		
		# Notify players
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = { id = sofe_crisis.5005 }
		}
	}
}

country_event = {
	id = sofe_crisis.5005
	title = "fallenorigin.4.name"
	desc = "fallenorigin.4.desc"
	show_sound = event_default
	picture = GFX_evt_fallen_empire
	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

####################DIPLOMATIC OPTIONS###################

# Origin Good Man Diplomacy
country_event = {
	id = sofe_crisis.600
	title = "origin_diplo_header_2"

	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 				
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			}
		}
		text = "origin.550.a.desc"
	}
	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 		
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.b.desc"
	}
	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.c.desc"
	}
	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.d.desc"
	}
	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.e.desc"
	}
	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.f.desc"
	}
	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.g.desc"
	}
	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy  
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.h.desc"
	}
	desc = {
		trigger = { 
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.i.desc"
	}
	desc = {
		trigger = { 
			OR = {
				is_country_type = ascended_empire		
				#is_country_type = lost_empire	
			}
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.ascended.a.desc"
	}
	desc = {
		trigger = { 
			OR = {
				is_country_type = ascended_empire		
				#is_country_type = lost_empire	
			}
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.ascended.b.desc"
	}
	desc = {
		trigger = { 
			OR = {
				is_country_type = ascended_empire		
				#is_country_type = lost_empire	
			}
			NOR = { 
				is_subject_type = origin_protectorate 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			} 
		}
		text = "origin.550.ascended.c.desc"
	}
	desc = {
		trigger = { is_subject_type = origin_protectorate }
		text = "origin.550.j.desc"
	}
	desc = {
		trigger = { is_subject_type = origin_protectorate }
		text = "origin.550.k.desc"
	}
	desc = {
		trigger = { 
			is_subject_type = origin_protectorate 
			has_authority = auth_machine_intelligence
		}
		text = "origin.550.l.desc"
	}
	desc = {
		trigger = { 
			is_subject_type = origin_protectorate 
			has_authority = auth_machine_intelligence
		}
		text = "origin.550.m.desc"
	}
	desc = {
		trigger = { 
			is_subject_type = origin_protectorate 
			has_authority = auth_hive_mind
		}
		text = "origin.550.n.desc"
	}
	desc = {
		trigger = { 
			is_subject_type = origin_protectorate 
			has_authority = auth_hive_mind
		}
		text = "origin.550.o.desc"
	}
	desc = {
		trigger = { 
			is_subject_type = origin_protectorate 
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		text = "origin.550.p.desc"
	}
	desc = {
		trigger = { 
			is_subject_type = origin_protectorate 
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		text = "origin.550.q.desc"
	}
	desc = {
		trigger = { is_subject_type = origin_banished_ascendancy }
		text = "origin.550.banished.desc"
	}
	desc = {
		trigger = { 
			OR = {
				is_country_type = fallen_empire 
				is_country_type = awakened_fallen_empire 				
			}
		}
		text = "origin.550.fallen.a.desc"
	}
	desc = {
		trigger = { 
			OR = {
				is_country_type = fallen_empire 
				is_country_type = awakened_fallen_empire 				
			}
		}
		text = "origin.550.fallen.b.desc"
	}
	desc = {
		trigger = { 
			OR = {
				is_country_type = fallen_empire 
				is_country_type = awakened_fallen_empire 				
			}
		}
		text = "origin.550.fallen.c.desc"
	}
	desc = {
		trigger = { 
			has_modifier = againstoe
			is_country_type = eternal_empire 
		}
		text = "origin.550.eternal.a.desc"
	}
	desc = {
		trigger = { 
			has_modifier = againstoe
			is_country_type = eternal_empire 
		}
		text = "origin.550.eternal.b.desc"
	}
	desc = {
		trigger = { 
			has_modifier = againstoe
			is_country_type = eternal_empire 
		}
		text = "origin.550.eternal.c.desc"
	}
	desc = {
		trigger = { 
			has_modifier = withoe
			is_country_type = eternal_empire 
		}
		text = "origin.550.eternal.d.desc"
	}
	desc = {
		trigger = { 
			has_modifier = withoe
			is_country_type = eternal_empire 
		}
		text = "origin.550.eternal.e.desc"
	}
	desc = {
		trigger = { 
			has_modifier = withoe
			is_country_type = eternal_empire 
		}
		text = "origin.550.eternal.f.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_protectorate }
		text = "origin.550.r.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_protectorate }
		text = "origin.550.s.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_protectorate }
		text = "origin.550.t.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_protectorate }
		text = "origin.550.u.desc"
	}
	desc = {
		trigger = {
			OR = {
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		text = "origin.550.v.desc"
	}
	desc = {
		trigger = {
				has_valid_civic = "civic_machine_servitor"
		}
		text = "origin.550.servitor.desc"
	}
	desc = {
		trigger = {
				has_valid_civic = "civic_fanatic_purifiers"
		}
		text = "origin.550.purifier.desc"
	}
	desc = {
		trigger = {
				has_valid_civic = "civic_machine_terminator"
		}
		text = "origin.550.terminator.desc"
	}
	desc = {
		trigger = {
				has_valid_civic = "civic_hive_devouring_swarm"
		}
		text = "origin.550.swarm.desc"
	}
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	trigger = {
		from = { is_country_type = original_empire }
		NOR = { 
			has_country_flag = original_diplomacy_engaged 
		}
	}

	immediate = {
		set_country_flag = original_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = original_diplomacy_engaged
		}
	}

	option = { # Submit?
		name = origin.550.a
		trigger = {
			is_country_type = default
			NOR = { 
				is_subject_type = origin_protectorate 
				is_country_type = ascended_empire
				#is_country_type = lost_empire
				has_country_flag = rebelling_protectorate
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			}
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.602 }
		}
	}

	option = { # Submit? As Ascended
		name = origin.550.ascended.submit
		trigger = {
			OR = {
				is_country_type = ascended_empire
				#is_country_type = lost_empire
			}
			NOR = { 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_ascendency
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.601 }
		}
	}

	option = { # Submit? As FE
		name = origin.550.fallen.submit
		trigger = {
			OR = {
				is_country_type = awakened_fallen_empire
				is_country_type = fallen_empire			
			}
			NOR = { 
				is_subject_type = origin_banished_ascendancy 
				has_country_flag = rebelling_ascendency
			}
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.6001 }
		}
	}

	option = { # Ask for Redemption - DS?
		name = origin.550.redemption.swarm
		trigger = {
			has_valid_civic = "civic_hive_devouring_swarm"
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.6002 }
		}
	}

	option = { # Ask for Redemption - DE?
		name = origin.550.redemption.terminator
		trigger = {
			has_valid_civic = "civic_machine_terminator"
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.6002 }
		}
	}

	option = { # Ask for Redemption - FP?
		name = origin.550.redemption.purifier
		trigger = {
			has_valid_civic = "civic_fanatic_purifiers"
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.6002 }
		}
	}

	option = { # Submit? Already rebelled
		name = origin.550.a
		trigger = {
			is_country_type = default
			OR = {
				has_country_flag = rebelling_protectorate		
				has_country_flag = rebelling_ascendency							
			}
		}
		response_text = origin.550.a.2.response
		is_dialog_only = yes
	}

	option = { # Submit? Already rebelled as Ascended
		name = origin.550.ascended.submit.rebelled
		trigger = {
			has_country_flag = rebelling_ascendency
		}
		response_text = origin.550.ascended.rebel.b.response
		is_dialog_only = yes
	}

	option = {
		name = origin.550.b
		trigger = {
			NOR = { 
				has_country_flag = asked_about_origin 
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
		}
		response_text = origin.550.b.response
		is_dialog_only = yes
		hidden_effect = {
			set_country_flag = asked_about_origin
		}
	}

	option = {
		name = origin.550.c
		trigger = {
			NOR = { 
				has_country_flag = asked_about_darkmatter
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			}
		}
		response_text = origin.550.c.response
		is_dialog_only = yes
		hidden_effect = {
			set_country_flag = asked_about_darkmatter
		}
	}

	option = {
		name = origin.550.ask_fallen_gone
		trigger = {
			NOR = { 
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire	
				is_country_type = eternal_empire			
				has_country_flag = asked_about_fallengone
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_machine_servitor"
			}
			NOT = {
				any_country = {
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire					
					}
				}
			}
		}
		response_text = origin.550.ask_fallen_gone_response
		is_dialog_only = yes
		hidden_effect = {
			set_country_flag = asked_about_fallengone
		}
	}

	option = { # Rebel?
		name = origin.550.d
		trigger = {
			is_subject_type = origin_protectorate
		}
		allow = {
			custom_tooltip = {
				fail_text = origin.550.d_fail
				NOT = { has_country_flag = rebellion_cooldown }
			}
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.607 }
		}
	}

	option = { # Rebel? As Ascended
		name = origin.550.ascended.rebel.declare
		trigger = {
			is_subject_type = origin_banished_ascendancy
		}
		allow = {
			custom_tooltip = {
				fail_text = origin.550.d_fail
				NOT = { has_country_flag = rebellion_cooldown }
			}
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.608 }
		}
	}

	option = {
		name = origin.20.e
		default_hide_option = yes
	}
}

# Submit? as Ascended
country_event = {
	id = sofe_crisis.601
	title = "origin_diplo_header_2"
	desc = origin.730.desc
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = original_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = original_diplomacy_engaged
		}
	}

	option = {
		name = origin.730.a
		response_text = origin.730.a.response
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:origin_crisis_country
					subject_type = origin_protectorate
				}
				hidden_effect = {
					add_modifier = {
						modifier = "protectorate_of_original"
						days = -1
					}
					event_target:origin_crisis_country = {
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
				}
			}
		}
		set_subject_of = {
			who = event_target:origin_crisis_country
			subject_type = origin_banished_ascendancy
		}
		hidden_effect = {
			if = {
				limit = { is_country_type = ascended_empire }
				country_event = { id = sofe_crisis.9100 }
			}
			set_timed_country_flag = { flag = rebellion_cooldown years = 1 } # Can't rebel for a year after submitting.
			save_event_target_as = new_origin_banished
			every_country = {
				limit = { 
					is_ai = no
					has_communications = root
					NOT = { is_same_value = root } 
				}
				country_event = { id = sofe_crisis.604 }
			}
			event_target:origin_crisis_country = {
				set_faction_hostility = {
        			target = root
        			set_hostile = no
        			set_neutral = no
        			set_friendly = yes
        		}
        	}
        	add_modifier = {
				modifier = "banished_of_original"
				days = -1
			}
		}
	}

	option = {
		name = origin.551.b
		response_text = origin.551.b.response
		default_hide_option = yes
	}
}

# Submit? as FE
country_event = {
	id = sofe_crisis.6001
	title = "origin_diplo_header_2"
	desc = origin.730.fallen.desc
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = original_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = original_diplomacy_engaged
		}
	}

	option = {
		name = origin.730.fallen.a
		response_text = origin.730.fallen.a.response
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:origin_crisis_country
					subject_type = origin_protectorate
				}
				hidden_effect = {
					add_modifier = {
						modifier = "protectorate_of_original"
						days = -1
					}
					event_target:origin_crisis_country = {
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
				}
			}
		}
		set_subject_of = {
			who = event_target:origin_crisis_country
			subject_type = origin_banished_ascendancy
		}
		hidden_effect = {
			country_event = { id = sofe_crisis.9101 }
			every_owned_planet = {
				limit = {
					is_capital = no				
				}
				destroy_colony = yes
			}
			every_owned_ship = {
				destroy_ship = this
			}
			set_timed_country_flag = { flag = rebellion_cooldown years = 1 } # Can't rebel for a year after submitting.
			save_event_target_as = new_origin_banished
			every_country = {
				limit = { 
					is_ai = no
					has_communications = root
					NOT = { is_same_value = root } 
				}
				country_event = { id = sofe_crisis.604 }
			}
			event_target:origin_crisis_country = {
				set_faction_hostility = {
        			target = root
        			set_hostile = no
        			set_neutral = no
        			set_friendly = yes
        		}
        	}
        	add_modifier = {
				modifier = "banished_of_original"
				days = -1
			}
		}
	}

	option = {
		name = origin.551.b
		response_text = origin.551.b.response
		default_hide_option = yes
	}
}

# Submit?
country_event = {
	id = sofe_crisis.602
	title = "origin_diplo_header_2"
	desc = origin.551.a.desc
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = original_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = original_diplomacy_engaged
		}
	}

	option = {
		name = origin.551.a
		response_text = origin.551.a.response
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:origin_crisis_country
					subject_type = origin_protectorate
				}
				hidden_effect = {
					add_modifier = {
						modifier = "protectorate_of_original"
						days = -1
					}
					event_target:origin_crisis_country = {
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
				}
			}
		}
		set_subject_of = {
			who = event_target:origin_crisis_country
			subject_type = origin_protectorate
		}
		hidden_effect = {
			set_timed_country_flag = { flag = rebellion_cooldown days = 360 } # Can't rebel for a year after submitting.
			save_event_target_as = new_origin_protectorate
			every_country = {
				limit = { 
					is_ai = no
					has_communications = root
					NOT = { is_same_value = root } 
				}
				country_event = { id = sofe_crisis.603 }
			}
			event_target:origin_crisis_country = {
				set_faction_hostility = {
        			target = root
        			set_hostile = no
        			set_neutral = no
        			set_friendly = yes
        		}
        	}
        	add_modifier = {
				modifier = "protectorate_of_original"
				days = -1
			}
		}
	}

	option = {
		name = origin.551.b
		response_text = origin.551.b.response
		default_hide_option = yes
	}
}

# REDEMPTION??
country_event = {
	id = sofe_crisis.6002
	title = "origin_diplo_header_2"
	desc = {
		text = origin.6002.a.desc.swarm
		trigger = {
			has_valid_civic = civic_hive_devouring_swarm
		}
	}
	desc = {
		text = origin.6002.a.desc.terminator
		trigger = {
			has_valid_civic = civic_machine_terminator
		}
	}
	desc = {
		text = origin.6002.a.desc.purifier
		trigger = {
			has_valid_civic = civic_fanatic_purifiers
		}
	}
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = original_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = original_diplomacy_engaged
		}
	}

	option = {
		name = origin.6002.a.purifier
		trigger = {
			has_valid_civic = civic_fanatic_purifiers			
		}
		response_text = origin.6002.a.response.purifier
		change_government = {
			civics = {
				civic = civic_redeemed_purifiers
			}
		}
	}

	option = {
		name = origin.6002.a.terminator
		trigger = {
			has_valid_civic = civic_machine_terminator	
		}
		response_text = origin.6002.a.response.terminator
		change_government = {
			civics = {
				civic = civic_redeemed_terminator
			}
		}
	}

	option = {
		name = origin.6002.a.swarm
		trigger = {
			has_valid_civic = civic_hive_devouring_swarm
		}
		response_text = origin.6002.a.response.swarm
		change_government = {
			civics = {
				civic = civic_redeemed_swarm
			}
		}
	}

	option = {
		name = origin.6002.b
		response_text = origin.6002.b.response
		default_hide_option = yes
	}
}

# New Subject
country_event = {
	id = sofe_crisis.603
	title = "origin.552.name"
	desc = "origin.552.desc"
	picture = GFX_evt_sofe_outergate_ship_emerges
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = origin.552.a
	}	
}

# New Subject Ascended
country_event = {
	id = sofe_crisis.604
	title = "origin.732.name"
	desc = "origin.732.desc"
	picture = GFX_evt_sofe_outergate_ship_emerges
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = origin.732.a
	}	
}


# Rebel?
country_event = {
	id = sofe_crisis.607
	title = "origin_diplo_header_2"
	desc = origin.554.a.desc
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = personality_original_empire_room
	}
	
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = origin_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = origin_diplomacy_engaged
		}
	}

	option = {
		name = origin.554.a
		response_text = origin.554.a.response
		set_subject_of = {
			who = none
		}
		hidden_effect = {
			set_country_flag = rebelling_protectorate
			remove_modifier = "protectorate_of_original"
			event_target:origin_crisis_country = {
				set_faction_hostility = {
					target = root
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
			}
		}
	}

	option = {
		name = origin.554.b
		response_text = origin.554.b.response
		default_hide_option = yes
	}
}

# Rebel? As Ascended
country_event = {
	id = sofe_crisis.608
	title = "origin_diplo_header_2"
	desc = origin.731.desc
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = personality_original_empire_room
	}
	
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	immediate = {
		set_country_flag = origin_diplomacy_engaged
	}

	after = {
		hidden_effect = {
			remove_country_flag = origin_diplomacy_engaged
		}
	}

	option = {
		name = origin.731.a
		response_text = origin.731.a.response
		set_subject_of = {
			who = none
		}
		hidden_effect = {
			set_country_flag = rebelling_ascendency
			remove_modifier = "banished_of_original"
			set_subject_of = {
				who = none
			}
			event_target:origin_crisis_country = {
				set_faction_hostility = {
					target = root
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
			}
		}
	}

	option = {
		name = origin.731.b
		response_text = origin.731.b.response
		default_hide_option = yes
	}
}

# AI Empire Submits to Original Empire
country_event = {
	id = sofe_crisis.609
	hide_window = yes

	trigger = {
		has_global_flag = active_origin_crisis
		is_country_type = default
		is_subject = no
		fleet_power <= 200000 
		exists = event_target:origin_crisis_country
		is_ai = yes	
		NOR = {
			has_valid_civic = "civic_fanatic_purifiers"
			has_valid_civic = "civic_hive_devouring_swarm"
			has_valid_civic = "civic_machine_terminator"
			has_valid_civic = "civic_machine_servitor"
			has_valid_civic = "civic_machine_assimilator"
		}
		OR = {
			has_federation = no
			AND = {
				NOT = {
					has_global_flag = terrible_sofe
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 10
		modifier = {
			factor = 5.0
			any_country = {
				is_country_type = ascended_empire
				has_defensive_pact = root
			}	
		}
		modifier = {
			factor = 0.1
				has_global_flag = terrible_sofe
		}
		modifier = {
			factor = 0.5
			check_variable = { 
				which = "planets_lost_to_origin" 
				value > 10
			}
		}
		modifier = {
			factor = 0.1
			has_ai_personality = peaceful_traders
		}
		modifier = {
			factor = 0.1
			check_variable = { 
				which = "planets_lost_to_origin" 
				value > 20
			}
		}
		modifier = {
			factor = 20
			fleet_power > 5000000	
		}
		modifier = {
			factor = 0.1
			has_ai_personality = fanatic_befrienders
		}
		modifier = {
			factor = 3
			has_ai_personality = honorbound_warriors
		}
		modifier = {
			factor = 2.5
			has_ai_personality = democratic_crusaders
		}
		modifier = {
			factor = 2
			has_ai_personality = xenophobic_isolationists
		}
	}

	immediate = {
		save_event_target_as = new_origin_protectorate
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:origin_crisis_country
					subject_type = origin_protectorate
				}
				hidden_effect = {
					add_modifier = {
						modifier = "protectorate_of_original"
						days = -1
					}
					event_target:origin_crisis_country = {
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
				}
			}
		}
		set_subject_of = {
			who = event_target:origin_crisis_country
			subject_type = origin_protectorate
		}
		add_modifier = {
			modifier = "protectorate_of_original"
			days = -1
		}
		event_target:origin_crisis_country = {
			set_faction_hostility = {
        		target = event_target:new_origin_protectorate
        		set_hostile = no
        		set_neutral = no
        		set_friendly = yes
        	}
        }
        every_country = {
			limit = { 
				is_ai = no
				has_communications = event_target:new_origin_protectorate
			}
			country_event = { id = sofe_crisis.603 }
		}
	}
}

# Subject No Longer
country_event = {
	id = sofe_crisis.611
	title = "origin.670.name"
	desc = "origin.670.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = origin.670.a
		ai_chance = {
			factor = 10
			modifier = {
				factor = 100
				OR = {
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_authoritarian
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			}	
		}
	}	
	option = {
		name = origin.670.b
		custom_tooltip = origin.670.b.desc
		hidden_effect = {
			every_owned_planet = {
				destroy_colony = yes
			}
			destroy_country = yes
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 100
				OR = {
					has_ethic = ethic_fanatic_pacifist
					has_ethic = ethic_pacifist
				}
			}	
		}
	}	
}

# Subject No Longer Ascended
country_event = {
	id = sofe_crisis.612
	title = "origin.736.name"
	desc = "origin.736.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation

	is_triggered_only = yes

	option = {
		name = origin.736.b
		custom_tooltip = origin.736.b.desc
		hidden_effect = {
			set_country_flag = reclaim_ascendancy_edict_gained
		}
	}	
}



# Origin Kill Count (HIDDEN)
country_event = {
	id = sofe_crisis.1000
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = original_empire
	}
	
	immediate = {
		every_country = {
			limit = { has_event_chain = "origin_crisis_chain" }
			add_event_chain_counter = { 
				event_chain = "origin_crisis_chain" 
				counter = "origin_victims" 
				amount = 1
			}
		}
	}
}

# Origin Kill Count  (CALCULATED FOR AWARDS)
country_event = {
	id = sofe_crisis.1001
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_country_type = default
			is_country_type = fallen_empire
			is_country_type = ascended_empire
			is_country_type = awakened_fallen_empire
			#is_country_type = lost_empire
			is_country_type = eternal_empire
			is_country_type = original_empire_active
		}			
		FROM = { is_country_type = original_empire }
	}
	
	immediate = {
		change_variable = { 
			which = "origin_fleet_kills" 
			value = 1
		}
	}
}

# Origin Kill Count (HIDDEN)
country_event = {
	id = sofe_crisis.1002
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = original_empire
	}
	
	immediate = {
		if = {
			limit = {  
				FROM = { has_event_chain = "origin_crisis_chain" }
			}
			FROM = {
				add_event_chain_counter = { 
					event_chain = "origin_crisis_chain" 
					counter = "origin_kills_us" 
					amount = 1 
				}
			}
		}
		every_country = {
			limit = { 
				has_event_chain = "origin_crisis_chain" 
				NOT = { is_same_value = FROM }
			}
			add_event_chain_counter = { 
				event_chain = "origin_crisis_chain" 
				counter = "origin_kills_others" 
				amount = 1 
			}
		}
	}
}

# Origin Light Matter Reward
country_event = {
	id = sofe_crisis.1004
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_technology = tech_lightmatter_reactor		
			has_technology = tech_stellarite_reactor	
			has_modifier = challenger_original	
		}
		OR = {
			is_country_type = default
			is_country_type = fallen_empire
			is_country_type = ascended_empire
			is_country_type = awakened_fallen_empire
			#is_country_type = lost_empire
			is_country_type = eternal_empire
			is_country_type = original_empire
			is_country_type = original_empire_active
		}			
		FROM = { 
			OR = {
				has_technology = tech_lightmatter_reactor
				is_country_type = original_empire
				is_country_type = original_empire_passive	
				is_country_type = original_empire_active
				has_civic = civic_eternal_fleet_ascended		
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = fe_assault_carrier
				}
			 }
			 if = {
				 limit = { 	has_technology = tech_lightmatter_reactor }
				 add_resource = {
					acot_sr_light_matter = 50
				}				 
			 }
			 if = {
				limit = { 	has_technology = tech_stellarite_reactor }
				add_resource = {
				   acot_sr_stellarite = 100
			   }				 
			}
			if = {
				limit = { has_modifier = challenger_original }
				add_resource = {
				   sr_dark_matter = 500
				   acot_sr_dark_energy = 500
			   }				 
			}
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = progenitor_escort
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 5
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 10
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 50
				  acot_sr_dark_energy = 50
			  }	 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = progenitor_battlecruiser
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 15
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 30
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 150
				  acot_sr_dark_energy = 150
			  }				 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = progenitor_titan
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 30
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 60
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 300
				  acot_sr_dark_energy = 300
			  }				 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = progenitor_avatar
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 50
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 100
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 500
				  acot_sr_dark_energy = 500
			  }				 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = colossus
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 50
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 100
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 500
				  acot_sr_dark_energy = 500
			  }				 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = origin_super_citadel
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 500
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 1000
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 5000
				  acot_sr_dark_energy = 5000
			  }				 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = sofe_ancient_small_military_station
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 150
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 300
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 1500
				  acot_sr_dark_energy = 1500
			  }				 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = sofe_ancient_escort
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 350
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 700
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 3500
				  acot_sr_dark_energy = 3500
			  }				 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = sofe_ancient_cruiser
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 750
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 1500
			  }				 
		   }
		   if = {
			   limit = { has_modifier = challenger_original }
			   add_resource = {
				  sr_dark_matter = 7500
				  acot_sr_dark_energy = 7500
			  }				 
		   }
		}
		if = {
			limit = {
				FROMFROMFROM = {
					is_ship_size = sofe_ancient_weapon
				}
			 }
			 if = {
				limit = { 	has_technology = tech_lightmatter_reactor }
				add_resource = {
				   acot_sr_light_matter = 2100
			   }				 
			}
			if = {
			   limit = { 	has_technology = tech_stellarite_reactor }
			   add_resource = {
				  acot_sr_stellarite = 6300
			  }				 
		   }
		}
	}
}




#New Fallen Ascendancy
country_event = {
	id = sofe_crisis.9100
	title = sofe_crisis.9100.name
	desc = sofe_crisis.9100.desc
	picture = GFX_evt_fallen_empire
	show_sound = event_planetary_riot
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = sofe_crisis.9100.a
		hidden_effect = {
		}
	}
}

#New Pleb from FE
country_event = {
	id = sofe_crisis.9101
	title = sofe_crisis.9101.name
	desc = sofe_crisis.9101.desc
	picture = GFX_evt_fallen_empire
	show_sound = event_planetary_riot
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = sofe_crisis.9100.a
		if = {
			limit = {
				OR = {
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
				has_ethic = ethic_fanatic_spiritualist
			}
			set_graphical_culture = avian_01
			remove_country_flag = fallen_empire_1
			capital_scope = {
				remove_all_buildings = yes
				add_building = building_major_capital
				add_building = building_research_lab_1
				add_building = building_research_lab_1
				add_building = building_stronghold
				add_building = building_foundry_1
				add_building = building_foundry_1
				add_building = building_temple
				add_building = building_factory_1
				add_building = building_factory_1
			}
			random_list = {
				50 = {
					country_add_ethic = ethic_pacifist
					change_government = {
						civics = {
							civic = civic_imperial_cult
							civic = civic_meritocracy
							civic = civic_philosopher_king
						}
					}
				}
				50 = {
					country_add_ethic = ethic_militarist
					change_government = {
						civics = {
							civic = civic_imperial_cult
							civic = civic_warrior_culture
							civic = civic_philosopher_king
						}
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
				has_ethic = ethic_fanatic_materialist
			}
			set_graphical_culture = reptilian_01
			remove_country_flag = fallen_empire_2
			capital_scope = {
				remove_all_buildings = yes
				add_building = building_major_capital
				add_building = building_research_lab_1
				add_building = building_research_lab_1
				add_building = building_stronghold
				add_building = building_foundry_1
				add_building = building_foundry_1
				add_building = building_autochthon_monument
				add_building = building_factory_1
				add_building = building_factory_1
			}
			random_list = {
				50 = {
					country_add_ethic = ethic_pacifist
					change_government = {
						civics = {
							civic = civic_technocracy
							civic = civic_meritocracy
							civic = civic_philosopher_king
						}
					}
				}
				50 = {
					country_add_ethic = ethic_militarist
					change_government = {
						civics = {
							civic = civic_technocracy
							civic = civic_warrior_culture
							civic = civic_philosopher_king
						}
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
				has_ethic = ethic_fanatic_xenophile
			}
			set_graphical_culture = molluscoid_01
			remove_country_flag = fallen_empire_3
			capital_scope = {
				remove_all_buildings = yes
				add_building = building_major_capital
				add_building = building_research_lab_1
				add_building = building_research_lab_1
				add_building = building_stronghold
				add_building = building_foundry_1
				add_building = building_foundry_1
				add_building = building_autochthon_monument
				add_building = building_factory_1
				add_building = building_factory_1
			}
			random_list = {
				50 = {
					country_add_ethic = ethic_pacifist
					change_government = {
						civics = {
							civic = civic_free_haven
							civic = civic_meritocracy
							civic = civic_philosopher_king
						}
					}
				}
				50 = {
					country_add_ethic = ethic_militarist
					change_government = {
						civics = {
							civic = civic_free_haven
							civic = civic_warrior_culture
							civic = civic_philosopher_king
						}
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
				has_ethic = ethic_fanatic_xenophobe
			}
			set_graphical_culture = mammalian_01
			remove_country_flag = fallen_empire_4
			capital_scope = {
				remove_all_buildings = yes
				add_building = building_major_capital
				add_building = building_research_lab_1
				add_building = building_research_lab_1
				add_building = building_stronghold
				add_building = building_foundry_1
				add_building = building_foundry_1
				add_building = building_autochthon_monument
				add_building = building_factory_1
				add_building = building_factory_1
			}
			random_list = {
				50 = {
					country_add_ethic = ethic_pacifist
					change_government = {
						civics = {
							civic = civic_inwards_perfection
							civic = civic_meritocracy
							civic = civic_philosopher_king
						}
					}
				}
				50 = {
					country_add_ethic = ethic_militarist
					change_government = {
						civics = {
							civic = civic_nationalistic_zeal
							civic = civic_warrior_culture
							civic = civic_philosopher_king
						}
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					is_country_type = awakened_fallen_empire
					is_country_type = fallen_empire
				}
				has_authority = auth_machine_intelligence
			}
			set_graphical_culture = arthropoid_01
			remove_country_flag = fallen_empire_machine
			capital_scope = {
				remove_all_buildings = yes
				add_building = building_machine_major_capital
				add_building = building_research_lab_1
				add_building = building_research_lab_1
				add_building = building_stronghold
				add_building = building_foundry_1
				add_building = building_foundry_1
				add_building = building_uplink_node
				add_building = building_sentinel_posts
				add_building = building_maintenance_depot
			}
			change_government = {
				civics = {
					civic = civic_machine_builder
					civic = civic_machine_unitary_cohesion
					civic = civic_machine_built_to_last
				}
			}
		}
		set_country_type = default
		hidden_effect = {
			add_resource = { minerals = 10000 }
			add_resource = { energy = 10000 }
			add_resource = { food = 1000 }
			add_resource = { consumer_goods = 1000 }
			add_resource = { alloys = 1000 }			
			add_resource = { influence = 100 }
			add_resource = { sr_dark_matter = 500 }			
			add_resource = { acot_sr_dark_energy = 500 }
		}
	}
}

# Origin Receives OE Message as enemies
country_event = {
	id = sofe_crisis.9700
	title = "origin_diplo_header_2"
	desc = origin.9700.desc
	
	diplomatic = yes

	trigger = {
		is_country_type = eternal_empire
		has_modifier = againstoe
		NOT = {
			has_country_flag = first_diplomacy_settled
		}
	}
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	mean_time_to_happen = {
		months = 2
	}
	
	immediate = {
		set_country_flag = first_diplomacy_settled
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:origin_crisis_country
					subject_type = origin_protectorate
				}
				hidden_effect = {
					event_target:origin_crisis_country = {
						set_faction_hostility = {
							target = prev
							set_hostile = yes
							set_neutral = no
							set_friendly = no
						}
					}
				}
			}
		}
		event_target:origin_crisis_country = {
			set_faction_hostility = {
        		target = root
        		set_hostile = yes
        		set_neutral = no
        		set_friendly = no
        	}
        }
	}

	option = {
		name = origin.9700.a
		default_hide_option = yes
	}
}

# Origin Receives OE Message as allies
country_event = {
	id = sofe_crisis.9701
	title = "origin_diplo_header_2"
	desc = origin.9701.desc
	
	diplomatic = yes

	trigger = {
		is_country_type = eternal_empire
		has_modifier = withoe
		NOT = {
			has_country_flag = first_diplomacy_settled
		}
	}
	
	picture_event_data = {
		portrait = event_target:origin_crisis_country
		room = "personality_original_empire_room"
	}
	
	mean_time_to_happen = {
		months = 2
	}
	
	immediate = {
		set_country_flag = first_diplomacy_settled
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:origin_crisis_country
					subject_type = origin_protectorate
				}
				hidden_effect = {
					event_target:origin_crisis_country = {
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
				}
			}
		}
		event_target:origin_crisis_country = {
			set_faction_hostility = {
        		target = root
        		set_hostile = yes
        		set_neutral = no
        		set_friendly = yes
        	}
        }
	}

	option = {
		name = origin.9701.a
		default_hide_option = yes
	}
}

# Origin Nanite Cleaner
planet_event = {
	id = sofe_crisis.9800
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = owner
				owner = { NOT = { is_same_value = from.owner } }
			}
			from.owner = {
				country_event = { id = sofe_crisis.9801 }
			}
		}

		# Contingency Machine World
		if = {
			limit = { 
				is_planet_class = pc_ai 
				NOT = { has_planet_flag = machine_lair }
			}
			set_planet_flag = destroyed_by_colossus
			set_planet_flag = planet_cracked
			planet_event = { id = crisis.2040 }
		}

		# Contingency Final Machine World
		if = {
			limit = { 
				is_planet_class = pc_ai 
				has_planet_flag = machine_lair
			}
			set_planet_flag = destroyed_by_colossus
			set_planet_flag = planet_cracked
			from.owner = { save_event_target_as = final_machine_world_destroyer }
			planet_event = { id = crisis.2043 }
		}

		# Swarm Situation Log counter
		if = {
			limit = {
				owner = { is_country_type = swarm }
			}
			every_country = {
				limit = { has_event_chain = "prethoryn_scourge_chain" }
				add_event_chain_counter = {
					event_chain = "prethoryn_scourge_chain"
					counter = "infested_worlds"
					amount = -1 
				}
				add_event_chain_counter = {
					event_chain = "prethoryn_scourge_chain"
					counter = "infested_worlds_cleansed"
					amount = 1 
				}
			}
		}
		
		if = {
			limit = {
				exists = owner
				owner = {
					NOT = { is_same_value = from.owner }
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
						is_country_type = ascended_empire
						#is_country_type = lost_empire
						is_country_type = eternal_empire	
						is_country_type = original_empire_active							
					}
				}
			}
			# Generate threat
			if = {
				limit = {
					is_colony = yes
				}
				add_threat = { who = from.owner amount = 5 }
				# modifier for allies + those upset by genocide
			}
			# modifiers for victim
			owner = {
				add_opinion_modifier = {
					modifier = opinion_swept_my_world
					who = from.owner
				}
				if = {
					limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
					add_modifier = {
						modifier = colossus_victim
						days = 10800 # 30 years
					}
				}
			}
		}
		# Add war exhaustion to planet owner 
		if = {
			limit = {
				exists = owner
			}
			owner = {
				add_static_war_exhaustion = {
					attacker = from.fleet.owner
					location = root
					value_for_planet_destruction = 1.0
				}
			}			
		}
		every_owned_pop = {
			kill_pop = yes
		}
		# destroy habitats and ringworlds

		if = {
			limit = { 
				is_star = yes
			}
			change_pc = pc_g_star
			solar_system = {
				every_system_megastructure = {
					limit = {
						NOR = {
							is_megastructure_type = sofe_outer_gate
							is_megastructure_type = sofe_inner_gate
							is_megastructure_type = sofe_omega_dyson_sphere
							is_megastructure_type = sofe_omega_nexus
							is_megastructure_type = sofe_omega_spy_orb_center
						}
					}
					spawn_habitat_divine_effect = yes
					remove_megastructure = this
				}
				every_system_planet = {
					limit = {
						NOR = {
							is_star = yes
							is_planet_class = pc_golden_world
							is_planet_class = pc_golden_world_habitable
						}
					}
					spawn_habitat_divine_effect = yes
					remove_planet = yes
				}				
			}
		}
		if = {
			limit = {
				is_planet_class = pc_habitat
			}
			spawn_habitat_divine_effect = yes
			remove_planet = yes
		}
		else_if = {
			limit = {
				is_planet_class = pc_ringworld_habitable
			}
			spawn_ringworld_divine_effect = yes
		}
		else_if = {
			limit = { 
				NOR = {
					is_star = yes
					is_planet_class = pc_habitat
					is_planet_class = pc_ringworld_habitable				
				}
			}
			spawn_habitat_divine_effect = yes
			remove_planet = yes
		}
	}
}


country_event = {
	id = sofe_crisis.9801
	title = origin_crisis.210.name
	desc = {
		text = origin_crisis.210.desc
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
	}
	desc = {
		text = origin_crisis.210.desc.alt
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
	}
	picture = GFX_evt_shielded_planet
	show_sound = event_mystic_reveal
	location = from

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = fired_naniter }
	}

	immediate = {
		set_country_flag = fired_naniter
	}

	option = {
		name = origin_crisis.210.a
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
	}

	option = {
		name = origin_crisis.210.b
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
	}
}



####################ARKSHIP LIFE
# Herculean First Life
ship_event = {
	id = sofe_crisis.9000
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_ship_size = sofe_ancient_weapon
		has_ship_flag = arkship_first_life
	}

	immediate = {
		ship_event = { id = sofe_crisis.9001 days = 1 }	
	}
}

ship_event = {
	id = sofe_crisis.9001
	hide_window = yes
	
	is_triggered_only = yes


	immediate = {
		remove_ship_flag = arkship_first_life
		set_ship_flag = arkship_second_life
		repair_ship = yes
		set_disabled = no			
	}
}

ship_event = {
	id = sofe_crisis.9002
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_ship_size = sofe_ancient_weapon
		has_ship_flag = arkship_second_life
	}

	immediate = {
		ship_event = { id = sofe_crisis.9003 days = 1 }		
	}
}

ship_event = {
	id = sofe_crisis.9003
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		remove_ship_flag = arkship_second_life
		set_ship_flag = arkship_third_life
		repair_ship = yes
		set_disabled = no			
	}
}

ship_event = {
	id = sofe_crisis.9004
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_ship_size = sofe_ancient_weapon
		has_ship_flag = arkship_third_life
	}

	immediate = {
		ship_event = { id = sofe_crisis.9005 days = 1 }		
	}
}

ship_event = {
	id = sofe_crisis.9005
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		remove_ship_flag = arkship_third_life
		set_ship_flag = arkship_final_life
		repair_ship = yes
		set_disabled = no		
	}
}

ship_event = {
	id = sofe_crisis.9006
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_ship_size = sofe_ancient_weapon
		has_ship_flag = arkship_final_life
	}

	immediate = {
		destroy_ship = this
		FROM = {
			if = {
				limit = { 	
					owner = {
						has_technology = tech_lightmatter_reactor 						
					}
				}
				owner = {
					add_resource = {
						acot_sr_light_matter = 2100
					}					
				}			 
			}
			if = {
			   limit = { 
				owner = {
					has_technology = tech_stellarite_reactor 						
					}
				}
				owner = {
					add_resource = {
						acot_sr_stellarite = 6300
					}						
				}		 
		   }
		}	
	}
}
