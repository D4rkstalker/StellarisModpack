###############################################################
#                 ANCIENT JUGGERNAUT ORIGIN                   #
#                                         By: jasonpepe       #
###############################################################
namespace = ancient_jug_origin

#on_game_start_country via on_actions
country_event = {
	id = ancient_jug_origin.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
	}

	immediate = {
		random_owned_starbase = {
			set_starbase_module = {
				slot = 0
				module = anchorage
			}
		}
		random_owned_fleet = {
			limit = {
				is_ship_size = corvette
			}
			dismantle = yes
		}
		create_fleet = {
			effect = {
				set_owner = prev
				create_ship = {
					name = random
					design = "NAME_ancient_juggernaut"							
				}
				set_fleet_stance = passive
				set_location = prev.capital_scope.star	
			}		
			settings = {
				can_disband = no
				can_upgrade = no
				can_change_composition = no	
				spawn_debris = no
				can_change_leader = no
			}
		}
		leader = {
			set_leader_flag = ancient_jug_origin_first_ruler
		}
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
			}
			set_ship_flag = ancient_juggernaut_itself
			save_event_target_as = ancient_juggernaut_itself
			add_modifier = {
				modifier = origin_ancient_juggernaut_initial
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_upkeep
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_ftl_cap1
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_ftl_cap2
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_health_cap0
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_health_cap1
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_health_cap2
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_health_cap3
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_speed_cap1
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_speed_cap2
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_speed_cap3
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_armor_cap1
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_armor_cap2
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_armor_cap3
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_armor_cap4
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_shield_cap1
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_shield_cap2
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_shield_cap3
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_shield_cap4
				days = -1
			}
		}
		country_event = {
			id = ancient_jug_origin.2
			days = 5
			random = 10
		}
		if = {
			limit = {
				is_ai = yes
			}
			add_resource = {
				influence = 100 #Since AI is dumb and always fortify the border edict first
			}
		}
		
		set_country_flag = juggernaut_constructed
	}
}


#Tell you about your juggernaut, handle with care
country_event = {
	id = ancient_jug_origin.2
	title = ancient_jug_origin.2.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.2.desc
					NOT = {
						has_ethic = ethic_gestalt_consciousness
					}
					NOT = {
						has_civic = civic_machine_terminator
					}
				}
				success_text = {
					text = ancient_jug_origin.2.desc_geth
					has_ethic = ethic_gestalt_consciousness
					NOT = {
						has_civic = civic_machine_terminator
					}
				}
				success_text = {
					text = ancient_jug_origin.2.desc_terminator
					has_civic = civic_machine_terminator
				}
			}
		}	
	} 
	picture = GFX_evt_ship_in_orbit
	location = event_target:ancient_juggernaut_itself
	show_sound = event_ship_thrusters
	is_triggered_only = yes
	
	trigger = {
		has_origin = origin_ancient_juggernaut
		NOT = {
			has_country_flag = origin_ancient_juggernaut_note1
		}
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
	}
	immediate = {
		save_event_target_as = ancient_juggernaut_owner
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			save_event_target_as = ancient_juggernaut_itself
			
		}
		set_country_flag = origin_ancient_juggernaut_note1
	}
	after = {
		
		begin_event_chain = {
			event_chain = "ancient_juggernaut_chain"
			target = ROOT
		}
		enable_special_project = {
			name = "ANCIENT_JUGGERNAUT_REPAIR_FTL_PROJECT"
			location = event_target:ancient_juggernaut_itself
			owner = root
		}
		custom_tooltip = ancient_jug_origin.2.tooltip
	}
	option = {
		name = ancient_jug_origin.2.a
		trigger = {
			NOT = {
				has_authority = auth_machine_intelligence
			}
		}
	}
	option = {
		name = ACKNOWLEDGED
		trigger = {
			has_authority = auth_machine_intelligence
		}
	}
}

#You can build your own jugger or upgrade it? good to know.
country_event = {
	id = ancient_jug_origin.3
	title = ancient_jug_origin.3.title
	desc = ancient_jug_origin.3.desc
	picture = GFX_evt_origin_ancient_juggernaut_2
	location = event_target:ancient_juggernaut_itself
	show_sound = event_default
	is_triggered_only = yes
	
	trigger = {		
		has_origin = origin_ancient_juggernaut
		NOT = {
			has_country_flag = origin_ancient_juggernaut_can_build_one
		}
		has_technology = tech_juggernaut
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
	}
	immediate = {
		if = {
			limit = {
				has_special_project = "ANCIENT_JUGGERNAUT_REPAIR_FTL_PROJECT"
			}
			abort_special_project = {
				type = "ANCIENT_JUGGERNAUT_REPAIR_FTL_PROJECT"
			}
		}
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			remove_modifier = origin_ancient_juggernaut_initial
			save_event_target_as = ancient_juggernaut_itself		
		}
		set_country_flag = origin_ancient_juggernaut_can_build_one
	}
	option = {
		trigger = {
			NOT = {
				has_authority = auth_machine_intelligence
			}
		}
		name = ancient_jug_origin.3.a
	}
	option = {
		trigger = {
			has_authority = auth_machine_intelligence
		}
		name = ancient_jug_origin.3.a_machine
		
		
	}
	after = {
		custom_tooltip = ancient_jug_origin.16.tooltip
		hidden_effect = {
			save_event_target_as = ancient_juggernaut_owner
		}
		event_target:ancient_juggernaut_itself = {
			enable_special_project = {
				name = "ANCIENT_JUGGERNAUT_PROJECT"
				location = this
				owner = root
			}
		}
	}
#	option = {
#		name = ancient_jug_origin.3.b
#		end_event_chain = "ancient_juggernaut_chain"
#		custom_tooltip = ancient_jug_origin.3.b.tooltip
#		add_resource = {
#			unity = 9999
#			influence = 350
#		}
#		hidden_effect = {
#			observer_event = {
#				id = ancient_jug_origin.999
#			}
#		}
#	}
}
#jugger went kaboom
country_event = { 
	id = ancient_jug_origin.4
	title = ancient_jug_origin.4.title
	desc = {
		text = ancient_jug_origin.4.desc_toofast
		trigger = {
			check_variable = {
				which = origin_ancient_juggernaut_researched_related_tech
				value < 4
			}
			NOT = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
	}
	desc = {
		text = ancient_jug_origin.4.desc_afternate
		trigger = {
			check_variable = {
				which = origin_ancient_juggernaut_researched_related_tech
				value > 3
			}
			NOT = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
	}
	desc = {
		text = ancient_jug_origin.4.desc_geth_toofast
		trigger = {
			check_variable = {
				which = origin_ancient_juggernaut_researched_related_tech
				value < 4
			}
			has_ethic = ethic_gestalt_consciousness
		}
	}
	desc = {
		text = ancient_jug_origin.4.desc_geth_afternate
		trigger = {
			check_variable = {
				which = origin_ancient_juggernaut_researched_related_tech
				value > 3
			}
			has_ethic = ethic_gestalt_consciousness
		}
	}
	picture = GFX_evt_large_explosion
	location = event_target:ancient_juggernaut_itself
	show_sound = event_super_explosion
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		fromfrom = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
		NOT = {
			has_country_flag = ancient_jug_origin_lost_the_jug
		}
	}

	immediate = {
		set_country_flag = ancient_jug_origin_lost_the_jug
		if = {
			limit = {
				has_special_project = ANCIENT_JUGGERNAUT_PROJECT
			}
			abort_special_project = {
				type = ANCIENT_JUGGERNAUT_PROJECT
			}
		}
		if = {
			limit = {
				has_special_project = ANCIENT_JUGGERNAUT_REPAIR_FTL_PROJECT
			}
			abort_special_project = {
				type = ANCIENT_JUGGERNAUT_REPAIR_FTL_PROJECT
			}
		}
		effect_ancient_jug_remove_booster_flag = yes
		effect_ancient_jug_remove_booster_modifier = yes
		fromfrom = {
			if = {
				limit = {
					is_ship_size = juggernaut
					has_ship_flag = ancient_juggernaut_itself
				}
				save_event_target_as = ancient_juggernaut_itself
			}
		}
		if = {
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value < 4
				}
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_destroyed_debuff
				days = 7200
			}
		}
		if = {
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value > 3
				}
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_destroyed_debuff_afternate
				days = 7200
			}
		}
		random_list = {
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1000
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1050
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1111
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1150
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1200
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1234
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1300
				}
			}
			1 = { #L33T
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1337
				}
			}
			1 = { #EU4 Start date
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1444
				}
			}
			1 = { #Fall of byzantine
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1453
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1500
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1550
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1600
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1650
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1700
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1750
				}
			}
			1 = { #EU4 end date
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1821
				}
			}
			1 = { #Vic2 start date
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1836
				}
			}
			1 = {
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1900
				}
			}
			1 = { #Hoi4 start date&Vic2 end date
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1936
				}
			}
			1 = { #My birthdate
				set_variable = {
					which = origin_ancient_juggernaut_alloys
					value = 1994
				}
			}
		}
	}

	after = {
		end_event_chain = "ancient_juggernaut_chain"
		if = {
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value < 4
				}
			}
			tooltip = {
				add_modifier = {
					modifier = origin_ancient_juggernaut_destroyed_debuff
					days = 7200
				}	
			}
		}
		if = {
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value > 3
				}
			}
			tooltip = {
				add_modifier = {
					modifier = origin_ancient_juggernaut_destroyed_debuff_afternate
					days = 7200
				}	
			}
		}
		add_modifier = {
			modifier = origin_ancient_juggernaut_destroyed_debuff_afternate_2
			days = -1
		}
		custom_tooltip = ancient_jug_origin.4.tooltip
		hidden_effect = {
			random_list = {
				0 = {
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1000
						}
					}
					add_resource = {
						alloys = 1000
					}
				}
				0 = {
					add_resource = {
						alloys = 1050
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1050
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1111
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1111
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1150
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1150
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1200
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1200
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1234
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1234
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1300
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1300
						}
					}
				}
				0 = { #L33T
					add_resource = {
						alloys = 1337
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1337
						}
					}
				}
				0 = { #EU4 Start date
					add_resource = {
						alloys = 1444
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1444
						}
					}
				}
				0 = { #Fall of byzantine
					add_resource = {
						alloys = 1453
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1453
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1500
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1500
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1550
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1550
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1600
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1600
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1650
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1650
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1700
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1700
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1750
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1750
						}
					}
				}
				0 = { #EU4 end date
					add_resource = {
						alloys = 1821
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1821
						}
					}
				}
				0 = { #Vic2 start date
					add_resource = {
						alloys = 1836
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1836
						}
					}
				}
				0 = {
					add_resource = {
						alloys = 1900
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1900
						}
					}
				}
				0 = { #Hoi4 start date&Vic2 end date
					add_resource = {
						alloys = 1936
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1936
						}
					}
				}
				0 = { #It's my birthdate
					add_resource = {
						alloys = 1994
					}
					modifier = {
						add = 1
						check_variable = {
							which = origin_ancient_juggernaut_alloys
							value = 1994
						}
					}
				}
			}
		}
	}

	option = {
		name = {
			text = UNFORTUNATE
			trigger = {
				NOT = {
					has_country_flag = origin_ancient_juggernaut_can_build_one
				}
				NOT = {
					has_authority = auth_machine_intelligence
				}
			}
		} 		
		name = {
			text = ancient_jug_origin.4.machine
			trigger = {
				NOT = {
					has_country_flag = origin_ancient_juggernaut_can_build_one
				}
				has_authority = auth_machine_intelligence
			}
		} 
		trigger = {
			NOT = {
				has_country_flag = origin_ancient_juggernaut_can_build_one
			}
		}
		hidden_effect = {
			observer_event = {
				id = ancient_jug_origin.1002
			}
		}
	}

	option = {
		name = UNFORTUNATE
		trigger = {
			has_country_flag = origin_ancient_juggernaut_can_build_one
		}
		hidden_effect = {
			observer_event = {
				id = ancient_jug_origin.1001
			}
		}
	}
}

###Jug spotted
country_event = { 
	id = ancient_jug_origin.5
	title = ancient_jug_origin.5.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.5.desc
					NOT = {
						from.owner = {
							has_country_flag = ancient_jug_origin_has_upgraded_the_old_jug
						}
					}
				} 
				success_text = {
					text = ancient_jug_origin.5.desc_afternate
					from.owner = {
						has_country_flag = ancient_jug_origin_has_upgraded_the_old_jug
					}
				} 
				success_text = {
					text = ancient_jug_origin.5.desc_toomany
					any_playable_country = {
						count > 4
						has_origin = origin_ancient_juggernaut
					}
				} 
			}	
		}
	}
	picture = GFX_evt_juggernaut
	location = event_target:ancient_juggernaut_spotted
	show_sound = event_default
	is_triggered_only = yes

	trigger = {
		exists = from.owner
		has_communications = from.owner
		from = {
			any_owned_ship = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
		}
		NOT = {
			has_country_flag = ancient_juggernaut_encountered
		}
	}

	immediate = {
		set_country_flag = ancient_juggernaut_encountered
		from = {
			random_owned_ship = {
				limit = {
					is_ship_size = juggernaut
					has_ship_flag = ancient_juggernaut_itself
				}
				save_event_target_as = ancient_juggernaut_spotted
			}
		}
	}

	option = {
		name = ancient_jug_origin.5.a
		trigger = {
			NOT = {
				has_origin = origin_ancient_juggernaut
			}
			hidden_trigger = {
				NOT = {
					any_playable_country = {
						count > 4
						has_origin = origin_ancient_juggernaut
					}	
				}	
			}
		}
	}

	option = {
		name = ancient_jug_origin.5.a_origin
		trigger = {
			has_origin = origin_ancient_juggernaut
			hidden_trigger = {
				NOT = {
					any_playable_country = {
						count > 4
						has_origin = origin_ancient_juggernaut
					}	
				}
			}
		}
	}

	option = {
		name = ancient_jug_origin.5.b
		trigger = {
			NOT = {
				has_origin = origin_ancient_juggernaut
			}
			hidden_trigger = {
				any_playable_country = {
					count > 4
					has_origin = origin_ancient_juggernaut
				}
			}
		}
	}
	option = {
		name = ancient_jug_origin.5.b_origin
		trigger = {
			has_origin = origin_ancient_juggernaut
			hidden_trigger = {
				any_playable_country = {
					count > 4
					has_origin = origin_ancient_juggernaut
				}
			}
		}
	}
}


#You made enemy old Jug went kaboom
country_event = { 
	id = ancient_jug_origin.6
	title = ancient_jug_origin.6.title
	desc = ancient_jug_origin.6.desc
	picture = GFX_evt_large_explosion
	location = event_target:ancient_juggernaut_spotted
	show_sound = event_ship_explosion
	is_triggered_only = yes

	trigger = {
#		has_communications = from
		fromfromfrom = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
#		has_authority = auth_machine_intelligence
	}

	immediate = {
		save_event_target_as = attacker_country
		from = {
			save_event_target_as = jug_owner
		}
		fromfrom.fleet = {
			save_event_target_as = attacker_fleet
		}
		fromfromfrom = {
			if = {
				limit = {
					is_ship_size = juggernaut
					has_ship_flag = ancient_juggernaut_itself
				}
				save_event_target_as = ancient_juggernaut_spotted
			}
		}
		every_playable_country = {
			limit = {
				NOT = {
					is_same_empire = root
				}
				has_communications = from
				has_country_flag = ancient_juggernaut_encountered
			}
			country_event = {
				id = ancient_jug_origin.8
			}
		}
	}

	after = {
		add_resource = {
			influence = 200
		}
	}

	option = {
		name = ancient_jug_origin.6.a
		trigger = {
			NOT = {
				has_origin = origin_ancient_juggernaut
			}
		}
		if = {
			limit = {
				fromfrom = {
					fleet = {
						exists = leader
						leader = {
							leader_class = admiral
						}
					}
				}
			}
			fromfrom = {
				fleet = {
					leader = {
						add_experience = 800
					}
				}
				
			}		
		}
	}
	option = {
		name = ancient_jug_origin.6.a_origin
		trigger = {
			has_origin = origin_ancient_juggernaut
		}
		if = {
			limit = {
				fromfrom = {
					fleet = {
						exists = leader
						leader = {
							leader_class = admiral
						}
					}
				}
			}
			fromfrom = {
				fleet = {
					leader = {
						add_experience = 800
					}
				}
			}		
		}
	}
}



#Research related tech restore old jug status
country_event = { 
	id = ancient_jug_origin.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		has_event_chain = "ancient_juggernaut_chain"
		OR = {
			last_increased_tech = tech_hyper_drive_2
			last_increased_tech = tech_hyper_drive_3
			last_increased_tech = tech_shields_2
			last_increased_tech = tech_shields_3
			last_increased_tech = tech_shields_4
			last_increased_tech = tech_shields_5
			last_increased_tech = tech_thrusters_2
			last_increased_tech = tech_thrusters_3
			last_increased_tech = tech_thrusters_4
			last_increased_tech = tech_ship_armor_2
			last_increased_tech = tech_ship_armor_3
			last_increased_tech = tech_ship_armor_4
			last_increased_tech = tech_ship_armor_5
			last_increased_tech = tech_destroyers
			last_increased_tech = tech_cruisers
			last_increased_tech = tech_battleships
			last_increased_tech = tech_juggernaut
		}
	}

	immediate = {
		change_variable = {
			which = origin_ancient_juggernaut_researched_related_tech
			value = 1
		}
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			ROOT = {
				if = {
					limit = {
						has_technology = tech_hyper_drive_2
						NOT = {
							has_country_flag = origin_ancient_juggernaut_ftl_cap1_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_ftl_cap1_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_ftl" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_ftl_cap1
					}
				}
				if = {
					limit = {
						has_technology = tech_hyper_drive_3
						NOT = {
							has_country_flag = origin_ancient_juggernaut_ftl_cap2_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_ftl_cap2_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_ftl" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_ftl_cap2
					}
				}
				if = {
					limit = {
						has_technology = tech_shields_2
						NOT = {
							has_country_flag = origin_ancient_juggernaut_shield_cap1_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_shield_cap1_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_shield" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_shield_cap1
					}
				}
				if = {
					limit = {
						has_technology = tech_shields_3
						NOT = {
							has_country_flag = origin_ancient_juggernaut_shield_cap2_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_shield_cap2_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_shield" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_shield_cap2
					}
				}
				if = {
					limit = {
						has_technology = tech_shields_4
						NOT = {
							has_country_flag = origin_ancient_juggernaut_shield_cap3_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_shield_cap3_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_shield" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_shield_cap3
					}
				}
				if = {
					limit = {
						has_technology = tech_shields_5
						NOT = {
							has_country_flag = origin_ancient_juggernaut_shield_cap4_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_shield_cap4_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_shield" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_shield_cap4
					}
				}
				if = {
					limit = {
						has_technology = tech_thrusters_2
						NOT = {
							has_country_flag = origin_ancient_juggernaut_speed_cap1_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_speed_cap1_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_thruster" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_speed_cap1
					}
				}
				if = {
					limit = {
						has_technology = tech_thrusters_3
						NOT = {
							has_country_flag = origin_ancient_juggernaut_speed_cap2_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_speed_cap2_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_thruster" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_speed_cap2
					}
				}
				if = {
					limit = {
						has_technology = tech_thrusters_4
						NOT = {
							has_country_flag = origin_ancient_juggernaut_speed_cap3_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_speed_cap3_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_thruster" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_speed_cap3
					}
				}
				if = {
					limit = {
						has_technology = tech_ship_armor_2
						NOT = {
							has_country_flag = origin_ancient_juggernaut_armor_cap1_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_armor_cap1_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_armor" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_armor_cap1
					}
				}
				if = {
					limit = {
						has_technology = tech_ship_armor_3
						NOT = {
							has_country_flag = origin_ancient_juggernaut_armor_cap2_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_armor_cap2_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_armor" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_armor_cap2
					}
				}
				if = {
					limit = {
						has_technology = tech_ship_armor_4
						NOT = {
							has_country_flag = origin_ancient_juggernaut_armor_cap3_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_armor_cap3_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_armor" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_armor_cap3
					}
				}
				if = {
					limit = {
						has_technology = tech_ship_armor_5
						NOT = {
							has_country_flag = origin_ancient_juggernaut_armor_cap4_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_armor_cap4_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_armor" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_armor_cap4
					}
				}
				if = {
					limit = {
						has_technology = tech_destroyers
						NOT = {
							has_country_flag = origin_ancient_juggernaut_health_cap1_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_health_cap1_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_ship" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_health_cap0
					}
				}
				if = {
					limit = {
						has_technology = tech_cruisers
						NOT = {
							has_country_flag = origin_ancient_juggernaut_health_cap2_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_health_cap2_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_ship" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_health_cap1
					}
				}
				if = {
					limit = {
						has_technology = tech_battleships
						NOT = {
							has_country_flag = origin_ancient_juggernaut_health_cap3_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_health_cap3_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_ship" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_health_cap2
					}
				}
				if = {
					limit = {
						has_technology = tech_juggernaut
						NOT = {
							has_country_flag = origin_ancient_juggernaut_health_cap4_owned
						}
					}
					set_country_flag = origin_ancient_juggernaut_health_cap4_owned
					add_event_chain_counter = { 
						event_chain = "ancient_juggernaut_chain" 
						counter = "ancient_juggernaut_research_ship" 
						amount = 1 
					}
					PREV = {
						remove_modifier = origin_ancient_juggernaut_health_cap3
					}
				}
			}
		}
		
	}
}


###Follow up the ancient_jug_origin.6, tell everyone knows that jug is exploded
country_event = {
	id = ancient_jug_origin.8
	title = ancient_jug_origin.6.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.8.desc
					has_communications = event_target:attacker_country
				}
				success_text = {
					text = ancient_jug_origin.8.desc_unknown
					NOT = {
						has_communications = event_target:attacker_country
					}
				}
			}
		}
	} 
	picture = GFX_evt_large_explosion
	location = event_target:ancient_juggernaut_spotted
	show_sound = event_ship_explosion
	is_triggered_only = yes

	option = {
		name = ancient_jug_origin.8.a
		trigger = {
			NOT = {
				has_origin = origin_ancient_juggernaut
			}
			NOT = {
				is_in_federation_with = from
			}
		}
	}
	option = {
		name = UNFORTUNATE
		trigger = {
			is_in_federation_with = from
			NOT = {
				has_origin = origin_ancient_juggernaut
			}
		}
	}
	option = {
		name = ancient_jug_origin.8.a_origin
		trigger = {
			has_origin = origin_ancient_juggernaut
		}
	}
}

#oh? you special-project-ed the jug? no more debuff now.
country_event = {
	id = ancient_jug_origin.10
	title = ancient_jug_origin.10.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.10.desc
					NOT = {
						has_civic = civic_machine_terminator
					}
				}
				success_text = {
					text = ancient_jug_origin.10.desc_terminator
					has_civic = civic_machine_terminator
				}
				success_text = {
					text = ancient_jug_origin.10.first_ruler #IF YOUR FIRST RULER IS STILL HERE!
					leader = {
						leader_class = ruler
						has_leader_flag = ancient_jug_origin_first_ruler
					}
					NOT = {
						has_ethic = ethic_gestalt_consciousness
					}
				}
				success_text = {
					text = ancient_jug_origin.10.desc_afternate
				}
			}
		}
	} 
	picture = GFX_evt_origin_ancient_juggernaut_3
	show_sound = event_ringworld_build_complete
	location = event_target:ancient_juggernaut_itself

	is_triggered_only = yes
	
	trigger = {
		has_origin = origin_ancient_juggernaut
	}

	immediate = {
		leader = {
			if = {
				limit = {
					leader_class = ruler
					has_leader_flag = ancient_jug_origin_first_ruler
				}
			}
			save_event_target_as = ancient_jug_origin_first_ruler
		}
		observer_event = {
			id = ancient_jug_origin.1000
		}
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			save_event_target_as = ancient_juggernaut_pre_update_ship
			if = {
				limit = {
					root = {
						has_country_flag = ancient_jug_has_overclocked
					}
				}
				create_message = { 
					type = EXPIRED_EDICT
					localization = ancient_juggernaut_origin_overclock_end_by_upgrade
					days = 60
					target = root
					variable = {
						type = name
						localization = ancient_jug
						scope = this
					}
				}
				root = {
					remove_country_flag = ancient_jug_has_overclocked
					remove_modifier = origin_ancient_juggernaut_overclocking_fake_modifier
				}
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = ancient_jug_can_access_overclock_afternate
				}
			}
			set_country_flag = ancient_jug_can_access_overclock_afternate
			set_country_flag = ancient_jug_can_access_overclock
		}
		create_fleet = {
			effect = {
				set_owner = prev.owner
				create_ship = {
					name = event_target:ancient_juggernaut_pre_update_ship
					design = "NAME_ancient_juggernaut_fully"							
				}
				
				set_fleet_stance = passive
				set_location = event_target:ancient_juggernaut_pre_update_ship
			}		
			settings = {
				can_disband = no
				can_change_composition = no	
				spawn_debris = no
				can_upgrade = yes
				can_change_leader = no
			}
		}
		event_target:ancient_juggernaut_pre_update_ship = {
			fleet = {
				dismantle = yes
			}
		}
		set_country_flag = ancient_jug_origin_has_upgraded_the_old_jug
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				NOT = {
					has_ship_flag = ancient_juggernaut_itself
				}
			}
			save_event_target_as = ancient_juggernaut_itself
			set_ship_flag = ancient_juggernaut_itself
			set_ship_flag = ancient_juggernaut_completed_status
			add_modifier = {
				modifier = origin_ancient_juggernaut_fully
				days = -1
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_upkeep
				days = -1
			}
		}
		
		every_playable_country = {
			limit = {
				has_communications = root
				NOT = {
					is_same_empire = root
				}
			}
			country_event = {
				id = ancient_jug_origin.11
				days = 5
				random = 10
			}
		}
	}
	after = {
		if = {
			limit = {
				leader = {
					has_leader_flag = ancient_jug_origin_first_ruler
					leader_class = ruler
				}
			}
			leader = {
				add_experience = 3000
			}
		}
		custom_tooltip = ancient_jug_origin.10.tooltip
		end_event_chain = "ancient_juggernaut_chain"
	}
	option = {
		name = ancient_jug_origin.10.a
		trigger = {
			NOT = {
				has_authority = auth_machine_intelligence
			}
		}
	}
	option = {
		name = ancient_jug_origin.10.a_machine
		trigger = {
			has_authority = auth_machine_intelligence
		}
	}
}
#Tell everyone knows that your jug is great again, and they're going to pay for it (Actually not)
country_event = {
	id = ancient_jug_origin.11
	title = ancient_jug_origin.11.title
	desc = ancient_jug_origin.11.desc
	picture = GFX_evt_origin_ancient_juggernaut_2
	show_sound = event_mega_structure_other_empire_build_complete
	location = from

	is_triggered_only = yes

	option = {
		name = fedev.9505.a
		trigger = {
			NOR = {
				is_at_war_with = from
				has_origin = origin_ancient_juggernaut
			}
		}
	}
	option = {
		name = ancient_jug_origin.11.a_origin
		trigger = {
			has_origin = origin_ancient_juggernaut
			NOT = {
				has_country_flag = ancient_jug_origin_has_upgraded_the_old_jug
			}
		}
	}
	option = {
		name = ancient_jug_origin.11.b_origin
		trigger = {
			has_origin = origin_ancient_juggernaut
			has_country_flag = ancient_jug_origin_has_upgraded_the_old_jug
		}
	}
	option = {
		name = ancient_jug_origin.11.c
		trigger = {
			is_at_war_with = from
			NOT = {
				has_origin = origin_ancient_juggernaut
			}
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
				has_ethic = ethic_fanatic_xenophobe
				has_ethic = ethic_xenophobe
			}
		}
	}
	option = {
		name = ancient_jug_origin.11.d
		trigger = {
			is_at_war_with = from
			NOT = {
				has_origin = origin_ancient_juggernaut
			}
			NOR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
				has_ethic = ethic_fanatic_xenophobe
				has_ethic = ethic_xenophobe
			}
		}
	}
}


#Each time you built a ship, old juggernaut gift parameter increase
ship_event = {
	id = ancient_jug_origin.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		owner = {
			has_origin = origin_ancient_juggernaut
			NOT = {
				has_country_flag = ancient_jug_has_overclocked_cooldown
			}
			any_owned_ship = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			check_variable = {
				which = ancient_juggernaut_gift_meter
				value < 101
			}
#			NOT = {
#				has_country_flag = ancient_juggernaut_itself_gift_meter_cooldown
#			}
		}
	}
	immediate = {
		owner = {
			change_variable = {
				which = ancient_juggernaut_gift_meter
				value = 0.5
			}
		}
		switch = {
			trigger = is_ship_size
			corvette = {
				owner = {
					change_variable = {
						which = ancient_juggernaut_gift_meter
						value = 0.25
					}
				}
			}
			destroyer = {
				owner = {
					change_variable = {
						which = ancient_juggernaut_gift_meter
						value = 0.5
					}
				}
			}
			cruiser = {
				owner = {
					change_variable = {
						which = ancient_juggernaut_gift_meter
						value = 1
					}
				}
			}
			battleship = {
				owner = {
					change_variable = {
						which = ancient_juggernaut_gift_meter
						value = 2
					}
				}
			}
			colonizer = {
				owner = {
					change_variable = {
						which = ancient_juggernaut_gift_meter
						value = 10
					}
				}
			}
		}
	}
}
#on_monthly_pulse_country old jug gateway
country_event = {
	id = ancient_jug_origin.13
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		
	}

	immediate = {
		if = { #LOST THE JUG BUT BUGGED
			limit = {
				NOT = {
					any_owned_ship = {
						is_ship_size = juggernaut
						has_ship_flag = ancient_juggernaut_itself
					}
				}
				NOT = {
					has_country_flag = ancient_jug_origin_lost_the_jug
				}
			}
			country_event = {
				id = ancient_jug_origin.20
			}
		}
		if = { #RESEARCH 6 RELATED TECH, UNLOCK OVERTUNER
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value > 5
				}
				NOT = {
					has_country_flag = ancient_jug_can_access_overclock
				}
			}
			set_country_flag = ancient_jug_can_access_overclock
			country_event = {
				id = ancient_jug_origin.21
				days = 360
				random = 360
			}
		}
		if = { #OVERCLOCK BUT LACK OF RESOURCES, AND PLAYER WILL CHEESE IT
			limit = {
				has_country_flag = ancient_jug_has_overclocked
				OR = {
					AND = {
						has_monthly_income = {
							resource = alloys
							value < 0
						}
						has_resource = {
							type = alloys
							amount < 250
						}
					}
					AND = {
						has_monthly_income = {
							resource = energy
							value < 0
						}
						has_resource = {
							type = energy
							amount < 500
						}
					}
				}
			}
			country_event = {
				id = ancient_jug_origin.3004
				days = 2
				random = 25
			}
		}
		if = { #AUTO-BUILD GIFT
			limit = {
				check_variable = {
					which = ancient_juggernaut_gift_meter
					value > 99
				}
				NOT = {
					has_country_flag = ancient_jug_has_overclocked_cooldown
				}
				used_naval_capacity_percent < 1
			}
			random_list = {
				92 = {
					country_event = {
						id = ancient_jug_origin.14
						days = 3
						random = 25
					}
				}
				8 = {
					modifier = {
						factor = 0
						NOT = {
							has_country_flag = ancient_jug_origin.14_happened
						}
					}
					modifier = { #FOR BALANCE, AS THEY ARE 6k-ish, no empire can survive during that time, also, nake-corvette x 50
						factor = 0
						years_passed < 15
					}
					modifier = { #FOR BALANCE, AS THEY ARE 6k-ish, no empire can survive during that time, also, nake-corvette x 50
						factor = 0.75
						years_passed < 50
					}
					country_event = {
						id = ancient_jug_origin.15
						days = 3
						random = 25
					}
				}
				
			}
		}
		if = { #MONTHLY GIFT METER
			limit = {
				check_variable = {
					which = ancient_juggernaut_gift_meter
					value < 101
				}
			}
			change_variable = {
				which = ancient_juggernaut_gift_meter
				value = 1
			}
		}
	}
}
###Random free fleet from old jug
country_event = {
	id = ancient_jug_origin.14
	title = ancient_jug_origin.14.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.14.desc
					NOT = {
						has_country_flag = ancient_jug_origin.14_happened
					}
					NOT = {
						has_civic = civic_machine_terminator
					}
				}
				success_text = {
					text = ancient_jug_origin.14.desc_terminator
					NOT = {
						has_country_flag = ancient_jug_origin.14_happened
					}
					has_civic = civic_machine_terminator
				}
				success_text = {
					text = ancient_jug_origin.14.desc_afternate
					has_country_flag = ancient_jug_origin.14_happened
				}
			}
		}
	}
	picture = GFX_evt_origin_ancient_juggernaut_2
	show_sound = event_construction
	location = event_target:ancient_juggernaut_itself
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
			is_in_combat = no
		}
		NOT = {
			has_country_flag = ancient_jug_origin.14_cooldown
		}
		NOT = {
			has_country_flag = ancient_jug_has_overclocked_cooldown
		}
	}

	after = {
		if = {
			limit = {
				NOT = {
					has_country_flag = ancient_jug_origin.14_happened
				}
			}
			set_country_flag = ancient_jug_origin.14_happened
		}
		switch = {
			trigger = has_country_flag
			ancient_jug_origin.14_corvette_4ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.4corvette
			}
			ancient_jug_origin.14_corvette_8ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.8corvette
			}
			ancient_jug_origin.14_corvette_12ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.12corvette
			}
			ancient_jug_origin.14_corvette_16ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.16corvette
			}
			ancient_jug_origin.14_corvette_32ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.32corvette
			}
			ancient_jug_origin.14_destroyer_2ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.2destroyer
			}
			ancient_jug_origin.14_destroyer_4ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.4destroyer
			}
			ancient_jug_origin.14_destroyer_6ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.6destroyer
			}
			ancient_jug_origin.14_destroyer_8ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.8destroyer
			}
			ancient_jug_origin.14_destroyer_16ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.16destroyer
			}
			ancient_jug_origin.14_cruiser_2ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.2cruiser
			}
			ancient_jug_origin.14_cruiser_3ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.3cruiser
			}
			ancient_jug_origin.14_cruiser_4ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.4cruiser
			}
			ancient_jug_origin.14_cruiser_8ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.8cruiser
			}
			ancient_jug_origin.14_battleship_2ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.2battleship
			}
			ancient_jug_origin.14_battleship_4ship = {
				custom_tooltip = ancient_jug_origin.14.tooltip.4battleship
			}
		}
		remove_country_flag = ancient_jug_origin.14_corvette_4ship
		remove_country_flag = ancient_jug_origin.14_corvette_8ship
		remove_country_flag = ancient_jug_origin.14_corvette_12ship
		remove_country_flag = ancient_jug_origin.14_corvette_16ship
		remove_country_flag = ancient_jug_origin.14_corvette_32ship
		remove_country_flag = ancient_jug_origin.14_destroyer_2ship
		remove_country_flag = ancient_jug_origin.14_destroyer_4ship
		remove_country_flag = ancient_jug_origin.14_destroyer_6ship
		remove_country_flag = ancient_jug_origin.14_destroyer_8ship
		remove_country_flag = ancient_jug_origin.14_destroyer_16ship
		remove_country_flag = ancient_jug_origin.14_cruiser_2ship
		remove_country_flag = ancient_jug_origin.14_cruiser_3ship
		remove_country_flag = ancient_jug_origin.14_cruiser_4ship
		remove_country_flag = ancient_jug_origin.14_cruiser_8ship
		remove_country_flag = ancient_jug_origin.14_battleship_2ship
		remove_country_flag = ancient_jug_origin.14_battleship_4ship
		remove_country_flag = ancient_jug_origin.14_random1
		remove_country_flag = ancient_jug_origin.14_random2
		remove_country_flag = ancient_jug_origin.14_random3
		remove_country_flag = ancient_jug_origin.14_random4
		remove_country_flag = ancient_jug_origin.14_random5
		remove_country_flag = ancient_jug_origin.14_random6
	}

	option = {
		trigger = {
			NOT = {
				has_authority = auth_machine_intelligence
			}
		}
		name = {
			text = ancient_jug_origin.14.a
			trigger = {
				has_country_flag = ancient_jug_origin.14_random1
			}
		}
		name = {
			text = ancient_jug_origin.14.b
			trigger = {
				has_country_flag = ancient_jug_origin.14_random2
			}
		}
		name = {
			text = ancient_jug_origin.14.c
			trigger = {
				has_country_flag = ancient_jug_origin.14_random3
			}
		}
		name = {
			text = ancient_jug_origin.14.d
			trigger = {
				has_country_flag = ancient_jug_origin.14_random4
			}
		}
		name = {
			text = ancient_jug_origin.14.e
			trigger = {
				has_country_flag = ancient_jug_origin.14_random5
			}
		}
		name = {
			text = ancient_jug_origin.14.f
			trigger = {
				has_country_flag = ancient_jug_origin.14_random6
			}
		}
		
	}

	option = {
		trigger = {
			has_authority = auth_machine_intelligence
		}
		name = {
			text = ancient_jug_origin.14.a_machine
			trigger = {
				has_country_flag = ancient_jug_origin.14_random1
			}
		}
		name = {
			text = ancient_jug_origin.14.b_machine
			trigger = {
				has_country_flag = ancient_jug_origin.14_random2
			}
		}
		name = {
			text = ancient_jug_origin.14.c_machine
			trigger = {
				has_country_flag = ancient_jug_origin.14_random3
			}
		}
		name = {
			text = ancient_jug_origin.14.d_machine
			trigger = {
				has_country_flag = ancient_jug_origin.14_random4
			}
		}
		name = {
			text = ancient_jug_origin.14.e_machine
			trigger = {
				has_country_flag = ancient_jug_origin.14_random5
			}
		}
		name = {
			text = ancient_jug_origin.14.f_machine
			trigger = {
				has_country_flag = ancient_jug_origin.14_random6
			}
		}
	}

	immediate = {
		set_variable = {
			which = ancient_juggernaut_gift_meter
			value = 0
		}
		set_timed_country_flag = {
			flag = ancient_jug_origin.14_cooldown
			days = 1080
		}
		random_list = {
			1 = {
				set_country_flag = ancient_jug_origin.14_random1
			}
			1 = {
				set_country_flag = ancient_jug_origin.14_random2
			}
			1 = {
				set_country_flag = ancient_jug_origin.14_random3
			}
			1 = {
				set_country_flag = ancient_jug_origin.14_random4
			}
			1 = {
				set_country_flag = ancient_jug_origin.14_random5
			}
			1 = {
				set_country_flag = ancient_jug_origin.14_random6
			}
		}
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			save_event_target_as = ancient_juggernaut_itself
		}
		random_list = {
			10 = { #Corvette
				modifier = {
					factor = 0.5
					has_technology = tech_cruisers
				}
				modifier = {
					factor = 0
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 4
							create_ship = {
								name = random
								random_existing_design = corvette
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_corvette_4ship
			}
			0 = { #Corvette
				modifier = {
					add = 5
					has_technology = tech_destroyers
				}
				modifier = {
					factor = 0.5
					has_technology = tech_cruisers
				}
				modifier = {
					factor = 0
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 8
							create_ship = {
								name = random
								random_existing_design = corvette
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_corvette_8ship
			}
			0 = {
				modifier = {
					add = 5
					has_technology = tech_cruisers
				}
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 12
							create_ship = {
								name = random
								random_existing_design = corvette
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_corvette_12ship
			}
			0 = {
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0.5
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 16
							create_ship = {
								name = random
								random_existing_design = corvette
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_corvette_16ship
			}
			0 = {
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0
					event_target:ancient_juggernaut_itself = {
						NOT = {
							has_ship_flag = ancient_juggernaut_completed_status
						}
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 32
							create_ship = {
								name = random
								random_existing_design = corvette
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_corvette_32ship
			}
			10 = { #Destroyer
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_destroyers
					}
				}
				modifier = {
					factor = 0.5
					has_technology = tech_cruisers
				}
				modifier = {
					factor = 0
					has_technology = tech_battleships
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 2
							create_ship = {
								name = random
								random_existing_design = destroyer
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_destroyer_2ship
			}
			0 = { #Destroyer
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_destroyers
					}
				}
				modifier = {
					add = 5
					has_technology = tech_cruisers
				}
				modifier = {
					factor = 0.5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0
					has_technology = tech_juggernaut
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 4
							create_ship = {
								name = random
								random_existing_design = destroyer
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_destroyer_4ship
			}
			0 = {
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_destroyers
					}
				}
				modifier = {
					add = 5
					has_technology = tech_cruisers
				}
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0.5
					has_technology = tech_juggernaut
				}
				modifier = {
					factor = 0
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 6
							create_ship = {
								name = random
								random_existing_design = destroyer
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_destroyer_6ship
			}
			0 = {
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_destroyers
					}
				}
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0.5
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 8
							create_ship = {
								name = random
								random_existing_design = destroyer
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_destroyer_8ship
			}
			0 = {
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_destroyers
					}
				}
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0
					event_target:ancient_juggernaut_itself = {
						NOT = {
							has_ship_flag = ancient_juggernaut_completed_status
						}
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 16
							create_ship = {
								name = random
								random_existing_design = destroyer
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_destroyer_16ship
			}
			10 = { #Cruiser
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_cruisers
					}
				}
				modifier = {
					factor = 0.5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0
					has_technology = tech_juggernaut
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 2
							create_ship = {
								name = random
								random_existing_design = cruiser
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_cruiser_2ship
			}
			0 = {
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_cruisers
					}
				}
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0.5
					has_technology = tech_juggernaut
				}
				modifier = {
					factor = 0
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 3
							create_ship = {
								name = random
								random_existing_design = cruiser
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_cruiser_3ship
			}
			0 = {
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_cruisers
					}
				}
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0.5
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 4
							create_ship = {
								name = random
								random_existing_design = cruiser
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_cruiser_4ship
			}
			0 = {
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_cruisers
					}
				}
				modifier = {
					add = 5
					has_technology = tech_battleships
				}
				modifier = {
					factor = 0
					event_target:ancient_juggernaut_itself = {
						NOT = {
							has_ship_flag = ancient_juggernaut_completed_status
						}
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 8
							create_ship = {
								name = random
								random_existing_design = cruiser
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_cruiser_8ship
			}
			10 = { #Battleship
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_battleships
					}
				}
				modifier = {
					add = 5
					has_technology = tech_juggernaut
				}
				modifier = {
					factor = 0.5
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 2
							create_ship = {
								name = random
								random_existing_design = battleship
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_battleship_2ship
			}
			0 = { #
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_battleships
					}
				}
				modifier = {
					add = 10
					event_target:ancient_juggernaut_itself = {
						has_ship_flag = ancient_juggernaut_completed_status
					}
				}
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
		
						while = {
							count = 4
							create_ship = {
								name = random
								random_existing_design = battleship
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
				set_country_flag = ancient_jug_origin.14_battleship_4ship
			}
		}
	}
}

#Random gift from the jug, but easter egg
country_event = {
	id = ancient_jug_origin.15
	title = ancient_jug_origin.15.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.15.desc_first
					always = yes
				}
				success_text = {
					text = ancient_jug_origin.15.desc_t34
					has_country_flag = ancient_jug_origin.15_t34
					NOT = {
						has_country_flag = ancient_jug_origin.15_t34_built
					}
				}
				success_text = {
					text = ancient_jug_origin.15.desc_t34_afternate
					has_country_flag = ancient_jug_origin.15_t34
					has_country_flag = ancient_jug_origin.15_t34_built
				}
				success_text = {
					text = ancient_jug_origin.15.desc_spam
					has_country_flag = ancient_jug_origin.15_spam
					NOT = {
						has_country_flag = ancient_jug_origin.15_spam_built
					}
				}
				success_text = {
					text = ancient_jug_origin.15.desc_spam_afternate
					has_country_flag = ancient_jug_origin.15_spam
					has_country_flag = ancient_jug_origin.15_spam_built
				}
				success_text = {
					text = ancient_jug_origin.15.desc_pre_1_3_meta
					has_country_flag = ancient_jug_origin.15_pre_1_3_meta
					NOT = {
						has_country_flag = ancient_jug_origin.15_pre_1_3_meta_built
					}
				}
				success_text = {
					text = ancient_jug_origin.15.desc_pre_1_3_meta_afternate
					has_country_flag = ancient_jug_origin.15_pre_1_3_meta
					has_country_flag = ancient_jug_origin.15_pre_1_3_meta_built
				}
				success_text = {
					text = ancient_jug_origin.15.desc_pre_2_0_meta
					has_country_flag = ancient_jug_origin.15_pre_2_0_meta
					NOT = {
						has_country_flag = ancient_jug_origin.15_pre_2_0_meta_built
					}
				}
				success_text = {
					text = ancient_jug_origin.15.desc_pre_2_0_meta_afternate
					has_country_flag = ancient_jug_origin.15_pre_2_0_meta
					has_country_flag = ancient_jug_origin.15_pre_2_0_meta_built
				}
				success_text = {
					text = ancient_jug_origin.15.desc_later_terminator
					has_civic = civic_machine_terminator
					NOT = {
						has_country_flag = ancient_jug_origin.15_terminator_seen_once
					}
				}
			}
		}
	}
	picture = GFX_evt_origin_ancient_juggernaut_2
	show_sound = event_construction
	location = event_target:ancient_juggernaut_itself
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
			is_in_combat = no
		}
		NOT = {
			has_country_flag = ancient_jug_origin.14_cooldown
		}
		NOT = {
			has_country_flag = ancient_jug_has_overclocked_cooldown
		}
	}

	after = {
		if = {
			limit = {
				has_civic = civic_machine_terminator
				NOT = {
					has_country_flag = ancient_jug_origin.15_terminator_seen_once
				}
			}
			set_country_flag = ancient_jug_origin.15_terminator_seen_once
		}
		if = {
			limit = {
				has_country_flag = ancient_jug_origin.15_t34
				NOT = {
					has_country_flag = ancient_jug_origin.15_t34_built
				}
			}
			set_country_flag = ancient_jug_origin.15_t34_built
		}
		if = {
			limit = {
				has_country_flag = ancient_jug_origin.15_spam
				NOT = {
					has_country_flag = ancient_jug_origin.15_spam_built
				}
			}
			set_country_flag = ancient_jug_origin.15_spam_built
		}
		if = {
			limit = {
				has_country_flag = ancient_jug_origin.15_pre_1_3_meta
				NOT = {
					has_country_flag = ancient_jug_origin.15_pre_1_3_meta_built
				}
			}
			set_country_flag = ancient_jug_origin.15_pre_1_3_meta_built
		}
		if = {
			limit = {
				has_country_flag = ancient_jug_origin.15_pre_2_0_meta
				NOT = {
					has_country_flag = ancient_jug_origin.15_pre_2_0_meta_built
				}
			}
			set_country_flag = ancient_jug_origin.15_pre_2_0_meta_built
		}
		remove_country_flag = ancient_jug_origin.15_t34
		remove_country_flag = ancient_jug_origin.15_spam
		remove_country_flag = ancient_jug_origin.15_pre_1_3_meta
		remove_country_flag = ancient_jug_origin.15_pre_2_0_meta
	}

	option = {
		name = {
			text = ancient_jug_origin.15.a
			trigger = {
				NOT = {
					has_country_flag = ancient_jug_origin.15_spam
				}
			}
		} 
		name = {
			text = ancient_jug_origin.15.b
			trigger = {
				has_country_flag = ancient_jug_origin.15_spam
				NOT = {
					has_authority = auth_machine_intelligence
				}
			}
		}
		name = {
			text = ancient_jug_origin.15.b_machine
			trigger = {
				has_country_flag = ancient_jug_origin.15_spam
				has_authority = auth_machine_intelligence
			}
		}
		switch = {
			trigger = has_country_flag
			ancient_jug_origin.15_t34 = {
				custom_tooltip =  ancient_jug_origin.15.tooltip.t34
			}
			ancient_jug_origin.15_spam = {
				custom_tooltip =  ancient_jug_origin.15.tooltip.spam
			}
			ancient_jug_origin.15_pre_1_3_meta = {
				custom_tooltip =  ancient_jug_origin.15.tooltip.pre_1_3_meta
			}
			ancient_jug_origin.15_pre_2_0_meta = {
				custom_tooltip =  ancient_jug_origin.15.tooltip.pre_2_0_meta
			}
		}
	}

	immediate = {
		
		set_variable = {
			which = ancient_juggernaut_gift_meter
			value = 0
		}
		set_timed_country_flag = {
			flag = ancient_jug_origin.14_cooldown
			days = 1080
		}
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			save_event_target_as = ancient_juggernaut_itself
		}
		random_list = {
			10 = { 
				modifier = {
					factor = 0.1
					has_country_flag = ancient_jug_origin.15_t34_built
				}
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_battleships
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = ancient_jug_origin.15_t34_built
						}
					}
					observer_event = {
						id = ancient_jug_origin.1006
					}
				}
				create_fleet = { #T34-set, PVE player's best budget build ever!
					set_take_point = no
					effect = {
						set_owner = prev
						while = {
							count = 4
							create_ship = {
								name = random
								design = "NAME_ancient_juggernaut_corvette_sled"							
							}
						}
						while = {
							count = 6
							create_ship = {
								name = random
								design = "NAME_ancient_juggernaut_battleship_t34"							
							}
						}
						set_fleet_stance = passive
						set_location = event_target:ancient_juggernaut_itself
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
					}		
					settings = {
						can_change_composition = yes	
						spawn_debris = no
					}
					
				}
				set_country_flag = ancient_jug_origin.15_t34
			}
			10 = { 
				modifier = {
					factor = 0.1
					has_country_flag = ancient_jug_origin.15_spam_built
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = ancient_jug_origin.15_spam_built
						}
					}
					observer_event = {
						id = ancient_jug_origin.1003
					}
				}
				create_fleet = { #SPAWN NAKEN CORVETTES
					set_take_point = no
					effect = {
						set_owner = prev
						while = {
							count = 50
							create_ship = {
								name = random
								design = "NAME_ancient_juggernaut_corvette_spam"							
							}
						}
						set_fleet_stance = passive
						set_location = event_target:ancient_juggernaut_itself
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
					}		
					settings = {
						can_change_composition = yes	
						spawn_debris = no
					}
					
				}
				set_country_flag = ancient_jug_origin.15_spam
				
			}
			10 = { 
				modifier = {
					factor = 0.1
					has_country_flag = ancient_jug_origin.15_pre_1_3_meta_built
				}
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_destroyers
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = ancient_jug_origin.15_pre_1_3_meta_built
						}
					}
					observer_event = {
						id = ancient_jug_origin.1004
					}
				}
				
				create_fleet = { #SPAWN pre 1.3 meta destroyers (If I remember right)
					set_take_point = no
					effect = {
						set_owner = prev
						while = {
							count = 10
							create_ship = {
								name = random
								design = "NAME_ancient_juggernaut_destroyer_pre_1_3_meta"							
							}
						}
						set_fleet_stance = passive
						set_location = event_target:ancient_juggernaut_itself
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
					}		
					settings = {
						can_change_composition = yes	
						spawn_debris = no
					}
					
				}
				set_country_flag = ancient_jug_origin.15_pre_1_3_meta
				
			}
			10 = { 
				modifier = {
					factor = 0.1
					has_country_flag = ancient_jug_origin.15_pre_2_0_meta_built
				}
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_cruisers
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = ancient_jug_origin.15_pre_2_0_meta_built
						}
					}
					observer_event = {
						id = ancient_jug_origin.1005
					}
				}
				create_fleet = { #SPAWN pre 2.0 meta cruiser
					set_take_point = no
					effect = {
						set_owner = prev
						while = {
							count = 12
							create_ship = {
								name = random
								design = "NAME_ancient_juggernaut_cruiser_pre_2_0_meta"							
							}
						}
						set_fleet_stance = passive
						set_location = event_target:ancient_juggernaut_itself
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
					}		
					settings = {
						can_change_composition = yes	
						spawn_debris = no
					}
					
				}
				set_country_flag = ancient_jug_origin.15_pre_2_0_meta
				
			}
		}
	}
}

###INFORM
country_event = {
	id = ancient_jug_origin.16
	title = ancient_jug_origin.16.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.16.desc_destroyers
					has_country_flag = ancient_jug_origin.16_destroyers
				}
				success_text = {
					text = ancient_jug_origin.16.desc_cruisers
					has_country_flag = ancient_jug_origin.16_cruisers
				}
				success_text = {
					text = ancient_jug_origin.16.desc_battleships
					has_country_flag = ancient_jug_origin.16_battleships
				}
			}
		}
	}
	 
	picture = GFX_evt_hangar_bay
	show_sound = event_default
	is_triggered_only = yes
	location = event_target:ancient_juggernaut_itself
	trigger = {
		has_origin = origin_ancient_juggernaut
		OR = {
			last_increased_tech = tech_destroyers
			last_increased_tech = tech_cruisers
			last_increased_tech = tech_battleships
		}
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
		NOT = {
			has_country_flag = ancient_jug_origin_has_upgraded_the_old_jug
		}
	}
	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			save_event_target_as = ancient_juggernaut_itself
			
		}
		if = {
			limit = {
				last_increased_tech = tech_destroyers
			}
			set_country_flag = ancient_jug_origin.16_destroyers
		}
		else_if = {
			limit = {
				last_increased_tech = tech_cruisers
			}
			set_country_flag = ancient_jug_origin.16_cruisers
		}
		else_if = {
			limit = {
				last_increased_tech = tech_battleships
			}
			set_country_flag = ancient_jug_origin.16_battleships
		}
	}
	after = {
		custom_tooltip = ancient_jug_origin.16.tooltip
		hidden_effect = {
			remove_country_flag = ancient_jug_origin.16_destroyers
			remove_country_flag = ancient_jug_origin.16_cruisers
			remove_country_flag = ancient_jug_origin.16_battleships
		}
	}
	option = {
		name = GOOD
	}
}

###IF YOU RESEARCHED TITAN TECH BUT DONT HAVE JUG TECH (apocalypse DLC)
country_event = {
	id = ancient_jug_origin.17
	title = ancient_jug_origin.16.title
	desc = ancient_jug_origin.17.desc
	picture = GFX_evt_hangar_bay
	show_sound = event_default
	is_triggered_only = yes
	location = event_target:ancient_juggernaut_itself
	trigger = {
		has_origin = origin_ancient_juggernaut
		last_increased_tech = tech_titans
		NOT = {
			has_technology = tech_juggernaut
		}
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
		NOT = {
			has_country_flag = ancient_jug_origin_has_upgraded_the_old_jug
		}
	}
	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			save_event_target_as = ancient_juggernaut_itself
			
		}
	}
	after = {
		if = {
			limit = {
				NOT = {
					has_tech_option = tech_juggernaut
				}
			}
			add_research_option = tech_juggernaut
		}
	}
	option = {
		name = EXCELLENT
		trigger = {
			NOT = {
				has_authority = auth_machine_intelligence
			}
		}
	}
	option = {
		name = ACKNOWLEDGED
		trigger = {
			has_authority = auth_machine_intelligence
		}
	}
}

###JUG DISAPPEAR VIA WEIRD damage 99999 command
#jugger went kaboom but no idea why
country_event = { 
	id = ancient_jug_origin.20
	title = ancient_jug_origin.20.title
	desc = {
		text = ancient_jug_origin.20.desc
		trigger = {
			NOT = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
	}
	desc = {
		text = ancient_jug_origin.20.desc_geth
		trigger = {
			has_ethic = ethic_gestalt_consciousness
		}
	}
	picture = GFX_evt_large_explosion
	show_sound = event_super_explosion
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		NOT = {
			has_country_flag = ancient_jug_origin_lost_the_jug
		}
	}

	immediate = {
		set_country_flag = ancient_jug_origin_lost_the_jug
		if = {
			limit = {
				has_special_project = ANCIENT_JUGGERNAUT_PROJECT
			}
			abort_special_project = {
				type = ANCIENT_JUGGERNAUT_PROJECT
			}
		}
		if = {
			limit = {
				has_special_project = ANCIENT_JUGGERNAUT_REPAIR_FTL_PROJECT
			}
			abort_special_project = {
				type = ANCIENT_JUGGERNAUT_REPAIR_FTL_PROJECT
			}
		}
		if = {
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value < 4
				}
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_destroyed_debuff
				days = 7200
			}
		}
		if = {
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value > 3
				}
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_destroyed_debuff_afternate
				days = 7200
			}	
		}
		remove_modifier = origin_ancient_juggernaut_overclocking_fake_modifier
		remove_modifier = origin_ancient_juggernaut_overclocking_cooldown_modifier
		effect_ancient_jug_remove_booster_flag = yes
		effect_ancient_jug_remove_booster_modifier = yes
	}

	after = {
		if = {
			limit = {
				has_event_chain = "ancient_juggernaut_chain"
			}
			end_event_chain = "ancient_juggernaut_chain"
		}
		if = {
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value < 4
				}
			}
			tooltip = {
				add_modifier = {
					modifier = origin_ancient_juggernaut_destroyed_debuff
					days = 7200
				}	
			}
		}
		if = {
			limit = {
				check_variable = {
					which = origin_ancient_juggernaut_researched_related_tech
					value > 3
				}
			}
			tooltip = {
				add_modifier = {
					modifier = origin_ancient_juggernaut_destroyed_debuff_afternate
					days = 7200
				}	
			}
		}
		add_modifier = {
			modifier = origin_ancient_juggernaut_destroyed_debuff_afternate_2
			days = -1
		}
	}

	option = {
		trigger = {
			NOT = {
				has_country_flag = origin_ancient_juggernaut_can_build_one
			}
		}
		name = {
			text = UNFORTUNATE
			trigger = {
				
				NOT = {
					has_authority = auth_machine_intelligence
				}
			}
		} 		
		name = {
			text = ancient_jug_origin.4.machine
			trigger = {
				has_authority = auth_machine_intelligence
			}
		} 
		hidden_effect = {
			observer_event = {
				id = ancient_jug_origin.1006
			}
		}
		
	}

	option = {
		name = UNFORTUNATE
		trigger = {
			has_country_flag = origin_ancient_juggernaut_can_build_one
		}
		hidden_effect = {
			observer_event = {
				id = ancient_jug_origin.1007
			}
		}
		
	}
}

###CAN OVERTUNER NOW, player country only
country_event = {
	id = ancient_jug_origin.21
	title = ancient_jug_origin.21.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.21.desc
					NOT = {
						has_ethic = ethic_gestalt_consciousness
					}
				}
				success_text = {
					text = ancient_jug_origin.21.desc_geth
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
	} 
	picture = GFX_evt_origin_ancient_juggernaut_2
	location = event_target:ancient_juggernaut_itself
	show_sound = event_default
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		has_country_flag = ancient_jug_can_access_overclock
		NOT = {
			has_country_flag = ancient_jug_can_access_overclock_afternate
		}
	}

	immediate = {
		set_country_flag = ancient_jug_can_access_overclock_afternate
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			save_event_target_as = ancient_juggernaut_itself
		}
	}

	option = {
		name = ancient_jug_origin.21.a
		trigger = {
			NOT = {
				has_authority = auth_machine_intelligence
			}
		}
		custom_tooltip = ancient_jug_origin.21.a.tooltip
	}

	option = {
		name = ACKNOWLEDGED
		trigger = {
			has_authority = auth_machine_intelligence
		}
		custom_tooltip = ancient_jug_origin.21.a.tooltip
	}

	option = {
		name = ancient_jug_origin.21.b
		hidden_effect = {
			country_event = {
				id = ancient_jug_origin.1999
			}
		}
		custom_tooltip = ancient_jug_origin.21.b.tooltip
		ai_chance = {
			factor = 0
		}
	}
}
###AI COUNTRY is dumb for fleet boost, so randomized to get them one of those### yearly country pulse
country_event = {
	id = ancient_jug_origin.22
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_country_flag = ancient_jug_origin_has_upgraded_the_old_jug
		has_origin = origin_ancient_juggernaut
		is_ai = yes
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
		NOT = {
			has_country_flag = origin_ancient_juggernaut_booster_ai_owned_one
		}
		NOT = {
			has_country_flag = ancient_jug_origin_lost_the_jug
		}
	}

	immediate = {
		if = {
			limit = {
				NOR = {
					has_modifier = origin_ancient_juggernaut_booster_shield
					has_modifier = origin_ancient_juggernaut_booster_damage
					has_modifier = origin_ancient_juggernaut_booster_jumpdrive
					has_modifier = origin_ancient_juggernaut_booster_evasion
					has_modifier = origin_ancient_juggernaut_booster_range
					has_modifier = origin_ancient_juggernaut_booster_hyperdrive
					has_modifier = origin_ancient_juggernaut_booster_accuracy
					has_modifier = origin_ancient_juggernaut_booster_subspeed
					has_modifier = origin_ancient_juggernaut_booster_rocket
					has_modifier = origin_ancient_juggernaut_booster_bomb
					has_modifier = origin_ancient_juggernaut_booster_craft
					has_modifier = origin_ancient_juggernaut_booster_penetrate
					has_modifier = origin_ancient_juggernaut_booster_regenerate
					has_modifier = origin_ancient_juggernaut_booster_home_fire
					has_modifier = origin_ancient_juggernaut_booster_point_defense
					has_modifier = origin_ancient_juggernaut_booster_upkeep
				}
			}
			set_country_flag = origin_ancient_juggernaut_booster_ai_owned_one
			random_list = {
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_shield
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_damage
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_jumpdrive
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_evasion
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_range
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_hyperdrive
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_accuracy
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_subspeed
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_rocket
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_bomb
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_craft
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_penetrate
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_regenerate
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_home_fire
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_point_defense
						days = -1
					}
				}
				1 = {
					add_modifier = {
						modifier = origin_ancient_juggernaut_booster_upkeep
						days = -1
					}
				}
			}
		}
		
	}
}
###AI: can i overclock and not getting myself destroy? yearly country pulse
country_event = {
	id = ancient_jug_origin.23
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		is_ai = yes
		has_country_flag = ancient_jug_can_access_overclock_afternate
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
		NOT = {
			has_country_flag = ancient_jug_origin_lost_the_jug
		}
		NOT = {
			has_country_flag = ancient_jug_has_overclocked
		}
		NOT = {
			has_country_flag = ancient_jug_has_overclocked_cooldown
		}
		used_naval_capacity_percent < 1 #AI WILL DISBAND OUTNUMBERED SHIPS
		OR = {
			AND = { #INCOME IS GOOD SO LET'S DO IT
				has_monthly_income = {
					resource = alloys
					value > 160
				}
				has_monthly_income = {
					resource = energy
					value > 600
				}
			}
			AND = { #HAS ENERGY INCOME TO SPEND AND SOME RESOURCES
				has_monthly_income = {
					resource = energy
					value > 300
				}
				OR = {
					has_resource = {
						type = alloys
						amount > 1000
					}
					has_resource = {
						type = food
						amount > 5000
					}
					has_resource = {
						type = minerals
						amount > 5000
					}
					has_resource = {
						type = consumer_goods
						amount > 2000
					}
				}
				has_resource = {
					type = energy
					amount > 1000
				}
			}
			AND = { #A LOT OF SPARED STUFF TO USE (THEY WILL SELL THEIR STUFF FOR ENERGY SO DON'T WORRY)
				OR = {
					has_resource = {
						type = alloys
						amount > 12500
					}
					has_resource = {
						type = food
						amount > 12500
					}
					has_resource = {
						type = minerals
						amount > 12500
					}
					has_resource = {
						type = consumer_goods
						amount > 12500
					}
				}
				has_resource = {
					type = energy
					amount > 1000
				}
			}
		}
		
	}

	after = {
		if = {
			limit = {
				OR = {
					has_country_flag = ancient_jug_overclock_ship_size_1
					has_country_flag = ancient_jug_overclock_ship_size_2
					has_country_flag = ancient_jug_overclock_ship_size_4
					has_country_flag = ancient_jug_overclock_ship_size_8
				}
			}
			country_event = {
				id = ancient_jug_origin.3000
			}
			set_timed_country_flag = {
				flag = ancient_jug_has_overclocked
				days = 1081
			}
			set_timed_country_flag = {
				flag = ancient_jug_has_overclocked_cooldown
				days = 2520
			}
		}	
	}

	immediate = {
		remove_country_flag = ancient_jug_overclock_ship_size_1
		remove_country_flag = ancient_jug_overclock_ship_size_2
		remove_country_flag = ancient_jug_overclock_ship_size_4
		remove_country_flag = ancient_jug_overclock_ship_size_8
		random_list = { #AI LOVES BIG SHIP AND SAVE SOME OF YOUR CPU SUFFER
			10 = {
				modifier = {
					factor = 0.5
					OR = {
						is_at_war = yes
						has_crisis = yes
						has_global_flag = war_in_heaven_ongoing
						has_global_flag = gray_goo_crisis_active
						AND = {
							has_global_flag = great_khan_announcement
							NOT = { has_global_flag = great_khan_dead }
						}
					}
				}
				set_country_flag = ancient_jug_overclock_ship_size_1
			}
			10 = {
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_destroyers
					}
				}
				set_country_flag = ancient_jug_overclock_ship_size_2
			}
			10 = {
				modifier = {
					factor = 1.5
					OR = {
						is_at_war = yes
						has_crisis = yes
						has_global_flag = war_in_heaven_ongoing
						has_global_flag = gray_goo_crisis_active
						AND = {
							has_global_flag = great_khan_announcement
							NOT = { has_global_flag = great_khan_dead }
						}
					}
				}
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_cruisers
					}
				}
				set_country_flag = ancient_jug_overclock_ship_size_4
			}
			10 = {
				modifier = {
					factor = 2
					OR = {
						is_at_war = yes
						has_crisis = yes
						has_global_flag = war_in_heaven_ongoing
						has_global_flag = gray_goo_crisis_active
						AND = {
							has_global_flag = great_khan_announcement
							NOT = { has_global_flag = great_khan_dead }
						}
					}
				}
				modifier = {
					factor = 0
					NOT = {
						has_technology = tech_battleships
					}
				}
				set_country_flag = ancient_jug_overclock_ship_size_8
			}
		}
	}
}

#fixed that jug FTL drive so lets roll
country_event = {
	id = ancient_jug_origin.24
	title = ancient_jug_origin.24.title
	desc = {
		trigger = {
			hidden:root = {
				success_text = {
					text = ancient_jug_origin.24.desc
					NOT = {
						has_ethic = ethic_gestalt_consciousness
					}
				}
				success_text = {
					text = ancient_jug_origin.24.desc_geth
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
	} 
	picture = GFX_evt_origin_ancient_juggernaut
	show_sound = event_ship_thrusters
	location = event_target:ancient_juggernaut_itself

	is_triggered_only = yes
	
	trigger = {
		has_origin = origin_ancient_juggernaut
	}

	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			remove_modifier = origin_ancient_juggernaut_initial
		}
	}
	after = {
		custom_tooltip = ancient_jug_origin.24.tooltip
		hidden_effect = {
			abort_special_project = {
				type = ANCIENT_JUGGERNAUT_REPAIR_FTL_PROJECT
			}
		}
	}
	option = {
		name = fedev.9500.a
		trigger = {
			has_ethic = ethic_fanatic_militarist
		}
	}
	option = {
		name = ancient_jug_origin.24.xenophile
		trigger = {
			has_ethic = ethic_fanatic_xenophile
		}
	}
	option = {
		name = ancient_jug_origin.24.materialist
		trigger = {
			has_ethic = ethic_fanatic_materialist
		}
	}
	option = {
		name = ancient_jug_origin.24.spiritualist
		trigger = {
			has_ethic = ethic_fanatic_spiritualist
		}
	}
	option = {
		name = ancient_jug_origin.24.pacifist
		trigger = {
			has_ethic = ethic_fanatic_pacifist
		}
	}
	option = {
		name = ancient_jug_origin.24.authoritarian
		trigger = {
			has_ethic = ethic_fanatic_authoritarian
		}
	}
	option = {
		name = ancient_jug_origin.24.egalitarian
		trigger = {
			has_ethic = ethic_fanatic_egalitarian
		}
	}
	option = {
		name = ancient_jug_origin.24.other
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_fanatic_authoritarian
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_fanatic_materialist
				has_ethic = ethic_fanatic_xenophile
				has_ethic = ethic_fanatic_militarist
			}
		}
	}
}


###############OBSERVER EVENT###############

observer_event = {
	id = ancient_jug_origin.999
	title = ancient_jug_origin.2.title
	desc = ancient_jug_origin.999.desc
	picture = GFX_evt_origin_ancient_juggernaut_3
	location = event_target:ancient_juggernaut_itself
	show_sound = event_default
	is_triggered_only = yes

	option = {
		name = OK
	}
}
observer_event = {
	id = ancient_jug_origin.1000
	title = ancient_jug_origin.2.title
	desc = ancient_jug_origin.1000.desc
	picture = GFX_evt_origin_ancient_juggernaut_3
	location = event_target:ancient_juggernaut_itself
	show_sound = event_mega_structure_other_empire_build_complete
	is_triggered_only = yes

	option = {
		name = OK
	}
}
###LOST THE JUG###
observer_event = {
	id = ancient_jug_origin.1001
	title = ancient_jug_origin.4.title
	desc = ancient_jug_origin.1001.desc
	picture = GFX_evt_large_explosion
	location = event_target:ancient_juggernaut_itself
	show_sound = event_ship_explosion
	is_triggered_only = yes

	option = {
		name = OK
	}
}
###LOST THE JUG, REAL FAST###
observer_event = {
	id = ancient_jug_origin.1002
	title = ancient_jug_origin.4.title
	desc = ancient_jug_origin.1002.desc
	picture = GFX_evt_large_explosion
	location = event_target:ancient_juggernaut_itself
	show_sound = event_ship_explosion
	is_triggered_only = yes

	option = {
		name = OK
	}
}
###META SHIPS###
#NAKE
observer_event = {
	id = ancient_jug_origin.1003
	title = ancient_jug_origin.14.title
	desc = ancient_jug_origin.1003.desc
	picture = GFX_evt_juggernaut
	location = event_target:ancient_juggernaut_itself
	show_sound = event_construction
	is_triggered_only = yes

	option = {
		name = ancient_jug_origin.1003.a
		custom_tooltip = ancient_jug_origin.1003.a.tooltip
	}
}
#DESTORY
observer_event = {
	id = ancient_jug_origin.1004
	title = ancient_jug_origin.14.title
	desc = ancient_jug_origin.1004.desc
	picture = GFX_evt_juggernaut
	location = event_target:ancient_juggernaut_itself
	show_sound = event_construction
	is_triggered_only = yes

	option = {
		name = OK
	}
}
#CRUISER
observer_event = {
	id = ancient_jug_origin.1005
	title = ancient_jug_origin.14.title
	desc = ancient_jug_origin.1005.desc
	picture = GFX_evt_juggernaut
	location = event_target:ancient_juggernaut_itself
	show_sound = event_construction
	is_triggered_only = yes

	option = {
		name = OK
	}
}
#T34
observer_event = {
	id = ancient_jug_origin.1006
	title = ancient_jug_origin.14.title
	desc = ancient_jug_origin.1006.desc
	picture = GFX_evt_juggernaut
	location = event_target:ancient_juggernaut_itself
	show_sound = event_construction
	is_triggered_only = yes

	option = {
		name = ancient_jug_origin.1006.a
	}
}

###LOST THE JUG, but it seif-destruct
observer_event = {
	id = ancient_jug_origin.1007
	title = ancient_jug_origin.20.title
	desc = ancient_jug_origin.1007.desc
	picture = GFX_evt_large_explosion
	location = from
	show_sound = event_ship_explosion
	is_triggered_only = yes

	option = {
		name = OK
	}
}
###LOST THE JUG, REAL FAST but it seif-destruct###
observer_event = {
	id = ancient_jug_origin.1008
	title = ancient_jug_origin.20.title
	desc = ancient_jug_origin.1008.desc
	picture = GFX_evt_large_explosion
	location = from
	show_sound = event_ship_explosion
	is_triggered_only = yes

	option = {
		name = OK
	}
}


###UI gateway###
country_event = {
	id = ancient_jug_origin.1999
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		NOT = {
			has_country_flag = ancient_juggernaut_view_opened
		}
	}

	immediate = {
		set_country_flag = ancient_juggernaut_view_opened  
		country_event = {
			id = ancient_jug_origin.2000
		}
	}

}
###UI###
country_event = {
	id = ancient_jug_origin.2000
	is_triggered_only = yes

	diplomatic = yes
	custom_gui = "ancient_juggernaut_window"

	title = MOD_ANCIENT_JUG_OVERCLOCK_TITLE
	desc = ""
	
	trigger = {
	}

	immediate = {
	}

	option = {
		name = OK
		hidden_effect = {
			remove_country_flag = ancient_juggernaut_view_opened #UI will close itself if you let it open for too long (around 2~3 years in game)
			country_event = {
				id = ancient_jug_origin.2001
			}
		}	
	}
}

country_event = {
	id = ancient_jug_origin.2001
	title = ancient_jug_origin.2001.title
	desc = ancient_jug_origin.2001.desc
	picture = GFX_evt_throne_room
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_country_flag = ancient_jug_has_opened_ui_once
		}
	}

	immediate = {
		set_country_flag = ancient_jug_has_opened_ui_once
	}

	option = {
		name = OK
	}
}

###OVERCLOCK###
country_event = {
	id = ancient_jug_origin.3000
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
	}

	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			add_modifier = {
				modifier = origin_ancient_juggernaut_overclocking
				days = 1080
			}
		}
		add_modifier = {
			modifier = origin_ancient_juggernaut_overclocking_fake_modifier
			days = 1080
		}
		add_modifier = {
			modifier = origin_ancient_juggernaut_overclocking_cooldown_modifier
			days = 2520
		}
		country_event = {
			id = ancient_jug_origin.3001
			days = 180
		}
		country_event = {
			id = ancient_jug_origin.3002
			days = 1080
		}
		country_event = {
			id = ancient_jug_origin.3003
			days = 2520
		}
	}
}
###DO THE OVERCLOCK TRICK
country_event = {
	id = ancient_jug_origin.3001
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ancient_juggernaut
		has_country_flag = ancient_jug_has_overclocked
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
	}
	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			save_event_target_as = ancient_juggernaut_itself
		}
		switch = {
			trigger = has_country_flag
			ancient_jug_overclock_ship_size_1 = {
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
						while = {
							count = 24
							create_ship = {
								name = random
								random_existing_design = corvette
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
			}
			ancient_jug_overclock_ship_size_2 = {
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
						while = {
							count = 12
							create_ship = {
								name = random
								random_existing_design = destroyer
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
			}
			ancient_jug_overclock_ship_size_4 = {
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
						while = {
							count = 6
							create_ship = {
								name = random
								random_existing_design = cruiser
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
			}
			ancient_jug_overclock_ship_size_8 = {
				create_fleet = {
					set_take_point = no
					effect = {
						set_owner = prev
						while = {
							count = 3
							create_ship = {
								name = random
								random_existing_design = battleship
							}
						}
						add_modifier = {
							modifier = origin_ancient_juggernaut_upkeep_half
							days = -1
						}
						set_location = event_target:ancient_juggernaut_itself
					}
				}
			}
		}
		country_event = {
			id = ancient_jug_origin.3001
			days = 180
		}
	}
}

###OVERCLOCK IS OVER NOTIFY
country_event = {
	id = ancient_jug_origin.3002
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
	}

	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			create_message = { 
				type = EXPIRED_EDICT
				localization = ancient_juggernaut_origin_overclock_end
				days = 60
				target = root
				variable = {
					type = name
					localization = ancient_jug
					scope = this
				}
			}
		}
	}
}

###COOLDOWN IS OVER NOTIFY
country_event = {
	id = ancient_jug_origin.3003
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
	}

	immediate = {
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			create_message = { 
				type = EVENT_MESSAGE_TYPE
				localization = ancient_juggernaut_origin_cooldown_end
				days = 60
				target = root
				variable = {
					type = name
					localization = ancient_jug
					scope = this
				}
			}
		}
		
	}
}

###YOU DONT HAVE ENOUGH RESOURSE FOR THE ＯＶＥＲＣＬＯＣＫ
country_event = {
	id = ancient_jug_origin.3004
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ancient_juggernaut
		any_owned_ship = {
			is_ship_size = juggernaut
			has_ship_flag = ancient_juggernaut_itself
		}
		OR = {
			AND = {
				has_monthly_income = {
					resource = alloys
					value < 0
				}
				has_resource = {
					type = alloys
					amount < 26
				}
			}
			AND = {
				has_monthly_income = {
					resource = energy
					value < 0
				}
				has_resource = {
					type = energy
					amount < 101
				}
			}
		}
	}

	immediate = {
		remove_country_flag = ancient_jug_has_overclocked
		remove_modifier = origin_ancient_juggernaut_overclocking_fake_modifier
		random_owned_ship = {
			limit = {
				is_ship_size = juggernaut
				has_ship_flag = ancient_juggernaut_itself
			}
			remove_modifier = origin_ancient_juggernaut_overclocking
			create_message = { 
				type = EXPIRED_EDICT
				localization = ancient_juggernaut_origin_overclock_no_resource_end
				days = 60
				target = root
				variable = {
					type = name
					localization = ancient_jug
					scope = this
				}
			}
		}
		
	}
}