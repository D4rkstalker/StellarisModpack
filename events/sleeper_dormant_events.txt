namespace = sleeper_dormant

#any events that happen during the dormant stage go here

#Hive first contact
country_event = {
	id = sleeper_dormant.1
	title = sleeper_dormant.1.title
	desc = sleeper_dormant.1.desc
	picture = GFX_evt_star_chart
	location = FROMFROMFROM
	trackable = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = default
		exists = capital_scope
		FROM = { is_sleeper = yes }
		NOR = { 
			has_country_flag = sleeper_found
			has_country_flag = sleeper_encountered
		}
	}

	immediate = {
		set_country_flag = sleeper_found
		enable_special_project = {
			name = "INVESTIGATE_THE_SLEEPER"
			location = capital_scope
			owner = THIS
		}
	}
	
	option = {
		name = "action.10.a"
	}
}

country_event = {
	id = sleeper_dormant.2
	title = sleeper_dormant.2.title
	desc = sleeper_dormant.2.desc
	picture = GFX_evt_star_chart
	
	is_triggered_only = yes

	option = {
		name = "action.10.a"
		hidden_effect = { country_event = { id = sleeper_dormant.3 } }
	}
}

country_event = {
	id = sleeper_dormant.3
	title = sleeper_dormant.3.title
	desc = {
		text = sleeper_dormant.3.desc.a
		trigger = {
			exists = event_target:hive_enclave_country
		}
	}
	desc = {
		text = sleeper_dormant.3.desc.b
		trigger = {
			NOT = {
				exists = event_target:hive_enclave_country
				any_country = { is_country_type = berserker_awoken_hive }
			}
		}
	}
	desc = {
		text = sleeper_dormant.3.desc.c
		trigger = {
			any_country = { is_country_type = berserker_awoken_hive }
		}
	}
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes

	immediate = {
		save_event_target_as = us_the_contacter
		if = {
			limit = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
			random_country = {
				limit = {
					is_country_type = hive_researcher_enclave
				}
				save_event_target_as = contact_empire
				establish_communications_no_message = event_target:us_the_contacter
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						any_country = {
							is_country_type = hive_researcher_enclave
						}
					}
					any_country = {
						is_country_type = berserker_awoken_hive
					}
				}
			}
			random_country = {
				limit = {
					is_sleeper = yes
				}
				save_event_target_as = contact_empire
				establish_communications_no_message = event_target:us_the_contacter
			}
		}
		every_country = {
			limit = { is_sleeper = yes }
			establish_communications_no_message = event_target:us_the_contacter
		}
		set_country_flag = sleeper_encountered
		remove_country_flag = sleeper_found
	}
	
	option = {
		name = sleeper_dormant.3.a
	}
}

#every 10 years aggro increase, chances based on the state of the galaxy.
event = {
	id = sleeper_dormant.4
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = sleeper_berserker_happened }
		any_country = { is_country_type = the_sleeper_fallen }
	}

	immediate = {
		event_target:the_sleeper = {
		#calculate total number of normal empires (+1)
			while = {
				limit = {
					is_country_type = default
					NOT = { has_country_flag = sleeper_total_countries_checked }
				}
				change_variable = { which = numTotalEmpires value = 1 }
				set_country_flag = sleeper_total_countries_checked
			}
			every_country = {
				remove_country_flag = sleeper_total_countries_checked
			}
		#calculate half and one fourth of the total number of normal empires
			set_variable = { which = numEmpiresHalf value = numTotalEmpires }
			change_variable = { which = numTotalEmpires value = 1 }
			divide_variable = { which = numEmpiresHalf value = 2 }
			set_variable = { which = numEmpiresfourth value = numTotalEmpires }
			divide_variable = { which = numEmpiresfourth value = 4 }
		#calculate number of > equivialent normal empires or federations
			set_variable = { which = numPowerfulEmpires value = 0 }
			while = {
				limit = {	
					any_country = {
						is_country_type = default
						NOT = { has_country_flag = sleeper_powergage_checked }
						OR = {
							relative_power = {
								who = this
								category = all
								value > equivalent
							}
							AND = {
								has_federation = yes
								federation = {
									relative_power = {
										who = PREV
										category = all
										value > equivalent
									}
								}
							}
						}
					}
				}
				random_country = {
					limit = {	
						any_country = {
							NOT = { has_country_flag = sleeper_powergage_checked }
							is_country_type = default
							OR = {
								relative_power = {
									who = this
									category = all
									value > equivalent
								}
								AND = {
									has_federation = yes
									federation = {
										relative_power = {
											who = PREV
											category = all
											value > equivalent
										}
									}
								}
							}
						}
					}
					set_country_flag = sleeper_powergage_checked
				}
				change_variable = { which = numPowerfulEmpires value = 1 }
			}
			every_country = {
				remove_country_flag = sleeper_powergage_checked
			}
		#aggro increases. These should not be enough to awaken it by itself.
		#changes by 5 regardles, unless the value is over 900
			if = {
				limit = {
					check_variable = { which = sleeper_aggro value < 901 }
				}
				change_variable = { which = sleeper_aggro value = 5 }
			}
		#if the conditions for a AEs awakening are met, increase by another 10 points regardless
			if = {
				limit = {
					any_country = {
						is_country_type = default
						OR = {
							fleet_power > 70000
							AND = {
								has_federation = yes
								federation = {
									fleet_power > 90000
								}
							}
							any_owned_planet = {
								has_planet_flag = fallen_empire_world
							}
						}
					}
				}
				change_variable = { which = sleeper_aggro value = 10 }
			}
		#if the war in heaven is going on right now, add another whopping 200 points, ensureing that the threshold is reached
			if = {
				limit = { has_global_flag = war_in_heaven_ongoing }
				change_variable = { which = sleeper_aggro value = 200 }
			}
		#aggro inceases randomly based on the state of the galaxy by a further 30, with inbuilt compatability for ZOFE and MEM countrytypes.
			random_list = {
				20 = {
				}	#most only increase aggro if the conditions are met. This way, the more happens, the more likely an increase gets.
				20 = {#half of all empires superiour?
					if = {
						limit = {
							check_variable = { which = numPowerfulEmpires value >= numEmpireshalf }
						}
						change_variable = { which = sleeper_aggro value = 30 }
					}
				}
				20 = {#one fourth of all empires superiour?
					if = {
						limit = {
							check_variable = { which = numPowerfulEmpires value >= numEmpiresfourth }
						}
						change_variable = { which = sleeper_aggro value = 30 }
					}
				}
				10 = {#ongoing crisis? (higher increase)
					if = {
						limit = {
							OR = {
								any_country = {
									OR = {
										is_country_type = awakened_marauders
										is_country_type = swarm
										is_country_type = extradimensional_2
										is_country_type = extradimensional
										is_country_type = extradimensional_3
										is_country_type = ai_empire
										is_country_type = gray_goo
										is_country_type = mem_surveyor_country_red
									}
								}
								has_global_flag = war_in_heaven_ongoing
							}
						}
						change_variable = { which = sleeper_aggro value = 40 }
					}
				}
				10 = {#AEs?
					if = {
						limit = {
							any_country = {
								OR = {
									is_country_type = awakened_fallen_empire
									is_country_type = ascended_empire
								}
							}
						}
						change_variable = { which = sleeper_aggro value = 30 }
					}
				}
				10 = {#do any border planets belong to other empires?
					if = {
						limit = {
							any_country = {
								NOT = { is_country_type = the_sleeper_fallen }
								any_owned_planet = {
									has_planet_flag = sleeper_border_planet
								}
							}
						}
						change_variable = { which = sleeper_aggro value = 30 }
					}
				}
				10 ={#overwhelming neighbor?
					if = {
						limit = {
							any_neighbor_country = {
								OR = {
									relative_power = {
										who = this
										category = all
										value > superior
									}
									AND = {
										has_federation = yes
										federation = {
											relative_power = {
												who = PREV
												category = all
												value > superior
											}
										}
									}
								}
							}
						}
						change_variable = { which = sleeper_aggro value = 30 }
					}
				}
			}
		#check aggro and berserker gatekeeper
			country_event = { id = sleeper_berserk.1 days = 5 random = 10 }
		}
	}
}
#final warning from TN-3 (if still alive). triggered by accumulating 800 agitation points. Also adds reinforcements to drone planets
#gatekeeper
country_event = {
	id = sleeper_dormant.5
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		check_variable = { which = sleeper_aggro value > 799 }
		check_variable = { which = sleeper_aggro value < 999 }
		NOT = { has_global_flag = sleeper_warning_happened }
		NOT = {
			any_country = {
				is_sleeper = no
				any_owned_planet = {
					has_planet_flag = sleeper_core_world
				}
			}
		}
	}
	
	immediate = {
		set_global_flag = sleeper_warning_happened
		if = {
			limit = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
			every_country = {
				limit = {
					has_country_flag = sleeper_encountered
				}
				country_event = { id = sleeper_dormant.6 }
			}
		}
		every_owned_planet = {
			limit = { has_planet_flag = sleeper_border_planet }
			spawn_sleeper_shit_admiral = yes
			create_fleet = {
				effect = {
					set_owner = event_target:the_sleeper
					assign_leader = last_created_leader
					while = {
						count = 8
						sleeper_spawn_random_lowtech_ship = yes
					}
					random_list = {
						25 = {
							set_location = {
								target = prev
								distance = 30
								angle = random 
							}				
						}
						25 = {
							set_location = {
								target = prev
								distance = 45
								angle = random 
							}				
						}
						25 = {
							set_location = {
								target = prev
								distance = 60
								angle = random 
							}				
						}
						25 = {
							set_location = {
								target = prev
								distance = 75
								angle = random 
							}				
						}				
					}
				}
				settings = {
					can_upgrade = no 
					can_disband = no
					uses_naval_capacity = no
					can_change_composition = no
				}
			}
		}
	}
}
#diplo event that shows to everyone
country_event = {
	id = sleeper_dormant.6
	title = sleeper_dormant.6.title
	desc = sleeper_dormant.6.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = { is_country_type = hive_researcher_enclave }
			save_event_target_as = contact_empire
		}
	}
	option = {
		name = sleeper_dormant.6.a
	}
}
#comms in dormant state
country_event = {
	id = sleeper_dormant.7
	title = sleeper_dormant.7.title 
	desc = {
		trigger = { check_variable = { which = sleeper_aggro value < 256 } }
		text = sleeper_dormant.7.desc.good
	}
	desc = {
		trigger = { 
			check_variable = { which = sleeper_aggro value > 250 } 
			check_variable = { which = sleeper_aggro value < 501 }
		}
		text = sleeper_dormant.7.desc.stillgood
	}
	desc = {
		trigger = { 
			check_variable = { which = sleeper_aggro value > 500 } 
			check_variable = { which = sleeper_aggro value < 751 }
		}
		text = sleeper_dormant.7.desc.bad
	}
	desc = {
		trigger = {
			check_variable = { which = sleeper_aggro value > 750 } 
		}
		text = sleeper_dormant.7.desc.verybad
	}
	diplomatic = yes 
	picture_event_data = { 
		room = no_video_feed_room
	}
	
	is_triggered_only = yes
	
	trigger = {
		from = { is_country_type = the_sleeper_fallen }
		has_country_flag = sleeper_encountered
	}
	
	immediate = {
		from = { save_event_target_as = contact_empire }
	}
	
#contact hive enclave
	option = {
		name = sleeper_dormant.7.a
		trigger = {
			NOT = { has_global_flag = sleeper_berserker_happened }
		}
		country_event = { id = sleeper_dormant.15 }
	}
#goodbye
	option = {
		name = sleeper_dormant.7.b
	}
#debug: trigger the berserker awakening
	option = {
		name = sleeper_dormant.7.c
		trigger = {
			from = {
				has_country_flag = sleeper_debug_mode_active
			}
		}
		event_target:the_sleeper = {
			country_event = { id = sleeper_berserk.2 }
		}
	}
#debug: trigger the "normal" awakening
	option = {
		name = sleeper_dormant.7.e
		trigger = {
			from = {
				has_country_flag = sleeper_debug_mode_active
			}
		}
		event_target:the_sleeper = {
			country_event = { id = sleeper_awake.1 }
		}
	}
#debug: add 100 aggro points
	option = {
		name = sleeper_dormant.05.f
		is_dialog_only = yes
		response_text = sleeper_dormant.7.desc.good
		trigger = {
			from = { has_country_flag = sleeper_debug_mode_active }
		}
		random_country = {
			limit = { is_country_type = the_sleeper_fallen }
			change_variable = { which = sleeper_aggro value = 100 }
		}
	}
#debug: trigger rebellion on non hive planet
	option = {
		name = sleeper_dormant.7.g
		trigger = {
			from = {
				has_country_flag = sleeper_debug_mode_active
			}
		}
		event_target:the_sleeper = {
			country_event = { id = sleeper_berserk.25 }
		}
	}
#debug: shows aggro points
	option = {
		name = sleeper_dormant.05.h
		trigger = {
			from = { has_country_flag = sleeper_debug_mode_active }
		}
	}
}
#Hive planet gets taken by another country. triggers both in dormant and berserker. Events for planets formerly owned by others are in berserker events.
# Root = Planet
# From = Planet Owner
# FromFrom = Planet Controller (the one occupying)
planet_event = {
	id = sleeper_dormant.8
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			OR = {
				is_country_type = the_sleeper_fallen
				is_country_type = berserker_awoken_hive
			}
		}
		OR = {
			has_planet_flag = sleeper_core_world
			has_planet_flag = sleeper_border_planet
		}
		NOT = { has_planet_flag = revolt_in_progress }
	}

	immediate = {
	#happens always: give planet to winner, check berserker gatekeeper
		FROMFROM = { sleeper_opinions_for_hostilities = yes }
		set_owner = FROMFROM
		event_target:the_sleeper = { country_event = { id = sleeper_berserk.1 days = 1  } }
	#dormant core world - almost immediate berserker awakening, if it has not already happened
		if = {
			limit = {
				has_planet_flag = sleeper_core_world
				NOT = { has_global_flag = sleeper_berserker_happened }
				FROM = { is_country_type = the_sleeper_fallen }
			}
			FROM = { country_event = { id = sleeper_berserk.2 days = 90 } }
			#aggressor marker for 10 years
			FROMFROM = {
				add_modifier = {
					modifier = sleeper_aggressor_marker
					days = 3600
				}
				sleeper_senate_modfiers_add = yes
			}
		}
	#dormant border planet - 200
		else_if = {
			limit = {
				has_planet_flag = sleeper_border_planet
				FROM = { is_country_type = the_sleeper_fallen }
			}
			FROM = { change_variable = { which = sleeper_aggro value = 200 } }
			FROMFROM = {
				add_modifier = {
					modifier = sleeper_aggressor_marker
					days = 3600
				}
				sleeper_senate_modfiers_add = yes
			}
		}
	#berserker core world - countdown to breakdown
		else_if = {
			limit = {
				has_planet_flag = sleeper_core_world
				FROM = { is_country_type = berserker_awoken_hive }
			}
			FROM = { country_event = { id = sleeper_berserk.18 days = 90 } }
		}
	#taken by FE: purge all hivepops, since they will get assigned to normal jobs otherwise. Also nuke the planet so reliing on FEs to help you has a drawback.
		if = {
			limit = {
				FromFrom = {
					is_country_type = fallen_empire
				}
			}
			every_owned_pop = {
				limit = {
					species = { has_trait = trait_hive_mind }
				}
				kill_pop = yes
			}
			change_pc = pc_nuked
		}
	}

}
#aggro event for destroying sleeper fleets (triggers for all other country types)
# This = owner of fleet 1 (loser)
# From = owner of fleet 2 (winner)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = sleeper_dormant.9
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = the_sleeper_fallen
		#NOT = { has_global_flag = sleeper_berserker_happened } #event still needed for aggressor marker
	}
	
	immediate = {
		#aggresor marker for 10 years
		FROM = {
			add_modifier = {
				modifier = sleeper_aggressor_marker
				days = 3600
			}
			sleeper_senate_modfiers_add = yes
			sleeper_opinions_for_hostilities = yes
		}
		if = {
			limit = { 
				FromFrom = { fleet_power > 40000 }
			}
			change_variable = { which = sleeper_aggro value = 200 }
			event_target:the_sleeper = { country_event = { id = sleeper_berserk.1 days = 1  } }
			break = yes
		}
		else_if = {
			limit = { 
				FromFrom = { fleet_power > 800 }
			}
			change_variable = { which = sleeper_aggro value = 40 }
			break = yes
		}
		else = {
			change_variable = { which = sleeper_aggro value = 10 }
		}
	#gatekeeper
		event_target:the_sleeper = { country_event = { id = sleeper_berserk.1 days = 1 } } 
	}
}
#trigger event for loosing a fight with sleeper fleets
# This = owner of fleet 1 (loser)
# From = owner of fleet 2 (winner)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = sleeper_dormant.10
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { is_country_type = the_sleeper_fallen }
		NOT = { has_global_flag = sleeper_berserker_happened }
	}
	
	immediate = {
		FROM = {
			random_list = {
				25 = { 
					change_variable = { which = sleeper_aggro value = 10 }
				}
				75 = {
					change_variable = { which = sleeper_aggro value = 5 }
				}
			}
		}
		#gatekeeper
		event_target:the_sleeper = { country_event = { id = sleeper_berserk.1 days = 1 } } 
		#aggromarker disabled, since this could easily be exploited for contious rewards from the galactic community.
		#add_modifier = {
		#	modifier = sleeper_aggressor_marker
		#	days = 3600
		#}
	}
}
#Hive planet gets bombed to zero pops. triggers both in dormant and berserker. 
# This = Planet
# From = Bombarder
planet_event = {
	id = sleeper_dormant.11
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_planet_flag = sleeper_core_world
			has_planet_flag = sleeper_border_planet
		}
		OWNER = {
			OR = {
				is_country_type = the_sleeper_fallen
				is_country_type = berserker_awoken_hive
			}
		}
	}

	immediate = {
		#dormant border planet - 200
		if = {
			limit = {
				has_planet_flag = sleeper_border_planet
				OWNER = { is_country_type = the_sleeper_fallen }
			}
			OWNER = { 
				change_variable = { which = sleeper_aggro value = 200 }
			}
			#aggressor marker for 10 years
			FROM = {
				add_modifier = {
					modifier = sleeper_aggressor_marker
					days = 3600
				}
				sleeper_senate_modfiers_add = yes
			}
		}
	#dormant core world - almost immediate unconditional awakening
		else_if = {
			limit = {
				NOT = { has_global_flag = sleeper_berserker_happened }
				has_planet_flag = sleeper_core_world
				OWNER = { is_country_type = the_sleeper_fallen }
			}
			OWNER = { 
				country_event = { id = sleeper_berserk.2 days = 20 } 
			}
			#aggressor marker for 10 years
			FROM = {
				add_modifier = {
					modifier = sleeper_aggressor_marker
					days = 3600
				}
				sleeper_senate_modfiers_add = yes
			}
		}
	#berserker core world - breakdown in 90 days
		else_if = {
			limit = {
				has_planet_flag = sleeper_core_world
				OWNER = { is_country_type = berserker_awoken_hive }
			}
			OWNER = { 
				country_event = { id = sleeper_berserk.18 days = 90 }
			}
		}
	#berserker border world no special stuff
		FROM = { sleeper_opinions_for_hostilities = yes }
	#check berserker gatekeeper
		event_target:the_sleeper = { country_event = { id = sleeper_berserk.1 days = 1  } }
	}
}
#Hive planet gets decimated by any (vanilla) clossi, for dormant and berserker
#slightly higher aggro than from just taking the planet
# this/root = planet that have been fired upon
# from = fleet that fired
planet_event = {
	id = sleeper_dormant.12
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		Owner = {
			OR = {
				is_country_type = the_sleeper_fallen
				is_country_type = berserker_awoken_hive
			}
		}
		OR = {
			has_planet_flag = sleeper_core_world
			has_planet_flag = sleeper_border_planet
		}
	}

	immediate = {
	#dormant core world - almost immediate unconditional awakening
		if = {
			limit = {
				NOT = { has_global_flag = sleeper_berserker_happened }
				has_planet_flag = sleeper_core_world
				Owner = { is_country_type = the_sleeper_fallen }
			}
			Owner = { country_event = { id = sleeper_berserk.2 days = 20 } }
			#aggressor marker for 10 years
			FROM = {
				add_modifier = {
					modifier = sleeper_aggressor_marker
					days = 3600
				}
				sleeper_senate_modfiers_add = yes
			}
		}
	#dormant border planet - 180
		if = {
			limit = {
				has_planet_flag = sleeper_border_planet
				Owner = { is_country_type = the_sleeper_fallen }
			}
			Owner = { change_variable = { which = sleeper_aggro value = 180 } }
			#aggressor marker for 10 years
			FROM = {
				add_modifier = {
					modifier = sleeper_aggressor_marker
					days = 3600
				}
				sleeper_senate_modfiers_add = yes
			}
		}
	#berserker core world - countdown to breakdown
		if = {
			limit = {
				has_planet_flag = sleeper_core_world
				Owner = { is_country_type = berserker_awoken_hive }
			}
			Owner = {
				country_event = { id = sleeper_berserk.18 days = 90 }
			}
		}
	#berserker border world no special stuff
		FROM.owner = { sleeper_opinions_for_hostilities = yes }
	#check berserker gatekeeper
		event_target:the_sleeper = { country_event = { id = sleeper_berserk.1 days = 1  } }
	}
}
#event that destroys the systems starbase belonging to and the sleeping/berserker hive when it is conquered by an enemy. would get occupied otherwise, preventing invasion of planets and actually taking the system.
# This = Ship
# From = Disabler Ship
ship_event = {
	id = sleeper_dormant.13
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			OR = {
				is_country_type = the_sleeper_fallen
				is_country_type = berserker_awoken_hive
			}
		}
	}
	
	immediate = {
		fleet = { destroy_fleet = this }
	#if there are no player fleets in the system, the AI will automatically get the sleepers (border) planets, since the AI does not seem to want to invade the sleepers planets.
	#the only other solution I can think of, would be to create an actual country that declares war on the invaders once the starbase is destroyed (or maybe hostile primitives will also get invaded by ai?)
		IF = {
			limit = {
				From.owner = { is_ai = yes }
				NOT = {
					solar_system = {
						any_ship_in_system = {
							owner = {
								is_ai = no
							}
						}
					}
				}
			}
			solar_system = {
				every_planet = {
					limit = { 
						exists = owner
						has_planet_flag = sleeper_border_planet
					}
					set_owner = From.owner
				}
			}
		}
	}
}
# sleeper planet is under bombardment - 5 aggro points every 25%, only every year. 100 points for coreplanets
# This = Planet
# From = Bombarder
planet_event = {
	id = sleeper_dormant.14
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { is_country_type = the_sleeper_fallen }
		NOT = { has_global_flag = sleeper_berserker_happened }
		OR = {
			AND = {
				planet_devastation >= 25
				NOT = { has_planet_flag = bomb_25 }
			}
			AND = {
				planet_devastation >= 50
				NOT = { has_planet_flag = bomb_50 }
			}
			AND = {
				planet_devastation >= 75
				NOT = { has_planet_flag = bomb_75 }
			}
			AND = {
				planet_devastation >= 100
				NOT = { has_planet_flag = bomb_100 }
			}
		}
	}

	immediate = {
		IF = {
			LIMIT = { 
				planet_devastation >= 100
			}
			set_timed_planet_flag = { flag = bomb_100 days = 360 }
		}
		IF = {
			LIMIT = {
				planet_devastation >= 75
			}
			set_timed_planet_flag = { flag = bomb_75 days = 360 }
		}
		IF = {
			LIMIT = {
				planet_devastation >= 50
			}
			set_timed_planet_flag = { flag = bomb_50 days = 360 }
		}
		IF = {
			LIMIT = {
				planet_devastation >= 25
			}
			set_timed_planet_flag = { flag = bomb_25 days = 360 }
		}
		Owner = { 
			change_variable = { which = sleeper_aggro value = 5 } 
			if = { 
				limit = { ROOT = { has_planet_flag = sleeper_core_world } }
				change_variable = { which = sleeper_aggro value = 95 } 
			}
			country_event = { id = sleeper_berserk.1 days = 1  }
		}
	}
}

#TN-3 Comms
country_event = {
	id = sleeper_dormant.15
	title = sleeper_dormant.15.title 
	desc = {
		text = sleeper_dormant.15.desc.a
	}
	desc = {
		text = sleeper_dormant.15.desc.b
	}
	desc = {
		text = sleeper_dormant.15.desc.c
	}
	desc = {
		text = sleeper_dormant.15.desc.d
	}
	desc = {
		text = sleeper_dormant.15.desc.e
	}
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes

	immediate = {
		event_target:hive_enclave_country = {
			save_event_target_as = contact_empire
		}
	}
	
	option = {
		name = sleeper_dormant.15.a
	}
	
	option = {
		name = sleeper_dormant.15.b
		is_dialog_only = yes
		response_text = sleeper_dormant.15.b.response
	}
	
	option = {
		name = sleeper_dormant.15.c
		hidden_effect = { 
			country_event = { id = sleeper_dormant.16 }
		}
	}
	
#buy stuff
	option = {
		name = sleeper_dormant.15.e
		trigger = {
			NOT = { has_country_flag = pacifying_upgrade_bought }
			any_country = { is_country_type = the_sleeper_fallen }
		}
		allow = {
			event_target:contact_empire = {
				trust = { 
					who = root
					value >= 60
				}
			}
		}
		hidden_effect = {
			country_event = { id = sleeper_dormant.17 }
		}
	}
	
	option = {
		name = sleeper_dormant.15.g
		trigger = {
			event_target:contact_empire = {
				has_country_flag = sleeper_damage_upgrade_available
			}
			NOT = { has_modifier = sleeper_extra_damage }
		}
		allow = {
			event_target:contact_empire = {
				trust = { 
					who = root
					value >= 40
				}
			}
		}
		hidden_effect = {
			country_event = { id = sleeper_dormant.19 }
		}
	}
	
	option = {
		name = sleeper_dormant.15.h
		trigger = {
			NOT = {
				has_country_flag = sleeper_bought_map_info
			}
		}
		#allow = {
		#	event_target:contact_empire = {
		#		trust = { 
		#			who = root
		#			value >= 20
		#		}
		#	}
		#}
		hidden_effect = {
			country_event = { id = sleeper_dormant.20 }
		}
	}
	
#offer help and get missions
	option = {
		name = sleeper_dormant.15.f
		allow = {
			custom_tooltip = {
				text = sleeper_dormant.15.f.tooltip
				NOT = { has_country_flag = tony_missions_blocked_timed }
			}
		}
		hidden_effect = {
			add_random_tony_mission = yes
		}
	}
}

#The encyclopedia of the singleminded. Now with 100% less unnecessary events
country_event = {
	id = sleeper_dormant.16
	title = sleeper_dormant.16.title 
	desc = sleeper_dormant.16.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper_dormant.16.a
		is_dialog_only = yes
		response_text = sleeper_dormant.16.a.response
	}
	
	option = {
		name = sleeper_dormant.16.b
		is_dialog_only = yes
		response_text = sleeper_dormant.16.b.response
	}

	option = {
		name = sleeper_dormant.16.d
		is_dialog_only = yes
		response_text = sleeper_dormant.16.d.response
	}
	
	option = {
		name = sleeper_dormant.16.e
		is_dialog_only = yes
		response_text = sleeper_dormant.16.e.response
	}
	
	option = {
		name = sleeper_dormant.16.f
		hidden_effect = {
			country_event = { id = sleeper_dormant.15 }
		}
	}
}

#event to make the sleeper neutral. Sold by TN-3
country_event = {
	id = sleeper_dormant.17
	title = sleeper.deal.title
	desc = sleeper_dormant.17.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.deal.yes
		allow = {
			resource_stockpile_compare = { resource = energy value >= 1200 }
		}
		add_resource = { energy = -1200 }
		hidden_effect = {
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = no
				set_neutral = yes
				set_friendly = no
			}
			set_country_flag = pacifying_upgrade_bought
			set_country_flag = pacifying_upgrade_active
		}
	}
	
	option = {
		name = sleeper.deal.no
		hidden_effect = {
			country_event = { id = sleeper_dormant.15 }
		}
	}
}

#events that make the sleeper hostile again, if attacked in any way. For some reason this workaround is necessary, even if the country type is set to become hostile upon attack.
country_event = {
	id = sleeper_dormant.18
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			AND = {
				is_country_type = the_sleeper_fallen
				FROM = { has_country_flag = pacifying_upgrade_active }
			}
			AND = {
				has_country_flag = pacifying_upgrade_active
				FROM = { is_country_type = the_sleeper_fallen }
			}
		}
	}
	
	immediate = {
		IF = {
			limit = {
				FROM = {
					has_country_flag = pacifying_upgrade_active
				}
			}
			FROM = {
				set_faction_hostility = {
					target = event_target:the_sleeper
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
				remove_country_flag = pacifying_upgrade_active
			}
		}
		IF = {
			limit = {
				has_country_flag = pacifying_upgrade_active
			}
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
			remove_country_flag = pacifying_upgrade_active
		}
	}
}

#event to buy extra damage against the sleeper after it was unlocked by the special project
country_event = {
	id = sleeper_dormant.19
	title = sleeper.deal.title 
	desc = sleeper_dormant.19.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.deal.yes
		allow = {
			resource_stockpile_compare = { resource = energy value >= 2500 }
		}
		add_resource = { energy = -2500 }
		add_modifier = { 
			modifier = sleeper_extra_damage 
			days = -1
		}
	}
	
	option = {
		name = sleeper.deal.no
		hidden_effect = {
			country_event = { id = sleeper_dormant.15 }
		}
	}
}

#event to buy mapinfo about the drone planets 
country_event = {
	id = sleeper_dormant.20
	title = sleeper.deal.title 
	desc = sleeper_dormant.20.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.deal.yes
		custom_tooltip = sleeper_dormant.20.yes.tooltip
		allow = {
			resource_stockpile_compare = { resource = energy value >= 200 }
		}
		add_resource = { energy = -200 }
		hidden_effect = {
			set_country_flag = sleeper_bought_map_info
			event_target:the_sleeper = {
				every_owned_planet = {
					limit = {
						OR = {
							has_planet_flag = sleeper_border_planet
							has_planet_flag = sleeper_core_world
						}
					}
					surveyed = { 
						set_surveyed = yes 
						surveyor = ROOT
					}
				}	
			}
		}
	}
	
	option = {
		name = sleeper.deal.no
		hidden_effect = {
			country_event = { id = sleeper_dormant.15 }
		}
	}
}
# clicked on TN-3s countryflag, open comms with it.
# This = target country (player)
# From = source country
country_event = {
	id = sleeper_dormant.21
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		FROM = { is_country_type = hive_researcher_enclave }
		has_country_flag = sleeper_encountered
		NOT = { has_global_flag = sleeper_true_awakening_happened }
	}

	immediate = {
		country_event = { id = sleeper_dormant.15 }
	}
}

