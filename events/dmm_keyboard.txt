namespace = dmm_keyboard
#
country_event = {
	id = dmm_keyboard.0
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		dmm_keyboard_get_idle_country = yes
		event_target:dmm_keyboard_country = {
			dmm_keyboard_get_idle_leader = yes
			event_target:dmm_keyboard_leader = {
				save_event_target_as = dmm_keyboard_current_leader
				set_variable = {
					which = dmm_keyboard_name_length
					value = 0
				}
				set_name = ""
				remove_leader_flag = dmm_keyboard_idle
			}
			# create_leader = {
			# 	class = general
			# 	species = event_target:dmm_global_species
			# 	immortal = yes
			# 	name = ""
			# 	effect = {
			# 		save_global_event_target_as = dmm_keyboard_dummy_leader
			# 	}
			# }
			set_variable = {
				which = dmm_keyboard_spaces_amount
				value = 0
			}
		}
		country_event = {
			id = dmm_keyboard.100
		}
	}
}

#THIS = player/country pressing the button
country_event = {
	id = dmm_keyboard.100
	is_triggered_only = yes
	title = "dmm_keyboard.100.name"
	desc = "dmm_keyboard.100.desc"
	diplomatic = yes
	custom_gui = "dmm_keyboard"
	# after = {
	# 	remove_country_flag = dmm_keyboard_capslock
	# 	dmm_keyboard_clear_diacritics = yes
	# 	clear_variable = dmm_keyboard_selected_color
	# }
	option = {
		name = "dmm_keyboard_submit"
		custom_gui = "dmm_keyboard_submit"
		hidden_effect = {
			if = {
				limit = {
					event_target:dmm_keyboard_country = {
						check_variable = {
							which = dmm_keyboard_current_color
							value != 0
						}
					}
				}
				event_target:dmm_keyboard_current_leader = {
					set_name = "[dmm_keyboard_current_leader.GetName]$dmm_keyboard_selected_color_code_default$"
				}
				clear_variable = dmm_keyboard_selected_color
				event_target:dmm_keyboard_country = {
					clear_variable = dmm_keyboard_selected_color
				}
			}
			remove_country_flag = dmm_keyboard_capslock
			dmm_keyboard_clear_diacritics = yes
			event_target:dmm_keyboard_rename_target = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
				fire_on_action = {
					on_action = dmm_keyboard_rename_finished
					scopes = {
						from = root
					}
				}
			}
			event_target:dmm_keyboard_country = {
				every_owned_leader = {
					dmm_keyboard_free_leader = yes
				}
				ruler = {
					dmm_keyboard_free_leader = yes
				}
				set_country_flag = dmm_keyboard_idle_country
			}
		}
	}
	option = {
		name = "dmm_keyboard_capslock"
		custom_gui = "dmm_keyboard_capslock"
		is_dialog_only = yes
		response_text = "dmm_keyboard_capslock_response"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				if = {
					limit = {
						has_country_flag = dmm_keyboard_capslock
					}
					remove_country_flag = dmm_keyboard_capslock
				}
				else = {
					set_country_flag = dmm_keyboard_capslock
				}
			}
			if = {
				limit = {
					has_country_flag = dmm_keyboard_capslock
				}
				remove_country_flag = dmm_keyboard_capslock
			}
			else = {
				set_country_flag = dmm_keyboard_capslock
			}
			# country_event = {
			# 	id = dmm_keyboard.100
			# }
		}
	}
	option = {
		name = "dmm_keyboard_a_uppercase"
		custom_gui = "dmm_keyboard_a"
		is_dialog_only = yes
		response_text = "dmm_keyboard_a_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardA]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_b_uppercase"
		custom_gui = "dmm_keyboard_b"
		is_dialog_only = yes
		response_text = "dmm_keyboard_b_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardB]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_c_uppercase"
		custom_gui = "dmm_keyboard_c"
		is_dialog_only = yes
		response_text = "dmm_keyboard_c_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardC]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_d_uppercase"
		custom_gui = "dmm_keyboard_d"
		is_dialog_only = yes
		response_text = "dmm_keyboard_d_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardD]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_e_uppercase"
		custom_gui = "dmm_keyboard_e"
		is_dialog_only = yes
		response_text = "dmm_keyboard_e_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardE]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_f_uppercase"
		custom_gui = "dmm_keyboard_f"
		is_dialog_only = yes
		response_text = "dmm_keyboard_f_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardF]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_g_uppercase"
		custom_gui = "dmm_keyboard_g"
		is_dialog_only = yes
		response_text = "dmm_keyboard_g_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardG]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_h_uppercase"
		custom_gui = "dmm_keyboard_h"
		is_dialog_only = yes
		response_text = "dmm_keyboard_h_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardH]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_i_uppercase"
		custom_gui = "dmm_keyboard_i"
		is_dialog_only = yes
		response_text = "dmm_keyboard_i_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardI]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_j_uppercase"
		custom_gui = "dmm_keyboard_j"
		is_dialog_only = yes
		response_text = "dmm_keyboard_j_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardJ]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_k_uppercase"
		custom_gui = "dmm_keyboard_k"
		is_dialog_only = yes
		response_text = "dmm_keyboard_k_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardK]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_l_uppercase"
		custom_gui = "dmm_keyboard_l"
		is_dialog_only = yes
		response_text = "dmm_keyboard_l_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardL]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_m_uppercase"
		custom_gui = "dmm_keyboard_m"
		is_dialog_only = yes
		response_text = "dmm_keyboard_m_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardM]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_n_uppercase"
		custom_gui = "dmm_keyboard_n"
		is_dialog_only = yes
		response_text = "dmm_keyboard_n_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardN]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_o_uppercase"
		custom_gui = "dmm_keyboard_o"
		is_dialog_only = yes
		response_text = "dmm_keyboard_o_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardO]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_p_uppercase"
		custom_gui = "dmm_keyboard_p"
		is_dialog_only = yes
		response_text = "dmm_keyboard_p_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardP]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_q_uppercase"
		custom_gui = "dmm_keyboard_q"
		is_dialog_only = yes
		response_text = "dmm_keyboard_q_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardQ]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_r_uppercase"
		custom_gui = "dmm_keyboard_r"
		is_dialog_only = yes
		response_text = "dmm_keyboard_r_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardR]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_s_uppercase"
		custom_gui = "dmm_keyboard_s"
		is_dialog_only = yes
		response_text = "dmm_keyboard_s_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardS]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_t_uppercase"
		custom_gui = "dmm_keyboard_t"
		is_dialog_only = yes
		response_text = "dmm_keyboard_t_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardT]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_u_uppercase"
		custom_gui = "dmm_keyboard_u"
		is_dialog_only = yes
		response_text = "dmm_keyboard_u_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardU]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_v_uppercase"
		custom_gui = "dmm_keyboard_v"
		is_dialog_only = yes
		response_text = "dmm_keyboard_v_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardV]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_w_uppercase"
		custom_gui = "dmm_keyboard_w"
		is_dialog_only = yes
		response_text = "dmm_keyboard_w_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardW]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_x_uppercase"
		custom_gui = "dmm_keyboard_x"
		is_dialog_only = yes
		response_text = "dmm_keyboard_x_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardX]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_y_uppercase"
		custom_gui = "dmm_keyboard_y"
		is_dialog_only = yes
		response_text = "dmm_keyboard_y_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardY]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_z_uppercase"
		custom_gui = "dmm_keyboard_z"
		is_dialog_only = yes
		response_text = "dmm_keyboard_z_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardZ]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_a_shift"
		custom_gui = "dmm_keyboard_a_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_a_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardAShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_b_shift"
		custom_gui = "dmm_keyboard_b_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_b_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardBShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_c_shift"
		custom_gui = "dmm_keyboard_c_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_c_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardCShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_d_shift"
		custom_gui = "dmm_keyboard_d_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_d_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardDShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_e_shift"
		custom_gui = "dmm_keyboard_e_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_e_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardEShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_f_shift"
		custom_gui = "dmm_keyboard_f_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_f_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardFShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_g_shift"
		custom_gui = "dmm_keyboard_g_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_g_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardGShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_h_shift"
		custom_gui = "dmm_keyboard_h_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_h_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardHShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_i_shift"
		custom_gui = "dmm_keyboard_i_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_i_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardIShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_j_shift"
		custom_gui = "dmm_keyboard_j_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_j_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardJShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_k_shift"
		custom_gui = "dmm_keyboard_k_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_k_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardKShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_l_shift"
		custom_gui = "dmm_keyboard_l_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_l_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardLShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_m_shift"
		custom_gui = "dmm_keyboard_m_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_m_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardMShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_n_shift"
		custom_gui = "dmm_keyboard_n_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_n_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardNShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_o_shift"
		custom_gui = "dmm_keyboard_o_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_o_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardOShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_p_shift"
		custom_gui = "dmm_keyboard_p_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_p_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardPShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_q_shift"
		custom_gui = "dmm_keyboard_q_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_q_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardQShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_r_shift"
		custom_gui = "dmm_keyboard_r_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_r_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardRShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_s_shift"
		custom_gui = "dmm_keyboard_s_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_s_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardSShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_t_shift"
		custom_gui = "dmm_keyboard_t_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_t_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardTShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_u_shift"
		custom_gui = "dmm_keyboard_u_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_u_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardUShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_v_shift"
		custom_gui = "dmm_keyboard_v_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_v_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardVShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_w_shift"
		custom_gui = "dmm_keyboard_w_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_w_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardWShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_x_shift"
		custom_gui = "dmm_keyboard_x_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_x_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardXShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_y_shift"
		custom_gui = "dmm_keyboard_y_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_y_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardYShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_z_shift"
		custom_gui = "dmm_keyboard_z_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_z_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardZShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_1"
		custom_gui = "dmm_keyboard_1"
		is_dialog_only = yes
		response_text = "dmm_keyboard_1_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard1]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_2"
		custom_gui = "dmm_keyboard_2"
		is_dialog_only = yes
		response_text = "dmm_keyboard_2_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard2]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_3"
		custom_gui = "dmm_keyboard_3"
		is_dialog_only = yes
		response_text = "dmm_keyboard_3_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard3]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_4"
		custom_gui = "dmm_keyboard_4"
		is_dialog_only = yes
		response_text = "dmm_keyboard_4_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard4]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_5"
		custom_gui = "dmm_keyboard_5"
		is_dialog_only = yes
		response_text = "dmm_keyboard_5_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard5]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_6"
		custom_gui = "dmm_keyboard_6"
		is_dialog_only = yes
		response_text = "dmm_keyboard_6_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard6]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_7"
		custom_gui = "dmm_keyboard_7"
		is_dialog_only = yes
		response_text = "dmm_keyboard_7_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard7]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_8"
		custom_gui = "dmm_keyboard_8"
		is_dialog_only = yes
		response_text = "dmm_keyboard_8_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard8]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_9"
		custom_gui = "dmm_keyboard_9"
		is_dialog_only = yes
		response_text = "dmm_keyboard_9_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard9]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_0"
		custom_gui = "dmm_keyboard_0"
		is_dialog_only = yes
		response_text = "dmm_keyboard_0_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard0]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_kp_minus"
		custom_gui = "dmm_keyboard_kp_minus"
		is_dialog_only = yes
		response_text = "dmm_keyboard_kp_minus_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardKPMinus]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_kp_plus"
		custom_gui = "dmm_keyboard_kp_plus"
		is_dialog_only = yes
		response_text = "dmm_keyboard_kp_plus_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardKPPlus]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_1_shift"
		custom_gui = "dmm_keyboard_1_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_1_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard1Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_2_shift"
		custom_gui = "dmm_keyboard_2_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_2_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard2Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_3_shift"
		custom_gui = "dmm_keyboard_3_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_3_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard3Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_4_shift"
		custom_gui = "dmm_keyboard_4_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_4_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard4Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_5_shift"
		custom_gui = "dmm_keyboard_5_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_5_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard5Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_6_shift"
		custom_gui = "dmm_keyboard_6_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_6_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard6Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_7_shift"
		custom_gui = "dmm_keyboard_7_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_7_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard7Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_8_shift"
		custom_gui = "dmm_keyboard_8_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_8_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard8Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_9_shift"
		custom_gui = "dmm_keyboard_9_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_9_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard9Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_0_shift"
		custom_gui = "dmm_keyboard_0_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_0_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboard0Shift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_kp_minus_shift"
		custom_gui = "dmm_keyboard_kp_minus_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_kp_minus_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardKPMinusShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_kp_plus_shift"
		custom_gui = "dmm_keyboard_kp_plus_shift"
		is_dialog_only = yes
		response_text = "dmm_keyboard_kp_plus_shift_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardKPPlusShift]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_left_brace"
		custom_gui = "dmm_keyboard_left_brace"
		is_dialog_only = yes
		response_text = "dmm_keyboard_left_brace_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode]{"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_right_brace"
		custom_gui = "dmm_keyboard_right_brace"
		is_dialog_only = yes
		response_text = "dmm_keyboard_right_brace_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode]}"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_colon"
		custom_gui = "dmm_keyboard_colon"
		is_dialog_only = yes
		response_text = "dmm_keyboard_colon_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode]:"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_apostrophe"
		custom_gui = "dmm_keyboard_apostrophe"
		is_dialog_only = yes
		response_text = "dmm_keyboard_apostrophe_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode]'"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_comma"
		custom_gui = "dmm_keyboard_comma"
		is_dialog_only = yes
		response_text = "dmm_keyboard_comma_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode],"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_period"
		custom_gui = "dmm_keyboard_period"
		is_dialog_only = yes
		response_text = "dmm_keyboard_period_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode]."
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_slash"
		custom_gui = "dmm_keyboard_slash"
		is_dialog_only = yes
		response_text = "dmm_keyboard_slash_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode]/"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_space"
		custom_gui = "dmm_keyboard_space"
		is_dialog_only = yes
		response_text = "[dmm_keyboard_current_leader.GetName]"
		hidden_effect = {
			# if = {
			# 	limit = {
			# 		event_target:dmm_keyboard_country = {
			# 			check_variable = {
			# 				which = dmm_keyboard_spaces_amount
			# 				value = 0
			# 			}
			# 		}
			# 	}
			# 	# first time adding a space
			# 	event_target:dmm_keyboard_country = {
			# 		set_leader = event_target:dmm_keyboard_current_leader
			# 	}
			# }
			event_target:dmm_keyboard_country = {
				set_leader = event_target:dmm_keyboard_current_leader
			}
			event_target:dmm_keyboard_country = {
				change_variable = {
					which = dmm_keyboard_spaces_amount
					value = 1
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_backspace"
		custom_gui = "dmm_keyboard_backspace"
		is_dialog_only = yes
		response_text = "[dmm_keyboard_country.GetKeyboardCapslock][dmm_keyboard_country.ruler.GetName]"
		allow = {
			hidden_trigger = {
				OR = {
					event_target:dmm_keyboard_current_leader = {
						check_variable = {
							which = dmm_keyboard_name_length
							value > 0
						}
					}
					event_target:dmm_keyboard_country = {
						check_variable = {
							which = dmm_keyboard_spaces_amount
							value > 0
						}
					}
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					event_target:dmm_keyboard_country = {
						check_variable = {
							which = dmm_keyboard_spaces_amount
							value > 0
						}
					}
				}
				event_target:dmm_keyboard_country = {
					subtract_variable = {
						which = dmm_keyboard_spaces_amount
						value = 1
					}
				}
				if = {
					limit = {
						event_target:dmm_keyboard_country = {
							check_variable = {
								which = dmm_keyboard_spaces_amount
								value = 0
							}
						}
						event_target:dmm_keyboard_current_leader = {
							check_variable = {
								which = dmm_keyboard_name_length
								value > 0
							}
						}
					}
					# get the leader that should be ruler
					event_target:dmm_keyboard_current_leader = {
						subtract_variable = {
							which = dmm_keyboard_name_length
							value = 1
						}
						dmm_keyboard_get_previous_leader = yes
						change_variable = {
							which = dmm_keyboard_name_length
							value = 1
						}
					}
				}
			}
			else = {
				event_target:dmm_keyboard_current_leader = {
					set_name = "[dmm_keyboard_country.ruler.GetName]"
				}
				dmm_keyboard_remove_letter = yes
				if = {
					limit = {
						event_target:dmm_keyboard_country = {
							check_variable = {
								which = dmm_keyboard_spaces_amount
								value > 0
							}
						}
					}
					event_target:dmm_keyboard_country = {
						set_leader = event_target:dmm_keyboard_current_leader
					}
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
		# log = "Current = [dmm_keyboard_current_leader.GetName] - [dmm_keyboard_current_leader.dmm_keyboard_name_length]"
		# log = "Ruler = [dmm_keyboard_country.ruler.GetName] - [dmm_keyboard_country.ruler.dmm_keyboard_name_length]"
		# log = "------------------"
	}
	option = {
		name = "dmm_keyboard_acute"
		custom_gui = "dmm_keyboard_acute"
		is_dialog_only = yes
		response_text = "[dmm_keyboard_country.GetKeyboardCapslock][dmm_keyboard_current_leader.GetName]"
		hidden_effect = {
			dmm_keyboard_clear_diacritics = yes
			set_country_flag = dmm_keyboard_acute
			event_target:dmm_keyboard_country = {
				set_country_flag = dmm_keyboard_acute
			}
		}
	}
	option = {
		name = "dmm_keyboard_grave"
		custom_gui = "dmm_keyboard_grave"
		is_dialog_only = yes
		response_text = "[dmm_keyboard_country.GetKeyboardCapslock][dmm_keyboard_current_leader.GetName]"
		hidden_effect = {
			dmm_keyboard_clear_diacritics = yes
			set_country_flag = dmm_keyboard_grave
			event_target:dmm_keyboard_country = {
				set_country_flag = dmm_keyboard_grave
			}
		}
	}
	option = {
		name = "dmm_keyboard_circumflex"
		custom_gui = "dmm_keyboard_circumflex"
		is_dialog_only = yes
		response_text = "[dmm_keyboard_country.GetKeyboardCapslock][dmm_keyboard_current_leader.GetName]"
		hidden_effect = {
			dmm_keyboard_clear_diacritics = yes
			set_country_flag = dmm_keyboard_circumflex
			event_target:dmm_keyboard_country = {
				set_country_flag = dmm_keyboard_circumflex
			}
		}
	}
	option = {
		name = "dmm_keyboard_diaeresis"
		custom_gui = "dmm_keyboard_diaeresis"
		is_dialog_only = yes
		response_text = "[dmm_keyboard_country.GetKeyboardCapslock][dmm_keyboard_current_leader.GetName]"
		hidden_effect = {
			dmm_keyboard_clear_diacritics = yes
			set_country_flag = dmm_keyboard_diaeresis
			event_target:dmm_keyboard_country = {
				set_country_flag = dmm_keyboard_diaeresis
			}
		}
	}
	option = {
		name = "dmm_keyboard_tilde"
		custom_gui = "dmm_keyboard_tilde"
		is_dialog_only = yes
		response_text = "[dmm_keyboard_country.GetKeyboardCapslock][dmm_keyboard_current_leader.GetName]"
		hidden_effect = {
			dmm_keyboard_clear_diacritics = yes
			set_country_flag = dmm_keyboard_tilde
			event_target:dmm_keyboard_country = {
				set_country_flag = dmm_keyboard_tilde
			}
		}
	}
	option = {
		name = "dmm_keyboard_eszett"
		custom_gui = "dmm_keyboard_eszett"
		is_dialog_only = yes
		response_text = "dmm_keyboard_eszett_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode]ß"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_ccedilla_uppercase"
		custom_gui = "dmm_keyboard_ccedilla"
		is_dialog_only = yes
		response_text = "dmm_keyboard_ccedilla_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardCcedilla]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_ash_uppercase"
		custom_gui = "dmm_keyboard_ash"
		is_dialog_only = yes
		response_text = "dmm_keyboard_ash_response"
		hidden_effect = {
			dmm_keyboard_add_letter = yes
			event_target:dmm_keyboard_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName]"
			}
			event_target:dmm_keyboard_current_leader = {
				set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode][dmm_keyboard_country.GetKeyboardAsh]"
			}
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_spaces_amount
					value = 0
				}
				set_variable = {
					which = dmm_keyboard_current_color
					value = dmm_keyboard_selected_color
				}
			}
			dmm_keyboard_clear_diacritics = yes
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_blue"
		custom_gui = "dmm_keyboard_selected_color_blue"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 1
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 1
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_teal"
		custom_gui = "dmm_keyboard_selected_color_teal"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 2
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 2
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_green"
		custom_gui = "dmm_keyboard_selected_color_green"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 3
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 3
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_orange"
		custom_gui = "dmm_keyboard_selected_color_orange"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 4
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 4
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_brown"
		custom_gui = "dmm_keyboard_selected_color_brown"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 5
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 5
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_purple"
		custom_gui = "dmm_keyboard_selected_color_purple"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 6
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 6
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_light_red"
		custom_gui = "dmm_keyboard_selected_color_light_red"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 7
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 7
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_red"
		custom_gui = "dmm_keyboard_selected_color_red"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 8
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 8
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_dark_orange"
		custom_gui = "dmm_keyboard_selected_color_dark_orange"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 9
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 9
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_light_grey"
		custom_gui = "dmm_keyboard_selected_color_light_grey"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 10
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 10
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_white"
		custom_gui = "dmm_keyboard_selected_color_white"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 11
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 11
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_yellow"
		custom_gui = "dmm_keyboard_selected_color_yellow"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 12
				}
			}
			set_variable = {
				which = dmm_keyboard_selected_color
				value = 12
			}
		}
	}
	option = {
		name = "dmm_keyboard_selected_color_default"
		custom_gui = "dmm_keyboard_selected_color_default"
		is_dialog_only = yes
		response_text = "dmm_keyboard.100.desc"
		hidden_effect = {
			event_target:dmm_keyboard_country = {
				set_variable = {
					which = dmm_keyboard_selected_color
					value = 0
				}
			}
			if = {
				limit = {
					is_variable_set = dmm_keyboard_selected_color
				}
				clear_variable = dmm_keyboard_selected_color
			}
		}
	}
	option = {
		name = "dmm_keyboard_cancel"
		custom_gui = "dmm_keyboard_cancel"
		default_hide_option = yes
		hidden_effect = {
			if = {
				limit = {
					event_target:dmm_keyboard_country = {
						check_variable = {
							which = dmm_keyboard_current_color
							value != 0
						}
					}
				}
				event_target:dmm_keyboard_current_leader = {
					# set_name = "[dmm_keyboard_current_leader.GetName][This.GetKeyboardSpace][This.GetKeyboardColorCode]§!"
					set_name = "[dmm_keyboard_current_leader.GetName]$dmm_keyboard_selected_color_code_default$"
				}
				clear_variable = dmm_keyboard_selected_color
				event_target:dmm_keyboard_country = {
					clear_variable = dmm_keyboard_selected_color
				}
			}
			remove_country_flag = dmm_keyboard_capslock
			dmm_keyboard_clear_diacritics = yes
			# event_target:dmm_keyboard_rename_target = {
			# 	set_name = "[dmm_keyboard_current_leader.GetName]"
			# 	fire_on_action = {
			# 		on_action = dmm_keyboard_rename_finished
			# 		scopes = {
			# 			from = root
			# 		}
			# 	}
			# }
			event_target:dmm_keyboard_country = {
				every_owned_leader = {
					dmm_keyboard_free_leader = yes
					if = {
						limit = {
							is_variable_set = dmm_keyboard_current_color
						}
						clear_variable = dmm_keyboard_current_color
					}
					if = {
						limit = {
							is_variable_set = dmm_keyboard_spaces_amount
						}
						clear_variable = dmm_keyboard_spaces_amount
					}
				}
				set_country_flag = dmm_keyboard_idle_country
				if = {
					limit = {
						is_variable_set = dmm_keyboard_current_color
					}
					clear_variable = dmm_keyboard_current_color
				}
				if = {
					limit = {
						is_variable_set = dmm_keyboard_selected_color
					}
					clear_variable = dmm_keyboard_selected_color
				}
				if = {
					limit = {
						is_variable_set = dmm_keyboard_spaces_amount
					}
					clear_variable = dmm_keyboard_spaces_amount
				}
			}
		}
	}
	option = {
		# hidden option, useful only for size > 0
		name = dmm.100.close
		custom_gui = "dmm_dummy_button"
		hidden_effect = {
			#discard changes
		}
	}
}
