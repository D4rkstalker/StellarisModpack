namespace = Events_GAPS_Universal_Effects

# Clear deposits after some terraforming actions
planet_event = {
	id = Events_GAPS_Universal_Effects.1
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		remove_modifier = Planet_Modifier_GAPS_Pure_Water
		remove_modifier = Planet_Modifier_GAPS_Lush_Water_World
		if = { limit = { has_planet_flag = Planet_Flag_GAPS_Void_World } remove_deposit = d_GAPS_Void_World add_deposit = d_GAPS_Void_World }
	}
}
# From = system
# FromFrom = country (new owner)
# This = country (previous owner)
# From = system
# FromFrom = country (previous owner)
# This = country (new owner)

#SEALED SYSTEM EFFECT
country_event = {
	id = Events_GAPS_Universal_Effects.22
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		random_system_planet = {
			limit = { is_primary_star = yes }
			planet_event = { id = Events_GAPS_Universal_Effects.3 days = 1 }
		}
	}
}
ship_event = {
	id = Events_GAPS_Universal_Effects.3
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		#remove_star_flag = star_flag_GAPS_sealed_system
		if = { 
			limit = { is_GAPS_Sealed_System = yes }
			solar_system = { set_star_flag = star_flag_GAPS_sealed_system }
		}
		else = {
			solar_system = { remove_star_flag = star_flag_GAPS_sealed_system }
		}
	}
}
event = {
	id = Events_GAPS_Universal_Effects.4
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		every_system = {
			limit = { is_GAPS_Sealed_System = yes NOT = { has_star_flag = star_flag_GAPS_sealed_system } }
			set_star_flag = star_flag_GAPS_sealed_system
		}
		every_system = {
			limit = { is_GAPS_Sealed_System = no has_star_flag = star_flag_GAPS_sealed_system }
			remove_star_flag = star_flag_GAPS_sealed_system
		}
	}
}
planet_event = {
	id = Events_GAPS_Universal_Effects.51
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { 
			OR = { 
				has_civic = Civic_GAPS_Wilders 
				has_civic = Civic_GAPS_Fracturing_Consciousness 
				has_civic = Civic_GAPS_Baskers 
			}
		}
	}
	immediate = {
		if = {
			limit = { owner = { has_civic = Civic_GAPS_Wilders } not = { has_deposit = d_GAPS_Wilders } }
			add_deposit = d_GAPS_Wilders
		}
		if = {
			limit = { owner = { has_civic = Civic_GAPS_Fracturing_Consciousness } not = { has_deposit = d_GAPS_Fracturing_Conciousness } }
			add_deposit = d_GAPS_Fracturing_Conciousness
		}
		if = {
			limit = { owner = { has_civic = Civic_GAPS_Baskers } not = { has_deposit = d_GAPS_Light_Level } }
			add_deposit = d_GAPS_Light_Level
		}
	}
}
# A planet has been colonized.
# Scope = Planet
planet_event = {
	id = Events_GAPS_Universal_Effects.52
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				not = { owner = { has_civic = Civic_GAPS_Wilders } }
				has_deposit = d_GAPS_Wilders
			}
			AND = {
				not = { owner = { has_civic = Civic_GAPS_Fracturing_Consciousness } }
				has_deposit = d_GAPS_Fracturing_Conciousness
			}
			AND = {
				not = { owner = { has_civic = Civic_GAPS_Baskers } }
				has_deposit = d_GAPS_Light_Level
			}
		}
	}
	immediate = {
		if = {
			limit = { not = { owner = { has_civic = Civic_GAPS_Wilders } } has_deposit = d_GAPS_Wilders }
			remove_deposit = d_GAPS_Wilders
		}
		if = {
			limit = { not = { owner = { has_civic = Civic_GAPS_Fracturing_Consciousness } } has_deposit = d_GAPS_Fracturing_Conciousness }
			remove_deposit = d_GAPS_Fracturing_Conciousness
		}
		if = {
			limit = { not = { owner = { has_civic = Civic_GAPS_Baskers } } has_deposit = d_GAPS_Light_Level }
			remove_deposit = d_GAPS_Light_Level
		}
	}
}
# Planet has been terraformed
# This = Planet
# From = Terraforming country
planet_event = {
	id = Events_GAPS_Universal_Effects.53
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				From = { has_civic = Civic_GAPS_Wilders }
				This = { not = { has_deposit = d_GAPS_Wilders } }
			}
			AND = {
				From = { has_civic = Civic_GAPS_Fracturing_Consciousness }
				This = { not = { has_deposit = d_GAPS_Fracturing_Conciousness } }
			}
			AND = {
				From = { has_civic = Civic_GAPS_Baskers }
				This = { not = { has_deposit = d_GAPS_Light_Level } }
			}
		}
	}
	immediate = {
		if = {
			limit = { From = { has_civic = Civic_GAPS_Wilders }	This = { not = { has_deposit = d_GAPS_Wilders } } }
			add_deposit = d_GAPS_Wilders
		}
		if = {
			limit = { From = { has_civic = Civic_GAPS_Fracturing_Consciousness } This = { not = { has_deposit = d_GAPS_Fracturing_Conciousness } } }
			add_deposit = d_GAPS_Fracturing_Conciousness
		}
		if = {
			limit = { From = { has_civic = Civic_GAPS_Baskers } This = { not = { has_deposit = d_GAPS_Light_Level } } }
			add_deposit = d_GAPS_Light_Level
		}
	}
}
# From = system
# FromFrom = country (previous owner)
# This = country (new owner)
planet_event = {
	id = Events_GAPS_Universal_Effects.54
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_system_planet = { has_colony = yes }
		OR = {
			This = { has_civic = Civic_GAPS_Wilders }
			FromFrom = { has_civic = Civic_GAPS_Wilders }
			This = { has_civic = Civic_GAPS_Fracturing_Consciousness }
			FromFrom = { has_civic = Civic_GAPS_Fracturing_Consciousness }
			This = { has_civic = Civic_GAPS_Baskers }
			FromFrom = { has_civic = Civic_GAPS_Baskers }
		}
	}
	immediate = {
		every_system_planet = { 
			limit = { has_colony = yes }
			remove_deposit = d_GAPS_Wilders
			remove_deposit = d_GAPS_Fracturing_Conciousness
			remove_deposit = d_GAPS_Light_Level
			if = { 
				limit = { This = { has_civic = Civic_GAPS_Wilders } }
				add_deposit = d_GAPS_Wilders
			}
			if = { 
				limit = { This = { has_civic = Civic_GAPS_Fracturing_Consciousness } }
				add_deposit = d_GAPS_Fracturing_Conciousness
			}
			if = { 
				limit = { This = { has_civic = Civic_GAPS_Baskers } }
				add_deposit = d_GAPS_Light_Level
			}
		}	
	}
}

# FIX PLANETS
country_event = {
	id = Events_GAPS_Universal_Effects.61
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = Events_GAPS_Universal_Effects.6 days = 1 }
	}
}
# FIX PLANETS
country_event = {
	id = Events_GAPS_Universal_Effects.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_planet_within_border = { 
			limit = { has_colony = yes }
			remove_deposit = d_GAPS_Wilders
			remove_deposit = d_GAPS_Fracturing_Conciousness
			remove_deposit = d_GAPS_Light_Level
		}
		#wilders
		if = { 
			limit = { owner = { has_civic = Civic_GAPS_Wilders } }
			every_planet_within_border = { 
				limit = { has_colony = yes NOT = { has_deposit = d_GAPS_Wilders } }
				add_deposit = d_GAPS_Wilders
			}
		}
		#fracturing
		if = { 
			limit = { owner = { has_civic = Civic_GAPS_Fracturing_Consciousness } }
			every_planet_within_border = { 
				limit = { has_colony = yes NOT = { has_deposit = d_GAPS_Fracturing_Conciousness } }
				add_deposit = d_GAPS_Fracturing_Conciousness
			}
		}
		#baskers
		if = { 
			limit = { owner = { has_civic = Civic_GAPS_Baskers } }
			every_planet_within_border = { 
				limit = { has_colony = yes NOT = { has_deposit = d_GAPS_Light_Level } }
				add_deposit = d_GAPS_Light_Level
			}
		}
		#VoidDwellers
			every_planet_within_border = { 
				limit = { has_colony = yes NOT = { has_deposit = d_GAPS_Void_World } has_planet_flag = Planet_Flag_GAPS_Void_World }
				add_deposit = d_GAPS_Void_World
			}
		}
	}
}

