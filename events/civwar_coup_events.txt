
###############################
### Civil Wars by MrFunEGUY ###
###############################

namespace = civcoup

country_event = { # - Disputed Heir, empire may fracture, sectors randomly chosen to rebel
	id = civcoup.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		num_sectors >= 2
		ruler = {
			has_trait = trait_disputed_heritage
		}
		NOR = {
			years_passed <= 50
			is_subject = yes
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {

		ruler = {
			save_event_target_as = disputed_heir_ruler
		}

		set_variable = { which = total_sectors value = 0 }

		every_owned_sector = {
			limit = {
				has_sector_type = normal_sector
			}
			root = { change_variable = { which = total_sectors value = 1 } }
		}

		if = {
			limit = {
				num_sectors = 2
			}
			random_owned_sector = {
				limit = {
					has_sector_type = normal_sector
	            }
	            owner = {
			        random_system_within_border = {
			            limit = {
			            	exists = sector
			                sector = {
			                	is_same_value = PREVPREVPREV
			                }
			            }
			            set_star_flag = coup_rebel_sector_counter
			        }
			    }
			}
		}
		else = {
			while = {
				count = total_sectors
				random_list = {
					55 = {
						random_owned_sector = {
							limit = {
								has_sector_type = normal_sector
				            }
				            owner = {
				            	if = {
				            		limit = {
				            			any_system_within_border = {
				            				exists = sector
							                sector = {
							                	is_same_value = PREVPREVPREV
							                }
							                has_star_flag = coup_rebel_sector_counter
				            			}
				            		}
				            	}
				            	else = {
				            		random_system_within_border = {
							            limit = {
							            	NOT = { has_star_flag = coup_rebel_sector_counter }
							            	exists = sector
							                sector = {
							                	is_same_value = PREVPREVPREV
							                }
							            }
							            set_star_flag = coup_rebel_sector_counter
							        }
				            	}
						    }
						}
					}
					45 = {
						# Sector Doesn't Rebel
					}
				}
			}
		}
	}

	after = {
		if = {
			limit = {
				any_system_within_border = {
					has_star_flag = coup_rebel_sector_counter
				}
			}
			country_event = { id = civcoup.1010 }
		}
		else = {
			country_event = { id = civcoup.1009 }
		}
	}
}

country_event = { # - No dissenting vassals (governors) or dynasty members
	id = civcoup.1009
	title = civcoup.1009.name
	desc = civcoup.1009.desc
	picture = GFX_evt_galactic_empire
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civcoup.1009.a
		hidden_effect = {
			ruler = {
				remove_trait = trait_disputed_heritage
			}
		}
	}
}

country_event = { # Empire Fractures
	id = civcoup.1010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = default
		any_system_within_border = {
			has_star_flag = coup_rebel_sector_counter
		}
	}
	
	immediate = {

		save_event_target_as = current_civwar_originator

		set_country_flag = coup_mother_country

		set_variable = { which = total_rebel_sectors value = 0 }

		every_system_within_border = {
			limit = {
				has_star_flag = coup_rebel_sector_counter
			}
			root = { change_variable = { which = total_rebel_sectors value = 1 } }
		}

		if = {
			limit = {
				has_federation = yes
			}
			every_federation_ally = {
				set_country_flag = remove_fed_civil_war
			}
		}

		# event lock all fleets to prevent exploits
		every_owned_fleet = { 
			set_event_locked = yes
		}

		while = {
			count = total_rebel_sectors
			# find and flag systems
			random_system_within_border = {
				limit = {
					has_star_flag = coup_rebel_sector_counter
				}
				sector = {
					owner = {
				        every_system_within_border = {
				            limit = {
				            	exists = sector
				                sector = {
				                	is_same_value = PREVPREVPREV
				                }
				            }
				            set_star_flag = civil_war_flip
				        }
				    }
				}
			}

			# Tag Governor if they exist
			if = {
				limit = {
					any_system_within_border = {
						has_star_flag = civil_war_flip
						sector = {
							exists = leader
						}
					}
				}
				random_system_within_border = {
					limit = {
						has_star_flag = civil_war_flip
					}
					sector = {
						leader = {
							save_event_target_as = civil_war_leader
							exile_leader_as = civil_war_leader
						}
					}
				}
			}
				
			# Set successor state species to founding empire species
			event_target:current_civwar_originator = {
				species = { save_global_event_target_as = civwar_species }
			}

			# Set independent kingdom species to rebelling governor's species
			if = {
				limit = {
					exists = event_target:civil_war_leader
				}
				event_target:civil_war_leader = {
					species = { save_global_event_target_as = civwar_species_gov }
				}
			}
			else = {
				event_target:current_civwar_originator = {
					species = { save_global_event_target_as = civwar_species_gov }
				}
			}

			if = {
				limit = {
					NOT = { has_global_flag = cultural_overhaul_active }
				}
				random_list = {
					# These countries will attempt to install their preferred successor on the throne
					# They will be in a total war against all other countries that split from the
					# empire (including the mother country) as they claim all the territory of the
					# orignal empire. These countries will be led by a member of the royal dynasty.
					# These countries will look identical to the mother country except for their
					# origin and leader.
					40 = {
						create_country = {
							name = random
							type = default
							species = event_target:civwar_species
							ignore_initial_colony_error = yes
							day_zero_contact = no
							authority = auth_imperial
							ethos = { 
								ethic = ethic_fanatic_authoritarian
								ethic = random
							}
							origin = origin_coup_successor
							civics = event_target:current_civwar_originator
							flag = event_target:current_civwar_originator
							effect = {
								copy_ethos_and_authority = root
								country_event = { id = civcoup.1015 }
							}
						}
					}
					# These countries will simply declare themselves independent kingdoms.
					# These countries will be led by the governor of the sector, if one exists.
					# If a governor does not exist, a random leader will be created.
					60 = {
						create_country = {
							name = random
							type = default
							species = event_target:civwar_species_gov
							ignore_initial_colony_error = yes
							day_zero_contact = no
							authority = auth_imperial
							ethos = { 
								ethic = ethic_fanatic_authoritarian
								ethic = random
							}
							origin = origin_coup_independent
							civics = random
							flag = random
							effect = {
								country_event = { id = civcoup.1016 }
							}
						}
					}
				}
			}
			else = {
				random_list = {
					# These countries will attempt to install their preferred successor on the throne
					# They will be in a total war against all other countries that split from the
					# empire (including the mother country) as they claim all the territory of the
					# orignal empire. These countries will be led by a member of the royal dynasty.
					# These countries will look identical to the mother country except for their
					# origin and leader.
					40 = {
						create_country = {
							name = random
							type = default
							species = event_target:civwar_species
							ignore_initial_colony_error = yes
							day_zero_contact = no
							authority = auth_imperial
							ethos = { 
								ethic = ethic_fanatic_authoritarian
								ethic = random
								ethic = random
							}
							origin = origin_coup_successor
							civics = event_target:current_civwar_originator
							flag = event_target:current_civwar_originator
							effect = {
								copy_ethos_and_authority = root
								country_event = { id = civcoup.1015 }
							}
						}
					}
					# These countries will simply declare themselves independent kingdoms.
					# These countries will be led by the governor of the sector, if one exists.
					# If a governor does not exist, a random leader will be created.
					60 = {
						create_country = {
							name = random
							type = default
							species = event_target:civwar_species_gov
							ignore_initial_colony_error = yes
							day_zero_contact = no
							authority = auth_imperial
							ethos = { 
								ethic = ethic_fanatic_authoritarian
								ethic = random
								ethic = random
							}
							origin = origin_coup_independent
							civics = random
							flag = random
							effect = {
								country_event = { id = civcoup.1016 }
							}
						}
					}
				}
			}	
		}
	}

	after = {
		# Destroy Fleet percentage from home country
		country_event = { id = civcoup.1051 }
		hidden_effect = {
			event_target:current_civwar_originator = {
				every_owned_fleet = {
					set_event_locked = no
				}
			}
		}
	}
}

country_event = { # Setup for Successor State Countries
	id = civcoup.1015
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# saving civwar and host as event targets
		save_event_target_as = current_civwar_rebels

		# setting flags
		set_country_flag = civwar_country
		set_country_flag = disputed_heir_country

		set_relation_flag = {
			who = event_target:current_civwar_originator
			flag = civwar_to_host_flag
		}

		from = {
			set_relation_flag = {
				who = root
				flag = host_to_civwar_flag
			}
		}

		# setting graphical culture
		set_graphical_culture = event_target:current_civwar_originator

		# establish comms
		every_country = {
			limit = {
				OR = {
					has_communications = event_target:current_civwar_originator
					intel_level = {
						level > low
						system = event_target:current_civwar_originator.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = civil_war_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = { who = root location = from }
		}

		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:current_civwar_originator
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:current_civwar_originator
				modifier = opinion_new_contact
			}
		}

		# flip remaining flagged planets
		while = {
			count = 100
			limit = {
				any_system = {
					has_star_flag = civil_war_flip
					exists = starbase
					starbase = {
						owner = { is_same_value = event_target:current_civwar_originator }
					}
				}
			}
			random_system = {
				limit = {
					has_star_flag = civil_war_flip
					exists = starbase
					starbase = {
						owner = { is_same_value = event_target:current_civwar_originator }
					}
				}
				starbase = { set_owner = root }
			}
		}

		event_target:current_civwar_originator = {
			every_owned_planet = {
				limit = {
					solar_system = {
						has_star_flag = civil_war_flip
					}
				}

				# flip military stations
				solar_system = {
					every_fleet_in_system = {
						limit = {
							exists = owner
							owner = { is_same_value = event_target:current_civwar_originator }
							any_owned_ship = { is_ship_class = shipclass_military_station }
						}
						set_owner = root
					}
				}
				set_owner = root
				set_controller = root
			}
		}

		every_system_within_border = {
			limit = {
				has_star_flag = civil_war_flip
			}
			remove_star_flag = civil_war_flip
		}

		# Get population
		set_variable = { which = total_pops value = 0 }
		every_owned_pop = {
			PREV = { change_variable = { which = total_pops value = 1 } }
			set_pop_flag = rebel_pop
		}

		# get host's technologies
		copy_techs_from = {
			target = event_target:current_civwar_originator
			except = {
				# Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}

		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:current_civwar_originator
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}

		# create fleets and give resources, destroy home country fleets
		event_target:current_civwar_originator = {
			country_event = { id = civcoup.1050 }
		}
		add_100_unity_per_year_passed = yes # scripted effect

		#science
		create_fleet = {
			effect = {
				set_owner = root

				create_ship = {
					name = random
					random_existing_design = science
				}

				set_fleet_stance = evasive				
				set_location = root.capital_scope
				
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = event_target:civwar_species
					}
				}
				set_leader = last_created_leader
			}			
		}
			
		#constructor
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				
				set_fleet_stance = evasive
				set_location = root.capital_scope
			}
		}

		every_owned_fleet = {
			#limit = { event_locked = yes }
			set_event_locked = no
		}

		# Make Dynasty Member Leader
		country_event = { id = civcoup.1040 }
	}

	after = {
		# To fix naming issues. This line is necessary.
		set_name = event_target:current_civwar_originator

		add_intel = {
			who = event_target:current_civwar_originator
			amount = 70
		}

		# create armies
		random_owned_planet = {
			limit = {
				is_capital = yes
			}
			save_event_target_as = civil_war_capital
			planet_event = { id = civplan.3001 }
		}

		every_owned_planet = {
			limit = {
				is_capital = no
			}
			planet_event = { id = civplan.3002 }
		}

		event_target:current_civwar_originator = {
			add_intel = {
				who = root
				amount = 70
			}
		}
	}
}

country_event = { # Setup for Independent Kingdoms
	id = civcoup.1016
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# saving civwar and host as event targets
		save_event_target_as = current_civwar_rebels

		# setting flags
		set_country_flag = civwar_country
		set_country_flag = disputed_heir_country

		set_relation_flag = {
			who = event_target:current_civwar_originator
			flag = civwar_to_host_flag
		}

		from = {
			set_relation_flag = {
				who = root
				flag = host_to_civwar_flag
			}
		}

		# setting graphical culture
		set_graphical_culture = event_target:current_civwar_originator

		# establish comms
		every_country = {
			limit = {
				OR = {
					has_communications = event_target:current_civwar_originator
					intel_level = {
						level > low
						system = event_target:current_civwar_originator.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = civil_war_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = { who = root location = from }
		}

		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:current_civwar_originator
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:current_civwar_originator
				modifier = opinion_new_contact
			}
		}

		# flip remaining flagged planets
		while = {
			count = 100
			limit = {
				any_system = {
					has_star_flag = civil_war_flip
					exists = starbase
					starbase = {
						owner = { is_same_value = event_target:current_civwar_originator }
					}
				}
			}
			random_system = {
				limit = {
					has_star_flag = civil_war_flip
					exists = starbase
					starbase = {
						owner = { is_same_value = event_target:current_civwar_originator }
					}
				}
				starbase = { set_owner = root }
			}
		}

		event_target:current_civwar_originator = {
			every_owned_planet = {
				limit = {
					solar_system = {
						has_star_flag = civil_war_flip
					}
				}

				# flip military stations
				solar_system = {
					every_fleet_in_system = {
						limit = {
							exists = owner
							owner = { is_same_value = event_target:current_civwar_originator }
							any_owned_ship = { is_ship_class = shipclass_military_station }
						}
						set_owner = root
					}
				}
				set_owner = root
				set_controller = root
			}
		}

		every_system_within_border = {
			limit = {
				has_star_flag = civil_war_flip
			}
			remove_star_flag = civil_war_flip
		}


		# Get population
		set_variable = { which = total_pops value = 0 }
		every_owned_pop = {
			PREV = { change_variable = { which = total_pops value = 1 } }
			set_pop_flag = rebel_pop
		}

		# get host's technologies
		copy_techs_from = {
			target = event_target:current_civwar_originator
			except = {
				# Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}

		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:current_civwar_originator
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}

		# create fleets and give resources, destroy home country fleets
		event_target:current_civwar_originator = {
			country_event = { id = civcoup.1050 }
		}
		add_100_unity_per_year_passed = yes # scripted effect

		#science
		create_fleet = {
			effect = {
				set_owner = root

				create_ship = {
					name = random
					random_existing_design = science
				}

				set_fleet_stance = evasive				
				set_location = root.capital_scope
				
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = event_target:civwar_species
					}
				}
				set_leader = last_created_leader
			}			
		}
			
		#constructor
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				
				set_fleet_stance = evasive
				set_location = root.capital_scope
			}
		}

		every_owned_fleet = {
			#limit = { event_locked = yes }
			set_event_locked = no
		}

		# Make Governor Leader if they exist
		if = {
			limit = {
				exists = event_target:civil_war_leader
			}
			country_event = { id = civwar.1040 }
		}
	}

	after = {
		# To fix naming issues. This line is necessary.
		set_name = random

		add_intel = {
			who = event_target:current_civwar_originator
			amount = 70
		}

		# create armies
		random_owned_planet = {
			limit = {
				is_capital = yes
			}
			save_event_target_as = civil_war_capital
			planet_event = { id = civplan.3001 }
		}

		every_owned_planet = {
			limit = {
				is_capital = no
			}
			planet_event = { id = civplan.3002 }
		}

		event_target:current_civwar_originator = {
			add_intel = {
				who = root
				amount = 70
			}

			# Declare War
			# country_event = { id = civwar.1030 }
		}
	}
}

country_event = { # Dynasty Member becomes rebellion country leader
	id = civcoup.1040
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		ruler = {
			set_name = append_dynasty_name
		}
	}
}

# Create Fleets and give resources
country_event = {
	id = civcoup.1050
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		# Count total pops in each country
		set_variable = { which = total_pops value = 0 }
		every_owned_pop = {
			PREV = { change_variable = { which = total_pops value = 1 } }
		}

		set_variable = {
			which = total_pops_1
			value = {
				scope = from
				variable = total_pops
			}
		}
		change_variable = {
			which = total_pops
			value = total_pops_1
		}
		divide_variable = {
			which = total_pops_1
			value = total_pops
		}
		
		
		if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.1
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.01
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.02
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.03
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.04
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.05
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.06
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.07
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.08
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.09
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.1
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.15
			}
			from = {
				add_resource = {
					energy = 3000
					minerals = 3000
					influence = 500
					alloys = 3000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.1
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.2
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.015
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.03
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.045
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.06
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.075
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.09
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.105
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.12
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.135
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.15
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.2
			}
			from = {
				add_resource = {
					energy = 4000
					minerals = 4000
					influence = 500
					alloys = 4000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.2
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.3
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.025
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.05
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.075
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.1
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.125
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.15
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.175
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.2
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.225
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.25
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.3
			}
			from = {
				add_resource = {
					energy = 5000
					minerals = 5000
					influence = 500
					alloys = 5000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.3
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.4
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.035
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.07
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.105
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.14
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.175
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.21
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.245
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.28
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.315
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.35
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.4
			}
			from = {
				add_resource = {
					energy = 6000
					minerals = 6000
					influence = 500
					alloys = 6000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.4
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.5
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.045
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.09
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.135
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.18
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.225
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.27
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.315
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.36
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.405
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.45
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.50
			}
			from = {
				add_resource = {
					energy = 7000
					minerals = 7000
					influence = 500
					alloys = 7000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.5
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.6
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.055
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.11
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.165
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.22
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.275
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.33
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.385
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.44
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.495
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.55
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.60
			}
			from = {
				add_resource = {
					energy = 8000
					minerals = 8000
					influence = 500
					alloys = 8000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.6
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.7
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.065
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.13
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.195
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.26
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.325
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.39
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.455
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.52
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.585
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.65
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.70
			}
			from = {
				add_resource = {
					energy = 9000
					minerals = 9000
					influence = 500
					alloys = 9000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.7
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.8
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.075
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.15
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.225
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.3
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.375
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.45
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.525
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.6
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.675
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.75
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.8
			}
			from = {
				add_resource = {
					energy = 10000
					minerals = 10000
					influence = 500
					alloys = 10000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.8
				}
				check_variable = {
					which = "total_pops_1"
					value < 0.9
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.085
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.17
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.255
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.34
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.425
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.51
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.595
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.68
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.765
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.85
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.90
			}
			from = {
				add_resource = {
					energy = 11000
					minerals = 11000
					influence = 500
					alloys = 11000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_pops_1"
					value >= 0.9
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.1
				}
				create_fleet_from_naval_cap = 0.09
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.1
						used_naval_capacity_percent < 0.2
					}
				}
				create_fleet_from_naval_cap = 0.18
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.2
						used_naval_capacity_percent < 0.3
					}
				}
				create_fleet_from_naval_cap = 0.27
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.3
						used_naval_capacity_percent < 0.4
					}
				}
				create_fleet_from_naval_cap = 0.36
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.4
						used_naval_capacity_percent < 0.5
					}
				}
				create_fleet_from_naval_cap = 0.45
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.5
						used_naval_capacity_percent < 0.6
					}
				}
				create_fleet_from_naval_cap = 0.54
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.6
						used_naval_capacity_percent < 0.7
					}
				}
				create_fleet_from_naval_cap = 0.63
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.7
						used_naval_capacity_percent < 0.8
					}
				}
				create_fleet_from_naval_cap = 0.72
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.8
						used_naval_capacity_percent < 0.9
					}
				}
				create_fleet_from_naval_cap = 0.81
			}
			else_if = {
				limit = {
					AND = {
						used_naval_capacity_percent >= 0.9
						used_naval_capacity_percent <= 1
					}
				}
				create_fleet_from_naval_cap = 0.9
			}
			else_if = {
				limit = {
					used_naval_capacity_percent > 1
				}
				create_fleet_from_naval_cap = 0.95
			}
			from = {
				add_resource = {
					energy = 12000
					minerals = 12000
					influence = 500
					alloys = 12000
				}
			}
		}

		set_variable = { which = total_pops value = 0 }
		every_owned_pop = {
			PREV = { change_variable = { which = total_pops value = 1 } }
		}

		from = {
			random_owned_planet = {
				last_created_fleet = {
					set_owner = prev.owner
					set_location = prev
				}
			}
		}
	}
}

#####

# Destroy Fleets
country_event = {
	id = civcoup.1051
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Count total pops all rebelling countries 
		set_variable = { which = total_rebel_pops value = 0 }
		every_galaxy_pop = {
			limit = {
				has_pop_flag = rebel_pop
			}
			remove_pop_flag = rebel_pop
			PREV = { change_variable = { which = total_rebel_pops value = 1 } }
		}
		change_variable = {
			which = total_pops
			value = total_rebel_pops
		}
		divide_variable = {
			which = total_rebel_pops
			value = total_pops
		}

		if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.1
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.1
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.2
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 15 } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.2
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.3
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 1 } }
				}
				divide_variable = { which = ship_count value = 4 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.3
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.4
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 35 } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.4
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.5
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 45 } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.5
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.6
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 55 } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.6
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.7
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 65 } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.7
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.8
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 75 } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.8
				}
				check_variable = {
					which = "total_rebel_pops"
					value < 0.9
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 85 } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = "total_rebel_pops"
					value >= 0.9
				}
			}
			every_owned_fleet = {
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = 9 } }
				}
				divide_variable = { which = ship_count value = 10 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = { is_ship_class = shipclass_military }
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}

		set_variable = { which = total_pops value = 0 }
		every_owned_pop = {
			PREV = { change_variable = { which = total_pops value = 1 } }
		}
	}

	after = {
		country_event = { id = civcoup.1060 }
	}
}

#####

# Save rebels as event targets and declare war on each other
# Assumes a max of 10 rebelling sectors at present.
# 20 or 30 is probably the most needed. Will want to add in the future.
country_event = {
	id = civcoup.1060
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = total_rebel_countries value = 0 }

		# Count how many valid Subject States there are
		every_country = {
			limit = {
				has_country_flag = disputed_heir_country
			}
			root = { change_variable = { which = total_rebel_countries value = 1 } }
		}

		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 1 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_1
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 2 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_2
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 3 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_3
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 4 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_4
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 5 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_5
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 6 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_6
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 7 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_7
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 8 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_8
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 9 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_9
			}
		}
		if = {
			limit = { check_variable = { which = total_rebel_countries value >= 10 } }
			random_country = {
				limit = { has_country_flag = disputed_heir_country }
				remove_country_flag = disputed_heir_country
				save_event_target_as = disputed_heir_country_10
			}
		}

		if = {
			limit = {
				exists = event_target:disputed_heir_country_1
				event_target:disputed_heir_country_1 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_1 = {
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
					exists = event_target:disputed_heir_country_2
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_3
					exists = event_target:disputed_heir_country_4
					exists = event_target:disputed_heir_country_5
					exists = event_target:disputed_heir_country_6
					exists = event_target:disputed_heir_country_7
					exists = event_target:disputed_heir_country_8
					exists = event_target:disputed_heir_country_9
					exists = event_target:disputed_heir_country_10
				}
				event_target:disputed_heir_country_2 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_2 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
				exists = event_target:disputed_heir_country_3
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_2
					exists = event_target:disputed_heir_country_4
					exists = event_target:disputed_heir_country_5
					exists = event_target:disputed_heir_country_6
					exists = event_target:disputed_heir_country_7
					exists = event_target:disputed_heir_country_8
					exists = event_target:disputed_heir_country_9
					exists = event_target:disputed_heir_country_10
				}
				event_target:disputed_heir_country_3 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_3 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
				exists = event_target:disputed_heir_country_4
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_2
					exists = event_target:disputed_heir_country_3
					exists = event_target:disputed_heir_country_5
					exists = event_target:disputed_heir_country_6
					exists = event_target:disputed_heir_country_7
					exists = event_target:disputed_heir_country_8
					exists = event_target:disputed_heir_country_9
					exists = event_target:disputed_heir_country_10
				}
				event_target:disputed_heir_country_4 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_4 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
				exists = event_target:disputed_heir_country_5
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_2
					exists = event_target:disputed_heir_country_3
					exists = event_target:disputed_heir_country_4
					exists = event_target:disputed_heir_country_6
					exists = event_target:disputed_heir_country_7
					exists = event_target:disputed_heir_country_8
					exists = event_target:disputed_heir_country_9
					exists = event_target:disputed_heir_country_10
				}
				event_target:disputed_heir_country_5 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_5 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
				exists = event_target:disputed_heir_country_6
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_2
					exists = event_target:disputed_heir_country_3
					exists = event_target:disputed_heir_country_4
					exists = event_target:disputed_heir_country_5
					exists = event_target:disputed_heir_country_7
					exists = event_target:disputed_heir_country_8
					exists = event_target:disputed_heir_country_9
					exists = event_target:disputed_heir_country_10
				}
				event_target:disputed_heir_country_6 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_6 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
				exists = event_target:disputed_heir_country_7
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_2
					exists = event_target:disputed_heir_country_3
					exists = event_target:disputed_heir_country_4
					exists = event_target:disputed_heir_country_5
					exists = event_target:disputed_heir_country_6
					exists = event_target:disputed_heir_country_8
					exists = event_target:disputed_heir_country_9
					exists = event_target:disputed_heir_country_10
				}
				event_target:disputed_heir_country_7 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_7 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
				exists = event_target:disputed_heir_country_8
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_2
					exists = event_target:disputed_heir_country_3
					exists = event_target:disputed_heir_country_4
					exists = event_target:disputed_heir_country_5
					exists = event_target:disputed_heir_country_6
					exists = event_target:disputed_heir_country_7
					exists = event_target:disputed_heir_country_9
					exists = event_target:disputed_heir_country_10
				}
				event_target:disputed_heir_country_8 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_8 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
				exists = event_target:disputed_heir_country_9
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_2
					exists = event_target:disputed_heir_country_3
					exists = event_target:disputed_heir_country_4
					exists = event_target:disputed_heir_country_5
					exists = event_target:disputed_heir_country_6
					exists = event_target:disputed_heir_country_7
					exists = event_target:disputed_heir_country_8
					exists = event_target:disputed_heir_country_10
				}
				event_target:disputed_heir_country_9 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_9 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_10
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
		if = {
			limit = {
				exists = event_target:disputed_heir_country_10
				OR = {
					exists = event_target:disputed_heir_country_1
					exists = event_target:disputed_heir_country_2
					exists = event_target:disputed_heir_country_3
					exists = event_target:disputed_heir_country_4
					exists = event_target:disputed_heir_country_5
					exists = event_target:disputed_heir_country_6
					exists = event_target:disputed_heir_country_7
					exists = event_target:disputed_heir_country_8
					exists = event_target:disputed_heir_country_9
				}
				event_target:disputed_heir_country_10 = {
					has_origin = origin_coup_successor
				}
			}
			event_target:disputed_heir_country_10 = {
				declare_war = {
					target = event_target:disputed_heir_country_1
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_2
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_3
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_4
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_5
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_6
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_7
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_8
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:disputed_heir_country_9
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor"
				}
				declare_war = {
					target = event_target:current_civwar_originator
					name = "NAME_succession_conflict"
					attacker_war_goal = "wg_coup_successor_mother"
				}
			}
		}
	}

	# Remove Federation Members from War
	after = {
		country_event = { id = civcoup.1070 days = 1 }
	}
}

country_event = { # - War Communication
	id = civcoup.1070
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Create Imperial Secretary (just for RP for Comms Events)
		create_leader = {
			class = governor
			species = root
			name = random
			skill = 6
			traits = {}
		}
		last_created_leader = {
			save_event_target_as = coup_secretary
			exile_leader_as = coup_secretary
		}
		if = {
			limit = {
				check_variable = { which = total_rebel_countries value = 1 }
				is_at_war_with = event_target:disputed_heir_country_1
			}
			country_event = { id = civcom.6000 }
		}
		else_if = {
			limit = {
				check_variable = { which = total_rebel_countries value = 1 }
				NOT = { is_at_war_with = event_target:disputed_heir_country_1 }
			}
			country_event = { id = civcom.6010 }
		}
		else_if = {
			limit = {
				check_variable = { which = total_rebel_countries value > 1 }
				OR = {
					event_target:disputed_heir_country_1 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_2 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_3 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_4 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_5 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_6 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_7 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_8 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_9 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_10 = {
						has_origin = origin_coup_independent
					}
				}
				OR = {
					AND = {
						is_at_war_with = event_target:disputed_heir_country_1
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_2
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_3
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_4
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_5
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_6
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_7
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_8
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_9
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					AND = {
						is_at_war_with = event_target:disputed_heir_country_10
						NOR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
						}
					}
				}
			}
			country_event = { id = civcom.6020 }
		}
		else_if = {
			limit = {
				check_variable = { which = total_rebel_countries value > 1 }
				OR = {
					event_target:disputed_heir_country_1 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_2 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_3 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_4 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_5 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_6 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_7 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_8 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_9 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_10 = {
						has_origin = origin_coup_independent
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_1
					OR = {
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_9
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_2
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_9
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_3
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_9
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_4
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_9
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_5
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_9
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_6
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_9
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_7
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_9
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_8
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_9
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_9
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_10
					}
				}
				OR = {
					is_at_war_with = event_target:disputed_heir_country_10
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						is_at_war_with = event_target:disputed_heir_country_2
						is_at_war_with = event_target:disputed_heir_country_3
						is_at_war_with = event_target:disputed_heir_country_4
						is_at_war_with = event_target:disputed_heir_country_5
						is_at_war_with = event_target:disputed_heir_country_6
						is_at_war_with = event_target:disputed_heir_country_7
						is_at_war_with = event_target:disputed_heir_country_8
						is_at_war_with = event_target:disputed_heir_country_9
					}
				}
			}
			country_event = { id = civcom.6030 }
		}
		else_if = {
			limit = {
				check_variable = { which = total_rebel_countries value > 1 }
				NOR = {
					event_target:disputed_heir_country_1 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_2 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_3 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_4 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_5 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_6 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_7 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_8 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_9 = {
						has_origin = origin_coup_independent
					}
					event_target:disputed_heir_country_10 = {
						has_origin = origin_coup_independent
					}
				}
				OR = {
					OR = {
						is_at_war_with = event_target:disputed_heir_country_1
						OR = {
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_2
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_3
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_4
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_5
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_6
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_7
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_8
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_9
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_9
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_10
						}
					}
					OR = {
						is_at_war_with = event_target:disputed_heir_country_10
						OR = {
							is_at_war_with = event_target:disputed_heir_country_1
							is_at_war_with = event_target:disputed_heir_country_2
							is_at_war_with = event_target:disputed_heir_country_3
							is_at_war_with = event_target:disputed_heir_country_4
							is_at_war_with = event_target:disputed_heir_country_5
							is_at_war_with = event_target:disputed_heir_country_6
							is_at_war_with = event_target:disputed_heir_country_7
							is_at_war_with = event_target:disputed_heir_country_8
							is_at_war_with = event_target:disputed_heir_country_9
						}
					}
				}	
			}
			country_event = { id = civcom.6040 }
		}
		else_if = {
			limit = {
				check_variable = { which = total_rebel_countries value > 1 }
				NOR = {
					is_at_war_with = event_target:disputed_heir_country_1
					is_at_war_with = event_target:disputed_heir_country_2
					is_at_war_with = event_target:disputed_heir_country_3
					is_at_war_with = event_target:disputed_heir_country_4
					is_at_war_with = event_target:disputed_heir_country_5
					is_at_war_with = event_target:disputed_heir_country_6
					is_at_war_with = event_target:disputed_heir_country_7
					is_at_war_with = event_target:disputed_heir_country_8
					is_at_war_with = event_target:disputed_heir_country_9
					is_at_war_with = event_target:disputed_heir_country_10
				}
			}
			country_event = { id = civcom.6050 }
		}
	}
}

#####

# Disputed Heritage Event
country_event = {
	id = civcoup.5000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = heir
		num_sectors > 1
	}

	immediate = {
		random_list = {
			98 = {
				# Nothing Happens
			}
			2 = {
				heir = {
					add_trait = trait_disputed_heritage
				}
				country_event = { id = civcoup.5010 }
			}
		}
	}
}

# Disputed Heir Notification
country_event = {
	id = civcoup.5010
	title = civcoup.5010.name
	desc = civcoup.5010.desc
	picture = GFX_evt_smear_campaign
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civcoup.5010.a
	}
}