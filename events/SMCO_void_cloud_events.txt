namespace = SMCO_void_cloud

# First Contact Void Clouds (SMCO version)
country_event = {
	id = SMCO_void_cloud.1
	title = "action.10.name"
	desc = "action.15.desc"
	picture = GFX_evt_star_chart
	location = FROMFROMFROM
	trackable = yes

	is_triggered_only = yes

	trigger = {
		FROM = { is_country_type = cloud_feeding }
		is_country_type = default
		is_ai = no
		NOT = { has_country_flag = cloud_encountered }
	}

	immediate = {
		set_country_flag = cloud_encountered
		capital_scope = { save_event_target_as = pc_home }
		from = {
			enable_special_project = {
				name = "INVESTIGATE_SPACE_CLOUDS"
				location = event_target:pc_home
				owner = ROOT
			}
		}
	}

	option = {
		name = "action.10.a"
		tooltip = {
			enable_special_project = {
				name = "INVESTIGATE_SPACE_CLOUDS"
				location = event_target:pc_home
				owner = ROOT
			}
		}
	}
}

#Spawning feeding Void Clouds
event = {
	id = SMCO_void_cloud.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = {
				has_planet_class = pc_black_hole
				star = {
					OR = {
						has_modifier = SMCO_reissner_black_hole_modifier
						has_modifier = SMCO_kerr_newman_black_hole_modifier
					}
				}
				OR = {
					AND = {
						has_owner = yes
						owner = { is_ai = no }
					}
					has_owner = no
				}
				NOT = {
					any_fleet_in_system = {
						is_ship_size = space_cloud
					}
				}
			}

			save_event_target_as = SMCO_void_cloud_return
			log = "Running SMCO_void_cloud.2"

			random_system_planet = {
				limit = {
					is_star = yes
					OR = {
						has_modifier = SMCO_reissner_black_hole_modifier
						has_modifier = SMCO_kerr_newman_black_hole_modifier
					}
				}

				log = "Creating country..."
				create_cloud_feeding_country = yes

				log = "Creating fleet..."
				event_target:cloud_feeding_country = {
					create_fleet = {
						name = "NAME_Void_Cloud"
						effect = {
							set_owner = event_target:cloud_feeding_country
							create_ship = {
								name = ""
								design = "NAME_Cloud_Entity"
							}
							set_location = prevprev
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 500
							set_fleet_flag = SMCO_void_cloud_feeding
						}
					}
				}
			}

			if = {
				limit = { has_owner = yes }

				owner = {
					if = {
						limit = { NOT = { has_country_flag = cloud_encountered } }

						log = "Running SMCO_void_cloud.4"
						set_country_flag = SMCO_void_feeding_encountered
						country_event = {
							id = SMCO_void_cloud.4
							days = -1
						}
					}
					every_country = {
						if = {
							limit = {
								is_country_type = cloud
								NOT = { has_communications = prev }
							}
	
							prev = {
								set_country_flag = SMCO_void_feeding_encountered
								country_event = {
									id = SMCO_void_cloud.5
									days = -1
								}
							}
						}
						else_if = {
							limit = {
								is_country_type = cloud
								has_communications = prev
								prev = { NOT = { has_modifier = SMCO_void_cloud_camo } }
							}
	
							prev = {
								set_country_flag = SMCO_void_feeding_encountered
								country_event = {
									id = SMCO_void_cloud.3
									days = -1
								}
							}
						}
					}
				}
			}
		}
	}
}

#Void Clouds return (have encountered Void Clouds before)
country_event = {
	id = SMCO_void_cloud.3
	title = "SMCO_void_cloud.3.title"
	desc = "SMCO_void_cloud.3.desc"
	picture = GFX_evt_star_chart
	is_triggered_only = yes
	location = event_target:SMCO_void_cloud_return

	option = {
		trigger = {
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
			}
		}
		name = "SMCO_void_cloud.3.a"
	}

	option = {
		trigger = {
			NOR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
			}
		}
		name = "SMCO_void_cloud.3.b"
	}
}

#SMCO version of Void Cloud first encounter
country_event = {
	id = SMCO_void_cloud.4
	title = "SMCO_void_cloud.4.title"
	desc = "SMCO_void_cloud.4.desc"
	picture = GFX_evt_star_chart
	is_triggered_only = yes
	location = event_target:SMCO_void_cloud_return
	trackable = yes

	trigger = {
		is_country_type = default
		is_ai = no
		NOT = { has_country_flag = cloud_encountered }
	}

	immediate = {
		set_country_flag = cloud_encountered
		capital_scope = { save_event_target_as = pc_home }
		enable_special_project = {
			name = "SMCO_INVESTIGATE_SPACE_CLOUDS"
			location = event_target:pc_home
			owner = ROOT
		}
	}

	option = {
		name = "action.10.a"
		tooltip = {
			enable_special_project = {
				name = "SMCO_INVESTIGATE_SPACE_CLOUDS"
				location = event_target:pc_home
				owner = ROOT
			}
		}
	}
}

#Void Clouds return (have not yet encountered Void Clouds)
country_event = {
	id = SMCO_void_cloud.5
	title = "SMCO_void_cloud.5.title"
	desc = "SMCO_void_cloud.5.desc"
	picture = GFX_evt_star_chart
	is_triggered_only = yes
	location = event_target:SMCO_void_cloud_return

	option = {
		trigger = {
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
			}
		}
		name = "SMCO_void_cloud.3.a"
	}

	option = {
		trigger = {
			NOR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
			}
		}
		name = "SMCO_void_cloud.3.b"
	}
}

#Not used for now
country_event = {
	id = SMCO_void_cloud.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		this = {
			country_event = {
				id = SMCO_void_cloud.7
				days = 100
				random = 100
			}
		}
	}
}

#Start of SMCO Void Cloud event extension
country_event = {
	id = SMCO_void_cloud.7

	is_triggered_only = yes

	pre_triggers = {
		is_ai = no
	}

	trigger = {
		OR = {
			last_increased_tech = tech_power_plant_3
			has_technology = tech_power_plant_3
		}
		has_country_flag = SMCO_void_feeding_encountered
		has_country_flag = cloud_encountered
		NOT = { has_country_flag = SMCO_void_cloud_event_two_done }
		NOT = { has_country_flag = SMCO_void_cloud_event_two_start }
	}

	title = "SMCO_void_cloud.7.title"
	desc = "SMCO_void_cloud.7.desc"
	picture = GFX_evt_wormhole

	immediate = {
		capital_scope = { save_event_target_as = pc_home }
		set_country_flag = SMCO_void_cloud_event_two_start
	}

	option = {
		trigger = {
			OR = {
				has_modifier = SMCO_cloud_hunting_buff
				has_modifier = cloud_hunting_buff
			}
		}
		name = "SMCO_void_cloud.7.hunting.response"
		enable_special_project = {
			name = "SMCO_VOID_CLOUD_DAMAGE_PLUS"
			location = event_target:pc_home
			owner = root.owner
		}
	}

	option = {
		name = "SMCO_void_cloud.7.study.response"
		enable_special_project = {
			name = "SMCO_VOID_CLOUD_CAMO"
			location = event_target:pc_home
			owner = root.owner
		}
	}

	option = {
		name = "SMCO_void_cloud.7.nothing.response"
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
	}
}

#Better Void Cloud hunting
country_event = {
	id = SMCO_void_cloud.8
	title = "SMCO_void_cloud.8"
	desc = "SMCO_void_cloud.8.desc"
	is_triggered_only = yes
	picture = GFX_evt_fleet_evil
	show_sound = event_space_cloud
	location = from

	option = {
		name = "SMCO_void_cloud.8.hunting"
		add_modifier = {
			modifier = SMCO_void_cloud_damage_plus
			days = -1
		}
		hidden_effect = {
			if = {
				limit = { has_modifier = cloud_hunting_buff }

				remove_modifier = cloud_hunting_buff
			}
			if = {
				limit = { has_modifier = SMCO_cloud_hunting_buff }

				remove_modifier = SMCO_cloud_hunting_buff
			}
			set_country_flag = SMCO_void_cloud_event_two_done
		}
	}
}

#Every month, check and replace vanilla Void Cloud hunting with SMCO's Void Cloud hunting (same stats)
country_event = {
	id = SMCO_void_cloud.9
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_modifier = cloud_hunting_buff }

	immediate = {
		remove_modifier = cloud_hunting_buff
		add_modifier = {
			modifier = SMCO_cloud_hunting_buff
			days = -1
		}
	}
}

#Void Cloud camo
country_event = {
	id = SMCO_void_cloud.10
	title = "SMCO_void_cloud.10"
	desc = {
		trigger = {
			NOR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
			}
		}

		text = "SMCO_void_cloud.10.desc"
	}
	desc = {
		trigger = {
			OR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
			}
		}

		text = "SMCO_void_cloud.10.desc.spiritualist"
	}

	is_triggered_only = yes
	picture = GFX_evt_fleet_evil
	show_sound = event_space_cloud
	location = from
	
	immediate = {
		every_country = {
			limit = {
				OR = {
					is_country_type = cloud
					is_country_type = cloud_feeding
				}
			}
			set_faction_hostility = {
				set_hostile = no
				set_neutral = yes
				target = root
			}
		}
	}


	option = {
		trigger = {
			this = {
				NOR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_materialist
					has_ethic = ethic_fanatic_materialist
				}
			}
		}
		name = "SMCO_void_cloud.10.a"
		custom_tooltip = "SMCO_void_cloud.10.tooltip"
		hidden_effect = {
			set_country_flag = SMCO_void_cloud_camo
			add_modifier = {
				modifier = SMCO_void_cloud_camo
				days = -1
			}
			set_country_flag = SMCO_void_cloud_event_two_done
		}
	}

	option = {
		trigger = {
			this = {
				OR = {
					has_ethic = ethic_materialist
					has_ethic = ethic_fanatic_materialist
				}
			}
		}
		name = "SMCO_void_cloud.10.b"
		custom_tooltip = "SMCO_void_cloud.10.tooltip"
		hidden_effect = {
			set_country_flag = SMCO_void_cloud_camo
			add_modifier = {
				modifier = SMCO_void_cloud_camo
				days = -1
			}
			set_country_flag = SMCO_void_cloud_event_two_done
		}
	}

	option = {
		trigger = {
			this = {
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
		name = "SMCO_void_cloud.10.spiritualist"
		custom_tooltip = "SMCO_void_cloud.10.spiritualist.tooltip"
		hidden_effect = {
			set_country_flag = SMCO_void_cloud_camo
			add_modifier = {
				modifier = SMCO_void_cloud_camo
				days = -1
			}
			set_country_flag = SMCO_void_cloud_event_two_done
		}
	}
}

#Void Clouds finish feeding (not yet implemented)
event = {
	id = SMCO_void_cloud.11
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = {
				has_planet_class = pc_black_hole
				star = {
					OR = {
						has_modifier = SMCO_reissner_black_hole_modifier
						has_modifier = SMCO_kerr_newman_black_hole_modifier
					}
				}
				has_owner = yes
				owner = { is_ai = no }
			}

			random_fleet_in_system = {
				limit = { has_fleet_flag = SMCO_void_cloud_feeding }

				delete_fleet = this
			}
		}
	}
}
