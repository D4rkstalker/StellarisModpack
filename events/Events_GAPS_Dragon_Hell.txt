namespace = Events_GAPS_Dragon_Hell

country_event = {
	id = Events_GAPS_Dragon_Hell.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Dragon_Hatchers }
	}
	immediate = {
		random_planet_within_border = { 		
			limit = { has_owner = yes }
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = "NAME_GAPS_Dragon_red"
						design = "NAME_GAPS_Dragon_red"
						prefix = no
						upgradable = no
						effect = {
							set_ship_flag = GAPS_Dragon_Pls
							save_event_target_as = GAPS_Dragon_Pretty_Pls
						}
					}
					set_fleet_stance = passive
					set_location = prev
				}
			}
		}
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.3 days = 360 } }
	}
}

planet_event = {
	id = Events_GAPS_Dragon_Hell.21
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		save_event_target_as = Planet_Target_GAPS_Dragon
		SOLAR_SYSTEM = { owner = { save_event_target_as = Owner_Target_GAPS_Dragon } }
		if = { 
			limit = { 
				event_target:Owner_Target_GAPS_Dragon = { has_origin = Origin_GAPS_Dragon_Hatchers }
			}
			planet_event = { id = Events_GAPS_Dragon_Hell.22 days = 0 }
		}
	}
}
planet_event = {
	id = Events_GAPS_Dragon_Hell.22
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_fleet = { 
			name = "NAME_GAPS_Dragon_red"
			effect = {
				set_owner = event_target:Owner_Target_GAPS_Dragon
				create_ship = {
					name = random
					design = "NAME_GAPS_Dragon_red"
					prefix = no
					upgradable = no
					effect = {
						set_ship_flag = GAPS_Dragon_Pls
						save_event_target_as = GAPS_Dragon_Pretty_Pls
					}
				}
				set_location = event_target:Planet_Target_GAPS_Dragon
			}
		}
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.3 days = 360 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 11880 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 23760 } }
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.31 days = 35640 } }
		
		while = { 
			count = GAPS_Dragon_Mineral_Hoard_Level 
			event_target:GAPS_Dragon_Pretty_Pls = {
				add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Mineral_Hoard days = -1 }
			}
		}
		while = { 
			count = GAPS_Dragon_Alloy_Hoard_Level 
			event_target:GAPS_Dragon_Pretty_Pls = {
				add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Alloy_Hoard days = -1 }
			}
		}
		while = { 
			count = GAPS_Dragon_Rare_Crystal_Hoard_Level 
			event_target:GAPS_Dragon_Pretty_Pls = {
				add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Rare_Crystal_Hoard days = -1 }
			}
		}
		while = { 
			count = GAPS_Dragon_Living_Metal_Hoard_Level 
			event_target:GAPS_Dragon_Pretty_Pls = {
				add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Living_Metal_Hoard days = -1 }
			}
		}
	}
}

ship_event = {
	id = Events_GAPS_Dragon_Hell.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Dragon_Hatchers }
	}
	immediate = {
		add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Age days = -1 }
		save_event_target_as = GAPS_Dragon_Pretty_Pls
		event_target:GAPS_Dragon_Pretty_Pls = { ship_event = { id = Events_GAPS_Dragon_Hell.3 days = 360 } }
	}
}
ship_event = {
	id = Events_GAPS_Dragon_Hell.31
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_Dragon_Hatchers }
	}
	immediate = {
		add_modifier = { modifier = Ship_Modifier_GAPS_Dragon_Seeing days = -1 }
	}
}


# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
#FEEDS THE DRAGON TASTEY SHIPS
country_event = {
	id = Events_GAPS_Dragon_Hell.4
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		FromFrom = {
			owner = { has_origin = Origin_GAPS_Dragon_Hatchers }
			OR = {
				is_ship_size = gwen_tamed_space_dragon_baby
				is_ship_size = space_dragon_red
				is_ship_size = space_dragon_baby
				is_ship_size = nanite_space_dragon_baby
				is_ship_size = space_dragon_GAPS_red_hatchling
			}
		}
	}

	immediate = {
		FromFrom = {
			add_modifier = {
				modifier = Ship_Modifier_GAPS_Dragon_Eating
				days = -1
			}
		}
	}
}