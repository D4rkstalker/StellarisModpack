############################
#
# Expanded Game Start Events
#
############################

namespace = gamestartexpanded

# Start-Up Events
country_event = {
	id = gamestartexpanded.1
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	immediate = {
		# Wasteful races can get damaged ecosystem on homeworld
		every_country = {
			limit = {
				is_country_type = default
				any_owned_pop = {
					OR = {
						pop_has_trait = trait_wasteful
						pop_has_trait = trait_industrious
						pop_has_trait = trait_rapid_breeders
					}
				}
				NOR = {
					any_owned_pop = { pop_has_trait = trait_conservational }
					any_owned_pop = { pop_has_trait = trait_communal }
					any_owned_pop = { pop_has_trait = trait_agrarian }
					any_owned_pop = { pop_has_trait = trait_traditional }
					has_ethic = ethic_gestalt_consciousness
					has_valid_civic = civic_environmentalist
					has_valid_civic = civic_agrarian_idyll
					has_valid_civic = civic_agribusiness
					has_valid_civic = civic_hmo
					has_valid_civic = civic_biological_engineering
					has_valid_civic = civic_natural_hunters
					has_origin = origin_life_seeded # perfect homeworld
					has_origin = origin_post_apocalyptic # already f*cked up
					has_origin = origin_lost_colony # capital is a colony
					has_origin = origin_void_dwellers # already f*cked up
					has_origin = origin_terraformer
					has_origin = origin_delicate_ecosystem # knows how not to f*ck up
					has_origin = origin_subterranean_evolution
					has_origin = origin_exploited_homeworld # they already got what's coming to them
					has_country_flag = human_2 # capital is a colony
				}
			}
			country_event = { id = gamestartexpanded.6 days = 1 random = 10 }
		}
		# Humans get extra ships if spawned by initializer
		every_country = {
			limit = {
				is_ai = yes
				OR = {
					has_country_flag = human_1
					has_country_flag = human_2
					NOT = { any_owned_ship = { is_ship_size = corvette } }
					NOT = { any_owned_ship = { is_ship_size = constructor } }
					NOT = { any_owned_ship = { is_ship_size = science } }
				}
				is_country_type = default
			}
			add_resource = {
				minerals = 100
				energy = 100
				food = 100
				alloys = 50
				consumer_goods = 50
				influence = 50
			}
			create_fleet = {
				effect = {
					set_owner = prev

					create_ship = {
						name = random
						random_existing_design = science
					}

					set_fleet_stance = evasive				
					#set_location = prev.capital_star
					set_location = prev.capital_scope.star
					
					owner = {
						create_leader = {
							class = scientist
							species = owner_main_species
							name = random
							skill = 2
						}
					}
					set_leader = last_created_leader
				}			
			}
				
			#constructor
			create_fleet = {
				effect = {
					set_owner = prev
					
					create_ship = {
						name = random
						random_existing_design = constructor
					}
					
					set_fleet_stance = evasive
					set_location = prev.capital_star
				}
			}
			
			#military
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = prev
					
					while = {
						count = 2
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
					
					set_location = prev.capital_star
				}
			}
			create_leader = {
				class = scientist
				species = owner_main_species
				name = random
				skill = 2
			}
			create_leader = {
				class = scientist
				species = owner_main_species
				name = random
				skill = 2
			}
			create_leader = {
				class = scientist
				species = owner_main_species
				name = random
				skill = 2
			}
			create_leader = {
				class = governor
				species = owner_main_species
				name = random
				skill = 2
			}
		}
		# Start CoM event chain
		random_country = {
			limit = {
				has_country_flag = human_1
				has_valid_civic = civic_beacon_of_liberty
				has_valid_civic = civic_idealistic_foundation
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_egalitarian
			}
			country_event = { id = countryexpanded.30 days = 30 random = 30 }
		}
		if = {
			limit = { any_country = { has_country_flag = human_2 }  }
			random_country = {
				limit = { has_country_flag = human_2 }
				country_event = { id = gamestartexpanded.2 days = 5 }
			}
		}
		
		# Terraforming Candidates
		every_planet = {
			limit = {
				has_modifier = terraforming_candidate
			}
			planet_event = { id = gamestartexpanded.4 days = 5 }
		}
		# Tidally Locked
		every_planet = {
			limit = {
				solar_system = {
					OR = {
						is_red_giant = yes
						is_yellow_giant = yes
						is_red_supergiant = yes
						is_yellow_supergiant = yes
						is_blue_supergiant = yes
						is_red_supergiant = yes
						is_yellow_supergiant = yes
						is_blue_supergiant = yes
					}
				}
			}
			remove_modifier = tidal_locked
		}
		# Xenophobes less likely to be megacorps
		every_country = {
			limit = {
				is_xenophobe = yes
				has_authority = auth_corporate
				NOT = { has_valid_civic = civic_criminal_heritage }
				NOT = { has_valid_civic = civic_gospel_of_the_masses }
			}
			country_event = { id = gamestartexpanded.5 }
		}
		# No Chthonian Moons
		every_planet = {
			limit = {
				has_modifier = chthonian_planet
				is_moon = yes
			}
			planet_event = { id = gamestartexpanded.7 days = 1 }
		}
		# Random Primitive Homeworld Names
		every_planet = {
			limit = {
				NOT = { is_planet_class = pc_habitat }
				exists = owner
				owner = {
					OR = {
						is_country_type = primitive
						is_country_type = vbp_hive
						is_country_type = vbp_machine
					}
				}
			}
			planet_event = { id = gamestartexpanded.8 days =  1 }
		}
		# Random country events
		every_country = {
			limit = {
				is_country_type = default
			}
			country_event = { id = gamestartexpanded.3 days = 1 random = 10 }
		}
		# Random Anomalies
		random_planet = {
			limit = {
				solar_system = {
					NOT = { exists = space_owner }
				}
				has_anomaly  = no
				is_ocean = yes
			}
			random_list = {
				1 = { add_anomaly = { category = SEA_CAT } }
				1 = { }
			}
		}
		random_planet = {
			limit = {
				solar_system = {
					NOT = { exists = space_owner }
				}
				has_anomaly  = no
				OR = {
					is_tropical = yes
					is_continental = yes
					is_arid = yes
				}
			}
			random_list = {
				1 = { add_anomaly = { category = HAB_MAT_CAT } }
				1 = { }
			}
		}
		random_planet = {
			limit = {
				solar_system = {
					NOT = { exists = space_owner }
				}
				has_anomaly  = no
				is_desert = yes
			}
			random_list = {
				1 = { add_anomaly = { category = GEN_DESERT_CAT } }
				1 = { }
			}
		}
		random_planet = {
			limit = {
				solar_system = {
					NOT = { exists = space_owner }
				}
				has_anomaly  = no
				is_star = yes
				is_star_class = sc_black_hole
			}
			random_list = {
				1 = { add_anomaly = { category = EXPANDED_WORMHOLE_CAT } }
				1 = { }
			}
		}
		random_planet = {
			limit = {
				solar_system = {
					NOT = { exists = space_owner }
				}
				has_anomaly  = no
				habitable_planet = yes
				NOR = {
					has_modifier = lush_planet
					has_modifier = bleak_planet
				}
			}
			random_list = {
				1 = { add_anomaly = { category = EXPANDED_STRANGE_SOIL_CAT } }
				1 = { }
			}
		}
	}
}

# Commonwealth of Man sets Earth as their homeworld
country_event = {
	id = gamestartexpanded.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				OR = {
					has_country_flag = human_1
					has_country_flag = human_3
				}
			}
			capital_scope = { save_event_target_as = planet_earth }
		}
		owner_species = {
			set_species_homeworld = event_target:planet_earth
		}
	}
}

# random country events
country_event = {
	id = gamestartexpanded.3
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			92 = {
			}
			5 = {
				# Observation Post
				country_event = { id = countryexpanded.320 days = 15 random = 360 }
			}
			3 = {
				# Panspermia
				country_event = { id = countryexpanded.300 days = 30 random = 720 }
			}
		}
	}
}

planet_event = {
	id = gamestartexpanded.4
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				OR = {
					AND = {
						is_planetary_diversity_active = no
						OR = {
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
						}
					}
					has_modifier = scorched_world
					has_modifier = hot_barren_world
					has_planet_flag = hot_zone
					solar_system = {
						OR = {
							is_star_class = "sc_black_hole"
							is_star_class = "sc_neutron_star"
							is_star_class = "sc_pulsar"
							is_star_class = sc_o_super
							is_star_class = sc_o_hyper
							is_star_class = sc_b_super
							is_star_class = sc_a_super
							is_star_class = sc_f_super
							is_star_class = sc_g_super
							is_star_class = sc_k_super
							is_star_class = sc_m_super
							is_star_class = sc_m_hyper
							is_star_class = sc_nova_1
							is_star_class = sc_nova_2
							is_star_class = sc_collapsar
							is_star_class = sc_protostar
							is_star_class = sc_lbv_blue
							is_star_class = sc_lbv_green
							is_star_class = sc_lbv_red
							is_star_class = "sc_o"
							is_star_class = "sc_l"
							is_star_class = "sc_d"
							is_star_class = "sc_c_giant"
							is_star_class = "sc_s_giant"
							is_star_class = "sc_w_azure"
							is_star_class = "sc_w_red"
							is_star_class = "sc_w_green"
							is_star_class = "sc_w_purple"
							is_star_class = "sc_tt_red"
							is_star_class = "sc_tt_orange"
							is_star_class = "sc_tt_white"
							is_star_class = "sc_ae"
							is_star_class = "sc_p_purple"
							is_star_class = "sc_p_green"
							is_star_class = "sc_p_red"
							is_star_class = "sc_magnetar"
						}
					}
				}
			}
			remove_modifier = terraforming_candidate
		}
	}
}

country_event = {
	id = gamestartexpanded.5
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			40 = {
			}
			50 = {
				change_government = {
					authority = auth_oligarchic
					civics = random
				}
			}
			10 = {
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_criminal_heritage
						civic = random
					}
				}
			}
		}
	}
}

country_event = {
	id = gamestartexpanded.6
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			25 = {
				modifier = {
					factor = 0.75
					has_ethic = ethic_fanatic_spiritualist
				}
				modifier = {
					factor = 0.85
					has_ethic = ethic_spiritualist
				}
				modifier = {
					factor = 0.75
					has_ethic = ethic_fanatic_pacifist
				}
				modifier = {
					factor = 0.85
					has_ethic = ethic_pacifist
				}
				modifier = {
					factor = 1.25
					has_country_flag = human_1
				}
				modifier = {
					factor = 1.25
					OR = {
						has_authority = auth_corporate
						has_civic = civic_corporate_dominion
					}
				}
				modifier = {
					factor = 1.25
					OR = {
						has_civic = civic_mining_guilds
						has_civic = civic_mining_company
					}
				}
				modifier = {
					factor = 1.25
					any_owned_pop = {
						AND = {
							pop_has_trait = trait_wasteful
							pop_has_trait = trait_industrious
						}
					}
				}
				country_event = { id = countryexpanded.20 days = 60 random = 120 }
			}
			75 = {
				# nothing
			}
		}
	}
}

# No Chthonian Moon
planet_event = {
	id = gamestartexpanded.7
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		remove_modifier = chthonian_planet
	}
}

# Random names for primitive worlds
planet_event = {
	id = gamestartexpanded.8
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		set_name = random
	}
}

# Start Up
event = {
	id = gamestartexpanded.9
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = expanded_events_active }
	}
	
	immediate = {
		set_global_flag = expanded_events_active
		# Set if game has planetary diversity
		if = {
			limit = {
				any_system = {
					any_system_planet = {
						is_planet_class = pc_steppe
					}
				}
			}
			set_global_flag = has_planetary_diversity
		}
		# Spawn more tomb worlds on larger galaxies
		if = {
			limit = {
				has_distar = yes
				count_system = { count > 750 }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "nuked_init_01" }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "nuked_init_02" }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "nuked_init_03" }
			}
		}
		# Spawn more l-gates on large galaxies
		if = {
			limit = {
				has_distar = yes
				count_system = { count > 750 }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "distantstars_init_00" }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "distantstars_init_00" }
			}
		}
		if = {
			limit = {
				has_distar = yes
				count_system = { count > 950 }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "distantstars_init_00" }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "distantstars_init_00" }
			}
		}
		if = {
			limit = {
				has_distar = yes
				count_system = { count > 1450 }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "distantstars_init_00" }
			}
			random_system = {
				limit = {
					NOT = { exists = space_owner }
					NOT = {
						any_neighbor_system = { exists = space_owner }
					}
				}
				spawn_system = { initializer = "distantstars_init_00" }
			}
		}
		### spawn some primitives###
		random_system = {
			limit = {
				NOT = { has_star_flag = primitive_system }
				OR = {
					NOT = { exists = space_owner }
					AND = {
						exists = space_owner 
						space_owner = {
							NOT = { is_country_type = fallen_empire }
							NOT = { is_country_type = awakened_fallen_empire }
							NOT = { is_country_type = default }
						}
					}
				}
			}
			spawn_system = { initializer = "special_init_02" }
		}
		random_system = {
			limit = {
				NOT = { has_star_flag = primitive_system }
				OR = {
					NOT = { exists = space_owner }
					AND = {
						exists = space_owner 
						space_owner = {
							NOT = { is_country_type = fallen_empire }
							NOT = { is_country_type = awakened_fallen_empire }
							NOT = { is_country_type = default }
						}
					}
				}
			}
			spawn_system = { initializer = "special_init_02" }
		}
		random_system = {
			limit = {
				NOT = { has_star_flag = primitive_system }
				OR = {
					NOT = { exists = space_owner }
					AND = {
						exists = space_owner 
						space_owner = {
							NOT = { is_country_type = fallen_empire }
							NOT = { is_country_type = awakened_fallen_empire }
							NOT = { is_country_type = default }
						}
					}
				}
			}
			spawn_system = { initializer = "special_init_02" }
		}
		# primitive near player
		random_system = {
			limit = {
				exists = space_owner
				space_owner = { is_ai = no }
			}
			random_system = {
				limit = {
					distance = {
						source = prev
						use_bypasses = no
						min_jumps = 6
						max_jumps = 24
					}
					NOT = { has_star_flag = primitive_system }
					OR = {
						NOT = { exists = space_owner }
						AND = {
							exists = space_owner 
							space_owner = {
								NOT = { is_country_type = fallen_empire }
								NOT = { is_country_type = awakened_fallen_empire }
								NOT = { is_country_type = default }
							}
						}
					}
				}
				spawn_system = { initializer = "special_init_02" }
			}
		}
	}
}