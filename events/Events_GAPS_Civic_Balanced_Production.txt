namespace = Events_GAPS_Balanced_Production
#
country_event = {
	id = Events_GAPS_Balanced_Production.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_civic = Civic_GAPS_Balanced_Production
	}
	immediate = {
		set_country_flag = Country_Flag_GAPS_I_am_Balanced_Production
		country_event = { id = Events_GAPS_Balanced_Production.21 days = 3 }
	}
}
country_event = {
	id = Events_GAPS_Balanced_Production.21
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_civic = Civic_GAPS_Balanced_Production
	}
	immediate = {
		every_owned_planet = {
			limit = { is_colony = yes }
			every_deposit = {
				limit = { OR = { is_deposit_type = d_GAPS_balanced_mining is_deposit_type = d_GAPS_balanced_farming is_deposit_type = d_GAPS_balanced_generating is_deposit_type = d_GAPS_balanced_all } }
				remove_deposit = yes
			}
			while = {
				count = Planet_Variable_GAPS_Num_Mining_Districts
				add_deposit = d_GAPS_balanced_mining
			}
			while = {
				count = Planet_Variable_GAPS_Num_Farming_Districts
				add_deposit = d_GAPS_balanced_farming
			}
			while = {
				count = Planet_Variable_GAPS_Num_Generator_Districts
				add_deposit = d_GAPS_balanced_generating
			}
			every_deposit = {
				limit = { is_deposit_type = d_GAPS_no_all_three_districts }
				remove_deposit = yes
			}
			while = {
				count = Planet_Variable_GAPS_Num_All_Districts
				add_deposit = d_GAPS_no_all_three_districts
			}
		}
	}
}
#Fired whenever a new owner is set for a planet,
#be it after a war or through a trade
#From = Country scope (new owner)
#This = Planet scope
#on_planet_transfer = {
planet_event = {
	id = Events_GAPS_Balanced_Production.22
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_colony = yes
	}
	immediate = {
		every_deposit = {
			limit = { OR = { is_deposit_type = d_GAPS_balanced_mining is_deposit_type = d_GAPS_balanced_farming is_deposit_type = d_GAPS_balanced_generating is_deposit_type = d_GAPS_balanced_all } }
			remove_deposit = yes
		}
		every_deposit = {
			limit = { is_deposit_type = d_GAPS_no_all_three_districts }
			remove_deposit = yes
		}
		if = {
			limit = { from = { has_civic = Civic_GAPS_Balanced_Production } }
			while = {
				count = Planet_Variable_GAPS_Num_Mining_Districts
				add_deposit = d_GAPS_balanced_mining
			}
			while = {
				count = Planet_Variable_GAPS_Num_Farming_Districts
				add_deposit = d_GAPS_balanced_farming
			}
			while = {
				count = Planet_Variable_GAPS_Num_Generator_Districts
				add_deposit = d_GAPS_balanced_generating
			}
			while = {
				count = Planet_Variable_GAPS_Num_All_Districts
				add_deposit = d_GAPS_no_all_three_districts
			}
		}
	}
}

planet_event = {
	id = Events_GAPS_Balanced_Production.31
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { has_civic = Civic_GAPS_Balanced_Production }
	}
	immediate = {
		if = {
			limit = { OR = { last_district_changed = district_mining last_district_changed = district_hab_mining } }
			add_deposit = d_GAPS_balanced_mining
		}
		if = {
			limit = { OR = { last_district_changed = district_generator last_district_changed = district_hab_energy last_district_changed = district_rw_generator } }
			add_deposit = d_GAPS_balanced_generating
		}
		if = {
			limit = { OR = { last_district_changed = district_farming last_district_changed = district_rw_farming } }
			add_deposit = d_GAPS_balanced_farming
		}
		planet_event = { id = Events_GAPS_Balanced_Production.33 days = 1 }
	}
}
planet_event = {
	id = Events_GAPS_Balanced_Production.32
	hide_window = yes
	is_triggered_only = yes

	trigger = {
	}
	immediate = {
		if = {
			limit = { OR = { last_district_changed = district_mining last_district_changed = district_hab_mining } }
			remove_deposit = d_GAPS_balanced_mining
		}
		if = {
			limit = { OR = { last_district_changed = district_generator last_district_changed = district_hab_energy last_district_changed = district_rw_generator } }
			remove_deposit = d_GAPS_balanced_generating
		}
		if = {
			limit = { OR = { last_district_changed = district_farming last_district_changed = district_rw_farming } }
			remove_deposit = d_GAPS_balanced_farming
		}
		planet_event = { id = Events_GAPS_Balanced_Production.33 days = 1 }
	}
}
planet_event = {
	id = Events_GAPS_Balanced_Production.33
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		
	}
	immediate = {
		every_deposit = {
			limit = { is_deposit_type = d_GAPS_no_all_three_districts }
			remove_deposit = yes
		}
		while = {
			count = Planet_Variable_GAPS_Num_All_Districts
			add_deposit = d_GAPS_no_all_three_districts
		}
	}
}