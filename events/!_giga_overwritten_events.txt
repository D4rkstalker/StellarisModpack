namespace = utopia

# Dyson Sphere Frame Built Notification (HIDDEN)
country_event = {
	id = utopia.4001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			OR = {
				is_megastructure_type = dyson_sphere_1
				is_megastructure_type = dyson_sphere_1_a_star
				is_megastructure_type = dyson_sphere_1_b_star
				is_megastructure_type = dyson_sphere_1_f_star
				is_megastructure_type = dyson_sphere_1_g_star
				is_megastructure_type = dyson_sphere_1_k_star
				is_megastructure_type = dyson_sphere_1_m_giant_star
				is_megastructure_type = dyson_sphere_1_m_star
			}
		}
	}

	immediate = {
		fromfrom = { save_event_target_as = dyson_system }
		every_relation = {
			limit = {
				is_ai = no
				has_communications = root
				OR = {
					has_intel_level = {
						who = root
						category = economy
						level >= 1
					}
					has_intel_level = {
						who = root
						category = technology
						level >= 1
					}
				}
			}
			country_event = { id = utopia.4002 }
		}
		if = {
			limit = { NOT = { has_country_flag = started_first_dyson_sphere } }
			set_country_flag = started_first_dyson_sphere
		}
		else_if = {
			limit = { has_country_flag = started_first_dyson_sphere }
			set_country_flag = started_first_dyson_sphere_2
		}
	}
}

# Neighbor begins building Dyson Sphere
country_event = {
	id = utopia.4002
	title = utopia.4002.name
	desc = {
		text = "utopia.4002.desc.a"
		trigger = {
			from = {
				has_country_flag = started_first_dyson_sphere
				NOT = { has_country_flag = started_first_dyson_sphere_2 }
			}
		}
	}
	desc = {
		text = "utopia.4002.desc.b"
		trigger = { from = { has_country_flag = started_first_dyson_sphere_2 } }
	}
	picture = GFX_evt_dyson_sphere
	show_sound = event_mega_structure_other_empire_build_start
	location = event_target:dyson_system
	is_triggered_only = yes

	option = { # has built own Dyson Sphere
	name = "utopia.4002.a"
		trigger = {
			any_owned_megastructure = {
				OR = {
					is_megastructure_type = dyson_sphere_0
					is_megastructure_type = dyson_sphere_0_a_star
					is_megastructure_type = dyson_sphere_0_b_star
					is_megastructure_type = dyson_sphere_0_f_star
					is_megastructure_type = dyson_sphere_0_g_star
					is_megastructure_type = dyson_sphere_0_k_star
					is_megastructure_type = dyson_sphere_0_m_giant_star
					is_megastructure_type = dyson_sphere_0_m_star
					is_megastructure_type = dyson_sphere_1
					is_megastructure_type = dyson_sphere_1_a_star
					is_megastructure_type = dyson_sphere_1_b_star
					is_megastructure_type = dyson_sphere_1_f_star
					is_megastructure_type = dyson_sphere_1_g_star
					is_megastructure_type = dyson_sphere_1_k_star
					is_megastructure_type = dyson_sphere_1_m_giant_star
					is_megastructure_type = dyson_sphere_1_m_star
					is_megastructure_type = dyson_sphere_2
					is_megastructure_type = dyson_sphere_2_a_star
					is_megastructure_type = dyson_sphere_2_b_star
					is_megastructure_type = dyson_sphere_2_f_star
					is_megastructure_type = dyson_sphere_2_g_star
					is_megastructure_type = dyson_sphere_2_k_star
					is_megastructure_type = dyson_sphere_2_m_giant_star
					is_megastructure_type = dyson_sphere_2_m_star
					is_megastructure_type = dyson_sphere_3
					is_megastructure_type = dyson_sphere_3_a_star
					is_megastructure_type = dyson_sphere_3_b_star
					is_megastructure_type = dyson_sphere_3_f_star
					is_megastructure_type = dyson_sphere_3_g_star
					is_megastructure_type = dyson_sphere_3_k_star
					is_megastructure_type = dyson_sphere_3_m_giant_star
					is_megastructure_type = dyson_sphere_3_m_star
					is_megastructure_type = dyson_sphere_4
					is_megastructure_type = dyson_sphere_4_a_star
					is_megastructure_type = dyson_sphere_4_b_star
					is_megastructure_type = dyson_sphere_4_f_star
					is_megastructure_type = dyson_sphere_4_g_star
					is_megastructure_type = dyson_sphere_4_k_star
					is_megastructure_type = dyson_sphere_4_m_giant_star
					is_megastructure_type = dyson_sphere_4_m_star
					is_megastructure_type = dyson_sphere_5
					is_megastructure_type = dyson_sphere_5_a_star
					is_megastructure_type = dyson_sphere_5_b_star
					is_megastructure_type = dyson_sphere_5_f_star
					is_megastructure_type = dyson_sphere_5_g_star
					is_megastructure_type = dyson_sphere_5_k_star
					is_megastructure_type = dyson_sphere_5_m_giant_star
					is_megastructure_type = dyson_sphere_5_m_star
				}
			}
		}
	}

	option = { # has no Dyson Sphere
	name = "utopia.4002.b"
		trigger = {
			NOT = {
				any_owned_megastructure = {
					OR = {
						is_megastructure_type = dyson_sphere_0
						is_megastructure_type = dyson_sphere_0_a_star
						is_megastructure_type = dyson_sphere_0_b_star
						is_megastructure_type = dyson_sphere_0_f_star
						is_megastructure_type = dyson_sphere_0_g_star
						is_megastructure_type = dyson_sphere_0_k_star
						is_megastructure_type = dyson_sphere_0_m_giant_star
						is_megastructure_type = dyson_sphere_0_m_star
						is_megastructure_type = dyson_sphere_1
						is_megastructure_type = dyson_sphere_1_a_star
						is_megastructure_type = dyson_sphere_1_b_star
						is_megastructure_type = dyson_sphere_1_f_star
						is_megastructure_type = dyson_sphere_1_g_star
						is_megastructure_type = dyson_sphere_1_k_star
						is_megastructure_type = dyson_sphere_1_m_giant_star
						is_megastructure_type = dyson_sphere_1_m_star
						is_megastructure_type = dyson_sphere_2
						is_megastructure_type = dyson_sphere_2_a_star
						is_megastructure_type = dyson_sphere_2_b_star
						is_megastructure_type = dyson_sphere_2_f_star
						is_megastructure_type = dyson_sphere_2_g_star
						is_megastructure_type = dyson_sphere_2_k_star
						is_megastructure_type = dyson_sphere_2_m_giant_star
						is_megastructure_type = dyson_sphere_2_m_star
						is_megastructure_type = dyson_sphere_3
						is_megastructure_type = dyson_sphere_3_a_star
						is_megastructure_type = dyson_sphere_3_b_star
						is_megastructure_type = dyson_sphere_3_f_star
						is_megastructure_type = dyson_sphere_3_g_star
						is_megastructure_type = dyson_sphere_3_k_star
						is_megastructure_type = dyson_sphere_3_m_giant_star
						is_megastructure_type = dyson_sphere_3_m_star
						is_megastructure_type = dyson_sphere_4
						is_megastructure_type = dyson_sphere_4_a_star
						is_megastructure_type = dyson_sphere_4_b_star
						is_megastructure_type = dyson_sphere_4_f_star
						is_megastructure_type = dyson_sphere_4_g_star
						is_megastructure_type = dyson_sphere_4_k_star
						is_megastructure_type = dyson_sphere_4_m_giant_star
						is_megastructure_type = dyson_sphere_4_m_star
						is_megastructure_type = dyson_sphere_5
						is_megastructure_type = dyson_sphere_5_a_star
						is_megastructure_type = dyson_sphere_5_b_star
						is_megastructure_type = dyson_sphere_5_f_star
						is_megastructure_type = dyson_sphere_5_g_star
						is_megastructure_type = dyson_sphere_5_k_star
						is_megastructure_type = dyson_sphere_5_m_giant_star
						is_megastructure_type = dyson_sphere_5_m_star
					}
				}
			}
		}
	}
}

# Dyson Sphere Frame built
country_event = {
	id = utopia.4003
	title = "utopia.4003.name"
	desc = "utopia.4003.desc"
	picture = GFX_evt_dyson_sphere
	show_sound = event_dyson_sphere_build_upgrade_frame
	location = fromfrom
	is_triggered_only = yes

	trigger = {
		from = {
			OR = {
				is_megastructure_type = dyson_sphere_1
				is_megastructure_type = dyson_sphere_1_a_star
				is_megastructure_type = dyson_sphere_1_b_star
				is_megastructure_type = dyson_sphere_1_f_star
				is_megastructure_type = dyson_sphere_1_g_star
				is_megastructure_type = dyson_sphere_1_k_star
				is_megastructure_type = dyson_sphere_1_m_giant_star
				is_megastructure_type = dyson_sphere_1_m_star
			}
		}
	}

	option = { name = "utopia.4003.a" }
}

# Dyson Sphere partially completed
country_event = {
	id = utopia.4004
	title = "utopia.4004.name"
	desc = "utopia.4004.desc"
	picture = GFX_evt_dyson_sphere
	show_sound = event_dyson_sphere_build_upgrade_panel
	location = fromfrom
	is_triggered_only = yes

	trigger = {
		from = {
			OR = {
				is_megastructure_type = dyson_sphere_2
				is_megastructure_type = dyson_sphere_2_a_star
				is_megastructure_type = dyson_sphere_2_b_star
				is_megastructure_type = dyson_sphere_2_f_star
				is_megastructure_type = dyson_sphere_2_g_star
				is_megastructure_type = dyson_sphere_2_k_star
				is_megastructure_type = dyson_sphere_2_m_giant_star
				is_megastructure_type = dyson_sphere_2_m_star
			}
		}
	}

	option = { name = "utopia.4004.a" }
}

# Dyson Sphere completed
country_event = {
	id = utopia.4005
	title = "utopia.4005.name"
	desc = "utopia.4005.desc"
	picture = GFX_evt_dyson_sphere
	show_sound = event_dyson_sphere_build_complete
	location = fromfrom
	is_triggered_only = yes

	trigger = {
		from = {
			OR = {
				is_megastructure_type = dyson_sphere_5
				is_megastructure_type = dyson_sphere_5_a_star
				is_megastructure_type = dyson_sphere_5_b_star
				is_megastructure_type = dyson_sphere_5_f_star
				is_megastructure_type = dyson_sphere_5_g_star
				is_megastructure_type = dyson_sphere_5_k_star
				is_megastructure_type = dyson_sphere_5_m_giant_star
				is_megastructure_type = dyson_sphere_5_m_star
			}
		}
	}

	immediate = { set_country_flag = finished_dyson_sphere }
	option = { name = "utopia.4005.a" }
}

# Fix upgrade message targeting, add new intermediate dysons
country_event = {
    id = utopia.4006
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        from = {
            OR = {
                is_megastructure_type = ring_world_1
                is_megastructure_type = ring_world_3_intermediate
                is_megastructure_type = dyson_sphere_0
                is_megastructure_type = dyson_sphere_3
                is_megastructure_type = dyson_sphere_3_a_star
                is_megastructure_type = dyson_sphere_3_b_star
                is_megastructure_type = dyson_sphere_3_f_star
                is_megastructure_type = dyson_sphere_3_g_star
                is_megastructure_type = dyson_sphere_3_k_star
                is_megastructure_type = dyson_sphere_3_m_giant_star
                is_megastructure_type = dyson_sphere_3_m_star
                is_megastructure_type = dyson_sphere_4
                is_megastructure_type = dyson_sphere_4_a_star
                is_megastructure_type = dyson_sphere_4_b_star
                is_megastructure_type = dyson_sphere_4_f_star
                is_megastructure_type = dyson_sphere_4_g_star
                is_megastructure_type = dyson_sphere_4_k_star
                is_megastructure_type = dyson_sphere_4_m_giant_star
                is_megastructure_type = dyson_sphere_4_m_star
                is_megastructure_type = spy_orb_0
                is_megastructure_type = spy_orb_2
                is_megastructure_type = spy_orb_3
                is_megastructure_type = think_tank_0
                is_megastructure_type = matter_decompressor_0
                is_megastructure_type = strategic_coordination_center_0
                is_megastructure_type = mega_art_installation_0
                is_megastructure_type = interstellar_assembly_0
            }
        }
    }

    immediate = {
        create_message = {
            type = MEGASTRUCTURE_UPGRADED
            localization = MESSAGE_MEGASTRUCTURE_UPGRADED
            days = 30
            target = fromfrom # Fix vanilla, mega cannot be a valid target. 
            variable = {
                type = name
                localization = MEGASTRUCTURE
                scope = from
            }
            variable = {
                type = name
                localization = SYSTEM
                scope = fromfrom
            }
        }
    }
}

# Change blacklist in embracing the worm event
namespace = akx
planet_event = {
	id = akx.10020
	title = akx.10020.name
	desc = akx.10020.desc
	picture = GFX_evt_black_hole
	show_sound = event_activating_unknown_technology
	location = root

	is_triggered_only = yes

	pre_triggers = {
		is_ai = no
	}

	immediate = {
		solar_system = {
			every_system_planet = {
				limit = {
					NOR = {
						giga_is_gas_giant = yes
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_ringworld_habitable_damaged
						is_planet_class = pc_ringworld_tech
						is_planet_class = pc_ringworld_tech_damaged
						is_planet_class = pc_ringworld_seam
						is_planet_class = pc_ringworld_seam_damaged
						is_planet_class = pc_habitat
						is_planet_class = pc_asteroid
						is_planet_class = pc_ice_asteroid
						is_planet_class = pc_city
						is_planet_class = pc_relic
						is_star = yes
						giga_habitable_structure = yes
					}
				}
				every_owned_pop = {
					limit = {
						is_robot_pop = no
						is_sapient = yes
					}
					if = {
						limit = { NOT = { has_trait = trait_natural_physicists } }
						# remove opposite traits
						if = {
							limit = { has_trait = trait_natural_engineers }
							modify_species = {
								species = this
								remove_trait = trait_natural_engineers
							}
						}
						if = {
							limit = { has_trait = trait_natural_sociologists }
							modify_species = {
								species = this
								remove_trait = trait_natural_sociologists
							}
						}
						if = {
							limit = { has_trait = trait_nerve_stapled }
							modify_species = {
								species = this
								remove_trait = trait_nerve_stapled
							}
						}
						# add trait
						modify_species = {
							species = this
							add_trait = trait_natural_physicists
						}
					}
					if = {
						limit = { NOT = { has_trait = trait_repugnant } }
						# remove opposite traits
						if = {
							limit = { has_trait = trait_charismatic }
							modify_species = {
								species = this
								remove_trait = trait_charismatic
							}
						}
						modify_species = {
							species = this
							add_trait = trait_repugnant
						}
					}
					modify_species = {
						species = this
						ideal_planet_class = pc_nuked
					}
				}
				change_pc = pc_nuked
				set_planet_flag = nuked_planet_anomalies_disabled
				reroll_planet = yes
			}
			every_system_planet = {
				limit = { is_star = yes }
				change_pc = pc_black_hole
			}
			set_star_class = sc_black_hole
		}
		owner = { observer_event = { id = observer.71 } }
	}

	after = {
		hidden_effect = {
			owner = {
				remove_country_flag = worm_events_available
				set_country_flag = worm_awaited
				set_country_flag = worm_tomb_ending
			}
		}
	}

	option = {
		name = akx.10020.a
		owner = { end_event_chain = WORM_CHAIN_2 }
	}
}

# Change blacklist in nanite swarm event
namespace = anomaly
ship_event = {
	id = anomaly.6715
	title = "anomaly.6715.name"
	desc = "anomaly.6715.desc"
	picture = GFX_evt_gray_gooed_planet
	show_sound = event_laboratory_sound
	is_triggered_only = yes

	option = {
		name = anomaly.6715.a
		event_target:nanite_swarm_planet = {
			remove_modifier = nanite_swarm_modifier
			add_modifier = {
				modifier = tamed_nanite_swarm_modifier
				days = -1
			}
		}
		if = {
			limit = {
				owner_species = {
					OR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
						giga_has_artificial_preference_trait = yes
					}
				}
			}
			event_target:nanite_swarm_planet = {
				change_pc = pc_gaia
				every_deposit = {
					limit = { is_blocker = yes }
					clear_blocker = yes
				}
			}
		}
		else = {
			event_target:nanite_swarm_planet = {
				change_pc = root.owner_species
				every_deposit = {
					limit = { is_blocker = yes }
					clear_blocker = yes
				}
			}
		}
	}
}

# Change blacklist in relentless industrialists event
namespace = toxoids
planet_event = {
	id = toxoids.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_building = building_coordinated_fulfillment_center_1
			has_building = building_coordinated_fulfillment_center_2
		}
		NOR = {
			is_artificial = yes
			is_planet_class = pc_nuked
			is_planet_class = pc_city
			is_planet_class = pc_relic
			uses_district_set = habitat
			uses_district_set = ring_world
			uses_district_set = shattered_ring_world
			giga_habitable_structure = yes
			is_giga_maginot_world = yes
		}
		exists = owner
		owner = { is_relentless_industrialist_empire = yes }
	}

	immediate = {
		if = {
			limit = {
				owner = { has_policy_flag = relentless_industrialists_cleanup }
				check_variable = {
					which = relentless_industrialists_var
					value > 0
				}
			}
			subtract_variable = {
				which = relentless_industrialists_var
				value = 1
			}
		}
		else = {
			if = {
				limit = { has_active_building = building_coordinated_fulfillment_center_1 }
				change_variable = {
					which = relentless_industrialists_var
					value = 1
				}
			}
			else_if = { #ruined or disabled
				limit = { has_building = building_coordinated_fulfillment_center_1 }
				change_variable = {
					which = relentless_industrialists_var
					value = 0.5
				}
			}
			else_if = {
				limit = { has_active_building = building_coordinated_fulfillment_center_2 }
				change_variable = {
					which = relentless_industrialists_var
					value = 2
				}
			}
			else = {
				change_variable = {
					which = relentless_industrialists_var
					value = 1
				}
			}
		}
	}

	after = {
		if = {
			limit = {
				check_variable = {
					which = relentless_industrialists_var
					value >= 30
				}
				NOT = {
					owner = {
						OR = {
							has_policy_flag = relentless_industrialists_cleanup
							country_has_situation = { SITUATION = relentless_industrialists_situation }
						}
					}
				}
			}
			if = {
				limit = {
					NOT = {
						owner = { has_country_flag = relentless_industrialists_situation_happened }
					}
				}
				planet_event = { id = toxoids.5 days = 15 random = 180 }
			}
			else = {
				change_pc = pc_nuked
				if = {
					limit = {
						owner = { has_country_flag = relentless_industrialists_climate_apocalypse_sad }
					}
					add_modifier = {
						modifier = relentless_industrialists_tomb
						years = 10
					}
				}
				create_message = {
					type = TOMB_WORLD_FROM_INDUSTRY_MESSAGE_TYPE
					localization = TOMB_WORLD_FROM_INDUSTRY_MESSAGE_TYPE_DESC
					days = 20
					target = this
				}
				if = {
					limit = {
						OR = {
							is_active_resolution = "resolution_ecology_environmental_control_board"
							is_active_resolution = "resolution_ecology_paradise_initiative"
						}
					}
					owner = {
						set_timed_country_flag = { flag = resolution_breached_terraformed days = 3600 }
					}
				}
			}
		}
	}
}


