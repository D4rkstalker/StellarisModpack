namespace = giga_qso

#############################################################################################################################################
### Main menu ###############################################################################################################################
#############################################################################################################################################
country_event = {
	id = giga_qso.1
	title = "giga_qso.1.name"
	desc = "giga_qso.1.desc"
	show_sound = event_mystic_reveal
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	option = { name = "giga_qso.1.fire"			hidden_effect = { country_event = { id = giga_qso.10 } } }										# pick target
	option = { name = "giga_qso.1.parameters"	hidden_effect = { country_event = { id = giga_qso.500 } } }										# parameters
	option = { name = "giga_qso.1.quit"			hidden_effect = { remove_country_flag = quasistellar_menu_active } default_hide_option = yes }	# quit
}

###################################
### Options #######################
###################################
country_event = {
	id = giga_qso.500
	title = "giga_qso.500.name"
	desc = "giga_qso.500.desc"
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	# increase
	option = {
		name = "giga_qso.500.increase"
		allow = { NOT = { has_country_flag = qso_intensity_physicslimits } }
		hidden_effect = {
			country_event = { id = giga_qso.500 }
			if = {
				limit = { has_country_flag = qso_intensity_none }
				remove_country_flag = qso_intensity_none
				set_country_flag = qso_intensity_verylow
				add_modifier = { modifier = qso_intensity_verylow }
				remove_modifier = "qso_intensity_none"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_verylow }
				remove_country_flag = qso_intensity_verylow
				set_country_flag = qso_intensity_low
				add_modifier = { modifier = qso_intensity_low }
				remove_modifier = "qso_intensity_verylow"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_low }
				remove_country_flag = qso_intensity_low
				set_country_flag = qso_intensity_med
				remove_modifier = "qso_intensity_low"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_med }
				remove_country_flag = qso_intensity_med
				set_country_flag = qso_intensity_high
				add_modifier = { modifier = "qso_intensity_high" }
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_high }
				remove_country_flag = qso_intensity_high
				set_country_flag = qso_intensity_veryhigh
				add_modifier = { modifier = qso_intensity_veryhigh }
				remove_modifier = "qso_intensity_high"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_veryhigh }
				remove_country_flag = qso_intensity_veryhigh
				set_country_flag = qso_intensity_extremely
				add_modifier = { modifier = qso_intensity_extremely }
				remove_modifier = "qso_intensity_veryhigh"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_extremely }
				remove_country_flag = qso_intensity_extremely
				set_country_flag = qso_intensity_insane
				add_modifier = { modifier = qso_intensity_insane }
				remove_modifier = "qso_intensity_extremely"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_insane }
				remove_country_flag = qso_intensity_insane
				set_country_flag = qso_intensity_physicslimits
				add_modifier = { modifier = qso_intensity_physicslimits }
				remove_modifier = "qso_intensity_insane"
			}
		}
	}

	# intensity display
	option = { name = "giga_qso.500.intensityphysicslimits"	trigger = { has_country_flag = qso_intensity_physicslimits }	hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.500.intensityinsane"		trigger = { has_country_flag = qso_intensity_insane }			hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.500.intensityextremely"		trigger = { has_country_flag = qso_intensity_extremely }		hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.500.intensityveryhigh"		trigger = { has_country_flag = qso_intensity_veryhigh }			hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.500.intensityhigh"			trigger = { has_country_flag = qso_intensity_high }				hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.500.intensitymed"			trigger = { has_country_flag = qso_intensity_med }				hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.500.intensitylow"			trigger = { has_country_flag = qso_intensity_low }				hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.500.intensityverylow"		trigger = { has_country_flag = qso_intensity_verylow }			hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.500.intensitynone"			trigger = { has_country_flag = qso_intensity_none }				hidden_effect = { country_event = { id = giga_qso.500 } } }

	# decrease
	option = {
		name = "giga_qso.500.decrease"
		allow = { NOT = { has_country_flag = qso_intensity_none } }
		hidden_effect = {
			country_event = { id = giga_qso.500 }
			if = {
				limit = { has_country_flag = qso_intensity_physicslimits }
				remove_country_flag = qso_intensity_physicslimits
				set_country_flag = qso_intensity_insane
				add_modifier = { modifier = qso_intensity_insane }
				remove_modifier = "qso_intensity_physicslimits"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_insane }
				remove_country_flag = qso_intensity_insane
				set_country_flag = qso_intensity_extremely
				add_modifier = { modifier = qso_intensity_extremely }
				remove_modifier = "qso_intensity_insane"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_extremely }
				remove_country_flag = qso_intensity_extremely
				set_country_flag = qso_intensity_veryhigh
				add_modifier = { modifier = qso_intensity_veryhigh }
				remove_modifier = "qso_intensity_extremely"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_veryhigh }
				remove_country_flag = qso_intensity_veryhigh
				set_country_flag = qso_intensity_high
				add_modifier = { modifier = qso_intensity_high }
				remove_modifier = "qso_intensity_veryhigh"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_high }
				remove_country_flag = qso_intensity_high
				set_country_flag = qso_intensity_med
				remove_modifier = "qso_intensity_high"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_med }
				remove_country_flag = qso_intensity_med
				set_country_flag = qso_intensity_low
				add_modifier = { modifier = "qso_intensity_low" }
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_low }
				remove_country_flag = qso_intensity_low
				set_country_flag = qso_intensity_verylow
				add_modifier = { modifier = qso_intensity_verylow }
				remove_modifier = "qso_intensity_low"
			}
			else_if = {
				limit = { has_country_flag = qso_intensity_verylow }
				remove_country_flag = qso_intensity_verylow
				set_country_flag = qso_intensity_none
				add_modifier = { modifier = qso_intensity_none }
				remove_modifier = "qso_intensity_verylow"
			}
		}
	}

	option = { name = "giga_qso.500.dump"		hidden_effect = { country_event = { id = giga_qso.501 } } }									# dump stuff
	option = { name = "giga_qso.1.menu"		hidden_effect = { country_event = { id = giga_qso.1 } } }										# back to menu
	option = { name = "giga_qso.1.quit"		hidden_effect = { remove_country_flag = quasistellar_menu_active } default_hide_option = yes }	# quit
}

# dump resources
country_event = {
	id = giga_qso.501
	title = "giga_qso.501.name"
	desc = "giga_qso.501.desc"
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	# dump minerals
	option = {
		name = "giga_qso.500.minerals"
		allow = { resource_stockpile_compare = { resource = minerals value >= 100000 } }
		add_resource = { sr_magical_neutronium = 30 }
		add_resource = { minerals = -100000 }
		hidden_effect = { country_event = { id = giga_qso.501 } }
	}

	# dump alloys
	option = {
		name = "giga_qso.500.alloys"
		allow = { resource_stockpile_compare = { resource = alloys value >= 50000 } }
		add_resource = { sr_magical_neutronium = 30 }
		add_resource = { alloys = -50000 }
		hidden_effect = {
			country_event = { id = giga_qso.501 }
		}
	}

	# dump food
	option = {
		name = "giga_qso.500.food"
		allow = { resource_stockpile_compare = { resource = food value >= 50000 } }
		add_resource = { sr_magical_neutronium = 30 }
		add_resource = { food = -50000 }
		hidden_effect = { country_event = { id = giga_qso.501 } }
	}

	# dump consumer goods
	option = {
		name = "giga_qso.500.goods"
		allow = { resource_stockpile_compare = { resource = consumer_goods value >= 70000 } }
		add_resource = { sr_magical_neutronium = 30 }
		add_resource = { consumer_goods = -70000 }
		hidden_effect = { country_event = { id = giga_qso.501 } }
	}

	# dump undesirables (that's messed up)
	option = {
		name = "giga_qso.500.undesirable"
		custom_tooltip = giga_qso.500.undesirable.tooltip
		allow = { count_owned_pop = { limit = { has_citizenship_type = { country = root type = citizenship_purge } } count > 25 } }
		add_resource = { sr_magical_neutronium = 5 }
		while = { count = 25 random_owned_pop = { limit = { has_citizenship_type = { country = root type = citizenship_purge } } kill_pop = yes } }
		hidden_effect = { country_event = { id = giga_qso.501 } }
	}

	option = { name = "giga_qso.1.panel"	hidden_effect = { country_event = { id = giga_qso.500 } } }
	option = { name = "giga_qso.1.menu"	hidden_effect = { country_event = { id = giga_qso.1 } } }										# back to menu
	option = { name = "giga_qso.1.quit"	hidden_effect = { remove_country_flag = quasistellar_menu_active } default_hide_option = yes }	# quit
}

###################################
### Firing ########################
###################################
country_event = {
	id = giga_qso.10
	title = "giga_qso.10.name"
	desc = "giga_qso.10.desc"
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	option = { name = "giga_qso.10.fleet"		hidden_effect = { country_event = { id = giga_qso.200 } } }				# initiates fire at fleet event chain
	option = { name = "giga_qso.10.planet"		hidden_effect = { country_event = { id = giga_qso.100 } } }				# initiates fire at planet event chain
	option = { name = "giga_qso.10.star"		hidden_effect = { country_event = { id = giga_qso.300 } } }				# initiates fire at star event chain
	option = { name = "giga_qso.10.starcluster"	hidden_effect = { country_event = { id = giga_qso.400 } } }				# initiates fire at cluster event chain
	option = { name = "giga_qso.1.menu"			hidden_effect = { country_event = { id = giga_qso.1 } } }				# back to menu
	option = { name = "giga_qso.1.quit"			hidden_effect = { remove_country_flag = quasistellar_menu_active } default_hide_option = yes }	# quit
}

# Planet Destruction
###################################
country_event = {
	id = giga_qso.100
	title = "giga_qso.100.name"
	desc = "giga_qso.100.desc"
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	option = {
		name = "giga_qso.100.yes"
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 5 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			set_country_flag = quasistellar_planet_busting #used to bring up the different menu when opening the panel again
			save_global_event_target_as = quasistellar_owner #used to scope to the country owning the quasistellar
		}
	}

	option = { name = "giga_qso.100.no"	hidden_effect = { country_event = { id = giga_qso.10 } } default_hide_option = yes }	# cancel
}

# Place the markers
country_event = {
	id = giga_qso.101
	title = "giga_qso.101.name"
	desc = "giga_qso.101.desc"
	show_sound = event_mystic_reveal
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	#FIRE!
	option = {
		name = "giga_qso.101.fire.1" #1 planets
		trigger = { has_country_flag = qso_1 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 5 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.2" #2 planets
		trigger = { has_country_flag = qso_2 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 10 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.3" #3 planets
		trigger = { has_country_flag = qso_3 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 15 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.4" #4 planets
		trigger = { has_country_flag = qso_4 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 20 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.5" #5 planets
		trigger = { has_country_flag = qso_5 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 25 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.6" #6 planets
		trigger = { has_country_flag = qso_6 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 30 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.7" #7 planets
		trigger = { has_country_flag = qso_7 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 35 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.8" #8 planets
		trigger = { has_country_flag = qso_8 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 40 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.9" #9 planets
		trigger = { has_country_flag = qso_9 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 45 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	option = {
		name = "giga_qso.101.fire.10" #10 planets
		trigger = { has_country_flag = qso_10 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 50 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.103 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				upgrade_megastructure_to = quasi_stellar_marker_planet_open
			}
		}
	}

	#not done with markers
	option = { name = "giga_qso.101.markers"		hidden_effect = { remove_country_flag = quasistellar_menu_active } }

	#cancel
	option = {
		name = "giga_qso.101.cancel"
		default_hide_option = yes
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_planet_busting
			remove_country_flag = qso_10
			remove_country_flag = qso_9
			remove_country_flag = qso_8
			remove_country_flag = qso_7
			remove_country_flag = qso_6
			remove_country_flag = qso_5
			remove_country_flag = qso_4
			remove_country_flag = qso_3
			remove_country_flag = qso_2
			remove_country_flag = qso_1
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_planet }
				remove_megastructure = this
			}
			every_system = {
				limit = { has_star_flag = quasistellar_target_planet }
				every_system_planet = {
					limit = { has_planet_flag = quasistellar_target_planet }
					remove_planet_flag = quasistellar_target_planet
				}
			}
		}
	}
}

country_event = { #blast
	id = giga_qso.103
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		every_system = {
			limit = { has_star_flag = quasistellar_target_planet }
			every_system_planet = {
				limit = { has_planet_flag = quasistellar_target_planet }
				if = {
					limit = { is_colony = yes }
					add_threat = { who = root amount = 3 } # Threat
					owner = {
						add_static_war_exhaustion = {
							attacker = root
							location = prev
							value_for_planet_destruction = 1
						}
					}

					if = {
						limit = { NOT = { has_global_flag = qso_opinions } }
						set_timed_global_flag = { flag = qso_opinions days = 30 }
						if = {
							limit = {
								exists = owner
								owner = {
									NOR = {
										is_country_type = ai_empire
										is_country_type = swarm
										is_country_type = extradimensional
										is_country_type = extradimensional_2
										is_country_type = extradimensional_3
									}
								}
							}
							owner = { add_opinion_modifier = { who = root modifier = opinion_broke_our_planet } }
							every_country = {
								limit = {
									NOR = {
										is_same_value = prev.owner
										is_country_type = primitive
										has_overlord = root
										has_defensive_pact = root
										is_country = root
										is_in_federation_with = root
										has_valid_civic = civic_fanatic_purifiers
										has_valid_civic = civic_hive_devouring_swarm
										has_valid_civic = civic_machine_terminator
									}
								}
								add_opinion_modifier = { who = root modifier = opinion_broke_planet }
							}
						}
						else = {
							owner = { add_opinion_modifier = { who = root modifier = opinion_broke_our_empty_planet } }
							every_country = {
								limit = {
									NOR = {
										is_same_value = prev.owner
										is_country_type = primitive
										has_overlord = root
										has_defensive_pact = root
										is_country = root
										is_in_federation_with = root
										has_valid_civic = civic_fanatic_purifiers
										has_valid_civic = civic_hive_devouring_swarm
										has_valid_civic = civic_machine_terminator
									}
								}
								add_opinion_modifier = { who = root modifier = opinion_broke_empty_planet }
							}
						}
					}
				}

				if = {
					limit = { is_planet_class = pc_ai }
					if = {
						limit = { NOT = { has_planet_flag = machine_lair } }
						planet_event = { id = giga_qso.111 } # contingency planet
						every_country = { country_event = { id = giga_qso.110 } } # message
					}
					else = {
						planet_event = { id = giga_qso.113 } # contingency planet
						every_country = { country_event = { id = giga_qso.112 } } # message to everyone
					}
				}

				if = {
					limit = { is_planet_class = pc_infested }
					planet_event = { id = giga_qso.115 } # Infested world
				}

				if = {
					limit = {
						OR = {
							planet_size < 25
							giga_habitable_structure = yes
							is_planet_class = pc_ice_asteroid
							is_planet_class = pc_asteroid
							is_planet_class = pc_crystal_asteroid
						}
					}
					remove_planet = yes # The planet is too small, or is artificial, instantly obliterated
				}
				else = { set_planet_size = 23 }

				if = {
					limit = { NOT = { has_planet_flag = quasistellar_impact } }
					set_planet_flag = quasistellar_impact
					if = { #check if its a gaseous body
						limit = {
							is_planet_class = pc_gas_giant
							giga_brown_dwarf = yes
						}
						change_pc = pc_metallic_hydrogen
					}
					else = { change_pc = pc_molten }
				}

				# Automatically declare war (lol)
				if = {
					limit = {
						exists = owner
						owner = {
							NOR = {
								is_at_war_with = root
								is_country_type = ai_empire
								is_country_type = swarm
								is_country_type = extradimensional
								is_country_type = extradimensional_2
								is_country_type = extradimensional_3
							}
						}
					}
					owner = {
						declare_war = {
							target = root
							attacker_war_goal = "wg_end_threat_hyperweapon"
						}
					}
				}
			}
		}

		every_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_marker_planet_open }
			upgrade_megastructure_to = quasi_stellar_marker_planet_firing
		}
		country_event = { id = giga_qso.105 days = 15 }	# Reset QSO
	}
}

# Reset everything
country_event = {
	id = giga_qso.105
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		remove_country_flag = quasistellar_firing
		remove_country_flag = qso_10
		remove_country_flag = qso_9
		remove_country_flag = qso_8
		remove_country_flag = qso_7
		remove_country_flag = qso_6
		remove_country_flag = qso_5
		remove_country_flag = qso_4
		remove_country_flag = qso_3
		remove_country_flag = qso_2
		remove_country_flag = qso_1

		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_gateway_on }
			solar_system = {
				spawn_megastructure = { type = "quasi_stellar_gateway_off"		owner = root }
				spawn_megastructure = { type = "quasi_stellar_obliterator_5"	owner = root }
			}
		}

		every_megastructure = {
			limit = {
				OR = {
					is_megastructure_type = quasi_stellar_marker_planet_firing
					is_megastructure_type = quasi_stellar_marker_star_firing
					is_megastructure_type = quasi_stellar_marker_cluster_firing
					is_megastructure_type = quasi_stellar_gateway_on
					is_megastructure_type = quasi_stellar_obliterator_firing_1
					is_megastructure_type = quasi_stellar_obliterator_firing_laser_1
					is_megastructure_type = quasi_stellar_obliterator_firing_laser_2
					is_megastructure_type = quasi_stellar_obliterator_firing_laser_3
					is_megastructure_type = quasi_stellar_obliterator_firing_laser_4
					is_megastructure_type = quasi_stellar_obliterator_firing_laser_5
					is_megastructure_type = quasi_stellar_obliterator_firing_laser_6
					is_megastructure_type = quasi_stellar_obliterator_firing_laser_big
				}
			}
			remove_megastructure = this
		}
	}
}

# Fleet Destruction
###################################
country_event = {
	id = giga_qso.200
	title = "giga_qso.200.name"
	desc = "giga_qso.200.desc"
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	option = {
		name = "giga_qso.200.yes"
		hidden_effect = {
			country_event = { id = giga_qso.201 }
			remove_country_flag = quasistellar_menu_active
			set_country_flag = quasistellar_fleet_busting #used to bring up the different menu when opening the panel again
			save_global_event_target_as = quasistellar_owner #used to scope to the country owning the quasistellar
			random_owned_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_obliterator_5 }
				solar_system = {
					random_system_planet = {
						limit = { is_planet_class = pc_core_quasar }
						save_global_event_target_as = quasar_gun_blackhole
					}
				}
			}
			create_fleet = {
				name = "Quasi-Stellar Calibrator"
				settings = {
					spawn_debris = no
					can_change_composition = no
				}
				effect = {
					set_owner = event_target:quasistellar_owner
					create_ship = {
						name = "Quasi-Stellar Calibrator"
						design = "Quasistellar Calibrator"
						effect = { set_ship_flag = calibrator_ship }
					}
					set_location = event_target:quasar_gun_blackhole
				}
			}
		}
	}

	option = { name = "giga_qso.100.no"		hidden_effect = { country_event = { id = giga_qso.10 } } default_hide_option = yes }	# cancel
}

country_event = { #the ship is there
	id = giga_qso.201
	title = "giga_qso.201.name"
	desc = "giga_qso.201.desc"
	location = fromfrom
	picture = GFX_evt_fleet_neutral
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = { name = "giga_qso.201.a" }
}

country_event = { #the ship is gone (disbanded)
	id = giga_qso.202
	title = "giga_qso.202.name"
	desc = "giga_qso.202.desc"
	picture = GFX_evt_fleet_neutral
	show_sound = event_mystic_reveal
	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = quasistellar_fleet_busting_successful }
		from = { is_ship_size = quasi_stellar_calibrator }
	}

	immediate = {
		if = { #the firing procedure has NOT started
			limit = { has_country_flag = quasistellar_fleet_busting }
			remove_country_flag = quasistellar_fleet_busting
		}
		else_if = { #the firing procedure HAS started
			limit = { has_country_flag = quasistellar_firing }
			set_timed_country_flag = { flag = quasistellar_fleet_busting_failed days = 10 }
			add_resource = { sr_magical_neutronium = 20 }
			country_event = { id = giga_qso.105 }	# Reset QSO
			remove_country_flag = quasistellar_firing
		}
	}

	option = { name = "giga_qso.202.a" }
}

country_event = { #the ship is gone (destroyed)
	id = giga_qso.203
	title = "giga_qso.203.name"
	desc = "giga_qso.203.desc"
	picture = GFX_evt_fleet_neutral
	show_sound = event_mystic_reveal
	is_triggered_only = yes

	trigger = { fromfrom = { is_ship_size = quasi_stellar_calibrator } }

	immediate = {
		if = { # if the firing procedure has NOT started
			limit = { has_country_flag = quasistellar_fleet_busting }
			remove_country_flag = quasistellar_fleet_busting
		}
		else_if = { # if the firing procedure HAS started
			limit = { has_country_flag = quasistellar_firing }
			set_timed_country_flag = { flag = quasistellar_fleet_busting_failed days = 10 }
			add_resource = { sr_magical_neutronium = 20 }
			country_event = { id = giga_qso.105 }	# Reset QSO
			remove_country_flag = quasistellar_firing
		}
	}

	option = { name = "giga_qso.203.a" }
}

country_event = { #target locked
	id = giga_qso.204
	title = "giga_qso.204.name"
	desc = "giga_qso.204.desc"
	show_sound = event_mystic_reveal
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	#FIRE!
	option = {
		name = "giga_qso.204.fire"
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 20 } }
		hidden_effect = {
			random_owned_ship = {
				limit = { is_ship_size = quasi_stellar_calibrator }
				solar_system = {
					random_system_planet = {
						limit = { is_star = yes }
						save_global_event_target_as = quasi_stellar_fleet_target
					}
				}
			}
			country_event = { id = giga_qso.206 days = 5 }
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_fleet_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.205 }
			set_country_flag = quasistellar_fleet_busting_successful
			every_owned_ship = {
				limit = { is_ship_size = quasi_stellar_calibrator }
				save_event_target_as = quasistellar_calibrator
			}
			create_fleet = { #lock the calibrator
				name = "Quasi-Stellar Calibrator"
				settings = {
					spawn_debris = no
					can_change_composition = no
				}
				effect = {
					set_owner = event_target:quasistellar_owner
					create_ship = {
						name = "Quasi-Stellar Calibrator"
						design = "Locked Quasistellar Calibrator"
						effect = {
							set_ship_flag = calibrator_ship
						}
					}
					set_location = event_target:quasistellar_calibrator
				}
			}
			event_target:quasistellar_calibrator = { delete_ship = this }
			remove_country_flag = quasistellar_fleet_busting_successful
			random_owned_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_obliterator_5 }
				remove_megastructure = this
				solar_system = {
					spawn_megastructure = { type = "quasi_stellar_obliterator_firing_1"	owner = root }
					random_system_megastructure = {
						limit = { is_megastructure_type = quasi_stellar_gateway_off }
						upgrade_megastructure_to = quasi_stellar_gateway_on
					}
				}
			}
		}
	}

	option = { name = "giga_qso.204.markers"		hidden_effect = { remove_country_flag = quasistellar_menu_active } }	# Not done with markers

	#cancel
	option = {
		name = "giga_qso.101.cancel"
		default_hide_option = yes
		hidden_effect = {
			country_event = { id = giga_qso.10 }
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_fleet_busting
			every_owned_ship = {
				limit = { is_ship_size = quasi_stellar_calibrator }
				delete_ship = this
			}
		}
	}
}

country_event = { #calibrating
	id = giga_qso.205
	title = "giga_qso.205.name"
	desc = "giga_qso.205.desc"
	location = fromfrom
	picture = GFX_evt_fleet_neutral
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = { name = "giga_qso.205.a" }
}

country_event = { #firing!
	id = giga_qso.206
	title = "giga_qso.206.name"
	desc = "giga_qso.206.desc"
	location = fromfrom
	picture = GFX_evt_machine_space_battle
	show_sound = event_air_raid_siren
	is_triggered_only = yes
	trigger = { NOT = { has_country_flag = quasistellar_fleet_busting_failed } }

	immediate = {
		set_country_flag = quasistellar_fleet_busting_successful
		every_owned_ship = {
			limit = { is_ship_size = quasi_stellar_calibrator }
			delete_ship = this
		}
		country_event = { id = giga_qso.1001 } #initiate firing sequence
		country_event = { id = giga_qso.207 days = 5 } #the wormhole opens
	}

	option = { name = "giga_qso.206.a" }
}

country_event = { # Firing!
	id = giga_qso.207
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_country_flag = quasistellar_fleet_busting_successful
		country_event = { id = giga_qso.208 days = 30 } # Delete it
		create_fleet = {
			name = "Quasistellar Wormhole"
			settings = {
				spawn_debris = no
				can_change_composition = no
				is_boss = yes
			}
			effect = {
				set_owner = event_target:quasistellar_owner
				create_ship = {
					name = "Quasistellar Wormhole"
					design = "Quasistellar Wormhole"
					effect = { set_ship_flag = quasistellarwormhole_ship }
				}
				set_location = event_target:quasi_stellar_fleet_target
			}
		}
	}
}

country_event = { # Delete it
	id = giga_qso.208
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_country_flag = quasistellar_firing
		every_owned_ship = {
			limit = { is_ship_size = quasi_stellar_wormhole }
			delete_ship = this
		}
		country_event = { id = giga_qso.105 }	# Reset QSO
	}
}

# Star Destruction
###################################
country_event = {
	id = giga_qso.300
	title = "giga_qso.300.name"
	desc = "giga_qso.300.desc"
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	option = {
		name = "giga_qso.100.yes"
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 40 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			set_country_flag = quasistellar_stellar_busting #used to bring up the different menu when opening the panel again
			save_global_event_target_as = quasistellar_owner #used to scope to the country owning the quasistellar
		}
	}

	option = { name = "giga_qso.100.no" hidden_effect = { country_event = { id = giga_qso.10 } } default_hide_option = yes }	# cancel
}

# Place the markers
country_event = {
	id = giga_qso.301
	title = "giga_qso.301.name"
	desc = "giga_qso.301.desc"
	show_sound = event_mystic_reveal
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	#FIRE!
	option = {
		name = "giga_qso.301.fire.1" #1 stars
		trigger = { has_country_flag = qso_1 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 40 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_stellar_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.4031 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_star }
				upgrade_megastructure_to = quasi_stellar_marker_star_open
			}
		}
	}

	option = {
		name = "giga_qso.301.fire.2" #2 stars
		trigger = { has_country_flag = qso_2 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 80 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_stellar_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.4031 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_star }
				upgrade_megastructure_to = quasi_stellar_marker_star_open
			}
		}
	}

	option = {
		name = "giga_qso.301.fire.3" #3 stars
		trigger = { has_country_flag = qso_3 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 120 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_stellar_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.4031 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_star }
				upgrade_megastructure_to = quasi_stellar_marker_star_open
			}
		}
	}

	option = {
		name = "giga_qso.301.fire.4" #4 stars
		trigger = { has_country_flag = qso_4 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 160 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_stellar_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.4031 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_star }
				upgrade_megastructure_to = quasi_stellar_marker_star_open
			}
		}
	}

	option = { name = "giga_qso.301.markers"		hidden_effect = { remove_country_flag = quasistellar_menu_active } }	# Not done with markers
	option = {	# Cancel
		name = "giga_qso.101.cancel"
		default_hide_option = yes
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_stellar_busting
			remove_country_flag = qso_4
			remove_country_flag = qso_3
			remove_country_flag = qso_2
			remove_country_flag = qso_1
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_star }
				remove_megastructure = this
			}
			every_system = {
				limit = { has_star_flag = quasistellar_target_star }
				remove_star_flag = quasistellar_target_star
			}
		}
	}
}

# Cluster Destruction
###################################
country_event = {
	id = giga_qso.400
	title = "giga_qso.400.name"
	desc = "giga_qso.400.desc"
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	option = {
		name = "giga_qso.100.yes"
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 120 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			set_country_flag = quasistellar_cluster_busting		# used to bring up the different menu when opening the panel again
			save_global_event_target_as = quasistellar_owner	# used to scope to the country owning the quasistellar
		}
	}

	option = { name = "giga_qso.100.no"	hidden_effect = { country_event = { id = giga_qso.10 } } default_hide_option = yes }	# cancel
}

# Place the markers
country_event = {
	id = giga_qso.401
	title = "giga_qso.401.name"
	desc = "giga_qso.401.desc"
	show_sound = event_mystic_reveal
	location = fromfrom
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root.species
		room = giga_qso_room
	}

	# FIRE!
	option = {
		name = "giga_qso.401.fire" #STAR CLUSTER
		trigger = { has_country_flag = qso_1 }
		allow = { resource_stockpile_compare = { resource = sr_magical_neutronium value >= 120 } }
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_cluster_busting
			set_country_flag = quasistellar_firing
			country_event = { id = giga_qso.1000 }
			country_event = { id = giga_qso.4031 days = 15 }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_cluster }
				upgrade_megastructure_to = quasi_stellar_marker_cluster_open
			}
		}
	}

	# Not done with markers
	option = {
		name = "giga_qso.401.markers"
		hidden_effect = { remove_country_flag = quasistellar_menu_active }
	}

	# Cancel
	option = {
		name = "giga_qso.101.cancel"
		default_hide_option = yes
		hidden_effect = {
			remove_country_flag = quasistellar_menu_active
			remove_country_flag = quasistellar_cluster_busting
			remove_country_flag = qso_1
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_cluster }
				remove_megastructure = this
			}
			every_system = {
				limit = { has_star_flag = quasistellar_target_cluster }
				remove_star_flag = quasistellar_target_cluster
			}
		}
	}
}

#############################################################################################################################################
### Destruction Events ######################################################################################################################
#############################################################################################################################################
country_event = {
	id = giga_qso.4031
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.403 days = 5 }
		if = {
			limit = { any_megastructure = { is_megastructure_type = quasi_stellar_marker_cluster_open } }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_cluster_open }
				upgrade_megastructure_to = quasi_stellar_marker_cluster_firing
			}
		}
		else_if = {
			limit = { any_megastructure = { is_megastructure_type = quasi_stellar_marker_star_open } }
			every_megastructure = {
				limit = { is_megastructure_type = quasi_stellar_marker_star_open }
				upgrade_megastructure_to = quasi_stellar_marker_star_firing
			}
		}
	}
}

country_event = {
	id = giga_qso.403
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.105 }	# Reset QSO

		every_system = {
			limit = {
				OR = {
					has_star_flag = quasistellar_target_star
					has_star_flag = quasistellar_target_cluster
				}
			}
			remove_star_flag = quasistellar_target_star
			remove_star_flag = quasistellar_target_cluster

			every_system_planet = {
				if = {
					limit = { is_colony = yes }
					add_threat = { who = root amount = 4 } # Threat
					owner = {
						add_static_war_exhaustion = {
							attacker = root
							location = prev
							value_for_planet_destruction = 1
						}
					}

					if = {
						limit = { NOT = { has_global_flag = qso_opinions } }
						set_timed_global_flag = { flag = qso_opinions days = 30 }
						if = {
							limit = {
								exists = owner
								owner = {
									NOR = {
										is_country_type = ai_empire
										is_country_type = swarm
										is_country_type = extradimensional
										is_country_type = extradimensional_2
										is_country_type = extradimensional_3
									}
								}
							}
							owner = { add_opinion_modifier = { who = root modifier = opinion_broke_our_system } }
							every_country = {
								limit = {
									NOR = {
										is_same_value = prev.owner
										is_country_type = primitive
										has_overlord = root
										has_defensive_pact = root
										is_country = root
										is_in_federation_with = root
										has_valid_civic = civic_fanatic_purifiers
										has_valid_civic = civic_hive_devouring_swarm
										has_valid_civic = civic_machine_terminator
									}
								}
								add_opinion_modifier = { who = root modifier = opinion_broke_system }
							}
						}
						else = {
							owner = { add_opinion_modifier = { who = root modifier = opinion_broke_our_empty_system } }
							every_country = {
								limit = {
									NOR = {
										is_same_value = prev.owner
										is_country_type = primitive
										has_overlord = root
										has_defensive_pact = root
										is_country = root
										is_in_federation_with = root
										has_valid_civic = civic_fanatic_purifiers
										has_valid_civic = civic_hive_devouring_swarm
										has_valid_civic = civic_machine_terminator
									}
								}
								add_opinion_modifier = { who = root modifier = opinion_broke_empty_system }
							}
						}
					}
				}

				if = {
					limit = { is_planet_class = pc_ai }
					if = {
						limit = { NOT = { has_planet_flag = machine_lair } }
						planet_event = { id = giga_qso.111 } # contingency planet
						every_country = { country_event = { id = giga_qso.110 } } # message
					}
					else = {
						planet_event = { id = giga_qso.113 } # contingency planet
						every_country = { country_event = { id = giga_qso.112 } } # message to everyone
					}
				}

				if = {
					limit = { is_planet_class = pc_infested }
					planet_event = { id = giga_qso.115 } # Infested world
				}

				if = {
					limit = { is_star = no }
					remove_planet = yes
				}
			}

			# Automatically declare war (lol)
			if = {
				limit = {
					exists = owner
					owner = {
						NOR = {
							is_at_war_with = root
							is_country_type = ai_empire
							is_country_type = swarm
							is_country_type = extradimensional
							is_country_type = extradimensional_2
							is_country_type = extradimensional_3
						}
					}
				}
				owner = {
					declare_war = {
						target = root
						attacker_war_goal = "wg_end_threat_hyperweapon"
					}
				}
			}

			star = {
				solar_system = {
					set_name = "[PREV.GetName] Void"
					set_star_class = sc_empty_space
					every_system_planet = {
						limit = { is_star = yes }
						if = {
							limit = { NOT = { is_planet_class = pc_core_quasar } }
							clear_deposits = yes
							change_pc = pc_giga_empty_space
							set_name = "Empty Space"
						}
						create_ambient_object = {
							type = "star_explosion"
							play_animation_once = yes
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 0
								angle = random
							}
						}
					} 
				}
				create_ambient_object = { type = "nebula_L8_entity" location = this }
				create_ambient_object = { type = "nebula_L10_entity" location = this }
				create_ambient_object = {
					type = "destroyed_system"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = destroyed_system_effect
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}

			every_system_megastructure = {
				limit = {
					NOR = {
						is_megastructure_type = quasi_stellar_marker_star_firing
						is_megastructure_type = quasi_stellar_marker_cluster_firing
					}
				}
				remove_megastructure = this
			}

			set_asteroid_belt = { radius = 0 }
			every_neighbor_system = { remove_hyperlane = { from = prev to = this } }
			every_fleet_in_system = { destroy_fleet = this }
			giga_remove_system_debris = yes
		}
	}
}

#############################################################################################################################################
### Crisis Events ###########################################################################################################################
#############################################################################################################################################
country_event = { #message about planet obliterated
	id = giga_qso.110
	title = "giga_qso.110.name"
	desc = "giga_qso.110.desc"
	picture = GFX_evt_exploding_planet
	show_sound = event_super_explosion
	location = from
	is_triggered_only = yes
	option = { name = "giga_qso.110.a" }
}

planet_event = { #planet destroyed
	id = giga_qso.111
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {		limit = { has_planet_flag = machine_world_1 } every_country = { limit = { has_event_chain = "ai_crisis_chain" } remove_point_of_interest = ai_crisis_poi.1 } }
		else_if = {	limit = { has_planet_flag = machine_world_2 } every_country = { limit = { has_event_chain = "ai_crisis_chain" } remove_point_of_interest = ai_crisis_poi.2 } }
		else_if = {	limit = { has_planet_flag = machine_world_3 } every_country = { limit = { has_event_chain = "ai_crisis_chain" } remove_point_of_interest = ai_crisis_poi.3 } }
		else_if = {	limit = { has_planet_flag = machine_world_4 } every_country = { limit = { has_event_chain = "ai_crisis_chain" } remove_point_of_interest = ai_crisis_poi.4 } }

		every_country = {
			limit = { has_event_chain = "ai_crisis_chain" }
			add_event_chain_counter = {
				event_chain = "ai_crisis_chain"
				counter = "active_machine_worlds"
				amount = -1
			}
		}

		random_country = {
			limit = { is_country_type = "ai_empire" }
			change_variable = { which = machine_worlds_destroyed value = 1 }
			if = {
				limit = { check_variable = { which = machine_worlds_destroyed value = 1 } }
				remove_global_flag = ghost_signal_5_flag
				set_global_flag = ghost_signal_4_flag
				every_country = {
					limit = { has_notification_modifier = ghost_signal_5 }
					remove_notification_modifier = ghost_signal_5
					add_notification_modifier = ghost_signal_4
					every_owned_pop = {
						limit = { has_modifier = pop_ghost_signal_5 }
						remove_modifier = "pop_ghost_signal_5"
						add_modifier = { modifier = "pop_ghost_signal_4" days = -1 }
					}
					every_owned_ship = {
						limit = { has_sapient_combat_computer = yes }
						remove_modifier = "ship_ghost_signal_5"
						add_modifier = { modifier = "ship_ghost_signal_4" days = -1 }
					}
				}
				every_country = {
					limit = { has_notification_modifier = ghost_signal_5_machine }
					remove_notification_modifier = ghost_signal_5_machine
					add_notification_modifier = ghost_signal_4_machine
					every_owned_pop = {
						limit = { has_trait = trait_machine_unit }
						remove_modifier = "pop_ghost_signal_5_machine"
						add_modifier = { modifier = "pop_ghost_signal_4_machine" days = -1 }
					}
					every_owned_ship = {
						limit = { has_sapient_combat_computer = yes }
						remove_modifier = "ship_ghost_signal_5"
						add_modifier = { modifier = "ship_ghost_signal_4" days = -1 }
					}
				}
				observer_event = { id = observer.50 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = machine_worlds_destroyed value = 2 } }
				set_global_flag = first_machine_world_destroyed
				remove_global_flag = ghost_signal_4_flag
				set_global_flag = ghost_signal_3_flag
				every_country = {
					limit = { has_notification_modifier = ghost_signal_4 }
					remove_notification_modifier = ghost_signal_4
					add_notification_modifier = ghost_signal_3
					every_owned_pop = {
						limit = { has_modifier = "pop_ghost_signal_4" }
						remove_modifier = "pop_ghost_signal_4"
						add_modifier = { modifier = "pop_ghost_signal_3" days = -1 }
					}
					every_owned_ship = {
						limit = { has_sapient_combat_computer = yes }
						remove_modifier = "ship_ghost_signal_4"
						add_modifier = { modifier = "ship_ghost_signal_3" days = -1 }
					}
				}
				every_country = {
					limit = { has_notification_modifier = ghost_signal_4_machine }
					remove_notification_modifier = ghost_signal_4_machine
					every_owned_pop = {
						limit = { has_trait = trait_machine_unit }
						remove_modifier = "pop_ghost_signal_4_machine"
					}
					every_owned_ship = {
						limit = { has_sapient_combat_computer = yes }
						remove_modifier = "ship_ghost_signal_4"
					}
				}
				every_country = {
					limit = { has_special_project = AI_CRISIS_PROJECT }
					abort_special_project = { type = AI_CRISIS_PROJECT }
				}
				observer_event = { id = observer.50 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = "machine_worlds_destroyed" value = 3 } }
				remove_global_flag = ghost_signal_3_flag
				set_global_flag = ghost_signal_2_flag
				every_country = {
					limit = { has_notification_modifier = ghost_signal_3 }
					remove_notification_modifier = ghost_signal_3
					add_notification_modifier = ghost_signal_2
					every_owned_pop = {
						limit = { has_modifier = pop_ghost_signal_3 }
						remove_modifier = "pop_ghost_signal_3"
						add_modifier = { modifier = "pop_ghost_signal_2" days = -1 }
					}
					every_owned_ship = {
						limit = { has_sapient_combat_computer = yes }
						remove_modifier = "ship_ghost_signal_3"
						add_modifier = { modifier = "ship_ghost_signal_2" days = -1 }
					}
				}
				observer_event = { id = observer.50 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = machine_worlds_destroyed value = 4 } }
				remove_global_flag = ghost_signal_2_flag
				every_country = {
					limit = { has_notification_modifier = ghost_signal_2 }
					remove_notification_modifier = ghost_signal_2
					add_notification_modifier = ghost_signal_1
					every_owned_pop = {
						limit = { has_modifier = pop_ghost_signal_2 }
						remove_modifier = "pop_ghost_signal_2"
						add_modifier = { modifier = "pop_ghost_signal_1" days = -1 }
					}
					every_owned_ship = {
						limit = { has_sapient_combat_computer = yes }
						remove_modifier = "ship_ghost_signal_2"
						add_modifier = { modifier = "ship_ghost_signal_1" days = -1 }
					}
				}
				observer_event = { id = observer.50 }
				country_event = { id = crisis.2035 }
				break = yes
			}
		}
	}
}

country_event = { #message about final planet obliterated
	id = giga_qso.112
	title = "giga_qso.112.name"
	desc = "giga_qso.112.desc"
	picture = GFX_evt_exploding_planet
	show_sound = event_super_explosion
	location = from
	is_triggered_only = yes
	option = { name = "giga_qso.112.a" }
}

planet_event = {
	id = giga_qso.113 #Final planet obliterated
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		stop_crisis_sound = yes
		solar_system = {
			random_system_ambient_object = {
				limit = { has_ambient_object_flag = extradimensional_system_effect_2 }
				destroy_ambient_object = this
			}
		}
		event_target:quasistellar_owner = { save_event_target_as = final_machine_world_destroyer }
		planet_event = { id = giga_qso.114 }
	}
}

planet_event = {
	id = giga_qso.114 #contingency gone
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_global_flag = ai_invasion_defeated
		event_target:final_machine_world_destroyer = { set_country_flag = does_not_compute }
		if = {
			limit = {
				event_target:final_machine_world_destroyer = { is_ai = no }
				NOT = { has_planet_flag = planet_shielded }
			}
			event_target:final_machine_world_destroyer = { country_event = { id = crisis.2480 days = 10 random = 10 } }
		}
		if = {
			limit = {
				event_target:final_machine_world_destroyer = { is_ai = no }
				has_planet_flag = planet_shielded
			}
			event_target:final_machine_world_destroyer = { country_event = { id = crisis.2481 days = 10 random = 10 } }
		}
		remove_global_flag = synth_terror
		remove_global_flag = ai_ghost_signal
		remove_global_flag = ai_invasion_ongoing
		every_country = {
			limit = { has_notification_modifier = ghost_signal_1 }
			remove_notification_modifier = ghost_signal_1
			every_owned_pop = {
				limit = { has_modifier = "pop_ghost_signal_1" }
				remove_modifier = "pop_ghost_signal_1"
			}
			every_owned_ship = {
				limit = { has_sapient_combat_computer = yes }
				remove_modifier = "ship_ghost_signal_1"
			}
		}
		every_country = {
			limit = { has_event_chain = "ai_crisis_chain" }
			end_event_chain = "ai_crisis_chain"
		}
		every_country = {
			limit = { has_special_project = SYNTH_INFILTRATION_PROJECT }
			abort_special_project = { type = SYNTH_INFILTRATION_PROJECT }
		}
		every_country = {
			limit = { has_modifier = unity_reduction_crisis_2204 }
			remove_modifier = unity_reduction_crisis_2204
		}
		random_country = { observer_event = { id = observer.51 } }
		every_country = {
			limit = { ehof_default_country = yes }
			every_owned_planet = {
				limit = { has_modifier = synth_planet_paranoia }
				remove_modifier = synth_planet_paranoia
			}
		}
		every_country = {
			limit = { is_fallen_machine_empire = yes }
			country_event = { id = fallen_machine_empire.3 days = 1 }
		}
		random_country = {
			limit = { is_country_type = ai_empire }
			destroy_country = yes
		}

		event_target:final_machine_world_destroyer = { set_country_flag = final_machine_world_destroyed }

		# Cybrex
		if = {
			limit = {
				has_global_flag = cybrex_resurface
				NOT = { has_global_flag = cybrex_destroyed }
			}
			random_country = {
				limit = { is_country_type = cybrex_empire }

				# Cybrex recall expeditionary fleets
				every_country = {
					limit = { has_country_flag = cybrex_donation }
					country_event = { id = crisis.2474 days = 20 random = 30 }
				}

				# Cybrex Depart Galaxy
				country_event = { id = crisis.2406 days = 365 random = 800 }
			}
		}
	}
}

planet_event = {
	id = giga_qso.115 #infested world destroyed
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_planet_flag = previously_infested
		destroy_colony = yes
		random_list = {
			50 = { change_pc = pc_barren }
			50 = { change_pc = pc_barren_cold }
		}
		reset_planet = yes
		add_modifier = { modifier = "terraforming_candidate" days = -1 }
		planet_event = { id = crisis.216 }
	}
}

#############################################################################################################################################
### Firing Animation ########################################################################################################################
#############################################################################################################################################
country_event = {
	id = giga_qso.1000 #the barrel & gateway lights up
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.1001 days = 1 }
		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_obliterator_5 }
			remove_megastructure = this
			solar_system = {
				spawn_megastructure = {
					type = quasi_stellar_obliterator_firing_1
					owner = owner
				}
				random_system_megastructure = {
					limit = { is_megastructure_type = quasi_stellar_gateway_off }
					upgrade_megastructure_to = quasi_stellar_gateway_on
				}
			}
		}
	}
}

country_event = {
	id = giga_qso.1001 #1 laser
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.1002 days = 1 }
		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_obliterator_firing_1 }
			solar_system = {
				spawn_megastructure = {
					type = quasi_stellar_obliterator_firing_laser_1
					owner = owner
				}
			}
		}
	}
}

country_event = {
	id = giga_qso.1002 #2 lasers
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.1003 days = 1 }
		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_obliterator_firing_1 }
			solar_system = {
				spawn_megastructure = {
					type = quasi_stellar_obliterator_firing_laser_2
					owner = owner
				}
			}
		}
	}
}

country_event = {
	id = giga_qso.1003 #3 lasers
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.1004 days = 1 }
		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_obliterator_firing_1 }
			solar_system = {
				spawn_megastructure = {
					type = quasi_stellar_obliterator_firing_laser_3
					owner = owner
				}
			}
		}
	}
}

country_event = {
	id = giga_qso.1004 #4 lasers
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.1005 days = 1 }
		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_obliterator_firing_1 }
			solar_system = {
				spawn_megastructure = {
					type = quasi_stellar_obliterator_firing_laser_4
					owner = owner
				}
			}
		}
	}
}

country_event = {
	id = giga_qso.1005 #5 lasers
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.1006 days = 1 }
		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_obliterator_firing_1 }
			solar_system = {
				spawn_megastructure = {
					type = quasi_stellar_obliterator_firing_laser_5
					owner = owner
				}
			}
		}
	}
}

country_event = {
	id = giga_qso.1006 #6 lasers
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = giga_qso.1007 days = 3 }
		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_obliterator_firing_1 }
			solar_system = {
				spawn_megastructure = {
					type = quasi_stellar_obliterator_firing_laser_6
					owner = owner
				}
			}
		}
	}
}

country_event = {
	id = giga_qso.1007 #BIG laser
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_owned_megastructure = {
			limit = { is_megastructure_type = quasi_stellar_obliterator_firing_1 }
			solar_system = {
				spawn_megastructure = {
					type = quasi_stellar_obliterator_firing_laser_big
					owner = owner
				}
			}
		}
	}
}

#############################################################################################################################################
### Construction Events #####################################################################################################################
#############################################################################################################################################
country_event = {
	id = giga_qso.2000
	title = "giga_qso.2000.name"
	desc = "giga_qso.2000.desc"
	show_sound = event_dyson_sphere_build_start
	picture = GFX_evt_qso
	location = event_target:giga_planet
	is_triggered_only = yes
	option = { name = "giga_qso.2000.a" }
}

country_event = {
	id = giga_qso.2001
	title = "giga_qso.2001.name"
	desc = "giga_qso.2001.desc"
	show_sound = event_dyson_sphere_build_upgrade_panel
	picture = GFX_evt_qso
	location = fromfrom
	is_triggered_only = yes

	trigger = { from = { is_megastructure_type = quasi_stellar_obliterator_1 } }

	immediate = {
		add_threat = { who = root amount = 10 } #threat
		every_country = {
			limit = {
				NOR = {
					is_country_type = primitive
					has_overlord = root
					has_defensive_pact = root
					is_country = root
					is_in_federation_with = root
				}
			}
			add_opinion_modifier = { who = root modifier = opinion_threatening_all_life }
		}
	}

	option = { name = "giga_qso.2001.a" }
}

country_event = {
	id = giga_qso.2002
	title = "giga_qso.2002.name"
	desc = "giga_qso.2002.desc"
	show_sound = event_dyson_sphere_build_upgrade_panel
	picture = GFX_evt_qso
	location = fromfrom
	is_triggered_only = yes
	trigger = { from = { is_megastructure_type = quasi_stellar_obliterator_2 } }
	immediate = { add_threat = { who = root amount = 10 } } #threat
	option = { name = "giga_qso.2002.a" }
}

country_event = {
	id = giga_qso.2003
	title = "giga_qso.2003.name"
	desc = "giga_qso.2003.desc"
	show_sound = event_dyson_sphere_build_upgrade_panel
	picture = GFX_evt_qso
	location = fromfrom
	is_triggered_only = yes
	trigger = { from = { is_megastructure_type = quasi_stellar_obliterator_3 } }

	immediate = {
		if = {
			limit = {
				has_global_flag = giga_galactic_fed_always
				NOR = {
					has_global_flag = galactic_hyperstate_formed
					has_global_flag = war_in_heaven_ongoing
				}
			}
			every_country = {
				limit = {
					NOR = {
						is_country_type = primitive
						has_overlord = root
						has_defensive_pact = root
						is_country = root
						is_in_federation_with = root
					}
				}
				every_war = { end_war_effect = yes }
			}
			country_event = { id = giga_fed.4000 } #hyperstate
			set_global_flag = galactic_hyperstate_formed
		}
		else_if = { # player is genocidal
			limit = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_machine_terminator
				}
				NOR = { #cant happen twice
					has_global_flag = galactic_pact_formed
					has_global_flag = galactic_hyperstate_formed
					has_global_flag = war_in_heaven_ongoing
				}
			}
			random_list = {
				25 = { #big federation
					modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
					country_event = { id = giga_fed.3000 }
					set_global_flag = galactic_pact_formed
				}
				50 = { #hyperstate
					modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
					country_event = { id = giga_fed.4000 } #hyperstate
					set_global_flag = galactic_hyperstate_formed
				}
				10 = {} #nothing
			}
		}
		else_if = {
			limit = {
				NOR = { #cant happen twice
					has_global_flag = galactic_pact_formed
					has_global_flag = galactic_hyperstate_formed
					has_global_flag = war_in_heaven_ongoing
				}
			}
			random_list = {
				50 = { #big federation
					modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
					country_event = { id = giga_fed.3000 }
					set_global_flag = galactic_pact_formed
				}
				30 = { #hyperstate
					modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
					country_event = { id = giga_fed.4000 } #hyperstate
					set_global_flag = galactic_hyperstate_formed
				}
				80 = {} #nothing
			}
		}
	}

	option = { name = "giga_qso.2003.a" }
}

country_event = {
	id = giga_qso.2004
	title = "giga_qso.2004.name"
	desc = "giga_qso.2004.desc"
	show_sound = event_dyson_sphere_build_upgrade_panel
	picture = GFX_evt_qso
	location = fromfrom
	is_triggered_only = yes
	trigger = { from = { is_megastructure_type = quasi_stellar_obliterator_4 } }

	immediate = {
		if = {
			limit = {
				has_global_flag = giga_galactic_fed_always
				NOR = {
					has_global_flag = galactic_hyperstate_formed
					has_global_flag = war_in_heaven_ongoing
				}
			}
			every_country = {
				limit = {
					NOR = {
						is_country_type = primitive
						has_overlord = root
						has_defensive_pact = root
						is_country = root
						is_in_federation_with = root
					}
				}
				every_war = { end_war_effect = yes }
			}
			country_event = { id = giga_fed.4000 } #hyperstate
			set_global_flag = galactic_hyperstate_formed
		}
		else_if = { # player is genocidal
			limit = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_machine_terminator
				}
				NOR = { #cant happen twice
					has_global_flag = galactic_pact_formed
					has_global_flag = galactic_hyperstate_formed
					has_global_flag = war_in_heaven_ongoing
				}
			}
			random_list = {
				25 = { #big federation
					modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
					country_event = { id = giga_fed.3000 }
					set_global_flag = galactic_pact_formed
				}
				50 = { #hyperstate
					modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
					country_event = { id = giga_fed.4000 } #hyperstate
					set_global_flag = galactic_hyperstate_formed
				}
				10 = {} #nothing
			}
		}
		else_if = {
			limit = {
				NOR = { #cant happen twice
					has_global_flag = galactic_pact_formed
					has_global_flag = galactic_hyperstate_formed
					has_global_flag = war_in_heaven_ongoing
				}
			}
			random_list = {
				50 = { #big federation
					modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
					country_event = { id = giga_fed.3000 }
					set_global_flag = galactic_pact_formed
				}
				30 = { #hyperstate
					modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
					country_event = { id = giga_fed.4000 } #hyperstate
					set_global_flag = galactic_hyperstate_formed
				}
				80 = {} #nothing
			}
		}

		if = { #hyperstate attacks
			limit = {
				has_global_flag = galactic_hyperstate_formed
				NOT = { has_global_flag = galactic_hyperstate_war }
			}
			random_list = {
				50 = {
					set_global_flag = galactic_hyperstate_war
					country_event = { id = giga_fed.4012 days = 30 random = 10 }
				}
				50 = {}
			}
		}
		else_if = { #fed attacks
			limit = {
				has_global_flag = galactic_pact_formed
				NOT = { has_global_flag = galactic_pact_war }
			}
			random_list = {
				50 = {
					set_global_flag = galactic_pact_war
					country_event = { id = giga_fed.3012 days = 30 random = 10 }
				}
				50 = {}
			}
		}
	}

	option = { name = "giga_qso.2004.a" }
}

country_event = { #at this point, the hyperweapon is actually being constructed, and empires may agree to a galactic ceasefire. the ceasefire can then lead to the formation of a hyperstate
	id = giga_qso.2005
	title = "giga_qso.2005.name"
	desc = "giga_qso.2005.desc"
	show_sound = event_dyson_sphere_build_complete
	picture = GFX_evt_qso
	location = fromfrom
	is_triggered_only = yes
	trigger = { from = { is_megastructure_type = quasi_stellar_obliterator_5 } }

	immediate = {
		if = {
			limit = {
				any_country = {
					NOR = {
						has_overlord = root
						has_defensive_pact = root
						is_country = root
						is_in_federation_with = root
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_hive_devouring_swarm
						has_valid_civic = civic_machine_terminator
					}
					ehof_default_country = yes
					is_ai = yes
				}
			}
			if = {
				limit = {
					has_global_flag = giga_galactic_fed_always
					NOR = {
						has_global_flag = galactic_hyperstate_formed
						has_global_flag = war_in_heaven_ongoing
					}
				}
				every_country = {
					limit = {
						NOR = {
							is_country_type = primitive
							has_overlord = root
							has_defensive_pact = root
							is_country = root
							is_in_federation_with = root
						}
					}
					every_war = { end_war_effect = yes }
				}
				country_event = { id = giga_fed.4000 } #hyperstate
				set_global_flag = galactic_hyperstate_formed
			}
			else_if = { # player is genocidal
				limit = {
					OR = {
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_hive_devouring_swarm
						has_valid_civic = civic_machine_terminator
					}
					NOR = { #cant happen twice
						has_global_flag = galactic_pact_formed
						has_global_flag = galactic_hyperstate_formed
						has_global_flag = war_in_heaven_ongoing
					}
				}
				random_list = {
					25 = { #big federation
						modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
						country_event = { id = giga_fed.3000 }
						set_global_flag = galactic_pact_formed
					}
					50 = { #hyperstate
						modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
						country_event = { id = giga_fed.4000 } #hyperstate
						set_global_flag = galactic_hyperstate_formed
					}
					10 = {} #nothing
				}
			}
			else_if = {
				limit = {
					NOR = { #cant happen twice
						has_global_flag = galactic_pact_formed
						has_global_flag = galactic_hyperstate_formed
						has_global_flag = war_in_heaven_ongoing
					}
				}
				random_list = {
					50 = { #big federation
						modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
						country_event = { id = giga_fed.3000 }
						set_global_flag = galactic_pact_formed
					}
					30 = { #hyperstate
						modifier = { factor = 0 has_global_flag = giga_galactic_fed_disabled }
						country_event = { id = giga_fed.4000 } #hyperstate
						set_global_flag = galactic_hyperstate_formed
					}
					80 = {} #nothing
				}
			}

			if = { #hyperstate attacks
				limit = {
					has_global_flag = galactic_hyperstate_formed
					NOT = { has_global_flag = galactic_hyperstate_war }
				}
				set_global_flag = galactic_hyperstate_war
				country_event = { id = giga_fed.4012 days = 30 random = 10 }
			}
			else_if = { #fed attacks
				limit = {
					has_global_flag = galactic_pact_formed
					NOT = { has_global_flag = galactic_pact_war }
				}
				set_global_flag = galactic_pact_war
				country_event = { id = giga_fed.3012 days = 30 random = 10 }
			}
		}
	}

	option = { name = "giga_qso.2005.a" }
}

#############################################################################################################################################
### Galactic Federation #####################################################################################################################
#############################################################################################################################################
namespace = giga_fed

country_event = {
	id = giga_fed.3000
	title = "giga_fed.3005.name"
	desc = "giga_fed.3005.desc"
	show_sound = event_radio_chatter
	picture = GFX_evt_galactic_community
	is_triggered_only = yes

	option = { name = "giga_fed.3005.a"		hidden_effect = { country_event = { id = giga_fed.3006 days = 10 } } }

	immediate = {
		# Establish Presient and members
		every_country = {
			limit = {
				NOR = {
					has_overlord = root
					has_defensive_pact = root
					is_country = root
					is_in_federation_with = root
					is_country_type = ai_empire
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_machine_terminator
				}
				ehof_default_country = yes
				is_ai = yes
			}
			if = {
				limit = { NOT = { any_country = { has_country_flag = giga_galactic_pact_leader } } }
				set_country_flag = giga_galactic_pact_leader
				save_global_event_target_as = giga_galactic_pact_president
				set_timed_country_flag = { flag = ai_no_leave_fed days = 10800 }
				if = {
					limit = { has_federation = yes }
					leave_alliance = { override_requirements = yes }
				}
			}
			else = { set_country_flag = giga_galactic_pact_member }
		}

		# Form a Federation
		random_country = {
			limit = { has_country_flag = giga_galactic_pact_member }
			remove_country_flag = giga_galactic_pact_member
			set_timed_country_flag = { flag = ai_no_leave_fed days = 10800 }
			join_alliance = {
				who = event_target:giga_galactic_pact_president
				name = "Galactic Defense Pact"
				override_requirements = yes
			}

			federation = {
				set_federation_flag = giga_galactic_pact
				if = {
					limit = { has_federation_perk = cohesion_join_1 }
					add_cohesion = 50
				}
				else = { add_cohesion = 100 }
				add_federation_experience = 5600
			}
		}

		# Everyone else joins the federation
		every_country = {
			limit = { has_country_flag = giga_galactic_pact_member }
			set_timed_country_flag = { flag = ai_no_leave_fed days = 10800 }
			join_alliance = {
				who = event_target:giga_galactic_pact_president
				override_requirements = yes
			}

			federation = {
				if = {
					limit = { has_federation_perk = cohesion_join_1 }
					add_cohesion = 50
				}
				else = { add_cohesion = 100 }
				add_federation_experience = 150
			}

			if = {
				limit = { is_at_war = yes }
				every_war = { remove_war_participant = prev }
			}
		}

		# End all rivalries.
		federation = {
			every_member = {
				if = {
					limit = { federation = { any_member = { is_rival = prevprev } } }
					federation = {
						every_member = {
							limit = { is_rival = prevprev }
							end_rivalry = prevprev
						}
					}
				}
			}
		}
	}
}

# Message from the Galactic Federation
country_event = {
	id = giga_fed.3006
	title = "giga_fed.3006.name"
	desc = "giga_fed.3006.desc"
	diplomatic = yes
	is_triggered_only = yes
	picture_event_data = {
		portrait = event_target:giga_galactic_pact_president
		room = event_target:giga_galactic_pact_president.ruler
	}
	option = { name = "giga_fed.3006.a" }
	option = { name = "giga_fed.3006.b" }
	option = { name = "giga_fed.3006.c" }
	option = { name = "giga_fed.3006.d" }
}

# The Federation Attacks
country_event = {
	id = giga_fed.3012
	title = "giga_fed.3012.name"
	desc = "giga_fed.3012.desc"
	diplomatic = yes
	is_triggered_only = yes
	picture_event_data = {
		portrait = event_target:pangalactic_federation_country
		room = event_target:pangalactic_federation_country.ruler
	}

	immediate = {
		event_target:pangalactic_federation_country = {
			declare_war = {
				target = root
				attacker_war_goal = "wg_end_threat_hyperweapon"
			}
		}
	}

	option = { name = "giga_fed.3012.a" }
}

#############################################################################################################################################
### Galactic Hyperstate #####################################################################################################################
#############################################################################################################################################
country_event = {
	id = giga_fed.4000
	title = "giga_fed.4010.name"
	desc = "giga_fed.4010.desc"
	show_sound = event_celebration
	picture = GFX_evt_galactic_community
	is_triggered_only = yes
	option = { name = "giga_fed.4010.a"	hidden_effect = { country_event = { id = giga_fed.4011 days = 5 } } }

	immediate = {
		# Establish members
		every_country = {
			limit = {
				NOR = {
					has_overlord = root
					has_defensive_pact = root
					is_country = root
					is_in_federation_with = root
					is_country_type = ai_empire
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_machine_terminator
				}
				ehof_default_country = yes
				is_ai = yes
			}
			set_country_flag = giga_galactic_pact_member
		}

		# FE President?
		if = {
			limit = {
				any_country = {
					has_country_flag = giga_galactic_pact_member
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					NOT = { has_ethic = ethic_fanatic_xenophobe }
				}
			}
			random_country = {
				limit = {
					has_country_flag = giga_galactic_pact_member
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					NOT = { has_ethic = ethic_fanatic_xenophobe }
				}
				remove_country_flag = giga_galactic_pact_member
				set_country_flag = giga_galactic_pact_leader
				save_global_event_target_as = giga_galactic_pact_president
				set_timed_country_flag = { flag = ai_no_leave_fed days = 10800 }
				if = {
					limit = { has_federation = yes }
					leave_alliance = { override_requirements = yes }
				}
			}
		}

		# Non Xenophobe President?
		else_if = {
			limit = {
				any_country = {
					has_country_flag = giga_galactic_pact_member
					NOT = { has_ethic = ethic_fanatic_xenophobe }
				}
			}
			random_country = {
				limit = {
					has_country_flag = giga_galactic_pact_member
					NOT = { has_ethic = ethic_fanatic_xenophobe }
				}
				remove_country_flag = giga_galactic_pact_member
				set_country_flag = giga_galactic_pact_leader
				save_global_event_target_as = giga_galactic_pact_president
				set_timed_country_flag = { flag = ai_no_leave_fed days = 10800 }
				if = {
					limit = { has_federation = yes }
					leave_alliance = { override_requirements = yes }
				}
			}
		}

		# Any President?
		else = {
			random_country = {
				limit = { has_country_flag = giga_galactic_pact_member }
				remove_country_flag = giga_galactic_pact_member
				set_country_flag = giga_galactic_pact_leader
				save_global_event_target_as = giga_galactic_pact_president
				set_timed_country_flag = { flag = ai_no_leave_fed days = 10800 }
				if = {
					limit = { has_federation = yes }
					leave_alliance = { override_requirements = yes }
				}
			}
		}

		# Create Country
		event_target:giga_galactic_pact_president = {
			capital_scope = {
				create_country = {
					name = "Pangalactic Defense League"
					species = event_target:giga_galactic_pact_president.species
					type = default
					civics = {
						civic = civic_giga_common_cause
						civic = civic_against_hyperweapon
					}
					flag = {
						icon = {
							category = "corporate"
							file = "corporate_03.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"purple"
							"purple"
							"null"
							"null"
						}
					}
					authority = auth_oligarchic
					ethos = {
						ethic = ethic_xenophile
						ethic = ethic_fanatic_militarist
					}
					origin = origin_pangalactic
					effect = {
						add_resource = {
							alloys = 500000
							food = 100000
							minerals = 100000
							energy = 100000
							consumer_goods = 100000
							unity = 1000000
						}
						every_galaxy_planet = { set_surveyed = { surveyed = yes surveyor = root } }
						add_modifier = { modifier = "pangalactic_federation" days = -1 }
						save_global_event_target_as = pangalactic_federation_country
						establish_communications_no_message = root
						add_opinion_modifier = { who = root modifier = opinion_giga_galactic_threat }
						set_country_flag = pangalactic_defense_league
						copy_techs_from = { target = event_target:giga_galactic_pact_president }
					}
				}
				set_owner = event_target:pangalactic_federation_country
				set_capital = yes
			}
		}

		# Invite other members
		random_country = {
			limit = {
				has_country_flag = giga_galactic_pact_member
				is_gestalt = no
			}
			remove_country_flag = giga_galactic_pact_member
			country_event = { id = giga_fed.4003 days = 5 }
		}
	}
}

# Every 5 days merge another member.
country_event = {
	id = giga_fed.4003
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			has_country_flag = giga_galactic_pact_member
			is_gestalt = no
		}
	}

	immediate = {
		every_owned_fleet = {	set_owner = event_target:pangalactic_federation_country }
		every_owned_leader = {	set_owner = event_target:pangalactic_federation_country }
		every_owned_army = {	set_owner = event_target:pangalactic_federation_country }
		every_owned_planet = {
			set_owner = event_target:pangalactic_federation_country
			set_controller = event_target:pangalactic_federation_country
		}
		event_target:pangalactic_federation_country = { steal_relic = { target = prev relic = all } }

		if = {
			limit = {
				NOT = {
					any_country = {
						has_country_flag = giga_galactic_pact_member
						is_gestalt = no
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = giga_galactic_pact_member
					is_gestalt = yes
				}
				remove_country_flag = giga_galactic_pact_member
				country_event = { id = giga_fed.4004 days = 5 }
			}
		}
		else = {
			random_country = {
				limit = {
					has_country_flag = giga_galactic_pact_member
					is_gestalt = no
				}
				remove_country_flag = giga_galactic_pact_member
				country_event = { id = giga_fed.4003 days = 5 }
			}
		}
	}
}

# Galactic federation! vassalize gestalts
country_event = {
	id = giga_fed.4004
	hide_window = yes
	is_triggered_only = yes
	trigger = { any_country = { has_country_flag = giga_galactic_pact_member } }

	immediate = {
		set_subject_of = {
			who = event_target:pangalactic_federation_country
			subject_type = vassal
		}

		random_country = {
			limit = {
				has_country_flag = giga_galactic_pact_member
				is_gestalt = yes
			}
			remove_country_flag = giga_galactic_pact_member
			country_event = { id = giga_fed.4004 days = 5 }
		}
	}
}

# Message to QSO owner from hyperstate
country_event = {
	id = giga_fed.4011
	title = "giga_fed.4011.name"
	desc = "giga_fed.4011.desc"
	diplomatic = yes
	is_triggered_only = yes
	picture_event_data = {
		portrait = event_target:pangalactic_federation_country
		room = event_target:pangalactic_federation_country.ruler
	}

	immediate = {
		every_country = { #terminate weak genocidals
			limit = {
				OR = {
					relative_power = {
						who = event_target:pangalactic_federation_country
						category = fleet
						value = inferior
					}
					relative_power = {
						who = event_target:pangalactic_federation_country
						category = fleet
						value = pathetic
					}
				}
				OR = {
					has_valid_civic = civic_machine_terminator
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
				}
				is_ai = yes
			}
			country_event = { id = giga_fed.4005 days = 30 }
		}
	}

	option = { name = "giga_fed.4011.a" }
}

# Remove weak genocidal empires
country_event = {
	id = giga_fed.4005
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:pangalactic_federation_country = {
			declare_war = {
				target = root
				attacker_war_goal = "wg_end_threat"
			}
		}
	}
}

# The federation attacks!
country_event = {
	id = giga_fed.4012
	title = "giga_fed.4012.name"
	desc = "giga_fed.4012.desc"
	location = fromfrom
	diplomatic = yes
	is_triggered_only = yes
	picture_event_data = {
		portrait = event_target:pangalactic_federation_country
		room = event_target:pangalactic_federation_country.ruler
	}

	immediate = {
		event_target:pangalactic_federation_country = {
			declare_war = {
				target = root
				attacker_war_goal = "wg_end_threat_hyperweapon"
			}
		}
	}

	option = { name = "giga_fed.4012.a" }
}