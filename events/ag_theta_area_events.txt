namespace = ag_theta

# on_entering_system_fleet, Notification for entering the Theta Area
fleet_event = {
	id = ag_theta.1
	title = "ag_theta.1.name"
	desc = "ag_theta.1.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ruined_system_room }
	show_sound = event_mystic_reveal_light
	location = root
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			has_star_flag = ag_ancient_theta_system
		}
		owner = {
			is_ai = no
			NOT = {
				has_country_flag = ag_theta_area_entered
			}
		}
		NOT = {
			any_country = {
				has_country_flag = ag_ancient_theta_megastructure_explored
			}
		}
	}
	
    immediate = {
		from = { save_event_target_as = ag_theta_area_system }
		owner = {
			set_country_flag = ag_theta_area_entered
			remove_point_of_interest = ag_ancient_theta_area_entry
			ag_refresh_ancient_system_poi = { ag_system_id = ag_ancient_theta_area }
		}
	}
	
	option = {
		name = "ag_theta.1.a"
	}
}

# on_survey, Enable special project for the ancient station
ship_event = {
	id = ag_theta.2
	title = "ag_theta.2.name"
	desc = "ag_theta.2.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_ancient_theta_star
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_ancient_theta_star
		from = { is_same_value = event_target:ag_ancient_theta_star }
		owner = {
			is_ai = no
			NOT = { has_country_flag = ag_theta_2_fired }
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = ag_theta_2_fired
		}
	}
	
	option = {
		name = "ag_theta.2.a"
		owner = {
			enable_special_project = {
				name = "ag_ancient_theta_station_explore"
				location = event_target:ag_ancient_station_large
				owner = root.owner
			}
		}
	}
}

# Triggered when special project completed
ship_event = {
	id = ag_theta.3
	title = "ag_theta.3.name"
	desc = "ag_theta.3.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	location = root
	
	is_triggered_only = yes
	
	immediate = {
		owner = {
			set_country_flag = ag_ancient_theta_megastructure_explored
		}
	}
	
	option = {
		name = "ag_theta.3.a"
	}
}

# Set technology flag, allows to research technology: Ancient Shield Analysis
country_event = {
	id = ag_theta.4
	title = "ag_theta.4.name"
	desc = "ag_theta.4.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	
	immediate = { set_country_flag = ag_ancient_shield_research_1_available }

	option = {
		name = "ag_theta.4.a"
		ag_add_research_option = { ag_tech = tech_ag_ancient_shield_1 }
	}
}

# on_survey, give situation of ancient shields
ship_event = {
	id = ag_theta.5
	title = "ag_theta.5.name"
	desc = "ag_theta.5.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ship_in_orbit_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_ancient_theta_shielded_world
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_ancient_theta_shielded_world
		from = { is_same_value = event_target:ag_ancient_theta_shielded_world }
		owner = { is_ai = no NOT = { has_country_flag = ag_theta_5_fired } }
	}
	
	immediate = { owner = { set_country_flag = ag_theta_5_fired } }
	
	option = {
		name = "ag_theta.5.a"
		owner = { start_situation = {
			type = "ag_ancient_shield_situation"
			target = capital_scope
		} }
	}
}

# Set technology flag, allows to research technology: Warp Shield Theory
country_event = {
	id = ag_theta.12
	title = "ag_theta.12.name"
	desc = "ag_theta.12.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	
	immediate = { set_country_flag = ag_ancient_shield_research_2_available }

	option = {
		name = "ag_theta.12.a"
		ag_add_research_option = { ag_tech = tech_ag_ancient_shield_2 }
	}
}

# on_tech_increased, Gives Special Project to unlock ancient shield
country_event = {
	id = ag_theta.21
	title = "ag_theta.21.name"
	desc = "ag_theta.21.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_shielded_planet_room }
	show_sound = event_alien_signal
	is_triggered_only = yes
	after = { hidden_effect = { remove_country_flag = ag_theta_21_mutex } }
	option = {
		name = "ag_theta.21.a"
		custom_tooltip = "ag_theta.21.a.tooltip"
		hidden_effect = { ag_give_research_project = { ag_project_id = @ag_disable_ancient_shield_project_id ag_progress = 2.5 } }
	}
}
# Ancient Shield unlocked
country_event = {
	id = ag_theta.22
	title = "ag_theta.22.name"
	desc = "ag_theta.22.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_frozen_planet_room }
	show_sound = event_power_down
	
	is_triggered_only = yes
	
	immediate = {
		set_country_flag = ag_warship_graveyard_site_discovered
		set_global_flag = ag_ancient_frozen_shield_unlocked
		event_target:ag_primitive_shielded_moon = {
			ag_change_pc = { ag_planet_class = pc_frozen }
			set_planet_entity = {
				entity = "ag_ancient_frozen_planet_unshielded_entity"
			}
			remove_modifier = ag_ancient_shield_deposit_blue
			remove_deposit = ag_ancient_shield_deposit_blue
			if = {
				limit = { has_research_station = yes }
				research_station = { dismantle = yes }
				# random_research_station = { dismantle = yes }
			}
		}
	}
	
	option = {
		name = "ag_theta.22.a"
		event_target:ag_primitive_shielded_moon = {
			create_archaeological_site = ag_warship_graveyard_site
		}
	}
}

# Archaeology Site: Iced City
# Stage 1
fleet_event = {
	id = ag_theta.31
	title = "ag_theta.31.name"
	desc = "ag_theta.31.desc"
	picture = GFX_evt_outpost
	show_sound = event_dig_site
	
	archaeology = yes

	is_triggered_only = yes
	
	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no } 
	}
	
	option = {
		name = "ag_theta.31.a"
		small_artifact_reward = yes
	}
}
# Stage 2
fleet_event = {
	id = ag_theta.32
	title = "ag_theta.32.name"
	desc = "ag_theta.32.desc"
	picture = GFX_evt_in_the_dark
	show_sound = event_dig_site
	
	archaeology = yes

	is_triggered_only = yes
	
	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no } 
	}
	
	option = {
		name = "ag_theta.32.a"
		small_artifact_reward = yes
	}
}
# Stage 3
fleet_event = {
	id = ag_theta.33
	title = "ag_theta.33.name"
	desc = "ag_theta.33.desc"
	picture = GFX_evt_underground_city
	show_sound = event_finding_loot
	
	archaeology = yes

	is_triggered_only = yes
	
	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no } 
	}
	
	option = {
		name = "ag_theta.33.a"
		small_artifact_reward = yes
	}
}
# Stage 4
fleet_event = {
	id = ag_theta.34
	title = "ag_theta.34.name"
	desc = "ag_theta.34.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_finding_loot
	
	archaeology = yes

	is_triggered_only = yes
	
	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no } 
	}
	
	option = {
		name = "ag_theta.34.a"
		small_artifact_reward = yes
	}
}
# Stage 5
fleet_event = {
	id = ag_theta.35
	title = "ag_theta.35.name"
	desc = "ag_theta.35.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_finding_loot
	
	archaeology = yes

	is_triggered_only = yes
	
	immediate = {
		from = { set_site_progress_locked = yes }
	}

	after = {
		from = { set_site_progress_locked = no } 
	}
	
	option = {
		name = "ag_theta.35.a"
		small_artifact_reward = yes
	}
}
# Stage 6
fleet_event = {
	id = ag_theta.36
	title = "ag_theta.36.name"
	desc = "ag_theta.36.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_finding_loot
	
	archaeology = yes

	is_triggered_only = yes
	
	immediate = {
		from = { set_site_progress_locked = yes }
		fromfrom.planet = {
			add_deposit = ag_ancient_frozen_world_deposit
		}
		set_global_flag = ag_theta_36_fired
	}

	after = {
		from = { set_site_progress_locked = no } 
	}
	
	option = {
		name = "ag_theta.36.a"
		custom_tooltip = "ag_theta.36.a.tooltip"
		hidden_effect = {
			owner = {
				create_fleet = {
					name = "NAME_ag_experiment_ship_fleet"
					settings = {
						spawn_debris = no
					}
					effect = {
						set_owner = prev
						create_ship = {
							name = "NAME_ag_experiment_ship_ship"
							design = "NAME_ag_experiment_ship"
							prefix = no
							effect = {
								if = {
									limit = { exists = event_target:ag_ancient_starfish_ship }
									clear_global_event_target = ag_ancient_starfish_ship
								}
								save_global_event_target_as = ag_ancient_starfish_ship
								ag_difficulty_bonus = yes
								set_ship_flag = ag_experiment_ship_damaged
								add_modifier = {
									modifier = "ag_seriously_damaged_ship"
									days = -1
								}
							}
						}
						set_location = {
							target = root.fromfrom.planet
							distance = 0
							angle = random
						}
					}
				}
			}
		}
	}
	option = {
		name = "ag_theta.36.b"
		owner = {
			add_resource = {
				influence = @ag_end_event_influence_medium
			}
		}
	}
}

# Give Special Project to repair Starfish's Prototype Ship
country_event = {
	id = ag_theta.40
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_global_flag = ag_theta_36_fired NOT = { has_global_flag = ag_theta_40_fired } }
	immediate = {
		random_list = {
			75 = { }
			25 = {
				random_playable_country = {
					limit = {
						has_technology = "tech_global_research_initiative"
						has_technology = "tech_basic_science_lab_3"
						has_technology = "tech_space_science_5"
						has_technology = "tech_physics_3"
						has_technology = "tech_titans"
						any_controlled_ship = {
							is_ship_size = ag_experiment_ship
							has_ship_flag = ag_experiment_ship_damaged
						}
					}
					save_event_target_as = ag_theta_41_target_country
				}
				if = {
					limit = { exists = event_target:ag_theta_41_target_country }
					set_global_flag = ag_theta_40_fired
					event_target:ag_theta_41_target_country = { country_event = { id = ag_theta.41 days = 30 random = 30 } }
				}
			}
		}
		reroll_random = yes
	}
}
country_event = {
	id = ag_theta.41
	title = "ag_theta.41.name"
	desc = "ag_theta.41.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = {
		name = "ag_theta.41.a"
		hidden_effect = { ag_give_research_project = { ag_project_id = @ag_repair_starfish_ship_project_id ag_progress = 8 } }
	}
	option = {
		name = "ag_theta.41.b"
		add_resource = { alloys = 6000 minerals = 2500 }
	}
}
# Starfish's Prototype Ship repaired
country_event = {
	id = ag_theta.42
	title = "ag_theta.42.name"
	desc = "ag_theta.42.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	
	is_triggered_only = yes
	immediate = { country_event = { id = ag_theta.200 days = 480 random = 480 } }
	
	option = {
		name = "ag_theta.42.a"
		hidden_effect = {
			random_controlled_ship = {
				limit = {
					is_ship_size = ag_experiment_ship
					has_ship_flag = ag_experiment_ship_damaged
				}
				remove_modifier = "ag_seriously_damaged_ship"
				remove_ship_flag = ag_experiment_ship_damaged
			}
			clear_global_event_target = ag_ancient_starfish_ship
		}
	}
}

# on_monthly_pulse, Triggers for Starfish Fleet invasion
event = {
	id = ag_theta.50
	hide_window = yes

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		has_global_flag = ag_theta_36_fired
		any_country = {
			any_planet_within_border = {
				is_same_value = event_target:ag_primitive_shielded_moon
				has_research_station = yes
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				any_planet_within_border = {
					is_same_value = event_target:ag_primitive_shielded_moon
					has_research_station = yes
				}
			}
			country_event = { id = ag_theta.51 }
		}
		event_target:global_event_country = { country_event = { id = ag_theta.520 days = 60 } }
	}
}

# Notification for Starfish Fleet invasion 1
country_event = {
	id = ag_theta.51
	title = "ag_theta.51.name"
	desc = "ag_theta.51.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_frozen_planet_room }
	show_sound = event_sensor_ping
	location = event_target:ag_primitive_shielded_moon
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = ag_theta_51_fired
		save_global_event_target_as = ag_target_country
		country_event = { id = ag_theta.52 days = 60 }
	}
	
	option = {
		name = "ag_theta.51.a"
	}
}

country_event = {
	id = ag_theta.520
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:ag_primitive_shielded_moon = {
			ag_spawn_explosion_effect = { ag_scale = xl ag_color = orange }
			ag_change_pc = { ag_planet_class = pc_shattered }
			clear_deposits = yes
			add_deposit = d_minerals_4
			add_deposit = d_minerals_4
			add_deposit = d_minerals_4
			add_deposit = d_minerals_4
			if = {
				limit = { has_research_station = yes }
				research_station = { dismantle = yes }
				# random_research_station = { dismantle = yes }
			}
		}
	}
}

# Notification for Starfish Fleet invasion 2
country_event = {
	id = ag_theta.52
	title = "ag_theta.52.name"
	desc = "ag_theta.52.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ship_in_orbit_room }
	show_sound = event_activating_unknown_technology
	location = event_target:ag_primitive_shielded_moon
	
	is_triggered_only = yes

	immediate = { country_event = { id = ag_theta.53 days = 5 } }
	
	option = {
		name = "ag_theta.52.a"
	}
}

# Starfish Fleet invasion happens
country_event = {
	id = ag_theta.53
	title = "ag_theta.53.name"
	desc = "ag_theta.53.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_fleet_evil_room }
	show_sound = event_red_alert
	location = capital_scope
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = ag_ancient_primitive_crisis_happened
		save_event_target_as = ag_source_country
		if = {
			limit = {
				any_system_within_border = {
					NOT = {
						any_system_planet = {
							is_colony = yes
						}
					}
					any_neighbor_system = {
						any_system_planet = {
							is_colony = yes
						}
					}
				}
			}
			random_system_within_border = {
				limit = {
					NOT = {
						any_system_planet = {
							is_colony = yes
						}
					}
					any_neighbor_system = {
						any_system_planet = {
							is_colony = yes
						}
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_1
				}
			}
		}
		else_if = {
			limit = {
				any_system_within_border = {
					NOT = {
						any_system_planet = {
							is_colony = yes
						}
					}
				}
			}
			random_system_within_border = {
				limit = {
					NOT = {
						any_system_planet = {
							is_colony = yes
						}
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_1
				}
			}
		}
		else_if = {
			limit = { always = yes }
			random_system_within_border = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_1
				}
			}
		}
		if = {
			limit = {
				any_system_within_border = {
					NOT = {
						any_system_planet = {
							OR = {
								is_colony = yes
								is_same_value = event_target:ag_target_location_1
							}
						}
					}
					any_neighbor_system = {
						any_system_planet = {
							is_colony = yes
						}
						NOT = {
							any_system_planet = {
								is_same_value = event_target:ag_target_location_1
							}
						}
					}
				}
			}
			random_system_within_border = {
				limit = {
					NOT = {
						any_system_planet = {
							OR = {
								is_colony = yes
								is_same_value = event_target:ag_target_location_1
							}
						}
					}
					any_neighbor_system = {
						any_system_planet = {
							is_colony = yes
						}
						NOT = {
							any_system_planet = {
								is_same_value = event_target:ag_target_location_1
							}
						}
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_2
				}
			}
		}
		else_if = {
			limit = {
				any_system_within_border = {
					NOT = {
						any_system_planet = {
							OR = {
								is_colony = yes
								is_same_value = event_target:ag_target_location_1
							}
						}
					}
				}
			}
			random_system_within_border = {
				limit = {
					NOT = {
						any_system_planet = {
							OR = {
								is_colony = yes
								is_same_value = event_target:ag_target_location_1
							}
						}
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_2
				}
			}
		}
		else_if = {
			limit = { always = yes }
			random_system_within_border = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_2
				}
			}
		}
		if = {
			limit = {
				any_system_within_border = {
					NOT = {
						any_system_planet = {
							OR = {
								is_colony = yes
								is_same_value = event_target:ag_target_location_1
								is_same_value = event_target:ag_target_location_2
							}
						}
					}
					any_neighbor_system = {
						any_system_planet = {
							is_colony = yes
						}
						NOT = {
							any_system_planet = {
								is_same_value = event_target:ag_target_location_1
								is_same_value = event_target:ag_target_location_2
							}
						}
					}
				}
			}
			random_system_within_border = {
				limit = {
					NOT = {
						any_system_planet = {
							OR = {
								is_colony = yes
								is_same_value = event_target:ag_target_location_1
								is_same_value = event_target:ag_target_location_2
							}
						}
					}
					any_neighbor_system = {
						any_system_planet = {
							is_colony = yes
						}
						NOT = {
							any_system_planet = {
								is_same_value = event_target:ag_target_location_1
								is_same_value = event_target:ag_target_location_2
							}
						}
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_3
				}
			}
		}
		else_if = {
			limit = {
				any_system_within_border = {
					NOT = {
						any_system_planet = {
							OR = {
								is_colony = yes
								is_same_value = event_target:ag_target_location_1
								is_same_value = event_target:ag_target_location_2
							}
						}
					}
				}
			}
			random_system_within_border = {
				limit = {
					NOT = {
						any_system_planet = {
							OR = {
								is_colony = yes
								is_same_value = event_target:ag_target_location_1
								is_same_value = event_target:ag_target_location_2
							}
						}
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_3
				}
			}
		}
		else_if = {
			limit = { always = yes }
			random_system_within_border = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = ag_target_location_3
				}
			}
		}
		create_country = {
			name = "NAME_ag_ancient_primitive_country"
			type = ag_ancient_primitive_crisis
			flag = {
				icon={
					category = "pointy"
					file = "flag_pointy_15.dds"
				}
				background={
					category = "backgrounds"
					file = "rounded_middle.dds"
				}
				colors={
					"yellow"
					"green"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			set_country_flag = ag_ancient_empire_mod_country
			save_global_event_target_as = ag_ancient_primitive_country
			set_country_flag = ag_ancient_primitive_country
			set_graphical_culture = fallen_empire_04
			create_fleet = {
				name = "NAME_ag_ancient_primitive_country_fleet"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_primitive_country
					set_fleet_flag = ag_ancient_primitive_country_fleet_1
					set_fleet_bombardment_stance = ag_ancient_primitive_bombardment
					ag_ancient_primitive_country_ships = yes
					fleet_event = { id = ag_theta.56 days = 1 random = 1 }
					set_location = {
						target = event_target:ag_target_location_1
						distance = 45
						angle = random 
					}
				}
			}
			create_fleet = {
				name = "NAME_ag_ancient_primitive_country_fleet"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_primitive_country
					set_fleet_flag = ag_ancient_primitive_country_fleet_2
					set_fleet_bombardment_stance = ag_ancient_primitive_bombardment
					ag_ancient_primitive_country_ships = yes
					fleet_event = { id = ag_theta.56 days = 1 random = 1 }
					set_location = {
						target = event_target:ag_target_location_2
						distance = 45
						angle = random 
					}
				}
			}
			create_fleet = {
				name = "NAME_ag_ancient_primitive_country_fleet"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_primitive_country
					set_fleet_flag = ag_ancient_primitive_country_fleet_3
					set_fleet_bombardment_stance = ag_ancient_primitive_bombardment
					ag_ancient_primitive_country_ships = yes
					fleet_event = { id = ag_theta.56 days = 1 random = 1 }
					set_location = {
						target = event_target:ag_target_location_3
						distance = 45
						angle = random 
					}
				}
			}
		}
		every_country = {
			establish_communications_no_message = event_target:ag_ancient_primitive_country
		}
		every_country = {
			limit = {
				NOR = {
					is_same_value = event_target:ag_source_country
					has_country_flag = ag_ancient_primitive_country
				}
			}
			country_event = { id = ag_theta.54 }
		}
	}
	
	option = {
		name = "ag_theta.53.a"
	}
}

# Notification for Starfish Remanent Fleets' attack, to other country
country_event = {
	id = ag_theta.54
	title = "ag_theta.54.name"
	desc = {
		trigger = {
			NOT = {
				has_communications = event_target:ag_source_country
			}
		}
		text = "ag_theta.54.a.desc"
	}
	desc = {
		trigger = {
			has_communications = event_target:ag_source_country
			OR = {
				is_protective_to = event_target:ag_source_country
				is_friendly_to = event_target:ag_source_country
				is_loyal_to = event_target:ag_source_country
			}
		}
		text = "ag_theta.54.b.desc"
	}
	desc = {
		trigger = {
			has_communications = event_target:ag_source_country
			NOR = {
				is_protective_to = event_target:ag_source_country
				is_friendly_to = event_target:ag_source_country
				is_loyal_to = event_target:ag_source_country
			}
		}
		text = "ag_theta.54.c.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_fleet_evil_room }
	show_sound = event_yellow_alert
	location = capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = "ag_theta.54.a"
	}
}

# Starfish's fleet select target
fleet_event = {
	id = ag_theta.56
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = { ag_ancient_primitive_fleet_find_target_fleet_action = yes }
}

# on_planet_bombarded, Starfish's fleet conquered planet
planet_event = {
	id = ag_theta.61
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOR = {
			has_planet_flag = ag_pop_transfer_cooldown
			has_planet_flag = ag_ancient_primitive_country_transfer_completed
		}
		exists = event_target:ag_ancient_primitive_country
		from = { is_same_value = event_target:ag_ancient_primitive_country }
	}
	
	immediate = {
		if = {
			limit = {
				any_owned_pop = {
					is_organic_species = yes
					NOT = {
						pop_has_trait = "trait_hive_mind"
					}
					NAND = {
						pop_has_trait = "trait_nerve_stapled"
						pop_has_trait = "trait_syncretic_proles"
						pop_has_trait = "trait_delicious"
					}
				}
			}
			random_list = {
				50 = {
				}
				50 = {
					random_owned_pop = {
						limit = {
							is_organic_species = yes
							NOT = {
								has_trait = "trait_hive_mind"
							}
							NAND = {
								has_trait = "trait_nerve_stapled"
								has_trait = "trait_syncretic_proles"
								has_trait = "trait_delicious"
							}
						}
						if = {
							limit = {
								NOT = {
									pop_has_trait = "trait_nerve_stapled"
								}
							}
							modify_species = {
								species = this
								add_trait = "trait_nerve_stapled"
							}
						}
						if = {
							limit = {
								NOT = {
									pop_has_trait = "trait_syncretic_proles"
								}
							}
							modify_species = {
								species = this
								add_trait = "trait_syncretic_proles"
							}
						}
						if = {
							limit = {
								NOT = {
									pop_has_trait = "trait_delicious"
								}
							}
							modify_species = {
								species = this
								add_trait = "trait_delicious"
							}
						}
					}
					set_timed_planet_flag = {
						flag = ag_pop_transfer_cooldown
						days = 25
					}
				}
			}
		}
		else_if = {
			limit = {
				num_pops > 0
				NOR = {
					# Have convertible pops
					any_owned_pop = {
						is_organic_species = yes
						NOT = {
							pop_has_trait = "trait_hive_mind"
						}
						NAND = {
							pop_has_trait = "trait_nerve_stapled"
							pop_has_trait = "trait_syncretic_proles"
							pop_has_trait = "trait_delicious"
						}
					}
					# Have inconvertible pops
					any_owned_pop = {
						OR = {
							is_organic_species = no
							pop_has_trait = "trait_hive_mind"
						}
					}
				}
			}
			set_planet_flag = ag_ancient_primitive_country_transfer_completed
			owner = {
				country_event = { id = ag_theta.62 }
			}
			set_controller = from
			remove_all_buildings = yes
			remove_all_districts = yes
			add_building = ag_ancient_primitive_control_center
			while = {
				count = 3
				add_building = ag_ancient_primitive_slave_house
			}
			add_planet_devastation = -100
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = {
							is_same_value = root.from
						}
						exists = orbit
						orbit = {
							is_same_value = root
						}
					}
					fleet_event = { id = ag_theta.56 days = 1 random = 1 }
				}
			}
		}
		else_if = {
			limit = {
				num_pops <= 0
			}
			set_planet_flag = ag_ancient_primitive_country_transfer_completed
			owner = {
				country_event = { id = ag_theta.62 }
			}
			remove_all_buildings = yes
			remove_all_districts = yes
			add_planet_devastation = -100
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = {
							is_same_value = root.from
						}
						exists = orbit
						orbit = {
							is_same_value = root
						}
					}
					fleet_event = { id = ag_theta.56 days = 1 random = 1 }
				}
			}
		}
	}
}

# Notification for Starfish's fleet conquered planet
country_event = {
	id = ag_theta.62
	title = "ag_theta.62.name"
	desc = "ag_theta.62.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_city_ruins_room }
	show_sound = event_ghost_town
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = "ag_theta.62.a"
	}
}

# on_planet_bombarded, Starfish's planet reclaimed
planet_event = {
	id = ag_theta.63
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		exists = controller
		exists = event_target:ag_ancient_primitive_country
		controller = { is_same_value = event_target:ag_ancient_primitive_country }
		planet_devastation >= 50
	}
	
	immediate = {
		set_controller = owner
		add_planet_devastation = -100
		remove_all_buildings = yes
		owner = {
			country_event = { id = ag_theta.64 }
		}
		if = {
			limit = {
				owner = {
					NOR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
						is_primitive = yes
					}
				}
			}
			add_building = building_capital
		}
		else_if = {
			limit = {
				owner = {
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
			}
			if = {
				limit = {
					is_capital = yes
				}
				add_building = building_ancient_palace
				add_building = building_fe_stronghold
				add_building = building_fe_dome
				add_building = building_fe_dome
				add_building = building_class_4_singularity
				add_building = building_affluence_center
				add_building = building_nourishment_center
				add_building = building_dimensional_fabricator
				add_building = building_nano_forge
				while = {
					limit = {
						free_district_slots > 0
					}
					switch = {
						trigger = is_planet_class
						pc_ringworld_habitable = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_rw_nexus
							}
						}
						pc_ag_ringworld_ocean = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_ag_ringworld_city = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_ag_ringworld_machine = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_ag_ringworld_gaia = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_ag_ringworld_tropical = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_habitat = {
							add_district = district_hab_housing
						}
						default = {
							if = {
								limit = {
									owner = {
										is_gestalt = no
									}
								}
								add_district = district_city
							}
							else_if = {
								limit = {
									owner = {
										is_hive_empire = yes
									}
								}
								add_district = district_hive
							}
							else_if = {
								limit = {
									owner = {
										is_machine_empire = yes
									}
								}
								add_district = district_nexus
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					always = yes
				}
				add_building = building_ancient_palace
				add_building = building_fe_dome
				while = {
					limit = {
						free_district_slots > 0
					}
					switch = {
						trigger = is_planet_class
						pc_ringworld_habitable = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_rw_nexus
							}
						}
						pc_ag_ringworld_ocean = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_ag_ringworld_city = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_ag_ringworld_machine = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_ag_ringworld_gaia = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_ag_ringworld_tropical = {
							if = {
								limit = { owner = { is_gestalt = no } }
								add_district = district_ag_ancient_rw_city
							}
							else_if = {
								limit = { owner = { is_hive_empire = yes } }
								add_district = district_ag_ancient_rw_hive
							}
							else_if = {
								limit = { owner = { is_machine_empire = yes } }
								add_district = district_ag_ancient_rw_nexus
							}
						}
						pc_habitat = {
							add_district = district_hab_housing
						}
						default = {
							if = {
								limit = {
									owner = {
										is_gestalt = no
									}
								}
								add_district = district_city
							}
							else_if = {
								limit = {
									owner = {
										is_hive_empire = yes
									}
								}
								add_district = district_hive
							}
							else_if = {
								limit = {
									owner = {
										is_machine_empire = yes
									}
								}
								add_district = district_nexus
							}
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				owner = {
					is_primitive = yes
				}
			}
			owner = {
				switch = {
					trigger = has_country_flag
					bronze_age = {
						prev = {
							add_building = building_stone_palace
							add_building = building_primitive_dwellings
						}
					}
					iron_age = {
						prev = {
							add_building = building_stone_palace
							add_building = building_primitive_dwellings
						}
					}
					late_medieval_age = {
						prev = {
							add_building = building_stone_palace
							add_building = building_primitive_dwellings
							add_building = building_primitive_dwellings
						}
					}
					renaissance_age = {
						prev = {
							add_building = building_stone_palace
							add_building = building_primitive_dwellings
							add_building = building_primitive_dwellings
						}
					}
					steam_age = {
						prev = {
							add_building = building_stone_palace
							add_building = building_urban_dwellings
							add_building = building_primitive_factory
							add_building = building_primitive_mine
						}
					}
					industrial_age = {
						prev = {
							add_building = building_primitive_capital
							add_building = building_urban_dwellings
							add_building = building_primitive_factory
							add_building = building_primitive_mine
							add_building = building_primitive_farm
							add_building = building_primitive_power_plant
						}
					}
					machine_age = {
						prev = {
							add_building = building_primitive_capital
							add_building = building_urban_dwellings
							add_building = building_primitive_factory
							add_building = building_primitive_mine
							add_building = building_primitive_farm
							add_building = building_primitive_power_plant
						}
					}
					atomic_age = {
						prev = {
							add_building = building_primitive_capital
							add_building = building_urban_dwellings
							add_building = building_primitive_factory
							add_building = building_primitive_mine
							add_building = building_primitive_farm
							add_building = building_primitive_power_plant
						}
					}
					early_space_age = {
						prev = {
							add_building = building_primitive_capital
							add_building = building_urban_dwellings
							add_building = building_primitive_factory
							add_building = building_primitive_mine
							add_building = building_primitive_farm
							add_building = building_primitive_power_plant
						}
					}
					ag_primitive_age = {
						prev = {
							add_building = ag_class_5_singularity
							add_building = ag_primitive_dwellings
							add_building = ag_primitive_dwellings
							add_building = ag_ancient_structure_primitive
						}
					}
					ag_primitive_age_2 = {
						prev = {
							add_building = ag_class_5_singularity
							add_building = ag_primitive_factory
							add_building = ag_primitive_mine
							add_building = ag_primitive_power_plant
							add_building = ag_primitive_farm
							add_building = ag_urban_dwellings
							add_building = ag_ancient_structure_primitive_2
						}
					}
					default = {
						prev = {
							add_building = building_crude_huts
						}
					}
				}
			}
		}
	}
}

# Notification for Starfish's planet reclaimed
country_event = {
	id = ag_theta.64
	title = "ag_theta.64.name"
	desc = "ag_theta.64.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = "ag_theta.64.a"
	}
}

# on_fleet_auto_move_arrival, Reset target when Starfish's fleet orbiting stars
country_event = {
	id = ag_theta.65
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = ag_ancient_primitive_country
		from = {
			OR = {
				has_fleet_flag = ag_ancient_primitive_country_fleet_1
				has_fleet_flag = ag_ancient_primitive_country_fleet_2
				has_fleet_flag = ag_ancient_primitive_country_fleet_3
			}
		}
		fromfrom = {
			is_star = yes
		}
	}
	
	immediate = {
		from = {
			fleet_event = { id = ag_theta.56 days = 1 random = 1 }
		}
	}
}

# on_monthly_pulse, Failsafe for unexpected bugs or events make Starfish's fleet stoped
event = {
	id = ag_theta.66
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_ancient_primitive_crisis_happened
		NOT = {
			has_global_flag = ag_ancient_primitive_country_destroyed
		}
		any_country = {
			has_country_flag = ag_ancient_primitive_country
		}
	}
	
	immediate = {
		event_target:ag_ancient_primitive_country = {
			every_controlled_fleet = {
				limit = {
					OR = {
						has_fleet_flag = ag_ancient_primitive_country_fleet_1
						has_fleet_flag = ag_ancient_primitive_country_fleet_2
						has_fleet_flag = ag_ancient_primitive_country_fleet_3
					}
					is_fleet_idle = yes
					NAND = {
						exists = orbit
						orbit = {
							NOT = {
								is_star = yes
							}
							exists = controller
							controller = {
								NOT = {
									has_country_flag = ag_ancient_primitive_country
								}
							}
							NOT = {
								has_planet_flag = ag_ancient_primitive_country_transfer_completed
							}
						}
					}
				}
				fleet_event = { id = ag_theta.56 days = 1 random = 1 }
			}
		}
	}
}

# on_fleet_destroyed_perp, A Starfish's fleet destroyed
country_event = {
	id = ag_theta.71
	title = "ag_theta.71.name"
	desc = "ag_theta.71.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	location = fromfrom
	
	is_triggered_only = yes
	
	trigger = {
		from = { has_country_flag = ag_ancient_primitive_country }
		fromfromfrom = {
			OR = {
				has_fleet_flag = ag_ancient_primitive_country_fleet_1
				has_fleet_flag = ag_ancient_primitive_country_fleet_2
				has_fleet_flag = ag_ancient_primitive_country_fleet_3
			}
			NOT = { has_fleet_flag = ag_theta_71_fired }
		}
	}
	
	immediate = {
		if = {
			limit = { fromfromfrom = { NOT = { has_fleet_flag = ag_theta_71_fired } } }
			fromfromfrom = { set_fleet_flag = ag_theta_71_fired }
			create_ambient_object = { type = "ag_ancient_primitive_debris_object" }
			last_created_ambient_object = {
				set_location = {
					target = root.fromfromfrom
					distance = -1
					angle = 233
				}
				if = {
					limit = {
						root.fromfromfrom = { has_fleet_flag = ag_ancient_primitive_country_fleet_1 }
						root = { NOT = { has_special_project = "ag_ancient_primitive_debris_1_project" } }
					}
					if = {
						limit = {
							root.from = {
								NOR = {
									any_controlled_fleet = {
										has_fleet_flag = ag_ancient_primitive_country_fleet_2
									}
									any_controlled_fleet = {
										has_fleet_flag = ag_ancient_primitive_country_fleet_3
									}
								}
							}
						}
						root = { country_event = { id = ag_theta.72 } }
						every_country = {
							limit = {
								NOR = {
									is_same_value = root
									has_country_flag = ag_ancient_primitive_country
								}
							}
							country_event = { id = ag_theta.73 }
						}
						ag_ancient_primitive_country_destroyed_effect = yes
					}
					set_ambient_object_flag = ag_ancient_primitive_debris_1
					enable_special_project = {
						name = "ag_ancient_primitive_debris_1_project"
						location = this
						owner = root
					}
				}
				if = {
					limit = {
						root.fromfromfrom = { has_fleet_flag = ag_ancient_primitive_country_fleet_2 }
						root = { NOT = { has_special_project = "ag_ancient_primitive_debris_2_project" } }
					}
					if = {
						limit = {
							root.from = {
								NOR = {
									any_controlled_fleet = {
										has_fleet_flag = ag_ancient_primitive_country_fleet_1
									}
									any_controlled_fleet = {
										has_fleet_flag = ag_ancient_primitive_country_fleet_3
									}
								}
							}
						}
						root = { country_event = { id = ag_theta.72 } }
						every_country = {
							limit = {
								NOR = {
									is_same_value = root
									has_country_flag = ag_ancient_primitive_country
								}
							}
							country_event = { id = ag_theta.73 }
						}
						ag_ancient_primitive_country_destroyed_effect = yes
					}
					set_ambient_object_flag = ag_ancient_primitive_debris_2
					enable_special_project = {
						name = "ag_ancient_primitive_debris_2_project"
						location = this
						owner = root
					}
				}
				if = {
					limit = {
						root.fromfromfrom = { has_fleet_flag = ag_ancient_primitive_country_fleet_3 }
						root = { NOT = { has_special_project = "ag_ancient_primitive_debris_3_project" } }
					}
					if = {
						limit = {
							root.from = {
								NOR = {
									any_controlled_fleet = {
										has_fleet_flag = ag_ancient_primitive_country_fleet_1
									}
									any_controlled_fleet = {
										has_fleet_flag = ag_ancient_primitive_country_fleet_2
									}
								}
							}
						}
						root = { country_event = { id = ag_theta.72 } }
						every_country = {
							limit = {
								NOR = {
									is_same_value = root
									has_country_flag = ag_ancient_primitive_country
								}
							}
							country_event = { id = ag_theta.73 }
						}
						ag_ancient_primitive_country_destroyed_effect = yes
					}
					set_ambient_object_flag = ag_ancient_primitive_debris_3
					enable_special_project = {
						name = "ag_ancient_primitive_debris_3_project"
						location = this
						owner = root
					}
				}
			}
		}
	}
	
	option = {
		name = "ag_theta.71.a"
	}
}
# Notification for last Starfish's fleet destroyed, for killer
country_event = {
	id = ag_theta.72
	title = "ag_theta.72.name"
	desc = "ag_theta.72.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	
	is_triggered_only = yes
	
	option = {
		name = "ag_theta.72.a"
	}
}
# Notification for last Starfish's fleet destroyed, for others
country_event = {
	id = ag_theta.73
	title = "ag_theta.73.name"
	desc = "ag_theta.73.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	option = {
		name = "ag_theta.73.a"
	}
}

# Starfish's debris 1
ship_event = {
	id = ag_theta.81
	title = "ag_theta.81.name"
	desc = "ag_theta.81.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	location = root
	
	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = ag_ancient_primitive_debris_1
				}
				destroy_ambient_object = this
			}
		}
	}
	
	option = {
		name = "ag_theta.81.a"
		owner = { ag_add_research_option = { ag_tech = tech_ag_anti_penetration } }
		hidden_effect = { ag_ancient_primitive_reward_effect = yes }
	}
}
# Starfish's debris 2
ship_event = {
	id = ag_theta.82
	title = "ag_theta.82.name"
	desc = "ag_theta.82.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	location = root
	
	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = ag_ancient_primitive_debris_2
				}
				destroy_ambient_object = this
			}
		}
	}
	
	option = {
		name = "ag_theta.82.a"
		owner = { ag_add_research_option = { ag_tech = tech_ag_weapon_debuff } }
		hidden_effect = { ag_ancient_primitive_reward_effect = yes }
	}
}
# Starfish's debris 3
ship_event = {
	id = ag_theta.83
	title = "ag_theta.83.name"
	desc = "ag_theta.83.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	location = root
	
	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = ag_ancient_primitive_debris_3
				}
				destroy_ambient_object = this
			}
		}
	}
	
	option = {
		name = "ag_theta.83.a"
		owner = { ag_add_research_option = { ag_tech = tech_ag_ship_debuff } }
		hidden_effect = { ag_ancient_primitive_reward_effect = yes }
	}
}

# on_ship_destroyed_victim, give Starfish fleet's weakness research project if player lost too many ships
country_event = {
	id = ag_theta.91
	hide_window = yes
	
	is_triggered_only = yes
	trigger = {
		from = {
			is_country_type = ag_ancient_primitive_crisis
			has_country_flag = ag_ancient_primitive_country
		}
		is_ai = no
		NOR = {
			has_global_flag = ag_ancient_primitive_country_destroyed
			has_country_flag = ag_has_ancient_primitive_country_weakness
		}
	}
	
	immediate = {
		if = {
			limit = { check_variable = { which = ag_ancient_primitive_country_killcount value = 1 } }
			set_variable = { which = ag_ancient_primitive_country_killcount value = 1 }
		}
		fromfrom = { root = { ag_hostile_kill_counter = { ag_variable_name = ag_ancient_primitive_country_killcount } } }
		if = {
			limit = {
				check_variable = { which = ag_ancient_primitive_country_killcount value = 512 }
				NOR = {
					has_global_flag = ag_ancient_primitive_country_destroyed
					has_country_flag = ag_has_ancient_primitive_country_weakness
				}
			}
			set_variable = { which = ag_ancient_primitive_country_killcount value = 512 }
			random_list = {
				25 = {
					country_event = { id = ag_theta.92 days = 30 random = 30 }
					set_country_flag = ag_has_ancient_primitive_country_weakness
				}
				75 = { }
			}
			reroll_random = yes
		}
	}
}
country_event = {
	id = ag_theta.92
	title = "ag_theta.92.name"
	desc = "ag_theta.92.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_sabotaged_ship_room }
	show_sound = event_yellow_alert
	
	is_triggered_only = yes
	trigger = { NOT = { has_global_flag = ag_ancient_primitive_country_destroyed } }
	
	option = {
		name = "ag_theta.92.a"
		enable_special_project = {
			name = "ag_find_ancient_primitive_country_weakness"
			location = capital_scope
			owner = root
		}
	}
	option = {
		name = "ag_theta.92.b"
		add_resource = { influence = @ag_end_event_influence_large }
	}
}
country_event = {
	id = ag_theta.93
	title = "ag_theta.93.name"
	desc = "ag_theta.93.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	
	is_triggered_only = yes

	option = {
		name = "ag_theta.93.a"
		if = {
			limit = { NOT = { has_modifier = ag_ancient_primitive_country_weakness } }
			add_modifier = { modifier = ag_ancient_primitive_country_weakness days = -1 }
		}
	}
}

# on_yearly_pulse_country, Enable special project to unlock ancient shield in Theta Area when all Starfish's fleet destroyed
country_event = {
	id = ag_theta.101
	title = "ag_theta.101.name"
	desc = "ag_theta.101.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_ancient_theta_shielded_world
	
	is_triggered_only = yes
	immediate = { set_country_flag = ag_theta_101_fired }
	
	option = {
		name = "ag_theta.101.a"
		enable_special_project = {
			name = "ag_ancient_ringworld_shield_unlock"
			location = event_target:ag_ancient_theta_shielded_world
			owner = root
		}
	}
}

# Finished special project, ringworld unlocked
ship_event = {
	id = ag_theta.102
	title = "ag_theta.102.name"
	desc = "ag_theta.102.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_fallen_empire_room }
	show_sound = event_power_down
	location = event_target:ag_ancient_theta_shielded_world
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = ag_theta_102_fired
		event_target:ag_ancient_theta_shielded_world = {
			clear_deposits = yes
			if = { limit = { has_research_station = yes } research_station = { dismantle = yes } }
			ag_change_pc = { ag_planet_class = pc_ag_ringworld_machine }
			ag_set_ancient_ringworld = {
				ag_picture = pc_nuked
				ag_color = red
				ag_type = habitable
				ag_surface_type = tomb
				ag_generate_ruins = yes
			}
			add_modifier = { modifier = "ag_ancient_theta_ringworld_debuff" days = -1 }
		}
	}
	
	after = { hidden_effect = {
		every_country = {
			limit = { has_special_project = ag_ancient_ringworld_shield_unlock }
			abort_special_project = {
				type = "ag_ancient_ringworld_shield_unlock"
				location = event_target:ag_ancient_theta_shielded_world
			}
		}
	} }

	option = { name = "ag_theta.102.a" }
}

# on_colonized, Colonized Theta Area's ringworld
planet_event = {
	id = ag_theta.111
	title = "ag_theta.111.name"
	desc = "ag_theta.111.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_tomb_world_room }
	location = event_target:ag_ancient_theta_shielded_world
	
	is_triggered_only = yes
	trigger = {
		NOT = { has_planet_flag = ag_theta_111_fired }
		is_same_value = event_target:ag_ancient_theta_shielded_world
	}
	immediate = {
		set_planet_flag = ag_theta_111_fired
		if = {
			limit = { owner = {
				NOT = { has_relic = r_rubricator }
				resource_stockpile_compare = { resource = minor_artifacts value < 25 }
				resource_income_compare = { resource = minor_artifacts value <= 0 }
			} }
			planet_event = { id = ag_theta.401 days = 180 random = 180 }
		}
		else = {
			random_list = {
				50 = { }
				50 = { planet_event = { id = ag_theta.401 days = 180 random = 180 } }
			}
			reroll_random = yes
		}
	}

	option = {
		name = "ag_theta.111.a"
		owner = { start_situation = { type = "ag_theta_situation" target = root } }
	}
}

# on_monthly_pulse, Effects on other megastructures
country_event = {
	id = ag_theta.121
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { OR = {
		is_megastructure_type = ag_ancient_astronomy_station
		is_megastructure_type = think_tank_3
		is_megastructure_type = think_tank_4
		is_megastructure_type = think_tank_restored
		is_megastructure_type = strategic_coordination_center_3
		is_megastructure_type = strategic_coordination_center_restored
	} } }

	immediate = {
		if = { limit = { has_modifier = "ag_ancient_astronomy_station_think_tank_buff_1" } remove_modifier = "ag_ancient_astronomy_station_think_tank_buff_1" }
		if = { limit = { has_modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" } remove_modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" }
		if = {
			limit = { any_owned_megastructure = { is_megastructure_type = ag_ancient_astronomy_station } }
			set_variable = { which = ag_num_think_tanks value = 0 }
			set_variable = { which = ag_num_strategic_coordination_centers value = 0 }
			every_owned_megastructure = {
				limit = { OR = {
					is_megastructure_type = think_tank_3
					is_megastructure_type = think_tank_4
					is_megastructure_type = think_tank_restored
				} }
				prev = { change_variable = { which = ag_num_think_tanks value = 1 } }
			}
			every_owned_megastructure = {
				limit = { OR = {
					is_megastructure_type = strategic_coordination_center_3
					is_megastructure_type = strategic_coordination_center_restored
				} }
				prev = { change_variable = { which = ag_num_strategic_coordination_centers value = 1 } }
			}
			if = {
				limit = { check_variable = { which = ag_num_think_tanks value > 0 } }
				add_modifier = { modifier = "ag_ancient_astronomy_station_think_tank_buff_1" days = -1 multiplier = ag_num_think_tanks }
			}
			if = {
				limit = { check_variable = { which = ag_num_strategic_coordination_centers value > 0 } }
				add_modifier = { modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" days = -1 multiplier = ag_num_strategic_coordination_centers }
			}
			clear_variable = ag_num_think_tanks
			clear_variable = ag_num_strategic_coordination_centers
		}
		if = {
			limit = { exists = fromfrom fromfrom = { is_scope_type = country } }
			fromfrom = {
				if = { limit = { has_modifier = "ag_ancient_astronomy_station_think_tank_buff_1" } remove_modifier = "ag_ancient_astronomy_station_think_tank_buff_1" }
				if = { limit = { has_modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" } remove_modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" }
				if = {
					limit = { any_owned_megastructure = { is_megastructure_type = ag_ancient_astronomy_station } }
					set_variable = { which = ag_num_think_tanks value = 0 }
					set_variable = { which = ag_num_strategic_coordination_centers value = 0 }
					every_owned_megastructure = {
						limit = { OR = {
							is_megastructure_type = think_tank_3
							is_megastructure_type = think_tank_4
							is_megastructure_type = think_tank_restored
						} }
						prev = { change_variable = { which = ag_num_think_tanks value = 1 } }
					}
					every_owned_megastructure = {
						limit = { OR = {
							is_megastructure_type = strategic_coordination_center_3
							is_megastructure_type = strategic_coordination_center_restored
						} }
						prev = { change_variable = { which = ag_num_strategic_coordination_centers value = 1 } }
					}
					if = {
						limit = { check_variable = { which = ag_num_think_tanks value > 0 } }
						add_modifier = { modifier = "ag_ancient_astronomy_station_think_tank_buff_1" days = -1 multiplier = ag_num_think_tanks }
					}
					if = {
						limit = { check_variable = { which = ag_num_strategic_coordination_centers value > 0 } }
						add_modifier = { modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" days = -1 multiplier = ag_num_strategic_coordination_centers }
					}
					clear_variable = ag_num_think_tanks
					clear_variable = ag_num_strategic_coordination_centers
				}
			}
		}
	}
}
system_event = {
	id = ag_theta.122
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = fromfrom
		fromfrom = { is_scope_type = country }
		from = { OR = {
			is_megastructure_type = ag_ancient_astronomy_station
			is_megastructure_type = think_tank_3
			is_megastructure_type = think_tank_4
			is_megastructure_type = think_tank_restored
			is_megastructure_type = strategic_coordination_center_3
			is_megastructure_type = strategic_coordination_center_restored
		} }
	}

	immediate = { fromfrom = {
		if = { limit = { has_modifier = "ag_ancient_astronomy_station_think_tank_buff_1" } remove_modifier = "ag_ancient_astronomy_station_think_tank_buff_1" }
		if = { limit = { has_modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" } remove_modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" }
		if = {
			limit = { any_owned_megastructure = { is_megastructure_type = ag_ancient_astronomy_station } }
			set_variable = { which = ag_num_think_tanks value = 0 }
			set_variable = { which = ag_num_strategic_coordination_centers value = 0 }
			every_owned_megastructure = {
				limit = { OR = {
					is_megastructure_type = think_tank_3
					is_megastructure_type = think_tank_4
					is_megastructure_type = think_tank_restored
				} }
				prev = { change_variable = { which = ag_num_think_tanks value = 1 } }
			}
			every_owned_megastructure = {
				limit = { OR = {
					is_megastructure_type = strategic_coordination_center_3
					is_megastructure_type = strategic_coordination_center_restored
				} }
				prev = { change_variable = { which = ag_num_strategic_coordination_centers value = 1 } }
			}
			if = {
				limit = { check_variable = { which = ag_num_think_tanks value > 0 } }
				add_modifier = { modifier = "ag_ancient_astronomy_station_think_tank_buff_1" days = -1 multiplier = ag_num_think_tanks }
			}
			if = {
				limit = { check_variable = { which = ag_num_strategic_coordination_centers value > 0 } }
				add_modifier = { modifier = "ag_ancient_astronomy_station_strategic_coordination_center_buff_1" days = -1 multiplier = ag_num_strategic_coordination_centers }
			}
			clear_variable = ag_num_think_tanks
			clear_variable = ag_num_strategic_coordination_centers
		}
	} }
}

# Negative effects caused by weather
planet_event = {
	id = ag_theta.131
	title = "ag_theta.131.name"
	desc = "ag_theta.131.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_burning_settlement_room }
	show_sound = event_air_raid_siren
	location = root
	
	mean_time_to_happen = {
		months = 125
		modifier = { factor = 2 has_modifier = ag_theta_protection }
	}
	
	pre_triggers = {
		has_owner = yes
		is_ai = no
	}

	trigger = {
		num_pops > 0
		exists = event_target:ag_ancient_theta_shielded_world
		is_same_value = event_target:ag_ancient_theta_shielded_world
		has_modifier = "ag_ancient_theta_ringworld_debuff"
		NOT = { has_planet_flag = ag_theta_unstable_weather_flag }
	}
	
	immediate = {
		set_timed_planet_flag = {
			flag = ag_theta_unstable_weather_flag
			days = 1800
		}
		random_list = {
			50 = {
				random_list = {
					10 = {
						add_planet_devastation = 1
						set_planet_flag = ag_theta_disaster_1_1
					}
					10 = {
						add_planet_devastation = 2
						set_planet_flag = ag_theta_disaster_1_2
					}
					10 = {
						modifier = { factor = 0.8 has_modifier = ag_theta_protection }
						add_planet_devastation = 4
						set_planet_flag = ag_theta_disaster_1_3
					}
					10 = {
						modifier = { factor = 0.6 has_modifier = ag_theta_protection }
						add_planet_devastation = 8
						set_planet_flag = ag_theta_disaster_1_4
					}
					10 = {
						modifier = { factor = 0.4 has_modifier = ag_theta_protection }
						add_planet_devastation = 16
						set_planet_flag = ag_theta_disaster_1_5
					}
					10 = {
						modifier = { factor = 0.2 has_modifier = ag_theta_protection }
						add_planet_devastation = 32
						set_planet_flag = ag_theta_disaster_1_6
					}
					10 = {
						modifier = { factor = 0 has_modifier = ag_theta_protection }
						add_planet_devastation = 64
						set_planet_flag = ag_theta_disaster_1_7
					}
				}
			}
			50 = {
				modifier = {
					factor = 0
					num_pops < 2
				}
				random_list = {
					10 = {
						random_owned_pop = { kill_pop = yes }
						set_planet_flag = ag_theta_disaster_2_1
					}
					10 = {
						modifier = { factor = 0 num_pops < 3 }
						modifier = { factor = 0.75 has_modifier = ag_theta_protection }
						while = { count = 2 random_owned_pop = { kill_pop = yes } }
						set_planet_flag = ag_theta_disaster_2_2
					}
					10 = {
						modifier = { factor = 0 num_pops < 4 }
						modifier = { factor = 0.5 has_modifier = ag_theta_protection }
						while = { count = 3 random_owned_pop = { kill_pop = yes } }
						set_planet_flag = ag_theta_disaster_2_3
					}
					10 = {
						modifier = { factor = 0 num_pops < 5 }
						modifier = { factor = 0.25 has_modifier = ag_theta_protection }
						while = { count = 4 random_owned_pop = { kill_pop = yes } }
						set_planet_flag = ag_theta_disaster_2_4
					}
					10 = {
						modifier = { factor = 0 num_pops < 6 }
						modifier = { factor = 0 has_modifier = ag_theta_protection }
						while = { count = 5 random_owned_pop = { kill_pop = yes } }
						set_planet_flag = ag_theta_disaster_2_5
					}
				}
			}
		}
	}

	option = {
		name = "ag_theta.131.a"
		if = {
			limit = { has_planet_flag = ag_theta_disaster_1_1 }
			tooltip = { add_planet_devastation = 1 }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_1_2 }
			tooltip = { add_planet_devastation = 2 }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_1_3 }
			tooltip = { add_planet_devastation = 4 }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_1_4 }
			tooltip = { add_planet_devastation = 8 }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_1_5 }
			tooltip = { add_planet_devastation = 16 }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_1_6 }
			tooltip = { add_planet_devastation = 32 }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_1_7 }
			tooltip = { add_planet_devastation = 64 }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_2_1 }
			tooltip = { random_owned_pop = { kill_pop = yes } }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_2_2 }
			tooltip = { while = { count = 2 random_owned_pop = { kill_pop = yes } } }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_2_3 }
			tooltip = { while = { count = 3 random_owned_pop = { kill_pop = yes } } }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_2_4 }
			tooltip = { while = { count = 4 random_owned_pop = { kill_pop = yes } } }
		}
		if = {
			limit = { has_planet_flag = ag_theta_disaster_2_5 }
			tooltip = { while = { count = 5 random_owned_pop = { kill_pop = yes } } }
		}
		hidden_effect = {
			remove_planet_flag = ag_theta_disaster_1_1
			remove_planet_flag = ag_theta_disaster_1_2
			remove_planet_flag = ag_theta_disaster_1_3
			remove_planet_flag = ag_theta_disaster_1_4
			remove_planet_flag = ag_theta_disaster_1_5
			remove_planet_flag = ag_theta_disaster_1_6
			remove_planet_flag = ag_theta_disaster_1_7
			remove_planet_flag = ag_theta_disaster_2_1
			remove_planet_flag = ag_theta_disaster_2_2
			remove_planet_flag = ag_theta_disaster_2_3
			remove_planet_flag = ag_theta_disaster_2_4
			remove_planet_flag = ag_theta_disaster_2_5
		}
	}
}

# RIngworld's environment restored
country_event = {
	id = ag_theta.133
	title = "ag_theta.133.name"
	desc = "ag_theta.133.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_gaia_planet_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_ancient_theta_shielded_world
	
	is_triggered_only = yes

	option = {
		name = "ag_theta.133.a"
	}
}

# Construction Sections
country_event = {
	id = ag_theta.141
	title = "ag_theta.141.name"
	desc = "ag_theta.141.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ringworld_room }
	show_sound = event_finding_loot
	location = event_target:ag_ancient_theta_shielded_world
	
	mean_time_to_happen = {
		years = 3
	}
	
	trigger = {
		NOT = { has_global_flag = ag_theta_construction_section_unlocked }
		has_country_flag = ag_known_construction_section
		NOT = { has_country_flag = ag_theta_141_fired }
		any_system_within_border = {
			has_star_flag = ag_ancient_theta_system
		}
	}
	
	immediate = {
		set_country_flag = ag_theta_141_fired
		event_target:ag_ancient_theta_shielded_world = {
			solar_system = {
				random_system_planet = {
					limit = {
						has_planet_flag = ag_ancient_construction_section_0
					}
					save_event_target_as = ag_ancient_construction_section_loc
				}
			}
		}
	}
	
	option = {
		name = "ag_theta.141.a"
		enable_special_project = {
			name = "ag_theta_construction_section"
			location = event_target:ag_ancient_construction_section_loc
			owner = root
		}
		ai_chance = {
			factor = 1000
		}
	}
	option = {
		name = "ag_theta.141.b"
		add_resource = { influence = @ag_end_event_influence_medium }
		ai_chance = {
			factor = 0
		}
	}
}
country_event = {
	id = ag_theta.142
	title = "ag_theta.142.name"
	desc = "ag_theta.142.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ringworld_room }
	show_sound = event_think_tank_build_complete
	location = from
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = ag_theta_construction_section_unlocked
		set_country_flag = ag_known_construction_section
		event_target:ag_ancient_theta_shielded_world = {
			solar_system = {
				ag_spawn_ancient_construction_section = yes
			}
		}
	}
	
	option = {
		name = "ag_theta.142.a"
	}
}

# on_yearly_pulse, Failsafe for starfish's ships destroyed for unknown reason.
event = {
	id = ag_theta.151
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		has_global_flag = ag_ancient_primitive_crisis_happened
		NOT = { has_global_flag = ag_ancient_primitive_country_destroyed }
		OR = {
			NOT = { exists = event_target:ag_ancient_primitive_country }
			AND = {
				exists = event_target:ag_ancient_primitive_country
				event_target:ag_ancient_primitive_country = { num_fleets < 1 }
			}
		}
	}
	immediate = {
		set_global_flag = ag_ancient_primitive_country_destroyed
		if = {
			limit = {
				exists = event_target:ag_ancient_primitive_country
				event_target:ag_ancient_primitive_country = { num_fleets < 1 }
			}
			event_target:ag_ancient_primitive_country = { destroy_country = yes }
		}
	}
}

# Random situation events.
country_event = {
	id = ag_theta.161
	title = "ag_theta.161.name"
	desc = "ag_theta.161.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	option = {
		name = "ag_theta.161.a"
		locked_random_list = {
			10 = { ag_add_monthly_research = { ag_area = physics_research ag_tier = 1 } }
			10 = { ag_add_monthly_research = { ag_area = engineering_research ag_tier = 1 } }
		}
	}
}
country_event = {
	id = ag_theta.162
	title = "ag_theta.162.name"
	desc = "ag_theta.162.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	option = {
		name = "ag_theta.162.a"
		locked_random_list = {
			10 = { ag_add_monthly_research = { ag_area = physics_research ag_tier = 2 } }
			10 = { ag_add_monthly_research = { ag_area = engineering_research ag_tier = 2 } }
		}
	}
}
country_event = {
	id = ag_theta.163
	title = "ag_theta.163.name"
	desc = "ag_theta.163.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	option = {
		name = "ag_theta.163.a"
		locked_random_list = {
			10 = { add_resource = { energy = 1000 } }
			10 = { add_resource = { energy = 2500 } }
			10 = { add_resource = { energy = 5000 } }
		}
	}
}
country_event = {
	id = ag_theta.164
	title = "ag_theta.164.name"
	desc = "ag_theta.164.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	option = {
		name = "ag_theta.164.a"
		locked_random_list = {
			10 = { add_resource = { sr_dark_matter = 10 } }
			10 = { add_resource = { sr_dark_matter = 25 } }
			10 = { add_resource = { sr_dark_matter = 50 } }
		}
	}
}
country_event = {
	id = ag_theta.165
	title = "ag_theta.165.name"
	desc = "ag_theta.165.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_yellow_alert
	is_triggered_only = yes
	option = {
		name = "ag_theta.165.a"
		from = { add_situation_progress = value:ag_theta_situation_progress_reduce }
	}
}
country_event = {
	id = ag_theta.166
	title = "ag_theta.166.name"
	desc = "ag_theta.166.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	option = {
		name = "ag_theta.166.a"
		if = { limit = { NOT = { has_technology = tech_shields_1 } } ag_give_technology = { ag_tech = tech_shields_1 } }
		else_if = { limit = { NOT = { has_technology = tech_shields_2 } } ag_give_technology = { ag_tech = tech_shields_2 } }
		else_if = { limit = { NOT = { has_technology = tech_shields_3 } } ag_give_technology = { ag_tech = tech_shields_3 } }
		else_if = { limit = { NOT = { has_technology = tech_shields_4 } } ag_give_technology = { ag_tech = tech_shields_4 } }
		else_if = { limit = { NOT = { has_technology = tech_shields_5 } } ag_give_technology = { ag_tech = tech_shields_5 } }
		else_if = { limit = { NOT = { has_technology = tech_dark_matter_deflector } } ag_give_technology = { ag_tech = tech_dark_matter_deflector } }
		else_if = { limit = { always = yes } ag_give_technology = { ag_tech = tech_repeatable_improved_shield_output } }
	}
}

country_event = {
	id = ag_theta.171
	title = "ag_theta.171.name"
	desc = "ag_theta.171.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	after = { hidden_effect = { destroy_situation = from } }
	option = {
		name = "ag_theta.171.a"
		add_modifier = { modifier = "ag_ancient_shield_situation_buff" days = 3600 }
		ag_add_monthly_research = { ag_area = physics_research ag_tier = 3 }
		ag_add_monthly_research = { ag_area = engineering_research ag_tier = 3 }
	}
}
country_event = {
	id = ag_theta.172
	title = "ag_theta.172.name"
	desc = "ag_theta.172.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	after = { hidden_effect = { destroy_situation = from } }
	option = {
		name = "ag_theta.172.a"
		if = {
			limit = { NOR = { has_technology = "tech_shields_1" has_tech_option = "tech_shields_1" } }
			ag_add_research_option = { ag_tech = tech_shields_1 }
		}
		else_if = {
			limit = { NOR = { has_technology = "tech_shields_2" has_tech_option = "tech_shields_2" } }
			ag_add_research_option = { ag_tech = tech_shields_2 }
		}
		else_if = {
			limit = { NOR = { has_technology = "tech_shields_3" has_tech_option = "tech_shields_3" } }
			ag_add_research_option = { ag_tech = tech_shields_3 }
		}
		else_if = {
			limit = { NOR = { has_technology = "tech_shields_4" has_tech_option = "tech_shields_4" } }
			ag_add_research_option = { ag_tech = tech_shields_4 }
		}
		else_if = {
			limit = { NOR = { has_technology = "tech_shields_5" has_tech_option = "tech_shields_5" } }
			ag_add_research_option = { ag_tech = tech_shields_5 }
		}
		else_if = {
			limit = { NOR = { has_technology = "tech_dark_matter_deflector" has_tech_option = "tech_dark_matter_deflector" } }
			ag_add_research_option = { ag_tech = tech_dark_matter_deflector }
		}
		else_if = {
			limit = { has_technology = "tech_psionic_shield" NOR = { has_technology = "tech_ag_adv_psi_shield" has_tech_option = "tech_ag_adv_psi_shield" } }
			ag_add_research_option = { ag_tech = tech_ag_adv_psi_shield }
		}
		else_if = {
			limit = { NOR = { has_technology = "tech_ag_adv_dark_matter_deflector" has_tech_option = "tech_ag_adv_dark_matter_deflector" } }
			ag_add_research_option = { ag_tech = tech_ag_adv_dark_matter_deflector }
		}
		else_if = {
			limit = { always = yes }
			add_modifier = { modifier = "ag_ancient_shield_situation_buff" days = 3600 }
			ag_add_monthly_research = { ag_area = physics_research ag_tier = 3 }
			ag_add_monthly_research = { ag_area = engineering_research ag_tier = 3 }
		}
	}
}

# Starfish Battleship tech.
country_event = {
	id = ag_theta.200
	title = "ag_theta.200.name"
	desc = "ag_theta.200.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	immediate = { set_country_flag = ag_theta_200_fired }
	option = {
		name = "ag_theta.200.a"
		hidden_effect = { country_event = { id = ag_theta.201 days = 180 random = 180 } }
	}
}
country_event = {
	id = ag_theta.201
	title = "ag_theta.201.name"
	desc = "ag_theta.201.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	option = {
		name = "ag_theta.201.a"
		hidden_effect = { country_event = { id = ag_theta.202 days = 360 random = 360 } }
	}
}
country_event = {
	id = ag_theta.202
	title = "ag_theta.202.name"
	desc = "ag_theta.202.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_relic_world_building_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = {
		name = "ag_theta.202.a"
		trigger = { NOR = {
			has_ethic = ethic_xenophobe
			has_ethic = ethic_fanatic_xenophobe
			is_gestalt = yes
		} }
		hidden_effect = {
			set_country_flag = ag_theta_202_a
			country_event = { id = ag_theta.203 days = 60 random = 60 }
		}
	}
	option = {
		name = "ag_theta.202.b"
		trigger = { NOR = {
			has_ethic = ethic_xenophile
			has_ethic = ethic_fanatic_xenophile
			has_ethic = ethic_egalitarian
			has_ethic = ethic_fanatic_egalitarian
			has_ethic = ethic_pacifist
			has_ethic = ethic_fanatic_pacifist
		} }
		hidden_effect = { country_event = { id = ag_theta.203 days = 60 random = 60 } }
	}
	option = {
		name = "ag_theta.202.c"
		add_resource = { influence = @ag_end_event_influence_small }
	}
}
country_event = {
	id = ag_theta.203
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { has_country_flag = ag_theta_202_a }
			remove_country_flag = ag_theta_202_a
			if = {
				limit = { any_owned_pop = { has_trait = ag_trait_very_delicious } }
				random_owned_pop = { limit = { has_trait = ag_trait_very_delicious } kill_pop = yes }
				random_list = {
					75 = { country_event = { id = ag_theta.204 } }
					25 = { country_event = { id = ag_theta.205 } }
				}
				reroll_random = yes
			}
			else = { country_event = { id = ag_theta.208 } }
		}
		else = {
			if = {
				limit = { any_owned_pop = { has_trait = ag_trait_very_delicious } }
				random_owned_pop = { limit = { has_trait = ag_trait_very_delicious } kill_pop = yes }
				if = {
					limit = { any_owned_pop = { has_trait = ag_trait_very_delicious } }
					random_owned_pop = { limit = { has_trait = ag_trait_very_delicious } kill_pop = yes }
					random_list = { 50 = { } 50 = { random_owned_pop = { limit = { has_trait = ag_trait_very_delicious } kill_pop = yes } } }
					reroll_random = yes
					country_event = { id = ag_theta.204 }
				}
				else = { country_event = { id = ag_theta.208 } }
			}
			else = { country_event = { id = ag_theta.208 } }
		}
	}
}
country_event = {
	id = ag_theta.204
	title = "ag_theta.204.name"
	desc = "ag_theta.204.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = {
		name = "ag_theta.204.a"
		ag_add_research_option = { ag_tech = tech_ag_starfish_battleship }
	}
	option = {
		name = "ag_theta.204.b"
		ag_add_research_option = { ag_tech = tech_ag_starfish_battleship }
	}
	option = {
		name = "ag_theta.204.c"
		trigger = { OR = { has_ethic = ethic_xenophobe has_ethic = ethic_fanatic_xenophobe } }
		add_resource = { unity = 5000 }
		ag_add_research_option = { ag_tech = tech_ag_starfish_battleship }
	}
}
country_event = {
	id = ag_theta.205
	title = "ag_theta.205.name"
	desc = "ag_theta.205.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	after = { hidden_effect = { if = { limit = { is_variable_set = ag_theta_205_temp } clear_variable = ag_theta_205_temp } } }
	option = {
		name = "ag_theta.205.a"
		custom_tooltip = "ag_theta.205.a.tooltip"
		hidden_effect = {
			country_event = { id = ag_theta.206 days = 60 random = 60 }
			set_variable = { which = ag_theta_205_temp value = 0.5 }
			if = { limit = { has_ethic = ethic_xenophile } change_variable = { which = ag_theta_205_temp value = 0.5 } }
			if = { limit = { has_ethic = ethic_fanatic_xenophile } change_variable = { which = ag_theta_205_temp value = 1 } }
			if = { limit = { has_ethic = ethic_egalitarian } change_variable = { which = ag_theta_205_temp value = 0.5 } }
			if = { limit = { has_ethic = ethic_fanatic_egalitarian } change_variable = { which = ag_theta_205_temp value = 1 } }
			if = { limit = { has_ethic = ethic_pacifist } change_variable = { which = ag_theta_205_temp value = 0.5 } }
			if = { limit = { has_ethic = ethic_fanatic_pacifist } change_variable = { which = ag_theta_205_temp value = 1 } }
			add_modifier = { modifier = "ag_theta_battleship_unity_modifier" days = 360 multiplier = 1 }
		}
	}
	option = { name = "ag_theta.205.b" }
}
country_event = {
	id = ag_theta.206
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { any_owned_pop = { has_trait = ag_trait_very_delicious } }
			random_owned_pop = { limit = { has_trait = ag_trait_very_delicious } kill_pop = yes }
			if = {
				limit = { any_owned_pop = { has_trait = ag_trait_very_delicious } }
				random_owned_pop = { limit = { has_trait = ag_trait_very_delicious } kill_pop = yes }
				random_list = { 50 = { } 50 = { random_owned_pop = { limit = { has_trait = ag_trait_very_delicious } kill_pop = yes } } }
				reroll_random = yes
				country_event = { id = ag_theta.207 }
			}
			else = { country_event = { id = ag_theta.208 } }
		}
		else = { country_event = { id = ag_theta.208 } }
	}
}
country_event = {
	id = ag_theta.207
	title = "ag_theta.207.name"
	desc = "ag_theta.207.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = {
		name = "ag_theta.207.a"
		ag_add_research_option = { ag_tech = tech_ag_starfish_battleship }
	}
	option = {
		name = "ag_theta.207.b"
		ag_add_research_option = { ag_tech = tech_ag_starfish_battleship }
	}
}
country_event = {
	id = ag_theta.208
	title = "ag_theta.208.name"
	desc = "ag_theta.208.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	immediate = { has_country_flag = ag_theta_208_fired }
	option = { name = "ag_theta.208.a" }
}

# Archaeological situation events.
country_event = {
	id = ag_theta.301
	title = "ag_theta.301.name"
	desc = "ag_theta.301.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	immediate = { set_country_flag = ag_theta_301_fired }
	option = {
		name = "ag_theta.301.a"
		hidden_effect = { country_event = { id = ag_theta.302 days = 10 random = 10 } }
	}
}
country_event = {
	id = ag_theta.302
	title = "ag_theta.302.name"
	desc = "ag_theta.302.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	option = { name = "ag_theta.302.a" }
}
country_event = {
	id = ag_theta.303
	title = "ag_theta.303.name"
	desc = "ag_theta.303.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	immediate = { set_country_flag = ag_theta_303_fired }
	option = { name = "ag_theta.303.a" }
}
country_event = {
	id = ag_theta.304
	title = "ag_theta.304.name"
	desc = "ag_theta.304.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	immediate = {
		set_timed_country_flag = { flag = ag_theta_obs_station_noti_locked days = 2 }
		set_country_flag = ag_has_ancient_astronomy_station
		random_list = {
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 3 } }
		}
		reroll_random = yes
		random_list = {
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { }
		}
		reroll_random = yes
		event_target:ag_ancient_station_large = {
			solar_system = { spawn_megastructure = {
				type = "ag_ancient_astronomy_station"
				owner = root
			} }
			destroy_ambient_object = this
		}
	}
	after = { hidden_effect = {
		# clear_variable = ag_ancient_knowledge_common_var
		destroy_situation = from
	} }
	option = {
		name = "ag_theta.304.a"
		custom_tooltip = "ag_spawn.22.a.tooltip"
		ag_add_ancient_knowledge = { ag_value = ag_ancient_knowledge_common_var ag_notification_desc = "" }
		hidden_effect = { if = {
			limit = { NOT = { has_country_flag = ag_locate_ancient_system_project_flag } }
			set_country_flag = ag_locate_ancient_system_project_flag
			random_list = {
				25 = { ag_give_research_project = { ag_project_id = @ag_locate_ancient_system_project_id ag_progress = 10 } }
				25 = { ag_give_research_project = { ag_project_id = @ag_locate_ancient_system_project_id ag_progress = 7.5 } }
				25 = { ag_give_research_project = { ag_project_id = @ag_locate_ancient_system_project_id ag_progress = 5 } }
				25 = { ag_give_research_project = { ag_project_id = @ag_locate_ancient_system_project_id ag_progress = 2.5 } }
			}
		} }
	}
}

planet_event = {
	id = ag_theta.400
	title = "ag_theta.400.name"
	desc = "ag_theta.400.desc"
	diplomatic = yes
	custom_gui = "ag_theta_starfish_battleship_window"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	is_triggered_only = yes

	trigger = { owner = { NOT = { has_country_flag = ag_theta_starfish_battleship_settings_opened } } }
	immediate = {
		if = {
			limit = { is_variable_set = ag_num_theta_starfish_battleships }
			set_variable = { which = ag_num_theta_starfish_battleship_temp value = ag_num_theta_starfish_battleships }
		}
		else = { set_variable = { which = ag_num_theta_starfish_battleship_temp value = 0 } set_variable = { which = ag_num_theta_starfish_battleships value = 0 } }
		owner = {
			set_country_flag = ag_theta_starfish_battleship_settings_opened
			set_variable = { which = ag_starfish_battleship_cost_alloys value = value:ag_starfish_battleship_cost|ag_resource|alloys| }
			set_variable = { which = ag_starfish_battleship_cost_volatile_motes value = value:ag_starfish_battleship_cost|ag_resource|volatile_motes| }
			set_variable = { which = ag_starfish_battleship_cost_sr_dark_matter value = value:ag_starfish_battleship_cost|ag_resource|sr_dark_matter| }
			set_variable = { which = ag_starfish_battleship_cost_minor_artifacts value = value:ag_starfish_battleship_cost|ag_resource|minor_artifacts| }
		}
	}
	after = { hidden_effect = { owner = {
		remove_country_flag = ag_theta_starfish_battleship_settings_opened
		clear_variable = ag_starfish_battleship_cost_alloys
		clear_variable = ag_starfish_battleship_cost_volatile_motes
		clear_variable = ag_starfish_battleship_cost_sr_dark_matter
		clear_variable = ag_starfish_battleship_cost_minor_artifacts
	} } }
	option = {
		name = "ag_theta.400.a"
		custom_gui = "ag_theta_starfish_battleship_cancel_option"
		hidden_effect = {
			clear_variable = ag_num_theta_starfish_battleship_temp
			set_timed_planet_flag = { flag = ag_cancel_starfish_battleship_construction days = 2 }
			remove_planet_flag = ag_theta_starfish_battleship_settings_opened
			remove_planet_flag = ag_create_starfish_battleship_@this
			if = { limit = { has_planet_flag = ag_create_starfish_battleship_on_progress } remove_planet_flag = ag_create_starfish_battleship_on_progress }
			owner = { remove_country_flag = ag_theta_starfish_battleship_settings_opened }
		}
	}
	option = {
		name = "ag_theta.400.b"
		custom_gui = "ag_theta_starfish_battleship_confirm_option"
		allow = {
			custom_tooltip = {
				fail_text = "decision_ag_create_starfish_battleship_requires_starfish"
				count_owned_pop = {
					count >= root.ag_num_theta_starfish_battleship_temp
					limit = { has_trait = ag_trait_very_delicious }
				}
			}
			owner = {
				resource_stockpile_compare = { resource = alloys value >= ag_starfish_battleship_cost_alloys mult = root.ag_num_theta_starfish_battleship_temp }
				resource_stockpile_compare = { resource = volatile_motes value >= ag_starfish_battleship_cost_volatile_motes mult = root.ag_num_theta_starfish_battleship_temp }
				resource_stockpile_compare = { resource = sr_dark_matter value >= ag_starfish_battleship_cost_sr_dark_matter mult = root.ag_num_theta_starfish_battleship_temp }
				resource_stockpile_compare = { resource = minor_artifacts value >= ag_starfish_battleship_cost_minor_artifacts mult = root.ag_num_theta_starfish_battleship_temp }
			}
		}
		hidden_effect = {
			if = {
				limit = { check_variable = { which = ag_num_theta_starfish_battleship_temp value = 0 } }
				set_timed_planet_flag = { flag = ag_cancel_starfish_battleship_construction days = 2 }
				remove_planet_flag = ag_theta_starfish_battleship_settings_opened
				remove_planet_flag = ag_create_starfish_battleship_@this
				if = { limit = { has_planet_flag = ag_create_starfish_battleship_on_progress } remove_planet_flag = ag_create_starfish_battleship_on_progress }
			}
			else = {
				set_variable = { which = ag_num_theta_starfish_battleships value = ag_num_theta_starfish_battleship_temp }
				owner = {
					remove_country_flag = ag_theta_starfish_battleship_settings_opened
					while = {
						count = root.ag_num_theta_starfish_battleships
						add_resource = { alloys = -1 mult = ag_starfish_battleship_cost_alloys }
						add_resource = { volatile_motes = -1 mult = ag_starfish_battleship_cost_volatile_motes }
						add_resource = { sr_dark_matter = -1 mult = ag_starfish_battleship_cost_sr_dark_matter }
					}
					if = {
						limit = { has_country_flag = ag_ship_subsystem_enabled_801_38 }
						while = {
							count = root.ag_num_theta_starfish_battleships
							random_list = { 50 = { add_resource = { minor_artifacts = -1 mult = ag_starfish_battleship_cost_minor_artifacts } } 50 = { } }
							reroll_random = yes
						}
					}
					else = { while = { count = root.ag_num_theta_starfish_battleships add_resource = { minor_artifacts = -1 mult = ag_starfish_battleship_cost_minor_artifacts } } }
				}
				clear_variable = ag_num_theta_starfish_battleship_temp
			}
		}
	}
}

# Give some artifacts.
planet_event = {
	id = ag_theta.401
	title = "ag_theta.401.name"
	desc = "ag_theta.401.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_habitable_dig_site_room }
	show_sound = event_sensor_ping
	is_triggered_only = yes
	option = {
		name = "ag_theta.401.a"
		add_building = ag_ancient_unknown_building
		owner = { add_resource = { minor_artifacts = 2 } }
	}
	option = {
		name = "ag_theta.401.b"
		owner = { add_resource = {
			minerals = 200
			alloys = 100
			minor_artifacts = 5
			influence = @ag_end_event_influence_small
		} }
	}
}

# ag_on_yearly_pluse_country_random, Give Starfish pop to player who don't want to invade preserved areas.
country_event = {
	id = ag_theta.410
	title = "ag_theta.410.name"
	desc = "ag_theta.410.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_debris_room }
	show_sound = event_sensor_ping
	is_triggered_only = yes
	trigger = {
		is_ai = no
		has_global_flag = ag_9102_preserved_world_spawned
		has_technology = "tech_cloning"
		exists = event_target:ag_primitive_world_2
		event_target:ag_primitive_world_2 = { exists = solar_system solar_system = { exists = space_owner space_owner = { is_same_value = root } } }
		NOR = {
			has_country_flag = ag_theta_410_fired
			event_target:ag_primitive_world_2 = { exists = owner owner = { is_same_value = root } }
		}
	}
	immediate = { set_country_flag = ag_theta_410_fired }
	option = {
		name = "ag_theta.410.a"
		trigger = { NOR = {
			has_valid_civic = civic_fanatic_purifiers
			has_valid_civic = civic_hive_devouring_swarm
			has_valid_civic = civic_machine_terminator
		} }
		allow = { NOR = { has_ethic = ethic_fanatic_xenophobe has_ethic = ethic_xenophobe } }
		enable_special_project = {
			name = "ag_theta_acquire_starfish"
			location = root.capital_scope
			owner = root
		}
	}
	option = {
		name = "ag_theta.410.b"
		trigger = { NOR = {
			has_valid_civic = civic_fanatic_purifiers
			has_valid_civic = civic_hive_devouring_swarm
			has_valid_civic = civic_machine_terminator
		} }
		locked_random_list = {
			10 = { ag_add_monthly_research = { ag_area = physics_research ag_tier = 1 } }
			10 = { ag_add_monthly_research = { ag_area = engineering_research ag_tier = 1 } }
		}
	}
	option = {
		name = "ag_theta.410.c"
		trigger = { NOR = {
			has_valid_civic = civic_fanatic_purifiers
			has_valid_civic = civic_hive_devouring_swarm
			has_valid_civic = civic_machine_terminator
		} }
		allow = { NOR = { has_ethic = ethic_fanatic_xenophile has_ethic = ethic_xenophile } }
		add_resource = { influence = 50 }
	}
	option = {
		name = "ag_theta.410.d"
		trigger = { OR = {
			has_valid_civic = civic_fanatic_purifiers
			has_valid_civic = civic_hive_devouring_swarm
			has_valid_civic = civic_machine_terminator
		} }
		add_resource = { influence = 80 }
	}
}
planet_event = {
	id = ag_theta.411
	title = "ag_theta.411.name"
	desc = "ag_theta.411.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_debris_room }
	show_sound = event_default
	is_triggered_only = yes
	immediate = {
		ag_special_species_exisence_check = yes
		if = {
			limit = { owner = { has_country_flag = ag_theta_208_fired } }
			owner = { country_event = { id = ag_theta.412 days = 5 random = 5 } }
		}
	}
	option = {
		name = "ag_theta.411.a"
		while = {
			count = 3
			create_pop = { species = event_target:ag_primitive_species }
		}
	}
	option = { name = "ag_theta.411.b" }
}
country_event = {
	id = ag_theta.412
	title = "ag_theta.412.name"
	desc = "ag_theta.412.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_arguing_senate_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	option = {
		name = "ag_theta.412.a"
		hidden_effect = { country_event = { id = ag_theta.202 days = 30 random = 30 } }
	}
	option = { name = "ag_theta.412.b" }
}
