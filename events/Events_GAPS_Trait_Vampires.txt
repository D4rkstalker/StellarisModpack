namespace = Events_GAPS_Traits_Vampire

#ongame start
country_event = {
	id = Events_GAPS_Traits_Vampire.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		any_owned_pop = { has_trait = Trait_GAPS_Vampire }
	}
	immediate = {
		every_owned_planet = { 
			limit = { is_colony = yes }
			set_variable = { which = GAPS_Number_OF_VAmpires_To_Feed value = 0 }
			set_variable = { which = GAPS_Number_Of_Blood_Vessels value = 0 }
			every_owned_pop = {
				remove_pop_flag = Pop_Flag_GAPS_VampireCount
			}
			#Count Number OF Vampires
			while = {
				limit = { any_owned_pop = { has_trait = Trait_GAPS_Vampire NOT = { has_pop_flag = Pop_Flag_GAPS_VampireCount } } }
				random_owned_pop = {
					limit = { has_trait = Trait_GAPS_Vampire NOT = { has_pop_flag = Pop_Flag_GAPS_VampireCount } }
					set_pop_flag = Pop_Flag_GAPS_VampireCount
					prev = { change_variable = { which = GAPS_Number_OF_VAmpires_To_Feed value = 1 } }
				}
			}
			#Count Number OF Non Vampires
			while = {
				count = GAPS_Number_OF_VAmpires_To_Feed
				random_owned_pop = {
					limit = { NOT = { has_trait = Trait_GAPS_Vampire } NOT = { has_modifier = Pop_Modifier_GAPS_Vampire_Species_Food } }
					add_modifier = { modifier = Pop_Modifier_GAPS_Vampire_Species_Food days = -1 }
					prev = { change_variable = { which = GAPS_Number_Of_Blood_Vessels value = 1 } }
				}
			}
			#Apply Effects
			while = {
				count = GAPS_Number_Of_Blood_Vessels
				random_owned_pop = {
					limit = { has_trait = Trait_GAPS_Vampire NOT = { has_modifier = Pop_Modifier_GAPS_Vampire_Species_Fed } }
					add_modifier = { modifier = Pop_Modifier_GAPS_Vampire_Species_Fed days = -1 }
				}
			}
		}
	}
}


# A pop has been added to the planet
# Root = pop
# From = planet
#on_pop_added
pop_event = {
	id = Events_GAPS_Traits_Vampire.2
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = { any_owned_pop = { has_trait = Trait_GAPS_Vampire } }
	}
	immediate = {
		from = {	
			set_variable = { which = GAPS_Number_OF_VAmpires_To_Feed value = 0 }
			set_variable = { which = GAPS_Number_Of_Blood_Vessels value = 0 }
			every_owned_pop = {
				remove_pop_flag = Pop_Flag_GAPS_VampireCount
				remove_modifier = Pop_Modifier_GAPS_Vampire_Species_Fed
				remove_modifier = Pop_Modifier_GAPS_Vampire_Species_Food
			}
			#Count Number OF Vampires
			while = {
				limit = { any_owned_pop = { has_trait = Trait_GAPS_Vampire not = { has_pop_flag = Pop_Flag_GAPS_VampireCount } } }
				random_owned_pop = {
					limit = { has_trait = Trait_GAPS_Vampire NOT = { has_pop_flag = Pop_Flag_GAPS_VampireCount } }
					set_pop_flag = Pop_Flag_GAPS_VampireCount
					prev = { change_variable = { which = GAPS_Number_OF_VAmpires_To_Feed value = 1 } }
				}
			}
			#Count Number OF Non Vampires
			while = {
				count = GAPS_Number_OF_VAmpires_To_Feed
				random_owned_pop = {
					limit = { NOT = { has_trait = Trait_GAPS_Vampire } NOT = { has_modifier = Pop_Modifier_GAPS_Vampire_Species_Food } }
					add_modifier = { modifier = Pop_Modifier_GAPS_Vampire_Species_Food days = -1 }
					prev = { change_variable = { which = GAPS_Number_Of_Blood_Vessels value = 1 } }
				}
			}
			#Apply Effects
			while = {
				count = GAPS_Number_Of_Blood_Vessels
				random_owned_pop = {
					limit = { has_trait = Trait_GAPS_Vampire NOT = { has_modifier = Pop_Modifier_GAPS_Vampire_Species_Fed } }
					add_modifier = { modifier = Pop_Modifier_GAPS_Vampire_Species_Fed days = -1 }
				}
			}
		}
	}
}
# This = Planet scope
# From = Country
# FromFrom = Pop
#on_pop_declined
#on_pop_purged
#on_pop_displaced
planet_event = {
	id = Events_GAPS_Traits_Vampire.3
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		any_owned_pop = { has_trait = Trait_GAPS_Vampire }
	}
	immediate = {
		set_variable = { which = GAPS_Number_OF_VAmpires_To_Feed value = 0 }
		set_variable = { which = GAPS_Number_Of_Blood_Vessels value = 0 }
		every_owned_pop = {
			remove_pop_flag = Pop_Flag_GAPS_VampireCount
			remove_modifier = Pop_Modifier_GAPS_Vampire_Species_Fed
			remove_modifier = Pop_Modifier_GAPS_Vampire_Species_Food
		}
		#Count Number OF Vampires
		while = {
			limit = { any_owned_pop = { has_trait = Trait_GAPS_Vampire not = { has_pop_flag = Pop_Flag_GAPS_VampireCount } } }
			random_owned_pop = {
				limit = { has_trait = Trait_GAPS_Vampire NOT = { has_pop_flag = Pop_Flag_GAPS_VampireCount } }
				set_pop_flag = Pop_Flag_GAPS_VampireCount
				prev = { change_variable = { which = GAPS_Number_OF_VAmpires_To_Feed value = 1 } }
			}
		}
		#Count Number OF Non Vampires
		while = {
			count = GAPS_Number_OF_VAmpires_To_Feed
			random_owned_pop = {
				limit = { NOT = { has_trait = Trait_GAPS_Vampire } NOT = { has_modifier = Pop_Modifier_GAPS_Vampire_Species_Food } }
				add_modifier = { modifier = Pop_Modifier_GAPS_Vampire_Species_Food days = -1 }
				prev = { change_variable = { which = GAPS_Number_Of_Blood_Vessels value = 1 } }
			}
		}
		#Apply Effects
		while = {
			count = GAPS_Number_Of_Blood_Vessels
			random_owned_pop = {
				limit = { has_trait = Trait_GAPS_Vampire NOT = { has_modifier = Pop_Modifier_GAPS_Vampire_Species_Fed } }
				add_modifier = { modifier = Pop_Modifier_GAPS_Vampire_Species_Fed days = -1 }
			}
		}
	}
}