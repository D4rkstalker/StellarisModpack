namespace = acemod_debug
# Events included in this file are either for debugging purposes or for making CWTools not bug us about errors. If you want a flag set up just use an effect instead of these events.
#
# Activates ACEMOD AI. Without this flag fleets won't seek targets.
event = {
	id = acemod_debug.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = acemod_activated
	}
}

# Applies ACEMOD AI to a specific country. Without this flag fleets won't seek targets.
country_event = {
	id = acemod_debug.2
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_assisted_ai
	}
}

# Prevents ACEMOD technologies from rolling.
event = {
	id = acemod_debug.3
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = acemod_technology_disabled
	}
}

# Disable applying debuffs. Does not remove the ones in place.
country_event = {
	id = acemod_debug.10
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = acemod_crisis_debuff_disabled
		set_global_flag = acemod_fallen_awakened_empire_debuff_disabled
	}
}

# Enables rolling of ACEMOD technologies for non-default empires. Does not overwrite ACEMOD technology disable global flag.
country_event = {
	id = acemod_debug.11
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_country_flag_technology_allowed
	}
}

# Enables constructor reinforcements for given country.
country_event = {
	id = acemod_debug.12
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_constructor_reinforcements
	}
}

# Designates system to spawn constructor in.
event = {
	id = acemod_debug.13
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_star_flag = acemod_star_flag_is_constructor_reinforcements_system
	}
}

# Designates fleet to spawn constructor on.
event = {
	id = acemod_debug.14
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_fleet_flag = acemod_fleet_flag_is_constructor_reinforcements_fleet
	}
}

# Enables defensive jumpdrive protocol for given country.
event = {
	id = acemod_debug.15
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_defensive_jumpdrive_protocol
	}
}

# Designates defensive jumpdrive protocol protected system.
event = {
	id = acemod_debug.16
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		solar_system = {
			set_star_flag = acemod_star_flag_is_defensive_jumpdrive_protocol_system
		}
	}
}

# Designates defensive jumpdrive protocol target system.
event = {
	id = acemod_debug.17
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		solar_system = {
			set_timed_star_flag = {
				flag = acemod_star_flag_defensive_jumpdrive_protocol_target
				days = 30
			}
		}
	}
}

# Designates defensive jumpdrive protocol target ambient object.
event = {
	id = acemod_debug.18
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_ambient_object_flag = acemod_ambient_object_flag_defensive_jumpdrive_protocol_target
	}
}

# Disables defensive jumpdrive protocol for all countries.
event = {
	id = acemod_debug.19
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = acemod_defensive_jumpdrive_protocol_disabled
	}
}

# Calculates strategic value of systems.
country_event = {
	id = acemod_debug.100
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_system_within_border = {
			limit = {
				exists = owner
			}
			acemod_calculate_solar_system_target_value = yes
		}
	}
}

# Recalculates strategic value of systems.
country_event = {
	id = acemod_debug.101
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_system_within_border = {
			limit = {
				exists = owner
			}
			acemod_recalculate_solar_system_target_value = yes
		}
	}
}

# ACEMOD AI constructors will spawn normal starbases (outpost) using empire's graphical culture.
country_event = {
	id = acemod_debug.200
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_country_flag_custom_starbase_outpost
	}
}

# ACEMOD AI constructors will spawn normal starbases (citadel) using empire's graphical culture.
country_event = {
	id = acemod_debug.201
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_country_flag_custom_starbase_citadel
	}
}

# Disables ACEMOD AI for military fleets.
country_event = {
	id = acemod_debug.202
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_country_flag_disabled_military_ai
	}
}

# Disables ACEMOD AI for constructor fleets.
country_event = {
	id = acemod_debug.203
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_country_flag_disabled_constructor_ai
	}
}

# Disables ACEMOD AI for army fleets.
country_event = {
	id = acemod_debug.204
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_country_flag_disabled_army_ai
	}
}

# Disables ACEMOD AI for colonizer fleets.
country_event = {
	id = acemod_debug.205
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_country_flag_disabled_colonizer_ai
	}
}

# Marks megastructure as being an accessible bypass (custom modded wormhole, custom modded gateway etc). Used in pathfinding.
event = {
	id = acemod_debug.206
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_megastructure_flag = acemod_megastructure_flag_is_active_bypass
	}
}

# Marks solar_system as having an accessible bypass (custom modded wormhole, custom modded gateway etc). Used in pathfinding.
event = {
	id = acemod_debug.207
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_star_flag = acemod_star_flag_is_active_bypass
	}
}

# Checks if the fleet is idle and applies a timed fleet_flag.
# Doesn't work as expected.
fleet_event = {
	id = acemod_debug.300
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_fleet_idle = no
			}
			set_timed_fleet_flag = {
				flag = acemod_event_target_invader_fleet_active
				days = 85
			}
		}
		else = {
			set_timed_fleet_flag = {
				flag = acemod_event_target_invader_fleet_idle
				days = 85
			}
		}
	}
}
