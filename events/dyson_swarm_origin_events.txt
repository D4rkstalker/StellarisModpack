#######################################
#origin events
#######################################
namespace = dyson_starting

#For "lost home"

# this: capital planet
# from: founder species
planet_event = {
	id = dyson_starting.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			OR = {
				has_civic = civic_the_void
				has_origin = origin_dyson_the_void
			}
		}
	}
	
	immediate = {
		set_planet_flag = dyson_doomed_planet
		set_planet_flag = eco_no_pollution
		prevent_anomaly = yes
		while = {
			count = 22
			random_pop = { kill_pop = yes }
		}
		change_pc = pc_nuked
		remove_all_buildings = yes
		add_building = building_underground_bunker
		remove_district = district_city
		remove_district = district_city
		remove_district = district_city
		remove_district = district_mining
		remove_district = district_farming
		remove_district = district_farming
		remove_district = district_generator
		remove_district = district_generator
		if = {
			limit = {
				owner = {
					has_authority = auth_nomad
				}
			}
			remove_district = district_mining
			add_building = building_galaxy_jam
		}
	#add the modifier that shows how much time is left
		add_modifier = {
			modifier = "dyson_doomed_planet"
			days = 3600
		}
	#mod comp.
		planet_event = { id = dyson_starting.9 days = 1 }
	}
}

#set up dyson swarm
#triggered through on action:empire_init_create_ships
country_event = {
	id = dyson_starting.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			OR = {
				has_civic = civic_the_void
				has_origin = origin_dyson_the_void
			}
		}
	}
	
	immediate = {
		system_star = {
			save_event_target_as = dyson_swarm_civic_spawnpoint
		}
		random_system = {
			limit = {
				starting_system = yes
				is_inside_border = ROOT
			}
			spawn_planet = {
				class = "pc_dyson_swarm"
				location = event_target:dyson_swarm_civic_spawnpoint
				orbit_location = yes
				orbit_angle_offset = 45
				orbit_distance_offset = 9.899
				size = 10
				has_ring = no
				init_effect = {
					clear_blockers = yes
					set_name = "NAME_refuge"
					save_event_target_as = dyson_civic_starting_planet
					set_planet_flag = dyson_civic_starting_planet
					set_planet_flag = eco_no_pollution
					set_planet_flag = dyson_init_decison_yes
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = fromfrom
					}
					surveyed = {
						set_surveyed = yes
						surveyor = FROM
					}
					clear_blockers = yes
					clear_deposits = yes
					set_planet_flag = megastructure
					set_planet_flag = habitat
					set_planet_flag = colony_event
					prevent_anomaly = yes
					set_planet_flag = is_dyson_swarm
				#add deposits
					add_deposit = d_dyson_swarm_planetary_access
					add_deposit = d_dyson_food_reserves
				#add pops and ownership
					planet_event = { id = dyson_starting.3 }
				#spawning buildings and districts
					add_district = dyson_swarm_solar_stations
					add_district = dyson_swarm_solar_stations
					add_district = dyson_swarm_mining_bays
					add_district = dyson_swarm_mining_bays
					add_district = dyson_swarm_zero_g_labs
					add_building = building_capital
					add_building = building_dyson_zero_g_foundry_0
					add_building = building_dyson_zero_g_factory_0
					add_building = building_housing_stations_1
				#adjust buildings if nomad authority is active
					if = {
						limit = {
							owner = {
								has_authority = auth_nomad
							}
						}
						remove_building = building_housing_stations_1
						add_building = building_dyson_swarm_nomad_horde_offset
					}
				#add modifier for food reserves for four years
					add_modifier = {
						modifier = "dyson_swarm_food_reserves"
						days = 3960
					}
				#add tier modifier
					#add_modifier = {
					#	modifier = "dyson_swarm_tier_one"
					#	days = -1
					#}
				#ambient objects
					while = {
						count = 2
						create_ambient_object = {
							type = "dyson_station_01"
							entity_offset_height = { min = -0 max = -25 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = event_target:dyson_swarm_civic_spawnpoint
								distance = 40
								angle = random
							}
						}
					}
					while = {
						count = 2
						create_ambient_object = {
							type = "dyson_station_01"
							entity_offset_height = { min = -0 max = -25 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = event_target:dyson_swarm_civic_spawnpoint
								distance = 30
								angle = random
							}
						}
					}
					create_ambient_object = {
						type = "dyson_station_02"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 38
							angle = random
						}
					}
					create_ambient_object = {
						type = "dyson_station_04"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 36
							angle = random
						}
					}
					create_ambient_object = {
						type = "dyson_station_05"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 42
							angle = random
						}
					}
				}
			}
		}
	}
}
#add pops, zero G traits and ownership of dyson swarm, change main species to swarm pops
planet_event = {
	id = dyson_starting.3
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		set_owner = FROM
		set_controller = FROM
		while = {
			count = 14
			create_pop = {
				species = last_created_species
				ethos = random
			}
			last_created_pop = {
				clear_ethos = yes
				dyson_add_atrophy = yes
			}
		}
		create_pop = {
			species = last_created_species
			ethos = random
		}
		last_created_pop = {
			clear_ethos = yes
			dyson_add_atrophy = yes
			set_timed_pop_flag = { flag = atropy_pop days = 2 }
		}
		random_owned_pop = {
			limit = { has_pop_flag = atropy_pop }
			species = {
				save_event_target_as = atropy_species
			}
		}
		OWNER = {
			change_dominant_species = {
				species = event_target:atropy_species
			}
		}
	}
}

#introductory event, also sets up the events for homeplanet destruction and the food reserves running out.
country_event = {
	id = dyson_starting.4
	title = dyson_starting.4.title
	desc = dyson_starting.4.desc
	picture = GFX_evt_nuclear_explosion
	
	trigger = {
		owner = {
			OR = {
				has_civic = civic_the_void
				has_origin = origin_dyson_the_void
			}
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		give_technology = { tech = "tech_dyson_swarm" message = no }
		give_technology = { tech = "tech_hydroponics" message = no }
		give_technology = { tech = "tech_dyson_modular_districts" message = no }
		random_owned_planet = {
			limit = {
				is_planet_class = pc_dyson_swarm
			}
			set_capital = yes
			#add deposits, because this event gets kinda weird when triggered through the other events
			solar_system = {
				every_system_planet = {
					limit = { dyson_is_asteroid = yes }
					planet_event = { id = dyson_swarm_other.5 }
				}
				every_system_planet = {
					limit = { dyson_is_molten_planet = yes }
					planet_event = { id = dyson_swarm_other.7 }
				}
				every_system_planet = {
					limit = { dyson_is_minable_planet = yes }
					planet_event = { id = dyson_swarm_other.8 }
				}
				every_system_planet = {
					limit = { dyson_is_ice_asteroid = yes }
					planet_event = { id = dyson_swarm_other.9 }
				}
				every_system_planet = {
					limit = { dyson_is_gas_giant = yes }
					planet_event = { id = dyson_swarm_other.10 }
				}
			}
			random_list = {
				5 = {
				}
				10 = { add_deposit = d_dyson_swarm_astroid }
				30 = { add_deposit = d_dyson_swarm_mote_fields }
				30 = {
					add_deposit = d_dyson_swarm_mote_fields
					add_deposit = d_dyson_swarm_mote_fields
				}
				20 = {	
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields
				}
				5 = {
					add_deposit = d_dyson_swarm_mote_fields
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields
				}
			}
		}
	}
	
	option = {
		name = dyson_starting.4.a
		hidden_effect = {
			#food
			country_event = { id = dyson_starting.5 days = 3960 }
			#homeplanet
			country_event = { id = dyson_starting.6 days = 3600 }
		}
	}
}

#food reserves run out
country_event = {
	id = dyson_starting.5
	title = dyson_starting.5.title
	desc = dyson_starting.5.desc
	
	is_triggered_only = yes
	
	immediate = {
		random_planet = {
			limit = {
				has_planet_flag = dyson_civic_starting_planet
				is_inside_border = ROOT
			}
			remove_deposit = d_dyson_food_reserves
		}
	}
	
	option = {
		name = dyson_starting.5.a
	}
}

#planet ecosystem collapses, turning it into a frozen planet with a terraforming candidate modifier
#depending on if pops were killed in the process, player will recieve a happiness debuff or unity and stability reward
#the AI will roll a random outcome and get some bonus resources to compensate
country_event = {
	id = dyson_starting.6
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				is_ai = yes
			}
			random_list = {
				70 = {
					ROOT = {
						country_event = { id = dyson_starting.8 }
					}
					capital_scope = {
						while = {
							count = 6
							create_pop = {
								species = owner_species
								ethos = random
							}
							last_created_pop = {
								clear_ethos = yes
							}
						}
					}
				}
				70 = {
					ROOT = {
						country_event = { id = dyson_starting.7 }
					}
					capital_scope = {
						while = {
							count = 3
							create_pop = {
								species = owner_species
								ethos = random
							}
							last_created_pop = {
								clear_ethos = yes
							}
						}
					}
				}
			}
			add_resource = { minerals = 3000 }
			add_resource = { food = 2000 }
		}
		if = {
			limit = {
				is_ai = no
				any_planet_within_border = {
					has_planet_flag = dyson_doomed_planet
					OR = {
						num_pops > 0
						has_deposit = d_survivor_camp_1
						has_deposit = d_survivor_camp_2
					}
				}
			}
			ROOT = {
				country_event = { id = dyson_starting.7 }
			}
		}
		if = {
			limit = {
				is_ai = no
				any_planet_within_border = {
					has_planet_flag = dyson_doomed_planet
					NOR = {
						num_pops > 0
						has_deposit = d_survivor_camp_1
						has_deposit = d_survivor_camp_2
					}
				}
			}
			ROOT = {
				country_event = { id = dyson_starting.8 }
			}
		}
		random_planet = {
			limit = {
				is_inside_border = ROOT
				has_planet_flag = dyson_doomed_planet
			}
			change_pc = pc_frozen
			add_modifier = {
				modifier = terraforming_candidate
				days = -1
			}
		}
	}
}

#people were still on the planet when it collapsed and the evacuation failed
country_event = {
	id = dyson_starting.7
	title = dyson_starting.7.title
	desc = dyson_starting.7.desc
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.7.a
		every_planet = {
			limit = {
				is_inside_border = ROOT
				has_planet_flag = dyson_civic_starting_planet
			}
			add_modifier = {
				modifier = dyson_evacuation_failed
				days = 1080
			}
		}
	}
}

#planet successfully evacuated
country_event = {
	id = dyson_starting.8
	title = dyson_starting.8.title
	desc = dyson_starting.8.desc
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.8.a
		add_monthly_resource_mult = {
			resource = unity
			value = 15
			min = 1200
			max = 9999
		}
	}
}
#mod comp: place blockers a day AFTER initial world generation if none were placed by the initial event
planet_event = {
	id = dyson_starting.9
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		clear_blockers = yes
		add_deposit = d_survivor_camp_1
		add_deposit = d_survivor_camp_1
		add_deposit = d_survivor_camp_1
		add_deposit = d_survivor_camp_2
		add_deposit = d_survivor_camp_2
		while = {
			count = 5
			if = {
				limit = { num_pops > 3 }
				random_pop = { kill_pop = yes }
			}
		}
	}
}

#For "Rogue Colonizing Unit"
#set up dyson swarm, starting techs and start the event chain. triggered through empire_init_create_ships
#immediatle tagswitch to a country with a different version of the origin, since there seems to be no way of changing that through an effect
country_event = {
	id = dyson_starting.10
	hide_window = yes
	
	is_triggered_only = yes 
	
	trigger = {
		OR = {
			has_civic = civic_machine_rogue_colonizing_unit
			has_origin = origin_dyson_machine_rogue_colonizing_unit
		}
	}
	
	immediate = {
	#add starting techs
		give_technology = { tech = "tech_dyson_swarm" message = no }
		give_technology = { tech = "tech_hydroponics" message = no }
	#start event chain now after tagswitch
		#country_event = { id = dyson_starting.12 days = 31 }
	#spawn the dyson swarm
		random_system = {
			limit = {
				starting_system = yes
				is_inside_border = ROOT
			}
			system_star = {
				save_event_target_as = dyson_swarm_civic_spawnpoint
			}
			spawn_planet = {
				class = "pc_dyson_swarm"
				location = event_target:dyson_swarm_civic_spawnpoint
				orbit_location = yes
				orbit_angle_offset = 45
				orbit_distance_offset = 9.899
				size = 10
				has_ring = no
					
				init_effect = {
					set_name = "NAME_evacuation_point"
					set_planet_flag = dyson_machine_civic_refuge
					set_planet_flag = eco_no_pollution
					set_planet_entity = {
						entity = "orbital_habitat_entity"
						graphical_culture = fromfrom
					}
					surveyed = {
						set_surveyed = yes
						surveyor = FROM
					}
					clear_blockers = yes
					clear_deposits = yes
					set_planet_flag = megastructure
					set_planet_flag = habitat
					set_planet_flag = colony_event
					prevent_anomaly = yes
					set_planet_flag = is_dyson_swarm
					set_planet_flag = dyson_init_decison_yes
				#add deposits
					add_deposit = d_dyson_swarm_planetary_access
				#add pops and ownership
					set_owner = FROM
					set_controller = FROM
					while = {
						limit = { num_pops < 31 }
						create_pop = {
							species = owner_main_species
							ethos = random
						}
					}	
				#spawning buildings and districts
					add_district = dyson_swarm_solar_stations
					add_district = dyson_swarm_solar_stations
					add_district = dyson_swarm_solar_stations
					add_district = dyson_swarm_zero_g_labs
					add_district = dyson_housing_gestalt
					add_district = dyson_housing_gestalt
					add_building = building_machine_capital	
					add_building = building_dyson_zero_g_foundry_0
					add_building = building_machine_assembly_plant
					add_building = building_dyson_organic_sanctuary_station_clone
					add_building = building_housing_stations_1
				#spawn mining districts through a separate event after game start. doesn't work directly for some reason.
					planet_event = { id = dyson_starting.22 days = 1 }
				#add tier modifier, commented out, handled by another event triggered by taking control of the swarm
					#add_modifier = {
					#	modifier = "dyson_swarm_tier_one"
					#	days = -1
					#}
					while = {
						count = 2
						create_ambient_object = {
							type = "dyson_station_01"
							entity_offset_height = { min = -0 max = -25 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = event_target:dyson_swarm_civic_spawnpoint
								distance = 40
								angle = random
							}
						}
					}
					while = {
						count = 2
						create_ambient_object = {
							type = "dyson_station_01"
							entity_offset_height = { min = -0 max = -25 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = event_target:dyson_swarm_civic_spawnpoint
								distance = 30
								angle = random
							}
						}
					}
					create_ambient_object = {
						type = "dyson_station_02"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 38
							angle = random
						}
					}
					create_ambient_object = {
						type = "dyson_station_04"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 36
							angle = random
						}
					}
					create_ambient_object = {
						type = "dyson_station_05"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 42
							angle = random
						}
					}
				} 
			}
		}
	}
}

planet_event = {
	id = dyson_starting.22
	hide_window = yes
	
	is_triggered_only = yes 

	immediate = {
		add_district = dyson_swarm_mining_bays
		add_district = dyson_swarm_mining_bays
	}
}

#nuke home planet through empire_init_capital_planet
planet_event = {
	id = dyson_starting.11
	hide_window = yes
	
	is_triggered_only = yes 
	
	trigger = {
		owner = {
			OR = {
				has_civic = civic_machine_rogue_colonizing_unit
				has_origin = origin_dyson_machine_rogue_colonizing_unit
			}
		}
	}
	
	immediate = {
		set_planet_flag = dyson_servitor_destroyed_homeworld
		prevent_anomaly = yes
		remove_all_buildings = yes
		remove_district = district_city
		remove_district = district_city
		remove_district = district_city
		remove_district = district_mining
		remove_district = district_mining
		remove_district = district_farming
		remove_district = district_farming
		remove_district = district_generator
		remove_district = district_generator
		while = {
			limit = { num_pops > 0 }
			random_pop = { kill_pop = yes }
		}
		change_pc = pc_toxic
	}
}
country_event = {
	id = dyson_starting.2000
	hide_window = yes
	
	is_triggered_only = yes 
	
	trigger = {
		owner = {
			OR = {
				has_civic = civic_machine_rogue_colonizing_unit
				has_origin = origin_dyson_machine_rogue_colonizing_unit
			}
		}
	}
	
	immediate = {
		country_event = { id = dyson_starting.2001 days = 2 }
		random_owned_planet = {
			limit = {
				is_planet_class = pc_dyson_swarm
			}
			#add deposits, because this event gets kinda weird when triggered through the other events
			solar_system = {
				every_system_planet = {
					limit = { dyson_is_asteroid = yes }
					planet_event = { id = dyson_swarm_other.5 }
				}
				every_system_planet = {
					limit = { dyson_is_molten_planet = yes }
					planet_event = { id = dyson_swarm_other.7 }
				}
				every_system_planet = {
					limit = { dyson_is_minable_planet = yes }
					planet_event = { id = dyson_swarm_other.8 }
				}
				every_system_planet = {
					limit = { dyson_is_ice_asteroid = yes }
					planet_event = { id = dyson_swarm_other.9 }
				}
				every_system_planet = {
					limit = { dyson_is_gas_giant = yes }
					planet_event = { id = dyson_swarm_other.10 }
				}
			}
			random_list = {
				5 = {
				}
				10 = { add_deposit = d_dyson_swarm_astroid }
				30 = { add_deposit = d_dyson_swarm_mote_fields }
				30 = {
					add_deposit = d_dyson_swarm_mote_fields
					add_deposit = d_dyson_swarm_mote_fields
				}
				20 = {	
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields
				}
				5 = {
					add_deposit = d_dyson_swarm_mote_fields
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields
				}
			}
		}
	}
}
#create and switch to a clone of the current country with a different origin
country_event = {
	id = dyson_starting.2001
	hide_window = yes
	
	is_triggered_only = yes 
	
	immediate = {
		save_event_target_as = starter_country
		#give original starting country a random star and nuke them later to avoid the gameover screen
		random_system = {
			limit = {
				NOR = { 
					has_star_flag = hostile_system
					owner = exists
				}
			}
			random_system_planet = {
				limit = { is_star = yes }
				set_owner = FROM
				create_pop = {
					species = owner_main_species
				}
			}
		}
		create_country = {
			name = event_target:starter_country
			type = default
			ignore_initial_colony_error = yes
			authority = event_target:starter_country
			ethos = event_target:starter_country
			origin = origin_dyson_machine_rogue_colonizing_unit_clone
			civics = event_target:starter_country
			species = event_target:starter_country
			flag = event_target:starter_country
			effect = {
				add_resource = {
					energy = 300
					minerals = 100
					alloys = 100
					influence = 100
				}
			#add starting techs
				give_technology = { tech = "tech_dyson_swarm" message = no }
				give_technology = { tech = "tech_hydroponics" message = no }
			#start event chain
				country_event = { id = dyson_starting.12 days = 31 }	
				save_event_target_as = clone_country
			}
		}
		random_owned_planet = {
			limit = { is_planet_class = pc_dyson_swarm }
			set_owner = event_target:clone_country
			set_capital = yes
		}
		every_owned_fleet = {
			set_owner = event_target:clone_country
		}
		every_owned_ship = {
			set_owner = event_target:clone_country
		}
		while = {
			count = 10
			random_owned_leader = {
				set_owner = event_target:clone_country
			}
		}
		event_target:clone_country = {
			set_player = event_target:starter_country
		}
	#nuke original
		event_target:starter_country = {
			country_event = { id = dyson_starting.2002 days = 2 }
		}
	}
}
country_event = {
	id = dyson_starting.2002
	hide_window = yes
	
	is_triggered_only = yes 
	
	immediate = {
		destroy_country = yes
	}
}
#introduction, start special project
country_event = {
	id = dyson_starting.12
	title = dyson_starting.12.title
	desc = dyson_starting.12.desc
	picture = GFX_evt_dyson_sun_intro
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.12.a
		owner.capital_scope.solar_system = {
			every_system_planet = {
				limit = {
					has_planet_flag = dyson_servitor_destroyed_homeworld
				}
				save_event_target_as = dyson_starting_me_planet
			}
		}
		enable_special_project = {
			name = "DYSON_ME_SEARCHING_FOR_SURVIVORS"
			location = event_target:dyson_starting_me_planet 
			owner = ROOT
		}
	}
}

#time has ran out.
country_event = {
	id = dyson_starting.13
	title = dyson_starting.13.title
	desc = dyson_starting.13.desc
	
	is_triggered_only = yes 

	option = {
		name = dyson_starting.13.a
		custom_tooltip = dyson_starting.13.a.tooltip
		hidden_effect = {
			country_event = { id = dyson_starting.20 }
			add_resource = { influence = 250 }
			event_target:dyson_starting_me_planet = {
				add_modifier = {
					modifier = dyson_dead_planet
					days = -1
				}
				set_deposit = d_society_2
			}
		}
	}
	option = {
		name = dyson_starting.13.b
		custom_tooltip = dyson_starting.13.b.tooltip
		hidden_effect = {
			country_event = { id = dyson_starting.21 }
			add_resource = { influence = 250 }
			event_target:dyson_starting_me_planet = {
				add_modifier = {
					modifier = dyson_dead_planet
					days = -1
				}
				set_deposit = d_society_2
			}
		}
	}
}

#The decision
country_event = {
	id = dyson_starting.14
	title = dyson_starting.14.title
	desc = dyson_starting.14.desc
	
	is_triggered_only = yes 
	
	immediate = {
		owner.capital_scope.solar_system = {
			every_system_planet = {
				limit = {
					has_planet_flag = dyson_servitor_destroyed_homeworld
				}
				save_event_target_as = dyson_starting_me_planet
			}
		}
	}
	
#give them up according to the first directive. Gives bonuses and doesn't change civics. Also unlocks the "mine planet" edict.
	option = {
		name = dyson_starting.14.a
		custom_tooltip = dyson_starting.14.a.tooltip
		hidden_effect = {
			add_modifier = {
				modifier = dyson_reinforced_first_directive
				days = -1
			}
			set_country_flag = dyson_reinfroced_building_directive
			event_target:dyson_starting_me_planet = {
				add_modifier = {
					modifier = dyson_dead_planet
					days = -1
				}
				set_deposit = d_society_2
			}
		}
	}
#take them in, turning your country into rogue servitors and removing the rogue building unit civic. Zero G farms also add two extra jobs now. Doesn't unlock the "mine planet" edict. Gain +10% extra unity.
	option = {
		name = dyson_starting.14.b
		custom_tooltip = dyson_starting.14.b.tooltip
		hidden_effect = {
			owner.capital_scope.solar_system = {
				every_system_planet = {
					limit = {
						has_planet_flag = dyson_machine_civic_refuge
					}
					planet_event = { id = dyson_starting.15 }
				}
			}
			set_country_flag = dyson_became_servitor
			country_event = { id = dyson_starting.16 days = 800 }
			country_event = { id = dyson_starting.20 }
			change_government = {
				authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_ota_updates
				}
			}
			add_resource = { influence = 250 }
			hidden_effect = {
				add_modifier = {
					modifier = dyson_reinforced_second_directive
					days = -1
				}
			}
		}
	}
}

planet_event = {
	id = dyson_starting.15
	title = dyson_starting.15.title
	desc = dyson_starting.15.desc
	
	is_triggered_only = yes
	
	immediate = {
		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			traits = random
			homeworld = event_target:dyson_starting_me_planet 
		}
		last_created_species = { save_event_target_as = dyson_me_civic_trophies }
		while = {
			count = 8
			create_pop = {
				species = event_target:dyson_me_civic_trophies
				ethos = random
			}
		}
	}
	
	option = {
		name = dyson_starting.12.a
	}
}

#follow up events
#people demand that some criminals should be cast out.
country_event = {
	id = dyson_starting.16
	title = dyson_starting.16.title
	desc = dyson_starting.16.desc
	
	is_triggered_only = yes 
	
	immediate = {
		owner.capital_scope.solar_system = {
			every_system_planet = {
				limit = {
					has_planet_flag = dyson_servitor_destroyed_homeworld
				}
				save_event_target_as = dyson_starting_me_planet
			}
		}
	}
	
#decision1: cast them out
	option = {
		name = dyson_starting.16.a
		custom_tooltip = dyson_starting.16.a.tooltip
		add_monthly_resource_mult = {
			resource = unity
			value = 15
			min = 1000
			max = 9999
		}
		hidden_effect = {
			event_target:dyson_starting_me_planet = {
				add_modifier = {
					modifier = dyson_outcast_planet
					days = -1
				}
				set_deposit = d_society_5
			}
			while = {
				count = 3
				random_owned_pop = {
					limit = {
						is_robot_pop = no
					}
					kill_pop = yes
				}
			}
			country_event = { id = dyson_starting.17 days = 500 }
		}
	}
	
#decision2: keep them
	option = {
		name = dyson_starting.16.b
		custom_tooltip = dyson_starting.16.b.tooltip
		hidden_effect = {
			country_event = { id = dyson_starting.18 days = 500 }
			every_owned_pop = {
				limit = {
					is_robot_pop = no
				}
				add_modifier = { modifier = dyson_outraged days = 3600 }
			}
		}
	}
}

#followup: trophies demand that they can vote to cast criminals out (after decision 1, casting some out)
country_event = {
	id = dyson_starting.17
	title = dyson_starting.17.title
	desc = dyson_starting.17.desc
	
	is_triggered_only = yes 

#Go with it, triggering an event every two years that randomly casts 0-2 random pops out, removing them and adding some unity
	option = {
		name = dyson_starting.17.a
		custom_tooltip = dyson_starting.17.a.tooltip
		set_country_flag = dyson_me_two_year_cast_out
	}
	
#forbid this. The criminals are already gone. No penalty
	option = {
		name = dyson_starting.17.b
		custom_tooltip = dyson_starting.17.b.tooltip
		hidden_effect = {
			event_target:dyson_starting_me_planet = {
				set_deposit = d_society_5
			}
		}
	}
}

#followup: trophies demand that they can vote to cast criminals out (after decision 2, keeping everybody)
country_event = {
	id = dyson_starting.18
	title = dyson_starting.18.title
	desc = dyson_starting.18.desc
	
	is_triggered_only = yes 

#Go with it, triggering an event every two years that randomly casts 0-2 random pops out, removing them and adding some unity
	option = {
		name = dyson_starting.18.a
		custom_tooltip = dyson_starting.18.a.tooltip
		set_country_flag = dyson_me_two_year_cast_out
		every_owned_planet = {
			add_modifier = {
				modifier = dyson_ununited_trophies
				days = 3600
			}
		}
	}
	
#forbid this. The criminals are already gone. Ununited trophies modifier added for another ten years.
	option = {
		name = dyson_starting.18.b
		custom_tooltip = dyson_starting.18.b.tooltip
		hidden_effect = {
			every_owned_planet = {
				remove_modifier = dyson_ununited_trophies
				add_modifier = {
					modifier = dyson_ununited_trophies
					days = 14000
				}
			}
		}
	}
}

#Outcast event. triggers every two years
country_event = {
	id = dyson_starting.19
	title = dyson_starting.19.title
	desc = dyson_starting.19.desc
	
	is_triggered_only = yes 
	
	trigger = {
		AND = {
			has_country_flag = dyson_me_two_year_cast_out
			has_civic = civic_machine_servitor
			any_owned_planet = {
				count_pops = { limit = { is_robot_pop = no } count > 30 }
			}
		}
	}
	
	option = {
		name = dyson_starting.19.a
		custom_tooltip = dyson_starting.19.a.tooltip
		add_monthly_resource_mult = {
			resource = unity
			value = 12
			min = 500
			max = 9999
		}
		hidden_effect = {
			random_list = {
				20 = { }
				70 = {
					random_owned_pop = {
						limit = {
							is_robot_pop = no
						}
						kill_pop = yes
					}
				}
				10 = {
					while = {
						count = 2
						random_owned_pop = {
							limit = {
								is_robot_pop = no
							}
							kill_pop = yes
						}
					}
				}
			}
		}
	}
}
#unused
#Events to change governments.
#To rogue servitor:
country_event = {
	id = dyson_starting.20
	hide_window = yes
	
	is_triggered_only = yes 

	immediate = {
		IF = {
			limit = {
				has_civic = civic_machine_builder
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_builder
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_maintenance_protocols
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_maintenance_protocols
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_factory_overclock
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_factory_overclock
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_unitary_cohesion
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_unitary_cohesion
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_rockbreakers
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_rockbreakers
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_zero_waste_protocols
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_zero_waste_protocols
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_built_to_last
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_built_to_last
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_ota_updates
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_ota_updates
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_warbots
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_warbots
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_introspective
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_introspective
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_predictive_analysis
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_predictive_analysis
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_replication
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_replication
				}
			}
		}
		#if there is a unknown civic, then:
		ELSE = {
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_servitor
					civic = civic_machine_ota_updates
				}
			}
		}
	}
}

#To Terminator:
country_event = {
	id = dyson_starting.21
	hide_window = yes
	
	is_triggered_only = yes 

	immediate = {
		IF = {
			limit = {
				has_civic = civic_machine_builder
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_builder
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_maintenance_protocols
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_maintenance_protocols
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_factory_overclock
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_factory_overclock
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_unitary_cohesion
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_unitary_cohesion
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_rockbreakers
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_rockbreakers
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_zero_waste_protocols
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_zero_waste_protocols
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_built_to_last
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_built_to_last
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_ota_updates
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_ota_updates
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_warbots
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_warbots
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_introspective
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_introspective
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_predictive_analysis
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_predictive_analysis
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_replication
			}
			change_government = {
			authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_replication
				}
			}
		}
		#if there is a unknown civic, then:
		ELSE = {
			change_government = {
				authority = "auth_machine_intelligence"
				civics = {
					civic = civic_machine_terminator
					civic = civic_machine_ota_updates
				}
			}
		}
	}
}

#origin for megacorp
#set up dyson swarm, triggered through on action:empire_init_create_ships
country_event = {
	id = dyson_starting.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			OR = {
				has_civic = civic_the_corperate_void
				has_origin = origin_dyson_the_corperate_void
			}
		}
	}
	
	immediate = {
		capital_scope = { 
			save_event_target_as = original_capital
			set_planet_flag = dyson_hostage_planet_@FROM
		}
		random_system = {
			limit = {
				starting_system = yes
				is_inside_border = ROOT
			}
			system_star = {
				save_event_target_as = dyson_swarm_civic_spawnpoint
			}
			spawn_planet = {
				class = "pc_dyson_swarm"
				location = event_target:dyson_swarm_civic_spawnpoint
				orbit_location = yes
				orbit_angle_offset = 45
				orbit_distance_offset = 9.899
				size = 10
				has_ring = no
				init_effect = {
					clear_blockers = yes
					set_name = "NAME_corperate_headquarters"
					save_event_target_as = dyson_civic_starting_planet
					set_planet_flag = dyson_civic_starting_planet
					set_planet_flag = eco_no_pollution
					set_planet_entity = {
						entity = "orbital_habitat_entity"
					}
					surveyed = {
						set_surveyed = yes
						surveyor = FROM
					}
					set_all_comms_surveyed = yes
					clear_blockers = yes
					clear_deposits = yes
					set_planet_flag = megastructure
					set_planet_flag = habitat
					set_planet_flag = colony_event
					set_planet_flag = dyson_corperate_hq@FROM
					prevent_anomaly = yes
					set_planet_flag = is_dyson_swarm
					set_planet_flag = dyson_init_decison_yes
				#add deposits
					add_deposit = d_dyson_swarm_valuable_crystal_asteroid
					add_deposit = d_dyson_corp_food_natural_offset
				#add pops and ownership
					set_owner = FROM
					set_controller = FROM
				#set it as the capital immediatly to avoid the vanilla bug that breaks special projects
					set_capital = yes
					while = {
						count = 15
						create_pop = {
							species = owner_species
							ethos = random
						}
						last_created_pop = {
							clear_ethos = yes
						}
					}
					every_owned_pop = {
						dyson_add_atrophy = yes
						set_timed_pop_flag = { flag = atropy_pop days = 2 }
					}
				#spawning buildings and districts
					add_district = dyson_swarm_solar_stations
					add_district = dyson_swarm_mining_bays
					add_district = dyson_swarm_zero_g_labs
					add_building = building_capital
					add_building = building_dyson_zero_g_foundry_0
					add_building = building_dyson_zero_g_factory_0
					add_building = building_housing_stations_1
				#ambient objects
					while = {
						count = 2
						create_ambient_object = {
							type = "dyson_station_01"
							entity_offset_height = { min = -0 max = -25 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = event_target:dyson_swarm_civic_spawnpoint
								distance = 40
								angle = random
							}
						}
					}
					while = {
						count = 2
						create_ambient_object = {
							type = "dyson_station_01"
							entity_offset_height = { min = -0 max = -25 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = event_target:dyson_swarm_civic_spawnpoint
								distance = 30
								angle = random
							}
						}
					}
					create_ambient_object = {
						type = "dyson_station_02"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 38
							angle = random
						}
					}
					create_ambient_object = {
						type = "dyson_station_04"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 36
							angle = random
						}
					}
					create_ambient_object = {
						type = "dyson_station_05"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = event_target:dyson_swarm_civic_spawnpoint
							distance = 42
							angle = random
						}
					}
				} 
			}
		}
		give_technology = { tech = "tech_dyson_swarm" message = no }
		give_technology = { tech = "tech_hydroponics" message = no }
		give_technology = { tech = "tech_dyson_modular_districts" message = no }
		add_resource = { food = 100 }
		event_target:original_capital = { planet_event = { id = dyson_starting.101 } }
		country_event = { id = dyson_starting.102 }
		country_event = { id = dyson_starting.105 days = 1080 } #atomic age advancement, checks after three years
		#country_event = { id = dyson_starting.105 days = 20 }
		set_variable = { which = dyson_number_of_tradedeals value = 0 }
		set_country_flag = first_contact_event #already had first contact
	}
}
#set up hostage planet
planet_event = {
	id = dyson_starting.101
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		save_event_target_as = dyson_hostage_planet
		prevent_anomaly = yes
		while = {
			count = 40
			random_pop = { kill_pop = yes }
		}
		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			homeworld = event_target:dyson_hostage_planet
			traits = random
		}
		while = {
			count = 24
			create_pop = { species = last_created }
		}
		create_country = {
			name = "DYSON_HOSTAGES_NAME"
			type = primitive_clone
			name_list = random 
			ship_prefix = ISS 
			authority = random
			civics = {
				civic = civic_hostage_planet
			}
			species = last_created
			flag = random
			ethos = random
			origin = "origin_dyson_native_upstart"
			effect = {
				set_primitive_age = machine_age
				set_country_flag = machine_age
				save_event_target_as = hostage_planet_country
			#prevent them from ever advancing normaly, if that is even possible with the new countrytype.... Better safe than sorry.
				set_country_flag = recently_advanced
			} 
		}
		set_owner = event_target:hostage_planet_country
		set_controller = event_target:hostage_planet_country
		remove_district = district_city
		remove_district = district_city
		remove_district = district_city
		remove_district = district_mining
		remove_district = district_mining
		remove_district = district_mining
		remove_district = district_farming
		remove_district = district_farming
		remove_district = district_farming
		remove_district = district_generator
		remove_district = district_generator
		remove_district = district_generator
		remove_building = building_capital
		remove_building = building_bureaucratic_1
		remove_building = building_factory_1
		remove_building = building_foundry_1
		remove_building = building_research_lab_1
		remove_building = building_commercial_zone
		add_building = building_primitive_capital
		add_building = building_urban_dwellings
		add_building = building_primitive_factory
		add_building = building_primitive_mine
		add_building = building_primitive_farm
		add_building = building_primitive_power_plant
	#reinforced military
		while = {
			count = 15
			create_army = {
				name = random
				species = last_created
				type = industrial_army
				owner = event_target:hostage_planet_country
			}
		}
		space_owner = {
			save_event_target_as = greedy_corp
			establish_communications_no_message = event_target:hostage_planet_country
	#add a flag to identify the corp belonging to these natives
			set_country_flag = dyson_corp_belonging_to_primitives_@event_target:hostage_planet_country
		}
	#and the other way around
		event_target:hostage_planet_country = {
			set_country_flag = dyson_primitives_belonging_to_corp_@event_target:greedy_corp
		}
	}
}
#introduction
country_event = {
	id = dyson_starting.102
	title = dyson_starting.102.title
	desc = dyson_starting.102.desc
	picture = GFX_evt_dyson_sun_intro
	
	is_triggered_only = yes
	
	immediate = {
		capital_scope = {
			#add deposits, because this event gets kinda weird when triggered through the other events
			random_list = {
				5 = {
				}
				10 = { add_deposit = d_dyson_swarm_astroid }
				30 = { add_deposit = d_dyson_swarm_mote_fields }
				30 = {
					add_deposit = d_dyson_swarm_mote_fields
					add_deposit = d_dyson_swarm_mote_fields
				}
				20 = {	
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields
				}
				5 = {
					add_deposit = d_dyson_swarm_mote_fields
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields 
					add_deposit = d_dyson_swarm_mote_fields
				}
			}
			solar_system = {
				every_system_planet = {
					limit = { dyson_is_asteroid = yes }
					planet_event = { id = dyson_swarm_other.5 }
				}
				every_system_planet = {
					limit = { dyson_is_molten_planet = yes }
					planet_event = { id = dyson_swarm_other.7 }
				}
				every_system_planet = {
					limit = { dyson_is_minable_planet = yes }
					planet_event = { id = dyson_swarm_other.8 }
				}
				every_system_planet = {
					limit = { dyson_is_ice_asteroid = yes }
					planet_event = { id = dyson_swarm_other.9 }
				}
				every_system_planet = {
					limit = { dyson_is_gas_giant = yes }
					planet_event = { id = dyson_swarm_other.10 }
				}
			}
		#change main species and move homeworld
			random_system = {
				limit = {
					distance = {
						source = prev
						use_bypasses = no
						min_jumps = 2
						max_jumps = 3
					}
					NOT = { exists = space_owner }
				}
				random_system_planet = {
					save_event_target_as = destroyed_homeworld
					set_planet_flag = destroyed_homeworld@FROM
				}
			}
			random_owned_pop = {
				limit = { has_pop_flag = atropy_pop }
				species = {
					save_event_target_as = atropy_species
					set_species_homeworld = event_target:destroyed_homeworld
				}
			}
		}
		change_dominant_species = { species = event_target:atropy_species } #this effect seems to be broken right now. It does not work for horizon signal and psionic ascension either
	}
	
	option = {
		name = dyson_starting.102.a
	}
}
#communications with the natives
country_event = {
	id = dyson_starting.103
	title = dyson_starting.communications
	desc = {
		text = dyson_starting.103.desc.a
	}
	desc = {
		text = dyson_starting.103.desc.b
	}
	desc = {
		text = dyson_starting.103.desc.c
	}
	desc = {
		text = dyson_starting.103.desc.d
	}
	desc = {
		text = dyson_starting.103.desc.f
	}
	desc = {
		text = dyson_starting.103.desc.g
	}
	desc = {
		text = dyson_starting.103.desc.h
	}
	desc = {
		text = dyson_starting.103.desc.i
	}
	desc = {
		text = dyson_starting.103.desc.j
		trigger = { event_target:the_natives = { has_country_flag = atomic_age } }
	}
	desc = {
		text = dyson_starting.103.desc.k
		trigger = {
			event_target:the_natives = {
				OR = {
					has_country_flag = atomic_age 
					has_country_flag = early_space_age
				}
			}
		}
	}
	desc = {
		text = dyson_starting.103.desc.l
		trigger = { event_target:the_natives = { has_country_flag = early_space_age } }
	}
	desc = {
		text = dyson_starting.103.desc.m
		trigger = { event_target:the_natives = { has_country_flag = early_space_age } }
	}
	desc = {
		text = dyson_starting.103.desc.n
		trigger = { event_target:the_natives = { has_country_flag = early_space_age } }
	}
	diplomatic = yes
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
	}
	
	picture_event_data = {
		portrait = event_target:the_natives
		room = "personality_peaceful_traders_room"
	}
	
	option = {
		trigger = {
			NOT = { has_country_flag = allowed_food_trade }
		}
		name = dyson_starting.103.first_food
		country_event = { id = dyson_starting.104 }
	}
	option = {
		trigger = {
			OR = {
				has_country_flag = allowed_food_trade
				has_country_flag = denied_food_trade
			}
		}
		name = dyson_starting.103.establish_trade
		country_event = { id = dyson_starting.107 }
	}
	option = {
		trigger = {
			has_country_flag = dyson_natives_atomic
		}
		name = dyson_starting.103.establish_trade_minerals
		country_event = { id = dyson_starting.109 }
	}
	option = {
		trigger = {
			OR = {
				has_country_flag = dyson_natives_atomic
				has_country_flag = allowed_food_trade
			}
		}
		name = dyson_starting.103.establish_trade_food
		country_event = { id = dyson_starting.123 }
	}
	option = {
		trigger = {
			has_country_flag = dyson_natives_atomic
			check_variable = { which = dyson_number_of_tradedeals value > 9 }
		}
		allow = {
			custom_tooltip = {
				text = dyson_starting.103.slavetooltip
				NOT = { has_country_flag = recently_bought_native_pops }
			}
		}
		name = dyson_starting.103.buy_pops
		country_event = { id = dyson_starting.110 }
	}
	option = {
		trigger = {
			has_country_flag = dyson_natives_atomic
			NOR = {
				has_country_flag = chose_arrested_development_route
				check_variable = { which = infiltration_level value > 0 }
			}
		}
		name = dyson_starting.103.infiltration_choice
		country_event = { id = dyson_starting.124 }
	}
#infiltration menus
	option = {
		trigger = {
			has_country_flag = chose_arrested_development_route
			NOT = { has_country_flag = dyson_arrested_development_corp }
		}
		name = dyson_starting.103.arrested_infiltration
		country_event = { id = dyson_starting.128 }
	}
	option = {
		trigger = {
			has_country_flag = chose_annexation_route
			NOT = { has_country_flag = dyson_corp_takeover }
		}
		name = dyson_starting.103.annexation_infiltration
		country_event = { id = dyson_starting.153 }
	}
	
	option = {
		name = dyson.goodbye
	}
}
#establish tradedeal (tradevalue)
country_event = {
	id = dyson_starting.107
	title = dyson_starting.communications
	desc = dyson_starting.107.desc
	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:the_natives
		room = "personality_peaceful_traders_room"
	}
	
	option = {
		trigger = { NOT = { has_country_flag = dyson_natives_atomic } }
		allow = {
			custom_tooltip = {
				text = dyson_starting.to_many_deals
				check_variable = { which = dyson_number_of_tradedeals_tradevalue value < 21 }
			}
			resource_stockpile_compare = { resource = energy value >= 150 }
		}
		name = dyson_starting.107.yes
		add_resource = { energy = -150 }
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_value_trade_1
		}
		change_variable = { which = dyson_number_of_tradedeals value = 1 }
		change_variable = { which = dyson_number_of_tradedeals_tradevalue value = 1 }
		country_event = { id = dyson_starting.107 }
	}
	option = {
		trigger = { 
			NOT = { has_country_flag = dyson_arrested_development_corp }
			has_country_flag = dyson_natives_atomic
		}
		allow = {
			custom_tooltip = {
				text = dyson_starting.to_many_deals
				check_variable = { which = dyson_number_of_tradedeals_tradevalue value < 51 }
			}
			resource_stockpile_compare = { resource = energy value >= 200 }
		}
		name = dyson_starting.107.yes
		add_resource = { energy = -200 }
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_value_trade_2
		}
		change_variable = { which = dyson_number_of_tradedeals value = 1 }
		change_variable = { which = dyson_number_of_tradedeals_tradevalue value = 1 }
		hidden_effect = {
			dyson_corp_check_trading_events = yes
		}
		country_event = { id = dyson_starting.107 }
	}
	option = {
		trigger = { 
			has_country_flag = dyson_arrested_development_corp
			has_country_flag = dyson_natives_atomic
		}
		allow = {
			custom_tooltip = {
				text = dyson_starting.to_many_deals
				check_variable = { which = dyson_number_of_tradedeals_tradevalue value < 101 }
			}
			resource_stockpile_compare = { resource = energy value >= 200 }
		}
		name = dyson_starting.107.yes
		add_resource = { energy = -200 }
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_value_trade_2
		}
		change_variable = { which = dyson_number_of_tradedeals_tradevalue value = 1 }
		country_event = { id = dyson_starting.107 }
	}
	option = {
		name = dyson_starting.107.no
		country_event = { id = dyson_starting.103 }
	}
}
#tradedeal (minerals)
country_event = {
	id = dyson_starting.109
	title = dyson_starting.communications
	desc = dyson_starting.109.desc
	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:the_natives
		room = "personality_peaceful_traders_room"
	}

	option = {
		trigger = { NOT = { has_country_flag = dyson_arrested_development_corp } }
		allow = {
			custom_tooltip = {
				text = dyson_starting.to_many_deals
				check_variable = { which = dyson_number_of_tradedeals_minerals value < 6 }
			}
			resource_stockpile_compare = { resource = energy value >= 100 }
		}
		name = dyson_starting.109.yes
		add_resource = { energy = -100 }
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_mineral_trade
		}
		change_variable = { which = dyson_number_of_tradedeals value = 1 }
		change_variable = { which = dyson_number_of_tradedeals_minerals value = 1 }
		hidden_effect = {
			dyson_corp_check_trading_events = yes
		}
		country_event = { id = dyson_starting.109 }
	}
	option = {
		trigger = { has_country_flag = dyson_arrested_development_corp }
		allow = {
			custom_tooltip = {
				text = dyson_starting.to_many_deals
				check_variable = { which = dyson_number_of_tradedeals_minerals value < 21 }
			}
			resource_stockpile_compare = { resource = energy value >= 100 }
		}
		name = dyson_starting.109.yes
		add_resource = { energy = -100 }
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_mineral_trade
		}
		change_variable = { which = dyson_number_of_tradedeals_minerals value = 1 }
		country_event = { id = dyson_starting.109 }
	}
	option = {
		name = dyson_starting.107.no
		country_event = { id = dyson_starting.103 }
	}
}
#tradedeal (food)
country_event = {
	id = dyson_starting.123
	title = dyson_starting.communications
	desc = dyson_starting.123.desc
	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:the_natives
		room = "personality_peaceful_traders_room"
	}

	option = {
		trigger = { NOT = { has_country_flag = dyson_arrested_development_corp } }
		allow = {
			custom_tooltip = {
				text = dyson_starting.to_many_deals
				check_variable = { which = dyson_number_of_tradedeals_food value < 6 }
			}
			resource_stockpile_compare = { resource = energy value >= 100 }
		}
		name = dyson_starting.123.yes
		add_resource = { energy = -100 }
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_food_trade
		}
		change_variable = { which = dyson_number_of_tradedeals value = 1 }
		change_variable = { which = dyson_number_of_tradedeals_food value = 1 }
		hidden_effect = {
			dyson_corp_check_trading_events = yes
		}
		country_event = { id = dyson_starting.123 }
	}
	option = {
		trigger = { has_country_flag = dyson_arrested_development_corp }
		allow = {
			custom_tooltip = {
				text = dyson_starting.to_many_deals
				check_variable = { which = dyson_number_of_tradedeals_food value < 21 }
			}
			resource_stockpile_compare = { resource = energy value >= 100 }
		}
		name = dyson_starting.123.yes
		add_resource = { energy = -100 }
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_food_trade
		}
		change_variable = { which = dyson_number_of_tradedeals_food value = 1 }
		country_event = { id = dyson_starting.123 }
	}
	option = {
		name = dyson_starting.107.no
		country_event = { id = dyson_starting.103 }
	}
}
#gather some pops, requires at least 10 tradedeals to have been done first, intentured assets civic gets half price.
country_event = {
	id = dyson_starting.110
	title = dyson_starting.communications
	desc = dyson_starting.110.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes
	
	immediate = {
		event_target:the_natives = {
			owner_species = {
				save_event_target_as = the_natives_species
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				has_valid_civic = civic_indentured_assets
			}
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 500 }
			resource_stockpile_compare = { resource = influence value >= 50 }
		}
		name = dyson_starting.110.yes
		add_resource = { energy = -500 }
		add_resource = { influence = -50 }
		event_target:corp_dyson_swarm = {
			create_pop = { species = event_target:the_natives_species }
		}
		set_timed_country_flag = { flag = recently_bought_native_pops days = 1080 }
	}
	option = {
		trigger = {
			has_valid_civic = civic_indentured_assets
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 250 }
			resource_stockpile_compare = { resource = influence value >= 25 }
		}
		name = dyson_starting.110.yes
		add_resource = { energy = -250 }
		add_resource = { influence = -25 }
		event_target:corp_dyson_swarm = {
			create_pop = { species = event_target:the_natives_species }
		}
		set_timed_country_flag = { flag = recently_bought_native_pops days = 1080 }
	}
	option = {
		name = dyson_starting.110.no
		country_event = { id = dyson_starting.103 }
	}
}
#first food deal
country_event = {
	id = dyson_starting.104
	title = dyson_starting.communications
	desc = {
		trigger = { NOT = { has_country_flag = denied_food_trade } }
		text = dyson_starting.104.desc_1
	}
	desc = {
		trigger = { has_country_flag = denied_food_trade }
		text = dyson_starting.104.desc_2
	}
	diplomatic = yes
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
	}
	
	picture_event_data = {
		portrait = event_target:the_natives
		room = "personality_peaceful_traders_room"
	}
	
	option = {
		name = dyson_starting.104.yes
		custom_tooltip = dyson_starting.104.yes.tooltip
		response_text = dyson_starting.104.yes.response
		event_target:corp_dyson_swarm = {
			remove_deposit = d_dyson_corp_food_natural_offset
			add_deposit = d_dyson_corp_food_trade_tech
		}
		set_country_flag = allowed_food_trade
		hidden_effect = {
			if = {
				limit = { has_country_flag = food_deal_now_triggers_advancement }
				#country_event = { id = dyson_starting.106 days = 90 }
				country_event = { id = dyson_starting.106 days = 20 }
			}
		}
	}
	option = {
		name = dyson_starting.104.no
		custom_tooltip = dyson_starting.104.no.tooltip
		response_text = dyson_starting.104.no.response
		set_country_flag = denied_food_trade
	}
}
#gatekeeper for the natives advancement, fired three years after gamestart. Checks denied_food_trade flag. If it is not present, the natives will stay machine age for two more years or until the trade is done anyways.
country_event = {
	id = dyson_starting.105
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { has_country_flag = allowed_food_trade }
			country_event = { id = dyson_starting.106 }
		}
		else = {
			set_country_flag = food_deal_now_triggers_advancement
			country_event = { id = dyson_starting.106 days = 720 }
		}
	}
}
#notify player of the natives advancement and advance them, AI will get some trade deposits to "simulate" them actually dealing with the natives
country_event = {
	id = dyson_starting.106
	title = dyson_starting.106.title
	desc = {
		trigger = { has_country_flag = allowed_food_trade }
		text = dyson_starting.106.desc_1
	}
	desc = {
		trigger = { NOT = { has_country_flag = allowed_food_trade } }
		text = dyson_starting.106.desc_2
	}
	picture = GFX_evt_metropolis
	show_sound = event_cityscape
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
		event_target:the_natives = {
			set_primitive_age = atomic_age
			set_country_flag = atomic_age
			capital_scope = {
				save_event_target_as = the_natives_planet
				while = {
					count = 2
					create_pop = {
						species = owner_species
					}
				}
			#reinforced military
				remove_all_armies = yes
				while = {
					count = 20
					create_army = {
						name = random
						species = last_created
						type = postatomic_army
						owner = event_target:the_natives
					}
				}
			}
		}
	#can no longer sell shiny stuff
		event_target:corp_dyson_swarm = { set_planet_flag = no_more_shiny_stuff }
	#tradedeposits are now worth double, replace them with version 2
		set_country_flag = dyson_natives_atomic
		event_target:corp_dyson_swarm = {
			while = {
				limit = { has_deposit = d_dyson_corp_value_trade_1 }
				remove_deposit = d_dyson_corp_value_trade_1
				add_deposit = d_dyson_corp_value_trade_2
			}
		}
		if = {
			limit = { NOT = { has_country_flag = allowed_food_trade } }
			country_event = { id = dyson_starting.108 days = 360 } #scientist betrayal
			#country_event = { id = dyson_starting.108 days = 10 }
		}
		country_event = { id = dyson_starting.137 days = 8300 random = 720 } #early space age gatekeeper, 22-24 years
		#country_event = { id = dyson_starting.137 days = 30 }
		if = {
			limit = { is_ai = yes }
			event_target:corp_dyson_swarm = {
				while = {
					count = 15
					add_deposit = d_dyson_corp_value_trade_2
				}
			}
		}
	}
	
	option = {
		name = dyson_starting.106.a
	}
}
#Leader is found out to have helped the natives advancement for money and exotic food (if player refuses to trade food with them)
country_event = {
	id = dyson_starting.108
	title = dyson_starting.108.title
	desc = dyson_starting.108.desc
	picture = GFX_evt_dark_alley
	show_sound = event_criminal_activity
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
		event_target:the_natives = {
			capital_scope = {
				save_event_target_as = the_natives_capital
			}
		}
		random_owned_leader = {
			limit = { leader_class = scientist }
			save_event_target_as = corrupt_scientist
		}
	}
	
	option = {
		name = dyson_starting.108.fire
		custom_tooltip = dyson_starting.108.fire.tooltip
		add_resource = { energy = 50 }
		add_resource = { food = 20 }
		hidden_effect = {
			event_target:corrupt_scientist = {
				kill_leader = {
					show_notification = no
				}
			}
		}
	}
	option = {
		name = dyson_starting.108.keep
		add_resource = { influence = -100 }
		add_resource = { energy = 50 }
		add_resource = { food = 20 }
	}
}
#early space age advancement (not if arrested if was chosen), give the AI some trade deposits to "simulate" them dealing with the natives
country_event = {
	id = dyson_starting.137
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { NOT = { has_country_flag = chose_arrested_development_route } }
			country_event = { id = dyson_starting.111 }
		}
		if = {
			limit = { is_ai = yes }
			find_natives_again = yes
			event_target:corp_dyson_swarm = {
				while = {
					count = 15
					add_deposit = d_dyson_corp_value_trade_2
				}
			}
		}
	}
}
country_event = {
	id = dyson_starting.111
	title = dyson_starting.111.title
	desc = {
		trigger = { check_variable = { which = infiltration_level value > 239 } }	
		text = dyson_starting.111.desc_annex
	}
	desc = {
		trigger = { 
			NOR = {
				check_variable = { which = infiltration_level value > 239 } 
				has_country_flag = chose_arrested_development_route
			}
		}
		text = dyson_starting.111.desc_advancement
	}
	desc = {
		trigger = { has_country_flag = chose_arrested_development_route }	
		text = dyson_starting.111.desc_arrested
	}
	picture = GFX_evt_metropolis
	show_sound = event_cityscape
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
	#infiltration level variable high enough. They will join the players empire. removes trade deposits as well, adds buff
		if = {
			limit = { check_variable = { which = infiltration_level value > 239 } }
			country_event = { id = dyson_starting.112 }
		}
	#infiltration level not high enough, will advance to early space age
		else = {
			event_target:the_natives = {
				set_primitive_age = early_space_age
				set_country_flag = early_space_age
				capital_scope = {
					create_fleet = {
						name = "NAME_Space_Station"
						effect = {
							set_owner = event_target:the_natives
							create_ship = {
								name = "NAME_Space_Station"
								design = "NAME_Space_Station"
							}
							set_location = PREV
						}
					}
				}
			}
		}
	#next advancement: FTL capabilities
		country_event = { id = dyson_starting.113 days = 36000 }
		#country_event = { id = dyson_starting.113 days = 20 }
	}
	
	option = {
		name = dyson_starting.111.a
	}
}
#annex event
country_event = {
	id = dyson_starting.112
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		set_country_flag = dyson_corp_takeoverÃŸ
		event_target:the_natives = {
			capital_scope = {
				set_owner = event_target:greedy_corp
				add_modifier = { modifier = infiltration_happiness days = 14600 }
				remove_all_armies = yes
				create_army = {
					name = random
					owner = ROOT
					species = owner_main_species
					type = "defense_army"
				}
				remove_building = building_primitive_dwellings
				remove_building = building_stone_palace
				remove_building = building_primitive_farm
				remove_building = building_primitive_mine
				remove_building = building_primitive_factory
				remove_building = building_primitive_capital
				remove_building = building_urban_dwellings
				remove_building = building_urban_dwellings
				add_building = building_capital
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_farming
				add_district = district_farming
				add_district = district_mining
				add_district = district_mining
				add_district = district_generator
				add_district = district_generator
				add_building = building_research_lab_1
				add_building = building_foundry_1
				add_building = building_factory_1
			}
			destroy_country = yes
		}
		event_target:corp_dyson_swarm = {
			dyson_remove_all_trade_deposits = yes
			remove_planet_flag = dyson_corperate_hq@event_target:greedy_corp
			remove_deposit = d_dyson_corp_takeover_funding_native_infiltration
		}
	}
}
#ftl advancement/ arrested development gatekeeper
country_event = {
	id = dyson_starting.113
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
		if = {
			limit = {
				NOR = { 
					has_country_flag = arrested_development_route_threshhold
					event_target:the_natives = { has_country_flag = dyson_arrested_development_corp }
				}
				check_variable = { which = infiltration_level value > 239 }
			}
			country_event = { id = dyson_starting.114 }  #annexation
		}
		else_if = {
			limit = {
				NOR = {
					event_target:the_natives = { has_country_flag = dyson_arrested_development_corp }
					has_country_flag = arrested_development_route_threshhold
				}
			}
			country_event = { id = dyson_starting.121 } #arrested development
		}
		else = {
			country_event = { id = dyson_starting.115 } #the natives declare war
		}
	}
}
#outcome 1: infiltration high enough, annex them.
country_event = {
	id = dyson_starting.114
	title = dyson_starting.114.title
	desc = dyson_starting.114.desc
	picture = GFX_evt_metropolis
	show_sound = event_cityscape
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
		country_event = { id = dyson_starting.112 }
	}
	option = {
		name = dyson_starting.114.a
	}
}
#outcome 2: infiltration not high enough, did not go for arrested development. They declare war on the player.
#a mercenary fleet spawns, as well as some armies on the actual swarm. The swarm gets annexed if these armies win. If they also manage to take the starbase, they will become an FTL country that is at (total) war with the player
#if the empire is an AI, this will roll a random outcome for them, as well as give them tradedeposits
country_event = {
	id = dyson_starting.115
	title = dyson_starting.115.title
	desc = dyson_starting.115.desc
	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:the_natives
		room = "personality_peaceful_traders_room"
	}

	immediate = {
		find_natives_again = yes
		event_target:the_natives = {
			capital_scope = {
				save_event_target_as = the_natives_capital
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			event_target:corp_dyson_swarm = {
				remove_planet_flag = dyson_corperate_hq@event_target:greedy_corp
				dyson_remove_all_trade_deposits = yes
			}
			owner_species = {
				save_event_target_as = merc_species
			}
			event_target:the_natives = {
				create_leader = {
					class = admiral
					species = event_target:merc_species
					name = random
					event_leader = yes
					skill = 3
					leader_age_min = 25
					leader_age_max = 45
					traits = {
						trait = leader_trait_mercenary_warrior
						trait = random_trait
					}
				}
			}
			create_fleet = {
				name = "NAME_Star_Rider_Flotilla"
				effect = {
					set_owner = event_target:the_natives
					create_star_rider_flotilla = yes
					set_location = event_target:the_natives_capital
					assign_leader = last_created_leader
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					uses_naval_capacity = no
				}
			}
			#event_target:the_natives = {
			#	create_leader = {
			#		class = admiral
			#		species = event_target:merc_species
			#		name = random
			#		event_leader = yes
			#		skill = 3
			#		leader_age_min = 25
			#		leader_age_max = 45
			#		traits = {
			#			trait = leader_trait_mercenary_warrior
			#			trait = random_trait
			#		}
			#	}
			#}
			#create_fleet = {
			#	name = "NAME_Armada_of_the_Voidborn"
			#	effect = {
			#		set_owner = event_target:the_natives
			#		create_armada_of_the_voidborn = yes
			#		set_location = event_target:the_natives_capital
			#		assign_leader = last_created_leader
			#	}
			#	settings = {
			#		can_upgrade = no
			#		can_disband = no
			#		can_change_composition = no
			#		uses_naval_capacity = no
			#	}
			#}
			event_target:the_natives = {
				owner_species = { save_event_target_as = the_natives_species }
				set_faction_hostility = {
					target = event_target:greedy_corp
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
				country_event = { id = dyson_starting.122 days = 5 }
			}
		}
		if = {
			limit = {
				is_ai = yes
			}
			random_list = {
				25 = {
				#war
					event_target:corp_dyson_swarm = {
						remove_planet_flag = dyson_corperate_hq@event_target:greedy_corp
					}
					owner_species = {
						save_event_target_as = merc_species
					}
					event_target:the_natives = {
						create_leader = {
							class = admiral
							species = event_target:merc_species
							name = random
							event_leader = yes
							skill = 3
							leader_age_min = 25
							leader_age_max = 45
							traits = {
								trait = leader_trait_mercenary_warrior
								trait = random_trait
							}
						}
					}
					create_fleet = {
						name = "NAME_Star_Rider_Flotilla"
						effect = {
							set_owner = event_target:the_natives
							create_star_rider_flotilla = yes
							set_location = event_target:the_natives_capital
							assign_leader = last_created_leader
						}
						settings = {
							can_upgrade = no
							can_disband = no
							can_change_composition = no
							uses_naval_capacity = no
						}
					}
					event_target:the_natives = {
						owner_species = { save_event_target_as = the_natives_species }
						set_faction_hostility = {
							target = event_target:greedy_corp
							set_hostile = yes
							set_neutral = no
							set_friendly = no
						}
						country_event = { id = dyson_starting.122 days = 5 }
					}
				}
				30 = {
				#annexation
					country_event = { id = dyson_starting.114 }
				}
				30 = {
				#arrested development
					country_event = { id = dyson_starting.121 }
					event_target:corp_dyson_swarm = {
						while = {
							count = 25
							add_deposit = d_dyson_corp_value_trade_2
						}
						remove_planet_flag = dyson_corperate_hq@event_target:greedy_corp
					}
				}
				15 = {
				#invasion
					event_target:the_natives_capital = {
						add_modifier = {
							modifier = planet_culture_shock
							years = 20
						}
						set_owner = event_target:greedy_corp
					}
					every_country = {
						limit = {
							has_communications = event_target:greedy_corp
							is_country_type = default
							NOT = { is_same_value = event_target:greedy_corp }
						}
						add_opinion_modifier = {
							who = event_target:greedy_corp
							modifier = opinion_primitive_violation
						}
					}
					event_target:corp_dyson_swarm = {
						remove_planet_flag = dyson_corperate_hq@event_target:greedy_corp
					}
				}
			}
		}
	}
	
	option = {
		name = dyson_starting.115.a
	}
	option = {
		name = dyson_starting.115.b
	}
	option = {
		name = dyson_starting.115.c
		custom_tooltip = dyson_starting.115.c.tooltip
	}
}
#armies land on the dyson swarm
country_event = {
	id = dyson_starting.122
	title = dyson_starting.122.title
	desc = dyson_starting.122.desc
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	
	is_triggered_only = yes
	
	immediate = {
		event_target:corp_dyson_swarm = {
			while = {
				count = 20
				create_army = {
					name = "NAME_dyson_native_shadow_ops"
					species = event_target:the_natives_species
					type = dyson_primitive_army
					owner = event_target:the_natives
				}
			}
		}
	}
	option = {
		name = dyson_starting.122.a
	}
}
#triggered when the natives take the starbase or the dyson swarm. If both are taken, they will annex the system and become a ftl civilization at war with corp empire. The player may also choose to play as the primitives at that point.
country_event = {
	id = dyson_starting.116
	title = dyson_starting.116.title
	desc = dyson_starting.116.desc
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	
	is_triggered_only = yes

	immediate = {
		find_natives_again = yes
		random_planet = {
			limit = { has_planet_flag = dyson_hostage_planet_@event_target:greedy_corp }
			remove_building = building_primitive_farm
			remove_building = building_primitive_mine
			remove_building = building_primitive_factory
			remove_building = building_primitive_capital
			remove_building = building_urban_dwellings
			remove_building = building_urban_dwellings
			add_building = building_capital
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_farming
			add_district = district_farming
			add_district = district_farming
			add_district = district_mining
			add_district = district_mining
			add_district = district_generator
			add_district = district_generator
			add_building = building_research_lab_1
			add_building = building_foundry_1
			add_building = building_factory_1
			remove_all_armies = yes
		}
		event_target:the_natives = {
			remove_country_flag = early_space_age
			set_country_flag = primitives_can_into_space
			set_country_type = default
			change_country_flag = random
			clear_ethos = yes
			country_add_ethic = ethic_fanatic_egalitarian
			country_add_ethic = ethic_militarist
			change_government = {
				authority = auth_democratic
				civics = random
			}
			set_name = random
			add_resource = {
				energy = 1000
				minerals = 1000
				alloys = 500
				food = 1000
			}
			random_owned_ship = {
				limit = { is_ship_size = primitive_space_station }
				fleet = { destroy_fleet = THIS }
			}
			declare_war = {
				target = event_target:greedy_corp
				name = "NAME_Dyson_corp_war"
				attacker_war_goal = "wg_end_threat"
			}
			add_modifier = {
				modifier = dyson_stolen_knowledge
				days = 1095
			}
			capital_scope = {
				solar_system = {
					if = {
						limit = { NOT = { exists = starbase } }
						create_starbase = {
							size = starbase_outpost
							owner = event_target:the_natives
						}
					}
					starbase = {
						set_owner = event_target:the_natives
					}
					every_system_planet = {
						limit = { num_pops > 1 }
						set_owner = event_target:the_natives
						set_controller = event_target:the_natives
					}
				}
			}
			add_opinion_modifier = {
				modifier = opinion_dyson_greedy_corp
				who = event_target:greedy_corp
			} 
		}
		find_natives_again = yes
	}
	option = {
		name = dyson_starting.116.a
	}
	option = {
		name = dyson_starting.116.b
	}
	option = {
		name = dyson_starting.116.c
		custom_tooltip = dyson_starting.116.c.tooltip
		hidden_effect = {
			event_target:the_natives = {
				set_player = event_target:greedy_corp
			}
		}
	}
}
#planet gatekeeper, checks if the starbase is occupied after the invasion is finished.
country_event = {
	id = dyson_starting.117
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = primitive_clone
	}
	
	immediate = {
		find_corp_again = yes
		set_country_flag = took_dyson_swarm_from_corp
		if = {
			limit = {
				has_country_flag = took_starbase_from_corp
			}
			event_target:greedy_corp = {
				country_event = { id = dyson_starting.116 }
			}
		}
	}
}
#starbase gatekeeper, checks if the planet is taken
ship_event = {
	id = dyson_starting.118
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			owner = {
				is_country_type = primitive_clone
			}
		}
	}
	
	immediate = {
		FROM = {
			owner = {
				set_country_flag = took_starbase_from_corp
			}
		}
		if = {
			limit = { 
				FROM = {
					owner = {
						has_country_flag = took_dyson_swarm_from_corp
					}
				}
			}
			owner = {
				country_event = { id = dyson_starting.116 }
			}
		}
	}
}
#corp invades natives
country_event = {
	id = dyson_starting.119
	title = dyson_starting.119.title
	desc = dyson_starting.119.desc
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	
	is_triggered_only = yes

	trigger = {
		FROM = { is_country_type = primitive_clone }
		is_country_type = default
		has_country_flag = dyson_corp_belonging_to_primitives_@FROM
	}

	immediate = {
		FROMFROM = {
			add_modifier = {
				modifier = planet_culture_shock
				years = 20
			}
			set_owner = ROOT
			solar_system = {
				every_system_planet = {
					dyson_remove_all_trade_deposits = yes
				}
			}
		}
		every_country = {
			limit = {
				has_communications = root
				is_country_type = default
				NOT = { is_same_value = root }
			}
			add_opinion_modifier = {
				who = root
				modifier = opinion_primitive_violation
			}
		}
		reset_years_of_peace = yes
	}
	
	option = {
		name = dyson_starting.119.a
	}
}
#invasion by anyone else will trigger the default primitive event
country_event = {
	id = dyson_starting.120

	hide_window = yes

	is_triggered_only = yes

	trigger = {
		FROM = { is_country_type = primitive_clone }
		is_country_type = default
		NOT = { has_country_flag = dyson_corp_belonging_to_primitives_@FROM }
	}

	immediate = {
		if = {
			limit = {
				is_regular_empire = yes
			}
			FROMFROM = {
				add_modifier = {
					modifier = planet_culture_shock
					days = 3600
				}
				set_owner = ROOT
				solar_system = {
					every_system_planet = {
						dyson_remove_all_trade_deposits = yes
					}
				}
			}
		}
		else = {
			FROMFROM = {
				set_owner = ROOT
			}
		}
		every_country = {
			limit = {
				has_communications = root
				is_country_type = default
				NOT = { is_same_value = root }
			}
			add_opinion_modifier = {
				who = root
				modifier = opinion_primitive_violation
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			fromfrom = {
				save_event_target_as = conquered_primitive_country
			}
			from = {
				owner_species = {
					save_event_target_as = conquered_primitive_species
				}
			}
			country_event = { id = action.140 }
		}
		reset_years_of_peace = yes
	}
}
#Arrested development outcome event
country_event = {
	id = dyson_starting.121
	title = dyson_starting.121.title
	desc = dyson_starting.121.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes
	
	immediate = {
		set_country_flag = dyson_arrested_development_corp
		event_target:the_natives = {
			random_owned_ship = {
				limit = { is_ship_size = primitive_space_station }
				fleet = { destroy_fleet = THIS }
			}
			set_primitive_age = arrested_development_age
			set_country_flag = arrested_development_age
		}
	}
	option = {
		name = dyson_starting.121.a
		custom_tooltip = dyson_starting.121.a.tooltip
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_arrested_development_steady_income
		}
	}
}
#Infiltration menu: takeover or arrested development?
country_event = {
	id = dyson_starting.124
	title = dyson_starting.124.title
	desc = dyson_starting.124.desc
	picture = GFX_evt_metropolis
	show_sound = event_cityscape
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.124.infiltrate
		custom_tooltip = dyson_starting.124.infiltrate.tooltip
		hidden_effect = {
			country_event = { id = dyson_starting.150 }
		}
	}
	option = {
		name = dyson_starting.124.arrested_development
		custom_tooltip = dyson_starting.124.arrested_development.tooltip
		hidden_effect = {
			country_event = { id = dyson_starting.125 }
		}
	}
	option = {
		name = dyson_starting.back
		country_event = { id = dyson_starting.103 }
	}
}
#natives announcement
country_event = {
	id = dyson_starting.126
	title = dyson_starting.communications
	desc = dyson_starting.126.desc
	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:the_natives
		room = "personality_peaceful_traders_room"
	}

	option = {
		name = dyson_starting.126.a
	}
}

#arrested development events
country_event = {
	id = dyson_starting.125
	title = dyson_starting.124.title
	desc = dyson_starting.125.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.125.confirm
		hidden_effect = {
			country_event = { id = dyson_starting.126 days = 30 }
			set_country_flag = chose_arrested_development_route
			country_event = { id = dyson_starting.127 }
		}
	}
	option = {
		name = dyson_starting.back
		country_event = { id = dyson_starting.124 }
	}
}
#goal 1: establish 15 traderoutes 
country_event = {
	id = dyson_starting.127
	title = dyson_starting.124.title
	desc = dyson_starting.127.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes
	
	immediate = { set_country_flag = goal_one }

	option = {
		name = dyson_starting.127.a
	}
}
#arrested development infiltration screen
country_event = {
	id = dyson_starting.128
	title = dyson_starting.128.title
	desc = {
		trigger = { has_country_flag = goal_one }
		text = dyson_starting.128.desc_1
	}
	desc = {
		trigger = { has_country_flag = goal_two }
		text = dyson_starting.128.desc_2
	}
	desc = {
		trigger = { has_country_flag = goal_three }
		text = dyson_starting.128.desc_3
	}
	desc = {
		trigger = { has_country_flag = goal_four }
		text = dyson_starting.128.desc_4
	}
	desc = {
		trigger = { has_country_flag = goal_five }
		text = dyson_starting.128.desc_5
	}
	desc = {
		trigger = { has_country_flag = goal_six }
		text = dyson_starting.128.desc_6
	}
	desc = {
		trigger = { has_country_flag = goal_seven }
		text = dyson_starting.128.desc_7
	}
	desc = {
		trigger = { has_country_flag = goal_eight }
		text = dyson_starting.128.desc_8
	}
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.128.a
	}
	option = {
		trigger = { has_country_flag = goal_one }
		allow = { check_variable = { which = dyson_number_of_tradedeals value > 14 } }
		name = dyson_starting.128.goal_1
		country_event = { id = dyson_starting.129 }
	}
	option = {
		trigger = { has_country_flag = goal_three }
		allow = { check_variable = { which = dyson_number_of_tradedeals value > 24 } }
		name = dyson_starting.128.goal_3
		country_event = { id = dyson_starting.134 }
	}
	option = {
		trigger = { has_country_flag = goal_five }
		allow = { check_variable = { which = dyson_number_of_tradedeals value > 34 } }
		name = dyson_starting.128.goal_5
		country_event = { id = dyson_starting.136 }
	}
	option = {
		trigger = { has_country_flag = goal_seven }
		allow = { check_variable = { which = dyson_number_of_tradedeals value > 49 } }
		name = dyson_starting.128.goal_7
		country_event = { id = dyson_starting.140 }
	}
	option = {
		trigger = { has_country_flag = goal_eight }
		allow = { resource_stockpile_compare = { resource = energy value >= 1500 } }
		name = dyson_starting.128.goal_8
		country_event = { id = dyson_starting.121 }
		add_resource = { energy = -1500 }
	}
	option = {
		name = dyson_starting.back
		country_event = { id = dyson_starting.103 }
	}
}
#industry contact, after reaching goal 1
country_event = {
	id = dyson_starting.129
	title = dyson_starting.129.title
	desc = dyson_starting.129.desc
	picture = GFX_evt_board_meeting
	
	is_triggered_only = yes
	
	immediate = { 
		set_country_flag = goal_two
		remove_country_flag = goal_one
	}

	option = {
		name = dyson_starting.129.a
		add_modifier = {
			modifier = dyson_local_researchers_help
			days = 360
		}
		country_event = { id = dyson_starting.130 days = 360 }
	}
	option = {
		name = dyson_starting.129.b
		add_modifier = {
			modifier = dyson_independend_researchers_help
			days = 360
		}
		country_event = { id = dyson_starting.130 days = 360 }
	}
}
country_event = {
	id = dyson_starting.130
	title = dyson_starting.130.title
	desc = dyson_starting.130.desc
	picture = GFX_evt_board_meeting
	
	is_triggered_only = yes
	
	immediate = { 
		set_country_flag = goal_three
		remove_country_flag = goal_two
		find_natives_again = yes
	}

	option = {
		name = dyson_starting.130.a
		event_target:corp_dyson_swarm = {
			add_deposit = d_dyson_corp_value_trade_2
			add_deposit = d_dyson_corp_value_trade_2
		}
		change_variable = { which = dyson_number_of_tradedeals value = 2 }
		hidden_effect = {
			if = {
				limit = { check_variable = { which = dyson_number_of_tradedeals value > 19 } }
				random_list = {
					50 = {
						country_event = { id = dyson_starting.131 days = 30 }
					}
					50 = {
						country_event = { id = dyson_starting.133 days = 30 }
					}
				}
			}
		}
	}
}
#blackmailer event
country_event = {
	id = dyson_starting.131
	title = dyson_starting.131.title
	desc = dyson_starting.131.desc
	diplomatic = yes
	
	is_triggered_only = yes

	picture_event_data = {
		room = "no_video_feed_room"
	}

	option = {
		name = dyson_starting.131.a
		add_resource = { energy = -800 }
	}
	option = {
		name = dyson_starting.131.b
		add_resource = { energy = -100 }
		add_resource = { influence = -200 }
	}
	option = {
		name = dyson_starting.131.c
		custom_tooltip = dyson_starting.131.c.tooltip
		hidden_effect = {
			country_event = { id = dyson_starting.132 days = 10 }
		}
	}
}
#embargo event
country_event = {
	id = dyson_starting.132
	title = dyson_starting.132.title
	desc = dyson_starting.132.desc
	picture = GFX_evt_civil_action
	
	is_triggered_only = yes
	
	immediate = { find_natives_again = yes }

	option = {
		name = dyson_starting.132.a
		event_target:corp_dyson_swarm = {
			while = {
				count = 10
				remove_deposit = d_dyson_corp_value_trade_2
			}
		}
	}
}
#betrayal event
country_event = {
	id = dyson_starting.133
	title = dyson_starting.133.title
	desc = dyson_starting.133.desc
	picture = GFX_evt_board_meeting
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
	}

	option = {
		name = dyson_starting.133.a
		allow = { resource_stockpile_compare = { resource = energy value >= 800 } }
		add_resource = { energy = -800 }
	}
	option = {
		name = dyson_starting.133.b
		custom_tooltip = dyson_starting.133.b.tooltip
		hidden_effect = {
			event_target:corp_dyson_swarm = {
				while = {
					count = 2
					remove_deposit = d_dyson_corp_value_trade_2
				}
				while = {
					count = 2
					add_deposit = d_dyson_corp_value_trade_1
				}
			}
		}
	}
}
#straw company, after reaching goal 3
country_event = {
	id = dyson_starting.134
	title = dyson_starting.134.title
	desc = dyson_starting.134.desc
	picture = GFX_evt_board_meeting
	
	is_triggered_only = yes
	
	immediate = { 
		set_country_flag = goal_four
		remove_country_flag = goal_three
		remove_country_flag = dyson_blackmail_betrail_done
		find_natives_again = yes
	}

	option = {
		name = dyson_starting.134.a
		add_modifier = { modifier = dyson_local_genesplicers_help days = 360 }
		country_event = { id = dyson_starting.135 days = 360 }
	}
	option = {
		name = dyson_starting.134.b
		add_modifier = { modifier = dyson_independend_genesplicers_help days = 360 }
		country_event = { id = dyson_starting.135 days = 360 }
	}
}
country_event = {
	id = dyson_starting.135
	title = dyson_starting.135.title
	desc = dyson_starting.135.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes
	
	immediate = { 
		set_country_flag = goal_five
		remove_country_flag = goal_four
		find_natives_again = yes
	}

	option = {
		name = dyson_starting.135.a
		hidden_effect = {
			set_country_flag = dyson_straw_social
		}
	}
	option = {
		name = dyson_starting.135.b
		hidden_effect = {
			set_country_flag = dyson_straw_enterteinment
		}
	}
	option = {
		name = dyson_starting.135.c
		hidden_effect = {
			set_country_flag = dyson_straw_news
		}
	}
}
#hacking event, goal 5
country_event = {
	id = dyson_starting.136
	title = dyson_starting.136.title
	desc = dyson_starting.136.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes

	immediate = { 
		set_country_flag = goal_six
		remove_country_flag = goal_five
	}

	option = {
		name = dyson_starting.136.a
		custom_tooltip = dyson_starting.136.a.tooltip
		hidden_effect = {
			country_event = { id = dyson_starting.111 days = 360 }
			country_event = { id = dyson_starting.138 days = 361 }
		}
	}
}
#blackmailing event, goal 6, stops the natives from advancing further
country_event = {
	id = dyson_starting.138
	title = dyson_starting.138.title
	desc = dyson_starting.138.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes

	immediate = { 
		set_country_flag = goal_seven
		remove_country_flag = goal_six
		set_country_flag = arrested_development_route_threshhold
	}

	option = {
		name = dyson_starting.138.a
		hidden_effect = {
			country_event = { id = dyson_starting.139 days = 380 }
		}
	}
}
#strawcorp followup
country_event = {
	id = dyson_starting.139
	title = dyson_starting.139.title
	desc = {
		text = dyson_starting.139.desc.media
		trigger = { has_country_flag = dyson_straw_social }
	}
	desc = {
		text = dyson_starting.139.desc.entertain
		trigger = { has_country_flag = dyson_straw_enterteinment }
	}
	desc = {
		text = dyson_starting.139.desc.news
		trigger = { has_country_flag = dyson_straw_news }
	}
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.139.a
		hidden_effect = {
			remove_country_flag = dyson_straw_social
			remove_country_flag = dyson_straw_enterteinment
			remove_country_flag = dyson_straw_news
		}
	}
}
#marketcontrol, goal 7
country_event = {
	id = dyson_starting.140
	title = dyson_starting.140.title
	desc = dyson_starting.140.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes

	immediate = { 
		set_country_flag = goal_eight
		remove_country_flag = goal_seven
	}

	option = {
		name = dyson_starting.140.a
		custom_tooltip = dyson_starting.140.a.tooltip
	}
}

#infiltration: annexation events
#add 0.5% progress every month --> it takes about 17 years (not counting extra events or trade)
#arrested development events
country_event = {
	id = dyson_starting.150
	title = dyson_starting.150.title
	desc = dyson_starting.150.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.150.confirm
		hidden_effect = {
			country_event = { id = dyson_starting.126 days = 30 }
			set_country_flag = chose_annexation_route
			country_event = { id = dyson_starting.151 }
			country_event = { id = dyson_starting.152 days = 30 }
			country_event = { id = dyson_starting.154 days = 360 }
		}
	}
	option = {
		name = dyson_starting.back
		country_event = { id = dyson_starting.124 }
	}
}
#explaination, add deposit
country_event = {
	id = dyson_starting.151
	title = dyson_starting.150.title
	desc = dyson_starting.151.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes
	
	immediate = {
		find_natives_again = yes
		set_variable = { which = infiltration_level value = 1 }
	}

	option = {
		name = dyson_starting.151.a
		event_target:corp_dyson_swarm = { add_deposit = d_dyson_corp_takeover_funding_native_infiltration }
	}
}
#overview
country_event = {
	id = dyson_starting.153
	title = dyson_starting.153.title
	desc = dyson_starting.153.desc
	picture = GFX_evt_metropolis
	
	is_triggered_only = yes

	immediate = {
		set_variable = { which = infiltration_precent value = infiltration_level }
		divide_variable = { which = infiltration_precent value = 2 }
	#never display more than 100%, although it will keep going further than that
		if = {
			limit = {
				check_variable = { which = infiltration_precent value > 100 }
			}
			set_variable = { which = infiltration_precent value = 100 }
		}
	}
	
	option = {
		name = dyson_starting.153.a
	}
	#option = {
	#	name = dyson_starting.153.b
	#}
}
#triggered every 30 days. Changes the infiltration variable.
country_event = {
	id = dyson_starting.152
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		find_natives_again = yes
		change_variable = { which = infiltration_level value = 1 }
		if = {
			limit ={
				any_country = {
					has_country_flag = dyson_primitives_belonging_to_corp_@event_target:greedy_corp 
				}
			}
			country_event = { id = dyson_starting.152 days = 30 }
		}
	}
}
#infiltration events. Every four years a random event will happen (some are conditional).
country_event = {
	id = dyson_starting.154
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		find_natives_again = yes
		if = {
			limit = { any_country = { has_country_flag = dyson_primitives_belonging_to_corp_@event_target:greedy_corp } }
			country_event = { id = dyson_starting.154 days = 1440 }
			random_list = {
				10 = {
					#a coup can be instigated (alloy)
					country_event = { id = dyson_starting.156 }
				}
				10 = {
					#a bribe is necessary (energy)
					country_event = { id = dyson_starting.159 }
				}
				10 = {
					#traitor (energy)
					country_event = { id = dyson_starting.160 }
				}
				10 = {
					#assassination (energy)
					country_event = { id = dyson_starting.161 }
				}
				10 = {
					#religios similarities (unity, unique)
					modifier = {
						factor = 0
						NOR = {
							has_ethic = ethic_fanatic_spiritualist
							has_ethic = ethic_spiritualist
							NOT = { has_country_flag = dyson_religion_event_happened }
						}
					}
					country_event = { id = dyson_starting.164 }
					set_country_flag = dyson_religion_event_happened
				}
				10 = {
					#introduce robots (enigineering for energy, unique)
					modifier = {
						factor = 0
						NOR = {
							has_technology = tech_robotic_workers
							NOT = { has_country_flag = dyson_robot_event_happened }
						}
					}
					country_event = { id = dyson_starting.165 }
					set_country_flag = dyson_robot_event_happened
				}
				40 = {
					#mission to sabotage their spaceport to instill insecurities in them (requires early space age, depending on how many resources spent can go wrong, unique)
					modifier = {
						factor = 0
						NOT = { event_target:the_natives = { has_country_flag = early_space_age } }
					}
					country_event = { id = dyson_starting.166 }
				}
				#30 = {
				#	#nothing happens
				#}
			}
		}
	}
}
#mission to sabotage their spaceport and break their spirits
country_event = {
	id = dyson_starting.166
	title = dyson_starting.166.title
	desc = dyson_starting.166.desc
	picture = GFX_evt_diplomatic_visit
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.166.big
		add_resource = { energy = -800 }
		allow = { resource_stockpile_compare = { resource = energy value >= 800 } }
		hidden_effect = {
			set_country_flag = dyson_sabotage_big
			random_list = {
				85 = {
					country_event = { id = dyson_starting.167 days = 30 random = 30 }
				}
				15 = {
					country_event = { id = dyson_starting.168 days = 30 random = 30 }
				}
			}
		}
	}
	option = {
		name = dyson_starting.166.small
		allow = { resource_stockpile_compare = { resource = energy value >= 400 } }
		add_resource = { energy = -400 }
		hidden_effect = {
			set_country_flag = dyson_sabotage_small
			random_list = {
				75 = {
					country_event = { id = dyson_starting.167 days = 30 random = 30 }
				}
				25 = {
					country_event = { id = dyson_starting.168 days = 30 random = 30 }
				}
			}
		}
	}
	option = {
		name = dyson_starting.166.no
		custom_tooltip = dyson_starting.takeover_decrease
		hidden_effect = {
			subtract_variable = { which = infiltration_level value = 20 }
		}
	}
}
#goes right
country_event = {
	id = dyson_starting.167
	title = dyson_starting.167.title
	desc = {
		trigger = { has_country_flag = dyson_sabotage_big }
		text = dyson_starting.167.desc_y
	}
	desc = {
		trigger = { has_country_flag = dyson_sabotage_small }
		text = dyson_starting.167.desc_n
	}
	picture = GFX_evt_diplomatic_visit
	
	is_triggered_only = yes
	
	immediate = {
		event_target:the_natives = {
			random_owned_ship = {
				limit = { is_ship_size = primitive_space_station }
				fleet = { destroy_fleet = THIS }
			}
		}
	}
	
	option = {
		name = dyson_starting.167.a
		custom_tooltip = dyson_starting.takeover_increase
		hidden_effect = {
			change_variable = { which = infiltration_level value = 30 }
		}
	}
	after = {
		remove_country_flag = dyson_sabotage_big
		remove_country_flag = dyson_sabotage_small
	}
}
#goes wrong
country_event = {
	id = dyson_starting.168
	title = dyson_starting.168.title
	desc = {
		trigger = { has_country_flag = dyson_sabotage_big }
		text = dyson_starting.168.desc_y
	}
	desc = {
		trigger = { has_country_flag = dyson_sabotage_small }
		text = dyson_starting.168.desc_n
	}
	picture = GFX_evt_civil_action
	
	is_triggered_only = yes
	
	immediate = {
		event_target:the_natives = {
			random_owned_ship = {
				limit = { is_ship_size = primitive_space_station }
				fleet = { destroy_fleet = THIS }
			}
		}
	}
	
	option = {
		name = dyson_starting.168.a
		custom_tooltip = dyson_starting.takeover_decrease
		hidden_effect = {
			subtract_variable = { which = infiltration_level value = 30 }
		}
	}
	after = {
		remove_country_flag = dyson_sabotage_big
		remove_country_flag = dyson_sabotage_small
	}
}
#sell robots
country_event = {
	id = dyson_starting.165
	title = dyson_starting.165.title
	desc = dyson_starting.165.desc
	picture = GFX_evt_robot_assembly_plant
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.165.a
		custom_tooltip = dyson_starting.takeover_increase
		add_resource = { engineering_research = -1000 }
		add_resource = { energy = 400 }
		event_target:the_natives.Capital_scope = {
			create_species = {
				name = random
				class = machine
				portrait = random
				traits = random
			}
			while = {
				count = 2
				create_pop = {
					species = last_created_species
				}
			}
		}
		hidden_effect = {
			change_variable = { which = infiltration_level value = 20 }
		}
	}
	option = {
		name = dyson_starting.165.b
	}
}
#religious similarities
country_event = {
	id = dyson_starting.164
	title = dyson_starting.164.title
	desc = dyson_starting.164.desc
	picture = GFX_evt_board_meeting
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.164.a
		custom_tooltip = dyson_starting.takeover_increase
		allow = { resource_stockpile_compare = { resource = unity value >= 1000 } }
		add_resource = { unity = -1000 }
		hidden_effect = {
			change_variable = { which = infiltration_level value = 20 }
		}
	}
	option = {
		name = dyson_starting.164.b
	}
}
#instigate an assasination. Choose how much to invest.
country_event = {
	id = dyson_starting.161
	title = dyson_starting.161.title
	desc = dyson_starting.161.desc
	picture = GFX_evt_diplomatic_visit
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.161.big
		add_resource = { energy = -800 }
		allow = { resource_stockpile_compare = { resource = energy value >= 800 } }
		hidden_effect = {
			set_country_flag = dyson_assasination_big
			random_list = {
				75 = {
					country_event = { id = dyson_starting.162 days = 30 random = 30 }
				}
				25 = {
					country_event = { id = dyson_starting.163 days = 30 random = 30 }
				}
			}
		}
	}
	option = {
		name = dyson_starting.161.small
		allow = { resource_stockpile_compare = { resource = energy value >= 400 } }
		add_resource = { energy = -400 }
		hidden_effect = {
			set_country_flag = dyson_assasination_small
			random_list = {
				50 = {
					country_event = { id = dyson_starting.162 days = 30 random = 30 }
				}
				50 = {
					country_event = { id = dyson_starting.163 days = 30 random = 30 }
				}
			}
		}
	}
	option = {
		name = dyson_starting.161.no
		custom_tooltip = dyson_starting.takeover_decrease
		hidden_effect = {
			subtract_variable = { which = infiltration_level value = 20 }
		}
	}
}
#goes right
country_event = {
	id = dyson_starting.162
	title = dyson_starting.162.title
	desc = {
		trigger = { has_country_flag = dyson_assasination_big }
		text = dyson_starting.162.desc_y
	}
	desc = {
		trigger = { has_country_flag = dyson_assasination_small }
		text = dyson_starting.162.desc_n
	}
	picture = GFX_evt_diplomatic_visit
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.162.a
		custom_tooltip = dyson_starting.takeover_increase
		hidden_effect = {
			change_variable = { which = infiltration_level value = 20 }
		}
	}
	after = {
		remove_country_flag = dyson_assasination_small
		remove_country_flag = dyson_assasination_big
	}
}
#goes wrong
country_event = {
	id = dyson_starting.163
	title = dyson_starting.163.title
	desc = {
		trigger = { has_country_flag = dyson_assasination_big }
		text = dyson_starting.163.desc_y
	}
	desc = {
		trigger = { has_country_flag = dyson_assasination_small }
		text = dyson_starting.163.desc_n
	}
	picture = GFX_evt_civil_action
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.163.a
		custom_tooltip = dyson_starting.takeover_decrease
		hidden_effect = {
			subtract_variable = { which = infiltration_level value = 20 }
		}
	}
	after = {
		remove_country_flag = dyson_assasination_small
		remove_country_flag = dyson_assasination_big
	}
}
#traitor
country_event = {
	id = dyson_starting.160
	title = dyson_starting.160.title
	desc = dyson_starting.160.desc
	picture = GFX_evt_board_meeting
	
	is_triggered_only = yes

	option = {
		name = dyson_starting.160.a
		allow = { resource_stockpile_compare = { resource = energy value >= 800 } }
		add_resource = { energy = -800 }
	}
	option = {
		name = dyson_starting.160.b
		custom_tooltip = dyson_starting.takeover_decrease
		hidden_effect = {
			subtract_variable = { which = infiltration_level value = 40 }
		}
	}
	option = {
		name = dyson_starting.160.c
		custom_tooltip = dyson_starting.takeover_increase
		allow = { resource_stockpile_compare = { resource = energy value >= 1600 } }
		add_resource = { energy = -1600 }
		hidden_effect = {
			change_variable = { which = infiltration_level value = 20 }
		}
	}
}
#a bribe is necessary
country_event = {
	id = dyson_starting.159
	title = dyson_starting.159.title
	desc = dyson_starting.159.desc
	picture = GFX_evt_board_meeting
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.159.a
		custom_tooltip = dyson_starting.takeover_increase
		allow = { resource_stockpile_compare = { resource = energy value >= -800 } }
		add_resource = { energy = -800 }
		hidden_effect = {
			change_variable = { which = infiltration_level value = 20 }
		}
	}
	option = {
		name = dyson_starting.159.b
		custom_tooltip = dyson_starting.takeover_decrease
		hidden_effect = {
			subtract_variable = { which = infiltration_level value = 20 }
		}
	}
}
#instegate a coup. Both doing and not doing it can go wrong.
country_event = {
	id = dyson_starting.156
	title = dyson_starting.156.title
	desc = dyson_starting.156.desc
	picture = GFX_evt_civil_action
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.156.yes
		allow = { resource_stockpile_compare = { resource = alloys value >= 500 } }
		add_resource = { alloys = -500 }
		hidden_effect = {
			set_country_flag = dyson_coup_helped
			random_list = {
				80 = {
					country_event = { id = dyson_starting.157 days = 30 random = 30 }
				}
				20 = {
					country_event = { id = dyson_starting.158 days = 30 random = 30 }
				}
			}
		}
	}
	option = {
		name = dyson_starting.156.no
		hidden_effect = {
			set_country_flag = dyson_coup_not_helped
			random_list = {
				20 = {
					country_event = { id = dyson_starting.158 days = 30 random = 30 }
				}
				80 = {
					country_event = { id = dyson_starting.157 days = 30 random = 30 }
				}
			}
		}
	}
}
#goes right
country_event = {
	id = dyson_starting.157
	title = dyson_starting.157.title
	desc = {
		trigger = { has_country_flag = dyson_coup_helped }
		text = dyson_starting.157.desc_y
	}
	desc = {
		trigger = { has_country_flag = dyson_coup_not_helped }
		text = dyson_starting.157.desc_n
	}
	picture = GFX_evt_night_raid
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.157.a
		custom_tooltip = dyson_starting.takeover_increase
		hidden_effect = {
			change_variable = { which = infiltration_level value = 20 }
		}
	}
	after = {
		remove_country_flag = dyson_coup_helped
		remove_country_flag = dyson_coup_not_helped
	}
}
#goes wrong
country_event = {
	id = dyson_starting.158
	title = dyson_starting.158.title
	desc = {
		trigger = { has_country_flag = dyson_coup_helped }
		text = dyson_starting.158.desc_y
	}
	desc = {
		trigger = { has_country_flag = dyson_coup_not_helped }
		text = dyson_starting.158.desc_n
	}
	picture = GFX_evt_night_raid
	
	is_triggered_only = yes
	
	option = {
		name = dyson_starting.158.a
		custom_tooltip = dyson_starting.takeover_decrease
		hidden_effect = {
			subtract_variable = { which = infiltration_level value = 20 }
		}
	}
	after = {
		remove_country_flag = dyson_coup_helped
		remove_country_flag = dyson_coup_not_helped
	}
}

#built observation outpost. The natives give an ultimatum.
ship_event = {
	id = dyson_starting.170
	title = dyson_starting.communications
	desc = dyson_starting.170.desc
	diplomatic = yes
	
	is_triggered_only = yes

	trigger = {
		From.Owner = {
			is_country_type = primitive_clone
		}
		owner = {
			has_country_flag = dyson_corp_belonging_to_primitives_@From.Owner
		}
	}

	picture_event_data = {
		portrait = event_target:the_natives
		room = "personality_peaceful_traders_room"
	}

	immediate = {
		owner = {
			find_natives_again = yes
			event_target:the_natives = {
				capital_scope = {
					save_event_target_as = the_natives_capital
				}
			}
		}
	}

	option = {
		name = dyson_starting.170.a
		event_target:the_natives_capital = {
			observation_outpost = {
				dismantle = yes
			}
		}
	}
	option = {
		name = dyson_starting.170.b
		event_target:the_natives = {
			set_faction_hostility = {
				target = event_target:greedy_corp
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
		event_target:corp_dyson_swarm = {
			dyson_remove_all_trade_deposits = yes
			remove_planet_flag = dyson_corperate_hq@event_target:greedy_corp
		}
		hidden_effect = {
		#will spawn invasion force and disband the observationpost if they have reached the eary space age
			if = {
				limit = {
					event_target:the_natives = {
						has_country_flag = early_space_age
					}
				}
				event_target:the_natives_capital = {
					observation_outpost = {
						dismantle = yes
					}
				}
				owner_species = {
					save_event_target_as = merc_species
				}
				event_target:the_natives = {
					country_event = { id = dyson_starting.122 days = 20 }
					create_leader = {
						class = admiral
						species = event_target:merc_species
						name = random
						event_leader = yes
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = leader_trait_mercenary_warrior
							trait = random_trait
						}
					}
					capital_scope = {
						create_fleet = {
							name = "NAME_Star_Rider_Flotilla"
							effect = {
								set_owner = event_target:the_natives
								create_star_rider_flotilla = yes
								set_location = event_target:the_natives_capital
								assign_leader = last_created_leader
							}
							settings = {
								can_upgrade = no
								can_disband = no
								can_change_composition = no
								uses_naval_capacity = no
							}
						}
					}
				}
			}
		}
	}
}

