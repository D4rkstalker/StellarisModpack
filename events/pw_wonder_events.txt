namespace = pw_wonder

# Initial event to say this mod is active.
event = {
	id = pw_wonder.0
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	immediate = { set_global_flag = pw_active }
}

#Message for wonder construction complete
# UNUSED!
planet_event = {
	id = pw_wonder.1
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
		is_occupied_flag = no
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_space_elevator_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = WONDER
				scope = FROM
			}
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
	}
}

# Space Elevator -> id 100

#On Space Elevator built
planet_event = {
	id = pw_wonder.100
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_space_elevator_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.101 }
		planet_event = { id = pw_wonder.102 }
		planet_event = { id = pw_wonder.103 days = 5 }
	}
}

#On first time Space Elevator is built (regular empire)
planet_event = {
	id = pw_wonder.101
	title = pw_wonder.101.name
	desc = pw_wonder.101.desc
	picture = GFX_evt_pw_space_elevator
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = {owner = {has_country_flag = pw_space_elevator_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_space_elevator_built }
	}

	option = {
		name = pw_wonder.101.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		add_modifier = {
			modifier = pw_mod_space_elevator_xenophile
			days = @pw_5years
			clear_on_owner_change = yes
		}
	}

	option = {
		name = pw_wonder.101.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		add_modifier = {
			modifier = pw_mod_space_elevator_xenophobe
			days = @pw_5years
			clear_on_owner_change = yes
		}
	}
}

#On first time Space Elevator is built (gestalt)
planet_event = {
	id = pw_wonder.102
	title = pw_wonder.102.name
	desc = pw_wonder.102.desc
	picture = GFX_evt_pw_space_elevator
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.102.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.102.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = {has_country_flag = pw_space_elevator_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_space_elevator_built }
	}
}

#Random choice of event after Space Elevator is build.
planet_event = {
	id = pw_wonder.103
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_active_building = pw_building_space_elevator
	}

	immediate = {
		random_list = {
			10 = {
				modifier = {
					factor = 0
					owner = { is_gestalt = yes }
				}
				planet_event = { id = pw_wonder.104 days = 180 random = 180 }
			}
			10 = {
				modifier = {
					factor = 0
					owner = { is_gestalt = yes }
				}
				planet_event = { id = pw_wonder.105 days = 180 random = 180 }
			}
			10 = {
				modifier = {
					factor = 0
					owner = { is_gestalt = yes }
				}
				planet_event = { id = pw_wonder.106 days = 180 random = 180 }
			}
		}
	}
}

#Seize unregulated goods
planet_event = {
	id = pw_wonder.104
	title = pw_wonder.104.name
	desc = pw_wonder.104.desc
	picture = GFX_evt_pw_space_elevator
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { owner = { has_country_flag = pw_wonder_event_104 }}
		has_active_building = pw_building_space_elevator
	}
	immediate = {
		owner = { set_country_flag = pw_wonder_event_104 }
	}
	option = {
		name = pw_wonder.104.a
		owner = {
			add_monthly_resource_mult = {
				resource = consumer_goods
				value = @tier3materialreward
				min = @tier3materialmin
				max = @tier3materialmax
			}
		}
	}
	option = {
		name = pw_wonder.104.b
		owner = {
			add_monthly_resource_mult = {
				resource = energy
				value = @tier3materialreward
				min = @tier3materialmin
				max = @tier3materialmax
			}
		}
	}
}

#Banned Substances
planet_event = {
	id = pw_wonder.105
	title = pw_wonder.105.name
	desc = pw_wonder.105.desc
	picture = GFX_evt_pw_space_elevator
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { owner = { has_country_flag = pw_wonder_event_105 }}
		has_active_building = pw_building_space_elevator
	}
	immediate = {
		owner = { set_country_flag = pw_wonder_event_105 }
	}
	option = {
		name = pw_wonder.105.a
		add_modifier = { modifier = pw_mod_space_elevator_105_a days = @pw_5years }
	}
	option = {
		name = pw_wonder.105.b
		add_modifier = { modifier = pw_mod_space_elevator_105_b days = @pw_5years }
	}
	option = {
		name = pw_wonder.105.c
		add_modifier = { modifier = pw_mod_space_elevator_105_c days = @pw_5years }
	}
}

#Stowaways
planet_event = {
	id = pw_wonder.106
	title = pw_wonder.106.name
	desc = pw_wonder.106.desc
	picture = GFX_evt_pw_space_elevator
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { owner = { has_country_flag = pw_wonder_event_106 }}
		has_active_building = pw_building_space_elevator
	}
	immediate = {
		owner = { set_country_flag = pw_wonder_event_106 }
	}
	option = {
		name = pw_wonder.106.a
		create_pop = {
			species = owner
		}
	}
	option = {
		name = pw_wonder.106.b
		custom_tooltip = pw_wonder.106.b.tooltip
		owner = {
			create_fleet = {
				name = "Stowaways"
				effect = {
					set_owner = ROOT.owner
					set_location = ROOT
					create_ship = {
						name = random
						design = "NAME_Colonizer"
						colonizer_species = ROOT.owner.owner_species
					}
				}
			}
		}
	}
	option = {
		name = pw_wonder.106.c
		owner = {
			owner = {
				add_monthly_resource_mult = {
					resource = influence
					value = @tier2influencereward
					min = @tier2influencemin
					max = @tier2influencemax
				}
			}
		}
	}
}

# Particle Supercollider -> id 200

#On Particle Supercollider built
planet_event = {
	id = pw_wonder.200
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_particle_supercollider_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.201 }
		planet_event = { id = pw_wonder.202 }
	}
}

#On first time Particle Supercollider is built (Regular Empire)
planet_event = {
	id = pw_wonder.201
	title = pw_wonder.201.name
	desc = pw_wonder.201.desc
	picture = GFX_evt_physics_research
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.201.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		add_modifier = {
			modifier = pw_mod_particle_supercollider_materialist
			days = @pw_5years
			clear_on_owner_change = yes
		}
	}

	option = {
		name = pw_wonder.201.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		add_modifier = {
			modifier = pw_mod_particle_supercollider_spiritualist
			days = @pw_5years
			clear_on_owner_change = yes
		}
	}

	trigger = {
		NOT = {owner = {has_country_flag = pw_particle_supercollider_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_particle_supercollider_built }
	}
}

#On first time Particle Supercollider is built (Gestalt)
planet_event = {
	id = pw_wonder.202
	title = pw_wonder.202.name
	desc = pw_wonder.202.desc
	picture = GFX_evt_physics_research
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.202.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.202.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = {has_country_flag = pw_particle_supercollider_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_particle_supercollider_built }
	}
}

# Domed City -> id 300

#On Domed City built
planet_event = {
	id = pw_wonder.300
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		if = {
			limit = { is_planet_class = pc_habitat }
			create_message = {
				type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
				localization = pw_message_secluded_sector_complete
				days = 30
				target = THIS
				variable = {
					type = name
					localization = PLANET
					scope = ROOT
				}
			}
		}
		else = {
			create_message = {
				type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
				localization = pw_message_domed_city_complete
				days = 30
				target = THIS
				variable = {
					type = name
					localization = PLANET
					scope = ROOT
				}
			}
		}

		planet_event = { id = pw_wonder.301 }
		planet_event = { id = pw_wonder.302 }
	}
}

#On first time Domed City is built (Regular Empire)
planet_event = {
	id = pw_wonder.301
	title = pw_wonder.301.name
	desc = {
		trigger = {
			NOT = { is_planet_class = pc_habitat }
		}
		text = pw_wonder.301.desc.planet
	}
	desc = {
		trigger = {
			is_planet_class = pc_habitat
		}
		text = pw_wonder.301.desc.habitat
	}

	picture = GFX_evt_pw_domed_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.301.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		add_modifier = {
			modifier = pw_mod_domed_city_egalitarian
			days = @pw_5years
			clear_on_owner_change = yes
		}
	}

	option = {
		name = pw_wonder.301.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		add_modifier = {
			modifier = pw_mod_domed_city_authoritarian
			days = @pw_5years
			clear_on_owner_change = yes
		}
	}

	trigger = {
		NOT = {owner = {has_country_flag = pw_domed_city_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_domed_city_built }
	}
}

#On first time Domed City is built (Gestalt)
planet_event = {
	id = pw_wonder.302
	title = pw_wonder.302.name
	desc = {
		trigger = {
			NOT = { is_planet_class = pc_habitat }
		}
		text = pw_wonder.302.desc.planet
	}
	desc = {
		trigger = {
			is_planet_class = pc_habitat
		}
		text = pw_wonder.302.desc.habitat
	}
	picture = GFX_evt_pw_domed_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.302.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.302.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = {has_country_flag = pw_domed_city_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_domed_city_built }
	}
}

# Abyssal Crater Test Site -> id 400

#On Abyssal Crater Test Site built
planet_event = {
	id = pw_wonder.400
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		if = {
			limit = { is_planet_class = pc_habitat }
			create_message = {
				type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
				localization = pw_message_abyssal_crater_test_site_habitat_complete
				days = 30
				target = THIS
				variable = {
					type = name
					localization = PLANET
					scope = ROOT
				}
			}
		}
		else = {
			create_message = {
				type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
				localization = pw_message_abyssal_crater_test_site_complete
				days = 30
				target = THIS
				variable = {
					type = name
					localization = PLANET
					scope = ROOT
				}
			}
		}

		planet_event = { id = pw_wonder.401 }
		planet_event = { id = pw_wonder.402 }
	}
}

#On first time Abyssal Crater Test Site is built (regular Empire)
planet_event = {
	id = pw_wonder.401
	title = pw_wonder.401.name
	desc = {
		trigger = {
			NOT = { is_planet_class = pc_habitat }
		}
		text = pw_wonder.401.desc.planet
	}
	desc = {
		trigger = {
			is_planet_class = pc_habitat
		}
		text = pw_wonder.401.desc.habitat
	}
	picture = GFX_evt_pw_abyssal_crater_test_site
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.401.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		add_modifier = {
			modifier = pw_mod_abyssal_test_crater_pacifist
			days = @pw_5years
			clear_on_owner_change = yes
		}
	}

	option = {
		name = pw_wonder.401.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		add_modifier = {
			modifier = pw_mod_abyssal_test_crater_militarist
			days = @pw_5years
			clear_on_owner_change = yes
		}
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_abyssal_crater_test_site_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_abyssal_crater_test_site_built }
	}
}

#On first time Abyssal Crater Test Site is built (Gestalt)
planet_event = {
	id = pw_wonder.402
	title = pw_wonder.402.name
	desc = {
		trigger = {
			NOT = { is_planet_class = pc_habitat }
		}
		text = pw_wonder.402.desc.planet
	}
	desc = {
		trigger = {
			is_planet_class = pc_habitat
		}
		text = pw_wonder.402.desc.habitat
	}
	picture = GFX_evt_pw_abyssal_crater_test_site
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.402.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.402.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_abyssal_crater_test_site_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_abyssal_crater_test_site_built }
	}
}

# Erebus Project -> id 500

#On Erebus Project built
planet_event = {
	id = pw_wonder.500
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_erebus_project_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.501 }
		planet_event = { id = pw_wonder.502 }
	}
}

#On first time Erebus Project is built (Regular Empire)
planet_event = {
	id = pw_wonder.501
	title = pw_wonder.501.name
	desc = pw_wonder.501.desc
	picture = GFX_evt_pw_erebus_project
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = {owner = { has_country_flag = pw_erebus_project_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_erebus_project_built }
	}

	option = {
		name = pw_wonder.501.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.501.b
		trigger = {
			owner = {
				has_valid_civic = civic_mining_guilds
			}
		}
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
			}
		}
	}

	option = {
		name = pw_wonder.501.c
		trigger = {
			owner = {
				is_lithoid = yes
			}
		}
		add_modifier = {
			modifier = pw_mod_wonder_built_recently_happiness
			days = @pw_5years
			multiplier = 2
		}
	}
}

#On first time Erebus Project is built (Gestalt)
planet_event = {
	id = pw_wonder.502
	title = pw_wonder.502.name
	desc = pw_wonder.502.desc
	picture = GFX_evt_pw_erebus_project
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = {owner = { has_country_flag = pw_erebus_project_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_erebus_project_built }
	}

	option = {
		name = pw_wonder.502.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.502.b
		trigger = {
			owner = {
				has_valid_civic = civic_machine_rockbreakers
			}
		}
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
			}
		}
	}

	option = {
		name = pw_wonder.502.c
		trigger = {
			owner = {
				is_lithoid = yes
				NOT = { has_civic = civic_hive_devouring_swarm }
			}
		}
		add_modifier = {
			modifier = pw_mod_wonder_built_recently_unity
			days = @pw_5years
			multiplier = 2
		}
	}

	option = {
		name = pw_wonder.502.d
		trigger = {
			owner = {
				is_lithoid = yes
				has_civic = civic_hive_devouring_swarm
			}
		}
		add_modifier = {
			modifier = pw_mod_wonder_built_recently_unity
			days = @pw_5years
			multiplier = 2
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
			}
		}
	}
}

#Random Aggressive Prospecting effect
planet_event = {
	id = pw_wonder.503
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_planet_flag = pw_aggressive_prospecting_event_triggered }
		has_modifier = pw_mod_erebus_prospecting
	}

	immediate = {
		if = {
			limit = { #Exhausted mining options.
				has_planet_flag = pw_aggressive_prospecting_crystal
				has_planet_flag = pw_aggressive_prospecting_motes
				has_planet_flag = pw_aggressive_prospecting_gases
			}
			planet_event = {
				id = pw_wonder.510
				days = 60
				random = 30
			}
		}
		else = {
			random_list = {
				10 = {
					planet_event = {
						id = pw_wonder.504
						days = 60
						random = 30
					}
				}
				10 = {
					planet_event = {
						id = pw_wonder.506
						days = 60
						random = 30
					}
				}
				10 = {
					planet_event = {
						id = pw_wonder.508
						days = 60
						random = 30
					}
				}
				10 = {}
			}
		}
	}
}

#Check if already added crystals
planet_event = {
	id = pw_wonder.504
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_erebus_project
	}
	immediate = {
		if = {
			limit = { has_planet_flag = pw_aggressive_prospecting_crystal }
			planet_event = { id = pw_wonder.503 }
		}
		else = {
			planet_event = { id = pw_wonder.505 }
		}
	}
}

#Aggressive Prospecting adds Crystals
planet_event = {
	id = pw_wonder.505
	title = pw_wonder.505.name
	desc = pw_wonder.505.desc
	picture = GFX_evt_pw_erebus_project
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	immediate = {
		set_planet_flag = pw_aggressive_prospecting_crystal
	}
	trigger = {
		has_active_building = pw_building_erebus_project
	}
	option = {
		name = pw_wonder.505.a
		owner = {
			add_resource = {
				rare_crystals = 500
			}
		}
	}
}

#Check if already added motes
planet_event = {
	id = pw_wonder.506
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_erebus_project
	}
	immediate = {
		if = {
			limit = { has_planet_flag = pw_aggressive_prospecting_motes }
			planet_event = { id = pw_wonder.503 }
		}
		else = {
			planet_event = { id = pw_wonder.507 }
		}
	}
}

#Aggressive Prospecting adds Motes
planet_event = {
	id = pw_wonder.507
	title = pw_wonder.507.name
	desc = pw_wonder.507.desc
	picture = GFX_evt_pw_erebus_project
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	immediate = {
		set_planet_flag = pw_aggressive_prospecting_motes
	}
	trigger = {
		has_active_building = pw_building_erebus_project
	}
	option = {
		name = pw_wonder.507.a
		owner = {
			add_resource = {
				volatile_motes = 500
			}
		}
	}
}

#Check if already added gases
planet_event = {
	id = pw_wonder.508
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_erebus_project
	}
	immediate = {
		if = {
			limit = { has_planet_flag = pw_aggressive_prospecting_gases }
			planet_event = { id = pw_wonder.503 }
		}
		else = {
			planet_event = { id = pw_wonder.509 }
		}
	}
}

#Aggressive Prospecting adds gases
planet_event = {
	id = pw_wonder.509
	title = pw_wonder.509.name
	desc = pw_wonder.509.desc
	picture = GFX_evt_pw_erebus_project
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	immediate = {
		set_planet_flag = pw_aggressive_prospecting_gases
	}
	trigger = {
		has_active_building = pw_building_erebus_project
	}
	option = {
		name = pw_wonder.509.a
		owner = {
			add_resource = {
				exotic_gases = 500
			}
		}
	}
}

#Aggressive Prospecting adds Poor Mineral Quality
planet_event = {
	id = pw_wonder.510
	title = pw_wonder.510.name
	desc = pw_wonder.510.desc
	picture = GFX_evt_pw_erebus_project
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_erebus_project
	}
	immediate = {
		set_planet_flag = pw_aggressive_prospecting_event_triggered
	}
	option = {
		name = pw_wonder.510.a
		if = {
			limit = { NOT = { has_modifier = mineral_poor }}
			add_modifier = {
				modifier = mineral_poor
			}
		}
	}
}

# Helios Tower -> id 600

#On Helios Tower built
planet_event = {
	id = pw_wonder.600
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_helios_tower_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.601 }
		planet_event = { id = pw_wonder.602 }
	}
}

#On first time Helios Tower is built (Regular Empire)
planet_event = {
	id = pw_wonder.601
	title = pw_wonder.601.name
	desc = pw_wonder.601.desc
	picture = GFX_evt_pw_helios_tower
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = {owner = { has_country_flag = pw_helios_tower_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_helios_tower_built }
	}

	option = {
		name = pw_wonder.601.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.601.b
		trigger = {
			OR = {
				owner = { is_megacorp = yes }
				owner = { has_valid_civic = civic_corporate_dominion }
				owner = { has_valid_civic = civic_merchant_guilds }
			}
		}
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_10years
			}
		}
	}
}

#On first time Helios Tower is built (Gestalt)
planet_event = {
	id = pw_wonder.602
	title = pw_wonder.602.name
	desc = pw_wonder.602.desc
	picture = GFX_evt_pw_helios_tower
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.602.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_helios_tower_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_helios_tower_built }
	}
}

#Random Cloud Seeding effect
planet_event = {
	id = pw_wonder.603
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_planet_flag = pw_cloud_seeding_event_triggered }
	}

	immediate = {
		set_planet_flag = pw_cloud_seeding_event_triggered
		random_list = {
			10 = {
				planet_event = {
					id = pw_wonder.604
					days = 60
					random = 30
				}
			}
			10 = {
				planet_event = {
					id = pw_wonder.605
					days = 60
					random = 30
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						is_planet_class = pc_machine
						is_planet_class = pc_hive
					}
				}
				planet_event = {
					id = pw_wonder.606
					days = 60
					random = 30
				}
			}
			5 = {}
		}
	}
}

#Cloud Seeding adds Hazardous Weather
planet_event = {
	id = pw_wonder.604
	title = pw_wonder.604.name
	desc = pw_wonder.604.desc
	picture = GFX_evt_pw_helios_tower
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_modifier = hazardous_weather }
		has_active_building = pw_building_helios_tower
	}
	option = {
		name = pw_wonder.604.a
		add_modifier = {
			modifier = hazardous_weather
		}
	}
	option = {
		name = pw_wonder.604.b
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				energy = -1000
			}
		}
	}
}

#Cloud Seeding adds Wild Storms
planet_event = {
	id = pw_wonder.605
	title = pw_wonder.605.name
	desc = pw_wonder.605.desc
	picture = GFX_evt_pw_helios_tower
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_modifier = wild_storms }
		has_active_building = pw_building_helios_tower
	}
	option = {
		name = pw_wonder.605.a
		add_modifier = {
			modifier = wild_storms
		}
	}
	option = {
		name = pw_wonder.605.b
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				energy = -1000
			}
		}
	}
}

#Cloud Seeding adds Atmospheric Aphrodisiacs
planet_event = {
	id = pw_wonder.606
	title = pw_wonder.606.name
	desc = pw_wonder.606.desc
	picture = GFX_evt_pw_helios_tower
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_modifier = atmospheric_aphrodisiac }
		has_active_building = pw_building_helios_tower
	}
	option = {
		name = pw_wonder.606.a
		add_modifier = {
			modifier = atmospheric_aphrodisiac
		}
	}
	option = {
		name = pw_wonder.606.b
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				energy = -1000
			}
		}
	}
}

# Demetrius Cornucopia -> id 700

#On Demetrius Cornucopia built
planet_event = {
	id = pw_wonder.700
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_demetrius_fields_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.701 }
		planet_event = { id = pw_wonder.702 }
	}
}

#On first time Demetrius Cornucopia is built (Regular Empire)
planet_event = {
	id = pw_wonder.701
	title = pw_wonder.701.name
	desc = pw_wonder.701.desc
	picture = GFX_evt_pw_demetrius_cornucopia
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = {owner = { has_country_flag = pw_demetrius_fields_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_demetrius_fields_built }
	}

	option = {
		name = pw_wonder.701.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.701.b
		trigger = {
			owner = {
				has_valid_civic = civic_agrarian_idyll
			}
		}
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_10years
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
			}
		}
	}
}

#On first time Demetrius Cornucopia is built (Gestalt)
planet_event = {
	id = pw_wonder.702
	title = pw_wonder.702.name
	desc = pw_wonder.702.desc
	picture = GFX_evt_pw_demetrius_cornucopia
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = {owner = { has_country_flag = pw_demetrius_fields_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_demetrius_fields_built }
	}

	option = {
		name = pw_wonder.702.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.702.b
		trigger = {
			owner = {
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_10years
				multiplier = 2
			}
		}
	}

	option = {
		name = pw_wonder.702.c
		trigger = {
			owner = {
				has_valid_civic = civic_machine_servitor
			}
		}
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_10years
				multiplier = 2
			}
		}
	}
}

#Random Predatory Harvesting effect
planet_event = {
	id = pw_wonder.703
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_planet_flag = pw_predatory_harvesting_event_triggered }
	}

	immediate = {
		set_planet_flag = pw_predatory_harvesting_event_triggered
		random_list = {
			10 = {
				planet_event = {
					id = pw_wonder.704
					days = 60
					random = 30
				}
			}
			10 = {
				planet_event = {
					id = pw_wonder.705
					days = 60
					random = 30
				}
			}
			10 = {
				planet_event = {
					id = pw_wonder.706
					days = 60
					random = 30
				}
			}
			10 = {
				planet_event = {
					id = pw_wonder.707
					days = 60
					random = 30
				}
			}
			10 = {
				modifier = {
					factor = 0 #Hive planets can't have Natural Beauty mod.
					is_planet_class = pc_hive
				}
				planet_event = {
					id = pw_wonder.708
					days = 60
					random = 30
				}
			}
			5 = {}
		}
	}
}

#Predatory Harvesting adds Lush
planet_event = {
	id = pw_wonder.704
	title = pw_wonder.704.name
	desc = pw_wonder.704.desc
	picture = GFX_evt_pw_demetrius_cornucopia
	show_sound = event_alien_nature
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_modifier = lush_planet }
		has_active_building = pw_building_demetrius_fields
	}
	option = {
		name = pw_wonder.704.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = food
					value >= 3000
				}
			}
		}
		add_modifier = {
			modifier = lush_planet
		}
		owner = {
			add_resource = {
				food = -3000
			}
		}
	}
	option = {
		name = pw_wonder.704.b
	}
}

#Predatory Harvesting adds Bleak
planet_event = {
	id = pw_wonder.705
	title = pw_wonder.705.name
	desc = pw_wonder.705.desc
	picture = GFX_evt_pw_demetrius_cornucopia
	show_sound = event_alien_nature
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_modifier = bleak_planet }
		has_active_building = pw_building_demetrius_fields
	}
	option = {
		name = pw_wonder.705.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = food
					value >= 2000
				}
			}
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				food = -2000
				energy = -1000
			}
		}
	}
	option = {
		name = pw_wonder.705.b
		add_modifier = {
			modifier = bleak_planet
		}
	}
}

#Predatory Harvesting adds Hostile Fauna
planet_event = {
	id = pw_wonder.706
	title = pw_wonder.706.name
	desc = pw_wonder.706.desc
	picture = GFX_evt_pw_demetrius_cornucopia
	show_sound = event_alien_nature
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_modifier = dangerous_wildlife }
		has_active_building = pw_building_demetrius_fields
	}
	option = {
		name = pw_wonder.706.a
		add_modifier = {
			modifier = dangerous_wildlife
		}
	}
	option = {
		name = pw_wonder.706.b
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				energy = -1000
			}
		}
	}
}

#Predatory Harvesting adds Titanic Life
planet_event = {
	id = pw_wonder.707
	title = pw_wonder.707.name
	desc = pw_wonder.707.desc
	picture = GFX_evt_pw_demetrius_cornucopia
	show_sound = event_alien_nature
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_modifier = titanic_life }
		has_active_building = pw_building_demetrius_fields
	}
	option = {
		name = pw_wonder.707.a
		add_modifier = {
			modifier = titanic_life
		}
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = food
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				food = -1000
			}
		}
	}
	option = {
		name = pw_wonder.707.b
	}
}

#Predatory Harvesting adds Natural Beauty
planet_event = {
	id = pw_wonder.708
	title = pw_wonder.708.name
	desc = pw_wonder.708.desc
	picture = GFX_evt_pw_demetrius_cornucopia
	show_sound = event_alien_nature
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_modifier = natural_beauty }
		has_active_building = pw_building_demetrius_fields
	}
	option = {
		name = pw_wonder.708.a
		add_modifier = {
			modifier = natural_beauty
		}
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = food
					value >= 2000
				}
			}
		}
		owner = {
			add_resource = {
				food = -2000
			}
		}
	}
	option = {
		name = pw_wonder.708.b
	}
}

# Astronomical Model Bureau -> id 800

#On Astronomical Model Bureau built
planet_event = {
	id = pw_wonder.800
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_galactic_model_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.801 }
		planet_event = { id = pw_wonder.802 }
		planet_event = { id = pw_wonder.803 days = 90 random = 30 } #Event chain begin
	}
}

#On first time Astronomical Model Bureau is built (Regular Empire)
planet_event = {
	id = pw_wonder.801
	title = pw_wonder.801.name
	desc = pw_wonder.801.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = {owner = { has_country_flag = pw_galactic_model_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_galactic_model_built }
	}

	option = {
		name = pw_wonder.801.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.801.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		trigger = {
			owner = { is_spiritualist = yes }
		}
	}

	option = {
		name = pw_wonder.801.c
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
			}
		}
		trigger = {
			owner = { has_valid_civic = civic_byzantine_bureaucracy }
		}
	}

	after = {
		hidden_effect = {
			owner = {
				#Recurring event for planet resources
				country_event = { id = pw_wonder.820 days = @pw_10years random = @pw_5years }
			}
		}
	}
}

#On first time Astronomical Model Bureau is built (Gestalt)
planet_event = {
	id = pw_wonder.802
	title = pw_wonder.802.name
	desc = pw_wonder.802.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = {owner = { has_country_flag = pw_galactic_model_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_galactic_model_built }
	}

	option = {
		name = pw_wonder.802.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.802.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	after = {
		hidden_effect = {
			owner = {
				#Recurring event for planet resources
				country_event = { id = pw_wonder.820 days = @pw_10years random = @pw_5years }
			}
		}
	}
}

#Tow asteroid
planet_event = {
	id = pw_wonder.803
	title = pw_wonder.803.name
	desc = pw_wonder.803.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_galactic_model
		NOT = { owner = { has_country_flag = galactic_model_tow_asteroid }}
		owner = {
			any_planet_within_border = {
				is_planet_class = pc_asteroid
			}
		}
	}

	immediate = {
		owner = { set_country_flag = galactic_model_tow_asteroid }
	}

	option = {
		name = pw_wonder.803.a
		owner = {
			random_planet_within_border = {
				limit = {
					is_planet_class = pc_asteroid
				}
				enable_special_project = {
					name = PW_TOW_ASTEROID_PROJECT
					location = this
					owner = root
				}
			}
		}
	}

	option = {
		name = pw_wonder.803.b
		allow = {
			owner = { resource_stockpile_compare = { resource = influence value >= 50 }}
		}
		owner = {
			add_resource = {
				influence = -50
			}
		}
	}
}

#Tow asteroid (success)
country_event = {
	id = pw_wonder.804
	title = pw_wonder.804.name
	desc = pw_wonder.804.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.804.a
		add_monthly_resource_mult = {
			resource = unity
			value = @tier2unityreward
			min = @tier2unitymin
			max = @tier2unitymax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier3researchreward
			min = @tier3researchmin
			max = @tier3researchmax
		}
		hidden_effect = {
			#Next event in AMB chain
			country_event = { id = pw_wonder.805 days = 180 random = 180 }
		}
	}
}

#Move mountain
country_event = {
	id = pw_wonder.805
	title = pw_wonder.805.name
	desc = pw_wonder.805.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		any_owned_planet = {
			has_active_building = pw_building_galactic_model
		}
		NOT = { owner = { has_country_flag = galactic_model_move_mountain }}
		owner = {
			any_planet_within_border = {
				uninhabitable_regular_planet = yes
			}
		}
	}

	immediate = {
		owner = { set_country_flag = galactic_model_move_mountain }
	}

	option = {
		name = pw_wonder.805.a
		owner = {
			random_planet_within_border = {
				limit = {
					uninhabitable_regular_planet = yes
				}
				enable_special_project = {
					name = PW_MOVE_MOUNTAIN_PROJECT
					location = this
					owner = root
				}
			}
		}
	}

	option = {
		name = pw_wonder.805.b
		allow = {
			owner = { resource_stockpile_compare = { resource = influence value >= 100 }}
		}
		owner = {
			add_resource = {
				influence = -100
			}
		}
	}
}

#Move mountain (success)
country_event = {
	id = pw_wonder.806
	title = pw_wonder.806.name
	desc = pw_wonder.806.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.806.a
		add_monthly_resource_mult = {
			resource = unity
			value = @tier3unityreward
			min = @tier3unitymin
			max = @tier3unitymax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
		}
		add_resource = { rare_crystals = 100 }
		add_resource = { exotic_gases = 100 }
		add_resource = { volatile_motes = 100 }
		# hidden_effect = {
		# 	#Next event in AMB chain
		# 	country_event = { id = pw_wonder.805 days = 180 random = 180 }
		# }
	}
}

#Get random planet to give resources.
country_event = {
	id = pw_wonder.820
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = no
		any_planet_within_border = {
			NOT = { has_deposit = yes }
			OR = {
				is_asteroid = yes
				uninhabitable_regular_planet = yes
				is_planet_class = pc_gas_giant
			}
			NOT = { is_planet = event_target:pw_resource_planet }
		}
	}

	immediate = {
		random_planet_within_border = {
			limit = {
				NOT = { has_deposit = yes }
				OR = {
					is_asteroid = yes
					uninhabitable_regular_planet = yes
					is_planet_class = pc_gas_giant
				}
				NOT = { is_planet = event_target:pw_resource_planet }
			}
			save_event_target_as = pw_resource_planet
		}
		random_list = {
			40 = { #Add Minerals
				country_event = { id = pw_wonder.821 }
			}
			40 = { #Add Energy
				country_event = { id = pw_wonder.822 }
			}
			40 = { #Add Trade Value
				modifier = {
					factor = 0
					can_generate_trade_value = no
				}
				country_event = { id = pw_wonder.823 }
			}
			20 = { #Add Alloys
				country_event = { id = pw_wonder.824 }
			}
			10 = { #Add Crystals
				country_event = { id = pw_wonder.825 }
			}
			10 = { #Add Gases
				country_event = { id = pw_wonder.826 }
			}
			10 = { #Add Motes
				country_event = { id = pw_wonder.827 }
			}
			1 = { #Add Dark Matter
				country_event = { id = pw_wonder.828 }
			}
			1 = { #Add Living Metal
				country_event = { id = pw_wonder.829 }
			}
			1 = { #Add Zro
				modifier = {
					factor = 0
					is_materialist = yes
				}
				country_event = { id = pw_wonder.830 }
			}
		}
		country_event = {  id = pw_wonder.820 days = @pw_10years random = @pw_5years }
	}
}

#Add Minerals
country_event = {
	id = pw_wonder.821
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_minerals_2
			}
		}
	}
}

#Add Energy
country_event = {
	id = pw_wonder.822
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_energy_2
			}
		}
	}
}

#Add Trade Value
country_event = {
	id = pw_wonder.823
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_trade_value_3
			}
		}
	}
}

#Add Alloys
country_event = {
	id = pw_wonder.824
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_alloys_1
			}
		}
	}
}

#Add Crystals
country_event = {
	id = pw_wonder.825
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_rare_crystals_1
			}
		}
	}
}

#Add Gases
country_event = {
	id = pw_wonder.826
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_exotic_gases_1
			}
		}
	}
}

#Add Motes
country_event = {
	id = pw_wonder.827
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_volatile_motes_1
			}
		}
	}
}

#Add Dark Matter
country_event = {
	id = pw_wonder.828
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_dark_matter_deposit_1
			}
		}
	}
}

#Add Living Matter
country_event = {
	id = pw_wonder.829
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_living_metal_deposit
			}
		}
	}
}

#Add Zro
country_event = {
	id = pw_wonder.830
	title = pw_wonder.821.name
	desc = pw_wonder.821.desc
	picture = GFX_evt_pw_galactic_model
	show_sound = event_cityscape
	is_triggered_only = yes
	location = event_target:pw_resource_planet

	trigger = {
		event_target:pw_resource_planet = {
			NOT = { has_deposit = yes }
		}
	}

	option = {
		name = pw_wonder.821.a
		if = {
			limit = {
				event_target:pw_resource_planet = {
					NOT = { has_deposit = yes }
				}
			}
			event_target:pw_resource_planet = {
				add_deposit = d_zro_deposit_1
			}
		}
	}
}

# Panopticon -> id 900

#On Panopticon built
planet_event = {
	id = pw_wonder.900
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_panopticon_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.901 }
		owner = { country_event = { id = pw_wonder.902 }}
	}
}

#On first time Panopticon is built (Regular Empire)
planet_event = {
	id = pw_wonder.901
	title = pw_wonder.901.name
	desc = pw_wonder.901.desc
	picture = GFX_evt_announcement
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.901.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.901.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_panopticon_built }}
	}

	immediate = {
		owner = { set_country_flag = pw_panopticon_built }
	}
}

#Get another empire with corrupt leader
country_event = {
	id = pw_wonder.902
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_at_war = no
		is_ai = no
		any_owned_planet = {
			has_active_building = pw_building_panopticon
		}
		any_country = {
			any_neighbor_country = {
				is_ai = yes
				is_country_type = default
				is_gestalt = no
				is_homicidal = no
				has_communications = root
				NOT = { is_at_war_with = root }
				NOT = { has_valid_civic = civic_criminal_heritage }
				any_owned_leader = {
					has_trait = leader_trait_corrupt
				}
			}
		}
	}

	immediate = {
		random_neighbor_country = {
			limit = {
				is_ai = yes
				is_country_type = default
				is_gestalt = no
				is_homicidal = no
				has_communications = root
				NOT = { is_at_war_with = root }
				NOT = { has_valid_civic = civic_criminal_heritage }
				any_owned_leader = {
					has_trait = leader_trait_corrupt
				}
			}
			save_event_target_as = PWEmpireWithCorruptLeader
			random_owned_leader = {
				limit = {
					has_trait = leader_trait_corrupt
				}
				save_event_target_as = PWForeignCorruptLeader
			}
			root = { country_event = { id = pw_wonder.903 } }
		}
	}
}

#Empire with corrupt leader asks to deal with it.
country_event = {
	id = pw_wonder.903
	title = pw_wonder.903.name
	desc = pw_wonder.903.desc
	show_sound = diplomatic_notification
	is_triggered_only = yes
	location = THIS
	diplomatic = yes

	trigger = {
		any_owned_planet = {
			has_active_building = pw_building_panopticon
		}
	}
	picture_event_data = {
		portrait = event_target:PWEmpireWithCorruptLeader
		planet_background = event_target:PWEmpireWithCorruptLeader
		graphical_culture = event_target:PWEmpireWithCorruptLeader
		city_level = event_target:PWEmpireWithCorruptLeader
		room = event_target:PWEmpireWithCorruptLeader.ruler
	}
	option = {
		name = pw_wonder.903.a
		add_favors = {
			target = event_target:PWEmpireWithCorruptLeader
			value = 2
		}
		event_target:PWEmpireWithCorruptLeader = {
			add_opinion_modifier = {
				who = root
				modifier = pw_opinion_helped_with_corruption
			}
		}
		event_target:PWForeignCorruptLeader = {
			remove_trait = leader_trait_corrupt
		}
	}
	option = {
		name = pw_wonder.903.b
		add_monthly_resource_mult = {
			resource = energy
			value = @tier3materialreward
			min = @tier3materialmin
			max = @tier3materialmax
		}
		event_target:PWEmpireWithCorruptLeader = {
			add_opinion_modifier = {
				who = root
				modifier = pw_opinion_helped_with_corruption
			}
		}
		event_target:PWForeignCorruptLeader = {
			kill_leader = {}
		}
	}
	option = {
		name = pw_wonder.903.c
		add_resource = {
			influence = 50
		}
		event_target:PWEmpireWithCorruptLeader = {
			add_opinion_modifier = {
				who = root
				modifier = pw_opinion_refused_to_help
			}
		}
	}

}

#Examine crime in other empires

# Enigma Engine -> id 1000

#On Enigma Engine built
planet_event = {
	id = pw_wonder.1000
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_enigma_engine_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1001 }
		planet_event = { id = pw_wonder.1010 days = 60 random = 30 } #Event Chain
	}
}

#On first time Enigma Engine is built (Machine Empire)
planet_event = {
	id = pw_wonder.1001
	title = pw_wonder.1001.name
	desc = pw_wonder.1001.desc
	picture = GFX_evt_pw_enigma_engine
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1001.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.1001.b
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_enigma_engine_built }}
	}

	immediate = {
		owner = { set_country_flag = pw_enigma_engine_built }
	}
}

# If last tech researched was Metaphysical Singularity and minor artifacts are needed
country_event = {
	id = pw_wonder.1002
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_ancrel = yes
		last_increased_tech = pw_tech_metaphysical_singularity
		resource_stockpile_compare = {
			resource = minor_artifacts
			value <= 10
		}
	}

	immediate = {
		country_event = {
			id = pw_wonder.1003
			days = 30
			random = 30
		}
	}
}

# Get some minor artifacts to build the Enigma Engine.
country_event = {
	id = pw_wonder.1003
	title = pw_wonder.1003.name
	desc = pw_wonder.1003.desc
	picture = GFX_evt_analyzing_artifacts
	show_sound = event_laboratory_sound
	is_triggered_only = yes

	trigger = {
		has_ancrel = yes
		has_technology = pw_tech_metaphysical_singularity
	}

	option = {
		name = pw_wonder.1003.a
		add_resource = {
			minor_artifacts = 15
		}
	}
}

#If last increased tech was a Enigma tech:
country_event = {
	id = pw_wonder.1004
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		pw_last_increased_tech_was_enigma_tech = yes
		NOT = { has_country_flag = pw_enigma_fe_task_started }
	}

	immediate = {
		set_country_flag = pw_enigma_fe_task_started
		# Get Fallen Empire to make request:
		country_event = { id = pw_wonder.1005 }
	}
}

#Get Machine Fallen empire to receive gift from
country_event = {
	id = pw_wonder.1005
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_at_war = no
		is_ai = no
		any_owned_planet = {
			has_active_building = pw_building_enigma_engine
		}
		any_country = {
			is_country_type = fallen_empire
			is_at_war = no
			has_authority = auth_machine_intelligence
			has_communications = root
			opinion = {
				who = THIS
				value > -70
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = fallen_empire
				is_at_war = no
				has_authority = auth_machine_intelligence
				has_communications = root
				opinion = {
					who = THIS
					value > -70
				}
			}
			save_event_target_as = PWFallenEmpireTaskOrigin
			root = { country_event = { id = pw_wonder.1006 days = 30 random = 30} }
		}
	}
}

# Get Request from Fallen Empire after researching enigma tech
country_event = {
	id = pw_wonder.1006
	title = pw_wonder.1006.name
	desc = pw_wonder.1006.desc
	is_triggered_only = yes
	location = THIS
	show_sound = diplomatic_notification
	diplomatic = yes

	picture_event_data = {
		portrait = event_target:PWFallenEmpireTaskOrigin
		planet_background = event_target:PWFallenEmpireTaskOrigin
		graphical_culture = event_target:PWFallenEmpireTaskOrigin
		city_level = event_target:PWFallenEmpireTaskOrigin
		room = event_target:PWFallenEmpireTaskOrigin.ruler
	}
	option = {
		name = pw_wonder.1006.a
		hidden_effect = {
			event_target:PWFallenEmpireGiftOrigin = { add_opinion_modifier = { who = root modifier = opinion_accepted_fallen_empire_request }}
			country_event = { id = pw_wonder.1007 days = 60 random = 30	}
		}
	}
	option = {
		name = pw_wonder.1006.b
		hidden_effect = {
			event_target:PWFallenEmpireGiftOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request }}
		}
	}
}

# Get gift from Fallen Empire After fulfilling request.
country_event = {
	id = pw_wonder.1007
	title = pw_wonder.1007.name
	desc = pw_wonder.1007.desc
	is_triggered_only = yes
	location = THIS
	show_sound = diplomatic_notification
	diplomatic = yes

	picture_event_data = {
		portrait = event_target:PWFallenEmpireTaskOrigin
		planet_background = event_target:PWFallenEmpireTaskOrigin
		graphical_culture = event_target:PWFallenEmpireTaskOrigin
		city_level = event_target:PWFallenEmpireTaskOrigin
		room = event_target:PWFallenEmpireTaskOrigin.ruler
	}

	option = {
		name = pw_wonder.1007.a
		if = {
			limit = { has_distar = yes }
			add_resource = {
				nanites = 250
				sr_living_metal = 250
			}
		}
		else = {
			add_resource = {
				sr_living_metal = 250
			}
		}
	}
	option = {
		name = pw_wonder.1007.b
		add_monthly_resource_mult = {
			resource = society_research
			value = @tier5researchreward
			min = @tier5researchmin
			max = @tier5researchmax
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = @tier5researchreward
			min = @tier5researchmin
			max = @tier5researchmax
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier5researchreward
			min = @tier5researchmin
			max = @tier5researchmax
		}
	}
	option = {
		name = pw_wonder.1007.c
		add_resource = {
			influence = 100
		}
	}
}

#Start Enigma Engine Energy
planet_event = {
	id = pw_wonder.1010
	title = pw_wonder.1010.name
	desc = pw_wonder.1010.desc
	picture = GFX_evt_pw_enigma_engine
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_enigma_engine
		owner = { NOT = { has_country_flag = pw_enigma_engine_deviant_events }}
	}
	immediate = {
		owner = { set_country_flag = pw_enigma_engine_deviant_events }
	}
	option = {
		name = pw_wonder.1010.a
		add_modifier = {
			modifier = pw_mod_enigma_engine_energy
			days = -1
			clear_on_owner_change = yes
		}
		hidden_effect = {
			planet_event = { id = pw_wonder.1011 days = 180 random = 30 }
		}
	}
}

#Enigma Engine Housing
planet_event = {
	id = pw_wonder.1011
	title = pw_wonder.1011.name
	desc = pw_wonder.1011.desc
	picture = GFX_evt_pw_enigma_engine
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_enigma_engine
	}
	option = {
		name = pw_wonder.1011.a
		add_modifier = {
			modifier = pw_mod_enigma_engine_housing
			days = -1
			clear_on_owner_change = yes
		}
		hidden_effect = {
			planet_event = { id = pw_wonder.1012 days = 180 random = 30 }
		}
	}
}

#Enigma Engine Art
planet_event = {
	id = pw_wonder.1012
	title = pw_wonder.1012.name
	desc = pw_wonder.1012.desc
	picture = GFX_evt_pw_enigma_engine
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_enigma_engine
	}
	option = {
		name = pw_wonder.1012.a
		add_modifier = {
			modifier = pw_mod_enigma_engine_art
			days = -1
			clear_on_owner_change = yes
		}
		enable_special_project = {
			name = PW_FIX_ENIGMA_DRONES
			location = this
			owner = owner
		}
	}
	option = {
		name = pw_wonder.1012.b
		add_modifier = {
			modifier = pw_mod_enigma_engine_art
			days = -1
			clear_on_owner_change = yes
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier4unityreward
				min = @tier4unitymin
				max = @tier4unitymax
			}
		}
	}
}

#Enigma Engine resolution
planet_event = {
	id = pw_wonder.1013
	title = pw_wonder.1013.name
	desc = pw_wonder.1013.desc
	picture = GFX_evt_pw_enigma_engine
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1013.a
		remove_modifier = pw_mod_enigma_engine_energy
		remove_modifier = pw_mod_enigma_engine_housing
		remove_modifier = pw_mod_enigma_engine_art
		owner = {
			add_resource = {
				influence = 50
			}
		}
	}
}

# Solipsist Debate Hall -> id 1100

#On Solipsist Debate Hall built
planet_event = {
	id = pw_wonder.1100
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_solipsist_debate_hall_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1101 }
		owner = {
			country_event = {
				id = pw_solipsist_debate.1
			}
		}
	}
}

#On first time Solipsist Debate Hall is built (Hive Empire)
planet_event = {
	id = pw_wonder.1101
	title = pw_wonder.1101.name
	desc = pw_wonder.1101.desc
	picture = GFX_evt_hive_mind
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1101.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_solipsist_debate_hall_built }}
	}

	immediate = {
		owner = { set_country_flag = pw_solipsist_debate_hall_built }
	}
}

# If last tech researched was Metacognition Dialectics and minor artifacts are needed.
country_event = {
	id = pw_wonder.1102
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_ancrel = yes
		last_increased_tech = pw_tech_metacognition_dialectics
		resource_stockpile_compare = {
			resource = minor_artifacts
			value <= 10
		}
	}

	immediate = {
		country_event = {
			id = pw_wonder.1103
			days = 30
			random = 30
		}
	}
}

# Get some minor artifacts to build the Solipsist Debate Hall.
country_event = {
	id = pw_wonder.1103
	title = pw_wonder.1103.name
	desc = pw_wonder.1103.desc
	picture = GFX_evt_analyzing_artifacts
	show_sound = event_laboratory_sound
	is_triggered_only = yes

	trigger = {
		has_ancrel = yes
		has_technology = pw_tech_metacognition_dialectics
	}

	option = {
		name = pw_wonder.1103.a
		add_resource = {
			minor_artifacts = 15
		}
	}
}

#Get fallen empire to receive gift from
country_event = {
	id = pw_wonder.1104
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT ={ has_country_flag = pw_sdh_fe_gift_received }
		is_at_war = no
		is_ai = no
		any_owned_planet = {
			has_active_building = pw_building_solipsist_debate_hall
		}
		any_country = {
			is_country_type = fallen_empire
			is_at_war = no
			OR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_fanatic_xenophile
				has_ethic = ethic_fanatic_materialist
			}
			has_communications = root
			opinion = {
				who = THIS
				value > -70
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = fallen_empire
				is_at_war = no
				OR = {
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_fanatic_materialist
				}
				NOT = { has_authority = auth_machine_intelligence }
				has_communications = root
				opinion = {
					who = THIS
					value > -70
				}
			}
			save_event_target_as = PWFallenEmpireGiftOrigin
			root = { country_event = { id = pw_wonder.1105 } }
		}
	}
}

# Get gift from Fallen Empire After a Debate.
country_event = {
	id = pw_wonder.1105
	title = pw_wonder.1105.name
	desc = pw_wonder.1105.desc
	is_triggered_only = yes
	location = THIS
	show_sound = diplomatic_notification
	diplomatic = yes

	picture_event_data = {
		portrait = event_target:PWFallenEmpireGiftOrigin
		planet_background = event_target:PWFallenEmpireGiftOrigin
		graphical_culture = event_target:PWFallenEmpireGiftOrigin
		city_level = event_target:PWFallenEmpireGiftOrigin
		room = event_target:PWFallenEmpireGiftOrigin.ruler
	}

	immediate = {
		set_country_flag = pw_sdh_fe_gift_received
	}
	option = {
		name = pw_wonder.1105.a
		add_resource = {
			sr_dark_matter = 250
		}
		hidden_effect = { event_target:PWFallenEmpireGiftOrigin = { add_opinion_modifier = { who = root modifier = opinion_accepted_fallen_empire_request }}}
	}
	option = {
		name = pw_wonder.1105.b
		add_100_unity_per_year_passed = yes
		hidden_effect = { event_target:PWFallenEmpireGiftOrigin = { add_opinion_modifier = { who = root modifier = opinion_accepted_fallen_empire_request }}}
	}
	option = {
		name = pw_wonder.1105.c
		add_resource = {
			influence = 100
		}
		hidden_effect = { event_target:PWFallenEmpireGiftOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request }}}
	}
}

# Hive fights after a Debate.
country_event = {
	id = pw_wonder.1106
	title = pw_wonder.1106.name
	desc = pw_wonder.1106.desc
	picture = GFX_evt_hive_mind
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_country_flag = pw_sdh_debate_conflict }
	}

	immediate = {
		set_country_flag = pw_sdh_debate_conflict
	}
	option = {
		name = pw_wonder.1106.a
		add_modifier = {
			modifier = pw_debate_mod_syncretic
			days = @pw_1year
			clear_on_owner_change = yes
		}
	}
	option = {
		name = pw_wonder.1106.b
		add_modifier = {
			modifier = pw_debate_mod_deviancy
			days = @pw_1year
			clear_on_owner_change = yes
		}
	}
	option = {
		name = pw_wonder.1106.c
		random_owned_planet = {
			limit = {
				has_active_building = pw_building_solipsist_debate_hall
			}
			random_owned_pop = { kill_pop = yes }
		}
	}
}

# Guardian Angel -> id 1200

#On Guardian Angel built
planet_event = {
	id = pw_wonder.1200
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_guardian_angel_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1201 } #Regular first time
		planet_event = { id = pw_wonder.1202 } #Gestalt first time
		planet_event = { id = pw_wonder.1203 } #Add flying fortress army
		planet_event = { id = pw_wonder.1207 days = 60 random = 30 } #Guardian Angel Peace Choice.
		planet_event = { id = pw_wonder.1204 days = @pw_halfYear } #Recursive check event
	}
}

#On first time Guardian Angel is built (Regular Empire)
planet_event = {
	id = pw_wonder.1201
	title = pw_wonder.1201.name
	desc = pw_wonder.1201.desc
	picture = GFX_evt_landing_ship_2
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1201.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_guardian_angel_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_guardian_angel_built }
	}
}

#On first time Guardian Angel is built (Gestalt Empire)
planet_event = {
	id = pw_wonder.1202
	title = pw_wonder.1202.name
	desc = pw_wonder.1202.desc
	picture = GFX_evt_landing_ship_2
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1202.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_guardian_angel_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_guardian_angel_built }
	}
}

#On Guardian Angel built add army
planet_event = {
	id = pw_wonder.1203
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	trigger = {
		has_active_building = pw_building_guardian_angel
		NOT = {
			any_planet_army = {
				army_type = pw_army_flying_fortress
			}
		}
	}

	immediate = {
		create_army = {
			name = pw_army_flying_fortress_name
			owner = THIS.owner
			species = THIS.owner_main_species
			type = pw_army_flying_fortress
		}
	}

}

#Check if Guardian Angel was destroyed/replaced (recursive)
planet_event = {
	id = pw_wonder.1204
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	immediate = {
		if = {
			limit = { #Doesn't have the Guardian Angel building
				NOT = { has_active_building = pw_building_guardian_angel }
				OR = {
					any_planet_army = { #Has the Flying Fortress
						army_type = pw_army_flying_fortress
					}
					#Has any os the deposits
					has_deposit = pw_d_guardian_angel_training
					has_deposit = pw_d_guardian_angel_police_operations
					has_deposit = pw_d_guardian_angel_tourist_attraction
				}
			}
			planet_event = { #Remove the Fortress
				id = pw_wonder.1205
			}
			planet_event = { #Remove the Deposits
				id = pw_wonder.1208
				days = 30 #Different days, to spread the events
			}
		}
		else = {
			planet_event = { #Recursive event
				id = pw_wonder.1204
				days = @pw_halfYear
			}
		}
	}
}

# -> remove Flying Fortress
planet_event = {
	id = pw_wonder.1205
	title = pw_wonder.1205.name
	desc = pw_wonder.1205.desc
	picture = GFX_evt_landing_ship_2
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_active_building = pw_building_guardian_angel }
		any_planet_army = {
			army_type = pw_army_flying_fortress
		}
	}

	option = {
		name = UNFORTUNATE
		every_planet_army = {
			limit = { army_type = pw_army_flying_fortress }
			remove_army = yes
		}
	}
}

#On Flying Fortress is rebuild
planet_event = {
	id = pw_wonder.1206
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = ARMY_RECRUITMENT
			localization = pw_message_guardian_angel_flying_fortress_rebuild
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
	}
}

#Guardian Angel peace choice
planet_event = {
	id = pw_wonder.1207
	title = pw_wonder.1207.name
	desc = pw_wonder.1207.desc
	picture = GFX_evt_landing_ship_2
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	trigger = {
		owner = { is_at_war = no }
		NOT = { has_planet_flag = pw_guardian_angel_choice }
	}
	option = {
		name = pw_wonder.1207.a
		custom_tooltip = pw_wonder.1207.a.tooltip
		add_deposit = pw_d_guardian_angel_training
		hidden_effect = {
			set_planet_flag = pw_guardian_angel_choice
		}
	}
	option = {
		name = pw_wonder.1207.b
		custom_tooltip = pw_wonder.1207.b.tooltip
		add_deposit = pw_d_guardian_angel_police_operations
		hidden_effect = {
			set_planet_flag = pw_guardian_angel_choice
		}
	}
	option = {
		name = pw_wonder.1207.c
		custom_tooltip = pw_wonder.1207.c.tooltip
		trigger = {
			owner = { can_generate_trade_value = yes }
		}
		add_deposit = pw_d_guardian_angel_tourist_attraction
		hidden_effect = {
			set_planet_flag = pw_guardian_angel_choice
		}
	}
}

# -> remove Peace Choices
planet_event = {
	id = pw_wonder.1208
	title = pw_wonder.1208.name
	desc = pw_wonder.1208.desc
	picture = GFX_evt_landing_ship_2
	is_triggered_only = yes
	location = THIS

	trigger = {
		NOT = { has_active_building = pw_building_guardian_angel }
		OR = {
			has_deposit = pw_d_guardian_angel_training
			has_deposit = pw_d_guardian_angel_police_operations
			has_deposit = pw_d_guardian_angel_tourist_attraction
		}
	}

	option = {
		name = UNFORTUNATE
		if = {
			limit = { has_deposit = pw_d_guardian_angel_training }
			remove_deposit = pw_d_guardian_angel_training
		}
		if = {
			limit = { has_deposit = pw_d_guardian_angel_police_operations }
			remove_deposit = pw_d_guardian_angel_police_operations
		}
		if = {
			limit = { has_deposit = pw_d_guardian_angel_tourist_attraction }
			remove_deposit = pw_d_guardian_angel_tourist_attraction
		}
	}
}

# Crucible Mantle -> id 1300

#On Crucible Mantle built
planet_event = {
	id = pw_wonder.1300
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_mantle_crucible_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1301 } #Regular first time
		planet_event = { id = pw_wonder.1302 } #Gestalt first time
		planet_event = { id = pw_wonder.1303 } #Crucible Mantle Devastation
		planet_event = { id = pw_wonder.1310 days = @pw_halfYear } #Recursive check event
	}
}

#On first time Crucible Mantle is built (Regular Empire)
planet_event = {
	id = pw_wonder.1301
	title = pw_wonder.1301.name
	desc = pw_wonder.1301.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_mantle_crucible_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_mantle_crucible_built }
	}

	option = {
		name = pw_wonder.1301.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}
}

#On first time Crucible Mantle is built (Gestalt Empire)
planet_event = {
	id = pw_wonder.1302
	title = pw_wonder.1302.name
	desc = pw_wonder.1302.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_mantle_crucible_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_mantle_crucible_built }
	}

	option = {
		name = pw_wonder.1302.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}
}

#Mantle Crucible devastation events:
planet_event = {
	id = pw_wonder.1303
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_planet_flag = pw_mantle_crucible_devastation_event
		planet_event = {
			id = pw_wonder.1304
			days = @pw_1year
			random = 60
		}
	}
}

#Choose devastation effect:
planet_event = {
	id = pw_wonder.1304
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		if = {
			limit = {
				has_planet_flag = pw_mantle_crucible_devastation_event
				OR ={
					has_active_building = pw_building_mantle_crucible
					has_active_building = pw_building_titan_forge
					has_active_building = pw_building_industrial_hearth
				}
			}
			random_list = {
				40 = { #Add 5 devastation
					modifier = {
						factor = 0
						exists = owner
						owner = { is_machine_empire = yes }
					}
					modifier = {
						factor = 0.5
						pw_is_planet_ideal = yes
					}
					modifier = {
						factor = 1.25
						exists = owner
						owner = { has_valid_civic = civic_environmentalist }
					}
					if = {
						limit = {
							owner = {
								NOT = { has_country_flag = pw_mantle_crucible_hide_devastation_events }
							}
						}
						planet_event = {
							id = pw_wonder.1305
						}
					}
					else = {
						planet_event = {
							id = pw_wonder.1315
						}
					}
				}
				25 = { #Add 15 devastation
					modifier = {
						factor = 0.5
						exists = owner
						owner = { is_machine_empire = yes }
					}
					modifier = {
						factor = 0.75
						pw_is_planet_ideal = yes
					}
					modifier = {
						factor = 1.25
						exists = owner
						owner = { has_valid_civic = civic_environmentalist }
					}
					if = {
						limit = {
							owner = {
								NOT = { has_country_flag = pw_mantle_crucible_hide_devastation_events }
							}
						}
						planet_event = {
							id = pw_wonder.1306
						}
					}
					else = {
						planet_event = {
							id = pw_wonder.1316
						}
					}
				}
				10 = { #Add 25 devastation
					modifier = {
						factor = 1.5
						pw_is_planet_ideal = yes
					}
					if = {
						limit = {
							owner = {
								NOT = { has_country_flag = pw_mantle_crucible_hide_devastation_events }
							}
						}
						planet_event = {
							id = pw_wonder.1307
						}
					}
					else = {
						planet_event = {
							id = pw_wonder.1317
						}
					}
				}
				5 = { #Add 30 devastation
					modifier = {
						factor = 1.5
						exists = owner
						owner = { is_machine_empire = yes }
					}
					modifier = {
						factor = 2
						pw_is_planet_ideal = yes
					}
					if = {
						limit = {
							owner = {
								NOT = { has_country_flag = pw_mantle_crucible_hide_devastation_events }
							}
						}
						planet_event = {
							id = pw_wonder.1308
						}
					}
					else = {
						planet_event = {
							id = pw_wonder.1318
						}
					}
				}
			}
		}
		else = {
			remove_planet_flag = pw_mantle_crucible_devastation_event
		}
	}
}

#Add 5 devastation
planet_event = {
	id = pw_wonder.1305
	title = pw_wonder.1305.name
	desc = pw_wonder.1305.desc
	picture = GFX_evt_underground_civilization
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	location = THIS

	option = {
		name = UNFORTUNATE
		add_planet_devastation = 5
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}

	option = {
		name = pw_wonder.mantle_crucible.hide_devastation_events
		custom_tooltip = pw_wonder.mantle_crucible.hide_devastation_events.tooltip
		add_planet_devastation = 5
		hidden_effect = {
			owner = {
				set_country_flag = pw_mantle_crucible_hide_devastation_events
			}
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}
}

#Add 15 devastation
planet_event = {
	id = pw_wonder.1306
	title = pw_wonder.1305.name
	desc = pw_wonder.1306.desc
	picture = GFX_evt_underground_civilization
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	location = THIS

	option = {
		name = UNFORTUNATE
		add_planet_devastation = 15
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}

	option = {
		name = pw_wonder.mantle_crucible.hide_devastation_events
		custom_tooltip = pw_wonder.mantle_crucible.hide_devastation_events.tooltip
		add_planet_devastation = 15
		hidden_effect = {
			owner = {
				set_country_flag = pw_mantle_crucible_hide_devastation_events
			}
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}
}


#Add 25 devastation
planet_event = {
	id = pw_wonder.1307
	title = pw_wonder.1305.name
	desc = pw_wonder.1307.desc
	picture = GFX_evt_underground_civilization
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	location = THIS

	option = {
		name = UNFORTUNATE
		add_planet_devastation = 25
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}

	option = {
		name = pw_wonder.mantle_crucible.hide_devastation_events
		custom_tooltip = pw_wonder.mantle_crucible.hide_devastation_events.tooltip
		add_planet_devastation = 25
		hidden_effect = {
			owner = {
				set_country_flag = pw_mantle_crucible_hide_devastation_events
			}
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}
}

#Add 30 devastation
planet_event = {
	id = pw_wonder.1308
	title = pw_wonder.1305.name
	desc = pw_wonder.1308.desc
	picture = GFX_evt_underground_civilization
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	location = THIS

	option = {
		name = UNFORTUNATE
		add_planet_devastation = 30
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}

	option = {
		name = pw_wonder.mantle_crucible.hide_devastation_events
		custom_tooltip = pw_wonder.mantle_crucible.hide_devastation_events.tooltip
		add_planet_devastation = 30
		hidden_effect = {
			owner = {
				set_country_flag = pw_mantle_crucible_hide_devastation_events
			}
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}
}

#Check if Mantle Crucible was destroyed/replaced (recursive)
planet_event = {
	id = pw_wonder.1310
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_active_building = pw_building_mantle_crucible }
				OR = {
					has_modifier = pw_mod_mantle_crucible_alloys
					has_modifier = pw_mod_mantle_crucible_consumer_goods
				}
			}
			planet_event = { id = pw_wonder.1311 }
		}
		else = {
			planet_event = { id = pw_wonder.1310 days = @pw_halfYear }
		}
	}
}

#Remove Mantle Crucible modifiers after it is removed
planet_event = {
	id = pw_wonder.1311
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_active_building = pw_building_mantle_crucible }
		OR = {
			has_modifier = pw_mod_mantle_crucible_alloys
			has_modifier = pw_mod_mantle_crucible_consumer_goods
		}
	}

	immediate = {
		if = {
			limit = { has_modifier = pw_mod_mantle_crucible_alloys }
			remove_modifier = pw_mod_mantle_crucible_alloys
		}
		if = {
			limit = { has_modifier = pw_mod_mantle_crucible_consumer_goods }
			remove_modifier = pw_mod_mantle_crucible_consumer_goods
		}
	}
}

#Add 5 devastation (hidden)
planet_event = {
	id = pw_wonder.1315
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	immediate = {
		add_planet_devastation = 5
		create_message = {
			type = PLANET_DESTROYED
			localization = pw_message_mantle_crucible_devastation_5
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}
}

#Add 15 devastation (hidden)
planet_event = {
	id = pw_wonder.1316
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	immediate = {
		add_planet_devastation = 15
		create_message = {
			type = PLANET_DESTROYED
			localization = pw_message_mantle_crucible_devastation_15
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}
}

#Add 25 devastation (hidden)
planet_event = {
	id = pw_wonder.1317
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	immediate = {
		add_planet_devastation = 25
		create_message = {
			type = PLANET_DESTROYED
			localization = pw_message_mantle_crucible_devastation_25
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}
}

#Add 30 devastation (hidden)
planet_event = {
	id = pw_wonder.1318
	hide_window = yes
	is_triggered_only = yes
	location = THIS

	immediate = {
		add_planet_devastation = 30
		create_message = {
			type = PLANET_DESTROYED
			localization = pw_message_mantle_crucible_devastation_30
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1304
				days = @pw_10years
				random = @pw_2years
			}
		}
	}
}

# Titan Forge -> id 1330

#On Titan Forge built
planet_event = {
	id = pw_wonder.1330
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#This would be triggered every time a building is upgraded.
		last_building_changed = pw_building_titan_forge
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_titan_forge_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1331 } #Regular first time
		planet_event = { id = pw_wonder.1332 } #Gestalt first time
		planet_event = { id = pw_wonder.1334 } #Remove Mantle Crucible mods
	}
}

#On first time Titan Forge is built (Regular Empire)
planet_event = {
	id = pw_wonder.1331
	title = pw_wonder.1331.name
	desc = pw_wonder.1331.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_titan_forge_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_titan_forge_built }
	}

	option = {
		name = pw_wonder.1331.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}

		hidden_effect = {
			owner = {
				country_event = { id = pw_wonder.1340 days = @pw_1year random = @pw_halfYear }
			}
		}
	}
}

#On first time Titan Forge is built (Gestalt Empire)
planet_event = {
	id = pw_wonder.1332
	title = pw_wonder.1332.name
	desc = pw_wonder.1332.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_titan_forge_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_titan_forge_built }
	}

	option = {
		name = pw_wonder.1332.a
		if = {
			limit = {
				NOR = {
					has_modifier = pw_mod_wonder_built_recently_happiness
					has_modifier = pw_mod_wonder_built_recently_unity
				}
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.1332.b
		trigger = {
			exists = owner
			OR  ={
				owner = { has_valid_civic = civic_machine_warbots }
				owner = { has_valid_civic = civic_machine_terminator }
			}
		}
		if = {
			limit = {
				NOT = { has_modifier = pw_mod_wonder_built_recently_unity }
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_unity
				days = @pw_5years
			}
		}
	}

	after = {
		hidden_effect = {
			owner = {
				country_event = { id = pw_wonder.1340 days = @pw_1year random = @pw_halfYear }
			}
		}
	}
}

#On War Titan construction completes, remove the flag
planet_event = {
	id = pw_wonder.1333
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { from = { army_type = pw_army_war_titan }}
			remove_planet_flag = pw_assembling_war_titan
		}
	}
}

#On Titan Forge completion remove Mantle Crucible modifiers
planet_event = {
	id = pw_wonder.1334
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_active_building = pw_building_mantle_crucible }
	}

	immediate = {
		if = {
			limit = { has_modifier = pw_mod_mantle_crucible_alloys }
			remove_modifier = pw_mod_mantle_crucible_alloys
		}
		if = {
			limit = { has_modifier = pw_mod_mantle_crucible_consumer_goods }
			remove_modifier = pw_mod_mantle_crucible_consumer_goods
		}
	}
}

#Titan Forge tech events:
country_event = {
	id = pw_wonder.1340
	title = pw_wonder.1340.name
	desc = pw_wonder.1340.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1340.a
		add_research_option = pw_tech_titan_forge_crystals
		hidden_effect = {
			country_event = { id = pw_wonder.1341 days = @pw_1year random = @pw_halfYear }
		}
	}
}

country_event = {
	id = pw_wonder.1341
	title = pw_wonder.1341.name
	desc = pw_wonder.1341.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1341.a
		add_research_option = pw_tech_titan_forge_gases
		hidden_effect = {
			country_event = { id = pw_wonder.1342 days = @pw_1year random = @pw_halfYear }
		}
	}
}

country_event = {
	id = pw_wonder.1342
	title = pw_wonder.1342.name
	desc = pw_wonder.1342.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1342.a
		add_research_option = pw_tech_titan_forge_motes
	}
}

# Industrial Hearth -> id 1360

#On Industrial Hearth built
planet_event = {
	id = pw_wonder.1360
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#This would be triggered every time a building is upgraded.
		last_building_changed = pw_building_industrial_hearth
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_industrial_hearth_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1361 } #Regular first time
		planet_event = { id = pw_wonder.1362 } #Gestalt first time
		planet_event = { id = pw_wonder.1363 } #Remove Mantle Crucible mods
		planet_event = { id = pw_wonder.1364 days = @pw_1year random = @pw_halfYear } #Development Events
	}
}

#On first time Industrial Hearth is built (Regular Empire)
planet_event = {
	id = pw_wonder.1361
	title = pw_wonder.1361.name
	desc = pw_wonder.1361.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_industrial_hearth_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_industrial_hearth_built }
	}

	option = {
		name = pw_wonder.1361.a
		if = {
			limit = {
				NOT = { has_modifier = pw_mod_wonder_built_recently_happiness }
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}

	option = {
		name = pw_wonder.1361.b
		if = {
			limit = {
				NOT = { has_modifier = pw_mod_wonder_built_recently_happiness }
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}
}

#On first time Industrial Hearth is built (Gestalt Empire)
planet_event = {
	id = pw_wonder.1362
	title = pw_wonder.1362.name
	desc = pw_wonder.1362.desc
	picture = GFX_evt_underground_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_industrial_hearth_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_industrial_hearth_built }
	}

	option = {
		name = pw_wonder.1362.a
	}
}

#On Industrial Hearth completion remove Mantle Crucible modifiers
planet_event = {
	id = pw_wonder.1363
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_active_building = pw_building_mantle_crucible }
	}

	immediate = {
		if = {
			limit = { has_modifier = pw_mod_mantle_crucible_alloys }
			remove_modifier = pw_mod_mantle_crucible_alloys
		}
		if = {
			limit = { has_modifier = pw_mod_mantle_crucible_consumer_goods }
			remove_modifier = pw_mod_mantle_crucible_consumer_goods
		}
	}
}

#Random Industrial Hearth development
planet_event = {
	id = pw_wonder.1364
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
		is_ai = no
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	immediate = {
		random_list = {
			10 = {
				modifier = {
					factor = 0
					exists = owner
					OR = {
						owner = { has_technology = pw_tech_industrial_hearth_industry_military }
						owner = { has_tech_option = pw_tech_industrial_hearth_industry_military }
					}
				}
				planet_event = { id = pw_wonder.1365	}
			}
			10 = {
				modifier = {
					factor = 0
					exists = owner
					OR = {
						owner = { has_technology = pw_tech_industrial_hearth_industry_civilian }
						owner = { has_tech_option = pw_tech_industrial_hearth_industry_civilian }
					}
				}
				planet_event = { id = pw_wonder.1366	}
			}
			10 = {
				modifier = {
					factor = 0
					exists = owner
					OR = {
						owner = { has_country_flag = pw_industrial_hearth_capital }
						owner.capital_scope = {
							is_planet_class = pc_ringworld_habitable
						}
					}
				}
				planet_event = { id = pw_wonder.1367	}
			}
			10 = {
				modifier = {
					factor = 0
					exists = owner
					OR = {
						owner = { has_technology = pw_tech_industrial_hearth_housing }
						owner = { has_tech_option = pw_tech_industrial_hearth_housing }
					}
				}
				planet_event = { id = pw_wonder.1368	}
			}
			10 = {
				modifier = {
					factor = 0
					exists = owner
					NOT = { owner = { has_valid_civic = civic_environmentalist }}
					OR = {
						owner = { has_technology = pw_tech_industrial_hearth_gardens }
						owner = { has_tech_option = pw_tech_industrial_hearth_gardens }
					}
				}
				planet_event = { id = pw_wonder.1369	}
			}
			10 = {
				modifier = {
					factor = 0
					exists = owner
					OR = {
						owner = { has_technology = pw_tech_industrial_hearth_design }
						owner = { has_tech_option = pw_tech_industrial_hearth_design }
					}
				}
				modifier = {
					factor = 0
					exists = owner
					owner = { is_megacorp = yes }
				}
				planet_event = { id = pw_wonder.1370	}
			}
			10 = {
				modifier = {
					factor = 0
					exists = owner
					OR = {
						owner = { has_technology = pw_tech_industrial_hearth_design_megacorp }
						owner = { has_tech_option = pw_tech_industrial_hearth_design_megacorp }
					}
				}
				modifier = {
					factor = 0
					exists = owner
					owner = { is_megacorp = no }
				}
				planet_event = { id = pw_wonder.1371	}
			}
			10 = {
				modifier = {
					factor = 0
					exists = owner
					OR = {
						owner = { has_technology = pw_tech_industrial_hearth_production }
						owner = { has_tech_option = pw_tech_industrial_hearth_production }
					}
				}
				planet_event = { id = pw_wonder.1373 }
			}
		}
	}
}

#Industrial Hearth: industry military
planet_event = {
	id = pw_wonder.1365
	title = pw_wonder.1365.name
	desc = pw_wonder.1365.desc
	picture = GFX_evt_underground_city
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	option = {
		name = pw_wonder.1365.a
		owner = {
			add_research_option = pw_tech_industrial_hearth_industry_military
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}
}

#Industrial Hearth: industry civilian
planet_event = {
	id = pw_wonder.1366
	title = pw_wonder.1366.name
	desc = pw_wonder.1366.desc
	picture = GFX_evt_underground_city
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	option = {
		name = pw_wonder.1366.a
		owner = {
			add_research_option = pw_tech_industrial_hearth_industry_civilian
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}
}

#Industrial Hearth: capital
planet_event = {
	id = pw_wonder.1367
	title = pw_wonder.1367.name
	desc = pw_wonder.1367.desc
	picture = GFX_evt_underground_city
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	immediate = {
		owner = { set_country_flag = pw_industrial_hearth_capital }
	}

	option = {
		name = pw_wonder.1367.a
		owner.capital_scope = {
			enable_special_project = {
				name = PW_PILOT_PLAN
				owner = owner
				location = this
			}
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}

	option = {
		name = pw_wonder.1367.b
		owner = {
			add_resource = {
				influence = 50
			}
		}
	}
}

#Industrial Hearth: housing
planet_event = {
	id = pw_wonder.1368
	title = pw_wonder.1368.name
	desc = pw_wonder.1368.desc
	picture = GFX_evt_underground_city
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	option = {
		name = pw_wonder.1368.a
		owner = {
			add_research_option = pw_tech_industrial_hearth_housing
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}

	option = {
		name = pw_wonder.1368.b
		owner = {
			add_research_option = pw_tech_industrial_hearth_housing
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}
}

#Industrial Hearth: gardens
planet_event = {
	id = pw_wonder.1369
	title = pw_wonder.1369.name
	desc = pw_wonder.1369.desc
	picture = GFX_evt_underground_city
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	option = {
		name = pw_wonder.1369.a
		owner = {
			add_research_option = pw_tech_industrial_hearth_gardens
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}
}

#Industrial Hearth: design
planet_event = {
	id = pw_wonder.1370
	title = pw_wonder.1370.name
	desc = pw_wonder.1370.desc
	picture = GFX_evt_underground_city
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	option = {
		name = pw_wonder.1370.a
		owner = {
			add_research_option = pw_tech_industrial_hearth_design
		}
		add_modifier = {
			modifier = pw_mod_industrial_hearth_egalitarian
			days = @pw_2years
			clear_on_owner_change = yes
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}

	option = {
		name = pw_wonder.1370.b
		owner = {
			add_research_option = pw_tech_industrial_hearth_design
		}
		add_modifier = {
			modifier = pw_mod_industrial_hearth_authoritarian
			days = @pw_2years
			clear_on_owner_change = yes
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}
}

#Industrial Hearth: design megacorp
planet_event = {
	id = pw_wonder.1371
	title = pw_wonder.1371.name
	desc = pw_wonder.1371.desc
	picture = GFX_evt_underground_city
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	immediate = {
		owner = { set_country_flag = pw_industrial_hearth_design }
	}

	option = {
		name = pw_wonder.1371.a
		owner = {
			add_research_option = pw_tech_industrial_hearth_design_megacorp
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}
}

#Industrial Hearth: capital -> Success
planet_event = {
	id = pw_wonder.1372
	title = pw_wonder.1372.name
	desc = pw_wonder.1372.desc
	picture = GFX_evt_city_planet
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	option = {
		name = pw_wonder.1372.a
		add_modifier = {
			modifier = pw_mod_pilot_plan
		}
	}
}

#Industrial Hearth: Jobs production/upkeep
planet_event = {
	id = pw_wonder.1373
	title = pw_wonder.1373.name
	desc = pw_wonder.1373.desc
	picture = GFX_evt_underground_city
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_active_building = pw_building_industrial_hearth
	}

	option = {
		name = pw_wonder.1373.a
		owner = {
			add_research_option = pw_tech_industrial_hearth_production
		}
		hidden_effect = {
			planet_event = {
				id = pw_wonder.1364
				days = @pw_5years
				random = @pw_1year
			}
		}
	}
}

# Pavilion of Wonders -> id 1400

#On Pavilion of Wonders built
planet_event = {
	id = pw_wonder.1400
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_pavilion_of_wonders_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1401 } #Regular first time
	}
}

#On first time Pavilion of Wonders is built (Regular Empire)
planet_event = {
	id = pw_wonder.1401
	title = pw_wonder.1401.name
	desc = pw_wonder.1401.desc
	picture = GFX_evt_galactic_community
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_pavilion_of_wonders_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_pavilion_of_wonders_built }
	}

	option = {
		name = pw_wonder.1401.a
		if = {
			limit = {
				NOT = { has_modifier = pw_mod_wonder_built_recently_happiness }
			}
			add_modifier = {
				modifier = pw_mod_wonder_built_recently_happiness
				days = @pw_5years
			}
		}
	}
}

# Fair of Worlds -> id 1430

#On Fair of Worlds built
planet_event = {
	id = pw_wonder.1430
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#This would be triggered every time a building is upgraded.
		last_building_changed = pw_building_fair_of_worlds
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_fair_of_worlds_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1431 } #Regular first time
	}
}

#On first time Fair of Worlds is built (Regular Empire)
planet_event = {
	id = pw_wonder.1431
	title = pw_wonder.1431.name
	desc = pw_wonder.1431.desc
	picture = GFX_evt_galactic_community
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_fair_of_worlds_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_fair_of_worlds_built }
	}

	option = {
		name = pw_wonder.1431.a
		add_modifier = {
			modifier = pw_mod_fair_of_worlds_recently_built
			days = @pw_1year
		}
		hidden_effect = {
			planet_event = { id = pw_wonder.1432 days = @pw_halfYear random = @pw_halfYear }
		}
	}
}

#Fair of Worlds: more envoys tech
planet_event = {
	id = pw_wonder.1432
	title = pw_wonder.1432.name
	desc = pw_wonder.1432.desc
	picture = GFX_evt_diplomatic_visit
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
		is_ai = no
	}

	trigger = {
		has_active_building = pw_building_fair_of_worlds
		owner = { is_xenophile = yes }
	}

	option = {
		name = pw_wonder.1432.a
		owner = {
			add_research_option = pw_tech_cultural_diversity_studies
		}
	}

	option = {
		name = pw_wonder.1432.b
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier3influencereward
				min = @tier3influencemin
				max = @tier3influencemax
			}
		}
	}
}

# Museum of the Grotesque -> id 1460

#On Museum of the Grotesque built
planet_event = {
	id = pw_wonder.1460
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#This would be triggered every time a building is upgraded.
		last_building_changed = pw_building_museum_of_the_grotesque
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_museum_of_the_grotesque_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1461 } #Regular first time
	}
}

#On first time Museum of the Grotesque is built (Regular Empire)
planet_event = {
	id = pw_wonder.1461
	title = pw_wonder.1461.name
	desc = pw_wonder.1461.desc
	picture = GFX_evt_galactic_community
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_museum_of_the_grotesque_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_museum_of_the_grotesque_built }
	}

	option = {
		name = pw_wonder.1461.a
		add_modifier = {
			modifier = pw_mod_museum_of_the_grotesque_recently_build
			days = @pw_1year
		}
		hidden_effect = {
			planet_event = { id = pw_wonder.1462 days = @pw_halfYear random = @pw_halfYear }
		}
	}
}

#Museum of the Grotesque: more envoys
planet_event = {
	id = pw_wonder.1462
	title = pw_wonder.1462.name
	desc = pw_wonder.1462.desc
	picture = GFX_evt_diplomatic_visit
	show_sound = event_cityscape
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
		is_ai = no
	}

	trigger = {
		has_active_building = pw_building_museum_of_the_grotesque
		owner = { is_xenophobe = yes }
	}

	option = {
		name = pw_wonder.1462.a
		allow = {
			owner = {
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_inwards_perfection
				}
			}
		}
		owner = {
			add_research_option = pw_tech_cultural_hegemony_studies
		}
	}

	option = {
		name = pw_wonder.1462.b
		trigger = {
			owner = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_inwards_perfection
				}
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier3influencereward
				min = @tier3influencemin
				max = @tier3influencemax
			}
			add_monthly_resource_mult = {
				resource = unity
				value = @tier3unityreward
				min = @tier3unitymin
				max = @tier3unitymax
			}
		}
	}

	option = {
		name = pw_wonder.1462.c
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier3influencereward
				min = @tier3influencemin
				max = @tier3influencemax
			}
		}
	}
}

# Holy Reliquary -> id 1500

#On Holy Reliquary built
planet_event = {
	id = pw_wonder.1500
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_holy_reliquary_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1501 } #Regular first time
	}
}

#On first time Holy Reliquary is built (Regular Empire)
planet_event = {
	id = pw_wonder.1501
	title = pw_wonder.1501.name
	desc = pw_wonder.1501.desc
	picture = GFX_evt_ancient_records
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_holy_reliquary_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_holy_reliquary_built }
		owner = { country_event = { id = pw_holy_reliquary.1101 days = @pw_1year }} #AI simulate relics
	}

	option = {
		name = pw_wonder.1501.a
		add_modifier = {
			modifier = pw_mod_holy_reliquary_recently_build
			days = @pw_2years
		}
	}

	option = {
		name = pw_wonder.1501.b
		add_modifier = {
			modifier = pw_mod_holy_reliquary_recently_build
			days = @pw_1year
		}
		owner = {
			add_resource = {
				influence = 25
			}
		}
	}
}

# Grand Archive -> id 1600

#On Grand Archive built
planet_event = {
	id = pw_wonder.1600
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_grand_archive_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1601 } #Regular first time
		planet_event = { id = pw_wonder.1602 } #Second Time onwards
		planet_event = { id = pw_wonder.1620 days = @pw_halfYear } #Recursive check
	}
}

#On first time Grand Archive is built (Regular Empire)
planet_event = {
	id = pw_wonder.1601
	title = pw_wonder.1601.name
	desc = pw_wonder.1601.desc
	picture = GFX_evt_ancient_databank
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_grand_archive_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_grand_archive_built }
		planet_event = { id = pw_grand_archive.1101 days = @pw_1year } #AI simulate deposits
	}

	option = {
		name = pw_wonder.1601.a
		add_modifier = {
			modifier = pw_mod_grand_archive_recently_build
			days = @pw_2years
		}
	}

	option = {
		name = pw_wonder.1601.b
		add_modifier = {
			modifier = pw_mod_grand_archive_recently_build
			days = @pw_1year
		}
		owner = {
			add_resource = {
				influence = 25
			}
		}
	}
}

#On second (and onwards) time Grand Archive is built (Regular Empire)
planet_event = {
	id = pw_wonder.1602
	title = pw_wonder.1602.name
	desc = pw_wonder.1602.desc
	picture = GFX_evt_ancient_databank
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		exists = owner
		owner = {
			is_gestalt = no
			has_country_flag = pw_grand_archive_built
			OR = {
				has_country_flag = pw_grand_archive_holoarchive_unified
				has_country_flag = pw_grand_archive_ARK_project_completed
				has_country_flag = pw_grand_archive_cradle_initiative_completed
				has_country_flag = pw_grand_archive_library_of_babel_completed
				has_country_flag = pw_grand_archive_particle_museum_completed
				has_country_flag = pw_grand_archive_omnidatabase_completed
				has_country_flag = pw_grand_archive_stellarium_completed
				has_country_flag = pw_grand_archive_zero_g_exposition_completed
				has_country_flag = pw_grand_archive_mechanist_collection_completed
				has_country_flag = pw_grand_archive_meta_architectural_complex_completed
			}
		}
	}

	option = {
		name = pw_wonder.1602.a

		owner = {
			every_owned_planet = {
				limit = {
					NOT = { is_planet = PREVPREV }
					OR = {
						has_deposit = pw_d_ark_project
						has_deposit = pw_d_cradle_initiative
						has_deposit = pw_d_library_of_babel
						has_deposit = pw_d_particle_museum
						has_deposit = pw_d_omnidatabase
						has_deposit = pw_d_stellarium
						has_deposit = pw_d_zero_g_exposition
						has_deposit = pw_d_mechanist_collection
						has_deposit = pw_d_meta_architectural_complex
						has_deposit = pw_d_holoarchive
					}
				}
				if = {
					limit = { has_deposit = pw_d_ark_project }
					remove_deposit = pw_d_ark_project
				}
				if = {
					limit = { has_deposit = pw_d_cradle_initiative }
					remove_deposit = pw_d_cradle_initiative
				}
				if = {
					limit = { has_deposit = pw_d_library_of_babel }
					remove_deposit = pw_d_library_of_babel
				}
				if = {
					limit = { has_deposit = pw_d_particle_museum }
					remove_deposit = pw_d_particle_museum
				}
				if = {
					limit = { has_deposit = pw_d_omnidatabase }
					remove_deposit = pw_d_omnidatabase
				}
				if = {
					limit = { has_deposit = pw_d_stellarium }
					remove_deposit = pw_d_stellarium
				}
				if = {
					limit = { has_deposit = pw_d_zero_g_exposition }
					remove_deposit = pw_d_zero_g_exposition
				}
				if = {
					limit = { has_deposit = pw_d_mechanist_collection }
					remove_deposit = pw_d_mechanist_collection
				}
				if = {
					limit = { has_deposit = pw_d_meta_architectural_complex }
					remove_deposit = pw_d_meta_architectural_complex
				}
				if = {
					limit = { has_deposit = pw_d_holoarchive }
					remove_deposit = pw_d_holoarchive
				}
			}
		}

		if = {
			limit = {
				owner = { has_country_flag = pw_grand_archive_holoarchive_unified }
				NOT = { has_deposit = pw_d_holoarchive }
			}
			add_deposit = pw_d_holoarchive
		}
		else = {
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_ARK_project_completed }
					NOT = { has_deposit = pw_d_ark_project }
				}
				add_deposit = pw_d_ark_project
			}
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_cradle_initiative_completed }
					NOT = { has_deposit = pw_d_cradle_initiative }
				}
				add_deposit = pw_d_cradle_initiative
			}
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_library_of_babel_completed }
					NOT = { has_deposit = pw_d_library_of_babel }
				}
				add_deposit = pw_d_library_of_babel
			}
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_particle_museum_completed }
					NOT = { has_deposit = pw_d_particle_museum }
				}
				add_deposit = pw_d_particle_museum
			}
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_omnidatabase_completed }
					NOT = { has_deposit = pw_d_omnidatabase }
				}
				add_deposit = pw_d_omnidatabase
			}
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_stellarium_completed }
					NOT = { has_deposit = pw_d_stellarium }
				}
				add_deposit = pw_d_stellarium
			}
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_zero_g_exposition_completed }
					NOT = { has_deposit = pw_d_zero_g_exposition }
				}
				add_deposit = pw_d_zero_g_exposition
			}
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_mechanist_collection_completed }
					NOT = { has_deposit = pw_d_mechanist_collection }
				}
				add_deposit = pw_d_mechanist_collection
			}
			if = {
				limit = {
					owner = { has_country_flag = pw_grand_archive_meta_architectural_complex_completed }
					NOT = { has_deposit = pw_d_meta_architectural_complex }
				}
				add_deposit = pw_d_meta_architectural_complex
			}
		}
	}
}

#Check if The Grand Archive has the needed deposits (recursive)
planet_event = {
	id = pw_wonder.1620
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				#Has the building:
				has_active_building = pw_building_grand_archive
				exists = owner
				OR = {
					AND = {
						owner = { has_country_flag = pw_grand_archive_holoarchive_unified }
						NOT = { has_deposit = pw_d_holoarchive }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_ARK_project_completed }
						NOT = { has_deposit = pw_d_ark_project }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_cradle_initiative_completed }
						NOT = { has_deposit = pw_d_cradle_initiative }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_library_of_babel_completed }
						NOT = { has_deposit = pw_d_library_of_babel }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_particle_museum_completed }
						NOT = { has_deposit = pw_d_particle_museum }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_omnidatabase_completed }
						NOT = { has_deposit = pw_d_omnidatabase }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_stellarium_completed }
						NOT = { has_deposit = pw_d_stellarium }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_zero_g_exposition_completed }
						NOT = { has_deposit = pw_d_zero_g_exposition }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_mechanist_collection_completed }
						NOT = { has_deposit = pw_d_mechanist_collection }
					}
					AND = {
						owner = { has_country_flag = pw_grand_archive_meta_architectural_complex_completed }
						NOT = { has_deposit = pw_d_meta_architectural_complex }
					}
				}
			}
			planet_event = { id = pw_wonder.1621 }
		}
		else = {
			planet_event = { id = pw_wonder.1620 days = @pw_halfYear }
		}
	}
}

planet_event = {
	id = pw_wonder.1621
	title = pw_wonder.1621.name
	desc = pw_wonder.1621.desc
	picture = GFX_evt_ancient_databank
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#Has the building:
		has_active_building = pw_building_grand_archive
		OR = { #Has the flag, but not the deposit
			AND = {
				owner = { has_country_flag = pw_grand_archive_holoarchive_unified }
				NOT = { has_deposit = pw_d_holoarchive }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_ARK_project_completed }
				NOT = { has_deposit = pw_d_ark_project }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_cradle_initiative_completed }
				NOT = { has_deposit = pw_d_cradle_initiative }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_library_of_babel_completed }
				NOT = { has_deposit = pw_d_library_of_babel }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_particle_museum_completed }
				NOT = { has_deposit = pw_d_particle_museum }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_omnidatabase_completed }
				NOT = { has_deposit = pw_d_omnidatabase }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_stellarium_completed }
				NOT = { has_deposit = pw_d_stellarium }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_zero_g_exposition_completed }
				NOT = { has_deposit = pw_d_zero_g_exposition }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_mechanist_collection_completed }
				NOT = { has_deposit = pw_d_mechanist_collection }
			}
			AND = {
				owner = { has_country_flag = pw_grand_archive_meta_architectural_complex_completed }
				NOT = { has_deposit = pw_d_meta_architectural_complex }
			}
		}
	}

	option = {
		name = pw_wonder.1621.a

		if = {
			limit = { owner = { has_country_flag = pw_grand_archive_holoarchive_unified }}
			add_deposit = pw_d_holoarchive
		}
		else = {
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_ARK_project_completed }}
				add_deposit = pw_d_ark_project
			}
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_cradle_initiative_completed }}
				add_deposit = pw_d_cradle_initiative
			}
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_library_of_babel_completed }}
				add_deposit = pw_d_library_of_babel
			}
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_particle_museum_completed }}
				add_deposit = pw_d_particle_museum
			}
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_omnidatabase_completed }}
				add_deposit = pw_d_omnidatabase
			}
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_stellarium_completed }}
				add_deposit = pw_d_stellarium
			}
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_zero_g_exposition_completed }}
				add_deposit = pw_d_zero_g_exposition
			}
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_mechanist_collection_completed }}
				add_deposit = pw_d_mechanist_collection
			}
			if = {
				limit = { owner = { has_country_flag = pw_grand_archive_meta_architectural_complex_completed }}
				add_deposit = pw_d_meta_architectural_complex
			}
		}
	}
}

# Transplanetary Logistic Network -> id 1700

#On Transplanetary Logistic Network built
planet_event = {
	id = pw_wonder.1700
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_transplanetary_logistics_network_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1701 } #Regular first time
		planet_event = { id = pw_wonder.1720 days = @pw_halfYear } #Recursive check
	}
}

#On first time Transplanetary Logistic Network is built (Regular Empire)
planet_event = {
	id = pw_wonder.1701
	title = pw_wonder.1701.name
	desc = {
		trigger = {
			NOT = { is_planet_class = pc_habitat }
		}
		text = pw_wonder.1701.desc
	}
	desc = {
		trigger = {
			is_planet_class = pc_habitat
		}
		text = pw_wonder.1701.desc.habitat
	}
	picture = GFX_evt_city_planet
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_transplanetary_logistics_network_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_transplanetary_logistics_network_built }
		planet_event = { id = pw_wonder.1702 days = @pw_2years random = @pw_1year } #Shared Burden
	}

	option = {
		name = pw_wonder.1701.a
		add_modifier = {
			modifier = pw_mod_transplanetary_logistics_network_recently_build
			days = @pw_2years
		}
	}
}

#Unlocks Shared Burdens tech:
planet_event = {
	id = pw_wonder.1702
	title = pw_wonder.1702.name
	desc = pw_wonder.1702.desc
	picture = GFX_evt_city_planet
	show_sound = event_celebration
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		exists = owner
		owner = { has_valid_civic = civic_shared_burden }
	}

	option = {
		name = pw_wonder.1702.a
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier3unityreward
				min = @tier3unitymin
				max = @tier3unitymax
			}
			add_research_option = pw_tech_burdens_of_all
		}
	}

	option = {
		name = pw_wonder.1702.b
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier3influencereward
				min = @tier3influencemin
				max = @tier3influencemax
			}
		}
	}
}

#When the TLN is destroyed/replaces -> demolish Infrastructure
planet_event = {
	id = pw_wonder.1703
	title = pw_wonder.1703.name
	desc = pw_wonder.1703.desc
	picture = GFX_evt_city_planet
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOR = { #Does not has the building:
			has_active_building = pw_building_transplanetary_logistics_network
			has_active_building = pw_building_transhabitat_logistics_network
		}
		OR = { #But has one of the deposits:
			has_deposit = pw_d_infrastructure_food_distribution
			has_deposit = pw_d_infrastructure_energy_distribution
			has_deposit = pw_d_infrastructure_goods_distribution
			has_deposit = pw_d_infrastructure_luxury_distribution
			has_deposit = pw_d_infrastructure_medical_posts
			has_deposit = pw_d_infrastructure_habitation_support
			has_deposit = pw_d_infrastructure_emergency_services
			has_deposit = pw_d_infrastructure_crisis_responders
			has_deposit = pw_d_infrastructure_public_agoras
			has_deposit = pw_d_infrastructure_local_administration
			has_deposit = pw_d_infrastructure_distributed_education
			has_deposit = pw_d_infrastructure_arts_installations
			has_deposit = pw_d_infrastructure_public_markets
			has_deposit = pw_d_infrastructure_inventions_fair
			has_deposit = pw_d_infrastructure_cooperatives_manufacturers
			has_deposit = pw_d_infrastructure_industrial_unions
		}
	}

	option = {
		name = UNFORTUNATE
		if = {
			limit = { has_deposit = pw_d_infrastructure_food_distribution }
			remove_deposit = pw_d_infrastructure_food_distribution
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_energy_distribution }
			remove_deposit = pw_d_infrastructure_energy_distribution
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_goods_distribution }
			remove_deposit = pw_d_infrastructure_goods_distribution
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_luxury_distribution }
			remove_deposit = pw_d_infrastructure_luxury_distribution
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_medical_posts }
			remove_deposit = pw_d_infrastructure_medical_posts
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_habitation_support }
			remove_deposit = pw_d_infrastructure_habitation_support
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_emergency_services }
			remove_deposit = pw_d_infrastructure_emergency_services
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_crisis_responders }
			remove_deposit = pw_d_infrastructure_crisis_responders
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_public_agoras }
			remove_deposit = pw_d_infrastructure_public_agoras
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_local_administration }
			remove_deposit = pw_d_infrastructure_local_administration
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_distributed_education }
			remove_deposit = pw_d_infrastructure_distributed_education
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_arts_installations }
			remove_deposit = pw_d_infrastructure_arts_installations
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_public_markets }
			remove_deposit = pw_d_infrastructure_public_markets
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_inventions_fair }
			remove_deposit = pw_d_infrastructure_inventions_fair
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_cooperatives_manufacturers }
			remove_deposit = pw_d_infrastructure_cooperatives_manufacturers
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_industrial_unions }
			remove_deposit = pw_d_infrastructure_industrial_unions
		}
	}
}

#When any Infrastructure development is completed:
planet_event = {
	id = pw_wonder.1705
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_tls_infrastructure_completed
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
		planet_event = {
			id = pw_wonder.1706
			days = 30
			random = 30
		}
	}
}

#After Development random events:
planet_event = {
	id = pw_wonder.1706
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
		is_ai = no
		is_occupied_flag = no
	}

	trigger = {
		NOT = { has_planet_flag = pw_TLN_event }
	}

	immediate = {
		random_list = {
			20 = {} #Mostly nothing happens
			1 = {
				planet_event = { id = pw_wonder.1707 }
				set_timed_planet_flag = {
					flag = pw_TLN_event
					days = @pw_20years
				}
			}
			1 =  {
				planet_event = { id = pw_wonder.1708 }
				set_timed_planet_flag = {
					flag = pw_TLN_event
					days = @pw_20years
				}
			}
			1 = {
				planet_event = { id = pw_wonder.1709 }
				set_timed_planet_flag = {
					flag = pw_TLN_event
					days = @pw_20years
				}
			}
			1 =  {
				modifier = {
					factor = 2
					owner = {
						is_militarist = yes
					}
				}
				planet_event = { id = pw_wonder.1710 }
				set_timed_planet_flag = {
					flag = pw_TLN_event
					days = @pw_20years
				}
			}
			1 = {
				modifier = {
					factor = 2
					owner = {
						is_pacifist = yes
					}
				}
				planet_event = { id = pw_wonder.1711 }
				set_timed_planet_flag = {
					flag = pw_TLN_event
					days = @pw_20years
				}
			}
			1 = {
				planet_event = { id = pw_wonder.1712 }
				set_timed_planet_flag = {
					flag = pw_TLN_event
					days = @pw_20years
				}
			}
		}
	}
}

#The right to be lazy
planet_event = {
	id = pw_wonder.1707
	title = pw_wonder.1707.name
	desc = pw_wonder.1707.desc
	picture = GFX_evt_city_planet
	show_sound = event_announcement
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_TLN_lazy }}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_TLN_lazy
				days = @pw_20years
			}
		}
	}

	#Modifier
	option = {
		name = pw_wonder.1707.a
		add_modifier = {
			modifier = pw_mod_TLN_productive_leisure
			days = @pw_10years
			clear_on_owner_change = yes
		}
	}

	#Influence
	option = {
		name = pw_wonder.1707.b
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
	}
}

#Path to progress
planet_event = {
	id = pw_wonder.1708
	title = pw_wonder.1708.name
	desc = pw_wonder.1708.desc
	picture = GFX_evt_city_planet
	show_sound = event_announcement
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_TLN_progress }}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_TLN_progress
				days = @pw_20years
			}
		}
	}

	#Modifier
	option = {
		name = pw_wonder.1708.a
		add_modifier = {
			modifier = pw_mod_TLN_path_to_progress
			days = @pw_10years
			clear_on_owner_change = yes
		}
	}

	#Unity
	option = {
		name = pw_wonder.1708.b
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
			}
		}
	}
}

#Mutual Aid
planet_event = {
	id = pw_wonder.1709
	title = pw_wonder.1709.name
	desc = pw_wonder.1709.desc
	picture = GFX_evt_city_planet
	show_sound = event_announcement
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_TLN_aid }}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_TLN_aid
				days = @pw_20years
			}
		}
	}

	#Modifier
	option = {
		name = pw_wonder.1709.a
		add_modifier = {
			modifier = pw_mod_TLN_mutual_aid
			days = @pw_10years
			clear_on_owner_change = yes
		}
	}
}

#Inspired Militia
planet_event = {
	id = pw_wonder.1710
	title = pw_wonder.1710.name
	desc = pw_wonder.1710.desc
	picture = GFX_evt_city_planet
	show_sound = event_announcement
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_TLN_militia }}
		OR = {
			has_deposit = pw_d_infrastructure_crisis_responders
			has_deposit = pw_d_infrastructure_emergency_services
			has_deposit = pw_d_infrastructure_habitation_support
		}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_TLN_militia
				days = @pw_20years
			}
		}
	}

	#Modifier
	option = {
		name = pw_wonder.1710.a
		add_modifier = {
			modifier = pw_mod_TLN_inspired_militia
			days = @pw_10years
			clear_on_owner_change = yes
		}
	}

	#Influence
	option = {
		name = pw_wonder.1710.b
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
	}
}

#Inspired peace
planet_event = {
	id = pw_wonder.1711
	title = pw_wonder.1711.name
	desc = pw_wonder.1711.desc
	picture = GFX_evt_city_planet
	show_sound = event_announcement
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_TLN_peace }}
		OR = {
			has_deposit = pw_d_infrastructure_public_agoras
			has_deposit = pw_d_infrastructure_distributed_education
			has_deposit = pw_d_infrastructure_local_administration
			has_deposit = pw_d_infrastructure_arts_installations
		}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_TLN_peace
				days = @pw_20years
			}
		}
	}

	#Modifier
	option = {
		name = pw_wonder.1711.a
		add_modifier = {
			modifier = pw_mod_TLN_inspiring_peace
			days = @pw_10years
			clear_on_owner_change = yes
		}
	}
}

#Surprising Inventions
planet_event = {
	id = pw_wonder.1712
	title = pw_wonder.1712.name
	desc = pw_wonder.1712.desc
	picture = GFX_evt_city_planet
	show_sound = event_announcement
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_TLN_inventions }}
		OR = {
			has_deposit = pw_d_infrastructure_public_agoras
			has_deposit = pw_d_infrastructure_distributed_education
			has_deposit = pw_d_infrastructure_inventions_fair
			has_deposit = pw_d_infrastructure_public_markets
			has_deposit = pw_d_infrastructure_arts_installations
			has_deposit = pw_d_infrastructure_cooperatives_manufacturers
		}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_TLN_inventions
				days = @pw_20years
			}
		}
	}

	#Modifier
	option = {
		name = pw_wonder.1712.a
		owner = {
			add_random_research_option = {
				add_progress = 0.075
				tier < 4
				fail_effects = {
					add_monthly_resource_mult = {
						resource = society_research
						value = @tier2researchreward
						min = @tier2researchmin
						max = @tier2researchmax
					}
					add_monthly_resource_mult = {
						resource = physics_research
						value = @tier2researchreward
						min = @tier2researchmin
						max = @tier2researchmax
					}
					add_monthly_resource_mult = {
						resource = engineering_research
						value = @tier2researchreward
						min = @tier2researchmin
						max = @tier2researchmax
					}
				}
			}
		}
	}
}

#Street Carnival
planet_event = {
	id = pw_wonder.1713
	title = pw_wonder.1713.name
	desc = pw_wonder.1713.desc
	picture = GFX_evt_city_planet
	show_sound = event_celebration
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		NOT = { has_planet_flag = pw_TLN_event }
	}

	immediate = {
		set_timed_planet_flag = {
			flag = pw_TLN_event
			days = @pw_10years
		}
	}

	#Modifier
	option = {
		name = pw_wonder.1713.a
		add_modifier = {
			modifier = pw_mod_TLN_street_carnival
			days = @pw_2years
			clear_on_owner_change = yes
		}
	}
}

#Check if TLS was destroyed/replaced (recursive)
planet_event = {
	id = pw_wonder.1720
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOR = { #Does not has the building:
					has_active_building = pw_building_transplanetary_logistics_network
					has_active_building = pw_building_transhabitat_logistics_network
				}
				OR = { #But has one of the deposits:
					has_deposit = pw_d_infrastructure_food_distribution
					has_deposit = pw_d_infrastructure_energy_distribution
					has_deposit = pw_d_infrastructure_goods_distribution
					has_deposit = pw_d_infrastructure_luxury_distribution
					has_deposit = pw_d_infrastructure_medical_posts
					has_deposit = pw_d_infrastructure_habitation_support
					has_deposit = pw_d_infrastructure_emergency_services
					has_deposit = pw_d_infrastructure_crisis_responders
					has_deposit = pw_d_infrastructure_public_agoras
					has_deposit = pw_d_infrastructure_local_administration
					has_deposit = pw_d_infrastructure_distributed_education
					has_deposit = pw_d_infrastructure_arts_installations
					has_deposit = pw_d_infrastructure_public_markets
					has_deposit = pw_d_infrastructure_inventions_fair
					has_deposit = pw_d_infrastructure_cooperatives_manufacturers
					has_deposit = pw_d_infrastructure_industrial_unions
				}
			}
			planet_event = { id = pw_wonder.1703 }
		}
		else = {
			planet_event = { id = pw_wonder.1720 days = @pw_halfYear }
		}
	}
}

# Forbidden City -> id 1800

#On Forbidden City built
planet_event = {
	id = pw_wonder.1800
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_forbidden_city_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1801 } #Regular first time
		planet_event = { id = pw_wonder.1820 days = @pw_halfYear } #Recursive Check
	}
}

#On first time Forbidden City is built (Regular Empire)
planet_event = {
	id = pw_wonder.1801
	title = pw_wonder.1801.name
	desc = pw_wonder.1801.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_forbidden_city_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_forbidden_city_built }
	}

	option = {
		name = pw_wonder.1801.a
		add_modifier = {
			modifier = pw_mod_forbidden_city_recently_build
			days = @pw_2years
		}
	}
}

#When the FC is destroyed/replaces -> demolish Infrastructure
planet_event = {
	id = pw_wonder.1802
	title = pw_wonder.1802.name
	desc = pw_wonder.1802.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = { has_active_building = pw_building_forbidden_city } #Does not has the building
		OR = { #But has one of the deposits:
			has_deposit = pw_d_infrastructure_planetary_command
			has_deposit = pw_d_infrastructure_governor_mansion
			has_deposit = pw_d_infrastructure_seat_of_power
			has_deposit = pw_d_infrastructure_throne_room
			has_deposit = pw_d_infrastructure_imperial_holy_throne
			has_deposit = pw_d_infrastructure_luxury_retreat
			has_deposit = pw_d_infrastructure_wardens_directorate
			has_deposit = pw_d_infrastructure_overseers_ring
			has_deposit = pw_d_infrastructure_palatial_physicians
			has_deposit = pw_d_infrastructure_city_defenders
			has_deposit = pw_d_infrastructure_crisis_bunker
			has_deposit = pw_d_infrastructure_personal_guardian
			has_deposit = pw_d_infrastructure_central_of_disinformation
			has_deposit = pw_d_infrastructure_center_of_justice
			has_deposit = pw_d_infrastructure_central_treasury
			has_deposit = pw_d_infrastructure_galactic_bureau
			has_deposit = pw_d_infrastructure_ambassador_chambers
			has_deposit = pw_d_infrastructure_internal_affairs
			has_deposit = pw_d_infrastructure_intellectual_circles
			has_deposit = pw_d_infrastructure_holy_tribunal
			has_deposit = pw_d_infrastructure_ballroom
			has_deposit = pw_d_infrastructure_war_room
		}
	}

	option = {
		name = UNFORTUNATE
		if = {
			limit = { has_deposit = pw_d_infrastructure_planetary_command }
			remove_deposit = pw_d_infrastructure_planetary_command
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_governor_mansion }
			remove_deposit = pw_d_infrastructure_governor_mansion
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_seat_of_power }
			remove_deposit = pw_d_infrastructure_seat_of_power
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_throne_room }
			remove_deposit = pw_d_infrastructure_throne_room
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_imperial_holy_throne }
			remove_deposit = pw_d_infrastructure_imperial_holy_throne
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_luxury_retreat }
			remove_deposit = pw_d_infrastructure_luxury_retreat
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_wardens_directorate }
			remove_deposit = pw_d_infrastructure_wardens_directorate
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_overseers_ring }
			remove_deposit = pw_d_infrastructure_overseers_ring
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_palatial_physicians }
			remove_deposit = pw_d_infrastructure_palatial_physicians
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_city_defenders }
			remove_deposit = pw_d_infrastructure_city_defenders
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_crisis_bunker }
			remove_deposit = pw_d_infrastructure_crisis_bunker
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_personal_guardian }
			remove_deposit = pw_d_infrastructure_personal_guardian
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_central_of_disinformation }
			remove_deposit = pw_d_infrastructure_central_of_disinformation
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_center_of_justice }
			remove_deposit = pw_d_infrastructure_center_of_justice
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_central_treasury }
			remove_deposit = pw_d_infrastructure_central_treasury
		}
		else_if = {
			limit = { has_deposit = pw_d_infrastructure_galactic_bureau }
			remove_deposit = pw_d_infrastructure_galactic_bureau
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_ambassador_chambers }
			remove_deposit = pw_d_infrastructure_ambassador_chambers
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_internal_affairs }
			remove_deposit = pw_d_infrastructure_internal_affairs
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_intellectual_circles }
			remove_deposit = pw_d_infrastructure_intellectual_circles
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_holy_tribunal }
			remove_deposit = pw_d_infrastructure_holy_tribunal
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_ballroom }
			remove_deposit = pw_d_infrastructure_ballroom
		}
		if = {
			limit = { has_deposit = pw_d_infrastructure_war_room }
			remove_deposit = pw_d_infrastructure_war_room
		}
	}
}

#When the Seat of Power is completed, destroy the old one
planet_event = {
	id = pw_wonder.1803
	title = pw_wonder.1803.name
	desc = pw_wonder.1803.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_factions
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
		is_capital = yes
	}

	trigger = {
		has_active_building = pw_building_forbidden_city
		has_deposit = pw_d_infrastructure_seat_of_power
		exists = owner
		owner = {
			any_owned_planet = {
				OR = {
					AND = { #Seat of Power is somewhere else
						NOT = { is_planet = THIS }
						has_deposit = pw_d_infrastructure_seat_of_power
					}
					OR = {
						#Throne Room is somewhere.
						has_deposit = pw_d_infrastructure_throne_room
						has_deposit = pw_d_infrastructure_imperial_holy_throne
					}
				}
			}
		}
	}

	option = {
		name = pw_wonder.1803.a
		owner = {
			every_owned_planet = {
				limit = {
					NOT = { is_planet = ROOT }
					has_deposit = pw_d_infrastructure_seat_of_power
				}
				remove_deposit = pw_d_infrastructure_seat_of_power
				if = {
					limit = { is_sector_capital = yes }
					add_deposit = pw_d_infrastructure_governor_mansion
				}
				else = {
					add_deposit = pw_d_infrastructure_planetary_command
				}
			}
			every_owned_planet = {
				limit = {
					OR = {
						has_deposit = pw_d_infrastructure_throne_room
						has_deposit = pw_d_infrastructure_imperial_holy_throne
					}
				}
				if = {
					limit = { has_deposit = pw_d_infrastructure_throne_room }
					remove_deposit = pw_d_infrastructure_throne_room
				}
				else = {
					remove_deposit = pw_d_infrastructure_imperial_holy_throne
				}
				if = {
					limit = { is_sector_capital = yes }
					add_deposit = pw_d_infrastructure_governor_mansion
				}
				else = {
					add_deposit = pw_d_infrastructure_planetary_command
				}
			}
		}
	}
}

#When the Throne Room is completed, destroy the old one
planet_event = {
	id = pw_wonder.1804
	title = pw_wonder.1804.name
	desc = pw_wonder.1804.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_factions
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
		is_capital = yes
	}

	trigger = {
		has_active_building = pw_building_forbidden_city
		OR = {
			has_deposit = pw_d_infrastructure_throne_room
			has_deposit = pw_d_infrastructure_imperial_holy_throne
		}
		exists = owner
		owner = {
			any_owned_planet = {
				OR = {
					AND = { #Seat of Power is somewhere else
						NOT = { is_planet = THIS }
						OR = {
							has_deposit = pw_d_infrastructure_throne_room
							has_deposit = pw_d_infrastructure_imperial_holy_throne
						}
					}
					#Throne Room is somewhere.
					has_deposit = pw_d_infrastructure_seat_of_power
				}
			}
		}
	}

	option = {
		name = pw_wonder.1804.a
		owner = {
			every_owned_planet = {
				limit = {
					NOT = { is_planet = ROOT }
					OR = {
						has_deposit = pw_d_infrastructure_throne_room
						has_deposit = pw_d_infrastructure_imperial_holy_throne
					}
				}
				if = {
					limit = { has_deposit = pw_d_infrastructure_throne_room }
					remove_deposit = pw_d_infrastructure_throne_room
				}
				else = {
					remove_deposit = pw_d_infrastructure_imperial_holy_throne
				}
				if = {
					limit = { is_sector_capital = yes }
					add_deposit = pw_d_infrastructure_governor_mansion
				}
				else = {
					add_deposit = pw_d_infrastructure_planetary_command
				}
			}
			every_owned_planet = {
				limit = {
					has_deposit = pw_d_infrastructure_seat_of_power
				}
				remove_deposit = pw_d_infrastructure_seat_of_power
				if = {
					limit = { is_sector_capital = yes }
					add_deposit = pw_d_infrastructure_governor_mansion
				}
				else = {
					add_deposit = pw_d_infrastructure_planetary_command
				}
			}
		}
	}
}

#When any Infrastructure development is completed:
planet_event = {
	id = pw_wonder.1805
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_fc_infrastructure_completed
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
		planet_event = {
			id = pw_wonder.1806
			days = 30
			random = 30
		}
	}
}

#After Development random events:
planet_event = {
	id = pw_wonder.1806
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
		is_ai = no
		is_occupied_flag = no
	}

	trigger = {
		NOT = { has_planet_flag = pw_FC_event }
	}

	immediate = {

		random_list = {
			20 = {} #Mostly nothing happens
			1 = {
				planet_event = { id = pw_wonder.1807 }
				set_timed_planet_flag = {
					flag = pw_FC_event
					days = @pw_20years
				}
			}
			1 =  {
				planet_event = { id = pw_wonder.1808 }
				set_timed_planet_flag = {
					flag = pw_FC_event
					days = @pw_20years
				}
			}
			1 = {
				planet_event = { id = pw_wonder.1809 }
				set_timed_planet_flag = {
					flag = pw_FC_event
					days = @pw_20years
				}
			}
			1 = {
				planet_event = { id = pw_wonder.1810 }
				set_timed_planet_flag = {
					flag = pw_FC_event
					days = @pw_20years
				}
			}
		}
	}
}

#Hunger Protests
planet_event = {
	id = pw_wonder.1807
	title = pw_wonder.1807.name
	desc = pw_wonder.1807.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_public_unrest
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_FC_hunger_protest }}
		owner = { country_uses_food = yes }
		OR = {
			planet_stability < 60
			planet_crime > 10
		}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_FC_hunger_protest
				days = @pw_20years
			}
		}
	}

	#Let them eat
	option = {
		name = pw_wonder.1807.a
		add_modifier = {
			modifier = pw_mod_FC_food_for_the_people
			days = @pw_10years
			clear_on_owner_change = yes
		}
	}

	#Deliver food
	option = {
		name = pw_wonder.1807.b
		allow = {
			owner = {
				resource_stockpile_compare = { resource = food value >= 1500 }
			}
		}
		owner = {
			add_resource = {
				food = -1500
			}
			add_monthly_resource_mult = {
				resource = unity
				value = @tier3unityreward
				min = @tier3unitymin
				max = @tier3unitymax
			}
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
	}

	#Brutally Repress
	option = {
		name = pw_wonder.1807.c
		add_modifier = {
			modifier = pw_mod_FC_repression
			days = @pw_5years
			clear_on_owner_change = yes
		}
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
	}
}

#Their orderly Place
planet_event = {
	id = pw_wonder.1808
	title = pw_wonder.1808.name
	desc = pw_wonder.1808.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_public_unrest
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_FC_work_protest }}
		owner = { country_uses_consumer_goods = yes }
		OR = {
			planet_stability < 60
			planet_crime > 10
		}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_FC_work_protest
				days = @pw_20years
			}
		}
	}

	#Cede to demands
	option = {
		name = pw_wonder.1808.a
		add_modifier = {
			modifier = pw_mod_FC_goods_for_the_people
			days = @pw_10years
			clear_on_owner_change = yes
		}
	}

	#Invest in propaganda
	option = {
		name = pw_wonder.1808.b
		allow = {
			owner = {
				resource_stockpile_compare = { resource = energy value >= 1000 }
				resource_stockpile_compare = { resource = influence value >= 25 }
			}
		}
		owner = {
			add_resource = {
				energy = -1000
				influence = 25
			}
		}
		add_modifier = {
			modifier = pw_mod_FC_orderly_place
			days = @pw_10years
			clear_on_owner_change = yes
		}
	}

	#Brutally Repress
	option = {
		name = pw_wonder.1808.c
		add_modifier = {
			modifier = pw_mod_FC_repression
			days = @pw_5years
			clear_on_owner_change = yes
		}
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
	}
}

#Humble Donations
planet_event = {
	id = pw_wonder.1809
	title = pw_wonder.1809.name
	desc = pw_wonder.1809.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_celebration
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_FC_donation }}
		planet_stability > 60
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_FC_donation
				days = @pw_20years
			}
		}
	}

	#Take Belongings
	option = {
		name = pw_wonder.1809.a
		owner = {
			add_resource = {
				consumer_goods = 250
			}
		}
	}

	#Accept Donations
	option = {
		name = pw_wonder.1809.b
		owner = {
			add_resource = {
				energy = 750
			}
		}
	}

	#Take both
	option = {
		name = pw_wonder.1809.c
		allow = {
			owner = {
				resource_stockpile_compare = { resource = influence value >= 50 }
			}
		}
		owner = {
			add_resource = {
				energy = 750
				consumer_goods = 250
				influence = -50
			}
		}
	}


	#Politely Refuse
	option = {
		name = pw_wonder.1809.d
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier3unityreward
				min = @tier3unitymin
				max = @tier3unitymax
			}
		}
	}
}

#Ruler Visit
planet_event = {
	id = pw_wonder.1810
	title = pw_wonder.1810.name
	desc = pw_wonder.1810.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_celebration
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_capital = no
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		exists = owner
		owner = { NOT = { has_country_flag = pw_FC_visit }}
		owner = { is_at_war = no }
		planet_stability > 60
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_FC_visit
				days = @pw_20years
			}
		}
	}

	#Immerse in local culture
	option = {
		name = pw_wonder.1810.a
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier3unityreward
				min = @tier3unitymin
				max = @tier3unitymax
			}
		}
	}

	#Share the Banquet with the people
	option = {
		name = pw_wonder.1810.b
		trigger = {
			ruler = {
				NOT = { has_ruler_trait = trait_ruler_champion_of_the_people }
			}
		}
		allow = {
			owner = {
				resource_stockpile_compare = { resource = food value > 1500 }
			}
		}
		owner = {
			add_resource = {
				food = -1500
			}
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
		ruler = {
			add_trait = trait_ruler_champion_of_the_people
		}
	}

	#Make a Speech
	option = {
		name = pw_wonder.1810.c
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier2influencereward
				min = @tier2influencemin
				max = @tier2influencemax
			}
		}
		ruler = {
			add_experience = 300
		}
	}
}

#Masquerade
planet_event = {
	id = pw_wonder.1811
	title = pw_wonder.1811.name
	desc = pw_wonder.1811.desc
	picture = GFX_evt_medieval_alien_civilization
	show_sound = event_celebration
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		is_occupied_flag = no
		has_ground_combat = no
	}

	trigger = {
		NOT = { has_planet_flag = pw_FC_event }
	}

	immediate = {
		set_timed_planet_flag = {
			flag = pw_FC_event
			days = @pw_10years
		}
	}

	#Modifier
	option = {
		name = pw_wonder.1811.a
		add_modifier = {
			modifier = pw_mod_FC_masquerade
			days = @pw_2years
			clear_on_owner_change = yes
		}
	}
}

#Check if FC was destroyed/replaced (recursive)
planet_event = {
	id = pw_wonder.1820
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_active_building = pw_building_forbidden_city } #Does not has the building
				OR = { #But has one of the deposits:
					has_deposit = pw_d_infrastructure_planetary_command
					has_deposit = pw_d_infrastructure_governor_mansion
					has_deposit = pw_d_infrastructure_seat_of_power
					has_deposit = pw_d_infrastructure_throne_room
					has_deposit = pw_d_infrastructure_imperial_holy_throne
					has_deposit = pw_d_infrastructure_luxury_retreat
					has_deposit = pw_d_infrastructure_wardens_directorate
					has_deposit = pw_d_infrastructure_overseers_ring
					has_deposit = pw_d_infrastructure_palatial_physicians
					has_deposit = pw_d_infrastructure_city_defenders
					has_deposit = pw_d_infrastructure_crisis_bunker
					has_deposit = pw_d_infrastructure_personal_guardian
					has_deposit = pw_d_infrastructure_central_of_disinformation
					has_deposit = pw_d_infrastructure_center_of_justice
					has_deposit = pw_d_infrastructure_central_treasury
					has_deposit = pw_d_infrastructure_galactic_bureau
					has_deposit = pw_d_infrastructure_ambassador_chambers
					has_deposit = pw_d_infrastructure_internal_affairs
					has_deposit = pw_d_infrastructure_intellectual_circles
					has_deposit = pw_d_infrastructure_holy_tribunal
					has_deposit = pw_d_infrastructure_ballroom
					has_deposit = pw_d_infrastructure_war_room
				}
			}
			planet_event = { id = pw_wonder.1802 }
		}
		else_if = {
			limit = { has_active_building = pw_building_forbidden_city }
			planet_event = { id = pw_wonder.1820 days = @pw_halfYear }
		}
	}
}


# Festival Plaza -> id 1900

#On Festival Plaza built
planet_event = {
	id = pw_wonder.1900
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_festival_plaza_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.1901 } #Regular first time
		planet_event = { id = pw_wonder.1905 days = @pw_halfYear } #Recursive Check
		planet_event = { id = pw_wonder.1930 days = @pw_2years } #Black Letters Days
	}
}

#On first time Festival Plaza is built (Regular Empire)
planet_event = {
	id = pw_wonder.1901
	title = pw_wonder.1901.name
	desc = pw_wonder.1901.desc
	picture = GFX_evt_galactic_market
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_festival_plaza_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_festival_plaza_built }
	}

	option = {
		name = pw_wonder.1901.a
		add_modifier = {
			modifier = pw_mod_festival_plaza_recently_build
			days = @pw_2years
		}
	}

	option = {
		name = pw_wonder.1901.b
		add_modifier = {
			modifier = pw_mod_festival_plaza_recently_build
			days = @pw_1year
		}
		owner = {
			add_resource = {
				influence = 25
			}
		}
	}
}

#Check if FP was destroyed/replaced (recursive)
planet_event = {
	id = pw_wonder.1905
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_active_building = pw_building_festival_plaza } #Does not has the building
				OR = { #But has one of the modifiers:
					has_modifier = pw_mod_FP_festivities_of_plenitude
					has_modifier = pw_mod_FP_fertility_bacchanal
					has_modifier = pw_mod_FP_cultivate_peace
					has_modifier = pw_mod_FP_harvest_festival
					has_modifier = pw_mod_FP_commemorate_perfection
				}
			}
			planet_event = { id = pw_wonder.1906 }
		}
		else_if = {
			limit = { has_active_building = pw_building_festival_plaza }
			planet_event = { id = pw_wonder.1905 days = @pw_halfYear }
		}
	}
}

#When the FP is destroyed/replaces -> remove modifiers
planet_event = {
	id = pw_wonder.1906
	title = pw_wonder.1906.name
	desc = pw_wonder.1906.desc
	picture = GFX_evt_galactic_market
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = { has_active_building = pw_building_festival_plaza } #Does not has the building
		OR = { #But has one of the modifiers:
			has_modifier = pw_mod_FP_festivities_of_plenitude
			has_modifier = pw_mod_FP_fertility_bacchanal
			has_modifier = pw_mod_FP_cultivate_peace
			has_modifier = pw_mod_FP_harvest_festival
			has_modifier = pw_mod_FP_commemorate_perfection
		}
	}

	option = {
		name = UNFORTUNATE
		if = {
			limit = { has_modifier = pw_mod_FP_festivities_of_plenitude }
			remove_modifier = pw_mod_FP_festivities_of_plenitude
		}
		else_if = {
			limit = { has_modifier = pw_mod_FP_fertility_bacchanal }
			remove_modifier = pw_mod_FP_fertility_bacchanal
		}
		else_if = {
			limit = { has_modifier = pw_mod_FP_cultivate_peace }
			remove_modifier = pw_mod_FP_cultivate_peace
		}
		else_if = {
			limit = { has_modifier = pw_mod_FP_harvest_festival }
			remove_modifier = pw_mod_FP_harvest_festival
		}
		else_if = {
			limit = { has_modifier = pw_mod_FP_commemorate_perfection }
			remove_modifier = pw_mod_FP_commemorate_perfection
		}
		owner = {
			pw_determine_peace_stability_modifier = yes
		}
	}
}

#When this country enters a war
country_event = {
	id = pw_wonder.1910
	title = pw_wonder.1910.name
	desc = pw_wonder.1910.desc
	picture = GFX_evt_galactic_market
	is_triggered_only = yes

	trigger = {
		OR = {
			has_modifier = pw_mod_FP_peace_stability_1
			has_modifier = pw_mod_FP_peace_stability_2
			has_modifier = pw_mod_FP_peace_stability_3
			has_modifier = pw_mod_FP_peace_stability_4
			has_modifier = pw_mod_FP_peace_stability_5
			has_modifier = pw_mod_FP_peace_stability_6
			has_modifier = pw_mod_FP_peace_stability_7
			has_modifier = pw_mod_FP_peace_stability_8
			has_modifier = pw_mod_FP_peace_stability_9
			has_modifier = pw_mod_FP_peace_stability_10
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				OR = { #Has one of the modifiers:
					has_modifier = pw_mod_FP_festivities_of_plenitude
					has_modifier = pw_mod_FP_fertility_bacchanal
					has_modifier = pw_mod_FP_cultivate_peace
					has_modifier = pw_mod_FP_harvest_festival
					has_modifier = pw_mod_FP_commemorate_perfection
				}
			}
			#Remove the planetary modifiers:
			planet_event = { id = pw_wonder.1911 }
		}
		#Start recurring peace check:
		country_event = { id = pw_wonder.1915 days = @pw_halfYear }
	}

	option = {
		name = pw_wonder.1910.a
		pw_remove_current_peace_stability_modifier = yes
		hidden_effect = {
			set_country_flag = pw_FP_had_peace_stability_modifier
		}
	}
}

#Remove festivities from planets
planet_event = {
	id = pw_wonder.1911
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = { #But has one of the modifiers:
			has_modifier = pw_mod_FP_festivities_of_plenitude
			has_modifier = pw_mod_FP_fertility_bacchanal
			has_modifier = pw_mod_FP_cultivate_peace
			has_modifier = pw_mod_FP_harvest_festival
			has_modifier = pw_mod_FP_commemorate_perfection
		}
	}

	immediate = {
		if = {
			limit = { has_modifier = pw_mod_FP_festivities_of_plenitude }
			remove_modifier = pw_mod_FP_festivities_of_plenitude
			set_planet_flag = pw_FP_has_festivities_of_plenitude_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_FP_fertility_bacchanal }
			remove_modifier = pw_mod_FP_fertility_bacchanal
			set_planet_flag = pw_FP_has_fertility_bacchanal_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_FP_cultivate_peace }
			remove_modifier = pw_mod_FP_cultivate_peace
			set_planet_flag = pw_FP_has_cultivate_peace_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_FP_harvest_festival }
			remove_modifier = pw_mod_FP_harvest_festival
			set_planet_flag = pw_FP_has_harvest_festival_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_FP_commemorate_perfection }
			remove_modifier = pw_mod_FP_commemorate_perfection
			set_planet_flag = pw_FP_has_commemorate_perfection_mod
		}
	}
}

#Recursive check for when a war ends:
country_event = {
	id = pw_wonder.1915
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_at_war = yes }
			country_event = { id = pw_wonder.1915 days = @pw_halfYear }
		}
		else = {
			country_event = { id = pw_wonder.1921 }
		}
	}
}

#When a war ends (UNUSED!)
event = {
	id = pw_wonder.1920
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_playable_country = {
			limit = {
				OR = {
					has_country_flag = pw_FP_had_peace_stability_modifier
					has_country_flag = pw_festival_plaza_built
				}
				is_at_war = no
			}
			country_event = { id = pw_wonder.1921 }
		}
	}
}

#When this country exists a war (and has the needed flag)
country_event = {
	id = pw_wonder.1921
	title = pw_wonder.1921.name
	desc = pw_wonder.1921.desc
	picture = GFX_evt_galactic_market
	is_triggered_only = yes

	trigger = {
		exists = THIS
		OR = {
			has_country_flag = pw_FP_had_peace_stability_modifier
			has_country_flag = pw_festival_plaza_built
		}
		is_at_war = no
	}

	immediate = {
		every_owned_planet = {
			limit = {
				OR = { #Has one of the flags:
					has_planet_flag = pw_FP_has_festivities_of_plenitude_mod
					has_planet_flag = pw_FP_has_fertility_bacchanal_mod
					has_planet_flag = pw_FP_has_cultivate_peace_mod
					has_planet_flag = pw_FP_has_harvest_festival_mod
					has_planet_flag = pw_FP_has_commemorate_perfection_mod
				}
			}
			#Remove the planetary modifiers:
			planet_event = { id = pw_wonder.1922 }
		}
	}

	option = {
		name = pw_wonder.1921.a
		pw_determine_peace_stability_modifier = yes
		hidden_effect = {
			remove_country_flag = pw_FP_had_peace_stability_modifier
			country_event = { id = pw_wonder.1923 days = 30 }#1 month to reset every modifier to planets
		}
	}
}

#Reset the festivities to the planets
planet_event = {
	id = pw_wonder.1922
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = { #Has one of the flags:
			has_planet_flag = pw_FP_has_festivities_of_plenitude_mod
			has_planet_flag = pw_FP_has_fertility_bacchanal_mod
			has_planet_flag = pw_FP_has_cultivate_peace_mod
			has_planet_flag = pw_FP_has_harvest_festival_mod
			has_planet_flag = pw_FP_has_commemorate_perfection_mod
		}
	}

	immediate = {
		if = {
			limit = { has_planet_flag = pw_FP_has_festivities_of_plenitude_mod }
			remove_planet_flag = pw_FP_has_festivities_of_plenitude_mod
			if = {
				limit = { has_active_building = pw_building_festival_plaza }
				add_modifier = {
					modifier = pw_mod_FP_festivities_of_plenitude
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_FP_has_fertility_bacchanal_mod }
			remove_planet_flag = pw_FP_has_fertility_bacchanal_mod
			if = {
				limit = { has_active_building = pw_building_festival_plaza }
				add_modifier = {
					modifier = pw_mod_FP_fertility_bacchanal
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_FP_has_cultivate_peace_mod }
			remove_planet_flag = pw_FP_has_cultivate_peace_mod
			if = {
				limit = { has_active_building = pw_building_festival_plaza }
				add_modifier = {
					modifier = pw_mod_FP_cultivate_peace
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_FP_has_harvest_festival_mod }
			remove_planet_flag = pw_FP_has_harvest_festival_mod
			if = {
				limit = { has_active_building = pw_building_festival_plaza }
				add_modifier = {
					modifier = pw_mod_FP_harvest_festival
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_FP_has_commemorate_perfection_mod }
			remove_planet_flag = pw_FP_has_commemorate_perfection_mod
			if = {
				limit = { has_active_building = pw_building_festival_plaza }
				add_modifier = {
					modifier = pw_mod_FP_commemorate_perfection
					clear_on_owner_change = yes
				}
			}
		}
	}
}

#Recalculate the country modifier (just to make sure that 1 month after a war all is OK):
country_event = {
	id = pw_wonder.1923
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		pw_determine_peace_stability_modifier = yes
	}
}

#Black Letter Day decision (Peaceful)
planet_event = {
	id = pw_wonder.1930
	title = pw_wonder.1930.name
	desc = pw_wonder.1930.desc
	picture = GFX_evt_signing
	show_sound = event_celebration
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
		is_occupied_flag = no
	}

	trigger = {
		has_active_building = pw_building_festival_plaza
		NOT = {owner = { has_country_flag = pw_festival_plaza_black_letter_day }}
		owner = {
			is_at_war = no
		}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_festival_plaza_black_letter_day
				days = @pw_10years
			}
		}
	}

	#Promote Peace
	option = {
		name = pw_wonder.1930.a
		add_modifier = {
			modifier = pw_mod_FP_black_letters_peace
			clear_on_owner_change = yes
			days = @pw_1year
		}
	}

	#Promote War
	option = {
		name = pw_wonder.1930.b
		add_modifier = {
			modifier = pw_mod_FP_black_letters_war
			clear_on_owner_change = yes
			days = @pw_1year
		}
	}

	#Leave them to it
	option = {
		name = pw_wonder.1930.c
		owner = {
			add_resource = {
				influence = 25
			}
		}
	}
}

# Martial Avenue -> id 2000

#On Martial Avenue built
planet_event = {
	id = pw_wonder.2000
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_martial_avenue_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.2001 } #Regular first time
		planet_event = { id = pw_wonder.2005 days = @pw_halfYear } #Recursive Check
		planet_event = { id = pw_wonder.2030 days = @pw_2years } #Black Letters Days
	}
}

#On first time Martial Avenue is built (Regular Empire)
planet_event = {
	id = pw_wonder.2001
	title = pw_wonder.2001.name
	desc = pw_wonder.2001.desc
	picture = GFX_evt_victorious_army
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_martial_avenue_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_martial_avenue_built }
	}

	option = {
		name = pw_wonder.2001.a
		add_modifier = {
			modifier = pw_mod_martial_avenue_recently_build
			days = @pw_2years
		}
	}

	option = {
		name = pw_wonder.2001.b
		add_modifier = {
			modifier = pw_mod_martial_avenue_recently_build
			days = @pw_1year
		}
		owner = {
			add_resource = {
				influence = 25
			}
		}
	}
}

#First time added war drive with negative modifier
country_event = {
	id = pw_wonder.2002
	title = pw_wonder.2002.name
	desc = pw_wonder.2002.desc
	picture = GFX_evt_victorious_army
	show_sound = event_public_unrest
	is_triggered_only = yes

	trigger = {
		NOT = {has_country_flag = pw_martial_avenue_malus_mod_alert }
	}

	immediate = {
		set_country_flag = pw_martial_avenue_malus_mod_alert
	}

	option = {
		name = pw_wonder.2002.a
	}

	option = {
		name = pw_wonder.2002.b
	}
}

#Check if MA was destroyed/replaced (recursive)
planet_event = {
	id = pw_wonder.2005
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_active_building = pw_building_martial_avenue } #Does not has the building
				OR = { #But has one of the modifiers:
					has_modifier =pw_mod_MA_military_parade
					has_modifier =pw_mod_MA_do_your_own_part
					has_modifier =pw_mod_MA_enemies_at_the_gate
					has_modifier =pw_mod_MA_flight_of_the_corvettes
					has_modifier =pw_mod_MA_national_march
					has_modifier =pw_mod_MA_combat_demonstrations
					has_modifier =pw_mod_MA_merchants_of_war
					has_modifier =pw_mod_MA_march_of_the_dead
				}
			}
			planet_event = { id = pw_wonder.2006 }
		}
		else_if = {
			limit = { has_active_building = pw_building_martial_avenue }
			planet_event = { id = pw_wonder.2005 days = @pw_halfYear }
		}
	}
}

#When the MA is destroyed/replaces -> remove modifiers
planet_event = {
	id = pw_wonder.2006
	title = pw_wonder.2006.name
	desc = pw_wonder.2006.desc
	picture = GFX_evt_victorious_army
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = { has_active_building = pw_building_martial_avenue } #Does not has the building
		OR = { #But has one of the modifiers:
			has_modifier =pw_mod_MA_military_parade
			has_modifier =pw_mod_MA_do_your_own_part
			has_modifier =pw_mod_MA_enemies_at_the_gate
			has_modifier =pw_mod_MA_flight_of_the_corvettes
			has_modifier =pw_mod_MA_national_march
			has_modifier =pw_mod_MA_combat_demonstrations
			has_modifier =pw_mod_MA_merchants_of_war
			has_modifier =pw_mod_MA_march_of_the_dead
		}
	}

	option = {
		name = UNFORTUNATE
		if = {
			limit = { has_modifier =pw_mod_MA_military_parade }
			remove_modifier = pw_mod_MA_military_parade
		}
		else_if = {
			limit = { has_modifier =pw_mod_MA_do_your_own_part }
			remove_modifier = pw_mod_MA_do_your_own_part
		}
		else_if = {
			limit = { has_modifier =pw_mod_MA_enemies_at_the_gate }
			remove_modifier = pw_mod_MA_enemies_at_the_gate
		}
		else_if = {
			limit = { has_modifier =pw_mod_MA_flight_of_the_corvettes }
			remove_modifier = pw_mod_MA_flight_of_the_corvettes
		}
		else_if = {
			limit = { has_modifier =pw_mod_MA_national_march }
			remove_modifier = pw_mod_MA_national_march
		}
		else_if = {
			limit = { has_modifier =pw_mod_MA_combat_demonstrations }
			remove_modifier = pw_mod_MA_combat_demonstrations
		}
		else_if = {
			limit = { has_modifier =pw_mod_MA_merchants_of_war }
			remove_modifier = pw_mod_MA_merchants_of_war
		}
		else_if = {
			limit = { has_modifier =pw_mod_MA_march_of_the_dead }
			remove_modifier = pw_mod_MA_march_of_the_dead
		}
		owner = {
			pw_determine_war_drive_modifier = yes
		}
	}
}


#When this country enters a war
country_event = {
	id = pw_wonder.2010
	title = pw_wonder.2010.name
	desc = pw_wonder.2010.desc
	picture = GFX_evt_fleet_from_surface
	is_triggered_only = yes

	trigger = {
		OR = {
			has_modifier = pw_mod_MA_war_drive_1
			has_modifier = pw_mod_MA_war_drive_2
			has_modifier = pw_mod_MA_war_drive_3
			has_modifier = pw_mod_MA_war_drive_4
			has_modifier = pw_mod_MA_war_drive_5
			has_modifier = pw_mod_MA_war_drive_6
			has_modifier = pw_mod_MA_war_drive_7
			has_modifier = pw_mod_MA_war_drive_8
			has_modifier = pw_mod_MA_war_drive_9
			has_modifier = pw_mod_MA_war_drive_10
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				OR = { #Has one of the modifiers:
					has_modifier = pw_mod_MA_military_parade
					has_modifier = pw_mod_MA_flight_of_the_corvettes
					has_modifier = pw_mod_MA_national_march
					has_modifier = pw_mod_MA_combat_demonstrations
					has_modifier = pw_mod_MA_merchants_of_war
					has_modifier = pw_mod_MA_march_of_the_dead
				}
			}
			#Remove the planetary modifiers:
			planet_event = { id = pw_wonder.2011 }
		}
		#Start recurring peace check:
		country_event = { id = pw_wonder.2015 days = @pw_halfYear }
	}

	option = {
		name = pw_wonder.2010.a
		custom_tooltip = pw_wonder.2010.a.tooltip
		hidden_effect = {
			pw_determine_war_drive_modifier = yes
		}
	}
}

#Remove parades from planets
planet_event = {
	id = pw_wonder.2011
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = { #But has one of the modifiers:
			has_modifier = pw_mod_MA_military_parade
			has_modifier = pw_mod_MA_flight_of_the_corvettes
			has_modifier = pw_mod_MA_national_march
			has_modifier = pw_mod_MA_combat_demonstrations
			has_modifier = pw_mod_MA_merchants_of_war
			has_modifier = pw_mod_MA_march_of_the_dead
		}
	}

	immediate = {
		#Remove previous modifier:
		if = {
			limit = { has_modifier = pw_mod_MA_military_parade }
			remove_modifier = pw_mod_MA_military_parade
			set_planet_flag = pw_MA_has_military_parade_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_MA_flight_of_the_corvettes }
			remove_modifier = pw_mod_MA_flight_of_the_corvettes
			set_planet_flag = pw_MA_has_flight_of_the_corvettes_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_MA_national_march }
			remove_modifier = pw_mod_MA_national_march
			set_planet_flag = pw_MA_has_national_march_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_MA_combat_demonstrations }
			remove_modifier = pw_mod_MA_combat_demonstrations
			set_planet_flag = pw_MA_has_combat_demonstrations_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_MA_merchants_of_war }
			remove_modifier = pw_mod_MA_merchants_of_war
			set_planet_flag = pw_MA_has_merchants_of_war_mod
		}
		else_if = {
			limit = { has_modifier = pw_mod_MA_march_of_the_dead }
			remove_modifier = pw_mod_MA_march_of_the_dead
			set_planet_flag = pw_MA_has_march_of_the_dead_mod
		}
		#Add next modifier:
		if = {
			limit = {
				OR = {
					has_designation = col_fortress
					has_designation = col_habitat_fortress
					is_in_frontier_space = yes
				}
			}
			add_modifier = {
				modifier = pw_mod_MA_enemies_at_the_gate
				clear_on_owner_change = yes
			}
		}
		else ={
			add_modifier = {
				modifier = pw_mod_MA_do_your_own_part
				clear_on_owner_change = yes
			}
		}
	}
}

#Recursive check for when a war ends:
country_event = {
	id = pw_wonder.2015
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_at_war = yes }
			country_event = { id = pw_wonder.2015 days = @pw_halfYear }
		}
		else = {
			country_event = { id = pw_wonder.2021 }
		}
	}
}

#When a war ends (UNUSED!)
event = {
	id = pw_wonder.2020
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_playable_country = {
			limit = {
				OR = {
					has_modifier = pw_mod_MA_war_lust_1
					has_modifier = pw_mod_MA_war_lust_2
					has_modifier = pw_mod_MA_war_lust_3
					has_modifier = pw_mod_MA_war_lust_4
					has_modifier = pw_mod_MA_war_lust_5
					has_modifier = pw_mod_MA_war_lust_6
					has_modifier = pw_mod_MA_war_lust_7
					has_modifier = pw_mod_MA_war_lust_8
					has_modifier = pw_mod_MA_war_lust_9
					has_modifier = pw_mod_MA_war_lust_10
					has_country_flag = pw_martial_avenue_built
				}
				#Important to check if there is no other war going on
				is_at_war = no
			}
			country_event = { id = pw_wonder.2021 }
		}
	}
}

#When this country exists a war (and has the needed flag)
country_event = {
	id = pw_wonder.2021
	title = pw_wonder.2021.name
	desc = pw_wonder.2021.desc
	picture = GFX_evt_victorious_army
	is_triggered_only = yes

	trigger = {
		OR = {
			has_modifier = pw_mod_MA_war_lust_1
			has_modifier = pw_mod_MA_war_lust_2
			has_modifier = pw_mod_MA_war_lust_3
			has_modifier = pw_mod_MA_war_lust_4
			has_modifier = pw_mod_MA_war_lust_5
			has_modifier = pw_mod_MA_war_lust_6
			has_modifier = pw_mod_MA_war_lust_7
			has_modifier = pw_mod_MA_war_lust_8
			has_modifier = pw_mod_MA_war_lust_9
			has_modifier = pw_mod_MA_war_lust_10
			has_modifier = pw_mod_MA_war_drive_1
			has_modifier = pw_mod_MA_war_drive_2
			has_modifier = pw_mod_MA_war_drive_3
			has_modifier = pw_mod_MA_war_drive_4
			has_modifier = pw_mod_MA_war_drive_5
			has_modifier = pw_mod_MA_war_drive_6
			has_modifier = pw_mod_MA_war_drive_7
			has_modifier = pw_mod_MA_war_drive_8
			has_modifier = pw_mod_MA_war_drive_9
			has_modifier = pw_mod_MA_war_drive_10
			has_country_flag = pw_martial_avenue_built
		}
		#Important to check if there is no other war going on
		is_at_war = no
	}

	immediate = {
		every_owned_planet = {
			limit = {
				OR = { #Has one of the flags:
					has_planet_flag = pw_MA_has_military_parade_mod
					has_planet_flag = pw_MA_has_flight_of_the_corvettes_mod
					has_planet_flag = pw_MA_has_national_march_mod
					has_planet_flag = pw_MA_has_combat_demonstrations_mod
					has_planet_flag = pw_MA_has_merchants_of_war_mod
					has_planet_flag = pw_MA_has_march_of_the_dead_mod
				}
			}
			#Remove the planetary modifiers:
			planet_event = { id = pw_wonder.2022 }
		}
	}

	option = {
		name = pw_wonder.2021.a
		custom_tooltip = pw_wonder.2021.a.tooltip
		hidden_effect = {
			pw_determine_war_drive_modifier = yes
			country_event = { id = pw_wonder.2023 days = 30 }#1 month to reset every modifier to planets
		}
	}
}

#Reset the parades to the planets
planet_event = {
	id = pw_wonder.2022
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = { #Has one of the flags:
			has_planet_flag = pw_MA_has_military_parade_mod
			has_planet_flag = pw_MA_has_flight_of_the_corvettes_mod
			has_planet_flag = pw_MA_has_national_march_mod
			has_planet_flag = pw_MA_has_combat_demonstrations_mod
			has_planet_flag = pw_MA_has_merchants_of_war_mod
			has_planet_flag = pw_MA_has_march_of_the_dead_mod
		}
	}

	immediate = {
		if = {
			limit = { has_modifier = pw_mod_MA_do_your_own_part }
			remove_modifier = pw_mod_MA_do_your_own_part
		}
		else_if = {
			limit = { has_modifier = pw_mod_MA_enemies_at_the_gate }
			remove_modifier = pw_mod_MA_enemies_at_the_gate
		}

		if = {
			limit = { has_planet_flag = pw_MA_has_military_parade_mod }
			remove_planet_flag = pw_MA_has_military_parade_mod
			if = {
				limit = { has_active_building = pw_building_martial_avenue }
				add_modifier = {
					modifier = pw_mod_MA_military_parade
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_MA_has_flight_of_the_corvettes_mod }
			remove_planet_flag = pw_MA_has_flight_of_the_corvettes_mod
			if = {
				limit = { has_active_building = pw_building_martial_avenue }
				add_modifier = {
					modifier = pw_mod_MA_flight_of_the_corvettes
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_MA_has_national_march_mod }
			remove_planet_flag = pw_MA_has_national_march_mod
			if = {
				limit = { has_active_building = pw_building_martial_avenue }
				add_modifier = {
					modifier = pw_mod_MA_national_march
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_MA_has_combat_demonstrations_mod }
			remove_planet_flag = pw_MA_has_combat_demonstrations_mod
			if = {
				limit = { has_active_building = pw_building_martial_avenue }
				add_modifier = {
					modifier = pw_mod_MA_combat_demonstrations
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_MA_has_merchants_of_war_mod }
			remove_planet_flag = pw_MA_has_merchants_of_war_mod
			if = {
				limit = { has_active_building = pw_building_martial_avenue }
				add_modifier = {
					modifier = pw_mod_MA_merchants_of_war
					clear_on_owner_change = yes
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = pw_MA_has_march_of_the_dead_mod }
			remove_planet_flag = pw_MA_has_march_of_the_dead_mod
			if = {
				limit = { has_active_building = pw_building_martial_avenue }
				add_modifier = {
					modifier = pw_mod_MA_march_of_the_dead
					clear_on_owner_change = yes
				}
			}
		}
	}
}

#Recalculate the country modifier (just to make sure that 1 month after a war all is OK):
country_event = {
	id = pw_wonder.2023
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		pw_determine_war_drive_modifier = yes
	}
}


#Black Letter Day decision (Militarist)
planet_event = {
	id = pw_wonder.2030
	title = pw_wonder.2030.name
	desc = pw_wonder.2030.desc
	picture = GFX_evt_signing
	show_sound = event_celebration
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
		is_occupied_flag = no
	}

	trigger = {
		has_active_building = pw_building_martial_avenue
		NOT = {owner = { has_country_flag = pw_martial_avenue_black_letter_day }}
		owner = {
			is_at_war = no
		}
	}

	immediate = {
		owner = {
			set_timed_country_flag = {
				flag = pw_martial_avenue_black_letter_day
				days = @pw_10years
			}
		}
	}

	#Promote Peace
	option = {
		name = pw_wonder.2030.a
		add_modifier = {
			modifier = pw_mod_MA_black_letters_peace
			clear_on_owner_change = yes
			days = @pw_1year
		}
	}

	#Promote War
	option = {
		name = pw_wonder.2030.b
		add_modifier = {
			modifier = pw_mod_MA_black_letters_war
			clear_on_owner_change = yes
			days = @pw_1year
		}
	}

	#Leave them to it
	option = {
		name = pw_wonder.2030.c
		owner = {
			add_resource = {
				influence = 25
			}
		}
	}
}

# Living Spire -> id 2100

#On Living Spire 0 built
planet_event = {
	id = pw_wonder.2100
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_living_spire_0_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.2110 } #Regular first time
	}
}

#On Living Spire 1 built
planet_event = {
	id = pw_wonder.2101
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#This would be triggered every time a building is upgraded.
		last_building_changed = pw_building_living_spire_1
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_living_spire_1_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.2111 } #Regular first time
	}
}

#On Living Spire 2 built
planet_event = {
	id = pw_wonder.2102
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#This would be triggered every time a building is upgraded.
		last_building_changed = pw_building_living_spire_2
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_living_spire_2_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.2112 } #Regular first time
	}
}

#On Living Spire 3 built (final)
planet_event = {
	id = pw_wonder.2103
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#This would be triggered every time a building is upgraded.
		last_building_changed = pw_building_living_spire_3
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_living_spire_3_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		if = {
			limit = {
				exists = owner
				owner = {
					has_country_flag = pw_living_spire_built
				}
			}
			planet_event = { id = pw_wonder.2114 } #Second time onwards
		}
		else = {
			planet_event = { id = pw_wonder.2113 } #Regular first time
		}
		planet_event = { id = pw_wonder.2105 days = @pw_1year } #Recursive check if destroyed
	}
}

#On first time Living Spire 0 is built (Regular Empire)
planet_event = {
	id = pw_wonder.2110
	title = pw_wonder.2110.name
	desc = pw_wonder.2110.desc
	picture = GFX_evt_metropolis
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_living_spire_0_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_living_spire_0_built }
	}

	option = {
		name = pw_wonder.2110.a
		add_modifier = {
			modifier = pw_mod_living_spire_recently_build
			days = @pw_2years
		}
	}
}

#On first time Living Spire 1 is built (Regular Empire)
planet_event = {
	id = pw_wonder.2111
	title = pw_wonder.2111.name
	desc = pw_wonder.2111.desc
	picture = GFX_evt_metropolis
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_living_spire_1_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_living_spire_1_built }
	}

	option = {
		name = pw_wonder.2111.a
	}
}

#On first time Living Spire 2 is built (Regular Empire)
planet_event = {
	id = pw_wonder.2112
	title = pw_wonder.2112.name
	desc = pw_wonder.2112.desc
	picture = GFX_evt_metropolis
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_living_spire_2_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_living_spire_2_built }
	}

	option = {
		name = pw_wonder.2112.a
	}
}

#On first time Living Spire 3 is built (Regular Empire)
planet_event = {
	id = pw_wonder.2113
	title = pw_wonder.2113.name
	desc = pw_wonder.2113.desc
	picture = GFX_evt_metropolis
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_living_spire_built }}
		owner = { is_gestalt = no }
	}

	immediate = {
		owner = { set_country_flag = pw_living_spire_built }
	}

	option = {
		name = pw_wonder.2113.a
		hidden_effect = {
			planet_event = {
				id = pw_wonder.2120
				days = 10
			}
		}
	}
}

#On second time onwards Living Spire 3 is built (Regular Empire)
planet_event = {
	id = pw_wonder.2114
	title = pw_wonder.2114.name
	desc = pw_wonder.2114.desc
	picture = GFX_evt_metropolis
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		owner = { has_country_flag = pw_living_spire_built }
		owner = { is_gestalt = no }
	}

	option = {
		name = pw_wonder.2114.a
		hidden_effect = {
			planet_event = {
				id = pw_wonder.2120
				days = 10
			}
		}
	}
}

#Check if LS was destroyed/replaced (recursive)
planet_event = {
	id = pw_wonder.2105
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				#Does not has the building:
				NOT = { has_active_building = pw_building_living_spire_3 }
				OR = { #But has one of the deposits:
					has_modifier = pw_pm_living_spire_designation_default
					has_modifier = pw_pm_living_spire_designation_imperial
					has_modifier = pw_pm_living_spire_designation_commerce
					has_modifier = pw_pm_living_spire_designation_pleasure
					has_modifier = pw_pm_living_spire_designation_progress
					has_modifier = pw_pm_living_spire_designation_industry
					has_modifier = pw_pm_living_spire_designation_tradition
					has_modifier = pw_pm_living_spire_designation_administration
					has_modifier = pw_pm_living_spire_designation_death_cult
					has_modifier = pw_pm_living_spire_designation_death_necro
				}
			}
			planet_event = { id = pw_wonder.2106 }
		}
		else = {
			planet_event = { id = pw_wonder.2105 days = @pw_halfYear }
		}
	}
}

#When the LS is destroyed/replaces -> demolish Integrations
planet_event = {
	id = pw_wonder.2106
	title = pw_wonder.2106.name
	desc = pw_wonder.2106.desc
	picture = GFX_evt_metropolis
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#Does not has the building:
		NOT = { has_active_building = pw_building_conduit_of_unity_1 }
		OR = { #But has one of the modifiers:
			has_modifier = pw_pm_living_spire_designation_default
			has_modifier = pw_pm_living_spire_designation_imperial
			has_modifier = pw_pm_living_spire_designation_commerce
			has_modifier = pw_pm_living_spire_designation_pleasure
			has_modifier = pw_pm_living_spire_designation_progress
			has_modifier = pw_pm_living_spire_designation_industry
			has_modifier = pw_pm_living_spire_designation_tradition
			has_modifier = pw_pm_living_spire_designation_administration
			has_modifier = pw_pm_living_spire_designation_death_cult
			has_modifier = pw_pm_living_spire_designation_death_necro
		}
	}

	option = {
		name = UNFORTUNATE
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_default }
			remove_modifier = pw_pm_living_spire_designation_default
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_imperial }
			remove_modifier = pw_pm_living_spire_designation_imperial
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_commerce }
			remove_modifier = pw_pm_living_spire_designation_commerce
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_pleasure }
			remove_modifier = pw_pm_living_spire_designation_pleasure
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_progress }
			remove_modifier = pw_pm_living_spire_designation_progress
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_industry }
			remove_modifier = pw_pm_living_spire_designation_industry
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_tradition }
			remove_modifier = pw_pm_living_spire_designation_tradition
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_administration }
			remove_modifier = pw_pm_living_spire_designation_administration
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_death_cult }
			remove_modifier = pw_pm_living_spire_designation_death_cult
		}
		if = {
			limit = { has_modifier = pw_pm_living_spire_designation_death_necro }
			remove_modifier = pw_pm_living_spire_designation_death_necro
		}
	}
}

#Choose a designation for the Spire
planet_event = {
	id = pw_wonder.2120
	title = pw_wonder.2120.name
	desc = pw_wonder.2120.desc
	picture = GFX_evt_metropolis
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_default
			}
			remove_modifier = pw_pm_living_spire_designation_default
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_imperial
			}
			remove_modifier = pw_pm_living_spire_designation_imperial
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_commerce
			}
			remove_modifier = pw_pm_living_spire_designation_commerce
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_pleasure
			}
			remove_modifier = pw_pm_living_spire_designation_pleasure
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_progress
			}
			remove_modifier = pw_pm_living_spire_designation_progress
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_industry
			}
			remove_modifier = pw_pm_living_spire_designation_industry
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_tradition
			}
			remove_modifier = pw_pm_living_spire_designation_tradition
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_administration
			}
			remove_modifier = pw_pm_living_spire_designation_administration
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_death_cult
			}
			remove_modifier = pw_pm_living_spire_designation_death_cult
		}
		if = {
			limit = {
				has_modifier = pw_pm_living_spire_designation_death_necro
			}
			remove_modifier = pw_pm_living_spire_designation_death_necro
		}
	}

	option = {
		name = pw_wonder.2120.default
		custom_tooltip = pw_wonder.2120.tooltip
		add_modifier = {
			modifier = pw_pm_living_spire_designation_default
		}
		ai_chance = {
			factor = 10
		}
	}

	option = {
		name = pw_wonder.2120.imperial
		custom_tooltip = pw_wonder.2120.tooltip
		trigger = {
			has_active_building = building_imperial_capital
		}
		add_modifier = {
			modifier = pw_pm_living_spire_designation_imperial
		}
	}

	option = {
		name = pw_wonder.2120.commerce
		custom_tooltip = pw_wonder.2120.tooltip
		add_modifier = {
			modifier = pw_pm_living_spire_designation_commerce
		}
	}

	option = {
		name = pw_wonder.2120.pleasure
		custom_tooltip = pw_wonder.2120.tooltip
		add_modifier = {
			modifier = pw_pm_living_spire_designation_pleasure
		}
	}

	option = {
		name = pw_wonder.2120.progress
		custom_tooltip = pw_wonder.2120.tooltip
		add_modifier = {
			modifier = pw_pm_living_spire_designation_progress
		}
	}

	option = {
		name = pw_wonder.2120.industry
		custom_tooltip = pw_wonder.2120.tooltip
		add_modifier = {
			modifier = pw_pm_living_spire_designation_industry
		}
	}

	option = {
		name = pw_wonder.2120.tradition
		custom_tooltip = pw_wonder.2120.tooltip
		add_modifier = {
			modifier = pw_pm_living_spire_designation_tradition
		}
	}

	option = {
		name = pw_wonder.2120.administration
		custom_tooltip = pw_wonder.2120.tooltip
		add_modifier = {
			modifier = pw_pm_living_spire_designation_administration
		}
	}

	option = {
		name = pw_wonder.2120.death
		custom_tooltip = pw_wonder.2120.tooltip
		trigger = {
			OR = {
				owner = { has_valid_civic = civic_death_cult }
				owner = { has_valid_civic = civic_death_cult_corporate }
			}
		}
		add_modifier = {
			modifier = pw_pm_living_spire_designation_death_cult
		}
	}

	option = {
		name = pw_wonder.2120.death
		custom_tooltip = pw_wonder.2120.tooltip
		trigger = {
			owner = {
				has_origin = origin_necrophage
			}
		}
		add_modifier = {
			modifier = pw_pm_living_spire_designation_death_necro
		}
	}
}

# Conduit of Unity -> id 2200

#On Conduit of Unity 0 built
planet_event = {
	id = pw_wonder.2200
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_conduit_of_unity_0_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.2210 } #Regular first time
	}
}

#On Conduit of Unity 1 built
planet_event = {
	id = pw_wonder.2201
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#This would be triggered every time a building is upgraded.
		last_building_changed = pw_building_conduit_of_unity_1
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_conduit_of_unity_1_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}

		planet_event = { id = pw_wonder.2211 } #Gestalt first time
		planet_event = { id = pw_wonder.2202 days = @pw_1year } #Recursive check for CoU destroyed
	}
}

#Check if CoU was destroyed/replaced (recursive)
planet_event = {
	id = pw_wonder.2202
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				#Does not has the building:
				NOT = { has_active_building = pw_building_conduit_of_unity_1 }
				OR = { #But has one of the deposits:
					has_deposit = pw_d_integration_cyber_pylon
					has_deposit = pw_d_integration_CARE_facility
					has_deposit = pw_d_integration_coordination_center
					has_deposit = pw_d_integration_xeno_accommodation
					has_deposit = pw_d_integration_drone_surveillance
					has_deposit = pw_d_integration_integrated_replication
					has_deposit = pw_d_integration_shard_of_enigma
					has_deposit = pw_d_integration_chamber_of_reflection
				}
			}
			planet_event = { id = pw_wonder.2203 }
		}
		else = {
			planet_event = { id = pw_wonder.2202 days = @pw_halfYear }
		}
	}
}

#When the CoU is destroyed/replaces -> demolish Integrations
planet_event = {
	id = pw_wonder.2203
	title = pw_wonder.2203.name
	desc = pw_wonder.2203.desc
	picture = GFX_evt_alien_city
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		#Does not has the building:
		NOT = { has_active_building = pw_building_conduit_of_unity_1 }
		OR = { #But has one of the deposits:
			has_deposit = pw_d_integration_cyber_pylon
			has_deposit = pw_d_integration_CARE_facility
			has_deposit = pw_d_integration_coordination_center
			has_deposit = pw_d_integration_xeno_accommodation
			has_deposit = pw_d_integration_drone_surveillance
			has_deposit = pw_d_integration_integrated_replication
			has_deposit = pw_d_integration_shard_of_enigma
			has_deposit = pw_d_integration_chamber_of_reflection
		}
	}

	option = {
		name = UNFORTUNATE
		if = {
			limit = { has_deposit = pw_d_integration_cyber_pylon }
			remove_deposit = pw_d_integration_cyber_pylon
		}
		if = {
			limit = { has_deposit = pw_d_integration_CARE_facility }
			remove_deposit = pw_d_integration_CARE_facility
		}
		if = {
			limit = { has_deposit = pw_d_integration_coordination_center }
			remove_deposit = pw_d_integration_coordination_center
		}
		if = {
			limit = { has_deposit = pw_d_integration_xeno_accommodation }
			remove_deposit = pw_d_integration_xeno_accommodation
		}
		if = {
			limit = { has_deposit = pw_d_integration_drone_surveillance }
			remove_deposit = pw_d_integration_drone_surveillance
		}
		if = {
			limit = { has_deposit = pw_d_integration_integrated_replication }
			remove_deposit = pw_d_integration_integrated_replication
		}
		if = {
			limit = { has_deposit = pw_d_integration_shard_of_enigma }
			remove_deposit = pw_d_integration_shard_of_enigma
		}
		if = {
			limit = { has_deposit = pw_d_integration_chamber_of_reflection }
			remove_deposit = pw_d_integration_chamber_of_reflection
		}
	}
}

#On Conduit of Unity Integration is completed
planet_event = {
	id = pw_wonder.2205
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	immediate = {
		create_message = {
			type = BUILDING_CONSTRUCTION_MESSAGE_TYPE
			localization = pw_message_conduit_of_unity_integration_complete
			days = 30
			target = THIS
			variable = {
				type = name
				localization = PLANET
				scope = ROOT
			}
		}
	}
}

#On first time Conduit of Unity 0 is built (Gestalt Empire)
planet_event = {
	id = pw_wonder.2210
	title = pw_wonder.2210.name
	desc = pw_wonder.2210.desc
	picture = GFX_evt_alien_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_conduit_of_unity_0_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_conduit_of_unity_0_built }
	}

	option = {
		name = pw_wonder.2210.a
		add_modifier = {
			modifier = pw_mod_conduit_of_unity_recently_build
			days = @pw_2years
		}
	}
}

#On first time Conduit of Unity 1 is built (Gestalt Empire)
planet_event = {
	id = pw_wonder.2211
	title = pw_wonder.2211.name
	desc = pw_wonder.2211.desc
	picture = GFX_evt_alien_city
	show_sound = event_construction
	is_triggered_only = yes
	location = THIS

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		NOT = {owner = { has_country_flag = pw_conduit_of_unity_built }}
		owner = { is_gestalt = yes }
	}

	immediate = {
		owner = { set_country_flag = pw_conduit_of_unity_built }
	}

	option = {
		name = pw_wonder.2211.a
	}
}
