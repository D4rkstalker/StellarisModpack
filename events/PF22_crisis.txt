####################
# The Prime Flesh
# By: Evereal
# Modjam 2022
####################

namespace = PF22

# Test event for custom UI / Portraits
country_event = {
	id = PF22.1500
	title = "TRANSMISSION"
	desc = "PF22.1500.desc"
	custom_gui = "PF22_DiplomaticEventWindow_test"

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room_custom
	}
	
	immediate = {
		save_global_event_target_as = PF22_pf_country
		set_variable = { which = PF22_pf_growth value = 80 }
		set_variable = { which = PF22_pf_patience value = 10 }
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.1500.a
	}
}

# Test event for the PF gaining planets
country_event = {
	id = PF22.1501
	title = "TRANSMISSION"
	desc = "PF22.1500.desc"
	custom_gui = "PF22_DiplomaticEventWindow_test"

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
		save_global_event_target_as = PF22_pf_country
		set_variable = { which = PF22_pf_growth value = 80 }
		set_variable = { which = PF22_pf_patience value = 10 }
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.1500.a
	}
}

country_event = {
	id = PF22.1
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		create_species = {
			name = "NAME_pf_species"
			plural = "NAME_pf_species_plural"
			class = PF22_PRIME_FLESH_CLASS 
			portrait = arthropoid_massive_15_PF22_portrait
			namelist = "PF22_pf_namelist"
			traits = {
				trait = trait_pc_hive_preference
				trait = trait_strong
				trait = trait_fertile
				trait = trait_extremely_adaptive 
				trait = trait_PF22_prime
				trait = trait_hive_mind
			}
			effect = {
				save_global_event_target_as = PF22_pf_species
			}
		}
		create_country = {
			name = "NAME_pf_country"
			type = PF22_prime_flesh
			adjective = "NAME_pf_country_adjective"
			ship_prefix = "NAME_pf_ship_prefix"
			authority = auth_hive_mind
			ethos = {
				ethic = ethic_gestalt_consciousness
			}
			species = event_target:PF22_species
			name_list = PF22_pf_namelist
			flag = {
				icon= {
					category = "PF22_pf_flags"
					file = "PF22_pf_flag.dds"
				}
				background= {
					category = "backgrounds"
					file = "circle.dds"
				}
				colors={
					"dark_grey"
					"red"
					"null"
					"null"
				}
			}
			effect = {
				create_ship_design = { design = "NAME_pf_science_ship" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_pf_defence_platform" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_pf_starbase" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_pf_ship_queen" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_pf_ship_large" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_pf_ship_carrier" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_pf_small" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_Swarm_Transport" }
				add_ship_design = last_created_design
				save_global_event_target_as = PF22_pf_country
				set_country_flag = PF22_pf_country
				set_global_flag = PF22_pf_asleep
				set_graphical_culture = swarm_01
				add_tradition = tr_genetics_creation
				set_variable = { which = PF22_pf_growth value = 0 }
				set_variable = { which = PF22_pf_patience value = 100 }
				add_modifier = {
					modifier = PF22_pf_country_mod 
					days = -1
				}
			}
		}
		event_target:PF22_pf_species = {
			set_citizenship_type = {
				country = event_target:PF22_pf_country
				type = citizenship_full 
			}
			set_living_standard = {
				country = event_target:PF22_pf_country
				type = living_standard_hive_mind 
			}
		}
		set_spawn_system_batch = begin
		no_scope = {
			spawn_system = {
				min_distance >= 490
				max_distance <= 540
				min_orientation_angle = 200
				max_orientation_angle = 240
				initializer = PF22_home_system
				hyperlane = no
				effect = {
					save_global_event_target_as = PF22_home_system
				}
			}
		}
		event_target:PF22_home_system = {
			spawn_system = {
				min_distance = 30
				max_distance = 50
				max_jumps = 0
				initializer = PF22_exp_1_system
				hyperlane = no
				effect = {
					save_global_event_target_as = PF22_exp_1
				}
			}
			if = {
				limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
				add_hyperlane = {
					from = this
					to = last_created_system
				}
			}
			else = {
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
			
			spawn_system = {
				min_distance = 10
				max_distance = 30
				max_jumps = 0
				initializer = PF22_exp_2_system
				hyperlane = no
				effect = {
					save_global_event_target_as = PF22_exp_2
				}
			}
			if = {
				limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
				add_hyperlane = {
					from = this
					to = last_created_system
				}
			}
			else = {
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
			
			spawn_system = {
				min_distance = 20
				max_distance = 40
				max_jumps = 0
				initializer = PF22_exp_5_system
				hyperlane = no
				effect = {
					save_global_event_target_as = PF22_exp_5
				}
			}
			if = {
				limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
				add_hyperlane = {
					from = this
					to = last_created_system
				}
			}
			else = {
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
			
			random_system_planet = {
				limit = {
					has_planet_flag = PF22_home_world
				}
				save_global_event_target_as = PF22_home_world
				create_colony = {
					owner = event_target:PF22_pf_country
					species = event_target:PF22_pf_species
				}
				create_pop = {
					species = event_target:PF22_pf_species
				}
				create_pop = {
					species = event_target:PF22_pf_species
				}
				add_building = building_PF22_broken_hive_capital
				add_building = building_hive_confluence
				ruin_building = building_hive_confluence
				add_building = building_hive_confluence
				ruin_building = building_hive_confluence
				add_building = building_spawning_pool
				ruin_building = building_spawning_pool
				add_building = building_expanded_warren
				ruin_building = building_expanded_warren
				set_planet_entity = {
					entity = PF22_hive_01_entity
				}
				set_colony_type = col_PF22_decayed
			}
		}
		
		event_target:PF22_exp_1 = {
			spawn_system = {
				min_distance = 10
				max_distance = 15
				max_jumps = 0
				initializer = PF22_exp_3_system
				hyperlane = no
				effect = {
					save_global_event_target_as = PF22_exp_3
				}
			}
			if = {
				limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
				add_hyperlane = {
					from = this
					to = last_created_system
				}
			}
			else = {
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
		}
		
		event_target:PF22_exp_5 = {
			spawn_system = {
				min_distance = 15
				max_distance = 25
				max_jumps = 0
				initializer = PF22_exp_4_system
				hyperlane = no
				effect = {
					save_global_event_target_as = PF22_exp_4
				}
			}
			if = {
				limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
				add_hyperlane = {
					from = this
					to = last_created_system
				}
			}
			else = {
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
			if = {
				limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
				add_hyperlane = {
					from = event_target:PF22_exp_2
					to = last_created_system
				}
			}
			else = {
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
		}
		
		event_target:PF22_exp_2 = {
			spawn_system = {
				min_distance = 25
				max_distance = 40
				max_jumps = 0
				initializer = PF22_exp_6_system
				hyperlane = no
				effect = {
					save_global_event_target_as = PF22_exp_6
				}
			}
			if = {
				limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
				add_hyperlane = {
					from = this
					to = last_created_system
				}
			}
			else = {
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
			if = {
				limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
				add_hyperlane = {
					from = event_target:PF22_exp_3
					to = last_created_system
				}
			}
			else = {
				add_extra_hyperlane_to_spawned_system_effect = yes
			}
		}
		
		random_rim_system = {
			weights = {
				base = 1
				modifier = {
					factor = 6.0
					has_owner = no
				}
				modifier = {
					factor = 3.0
					AND = {
						exists = owner
						owner = { is_ai = no }
					}
				}
			}
			limit = {
				AND = {
					NOT = { has_star_flag = PF22_system }
					NOT = { has_star_flag = lcluster }
					NOT = { has_star_flag = PF22_wormhole_system }
				}
			}
			set_star_flag = PF22_wormhole_system
			save_global_event_target_as = PF22_wm_system_1
			event_target:PF22_home_system = {
				prev = { # done this way to ensure we don't spawn "orphan wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = no
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = no
					orbit_angle = 270
				}
				link_wormholes = prev
			}
		}
		
		random_rim_system = {
			weights = {
				base = 1
				modifier = {
					factor = 7.5
					has_owner = no
				}
				modifier = {
					factor = 2.5
					AND = {
						exists = owner
						owner = { is_ai = no }
					}
				}
				modifier = {
					factor = 0.1
					distance = { source = event_target:PF22_wm_system_1 max_jumps = 20 type = hyperlane }
				}
			}
			limit = {
				AND = {
					NOT = { has_star_flag = PF22_system }
					NOT = { has_star_flag = lcluster }
					NOT = { has_star_flag = PF22_wormhole_system }
				}
			}
			set_star_flag = PF22_wormhole_system
			save_global_event_target_as = PF22_wm_system_2
			event_target:PF22_exp_1 = {
				prev = { # done this way to ensure we don't spawn "orphan wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = no
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = no
					orbit_angle = 270
				}
				link_wormholes = prev
			}
		}
		
		random_rim_system = {
			weights = {
				base = 1
				modifier = {
					factor = 7.5
					has_owner = no
				}
				modifier = {
					factor = 2.5
					AND = {
						exists = owner
						owner = { is_ai = no }
					}
				}
				modifier = {
					factor = 0.1
					distance = { source = event_target:PF22_wm_system_1 max_jumps = 20 type = hyperlane }
				}
				modifier = {
					factor = 0.1
					distance = { source = event_target:PF22_wm_system_2 max_jumps = 20 type = hyperlane }
				}
			}
			limit = {
				AND = {
					NOT = { has_star_flag = PF22_system }
					NOT = { has_star_flag = lcluster }
					NOT = { has_star_flag = PF22_wormhole_system }
				}
			}
			set_star_flag = PF22_wormhole_system
			save_global_event_target_as = PF22_wm_system_3
			event_target:PF22_exp_2 = {
				prev = { # done this way to ensure we don't spawn "orphan wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = no
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = no
					orbit_angle = 270
				}
				link_wormholes = prev
			}
		}
		set_spawn_system_batch = end
		every_playable_country = {
			country_event = { id = PF22.3 days = 1 random = 14 }
			if = {
				limit = { NOT = { is_ai = yes } }
				country_event = { id = PF22.5 days = 1 random = 4 }
			}
			begin_event_chain = { 
				event_chain = PF22_pf_wormholes_chain
				target = this 
			}
			create_point_of_interest = {
				id = PF22_wormhole_1
				name = PF22_wormhole_poi
				desc = PF22_wormhole_desc
				event_chain = PF22_pf_wormholes_chain
				location = event_target:PF22_wm_system_1
			}
			create_point_of_interest = {
				id = PF22_wormhole_2
				name = PF22_wormhole_poi
				desc = PF22_wormhole_desc
				event_chain = PF22_pf_wormholes_chain
				location = event_target:PF22_wm_system_2
			}
			create_point_of_interest = {
				id = PF22_wormhole_3
				name = PF22_wormhole_poi
				desc = PF22_wormhole_desc
				event_chain = PF22_pf_wormholes_chain
				location = event_target:PF22_wm_system_3
			}
			event_target:PF22_wm_system_1 = {
				set_surveyed = { 
					surveyed = yes 
					surveyor = prev 
				}
			}
			event_target:PF22_wm_system_2 = {
				set_surveyed = { 
					surveyed = yes 
					surveyor = prev 
				}
			}
			event_target:PF22_wm_system_3 = {
				set_surveyed = { 
					surveyed = yes 
					surveyor = prev 
				}
			}
		}
		
		every_country = {
			limit = { is_country_type = default }
			establish_communications_no_message = event_target:PF22_pf_country
		}
		country_event = { id = PF22.50 days = 1200 }
	}
}

# Gets Hive minds on the blower; something strange is happening!
country_event = {
	id = PF22.2
	title = PF22.2.title
	desc = PF22.2.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.2.a
	}
}

# Alerts Players of the spawning wormholes.
country_event = {
	id = PF22.3
	title = PF22.3.title
	picture = GFX_evt_wormhole
	show_sound = event_sensor_ping
	
	desc = {
		text = PF22.3.desc_01
		trigger = { has_technology = tech_wormhole_stabilization }
	}
	desc = {
		text = PF22.3.desc_02
		trigger = { NOT = { has_technology = tech_wormhole_stabilization } }
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.3.a
		trigger = { has_technology = tech_wormhole_stabilization }
	}
	option = {
		name = PF22.3.b
		add_tech_progress = { tech = tech_wormhole_stabilization progress = 0.1 }
		trigger = { NOT = { has_technology = tech_wormhole_stabilization } }
	}
}

# Anomaly Event for homeworld. It is dying?
country_event = {
	id = PF22.4
	title = PF22.4.title
	desc = PF22.4.desc
	picture = GFX_evt_dead_city
	show_sound = event_mystic_reveal
	location = event_target:PF22_home_world

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.4.a
		add_monthly_resource_mult = {
			resource = physics_research
			value = 8
			min = 500
			max = 5000
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = 8
			min = 500
			max = 5000
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = 8
			min = 500
			max = 5000
		}
	}
}

# The PF spawn some civilian ships and beg for energy in exchange for some survey data and technology
country_event = {
	id = PF22.5
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		capital_scope = { save_event_target_as = PF22_capital }
		save_event_target_as = PF22_country
		create_fleet = {
			name = "NAME_pf_science_ship"
			effect = {
				set_owner = event_target:PF22_pf_country
				save_event_target_as = PF22_pf_science_vessel
				create_ship = {
					name = "NAME_pf_science_ship"
					design = NAME_pf_science_ship
					graphical_culture = "swarm_01"
					prefix = no
					effect = {
						add_modifier = {
							modifier = PF22_pf_science_ship
							days = -1
						}
					}
				}
				set_location = event_target:PF22_home_world
				queue_actions = {
					wait = {
						duration = 1
						random = 4
					}
					move_to = event_target:PF22_capital
					effect = {
						id = PF22.5.effect.1
						event_target:PF22_country = {
							country_event = { id = PF22.6 }
						}
					}
				}
			}
		}
	}
}

# A PF visitor arrives:
country_event = {
	id = PF22.6
	title = PF22.6.title
	desc = PF22.6.desc
	picture = GFX_evt_ship_travel
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.6.a
		add_resource = {
			energy = -1000
		}
		allow = {
			has_country_resource = { type = energy amount > 1000 }
		}
		hidden_effect = {
			set_country_flag = PF22_pf_ship_paid
			country_event = { id = PF22.7 days = 25 }
		}
		ai_chance = {
			factor = 0.0
		}
		hidden_effect = {
			event_target:PF22_pf_science_vessel = {
				queue_actions = {
					wait = {
						duration = 10
						random = 15
					}
					move_to = event_target:PF22_home_system
					effect = {
						id = PF22.6.effect.1
						destroy_fleet = this
					}
				}
			}
		}
	}
	option = {
		name = PF22.6.b
		hidden_effect = {
			set_country_flag = PF22_pf_ship_apprehended
			country_event = { id = PF22.7 days = 25 }
			event_target:PF22_pf_science_vessel = {
				destroy_fleet = this
			}
		}
	}
	#option = {
	#	name = PF22.6.c
	#	hidden_effect = {
	#		country_event = { id = PF22.8 days = 25 }
	#	}
	#}
	option = {
		name = PF22.6.d
		hidden_effect = {
			country_event = { id = PF22.9 days = 5 }
			event_target:PF22_pf_science_vessel = {
				destroy_fleet = this
			}
		}
	}
}

#Ship leaves
country_event = {
	id = PF22.7
	title = PF22.7.title
	picture = GFX_evt_ship_travel
	show_sound = event_mystic_reveal
	
	desc = {
		text = PF22.7.desc_01
		trigger = { 
			has_country_flag = PF22_pf_ship_paid
		}
	}
	desc = {
		text = PF22.7.desc_02
		trigger = { 
			has_country_flag = PF22_pf_ship_apprehended
		}
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.7.a
		trigger = {
			has_country_flag = PF22_pf_ship_paid
		}
		add_modifier = {
			modifier = PF22_pf_better_alloys
			days = -1
		}
		enable_special_project = { 
			name = PF22_PF_HOME_SYSTEM
			owner = this
		}
		hidden_effect = {
			country_event = { id = PF22.50 days = 180 }
		}
	}
	
	option = {
		name = PF22.7.b
		trigger = {
			has_country_flag = PF22_pf_ship_apprehended
		}
		enable_special_project = { 
			name = PF22_PF_HOME_SYSTEM
			owner = this
		}
	}
	
	after = {
		hidden_effect = {
			event_target:PF22_home_system = {
				set_surveyed = { 
					surveyed = yes 
					surveyor = root
				}
			}
			event_target:PF22_exp_1 = {
				set_surveyed = { 
					surveyed = yes 
					surveyor = root
				}
			}
			event_target:PF22_exp_2 = {
				set_surveyed = { 
					surveyed = yes 
					surveyor = root
				}
			}
			set_visited = event_target:PF22_home_system
			set_visited = event_target:PF22_exp_1
			set_visited = event_target:PF22_exp_2
		}
	}
}

# Anomaly Event for home system.
ship_event = {
	id = PF22.8
	title = PF22.8.title
	picture = GFX_evt_dead_city
	show_sound = event_mystic_reveal
	location = event_target:PF22_home_world
	
	desc = {
		text = PF22.8.desc_01
		trigger = { 
			owner = {
				NOR = {
					has_country_flag = PF22_pf_ship_apprehended
					has_country_flag = PF22_pf_ship_paid
				}
			}
		}
	}
	desc = {
		text = PF22.8.desc_02
		trigger = { 
			owner = {
				OR = {
					has_country_flag = PF22_pf_ship_apprehended
					has_country_flag = PF22_pf_ship_paid
				}
			}
		}
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.8.a
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = 8
				min = 500
				max = 5000
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = 8
				min = 500
				max = 5000
			}
			add_monthly_resource_mult = {
				resource = engineering_research
				value = 8
				min = 500
				max = 5000
			}
		}
	}
}

#Ship Destroyed
country_event = {
	id = PF22.9
	title = PF22.9.title
	desc = PF22.9.desc
	picture = GFX_evt_exploding_ship
	show_sound = event_super_explosion

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.9.a
		add_monthly_resource_mult = { 
			resource = society_research
			value = 10
			max = 5000
			min = 500
		}
	}
}

# Repeater event producing locally infected planets
country_event = {
	id = PF22.10
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = PF22_in_progress
	}
	
	immediate = {
		if = {
			limit = { 
				AND = {
					has_country_flag = PF22_infection_known
					NOT = { has_country_flag = PF22_infection_project_given }
				}
			}
			set_country_flag = PF22_infection_project_given
			country_event = { id = PF22.11 days = 1 random = 4 }
		}
		if = {
			limit = {
				check_variable_arithmetic = {
					which = value:PF22_calculate_num_outbreaks
					value > 0
				}
			}
			random_owned_planet = {
				limit = {
					AND = {
						NOT = {
							OR = {
								has_planet_flag = PF22_infected
								has_planet_flag = PF22_cult
							}
						}
						NOT = { is_under_colonization = yes }
						NOT = { is_occupied_flag = yes }
					}
				}
				weights = {
					base = 1
					modifier = { 
						add = 4 
						num_pops > 20
					}
					modifier = { 
						add = 2 
						planet_stability < 50
					}
					modifier = { 
						add = 2
						planet_crime > 10
					}
					modifier = { 
						add = 2
						free_housing < 0
					}
					modifier = { 
						add = 2
						habitability = { who = root.owner_main_species value < 0.8 }
					}
					modifier = { 
						add = 2
						free_amenities < 0
					}
				}
				if = {
					limit = { 
						owner = { 
							AND = { 
								has_country_flag = PF22_first_outbreak
								NOT = { has_authority = auth_hive_mind }
								NOT = { has_authority = auth_machine_intelligence }
								NOT = { is_ai = yes } 
							} 
						} 
					}
					random_list = {
						10 = {}
						10 = {
							set_planet_flag = PF22_infected
							planet_event = { id = PF22.21 days = 5 random = 45 }
						}
					}
				}
				else_if = {
					limit = { 
						owner = { 
							AND = {
								NOT = { has_country_flag = PF22_first_outbreak }
								NOT = { has_authority = auth_hive_mind }
								NOT = { has_authority = auth_machine_intelligence }
								NOT = { is_ai = yes } 
							} 
						} 
					}
					set_planet_flag = PF22_infected
					planet_event = { id = PF22.21 days = 5 random = 45 }
				}
				else_if = {
					limit = { 
						owner = { 
							AND = { 
								has_country_flag = PF22_first_outbreak
								has_authority = auth_hive_mind
								NOT = { has_authority = auth_machine_intelligence }
								NOT = { is_ai = yes } 
							} 
						} 
					}
					random_list = {
						10 = {}
						10 = {
							set_planet_flag = PF22_infected
							planet_event = { id = PF22.210 days = 5 random = 45 }
						}
					}
				}
				else_if = {
					limit = { 
						owner = { 
							AND = {
								NOT = { has_country_flag = PF22_first_outbreak }
								has_authority = auth_hive_mind
								NOT = { has_authority = auth_machine_intelligence }
								NOT = { is_ai = yes } 
							} 
						} 
					}
					set_planet_flag = PF22_infected
					planet_event = { id = PF22.210 days = 5 random = 45 }
				}
				else_if = {
					limit = { 
						owner = { 
							AND = {
								NOT = { has_authority = auth_machine_intelligence }
								is_ai = yes
							} 
						} 
					}
					random_list = {
						10 = {}
						10 = {
							set_planet_flag = PF22_infected
							planet_event = { id = PF22.13 days = 5 random = 45 }
						}
					}
				}
				else_if = {
					limit = {
						owner = { has_authority = auth_machine_intelligence }
					}
					planet_event = { id = PF22.200 days = 50 random = 30 } #Pah. Machine intelligences are immune to your pitiful diseases!
				}
			}
			country_event = { id = PF22.10 days = 50 random = 30 }
		}
		if = {
			limit = { NOT = { owner = { has_country_flag = PF22_first_outbreak } } }
			owner = { set_country_flag = PF22_first_outbreak }
		}
		
	}
}

# Investigate the pathogen behind the outbreak
country_event = {
	id = PF22.11
	title = PF22.11.title
	desc = PF22.11.desc
	picture = GFX_evt_disease_outbreak
	show_sound = event_mystic_reveal
	
	#desc = {
	#	text = PF22.21.desc_02
	#	trigger = { 
	#		owner = { has_country_flag = PF22_infection_known }
	#	}
	#}
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.11.a
		enable_special_project = {
			name = PF22_OUTBREAK_RESEARCH
		}
	}
}

# Investigation complete, grants access to technology that helps inhibit the outbreak.
country_event = {
	id = PF22.12
	title = PF22.12.title
	desc = PF22.12.desc
	picture = GFX_evt_disease_outbreak
	show_sound = event_mystic_reveal
	
	#desc = {
	#	text = PF22.21.desc_02
	#	trigger = { 
	#		owner = { has_country_flag = PF22_infection_known }
	#	}
	#}
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.12.a
		custom_tooltip = PF22.12.a
		hidden_effect = {
			set_country_flag = PF22_outbreak_resistance_1
		}
	}
}

# AI imputation for outbreaks:
# I don't trust the AI to properly respond to the in-depth mechanics involved in stopping the outbreak
# (at least without putting lots of effort into AI weights etc.)
# So at least for submission to MODJAM22, I will pre-determine a semi-random result for the outbreaks
# for AIs and apply a modifier that gimps their economy for an amount of time, to simulate dealing with
# an outbreak.
planet_event = {
	id = PF22.13
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		owner = { is_ai = yes }
	}
	
	immediate = {
		# if planet looks bad:
		if = {
			limit = {
				OR = {
					planet_stability < 50
					planet_crime > 30
					free_amenities < -4
					free_housing < -4
					check_variable_arithmetic = {
						which = value:PF22_outbreak_density_planet
						value > 2.5
					}
				}
			}
			random_list = {
				8 = { add_modifier = { modifier = PF22_outbreak_ai_outcome_1 years = 8 } }
				12 = { add_modifier = { modifier = PF22_outbreak_ai_outcome_2 years = 10 } }
				12 = { add_modifier = { modifier = PF22_outbreak_ai_outcome_3 years = 10 } }
				8 = { 
					add_modifier = { modifier = PF22_outbreak_ai_outcome_4 days = 1825 } 
					planet_event = { id = PF22.14 days = 1825 }
				}
			}
		}
		else = {
			random_list = {
				18 = { add_modifier = { modifier = PF22_outbreak_ai_outcome_1 years = 8 } }
				12 = { add_modifier = { modifier = PF22_outbreak_ai_outcome_2 years = 10 } }
				8 = { add_modifier = { modifier = PF22_outbreak_ai_outcome_3 years = 10 } }
				2 = { 
					add_modifier = { modifier = PF22_outbreak_ai_outcome_4 days = 1825 } 
					planet_event = { id = PF22.14 days = 1825 }
				}
			}
		}
	}
}

# It is decided the AI loses. Good thing they don't have emotions.
planet_event = {
	id = PF22.14
	hide_window = yes
	
	trigger = {
		owner = { is_ai = yes }
	}
	
	is_triggered_only = yes
	
	immediate = {
		PF22_assimilate_world = yes
	}
}

# AI imputation for cults:
# See above explanation for outbreaks as to why this is done.
planet_event = {
	id = PF22.15
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		owner = { is_ai = yes }
	}
	
	immediate = {
		# if planet looks bad:
		if = {
			limit = {
				OR = {
					planet_stability < 50
					planet_crime > 30
					count_owned_pop = {
						limit = { is_enslaved = yes }
						count > 5
					}
					count_owned_pop = {
						limit = { is_unemployed = yes }
						count > 5
					}
					happiness_planet < 0.5
					check_variable_arithmetic = {
						which = value:PF22_capital_dist
						value > 250
					}
				}
			}
			random_list = {
				8 = { add_modifier = { modifier = PF22_cult_ai_outcome_1 years = 8 } }
				12 = { add_modifier = { modifier = PF22_cult_ai_outcome_2 years = 10 } }
				12 = { add_modifier = { modifier = PF22_cult_ai_outcome_3 years = 10 } }
				8 = { 
					add_modifier = { modifier = PF22_cult_ai_outcome_4 days = 1825 } 
					planet_event = { id = PF22.16 days = 1825 }
				}
			}
		}
		else = {
			random_list = {
				18 = { add_modifier = { modifier = PF22_cult_ai_outcome_1 years = 8 } }
				12 = { add_modifier = { modifier = PF22_cult_ai_outcome_2 years = 10 } }
				8 = { add_modifier = { modifier = PF22_cult_ai_outcome_3 years = 10 } }
				2 = { 
					add_modifier = { modifier = PF22_cult_ai_outcome_4 days = 1825 } 
					planet_event = { id = PF22.16 days = 1825 }
				}
			}
		}
	}
}

# It is decided the AI loses. Good thing they don't have emotions.
planet_event = {
	id = PF22.16
	hide_window = yes
	
	trigger = {
		owner = { is_ai = yes }
	}
	
	is_triggered_only = yes
	
	immediate = {
		PF22_assimilate_world = yes
	}
}

#Initiator event for disease outbreak
planet_event = {
	id = PF22.21
	title = PF22.21.title
	picture = GFX_evt_city_planet
	show_sound = event_scanner
	location = this
	
	desc = {
		text = PF22.21.desc_01
		trigger = { 
			owner = { NOT = { has_country_flag = PF22_infection_known } }
		}
	}
	desc = {
		text = PF22.21.desc_02
		trigger = { 
			owner = { has_country_flag = PF22_infection_known }
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		owner = {
			start_situation = {
				type = situation_PF22_infestation
				target = root
				effect = {
					save_event_target_as = new_situation
				}
			}
		}
	}
	
	option = {
		name = PF22.21.a
	}
	
	after = {
		hidden_effect = {
			owner = { set_country_flag = PF22_infection_known }
		}
	}
}

#Alerter event for high infestation
situation_event = {
	id = PF22.22
	title = PF22.22.title
	desc = PF22.22.desc
	picture = GFX_evt_disease_outbreak
	show_sound = event_scanner
	location = target
	situation = this
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.22.a
	}
}

#Congratulations, you defeated the outbreak!
situation_event = {
	id = PF22.23
	title = PF22.23.title
	desc = PF22.23.desc
	picture = GFX_evt_city_planet
	show_sound = event_celebration
	location = target
	situation = this
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.23.a
	}
	
	after = { destroy_situation = this }
}

#Random event for outbreak situation: Pops die.
situation_event = {
	id = PF22.25
	title = PF22.25.title
	desc = PF22.25.desc
	picture = GFX_evt_disease_outbreak
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_2
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
	}
	
	option = {
		name = PF22.25.a
		if = {
			limit = { current_stage = stage_2 }
			while = {
				count = 1
				target = { random_owned_pop = { kill_pop = yes } }
			}
		}
		else_if = { 
			limit = { current_stage = stage_3 } 
			while = {
				count = 2
				target = { random_owned_pop = { kill_pop = yes } }
			} 
		}
		else_if = { 
			limit = { current_stage = stage_4 } 
			while = {
				count = 3
				target = { random_owned_pop = { kill_pop = yes } }
			} 
		}
	}
}

#Random event for outbreak situation: Biowaste builds up.
situation_event = {
	id = PF22.26
	title = PF22.26.title
	desc = PF22.26.desc
	picture = GFX_evt_disease_outbreak
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_2
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
	}
	
	option = {
		name = PF22.26.a
		target = {
			add_deposit = d_PF22_biowaste
		}
	}
}

#Infection completion event. Your planet is lost, you suck!
situation_event = {
	id = PF22.29
	title = PF22.29.title
	desc = PF22.29.desc
	picture = GFX_evt_city_ruins
	show_sound = event_ghost_town
	location = target
	
	is_triggered_only = yes
	
	immediate = {
		target = {
			PF22_assimilate_world = yes
		}
	}
	
	option = {
		name = PF22.29.a
	}
	
	after = { destroy_situation = this }
}


# Repeater event producing cults
country_event = {
	id = PF22.30
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = PF22_in_progress
	}
	
	immediate = {
		if = {
			limit = {
				check_variable_arithmetic = {
					which = value:PF22_calculate_num_cults
					value > 0
				}
			}
			random_owned_planet = {
				limit = {
					AND = {
						NOT = {
							OR = {
								has_planet_flag = PF22_infected
								has_planet_flag = PF22_cult
							}
						}
						NOT = { is_under_colonization = yes }
						NOT = { is_occupied_flag = yes }
					}
				}
				weights = {
					base = 1
					modifier = { 
						add = 4
						num_pops < 10
					}
					modifier = { 
						add = 2 
						planet_stability < 50
					}
					modifier = { 
						add = 2
						planet_crime > 10
					}
					modifier = { 
						add = 2
						free_housing < 0
					}
					modifier = { 
						add = 2
						count_owned_pop = {
							limit = {
								is_enslaved = yes
							}
							count > 3
						}
					}
				}
				if = {
					limit = { 
						owner = { 
							AND = { 
								has_country_flag = PF22_first_cult
								NOT = { has_authority = auth_hive_mind }
								NOT = { has_authority = auth_machine_intelligence }
								NOT = { is_ai = yes } 
							} 
						} 
					}
					random_list = {
						10 = {}
						10 = {
							set_planet_flag = PF22_cult
							planet_event = { id = PF22.31 days = 5 random = 45 }
						}
					}
				}
				else_if = {
					limit = { 
						owner = { 
							AND = { 
								NOT = { has_country_flag = PF22_first_cult }
								NOT = { has_authority = auth_hive_mind }
								NOT = { has_authority = auth_machine_intelligence }
								NOT = { is_ai = yes } 
							} 
						} 
					}
					set_planet_flag = PF22_cult
					planet_event = { id = PF22.31 days = 5 random = 45 }
				}
				else_if = {
					limit = { 
						owner = { 
							AND = { 
								has_country_flag = PF22_first_cult
								has_authority = auth_hive_mind
								NOT = { has_authority = auth_machine_intelligence }
								NOT = { is_ai = yes } 
							} 
						} 
					}
					random_list = {
						10 = {}
						10 = {
							set_planet_flag = PF22_cult
							planet_event = { id = PF22.211 days = 5 random = 45 }
						}
					}
				}
				else_if = {
					limit = { 
						owner = { 
							AND = { 
								NOT = { has_country_flag = PF22_first_cult }
								has_authority = auth_hive_mind
								NOT = { has_authority = auth_machine_intelligence }
								NOT = { is_ai = yes } 
							} 
						} 
					}
					set_planet_flag = PF22_cult
					planet_event = { id = PF22.211 days = 5 random = 45 }
				}
				else_if = {
					limit = { 
						owner = { 
							AND = { 
								NOT = { has_authority = auth_hive_mind }
								NOT = { has_authority = auth_machine_intelligence }
								is_ai = yes
							} 
						} 
					}
					random_list = {
						10 = {}
						10 = {
							set_planet_flag = PF22_cult
							planet_event = { id = PF22.15 days = 5 random = 45 }
						}
					}
				}
			}
			country_event = { id = PF22.30 days = 50 random = 30 }
		}
		if = {
			limit = { NOT = { owner = { has_country_flag = PF22_first_cult } } }
			owner = { set_country_flag = PF22_first_cult }
		}
	}
}


#Initiator event for CULT
planet_event = {
	id = PF22.31
	title = PF22.31.title
	picture = GFX_evt_city_planet
	show_sound = event_scanner
	location = this
	
	desc = {
		text = PF22.31.desc_01
		trigger = { 
			owner = { NOT = { has_country_flag = PF22_cult_known } }
		}
	}
	desc = {
		text = PF22.31.desc_02
		trigger = { 
			owner = { has_country_flag = PF22_cult_known }
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		owner = {
			start_situation = {
				type = situation_PF22_cult
				target = root
				effect = {
					save_event_target_as = new_situation
				}
			}
		}
	}
	
	option = {
		name = PF22.31.a
	}
}

#Alerter event for high cult progression
situation_event = {
	id = PF22.32
	title = PF22.32.title
	desc = PF22.32.desc
	picture = GFX_evt_necrophage
	show_sound = event_scanner
	location = target
	situation = this
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.32.a
	}
}

#Congratulations, you defeated the cult!
situation_event = {
	id = PF22.33
	title = PF22.33.title
	desc = PF22.33.desc
	picture = GFX_evt_city_planet
	show_sound = event_celebration
	location = target
	situation = this
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.33.a
	}
	
	after = { destroy_situation = this }
}

situation_event = {
	id = PF22.35
	title = PF22.35.title
	desc = PF22.35.desc
	picture = GFX_evt_burning_city
	show_sound = event_planetary_riot
	location = target
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
	}
	
	option = {
		name = PF22.35.a
		target = {
			while = {
				count = 2
				remove_last_built_district = yes
			}
		}
	}
}

situation_event = {
	id = PF22.36
	title = PF22.36.title
	desc = PF22.36.desc
	picture = GFX_evt_burning_city
	show_sound = event_planetary_riot
	location = target
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
		exists = target.sector.sector_capital.leader
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
		target.sector.leader = {
			kill_leader = {
				show_notification = yes
			}
		}
	}
	
	option = {
		name = PF22.36.a
	}
}

#You lost; the cult wins and takes over the planet.
situation_event = {
	id = PF22.39
	title = PF22.39.title
	desc = PF22.39.desc
	picture = GFX_evt_city_ruins
	show_sound = event_ghost_town
	location = target
	
	is_triggered_only = yes
	
	immediate = {
		target = {
			PF22_assimilate_world = yes
		}
	}
	
	option = {
		name = PF22.39.a
	}
}

#Set-up event for following events
country_event = {
	id = PF22.50
	hide_window = yes
	
	is_triggered_only = yes
	
	fire_only_once = yes
	
	immediate = {
		event_target:PF22_home_system = {
			create_starbase = {
				owner = event_target:PF22_pf_country
				size = starbase_swarm
				effect = {
					fleet = {
						add_modifier = {
							modifier = PF22_pf_defence_bonus
							days = -1
						}
					}
				}
			}
			while = {
				count = 1
				event_target:PF22_home_system = {
					random_system_planet = {
						create_fleet = {
							name = "NAME_pf_defence_platform"
							effect = {
								set_owner = event_target:PF22_pf_country
								create_ship = {
									name = random
									design = "NAME_pf_defence_platform"
									graphical_culture = "swarm_01"
									effect = {
										add_modifier = {
											modifier = PF22_pf_defence_bonus
											days = -1
										}
									}
								}
								set_location = {
									target = event_target:PF22_home_world
									distance = 15
									angle = random
								}
								if = {
									limit = {
										AND = {
											has_global_flag = ss_solar_storm_installed
											event_target:global_event_country = { is_variable_set = ss_PF_strength }
										}
									}
									add_modifier = {
										modifier = ss_crisis_PF_diff_multiplier
										multiplier = event_target:global_event_country.ss_PF_strength
										days = -1
									}
								}
							}
						}
					}
				}
			}
			while = {
				count = 2
				event_target:PF22_home_system = {
					random_system_planet = {
						create_fleet = {
							name = "NAME_pf_defence_platform"
							effect = {
								set_owner = event_target:PF22_pf_country
								create_ship = {
									name = random
									design = "NAME_pf_defence_platform"
									graphical_culture = "swarm_01"
									effect = {
										add_modifier = {
											modifier = PF22_pf_defence_bonus
											days = -1
										}
									}
								}
								set_location = {
									target = prev
									distance = 15
									angle = random
								}
								if = {
									limit = {
										AND = {
											has_global_flag = ss_solar_storm_installed
											event_target:global_event_country = { is_variable_set = ss_PF_strength }
										}
									}
									add_modifier = {
										modifier = ss_crisis_PF_diff_multiplier
										multiplier = event_target:global_event_country.ss_PF_strength
										days = -1
									}
								}
							}
						}
					}
				}
			}
		}
		# Reclaim Systems
		event_target:PF22_exp_1 = {
			if = {
				limit = { exists = starbase }
				starbase = { set_owner = event_target:PF22_pf_county }
			}
			else = {
				create_starbase = {
					owner = event_target:PF22_pf_country
					size = starbase_swarm
				}
			}
		}
		event_target:PF22_exp_2 = {
			if = {
				limit = { exists = starbase }
				starbase = { set_owner = event_target:PF22_pf_county }
			}
			else = {
				create_starbase = {
					owner = event_target:PF22_pf_country
					size = starbase_swarm
				}
			}
		}
		event_target:PF22_exp_3 = {
			if = {
				limit = { exists = starbase }
				starbase = { set_owner = event_target:PF22_pf_county }
			}
			else = {
				create_starbase = {
					owner = event_target:PF22_pf_country
					size = starbase_swarm
				}
			}
		}
		event_target:PF22_exp_4 = {
			if = {
				limit = { exists = starbase }
				starbase = { set_owner = event_target:PF22_pf_county }
			}
			else = {
				create_starbase = {
					owner = event_target:PF22_pf_country
					size = starbase_swarm
				}
			}
		}
		event_target:PF22_exp_5 = {
			if = {
				limit = { exists = starbase }
				starbase = { set_owner = event_target:PF22_pf_county }
			}
			else = {
				create_starbase = {
					owner = event_target:PF22_pf_country
					size = starbase_swarm
				}
			}
		}
		event_target:PF22_exp_6 = {
			if = {
				limit = { exists = starbase }
				starbase = { set_owner = event_target:PF22_pf_county }
			}
			else = {
				create_starbase = {
					owner = event_target:PF22_pf_country
					size = starbase_swarm
				}
			}
		}
		### Rebuild homeworld
		event_target:PF22_home_world = {
			while = {
				count = 35
				create_pop = { species = event_target:PF22_pf_species }
			}
			## Remove ruined buildings
			remove_building = building_PF22_broken_hive_capital
			remove_building = building_hive_confluence
			remove_building = building_hive_confluence
			remove_building = building_spawning_pool
			remove_building = building_expanded_warren
			
			add_building = building_hive_major_capital
			add_building = building_hive_confluence
			add_building = building_spawning_pool
			add_building = building_expanded_warren
			add_building = building_PF22_pf_fortress
			add_building = building_research_lab_3
			add_building = building_foundry_3
			
			add_district = district_hive 
			add_district = district_hive
			add_district = district_hive
			add_district = district_hive
			
			add_district = district_industrial 
			add_district = district_industrial 
			
			set_colony_type = col_PF22_resurrected
		}
		event_target:PF22_pf_country = {
			set_variable = { which = PF22_cycles_without_reinforcements value = 0 }
			create_leader = {
				class = admiral
				species = event_target:PF22_pf_species
				name = random
				skill = 3
				traits = {
					trait = leader_trait_PF22_admiral
				}
			}
			create_fleet = {
				name = "NAME_PF22_defender_fleet"
				settings = {
					spawn_debris = no
					is_boss = no
				}
				effect = {
					set_owner = event_target:PF22_pf_country
					create_ship = {
						name = random
						prefix = no
						design = "NAME_pf_ship_queen"
						graphical_culture = "swarm_01"
					}
					while = {
						count = 6
						create_ship = {
							name = random
							prefix = no
							design = "NAME_pf_ship_large"
							graphical_culture = "swarm_01"
						}
					}
					while = {
						count = 6
						create_ship = {
							name = random
							prefix = no
							design = "NAME_pf_ship_carrier"
							graphical_culture = "swarm_01"
						}
					}
					while = {
						count = 15
						create_ship = {
							name = random
							prefix = no
							design = "NAME_pf_small"
							graphical_culture = "swarm_01"
						}
					}
					set_location = {
						target = event_target:PF22_home_world
						distance = 20
						angle = random
					}
					if = {
						limit = {
							AND = {
								has_global_flag = ss_solar_storm_installed
								event_target:global_event_country = { is_variable_set = ss_PF_strength }
							}
						}
						add_modifier = {
							modifier = ss_crisis_PF_diff_multiplier
							multiplier = event_target:global_event_country.ss_PF_strength
							days = -1
						}
					}
					assign_leader = last_created_leader
					set_aggro_range = 500
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					queue_actions = {
						repeat = { 
							find_random_planet = {
								found_planet = {
									move_to = this
									orbit_planet = THIS
								}
							}
						}
					}
				}
			}
			set_variable = { which = PF22_num_campaigns value = 0 }
		}
		every_playable_country = {
			country_event = { id = PF22.51 days = 5 random = 15 }
			set_variable = { which = PF22_pf_patience value = 100 }
			country_event = { id = PF22.52 days = 25 random = 75 }
		}
		country_event = { id = PF22.60 days = 100 random = 50 }
	}
}

#Alert: The Prime Flesh stirs.
country_event = {
	id = PF22.51
	title = PF22.51.title
	picture = GFX_evt_infested
	show_sound = event_mystic_reveal
	location = event_target:PF22_home_world
	
	desc = {
		text = PF22.51.desc_01
		trigger = {
			OR = {
				has_country_flag = PF22_pf_ship_apprehended
				has_country_flag = PF22_pf_ship_paid
			}
		}
	} 
	
	desc = {
		text = PF22.51.desc_02
		trigger = {
			NOR = {
				has_country_flag = PF22_pf_ship_apprehended
				has_country_flag = PF22_pf_ship_paid
			}
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.51.a
	}
}


country_event = {
	id = PF22.52
	title = "TRANSMISSION"
	desc = "PF22.52.desc"
	custom_gui = "PF22_DiplomaticEventWindow"

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
		remove_global_flag = PF22_pf_asleep
		set_variable = { which = PF22_pf_patience value = 100 }
		set_variable = { which = PF22_pat_dec_rate value = value:PF22_calculate_patience_decrease }
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.52.a
		response_text = PF22.52.a.response
		is_dialog_only = yes
	}
	option = {
		name = PF22.52.b
		response_text = PF22.52.b.response
		is_dialog_only = yes
	}
	option = {
		name = PF22.52.c
		response_text = PF22.52.c.response
		is_dialog_only = yes
	}
	
	option = {
		name = PF22.52.d
		trigger = {
			owner = { OR = { has_ethic = ethic_fanatic_authoritarian has_ethic = ethic_authoritarian } }
		}
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
	option = {
		name = PF22.52.e
		trigger = {
			owner = { OR = { has_ethic = ethic_fanatic_egalitarian has_ethic = ethic_egalitarian } }
		}
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
	option = {
		name = PF22.52.f
		trigger = {
			owner = { OR = { has_ethic = ethic_fanatic_xenophobe has_ethic = ethic_xenophobe } }
		}
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
	option = {
		name = PF22.52.g
		trigger = {
			owner = { OR = { has_ethic = ethic_fanatic_xenophile has_ethic = ethic_xenophile } }
		}
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
	option = {
		name = PF22.52.h
		trigger = {
			owner = { OR = { has_ethic = ethic_fanatic_militarist has_ethic = ethic_militarist } }
		}
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
	option = {
		name = PF22.52.i
		trigger = {
			owner = { OR = { has_ethic = ethic_fanatic_pacifist has_ethic = ethic_pacifist } }
		}
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
	option = {
		name = PF22.52.j
		trigger = {
			owner = { OR = { has_ethic = ethic_fanatic_spiritualist has_ethic = ethic_spiritualist } }
		}
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
	option = {
		name = PF22.52.k
		trigger = {
			owner = { OR = { has_ethic = ethic_fanatic_materialist  has_ethic = ethic_materialist  } }
		}
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
	option = {
		name = PF22.52.l
		hidden_effect = { country_event = { id = PF22.53 days = 10 } }
	}
}

#Explains to players the mechanics of the crisis
country_event = {
	id = PF22.53
	title = PF22.53.title
	desc = PF22.53.desc
	picture = GFX_evt_infested
	show_sound = event_mystic_reveal
	location = event_target:PF22_home_world
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.53.a
	}
}

#Background: Reduces patience for neighbours, then starts an invasion if necessary, counts up growth over time.
#Also manages army + fleet reinforcement cycles.
#Also manages static improvements to the Prime Flesh based on growth rating.
country_event = {
	id = PF22.60
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		exists = this
		exists = event_target:PF22_pf_country
		has_global_flag = PF22_in_progress
	}
	
	immediate = {
		event_target:PF22_pf_country = {
			if = {
				limit = {
					check_variable = { which = PF22_pf_growth value < 100 }
				}
				change_variable = { which = PF22_pf_growth value = 0.5 }
			}
			if = {
				limit = {
					event_target:PF22_home_system = {
						count_fleet_in_system = {
							count = 0
							limit = {
								owner = { 
									AND = {
										NOT = { is_same_value = event_target:PF22_pf_country }
										has_country_flag = PF22_pf_target
									}
								}
							}
						} # Check if any non-PF fleets of hostile empire are in home system
					}
					count_owned_ship = {
						count < value:PF22_growth_ship_cap
						limit = {
							is_ship_class = shipclass_military
						} # Number of allowed military ships depends on growth
					}
				}
				event_target:PF22_pf_country = {
					if = {
						limit = {
							check_variable = { which = PF22_pf_growth value > 99 }
						}
						random_list = {
							10 = {
								PF22_pf_spawn_attack_fleet = yes
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									PF22_pf_spawn_big_attack_fleet = yes
								}
							}
							10 = {
								PF22_pf_spawn_big_attack_fleet = yes
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									PF22_pf_spawn_big_attack_fleet = yes
								}
							}
						}
					}
					else = {
						PF22_pf_spawn_attack_fleet = yes
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							PF22_pf_spawn_attack_fleet = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						count < value:PF22_growth_ship_cap
						limit = {
							is_ship_class = shipclass_military
						} # Number of allowed military ships depends on growth
					}
				}
				event_target:PF22_pf_country = {
					change_variable = { which = PF22_cycles_without_reinforcements value = 1 }
				}
			}
			event_target:PF22_pf_country = {
				if = {
					limit = {
						check_variable = { which = PF22_cycles_without_reinforcements value > 2 }
					}
					set_variable = { which = PF22_cycles_without_reinforcements value = 0 }
					event_target:PF22_pf_country = {
						PF22_pf_spawn_big_attack_fleet = yes
					}
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						PF22_pf_spawn_big_attack_fleet = yes
					}
				}
			}
			if = {
				limit = {
					event_target:PF22_home_system = {
						count_fleet_in_system = {
							count = 0
							limit = {
								owner = { 
									AND = {
										NOT = { is_same_value = event_target:PF22_pf_country }
										has_country_flag = PF22_pf_target
									}
								}
							}
						} # Check if any non-PF fleets of hostile empire are in home system
					}
					count_owned_ship = {
						count < 100
						limit = {
							is_ship_class = shipclass_transport
						}
					}
				}
				event_target:PF22_home_world = {
					PF22_pf_spawn_transports = yes
				}
			}
			if = {
				limit = {
					AND = {
						check_variable = { which = PF22_pf_growth value > 99 }
						NOT = { has_country_flag = PF22_pf_decay_started }
					}
				}
				country_event = { id = PF22.140 days = 50 random = 50 }
				set_country_flag = PF22_pf_decay_started
				
				# The Prime Flesh dies off by itself after reaching 100 growth.
				# A forgiving mechanic given this is only a mid game crisis.
			}
			
			#They build defence platforms in all owned systems.
			
			every_system_within_border = {
				limit = {
					AND = {
						NOT = { any_fleet_in_system = { any_owned_ship = { is_ship_size = PF22_pf_defence_platform } } }
						any_fleet_in_system = {
							NOR = {
								owner = { is_same_value = event_target:PF22_pf_country }
								owner = { is_hostile = event_target:PF22_pf_country }
							}
						}
						starbase = { owner = { is_same_value = event_target:PF22_pf_country } }
					}
				}
				create_fleet = {
					name = "NAME_pf_defence_platform"
					effect = {
						set_owner = event_target:PF22_pf_country
						create_ship = {
							name = random
							design = "NAME_pf_defence_platform"
							graphical_culture = "swarm_01"
							effect = {
								add_modifier = {
									modifier = PF22_pf_defence_bonus
									days = -1
								}
							}
						}
						set_location = {
							target = prev.star
							distance = 15
							angle = random
						}
						if = {
							limit = {
								AND = {
									has_global_flag = ss_solar_storm_installed
									event_target:global_event_country = { is_variable_set = ss_PF_strength }
								}
							}
							add_modifier = {
								modifier = ss_crisis_PF_diff_multiplier
								multiplier = event_target:global_event_country.ss_PF_strength
								days = -1
							}
						}
					}
				}
			}
		}
		event_target:PF22_home_world = {
			set_variable = { which = PF22_pf_grw_dec value = value:PF22_growth_planet_size }
			if = {
				limit = {
					check_variable = { which = PF22_pf_grw_dec value > this.trigger:planet_size }
				}
				change_planet_size = 2
			}
		}
		every_playable_country = {
			if = {
				limit = {
					check_variable = { which = PF22_pf_patience value > 0 }
				}
				save_event_target_as = PF22_pat_target
				set_variable = { which = PF22_pf_pat_dec value = value:PF22_calculate_patience_decrease }
				subtract_variable = { which = PF22_pf_patience value = this.PF22_pf_pat_dec }
			}
			if = {
				limit = {
					check_variable = { which = PF22_pf_patience value < 0 }
				}
				set_variable = { which = PF22_pf_patience value = 0 }
			}
			
			# PATIENCE WARNINGS
			if = {
				limit = { 
					AND = {
						check_variable = { which = PF22_pf_patience value < 20 } 
						event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
						event_target:PF22_pf_country = { check_variable = { which = event_target:PF22_pf_country.PF22_pf_growth value < 90 } }
						NOT = { has_country_flag = PF22_patience_warning }
						NOT = { is_at_war_with = event_target:PF22_pf_country }
					}
				}
				set_country_flag = PF22_patience_warning
				country_event = { id = PF22.112 }
			}
			
			if = {
				limit = {
					AND = {
						check_variable = { which = PF22_pf_patience value <= 0 }
						NOT = { has_country_flag = PF22_pf_target }
						NOT = { is_at_war_with = event_target:PF22_pf_country }
						#check_variable_arithmetic = {
						#	which = value:PF22_calculate_num_campaigns
						#	value < 4
						#}
					}
				}
				# Start a campaign
				set_country_flag = PF22_pf_target
				country_event = { id = PF22.61 } #Alert players something is happening
				country_event = { id = PF22.62 days = 200 random = 300 } #Actually go to war
				
				set_country_flag = PF22_pf_convert_target
				country_event = { id = PF22.10 days = 5 random = 25 } # Initiate outbreaks
				country_event = { id = PF22.30 days = 5 random = 25 } # Initiate cults
			}
		}
		country_event = { id = PF22.60 days = 100 }
	}
}


#Alert: The Prime Flesh is mobilising!
country_event = {
	id = PF22.61
	title = PF22.61.title
	desc = PF22.61.desc
	picture = GFX_evt_infested
	show_sound = event_sensor_ping
	location = event_target:PF22_home_world
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.61.a
	}
}

#The Prime Flesh declares war.
country_event = {
	id = PF22.62
	title = "TRANSMISSION"
	desc = "PF22.62.desc"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	trigger = {
		has_global_flag = PF22_in_progress
		NOT = { is_at_war_with = event_target:PF22_pf_country }
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
		PF22_pf_declare_war = yes
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.62.a
	}
}

#A captured world is turned into a hive world after 2000 days.
planet_event = {
	id = PF22.65
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = this
		AND = {
			exists = event_target:PF22_pf_country
			owner = { is_same_value = event_target:PF22_pf_country }
		}
		NOT = { is_occupied_flag = yes }
		has_global_flag = PF22_in_progress
	}
	
	immediate = {
		if = {
			limit = { is_artificial = no }
			change_pc = pc_hive
			reroll_deposits = yes
			reroll_planet_modifiers = yes
			set_colony_type = col_default 
			set_planet_entity = {
				entity = PF22_hive_01_entity
			}
		}
		else = {
			set_colony_type = col_default 
		}
	}
}

#A captured world is turned into a hive world after 2000 days.
planet_event = {
	id = PF22.650
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = this
		AND = {
			exists = event_target:PF22_pf_country
			controller = { is_same_value = event_target:PF22_pf_country }
		}
		has_global_flag = PF22_in_progress
	}
	
	immediate = {
		if = {
			limit = { controller = { is_same_value = event_target:PF22_pf_country } }
			set_owner = event_target:PF22_pf_country
			every_owned_species = {
				if = {
					limit = {
						NOT = { has_trait = trait_hive_mind }
					}
					set_citizenship_type = {
						country = event_target:PF22_pf_country
						type = citizenship_assimilation
					}
				}
				modify_species = {
					species = this
					add_trait = trait_PF22_prime
				}
			}
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			event_target:PF22_pf_country = {
				if = {
					limit = {
						check_variable = { which = PF22_pf_growth value < 98 }
					}
					change_variable = { which = PF22_pf_growth value = 2 }
				}
				else = {
					set_variable = { which = PF22_pf_growth value = 100 }
				}
			}
			if = {
				limit = { NOT = { is_artificial = yes } }
				change_pc = pc_hive
				reroll_deposits = yes
				reroll_planet_modifiers = yes
				set_planet_entity = {
					entity = PF22_hive_01_entity
				}
			}
			set_colony_type = col_PF22_resurrected
		}
	}
}

#A world captured by the prime flesh is re-captured by a player. Automatically un-assimilates the population.
#Only occurs if the planet isn't fully converted into an infested world.
#This is a mechanic to make things easier for a player (given this is only a midgame crisis), un-assimilating pops is ordinarily not available to everyone!
planet_event = {
	id = PF22.66
	title = PF22.66.title
	desc = PF22.66.desc
	picture = GFX_evt_hive_mind
	show_sound = event_mystic_reveal
	location = this

	is_triggered_only = yes

	trigger = {
		exists = this
		exists = event_target:PF22_pf_country
		AND = {
			exists = FromFrom
			FromFrom = { is_same_value = event_target:PF22_pf_country }
		}
		AND = {
			exists = From
			From = { is_country_type = default }
			From = { NOT = { has_authority = auth_hive_mind } }
			From = { NOT = { has_authority = auth_machine_intelligence } }
		}
		has_planet_flag = PF22_transforming
		NOT = { is_occupied_flag = yes }
	}
	
	immediate = {
		if = {
			limit = {
				has_modifier = PF22_planet_converting
			}
			remove_modifier = PF22_planet_converting
		}
		solar_system = {
			random_system_ambient_object = {
				limit = { is_ambient_object_type = PF22_pf_planet_converting }
				destroy_ambient_object = this
			}
		}
		remove_planet_flag = PF22_transforming
		every_owned_species = {
			limit = {
				NOT = { is_same_value = event_target:PF22_pf_species }
			}
			modify_species = {
				species = this
				remove_trait = trait_hive_mind
			}
			every_species_pop = {
				limit = {
					planet = {
						is_same_value = root
					}
				}
				add_modifier = {
					modifier = PF22_pop_unassimilating
					days = 720
				}
			}
		}
	}
	
	option = {
		name = PF22.66.a
	}
}

#Explains to players the mechanics of the crisis
#Event explaining to player how assimilating planets works
country_event = {
	id = PF22.67
	title = PF22.67.title
	desc = PF22.67.desc
	picture = GFX_evt_infested
	show_sound = event_mystic_reveal
	location = from
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = PF22.67.a
	}
}

#PF assimilate worlds when they gain control over them.
planet_event = {
	id = PF22.68
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = this
		AND = {
			exists = From
			exists = event_target:PF22_pf_country
			From = { is_same_value = event_target:PF22_pf_country }
		}
		AND = {
			exists = FromFrom
			FromFrom = { NOT = { has_authority = auth_machine_intelligence } }
		}
		NOT = { is_occupied_flag = yes }
	}
	
	is_triggered_only = yes
	
	immediate = {
		PF22_assimilate_world = yes
	}
}



#Custom Diplomacy: Prime Flesh on click.
country_event = {
	id = PF22.100
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = { is_country_type = PF22_prime_flesh }
	}
	
	immediate = {
		if = {
			limit = {
				has_global_flag = PF22_pf_asleep
			}
			country_event = { id = PF22.101 }
		}
		else_if = {
			limit = {
				from = { is_at_war_with = root }
			}
			country_event = { id = PF22.120 }
		}
		else_if = {
			limit = {
				NOT = { has_global_flag = PF22_pf_asleep }
			}
			country_event = { id = PF22.105 }
		}
		save_event_target_as = PF22_pat_target
		set_variable = { which = PF22_pat_dec_rate value = value:PF22_calculate_patience_decrease }
	}
}

#No dialogue when the PF is sleeping.
country_event = {
	id = PF22.101
	title = "TRANSMISSION"
	desc = "PF22.101.desc"
	picture_event_data = {
		room = no_video_feed_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes

	option = {
		name = PF22.101.a
		default_hide_option = yes
	}
}

#Main Dialogue
country_event = {
	id = PF22.105
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	desc = {
		text = PF22.105.desc_01
	}
	desc = {
		text = PF22.105.desc_02
	}
	desc = {
		text = PF22.105.desc_03
	}
	desc = {
		text = PF22.105.desc_04
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				has_authority = auth_hive_mind
			}
		}
	}
	desc = {
		text = PF22.105.desc_05
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				has_authority = auth_hive_mind
			}
		}
	}
	desc = {
		text = PF22.105.desc_06
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				has_authority = auth_machine_intelligence
			}
		}
	}
	desc = {
		text = PF22.105.desc_07
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				has_authority = auth_machine_intelligence
			}
		}
	}
	desc = {
		text = PF22.105.desc_08
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_machine_terminator
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_09
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_machine_terminator
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_10
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_11
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_ethic = ethic_egalitarian
					has_ethic = ethic_fanatic_egalitarian
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_12
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_13
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_14
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_15
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_ethic = ethic_pacifist
					has_ethic = ethic_fanatic_pacifist
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_16
		trigger = {
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_17
		trigger = { 
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				OR = {
					has_ethic = ethic_materialist
					has_ethic = ethic_fanatic_materialist
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_18
		trigger = { 
			event_target:PF22_pf_country = { has_country_flag = PF22_pf_gone_mad }
		}
	}
	desc = {
		text = PF22.105.desc_19
		trigger = { 
			event_target:PF22_pf_country = { has_country_flag = PF22_pf_gone_mad }
		}
	}
	desc = {
		text = PF22.105.desc_20
		trigger = { 
			event_target:PF22_pf_country = { has_country_flag = PF22_pf_gone_mad }
		}
	}
	desc = {
		text = PF22.105.desc_21
		trigger = { 
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				any_war = {
					using_war_goal = {
						type = wg_PF22_pf_proxy_war_offence
						owner = prev
					}
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_22
		trigger = { 
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				any_war = {
					using_war_goal = {
						type = wg_PF22_pf_proxy_war_offence
						owner = prev
					}
				}
			}
		}
	}
	desc = {
		text = PF22.105.desc_23
		trigger = { 
			AND = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				any_war = {
					using_war_goal = {
						type = wg_PF22_pf_proxy_war_offence
						owner = prev
					}
				}
			}
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.105.a
		hidden_effect = { country_event = { id = PF22.106 } }
	}
	
	option = {
		name = PF22.105.b
		hidden_effect = { country_event = { id = PF22.107 } }
		ai_chance = {
			factor = 0.0
		}
	}
	
	option = {
		name = PF22.105.c
		hidden_effect = { country_event = { id = PF22.130 } }
		ai_chance = {
			factor = 0.0
		}
	}
	
	option = {
		name = PF22.105.d
	}
}

#Wait; you actually want to wage war?

country_event = {
	id = PF22.106
	title = "TRANSMISSION"
	desc = PF22.106.desc
	custom_gui = "PF22_DiplomaticEventWindow"

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.106.a
		hidden_effect = {
			set_country_flag = PF22_pf_target
				
			set_country_flag = PF22_pf_convert_target
			country_event = { id = PF22.10 days = 5 random = 25 } # Initiate outbreaks
			country_event = { id = PF22.30 days = 5 random = 25 } # Initiate cults
			
			PF22_pf_declare_war = yes
			set_variable = { which = PF22_pf_patience value = 0 }
		}
	}
	
	option = {
		name = PF22.106.b
	}
}

#Give them free stuff to increase their patience.
country_event = {
	id = PF22.107
	hide_window = yes
	
	immediate = {
		if = {
			limit = {
				AND = {
					check_variable = { which = event_target:PF22_pf_country.PF22_pf_growth value < 30 }
					event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				}
			}
			country_event = { id = PF22.108 } # Take donation of energy
		}
		else_if = {
			limit = {
				AND = {
					check_variable = { which = event_target:PF22_pf_country.PF22_pf_growth value >= 30 }
					check_variable = { which = event_target:PF22_pf_country.PF22_pf_growth value < 60 }
					event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				}
			}
			country_event = { id = PF22.109 } # Take donation of pops
		}
		else_if = {
			limit = {
				AND = {
					check_variable = { which = event_target:PF22_pf_country.PF22_pf_growth value >= 60 }
					check_variable = { which = event_target:PF22_pf_country.PF22_pf_growth value < 90 }
					event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
				}
			}
			country_event = { id = PF22.110 } # Take donation of pops
		}
		else = {
			country_event = { id = PF22.111 } # Take no tributes
		}
	}

	is_triggered_only = yes
}

#Takes tribute of energy
country_event = {
	id = PF22.108
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	desc = {
		text = PF22.108.desc_01
	}
	desc = {
		text = PF22.108.desc_02
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
		set_variable = { which = PF22_tribute_multipler value = event_target:PF22_pf_country.PF22_pf_growth }
		multiply_variable = { which = PF22_tribute_multipler value = 100 }
		change_variable = { which = PF22_tribute_multipler value = 2000 }
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.108.a
		custom_tooltip = PF22_increase_patience
		add_resource = {
			energy = -1
			mult = PF22_tribute_multipler
		}
		allow = {
			has_country_resource = { type = energy amount > this.PF22_tribute_multipler }
		}
		hidden_effect = {
			event_target:PF22_pf_country = {
				change_variable = { which = PF22_pf_growth value = 1.5 }
			}
			change_variable = { which = PF22_pf_patience value = 25 }
			if = {
				limit = {
					check_variable = { which = PF22_pf_patience value > 100 }
				}
				set_variable = { which = PF22_pf_patience value = 100 }
			}
			set_timed_country_flag = { flag = PF22_pf_tribute_paid days = 900 }
		}
	}
	
	option = {
		name = PF22.108.b
	}
}

#Takes small tribute of pops
country_event = {
	id = PF22.109
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	desc = {
		text = PF22.109.desc_01
	}
	desc = {
		text = PF22.109.desc_02
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.108.a
		custom_tooltip = PF22_pop_tribute_low
		hidden_effect = {
			event_target:PF22_pf_country = {
				change_variable = { which = PF22_pf_growth value = 1.5 }
			}
			change_variable = { which = PF22_pf_patience value = 25 }
			while = {
				count = 3
				random_owned_planet = {
					random_owned_pop = {
						kill_pop = yes
					}
				}
			}
			if = {
				limit = {
					check_variable = { which = PF22_pf_patience value > 100 }
				}
				set_variable = { which = PF22_pf_patience value = 100 }
			}
			set_timed_country_flag = { flag = PF22_pf_tribute_paid days = 900 }
		}
	}
	
	option = {
		name = PF22.108.b
	}
}

#Takes large tribute of pops
country_event = {
	id = PF22.110
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	desc = {
		text = PF22.109.desc_01
	}
	desc = {
		text = PF22.109.desc_02
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.108.a
		custom_tooltip = PF22_pop_tribute_high
		hidden_effect = {
			event_target:PF22_pf_country = {
				change_variable = { which = PF22_pf_growth value = 1.5 }
			}
			change_variable = { which = PF22_pf_patience value = 25 }
			while = {
				count = 6
				random_owned_planet = {
					random_owned_pop = {
						kill_pop = yes
					}
				}
			}
			if = {
				limit = {
					check_variable = { which = PF22_pf_patience value > 100 }
				}
				set_variable = { which = PF22_pf_patience value = 100 }
			}
			set_timed_country_flag = { flag = PF22_pf_tribute_paid days = 900 }
		}
	}
	
	option = {
		name = PF22.108.b
	}
}

# Won't take any tribute.
country_event = {
	id = PF22.111
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	desc = {
		text = PF22.111.desc_01
		trigger = {
			event_target:PF22_pf_country = { has_country_flag = PF22_pf_gone_mad }
		}
	}
	desc = {
		text = PF22.111.desc_02
		trigger = {
			event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.111.a
	}
}

# Demands tribute, or else they will go to war soon
country_event = {
	id = PF22.112
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	desc = {
		text = PF22.112.desc_01
	}
	desc = {
		text = PF22.112.desc_02
	}
	
	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.112.a
		hidden_effect = { country_event = { id = PF22.107 } }
	}
	
	option = {
		name = PF22.112.b
	}
}

# Comms during war.
country_event = {
	id = PF22.120
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	desc = {
		text = PF22.120.desc_01
	}
	desc = {
		text = PF22.120.desc_02
	}
	desc = {
		text = PF22.120.desc_03
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.120.a
		hidden_effect = {
			if = {
				limit = {
					event_target:PF22_pf_country = { check_variable = { which = PF22_pf_growth value < 70 } }
				}
				country_event = { id = PF22.121 } # Give one populated world as surrender offer
			}
			else = {
				country_event = { id = PF22.122 } # Sorry, not interested in peace!
			}
		}
	}
	
	option = {
		name = PF22.120.b
	}
}

# The prime flesh will accept peace if you give them a planet of their choosing.
country_event = {
	id = PF22.121
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	location = event_target:PF22_pf_surrender_target
	
	desc = {
		text = PF22.121.desc_01
		trigger = {
			NOT = { has_country_flag = PF22_offer_received }
		}
	}
	desc = {
		text = PF22.121.desc_02
		trigger = {
			has_country_flag = PF22_offer_received
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
		if = {
			limit = {
				event_target:PF22_pf_country = { check_variable = { which = PF22_pf_growth value < 70 } }
			}
			random_owned_planet = {
				limit = { has_planet_flag = PF22_surrender_offer }
				remove_planet_flag = PF22_surrender_offer
			}
		}
		if = {
			limit = {
				AND = {
					NOT = { any_owned_planet = { has_planet_flag = PF22_surrender_offer } }
					event_target:PF22_pf_country = { check_variable = { which = PF22_pf_growth value < 70 } }
				}
			}
			# Select planet as surrender cost
			if = {
				limit = {
					event_target:PF22_pf_country = { check_variable = { which = PF22_pf_growth value < 40 } }
				}
				random_owned_planet = {
					weights = {
						base = 1
						modifier = {
							add = 6
							AND = {
								num_pops > 15
								num_pops < 40
							}
						}
						modifier = {
							add = 1
							num_pops >= 40
						}
					}
					set_planet_flag = PF22_surrender_offer
				}
			}
			else = {
				random_owned_planet = {
					weights = {
						base = 1
						modifier = {
							add = 1
							AND = {
								num_pops > 15
								num_pops < 40
							}
						}
						modifier = {
							add = 10
							num_pops >= 40
						}
					}
					set_planet_flag = PF22_surrender_offer
				}
			}
		}
		random_owned_planet = {
			limit = { has_planet_flag = PF22_surrender_offer }
			save_event_target_as = PF22_pf_surrender_target
		}
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.121.a
		hidden_effect = {
			event_target:PF22_pf_surrender_target = {
				PF22_assimilate_world = yes
			}
			PF22_pf_settle_peace = yes
		}
	}
	
	option = {
		name = PF22.121.b
	}
	
	after = {
		hidden_effect = {
			set_country_flag = PF22_offer_received
		}
	}
}

# The Prime Flesh will not accept peace.
country_event = {
	id = PF22.122
	title = "TRANSMISSION"
	custom_gui = "PF22_DiplomaticEventWindow"
	
	desc = {
		text = PF22.122.desc_01
		trigger = {
			event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
		}
	}
	desc = {
		text = PF22.122.desc_02
		trigger = {
			event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
		}
	}
	desc = {
		text = PF22.122.desc_03
		trigger = {
			event_target:PF22_pf_country = { has_country_flag = PF22_pf_gone_mad }
		}
	}
	desc = {
		text = PF22.122.desc_04
		trigger = {
			event_target:PF22_pf_country = { has_country_flag = PF22_pf_gone_mad }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.122.a
	}
}

#PF gives the player the task of waging war on a neighbour.
country_event = {
	id = PF22.130
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:PF22_pf_country
	}
	
	immediate = {
		if = {
			limit = {
				event_target:PF22_pf_country = { NOT = { has_country_flag = PF22_pf_gone_mad } }
			}
			country_event = { id = PF22.131 } #Go to war for us...
		}
		else = {
			country_event = { id = PF22.132 } #Sorry, we want to eat you instead!
		}
		
	}
}

# The Prime Flesh asks the player to go to war with a neighbour for favour.
country_event = {
	id = PF22.131
	title = "TRANSMISSION"
	desc = PF22.131.desc
	custom_gui = "PF22_DiplomaticEventWindow"

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.131.a
		#every_neighbor_country = {
		#	root = {
		#		add_casus_belli = { 
		#			type = cb_PF22_proxy_war 
		#			who = prev
		#			days = 1000
		#		}
		#	}
		#}
		hidden_effect = { set_country_flag = PF22_proxy_war_ticket }
	}
	
	option = {
		name = PF22.131.b
	}
}

country_event = {
	id = PF22.132
	title = "TRANSMISSION"
	desc = PF22.132.desc
	custom_gui = "PF22_DiplomaticEventWindow"

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.132.a
	}
}


#Controller event for the decay of the Prime Flesh.
country_event = {
	id = PF22.140
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:PF22_pf_country
	}
	
	immediate = {
		set_country_flag = PF22_pf_gone_mad
		every_playable_country = {
			limit = { is_country_type = default }
			country_event = { id = PF22.141 days = 10 }
		}
		
		# country_event = { id = PF22.142 days = 1000 random = 1500 }
		# in PF22.60, the PF now lose patience rapidly and have unique interactions.
		# They will basically go to war with everyone.
		# After PF22.142, they die off by themselves.
	}
}

country_event = {
	id = PF22.141
	title = "TRANSMISSION"
	desc = PF22.141.desc
	custom_gui = "PF22_DiplomaticEventWindow"

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.141.a
	}
}

# The Prime Flesh dies off due to LIGMA (madness)
country_event = {
	id = PF22.142
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = event_target:PF22_pf_country 
	}
	
	immediate = {
		every_playable_country = {
			limit = { is_country_type = default }
			country_event = { id = PF22.143 days = 10 }
		}
		# The Prime Flesh loses, oh well!
		PF22_return_all_transforming_colonies = yes
		PF22_pf_end_crisis = yes
		
	}
}

# Tell everyone the PF is dead.
country_event = {
	id = PF22.143
	title = PF22.143.title
	desc = PF22.143.desc
	picture = GFX_evt_crisis_defeated
	show_sound = event_celebration

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
		add_modifier = {
			modifier = PF22_pf_defeated
			days = 1800
		}
	}
	
	option = {
		name = PF22.143.a
	}
}

#The home world of the prime flesh changes owners to someone else.
planet_event = {
	id = PF22.150
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = this
		AND = {
			exists = FromFrom
			exists = event_target:PF22_pf_country
			FromFrom = { is_same_value = event_target:PF22_pf_country }
		}
		AND = {
			exists = From
			From = { is_country_type = default }
		}
		has_planet_flag = PF22_home_world
		NOT = { has_global_flag = PF22_pf_defeated }
	}
	
	immediate = {
		#every_playable_country = {
		#	limit = { 
		#		AND = {
		#			is_country_type = default 
		#			NOT = { is_same_value = from }
		#		}
		#	}
		#	country_event = { id = PF22.151 days = 15 }
		#}
		FROM = { 
			country_event = { id = PF22.153 days = 15 }
		}
	}
}

#Alerter event, the PF are defeated.
country_event = {
	id = PF22.151
	title = PF22.151.title
	desc = PF22.151.desc
	picture = GFX_evt_victorious_army
	show_sound = event_celebration

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.151.a
		add_modifier = {
			modifier = PF22_pf_defeated
			days = 1800
		}
		trigger = { NOT = { has_country_flag = PF22_pf_conquerer } }
	}
	
	option = {
		name = PF22.151.b
		trigger = { has_country_flag = PF22_pf_conquerer }
		add_modifier = {
			modifier = PF22_pf_defeated
			days = 1800
		}
		enable_special_project = { 
			name = PF22_PF_LOOT_PROJECT
			owner = this
			location = event_target:PF22_home_world
		}
		add_relic = r_pf_sample
		generate_parade_city = yes
		start_situation = {
			type = PF22_pf_defeat_celebration_opportunity
			target = event_target:parade_city
			effect = {
				set_situation_flag = standard_unity_reward
			}
		}
	}
}

# Forces have landed and found... Nothing?
country_event = {
	id = PF22.152
	title = PF22.152.title
	desc = PF22.152.desc
	picture = GFX_evt_victorious_army
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.152.a
		hidden_effect = { country_event = { id = PF22.153 } }
	}
}

#Empire which landed on the PF home world gets a special convo.
country_event = {
	id = PF22.153
	title = "TRANSMISSION"
	desc = PF22.153.desc

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.153.a
		response_text = PF22.153.a.response
		is_dialog_only = yes
	}
	
	option = {
		name = PF22.153.b
		response_text = PF22.153.b.response
		is_dialog_only = yes
	}
	
	option = {
		name = PF22.153.c
		response_text = PF22.153.c.response
		is_dialog_only = yes
	}
	
	option = {
		name = PF22.153.d
		response_text = PF22.153.d.response
		is_dialog_only = yes
	}
	
	option = {
		name = PF22.153.e
		hidden_effect = { country_event = { id = PF22.154 } }
	}
}

# Player decides the PF's fate...
country_event = {
	id = PF22.154
	title = PF22.154.title
	desc = PF22.154.desc
	picture = GFX_evt_victorious_army
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.154.a
		custom_tooltip = PF22.154.a.tooltip
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = PF22_pf_defeated } }
				set_global_flag = PF22_pf_defeated
			}
			set_country_flag = PF22_pf_conquerer
			
			# The Prime Flesh loses, oh well!
			PF22_return_all_transforming_colonies = yes
			PF22_pf_end_crisis = yes
			
			every_playable_country = {
				country_event = { id = PF22.151 days = 15 }
			}
		}
	}
	
	option = {
		name = PF22.154.b
		custom_tooltip = PF22.154.b.tooltip
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = PF22_pf_defeated } }
				set_global_flag = PF22_pf_defeated
			}
			save_global_event_target_as = PF22_pf_dominator
			
			PF22_return_all_transforming_colonies = yes
			
			event_target:PF22_home_world = {
				set_owner = event_target:PF22_pf_country
				if = {
					limit = { exists = solar_system.starbase }
					solar_system.starbase = {
						set_owner = event_target:PF22_pf_country
					}
				}
				else = {
					solar_system = {
						create_starbase = {
							size = starbase_outpost
							owner = event_target:PF22_pf_country
						}
					}
				}
			}
			
			PF22_vassilize_pf = yes
		}
	}
}

#The home world of the prime flesh is destroyed.
planet_event = {
	id = PF22.160
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = this
		exists = event_target:PF22_pf_country
		AND = {
			exists = owner
			owner = { is_same_value = event_target:PF22_pf_country }
		}
		has_planet_flag = PF22_home_world
		NOT = { has_global_flag = PF22_pf_defeated }
	}
	
	immediate = {
		every_playable_country = {
			limit = { is_country_type = default }
			country_event = { id = PF22.161 days = 15 }
		}
		if = {
			limit = { NOT = { has_global_flag = PF22_pf_defeated } }
			set_global_flag = PF22_pf_defeated
		}
		if = {
			limit = { exists = from }
			from = { 
				set_country_flag = PF22_pf_conquerer
			}
		}
		
		# The Prime Flesh loses, oh well!
		PF22_return_all_transforming_colonies = yes
		PF22_pf_end_crisis = yes
	}
}

#Alerter event, the PF are defeated.
country_event = {
	id = PF22.161
	title = PF22.161.title
	desc = PF22.161.desc
	picture = GFX_evt_crisis_defeated
	show_sound = event_celebration

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.161.a
		trigger = { NOT = { has_country_flag = PF22_pf_conquerer } }
		add_modifier = {
			modifier = PF22_pf_defeated
			days = 1800
		}
	}
	
	option = {
		name = PF22.161.b
		trigger = { has_country_flag = PF22_pf_conquerer }
		add_modifier = {
			modifier = PF22_pf_defeated
			days = 1800
		}
		enable_special_project = { 
			name = PF22_PF_LOOT_PROJECT
			owner = this
			location = event_target:PF22_home_world
		}
		add_relic = r_pf_sample
		generate_parade_city = yes
		start_situation = {
			type = PF22_pf_defeat_celebration_opportunity
			target = event_target:parade_city
			effect = {
				set_situation_flag = standard_unity_reward
			}
		}
	}
}

ship_event = {
	id = PF22.170
	title = PF22.170.title
	desc = PF22.170.desc
	picture = GFX_evt_ship_in_orbit_3
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.170.a
		owner = {
			add_tech_progress = { 
				tech = tech_PF22_pf_weapons
				progress = 0.2
			}
			add_tech_progress = { 
				tech = tech_sentry_array
				progress = 0.2
			}
			add_tech_progress = { 
				tech = tech_quantum_catapult
				progress = 0.2
			}
		}
		event_target:PF22_home_world = {
			add_deposit = d_alloys_10
			add_deposit = d_physics_10
			add_deposit = d_engineering_10
			add_deposit = d_society_10
		}
	}
}

#Removes trait from population after activation of relic.
country_event = {
	id = PF22.180
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
		every_owned_species = {
			modify_species = {
				species = this
				remove_trait = trait_PF22_temp_bonus
			}
		}
	}
}

#Adds trait to population after activation of relic.
country_event = {
	id = PF22.181
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
		every_owned_species = {
			modify_species = {
				species = this
				add_trait = trait_PF22_temp_bonus
			}
		}
		country_event = { id = PF22.180 days = 3600 }
	}
}



#Machines are immune to diseases
planet_event = {
	id = PF22.200
	title = PF22.200.title
	desc = PF22.200.desc
	picture = GFX_evt_city_planet
	show_sound = event_scanner
	location = this
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.200.a
		add_modifier = {
			modifier = PF22_machine_disease
			days = 1000
		}
	}
	
	after = {
		hidden_effect = {
			owner = { set_country_flag = PF22_infection_known }
		}
	}
}


#Disease outbreaks for Hive Minds
planet_event = {
	id = PF22.210
	title = PF22.210.title
	picture = GFX_evt_city_planet
	show_sound = event_scanner
	location = this
	
	desc = {
		text = PF22.210.desc_01
		trigger = { 
			owner = { NOT = { has_country_flag = PF22_infection_known } }
		}
	}
	desc = {
		text = PF22.210.desc_02
		trigger = { 
			owner = { has_country_flag = PF22_infection_known }
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		owner = {
			start_situation = {
				type = situation_PF22_infestation
				target = root
				effect = {
					save_event_target_as = new_situation
				}
			}
		}
	}
	
	option = {
		name = PF22.210.a
	}
	
	after = {
		hidden_effect = {
			owner = { set_country_flag = PF22_infection_known }
		}
	}
}

#Cults for Hive Minds
planet_event = {
	id = PF22.211
	title = PF22.211.title
	picture = GFX_evt_city_planet
	show_sound = event_scanner
	location = this
	
	desc = {
		text = PF22.211.desc_01
		trigger = { 
			owner = { NOT = { has_country_flag = PF22_cult_known } }
		}
	}
	desc = {
		text = PF22.211.desc_02
		trigger = { 
			owner = { has_country_flag = PF22_cult_known }
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		owner = {
			start_situation = {
				type = situation_PF22_cult_hive
				target = root
				effect = {
					save_event_target_as = new_situation
				}
			}
		}
	}
	
	option = {
		name = PF22.211.a
	}
	
	after = {
		hidden_effect = {
			owner = { set_country_flag = PF22_cult_known }
		}
	}
}

#Situation during war to get loot
country_event = {
	id = PF22.220
	title = PF22.220.title
	desc = PF22.220.desc
	picture = GFX_evt_small_space_battle
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	immediate = {
		set_country_flag = PF22_loot_situation_gen
		start_situation = {
			type = situation_PF22_loot
			target = root
		}
	}
	
	option = {
		name = PF22.220.a
	}
}

#counts destroyed ships
country_event = {
	id = PF22.221
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = PF22_prime_flesh
		exists = from
		from = {
			is_country_type = default
		}
		from = {
			any_situation = {
				is_situation_type = situation_PF22_loot
			}
		}
	}
	
	immediate = {
		from = { 
			random_situation = {
				limit = {
					is_situation_type = situation_PF22_loot
				}
				if = {
					limit = { has_global_flag = ss_crisis_hardmode }
					add_situation_progress = 0.4
				}
				else = {
					add_situation_progress = 0.6
				}
			}
		}
	}
}

# Gives them a tech to deal more damage to the PF
country_event = {
	id = PF22.222
	title = PF22.222.title
	desc = PF22.222.desc
	picture = GFX_evt_infested
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.222.a
		add_modifier = {
			modifier = PF22_pf_damange_bonus_1
			days = -1
		}
	}
}

# Reverse engineer bio-plasma weaponry
country_event = {
	id = PF22.223
	title = PF22.223.title
	desc = PF22.223.desc
	picture = GFX_evt_infested
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.223.a
		add_tech_progress = { 
			tech = tech_PF22_pf_weapons
			progress = 0.5
		}
		add_modifier = {
			modifier = PF22_pf_damange_bonus_2
			days = -1
		}
		hidden_effect = {
			if = {
				limit = { has_modifier = PF22_pf_damange_bonus_1 }
				remove_modifier = PF22_pf_damange_bonus_1
			}
		}
	}
}

# Give access to special trait.
country_event = {
	id = PF22.224
	title = PF22.224.title
	desc = PF22.224.desc
	picture = GFX_evt_infested
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.224.a
		add_modifier = {
			modifier = PF22_pf_damange_bonus_3
			days = -1
		}
		custom_tooltip = PF22.224.a.tooltip
		hidden_effect = {
			set_country_flag = PF22_sp_trait
			if = {
				limit = { has_modifier = PF22_pf_damange_bonus_2 }
				remove_modifier = PF22_pf_damange_bonus_2
			}
		}
	}
}

# Gives player option to end the crisis by vassalising the PF
country_event = {
	id = PF22.225
	title = PF22.225.title
	desc = PF22.225.desc
	picture = GFX_evt_hive_mind
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.225.a
		enable_special_project = { 
			name = "PF22_VASSLIZE_PF"
			owner = root
		}
	}
	
	after = { destroy_situation = this }
}

country_event = {
	id = PF22.226
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
		save_global_event_target_as = PF22_pf_dominator
		PF22_return_all_transforming_colonies = yes
	
		event_target:PF22_home_world = {
			set_owner = event_target:PF22_pf_country
			if = {
				limit = { exists = solar_system.starbase }
				solar_system.starbase = {
					set_owner = event_target:PF22_pf_country
				}
			}
			else = {
				solar_system = {
					create_starbase = {
						size = starbase_outpost
						owner = event_target:PF22_pf_country
					}
				}
			}
		}

		PF22_vassilize_pf = yes
	}
}

#Hooray, the PF got vassilized!
country_event = {
	id = PF22.227
	title = PF22.227.title
	picture = GFX_evt_crisis_defeated
	show_sound = event_celebration
	
	desc =  {
		trigger = {
			OR = {
				NOT = { exists = event_target:PF22_pf_dominator }
				NOT = { is_same_value = event_target:PF22_pf_dominator }
			}
		}
		text = PF22.227.desc_01
	}
	
	desc =  {
		trigger = {
			AND = {
				exists = event_target:PF22_pf_dominator
				is_same_value = event_target:PF22_pf_dominator
			}
		}
		text = PF22.227.desc_02
	}

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.227.a
		add_modifier = {
			modifier = PF22_pf_defeated
			days = 1800
		}
		trigger = {
			OR = {
				NOT = { exists = event_target:PF22_pf_dominator }
				NOT = { is_same_value = event_target:PF22_pf_dominator }
			}
		}
	}
	
	option = {
		name = PF22.227.b
		trigger = {
			AND = {
				exists = event_target:PF22_pf_dominator
				is_same_value = event_target:PF22_pf_dominator
			}
		}
		add_modifier = {
			modifier = PF22_pf_defeated
			days = 1800
		}
		add_relic = r_pf_sample
		generate_parade_city = yes
		start_situation = {
			type = PF22_pf_defeat_celebration_opportunity
			target = event_target:parade_city
			effect = {
				set_situation_flag = standard_unity_reward
			}
		}
	}
}

# Extra event for Cult: A precinct office is sabotaged
situation_event = {
	id = PF22.230
	title = PF22.230.title
	picture = GFX_evt_necrophage
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	desc = {
		text = PF22.230.desc_01
		trigger = { target.owner = { NOT = { has_authority = auth_hive_mind } } }
	}
	desc = {
		text = PF22.230.desc_02
		trigger = { target.owner = { has_authority = auth_hive_mind } }
	}
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_1
			current_stage = stage_2
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
		target = { 
			OR = {
				has_building = building_precinct_house 
				has_building = building_hall_judgment  
				has_building = building_sentinel_posts 
				has_building = building_psi_corps 
			}
		}
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
	}
	
	option = {
		name = PF22.230.a
		trigger = { target.owner = { NOT = { has_authority = auth_hive_mind } } } 
	}
	option = {
		name = PF22.230.b
		trigger = { target.owner = { has_authority = auth_hive_mind } }
	}
	
	after = {
		hidden_effect = {
			target = {
				if = {
					limit = {
						has_building = building_hall_judgment 
					}
					ruin_building = building_hall_judgment 
				}
				else_if = {
					limit = {
						has_building = building_psi_corps 
					}
					ruin_building = building_psi_corps 
				}
				else_if = {
					limit = {
						has_building = building_precinct_house 
					}
					ruin_building = building_precinct_house 
				}
				else_if = {
					limit = {
						has_building = building_sentinel_posts 
					}
					ruin_building = building_sentinel_posts 
				}
			}
		}
	}
}

# Extra event for Cult: A profane ceremony is held.
situation_event = {
	id = PF22.231
	title = PF22.231.title
	desc = PF22.231.desc
	picture = GFX_evt_necrophage
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_2
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { target.owner = { has_authority = auth_hive_mind } }
		NOT = { has_situation_flag = PF22_event }
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
	}
	
	option = {
		name = PF22.231.a
		hidden_effect = {
			target.owner = { set_timed_country_flag = { flag = PF22_ceremony_refused days = 900 } }
		}
	}
	
	option = {
		name = PF22.231.b
		target = {		
			add_modifier = {
				modifier = PF22_ceremony
				days = 360
			}
		}
		hidden_effect = {
			target.owner = { set_timed_country_flag = { flag = PF22_ceremony_accepted days = 900 } }
		}
	}
}

#Bonus cult events: Some pops disappear
situation_event = {
	id = PF22.232
	title = PF22.232.title
	desc = PF22.232.desc
	picture = GFX_evt_necrophage
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_2
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
	}
	
	option = {
		name = PF22.232.a
		hidden_effect = {
			target.owner = { country_event = { id = PF22.233 } }
		}
		trigger = { target.owner = { NOT = { has_authority = auth_hive_mind } } } 
	}
	
	option = {
		name = PF22.232.b
		trigger = { target.owner = { NOT = { has_authority = auth_hive_mind } } } 
	}
	
	option = {
		name = PF22.232.c
		hidden_effect = {
			target.owner = { country_event = { id = PF22.233 } }
		}
		trigger = { target.owner = { has_authority = auth_hive_mind } }
	}
	
	option = {
		name = PF22.232.d
		trigger = { target.owner = { has_authority = auth_hive_mind } }
	}
	
	after = {
		target = {
			random_owned_pop = { kill_pop = yes }
		}
	}
}

country_event = {
	id = PF22.233
	title = "TRANSMISSION"
	desc = "PF22.233.desc"
	custom_gui = "PF22_DiplomaticEventWindow"

	diplomatic = yes

	picture_event_data = {
		portrait = arthropoid_massive_15_PF22_portrait  
		room = PF22_pf_room
	}
	
	immediate = {
	}

	is_triggered_only = yes
	
	option = {
		name = PF22.233.a
		response_text = PF22.233.a.response
	}
	option = {
		name = PF22.233.b
		response_text = PF22.233.b.response
	}
}

#Some pops gene mod themselves to look like the PF
situation_event = {
	id = PF22.234
	title = PF22.234.title
	desc = PF22.234.desc
	picture = GFX_evt_necrophage
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_2
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
		target = {
			owner = {
				#create_species = {
				#	is_mod = yes
				#	name = NAME_pf_neo_species
				#	namelist = this
				#	plural = NAME_pf_neo_species_plural
				#	class = PF22_PRIME_FLESH_CLASS
				#	homeworld = this.species
				#	portrait = arthropoid_massive_15_PF22_portrait
				#	effect = {
				#		save_event_target_as = PF22_ascended_species
				#	}
				#}
				create_species = {
					name = "NAME_pf_neo_species"
					plural = "NAME_pf_species_plural"
					class = PF22_PRIME_FLESH_CLASS 
					portrait = arthropoid_massive_15_PF22_portrait
					namelist = this
					homeworld = this.species
					effect = {
						save_event_target_as = PF22_ascended_species
					}
				}
				event_target:PF22_ascended_species = {
					change_species_portrait = arthropoid_massive_15_PF22_portrait
					modify_species = {
						species = this
						add_trait = trait_PF22_prime
					}
				}
			}
			
			while = {
				count = 2
				random_owned_pop = {
					limit = { NOT = { has_pop_flag = PF22_ascended } }
					change_species = event_target:PF22_ascended_species
					set_pop_flag = PF22_ascended
				}
			}
		}
	}
	
	option = {
		name = PF22.234.a
		hidden_effect = {
			target.owner = { country_event = { id = PF22.233 } }
		}
		trigger = {
			owner = { 
				NOR = { 
					has_ethic = ethic_fanatic_egalitarian
					has_ethic = ethic_egalitarian
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_xenophile
				} 
			}
		}
		target = {
			every_owned_pop = {
				limit = { species = { is_same_value = event_target:PF22_ascended_species } }
				kill_pop = yes
			}
		}
	}
	
	option = {
		name = PF22.234.b
		trigger = {
			owner = { 
				NOR = { 
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
					has_authority = auth_hive_mind
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_machine_terminator
				} 
			}
		}
	}
	
	option = {
		name = PF22.234.c
		trigger = {
			owner = { 
				AND = {
					has_authority = auth_hive_mind
					NOT = { has_valid_civic = civic_hive_devouring_swarm }
				} 
			}
		}
	}
}

#A new cultist faction spawns.
situation_event = {
	id = PF22.235
	title = PF22.235.title
	desc = PF22.235.desc
	picture = GFX_evt_necrophage
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_2
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
		target.owner = { NOT = { has_country_flag = PF22_pf_faction_spawned } }
		target.owner = { 
			AND = {
				NOT = { has_authority = auth_hive_mind }
				OR = {
					has_ethic = ethic_egalitarian
					has_ethic = ethic_xenophile
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_egalitarian
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
		target.owner = { 
			set_country_flag = PF22_cultist_faction_allowed 
			set_country_flag = PF22_pf_faction_spawned
		}
		target = {
			while = {
				count = 6
				random_owned_pop = {
					limit = { planet = { owner = { any_situation = { target = { is_same_value = prevprevprev } } } } }
					set_pop_flag = PF22_cultist
				}
			}
		}
	}
	
	option = {
		name = PF22.235.a
	}
	
	after = {
		hidden_effect = {
			target.owner = { 
				set_country_flag = PF22_pf_faction_spawn
				set_timed_country_flag = { flag = PF22_pf_faction_spawn_timed days = 4650 }
				country_event = { id = PF22.236 days = 20 }
			}
		}
	}
}

country_event = {
	id = PF22.236
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		enable_faction_of_type = PF22_pf_sympathisers
	}
}

country_event = {
	id = PF22.237
	title = PF22.237.title
	desc = PF22.237.desc
	picture = GFX_evt_necrophage
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.237.a
	}
}

situation_event = {
	id = PF22.238
	title = PF22.238.title
	desc = PF22.238.desc
	picture = GFX_evt_necrophage
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.238.a
		situation_event = { id = PF22.230 }
	}
	option = {
		name = PF22.238.b
		situation_event = { id = PF22.231 }
	}
	option = {
		name = PF22.238.c
		situation_event = { id = PF22.232 }
	}
	option = {
		name = PF22.238.d
		situation_event = { id = PF22.234 }
	}
	option = {
		name = PF22.238.e
		situation_event = { id = PF22.235 }
	}
	option = {
		name = PF22.238.f
		situation_event = { id = PF22.239 }
	}
}

#The faction leader becomes an Emeras
situation_event = {
	id = PF22.239
	title = PF22.239.title
	desc = PF22.239.desc
	picture = GFX_evt_necrophage
	show_sound = event_mystic_reveal
	location = target
	situation = this
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			current_stage = stage_2
			current_stage = stage_3
			current_stage = stage_4
		}
		NOT = { has_situation_flag = PF22_event }
		target.owner = { NOT = { has_country_flag = PF22_pf_cult_faction_leader_spawn } }
		target.owner = { 
			any_pop_faction = {
				is_pop_faction_type = PF22_pf_sympathisers
				leader = { NOT = { is_ruler = yes } }
			}
		}
		target.owner = { 
			NOT = { has_authority = auth_hive_mind }
		}
	}
	
	immediate = {
		set_timed_situation_flag = {
			flag = PF22_event
			days = 300
		}
		if = {
			limit = { NOT = { exists = event_target:PF22_ascended_species } }
			create_species = {
				name = "NAME_pf_neo_species"
				plural = "NAME_pf_species_plural"
				class = PF22_PRIME_FLESH_CLASS 
				portrait = arthropoid_massive_15_PF22_portrait
				namelist = target.owner
				homeworld = target.owner.species
				effect = {
					save_event_target_as = PF22_ascended_species
				}
			}
		}
		target.owner = {
			set_country_flag = PF22_pf_cult_faction_leader_spawn
			create_leader = {
				class = scientist
				species = event_target:PF22_ascended_species
				name = random
				skill = 5
				traits = {
					trait = leader_trait_PF22_scientist
					trait = leader_trait_maniacal
				}
			}
		}
		last_created_leader = {
			save_event_target_as = PF22_flesh_cultist_leader
			set_leader_flag = PF22_pf_representative
		}
		target.owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = PF22_pf_sympathisers }
				#assign_leader = last_created_leader
				save_event_target_as = PF22_flesh_cultists
			}
			set_country_flag = PF22_pf_faction_leader_fired
		}
	}
	
	option = {
		name = PF22.239.a
	}
}


#A player captures a world while waring for the PF, given to the PF.
planet_event = {
	id = PF22.250
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = this
		exists = event_target:PF22_pf_country
		has_global_flag = PF22_in_progress
		AND = {
			exists = From
			exists = FromFrom
			From = { 
				any_war = {
					using_war_goal = {
						type = wg_PF22_pf_proxy_war_offence
						owner = prev
					}
				}
			} 
			FromFrom = { 
				any_war = {
					using_war_goal = {
						type = wg_PF22_end_threat_proxy_war
						owner = prev
					}
				}
			}
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		set_planet_flag = PF22_captured_for_pf
		change_variable = { which = PF22_pf_patience value = 25 }
		if = {
			limit = { check_variable = { which = PF22_pf_patience value > 100 } }
			set_variable = { which = PF22_pf_patience value = 100 }
		}
		PF22_assimilate_world = yes
	}
}

#Bombed planets get infected again
planet_event = {
	id = PF22.260
	title = PF22.260.title
	desc = PF22.260.desc
	picture = GFX_evt_nuclear_explosion
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
		planet_devastation >= 20
		FROM = { is_country_type = PF22_prime_flesh }
		NOT = { has_planet_flag = PF22_disease_bombed }
		owner = { NOT = { has_authority = auth_machine_intelligence } }
		owner = {
			any_situation = {
				exists = target
				AND = {
					target = { is_same_value = root }
					NOR = {
						is_situation_type = situation_PF22_infestation
						is_situation_type = situation_PF22_cult
						is_situation_type = situation_PF22_cult_hive
					}
				}
			}
		}
	}

	immediate = {
		owner = {
			start_situation = {
				type = situation_PF22_infestation
				target = root
				effect = {
					save_event_target_as = new_situation
				}
			}
		}
		set_planet_flag = PF22_disease_bombed
	}
	
	option = {
		name = PF22.260.a
	}
}

#Trigger to help end wars.
country_event = {
	id = PF22.270
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		every_war = {
			limit = {
				any_attacker = {
					is_same_value = event_target:PF22_pf_country
				}
			}
			end_war_effect = yes
		}
	}
}

#Planets lost to the cult are invaded
planet_event = {
	id = PF22.280
	title = PF22.280.title
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle
	
	desc = {
		text = PF22.280.desc_01
		trigger = {
			owner = { NOT = { has_authority = auth_hive_mind } }
		}
	}
	desc = {
		text = PF22.280.desc_02
		trigger = {
			owner = { has_authority = auth_hive_mind }
		}
	}

	is_triggered_only = yes

	trigger = {
		owner = { NOT = { has_authority = auth_machine_intelligence } }
	}

	immediate = {
		PF22_pf_cult_ground_assault = yes
	}
	
	option = {
		name = PF22.280.a
	}
	
	after = { destroy_situation = this }
}

#Planets lost to the cultist invasion are given to the PF
country_event = {
	id = PF22.281
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = FromFrom
		AND = {
			exists = This
			exists = event_target:PF22_pf_country
			exists = event_target:PF22_pf_cultist_country
			This = { is_same_value = event_target:PF22_pf_cultist_country }
		}
		AND = {
			exists = From
			From = { NOT = { has_authority = auth_machine_intelligence } }
		}
	}

	immediate = {
		event_target:PF22_pf_cultist_country = {
			every_owned_army = {
				limit = { planet = { is_same_value = root.FromFrom } }
				remove_army = yes
			}
		}
		FromFrom = {
			set_controller = event_target:PF22_pf_country
			PF22_assimilate_world = yes 
		}
	}
}


#checked in on_actions monthly, have the PF consumed too many worlds?
event = {
	id = PF22.300
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:PF22_pf_country
		NOT = { has_global_flag = PF22_pf_end_game_trigger }
		event_target:PF22_pf_country = {
			PF22_overfed_trigger = yes
		}
	}
	
	immediate = {
		set_global_flag = PF22_pf_end_game_trigger
		event_target:PF22_pf_country = {
			set_country_flag = PF22_pf_decayed
			country_event = { id = PF22.301 }
		}
		every_playable_country = {
			country_event = { id = PF22.303 days = 25 }
		}
	}
}

#Periodically sends PF fleets rogue; they do nothing and become hostile.
country_event = {
	id = PF22.301
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		AND = {
			exists = this
			has_global_flag = PF22_in_progress
		}
	}
	
	immediate = {
		PF22_pf_fleets_go_bezerk = yes
		country_event = { id = PF22.301 days = 450 }
	}
}

# Ships have lifetimes, after which point they sustain significant penalties
fleet_event = {
	id = PF22.302
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = this
	}
	
	immediate = {
		add_modifier = {
			modifier = PF22_pf_decay
			days = -1
			multiplier = value:PF22_pf_decay_mult
		}
	}
}

# Explains to Players something weird is happening with the Prime Flesh
country_event = {
	id = PF22.303
	title = PF22.303.title
	desc = PF22.303.desc
	picture = GFX_evt_hive_mind
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.303.a
	}
}

# Victory parade situation events, from standard parade events:

situation_event = {
	id = PF22.400
	title = PF22.400.title
	location = target
	desc = {
		text = PF22.400.desc_1.small
		trigger = { AND = { has_situation_flag = small_unity_reward target.owner = { is_gestalt = yes } } }
	}
	desc = {
		text = PF22.400.desc_1.standard
		trigger = { AND = { has_situation_flag = standard_unity_reward target.owner = { is_gestalt = yes } } }
	}
	desc = {
		text = PF22.400.desc_1.large
		trigger = { AND = { has_situation_flag = large_unity_reward target.owner = { is_gestalt = yes } } }
	}
	desc = {
		text = PF22.400.desc_2.small
		trigger = { AND = { has_situation_flag = small_unity_reward target.owner = { is_gestalt = no } } }
	}
	desc = {
		text = PF22.400.desc_2.standard
		trigger = { AND = { has_situation_flag = standard_unity_reward target.owner = { is_gestalt = no } } }
	}
	desc = {
		text = PF22.400.desc_2.large
		trigger = { AND = { has_situation_flag = large_unity_reward target.owner = { is_gestalt = no } } }
	}
	picture = GFX_evt_crisis_defeated
	show_sound = event_celebration
	situation = this
	is_triggered_only = yes
	option = {
		trigger = { has_situation_flag = small_unity_reward }
		target = {
			add_modifier = {
				modifier = PF22_pf_parade_mod
				days = -1
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier2unityreward
				min = @tier2unitymin
				max = @tier2unitymax
			}
		}
		name = PF22.400.a
	}
	option = {
		trigger = { has_situation_flag = standard_unity_reward }
		target = {
			add_modifier = {
				modifier = PF22_pf_parade_mod
				days = -1
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier3unityreward
				min = @tier3unitymin
				max = @tier3unitymax
			}
		}
		name = PF22.400.b
	}
	option = {
		trigger = { has_situation_flag = large_unity_reward }
		target = {
			add_modifier = {
				modifier = PF22_pf_parade_mod
				days = -1
			}
		}
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier4unityreward
				min = @tier4unitymin
				max = @tier4unitymax
			}
		}
		name = PF22.400.c
	}
	after = {
		destroy_situation = this
	}
}

situation_event = {
	id = PF22.401
	title = PF22.401.title
	location = target
	desc = {
		text = PF22.401.desc_1
		trigger = { target.owner = { is_gestalt = no } }
	}
	desc = {
		text = PF22.401.desc_2
		trigger = { target.owner = { is_gestalt = no } }
	}
	picture = GFX_evt_crisis_defeated
	show_sound = event_mystic_reveal
	situation = this
	location = target
	is_triggered_only = yes

	immediate = {
		set_situation_locked = yes
	}
	after = {
		set_situation_locked = no
	}
	
	option = {
		allow = {
			target = {
				free_building_slots > 0
			}
		}
		target = {
			add_building = building_pf_relic_special
		}
		hidden_effect = {
			target.owner = { set_country_flag = PF22_pf_special_building }
		}
		name = PF22.401.a
	}
	option = {
		name = PF22.401.b
		increase_unity_celebration = yes
	}
	option = {
		name = PF22.401.c
		custom_tooltip = PF22.401.c.tooltip
		hidden_effect = {
			target.owner = { country_event = { id = PF22.402 days = 10 } }
		}
	}
}

# Explains to Players something weird is happening with the Prime Flesh
country_event = {
	id = PF22.402
	title = PF22.402.title
	desc = PF22.402.desc
	picture = GFX_evt_hive_mind
	show_sound = event_mystic_reveal

	is_triggered_only = yes

	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = PF22.402.a
		add_tech_progress = { 
			tech = tech_jump_drive_1
			progress = 0.75
		}
	}
}