namespace = acemod_crisis_manager_crisis

# Delay event for spawn
country_event = {
	id = acemod_crisis_manager_crisis.1099
	hide_window = yes
	is_triggered_only = yes
	# fire_only_once = yes
	trigger = {
		# is_country_type = extradimensional
		NOT = {
			has_global_flag = extradimensional_second_portal
		}
		# galaxy_percentage > 0.15
	}
	# mean_time_to_happen = {
	# 	months = 12
	# }
	immediate = {
		if = {
			limit = {
				galaxy_percentage > 0.05
			}
			event_target:global_event_country = {
				change_variable = {
					which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
					value = 1
				}
				every_country = {
					limit = {
						OR = {
							is_ai = no
							is_country_type = default
						}
					}
					change_variable = {
						which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
						value = prev
					}
				}
			}
			country_event = {
				# id = crisis.1100
				id = acemod_crisis_manager_crisis.1100					#	Use substitute cloned event as vanilla will not meet its triggers.
			}	
		}
		else_if = {
			limit = {
				galaxy_percentage > 0.01
				event_target:global_event_country = {
					check_variable = {
						which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
						value > 3
					}
				}
			}
			event_target:global_event_country = {
				change_variable = {
					which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
					value = 1
				}
				every_country = {
					limit = {
						OR = {
							is_ai = no
							is_country_type = default
						}
					}
					change_variable = {
						which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
						value = prev
					}
				}
			}
			country_event = {
				# id = crisis.1100
				id = acemod_crisis_manager_crisis.1100					#	Use substitute cloned event as vanilla will not meet its triggers.
			}
			
		}
		else_if = {
			limit = {
				count_system_within_border = {
					count >= 5
				}
				event_target:global_event_country = {
					check_variable = {
						which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
						value > 10
					}
				}
			}
			event_target:global_event_country = {
				change_variable = {
					which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
					value = 1
				}
				every_country = {
					limit = {
						OR = {
							is_ai = no
							is_country_type = default
						}
					}
					change_variable = {
						which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
						value = prev
					}
				}
			}
			country_event = {
				# id = crisis.1100
				id = acemod_crisis_manager_crisis.1100					#	Use substitute cloned event as vanilla will not meet its triggers.
			}
		}
		else = {
			event_target:global_event_country = {
				change_variable = {
					which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
					value = 1
				}
				every_country = {
					limit = {
						OR = {
							is_ai = no
							is_country_type = default
						}
					}
					change_variable = {
						which = acemod_crisis_manager_crisis_var_country_aberrant_spawn_attempts_num
						value = prev
					}
				}
			}
			country_event = {
				# id = crisis.1100
				id = acemod_crisis_manager_crisis.1099				#	Use substitute cloned event as vanilla will not meet its triggers.
				days = 360				#	Give Unbidden time to build a few outposts.
			}
		}
	}
}

### Second Portal

# Vanilla
# Second Portal Appears (HIDDEN)
country_event = {
	id = acemod_crisis_manager_crisis.1100
	hide_window = yes
	is_triggered_only = yes
	# fire_only_once = yes

	trigger = {
		NOT = {	has_global_flag = extradimensional_invasion_defeated } # ACE safeguard so it does not break.
		# is_country_type = extradimensional
		NOT = { has_global_flag = extradimensional_second_portal }
		# galaxy_percentage > 0.15
	}

	# mean_time_to_happen = {
	# 	months = 12
	# }

	immediate = {
		set_global_flag = acemod_crisis_manager_crisis_1100_fired	# Marks substitute event as fired for debug purposes.
		set_crisis_sound = extradimensional_crisis_ambient_stage_3
		set_crisis_stage_3 = yes
		set_global_flag = extradimensional_second_portal
		random_system_within_border = {
			limit = {
				NOT = { has_star_flag = extradimensional_origin_system }
			}
			set_star_flag = extradimensional_second_portal_system
			save_event_target_as = second_portal_system
			random_system_planet = {
				create_species = {
					name = "NAME_Aberrant"
					class = EXD
					namelist = Extradimensional
					portrait = exd2
					traits = random
					effect = { save_event_target_as = extradimensional_hunters_species }
				}
				create_country = {
					name = "NAME_Aberrant"
					type = "extradimensional_2"
					species = event_target:extradimensional_hunters_species
					name_list = "Extradimensional"
					flag = {
						icon= {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background= {
							category = "backgrounds"
							file = "triangle_split.dds"
						}
						colors={
							"brown"
							"orange"
							"null"
							"null"
						}
					}
					effect = {
						set_country_flag = aberrant
						save_global_event_target_as = extradimensionals2
						create_ship_design = { design = "NAME_Void_Former" }
						add_ship_design = last_created_design
						create_ship_design = { design = "NAME_Aberrant_Anchor" }
						add_ship_design = last_created_design
						create_ship_design = { design = "NAME_Unbidden_Starbase" }
						add_ship_design = last_created_design
						establish_communications_no_message = event_target:portal_holder_1
						set_faction_hostility = {
							target = event_target:portal_holder_1
							set_hostile = no
						}
						save_event_target_as = extradimensional_hunters
						set_graphical_culture = extra_dimensional_02
					}
				}
				event_target:extradimensional_hunters = {
					create_fleet = {
						name = "NAME_Dimensional_Portal"
						effect = {
							set_owner = PREV
							create_ship = {
								name = random
								design = "NAME_Aberrant_Portal"
								graphical_culture = "extra_dimensional_02"
								effect = { set_ship_flag = aberrant_portal }
							}
							set_location = {
								target = PREVPREV
								distance = 40
								angle = random
							}
							save_event_target_as = second_portal
							fleet_event = { id = crisis.1103 days = 1 } # Fleet Arrives
							fleet_event = { id = crisis.1103 days = 5 } # Fleet Arrives
							fleet_event = { id = crisis.1103 days = 15 } # Fleet Arrives
							fleet_event = { id = crisis.1103 days = 30 } # Fleet Arrives
							fleet_event = { id = crisis.1103 days = 45 } # Fleet Arrives
							fleet_event = { id = crisis.1103 days = 60 } # Fleet Arrives
							fleet_event = { id = crisis.1103 days = 150 } # Fleet Arrives
							fleet_event = { id = crisis.1103 days = 350 } # Fleet Arrives
							fleet_event = { id = crisis.1106 days = 20 } # Constructor Arrives
							fleet_event = { id = crisis.1106 days = 25 } # Constructor Arrives
							fleet_event = { id = crisis.1106 days = 90 } # Constructor Arrives
							fleet_event = { id = crisis.1106 days = 210 } # Constructor Arrives
							event_target:extradimensional_hunters = { country_event = { id = crisis.1260 days = 550 } } # Spawn Cycle starts
						}
					}
					random_list = {
						25 = {
							create_leader = {
								class = admiral
								species = event_target:extradimensional_hunters_species
								name = random
								skill = 3
								traits = {
									trait = leader_trait_ethereal
								}
							}
						}
						25 = {
							create_leader = {
								class = admiral
								species = event_target:extradimensional_hunters_species
								name = random
								skill = 3
								traits = {
									trait = leader_trait_dimensional_stutter
								}
							}
						}
						50 = {
							create_leader = {
								class = admiral
								species = event_target:extradimensional_hunters_species
								name = random
								skill = 3
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = PREV
							while = {
								count = 1
								set_fleet_flag = acemod_crisis_manager_fleet_flag_acot_shadowstalker								# Debug
								if = {
									limit = {
										has_global_flag = acot_override_activated
										NOT = {
											has_global_flag = acemod_crisis_manager_acot_override_support_disabled											# Disables ACOT Aberrant "flagship" substitute.
										}
									}
									create_ship = {
										name = random
										design = "NAME_Shadowstalker"										# ACOT Design.
										graphical_culture = "extra_dimensional_02"
										effect = {
											set_ship_flag = acemod_crisis_manager_ship_flag_acot_shadowstalker
										}
									}
								}
								else = {
									create_ship = {
										name = random
										design = "NAME_Huntress"
										graphical_culture = "extra_dimensional_02"
										effect = {
											set_ship_flag = acemod_crisis_manager_ship_flag_acot_shadowstalker_fallback
										}
									}
								}
							}
							if = {
								limit = {
									any_owned_ship = {
										NOR = {
											has_ship_flag = acemod_crisis_manager_ship_flag_acot_shadowstalker												# Debug
											has_ship_flag = acemod_crisis_manager_ship_flag_acot_shadowstalker_fallback
										}
									}
								}
								create_ship = {
									name = random
									design = "NAME_Huntress"
									graphical_culture = "extra_dimensional_02"
									effect = {
										set_ship_flag = acemod_crisis_manager_ship_flag_acot_shadowstalker_missing_acot_fallback
									}
								}
							}
							while = {
								count = 20
								create_ship = {
									name = random
									design = "NAME_Huntress"
									graphical_culture = "extra_dimensional_02"
								}
							}
							assign_leader = last_created_leader							# ACE. Moved in case first ship does not spawn for whatever reason.
							while = {
								count = 30
								create_ship = {
									name = random
									design = "NAME_Assassin"
									graphical_culture = "extra_dimensional_02"
								}
							}
							hidden_effect = {
								if = {
									limit = {
										has_global_flag = acg_active										# Aesthetic Cinematic Gameplay compatibility.
									}
									while = {
										count = 90
										create_ship = {
											name = random
											design = "NAME_Predator"
											graphical_culture = "extra_dimensional_02"
										}
									}
								}
								else = {
									while = {
										count = 45
										create_ship = {
											name = random
											design = "NAME_Predator"
											graphical_culture = "extra_dimensional_02"
										}
									}
								}
							}
							set_location = {
								target = event_target:second_portal
								distance = 5
								angle = random
							}
							set_fleet_stance = aggressive
							set_fleet_bombardment_stance = armageddon		# Bombardment fix for for mods overwriting vanilla with outdated code.
							set_aggro_range_measure_from = self
							set_aggro_range = 800							# Longer aggro range, same as for pirate systems (default 500)
						}
					}
				}
			}
			if = {
				limit = { exists = starbase }
				starbase = {
					fleet = {
						if = {
							limit = {
								is_ship_size = starbase_exd								# Hotfix to change event chain when destroying a Dimensional Anchor.
							}
							owner = {
								country_event = {
									id = acemod_crisis_manager_crisis.1281
									days = 1									# Delay to allow Anchor to be removed.
								}
							}
						}
					}
				}
				starbase = { fleet = { destroy_fleet = this } }
			}
			create_starbase = {
				size = starbase_exd
				owner = event_target:extradimensionals2
			}
			star = {
				create_ambient_object = {
					type = "extradimensional_2"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = extradimensional_system_effect_2
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
		}
		observer_event = { id = observer.36 }
		# make portal invincible
		event_target:extradimensionals2 = {
			random_owned_ship = { ship_event = { id = crisis.1280 } }
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					is_country_type = ascended_empire	# ACOT Override.
					is_country_type = lost_empire		# ACOT Override.
					# Below triggers are acemod added.
					has_country_flag = acemod_crisis_manager_crisis_establish_communications_aberrant	# Extra flag if other mods with custom country_type need event chain access. This does NOT affect other chain events, I trust other mods to overwrite them or make additional events.
					is_ai = no	# We assume player needs event chain, even if uses custom country_type. If that mod does not account for crisis chain then it's on them.
				}
			}
			establish_communications_no_message = event_target:extradimensionals2	# ACE, to account for now improper "root" scope in crisis.1110.
			country_event = { id = crisis.1110 days = 1 }
			# Below effects are acemod added.
		}
		random_country = {
			limit = { is_country_type = extradimensional_2 }
			# establish_communications_no_message = root
			# Below triggers are acemod added.
			establish_communications_no_message = event_target:extradimensionals	
		}
		event_target:extradimensionals2 = {
			country_event = {
				id = acemod_crisis_manager_crisis.1201	# ACE. Making sure Vehement spawns before Aberrant kills off all Unbidden systems.
				days = 120
			}
		}
	}
}

# Extradimensional chain adjust. Clone of vanilla crisis.1281 but without triggers. scope: extradimensional country
country_event = {
	id = acemod_crisis_manager_crisis.1281
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		log = "anchor destroyed event crisis.1281 triggered"
		if = {
			limit = {
				count_owned_ship = {
					limit = {
						is_ship_size = starbase_exd
					}
					count < 1
				}
			}
			switch = {
				trigger = has_country_flag
				unbidden = {
					random_country = {
						limit = {
							is_country_type = portal_holder
						}
						random_owned_ship = {
							limit = {
								is_ship_size = dimensional_portal_ed
								has_ship_flag = unbidden_portal
							}
							fleet = {
								set_owner = root
							}
							fleet = {
								set_event_locked = no
							}
						}
					}
				}
				aberrant = {
					random_country = {
						limit = {
							is_country_type = portal_holder
						}
						random_owned_ship = {
							limit = {
								is_ship_size = dimensional_portal_ed
								has_ship_flag = aberrant_portal
							}
							fleet = {
								set_owner = root
							}
							fleet = {
								set_event_locked = no
							}
						}
					}
				}
				vehement = {
					random_country = {
						limit = {
							is_country_type = portal_holder
						}
						random_owned_ship = {
							limit = {
								is_ship_size = dimensional_portal_ed
								has_ship_flag = vehement_portal
							}
							fleet = {
								set_owner = root
							}
							fleet = {
								set_event_locked = no
							}
						}
					}
				}
			}
		}
		if = {
			limit = {
				is_country_type = extradimensional
			}
			every_country = {
				limit = {
					has_event_chain = "extradimensional_invasion_chain"
				}
				add_event_chain_counter = {
					event_chain = "extradimensional_invasion_chain"
					counter = "dimensional_anchors_1"
					amount = -1
				}
			}
		}
		else_if = {
			limit = {
				is_country_type = extradimensional_2
			}
			every_country = {
				limit = {
					has_event_chain = "extradimensional_invasion_chain_2"
				}
				add_event_chain_counter = {
					event_chain = "extradimensional_invasion_chain_2"
					counter = "dimensional_anchors_2"
					amount = -1
				}
			}
		}
		else_if = {
			limit = {
				is_country_type = extradimensional_3
			}
			every_country = {
				limit = {
					has_event_chain = "extradimensional_invasion_chain_3"
				}
				add_event_chain_counter = {
					event_chain = "extradimensional_invasion_chain_3"
					counter = "dimensional_anchors_3"
					amount = -1
				}
			}
		}
	}
}

# Extradimensional chain adjust when Vehement spawn on top of Dimensional Anchor.
country_event = {
	id = acemod_crisis_manager_crisis.1290
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_system = {
			limit = {
				OR = {
					has_star_flag = acemod_crisis_manager_star_flag_starbase_exd@event_target:extradimensionals
					has_star_flag = acemod_crisis_manager_star_flag_starbase_exd@event_target:extradimensionals2
				}
			}
			if = {
				limit = {
					owner = {
						is_same_value = event_target:extradimensionals3
					}
				}
				if = {
					limit = {
						has_star_flag = acemod_crisis_manager_star_flag_starbase_exd@event_target:extradimensionals
					}
					event_target:extradimensionals = {
						country_event = {
							id = acemod_crisis_manager_crisis.1281
							days = 1
						}
					}
				}
				else_if = {
					limit = {
						has_star_flag = acemod_crisis_manager_star_flag_starbase_exd@event_target:extradimensionals2
					}
					event_target:extradimensionals2 = {
						country_event = {
							id = acemod_crisis_manager_crisis.1281
							days = 1
						}
					}
				}
			}
			remove_star_flag = acemod_crisis_manager_star_flag_starbase_exd@prev
		}
	}
}

# Delay event. 
country_event = {
	id = acemod_crisis_manager_crisis.1201
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				# Below are the exact triggers for crisis.1200
				has_global_flag = extradimensionals_fight
				NOT = {
					has_global_flag = extradimensional_third_portal
				}
				is_country_type = extradimensional_2
				any_country = {
					is_country_type = extradimensional
				}
			}
			every_country = {
				limit = {
					OR = {
						is_country_type = extradimensional
						is_country_type = extradimensional_2
					}
				}
				every_system_within_border = {
					starbase = {
						fleet = {
							if = {
								limit = {
									is_ship_size = starbase_exd									# Hotfix to change event chain when destroying a Dimensional Anchor.
								}
								solar_system = {
									set_star_flag = acemod_crisis_manager_star_flag_starbase_exd@owner									# Marking Anchor systems so we can later check which one was taken by Vehement for chain adjustment purposes.
								}
							}
						}
					}
				}
			}
			country_event = {
				id = crisis.1200				# Vehement vanilla spawn event.
			}
			country_event = {
				id = acemod_crisis_manager_crisis.1290				# Extradimensional chain adjust when Vehement spawn on top of Dimensional Anchor.
				days = 1				# Need wait one day for system ownership swap.
			}
			acemod_crisis_manager_calculate_current_end_game_year = yes
			event_target:global_event_country = {
				change_variable = {
					which = acemod_crisis_manager_var_country_vehement_spawned_year					# Debug variable until vanilla-friendly way to postpone Vehement spawn is coded.
					value = acemod_crisis_manager_var_current_end_game_year
				}
				every_country = {
					limit = {
						OR = {
							is_ai = no
							is_country_type = default
						}
					}
					change_variable = {
						which = acemod_crisis_manager_var_country_vehement_spawned_year
						value = prev
					}
				}
			}
		}
		else = {
			country_event = {
				id = acemod_crisis_manager_crisis.1201
				days = 60
			}
		}
	}
}
