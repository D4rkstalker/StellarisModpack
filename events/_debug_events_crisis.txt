namespace = pr_debug_crisis

## handle the scenarios
event = {
	id = pr_debug_crisis.1
	is_triggered_only = yes
	hide_window = yes
	trigger = {		
	
		}
	immediate = {
	

	set_global_flag = plague_selected 
	set_global_flag = galactic_mid_crisis_selected
	crisis_spacerift = yes
	crisis_plague = yes
		

		
	}
}
## handle the scenarios
event = {
	id = pr_debug_crisis.2
	is_triggered_only = yes
	hide_window = yes
	trigger = {		
	
		}
	immediate = {
	

	set_global_flag = plague_selected 
	set_global_flag = galactic_mid_crisis_selected

		

		
	}
}



## spread plague
##complexplague.1
##complexplague.2

event = {
	id = pr_debug_crisis.3
	is_triggered_only = yes
	hide_window = yes
	trigger = {		
	
		}
	immediate = {
create_fleet = {
		name = "Test Hoarder"
		settings = {
			spawn_debris = yes
			is_boss = yes
		}
		effect = {
			set_owner = root
			create_ship = {
				name = random
				design = Mothership
				
			}

			set_location = {

				target = root.capital_scope

			}
			assign_leader = last_created_leader
			set_fleet_stance = agressive
			set_aggro_range_measure_from = self
			set_aggro_range = 50
			
			

		}
	}
	
			
	}
}

## handle the scenarios
event = {
	id = pr_debug_crisis.4
	is_triggered_only = yes
	hide_window = yes
	trigger = {		
	
		}
	immediate = {
	

	set_global_flag = mad_collector_selected
	set_global_flag = galactic_mid_crisis_selected

		

		
	}
}
