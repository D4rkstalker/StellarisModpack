namespace = veru

# Find Subjects
country_event = {
	id = veru.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = veru_total_subjects value = 0 }

		# Count how many valid Subject States there are
		every_subject = {
			NOT = { is_subject_type = devstate }
			set_country_flag = subject_might_change
			overlord = { change_variable = { which = veru_total_subjects value = 1 } }
		}

		# Next, we save each subject as an Event Target
		# As the scripting language doesn't have proper loops, we use a lot of ifs and hope no one ever has more than 10 subjects.
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 1 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = chosen_subject
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 2 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = subject_2
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 3 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = subject_3
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 4 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = subject_4
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 5 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = subject_5
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 6 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = subject_6
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 7 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = subject_7
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 8 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = subject_8
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 9 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = subject_9
			}
		}
		if = {
			limit = { check_variable = { which = veru_total_subjects value >= 10 } }
			random_subject = {
				limit = { has_country_flag = subject_might_change }
				remove_country_flag = subject_might_change
				save_event_target_as = chosen_subject0
			}
		}

		if = {
			limit = {
				NOT = { is_megacorp = yes }
			}
			country_event = { id = veru.2 }
		}
		else_if = {
			country_event = { id = veru_c.2 }
		}

	}
}


# veru.2: List Subjects
country_event = {
	id = veru.2
	title = veru.2.name
	desc = {
		trigger = { check_variable = { which = veru_total_subjects value > 0 } }
		text = veru.2.desc
	}
	desc = {
		trigger = { check_variable = { which = veru_total_subjects value = 0 } }
		text = veru.2.desc.fail
	}
	picture = GFX_evt_board_meeting
	show_sound = event_laboratory_sound
	location = ROOT

	is_triggered_only = yes

	# No valid target
	option = {
		name = veru.2.fail
		trigger = { check_variable = { which = veru_total_subjects value = 0 } }
	}

	# Now we show a list of the subject states to the player
	option = {
		name = veru.2.subject_1
		trigger = { check_variable = { which = veru_total_subjects value >= 1 } }
		hidden_effect = {
			event_target:subject_1 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_2
		trigger = { check_variable = { which = veru_total_subjects value >= 2 } }
		hidden_effect = {
			event_target:subject_2 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_3
		trigger = { check_variable = { which = veru_total_subjects value >= 3 } }
		hidden_effect = {
			event_target:subject_3 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_4
		trigger = { check_variable = { which = veru_total_subjects value >= 4 } }
		hidden_effect = {
			event_target:subject_4 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_5
		trigger = { check_variable = { which = veru_total_subjects value >= 5 } }
		hidden_effect = {
			event_target:subject_5 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_6
		trigger = { check_variable = { which = veru_total_subjects value >= 6 } }
		hidden_effect = {
			event_target:subject_6 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_7
		trigger = { check_variable = { which = veru_total_subjects value >= 7 } }
		hidden_effect = {
			event_target:subject_7 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_8
		trigger = { check_variable = { which = veru_total_subjects value >= 8 } }
		hidden_effect = {
			event_target:subject_8 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_9
		trigger = { check_variable = { which = veru_total_subjects value >= 9 } }
		hidden_effect = {
			event_target:subject_9 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}
	option = {
		name = veru.2.subject_10
		trigger = { check_variable = { which = veru_total_subjects value >= 10 } }
		hidden_effect = {
			event_target:subject_10 = {
				save_event_target_as = chosen_subject
			}
			country_event = { id = veru.31 }
		}
	}

	option = {
		name = veru.2.back
		trigger = { check_variable = { which = veru_total_subjects value > 0 } }
	}
}


################

################

################

# Veru 31
country_event = {
	id = veru.31
	title = veru.31.name
	desc = veru.31.desc
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation
	location = event_target:chosen_subject

	is_triggered_only = yes

	# Transform into Puppet State (Authoritarian)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.puppet
		custom_tooltip = ver.100.puppet.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_authoritarian
				has_ethic = ethic_fanatic_authoritarian
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_authoritarian = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_authoritarian
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_shadow_council
			}
			modifier = {
				factor = 0.5
				is_xenophile = yes
			}
		}
		hidden_effect = {
			log = "veru.31: Setting [Root.GetName] to Puppet State"
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verpuppet
				}
				add_modifier = { modifier = ver_puppet_state days = -1}
			}
		}
	}

	# Transform into Sister Republic (Egalitarian)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.sister
		custom_tooltip = ver.100.sister.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_egalitarian
				has_ethic = ethic_fanatic_egalitarian
				has_valid_civic = civic_feudal_realm
			}
			event_target:chosen_subject = {
				NOT = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_egalitarian = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_egalitarian
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_beacon_of_liberty
			}
			modifier = {
				factor = 10
				has_ai_personality = democratic_crusaders
			}
			modifier = {
				factor = 0.5
				is_xenophobe = yes
			}
		}
		hidden_effect = {
			log = "veru.31: Setting [Root.GetName] to Sister Republic"
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = versister
				}
				if = {
					limit = { has_ethic = ethic_fanatic_authoritarian }
					change_government = {
						authority = auth_dictatorial
						civics = {
							civic = civic_staged_elections
							civic = civic_police_state
						}
					}
				}
				else_if = {
					limit = { has_ethic = ethic_authoritarian }
					change_government = {
						authority = auth_oligarchic
						civics = {
							civic = civic_staged_elections
							civic = random
						}
					}
				}
				else_if = {
					limit = {
						is_authoritarian = no
						NOT = { has_authority = auth_democratic }
					}
					change_government = {
						authority = auth_democratic
					}
				}
			}
		}
	}

	# Transform into Jr. Partner (Materialist)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.jrpartner
		custom_tooltip = ver.100.jrpartner.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_materialist = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_materialist
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_technocracy
			}
		}
		hidden_effect = {
			log = "veru.31: Setting [Root.GetName] to Jr. Partner"
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verjrpartner
				}
			}
		}
	}

	# Transform into Foederatus (Militarist)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.foederatus
		custom_tooltip = ver.100.foederatus.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
				has_valid_civic = civic_feudal_realm
			}
			event_target:chosen_subject = {
				is_pacifist = no
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_militarist = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_militarist
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_warrior_culture
			}
		}
		hidden_effect = {
			log = "veru.31: Setting [Root.GetName] to Foederatus"
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verfoederatus
				}
				add_modifier = { modifier = ver_military_subsidies days = -1 }
			}
		}
	}

	# Transform into Autonomous Region (Pacifist)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.autonomous
		custom_tooltip = ver.100.autonomous.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_pacifist
				has_valid_civic = civic_machine_servitor
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = {
					is_pacifist = yes
					has_valid_civic = civic_machine_servitor
				}
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_pacifist
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_agrarian_idyll
			}
		}
		hidden_effect = {
			log = "veru.31: Setting [Root.GetName] to Autonomous Region"
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verautonomous
				}
				add_modifier = { modifier = ver_demilitarized days = -1 }
			}
		}
	}

	# Transform into Disciple (Spiritualist)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.disciple
		custom_tooltip = ver.100.disciple.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_spiritualist = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_spiritualist
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_exalted_priesthood
			}
			modifier = {
				factor = 10
				has_ai_personality = evangelising_zealots
			}
		}
		hidden_effect = {
			log = "veru.31: Setting [Root.GetName] to Disciple"
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verdisciple
				}
				add_modifier = { modifier = ver_overlord_indoctrination days = -1}
			}
		}
	}

	# Transform into Beneficiary (Xenophile)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.beneficiary
		custom_tooltip = ver.100.beneficiary.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_xenophile = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophile
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_free_haven
			}
		}
		hidden_effect = {
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verbeneficiary
				}
			}
		}
	}

	# Transform into Serf (Xenophobe)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.serf
		custom_tooltip = ver.100.serf.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_xenophobe = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophobe
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_slaver_guilds
			}
		}
		hidden_effect = {
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verserf
				}
			}
		}
	}

	# Transform into Appendage (Hive Mind)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.appendage
		custom_tooltip = ver.100.appendage.tooltip
		trigger = { has_authority = auth_hive_mind }
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_authority = auth_hive_mind }
			}
		}
		hidden_effect = {
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verappendage
				}
			}
		}
	}

	# Transform into Organic Auxiliary (Machine Intelligence)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.organic
		custom_tooltip = ver.100.organic.tooltip
		trigger = {
			has_authority = auth_machine_intelligence
			NOT = { has_valid_civic = civic_machine_servitor }
			event_target:chosen_subject = { NOT = { has_authority = auth_machine_intelligence } }
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = {
					has_authority = auth_machine_intelligence
					NOT = { has_valid_civic = civic_machine_servitor }
				}
			}
		}
		hidden_effect = {
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verorganic
				}
			}
		}
	}

	# Transform into Parallel Processor (Machine Intelligence)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.parallel
		custom_tooltip = ver.100.parallel.tooltip
		trigger = {
			has_authority = auth_machine_intelligence
			event_target:chosen_subject = { has_authority = auth_machine_intelligence }
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = {
					has_authority = auth_machine_intelligence
					event_target:chosen_subject = {has_authority = auth_machine_intelligence }
				}
			}
		}
		hidden_effect = {
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verparallel
				}
			}
			country_event = { id = vermain.13 }
		}
	}

	# Transform into Blood Tributary (Slaver or Barbaric)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = ver.100.blood
		custom_tooltip = ver.100.blood.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_barbaric_despoilers
				has_valid_civic = civic_slaver_guilds
			}
			NOT = { any_subject = { is_subject_type = verblood } }
			event_target:chosen_subject = { NOT = { has_authority = auth_machine_intelligence } }
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = {
					has_valid_civic = civic_barbaric_despoilers
					has_valid_civic = civic_slaver_guilds
				}
			}
		}
		hidden_effect = {
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = verblood
				}
			}
			country_event = { id = ver.40 }
		}
	}

	# Transform into Member State (Decentralized Empires)
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = SUBJECT_member_state
		custom_tooltip = SUBJECT_DESC_member_state
		trigger = {
			has_global_flag = gf_regentmaker_active
			event_target:chosen_subject = { NOT = { has_authority = auth_machine_intelligence } }
			OR = {
				has_valid_civic = civic_feudal_realm
				has_ethic = ethic_egalitarian
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_pacifist
			}
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				NOR = {
					has_valid_civic = civic_barbaric_despoilers
					has_valid_civic = civic_slaver_guilds
				}
			}
		}
		hidden_effect = {
			event_target:chosen_subject = {
				set_subject_of = {
					who = ROOT
					subject_type = member_state
				}
			}
		}
	}

	# Set as vanilla tributary
	option = {
		allow = {
		custom_tooltip = {
				fail_text = influencefail_text_veru
				has_resource = { type = influence amount >= 100 }
			}
		}
		add_resource = { influence = -100 }
		name = choice_veru_tributary
		custom_tooltip = SUBJECT_DESC_vertributary

		hidden_effect = {
			log = "veru.31: Setting as [Root.GetName] as Tributary"
			event_target:chosen_subject = {
				set_subject_of = {
					who = root
					subject_type = vertributary
				}
			}
		}
	}

	# Set as vanilla Vassal
	option = {
		name = choice_veru_vassal
		custom_tooltip = SUBJECT_DESC_vervassal

		hidden_effect = {
			log = "veru.31: Leaving [Root.GetName] as Vassal"
			event_target:chosen_subject = {
				set_subject_of = {
					who = root
					subject_type = vervassal
				}
			}
		}
	}

	option = {
		name = veru.3.back
	}
}