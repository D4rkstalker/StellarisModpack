
namespace = gpm_ringworld

### Ringworld Finish
event = {
	id = gpm_ringworld.78870
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = gpm_modifiers_ringworlds_disabled }
	}
	
	immediate = {
		from.planet = {
			solar_system = {
				every_system_planet = {
					if = {
						limit = {
							NOT = { has_planet_flag = gpm_new_ringworld_flag }
							gpm_is_planet_ringworld = yes
						}
						
						
						# First we try to apply a construction bonus modifier (low chance)
						random_list = {
							95 = {} # was 95
							5 = { gpm_spawn_ringworld_tier_modifier = yes }
						}
						
						#  Bonus additional modifier
						# If low amount of modifiers is chosen at the start:
						if = {
							limit = { has_global_flag = gpm_modifier_amount_low	}
							random_list = {
								75 = {}
								25 = { gpm_spawn_ringworld_modifier = yes }
							}
							random_list = {
								75 = {}
								25 = { gpm_spawn_ringworld_modifier = yes }
							}
						}
						# If normal amount of modifiers is chosen at the start:
						if = {
							limit = { has_global_flag = gpm_modifier_amount_normal	}
							random_list = {
								50 = {}
								50 = { gpm_spawn_ringworld_modifier = yes }
							}
							random_list = {
								55 = {}
								45 = { gpm_spawn_ringworld_modifier = yes }
							}
							random_list = {
								60 = {}
								40 = { gpm_spawn_ringworld_modifier = yes }
							}
						}
						# If high amount of modifiers is chosen at the start:
						if = {
							limit = { has_global_flag = gpm_modifier_amount_high	}
							gpm_spawn_ringworld_modifier = yes
							random_list = {
								55 = {}
								45 = { gpm_spawn_ringworld_modifier = yes }
							}
							random_list = {
								60 = {}
								40 = { gpm_spawn_ringworld_modifier = yes }
							}
						}
						set_planet_flag = gpm_new_ringworld_flag
					}
					if = {
						limit = {
							OR = {
								is_planet_class = pc_ringworld_seam
								is_planet_class = pc_ringworld_tech
							}
						}
						set_planet_flag = is_constructed_ringworld_part
					}
				}
			}
		}
	}
}

### Cybrex Ringworld Finish
event = {
	id = gpm_ringworld.78871
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FromFrom = { has_star_flag = cybrex }
		NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
	}
	
	immediate = {
		from.planet = {
			solar_system = {
				every_system_planet = {
					if = {
						limit = {
							NOT = { has_planet_flag = gpm_new_ringworld_flag }
							gpm_is_planet_ringworld = yes
						}
						# Colour the ringworld section
						if = { 
							limit = { 
								NOT = { has_planet_flag = "gpm_is_precursor_world_colour" }
							}
							set_name = "color_precursor"
						}
						
						
						# Random precursor modifiers 
						gpm_random_precursor_modifier = yes
						gpm_random_precursor_modifier = yes
						set_planet_flag = gpm_new_ringworld_flag
					}
				}
			}
		}
	}
}

### Clear planet rings
event = {
	id = gpm_ringworld.78872
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			OR = {
				is_megastructure_type = ring_world_2_intermediate
				is_megastructure_type = nicoll_beam_1
				is_megastructure_type = big_brain_0
			}
		}
	}
	
	immediate = {
		from = {
			solar_system = {
				every_system_ambient_object = {
					if = {
						limit = { has_ambient_object_flag = gpm_ambient_ring }
						destroy_ambient_object = this
					}
				}
			}
		}
	}
}