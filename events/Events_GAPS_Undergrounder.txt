namespace = Events_GAPS_Undergrounder

country_event = {
	id = Events_GAPS_Undergrounder.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		owner = { has_origin = Origin_GAPS_The_Undergrounder }
	}

	immediate = {
		set_country_flag = Country_Flag_GAPS_Undergrounder_Start
		every_owned_planet = { 
			add_modifier = { modifier = "Planet_Modifier_GAPS_Cave_World" days = -1 }
			every_owned_pop = { 
				limit = { 
					OR = { 
						has_trait = Trait_GAPS_Undergrounder 
						has_trait = Trait_GAPS_Undergrounder_Add 
					} 
				}
				add_modifier = { modifier = Pop_Modifier_GAPS_Cave_World days = -1 }
			}
			remove_building = building_hydroponics_farm
			remove_building = building_food_processing_facility
			remove_building = building_food_processing_center
			
			remove_building = building_maintenance_depot
			remove_building = building_mineral_purification_plant
			remove_building = building_mineral_purification_hub
			
			remove_building = building_energy_grid
			remove_building = building_energy_nexus
			
			remove_building = building_foundry_1
			remove_building = building_research_lab_1
			remove_building = building_factory_1
			
			add_building = building_GAPS_Subterrestrial_City
			add_building = building_GAPS_Underground_Mineral_Production
			add_building = building_GAPS_Underground_Energy_Grid
			add_building = building_GAPS_Underground_Foundry
		}
	}
}
country_event = {
	id = Events_GAPS_Undergrounder.11
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		this = { has_origin = Origin_GAPS_The_Undergrounder }
	}

	immediate = {
		every_owned_planet = {
			limit = { is_capital = yes }
			set_planet_size = 25
		}
	}
}


planet_event = {
	id = Events_GAPS_Undergrounder.6
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		save_event_target_as = Target_Planet_GAPS_Cave_World
		add_modifier = { modifier = "Planet_Modifier_GAPS_Cave_World" days = -1 }
		every_owned_pop = { 
			limit = { 
				OR = { 
					has_trait = Trait_GAPS_Undergrounder 
					has_trait = Trait_GAPS_Undergrounder_Add 
				} 
			}
			add_modifier = { modifier = Pop_Modifier_GAPS_Cave_World days = -1 }
		}
		solar_system = { owner = { country_event = { id = Events_GAPS_Undergrounder.61 days = 0 } } }
	}
}
country_event = {
	id = Events_GAPS_Undergrounder.61
	is_triggered_only = yes
	title = "Popup_GAPS_Cave_World_Finished.name"
	desc = "Popup_GAPS_Cave_World_Finished.desc"
	picture = GFX_evt_underground_civilization
	location = event_target:Target_Planet_GAPS_Cave_World

	trigger = {
	}

	immediate = {
		
	}
	option = {
		name = INTERESTING
	}
}

planet_event = {
	id = Events_GAPS_Undergrounder.7
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		save_event_target_as = Target_Planet_GAPS_Cave_World
		add_modifier = { modifier = "Planet_Modifier_GAPS_Hollowed_Out" days = -1 }
		solar_system = { owner = { country_event = { id = Events_GAPS_Undergrounder.71 days = 0 } } }
	}
}
country_event = {
	id = Events_GAPS_Undergrounder.71
	is_triggered_only = yes
	title = "Popup_GAPS_Cave_World_Finished.name"
	desc = "Popup_GAPS_Cave_World_Finished.desc"
	picture = GFX_evt_underground_civilization
	location = event_target:Target_Planet_GAPS_Cave_World

	trigger = {
	}

	immediate = {
		
	}
	option = {
		name = INTERESTING
	}
}

#on game start country
event = {
	id = Events_GAPS_Undergrounder.8
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = GlobalFlag_GAPS_UndergroundersUpdated11 }
	}
	immediate = {
		set_global_flag = GlobalFlag_GAPS_UndergroundersUpdated11
		every_country = {
			limit = { has_origin = Origin_GAPS_The_Undergrounder }
			add_modifier = { modifier = Fix_Modifier_GAPS_Fix_Jobs days = 60 }
		}
	}
}


#on game start country
country_event = {
	id = Events_GAPS_Undergrounder.81
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = Origin_GAPS_The_Undergrounder 
		has_country_flag = synthetic_empire
		NOT = { has_country_flag = CountryFlag_GAPS_UndergroundersSynth }
	}
	immediate = {
		set_country_flag = CountryFlag_GAPS_UndergroundersSynth
		every_owned_pop = {
			limit = { has_trait = trait_mechanical }
			modify_species = {
				species = this
				add_trait = Trait_GAPS_Undergrounder_Added
			}
		}
	}
}
