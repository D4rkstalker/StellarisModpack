namespace = eac_apm

event = {
    id = eac_apm.0
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
        # log = "Start Month"
        every_country = {
            limit = { has_modifier = eac_apm_on_modifier }
            #log = "- Country: [This.GetName]"
            if = { limit = { has_policy_flag = eac_apm_eligibility_overcrowded_unemployed }
                country_event = { id = eac_apm.10 days = 3 }
            }
            else_if = { limit = { has_policy_flag = eac_apm_eligibility_all_unemployed }
                country_event = { id = eac_apm.11 days = 3 }
            }

            if = { limit = { has_policy_flag = eac_apm_force_migrate_less_60 }
                country_event = { id = eac_apm.13 days = 3 }
            }
            else_if = { limit = { has_policy_flag = eac_apm_force_migrate_less_40 }
                country_event = { id = eac_apm.14 days = 3 }
            }
        
        }
    }
}

country_event = {
    id = eac_apm.1
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        every_owned_planet = {
            limit = {
                free_housing <= 0
                free_jobs = 0
            }
            # log = "-- Planet: [This.GetName]"
            every_owned_pop = {
                limit = { 
                    is_unemployed = yes 
                    NOT = { has_citizenship_type = { type = citizenship_assimilation } } # Ignore assimilating pops
                    owner = { has_country_resource = { type = energy amount > 150 } }
                    planet = { free_housing < 0 }
                    OR = {
                        has_migration_control = no
                        species = { has_trait = trait_machine_unit }
                        species = { has_trait = trait_mechanical }
                    }
                }
                # log = "--- Pop: [This.GetName]"
                PREVPREV = {
                    set_variable = { which = planet_found value = -1 }
                    if = { limit = { owner = { has_policy_flag = eac_apm_habitability_60 } }
                        random_owned_planet = {
                            limit = {
                                has_modifier = eac_apm_planet_preference_modifier
                                free_housing >= 1
                                free_jobs >= 1
                                habitability = { who = PREVPREV value > 0.6 }
                                is_under_colonization = no 
                            }
                            resettle_pop = { pop = PREVPREV planet = this }
                            #log = "---- New Planet Preferred: [This.GetName]"
                            prev = { set_variable = { which = planet_found value = 1 } }
                        }
                    }
                    else = {
                        random_owned_planet = {
                            limit = {
                                has_modifier = eac_apm_planet_preference_modifier
                                free_housing >= 1
                                free_jobs >= 1
                                is_under_colonization = no 
                            }
                            resettle_pop = { pop = PREVPREV planet = this }
                            #log = "---- New Planet Preferred: [This.GetName]"
                            prev = { set_variable = { which = planet_found value = 1 } }
                        }
                    }
                    if = { limit = { check_variable = { which = planet_found value = -1 } } 
                        random_owned_planet = {
                            limit = {
                                free_housing >= 1
                                free_jobs >= 1
                                habitability = { who = PREVPREV value >= 1.0 }
                                is_under_colonization = no 
                            }
                            resettle_pop = { pop = PREVPREV planet = this }
                            #log = "---- New Planet 100: [This.GetName]"
                            prev = { set_variable = { which = planet_found value = 1 } }
                        }
                    }
                    if = { limit = { check_variable = { which = planet_found value = -1 } } 
                        random_owned_planet = {
                            limit = {
                                free_housing >= 1
                                free_jobs >= 1
                                habitability = { who = PREVPREV value >= 0.9 }
                                is_under_colonization = no 
                            }
                            resettle_pop = { pop = PREVPREV planet = this }
                            #log = "---- New Planet 90: [This.GetName]"
                            prev = { set_variable = { which = planet_found value = 1 } }
                        }
                    }
                    if = { limit = { check_variable = { which = planet_found value = -1 } } 
                        random_owned_planet = {
                            limit = {
                                free_housing >= 1
                                free_jobs >= 1
                                habitability = { who = PREVPREV value >= 0.8 }
                                is_under_colonization = no 
                            }
                            resettle_pop = { pop = PREVPREV planet = this }
                            #log = "---- New Planet 80: [This.GetName]"
                            prev = { set_variable = { which = planet_found value = 1 } }
                        }
                    }
                    if = { limit = { check_variable = { which = planet_found value = -1 } } 
                        random_owned_planet = {
                            limit = {
                                free_housing >= 1
                                free_jobs >= 1
                                habitability = { who = PREVPREV value >= 0.7 }
                                is_under_colonization = no 
                            }
                            resettle_pop = { pop = PREVPREV planet = this }
                            #log = "---- New Planet 70: [This.GetName]"
                            prev = { set_variable = { which = planet_found value = 1 } }
                        }
                    }
                    if = { limit = { check_variable = { which = planet_found value = -1 } } 
                        random_owned_planet = {
                            limit = {
                                free_housing >= 1
                                free_jobs >= 1
                                habitability = { who = PREVPREV value >= 0.6 }
                                is_under_colonization = no 
                            }
                            resettle_pop = { pop = PREVPREV planet = this }
                            #log = "---- New Planet 60: [This.GetName]"
                            prev = { set_variable = { which = planet_found value = 1 } }
                        }
                    }

                    if = { limit = { owner = { has_policy_flag = eac_apm_habitability_all } }
                        # log = "All hab allowed"
                        if = { 
                            limit = { check_variable = { which = planet_found value = -1 } } 
                            random_owned_planet = {
                                limit = {
                                    free_housing >= 1
                                    free_jobs >= 1
                                    habitability = { who = PREVPREV value >= 0.5 }
                                    is_under_colonization = no 
                                }
                                resettle_pop = { pop = PREVPREV planet = this }
                                #log = "---- New Planet 50: [This.GetName]"
                                prev = { set_variable = { which = planet_found value = 1 } }
                            }
                        }
                        if = { limit = { check_variable = { which = planet_found value = -1 } } 
                            random_owned_planet = {
                                limit = {
                                    free_housing >= 1
                                    free_jobs >= 1
                                    habitability = { who = PREVPREV value >= 0.4 }
                                    is_under_colonization = no 
                                }
                                resettle_pop = { pop = PREVPREV planet = this }
                                #log = "---- New Planet 40: [This.GetName]"
                                prev = { set_variable = { which = planet_found value = 1 } }
                            }
                        }
                        if = { limit = { check_variable = { which = planet_found value = -1 } } 
                            random_owned_planet = {
                                limit = {
                                    free_housing >= 1
                                    free_jobs >= 1
                                    habitability = { who = PREVPREV value >= 0.3 }
                                    is_under_colonization = no 
                                }
                                resettle_pop = { pop = PREVPREV planet = this }
                                #log = "---- New Planet 30: [This.GetName]"
                                prev = { set_variable = { which = planet_found value = 1 } }
                            }
                        }
                        if = { limit = { check_variable = { which = planet_found value = -1 } } 
                            random_owned_planet = {
                                limit = {
                                    free_housing >= 1
                                    free_jobs >= 1
                                    habitability = { who = PREVPREV value >= 0.2 }
                                    is_under_colonization = no 
                                }
                                resettle_pop = { pop = PREVPREV planet = this }
                                #log = "---- New Planet 20: [This.GetName]"
                                prev = { set_variable = { which = planet_found value = 1 } }
                            }
                        }
                        if = { limit = { check_variable = { which = planet_found value = -1 } } 
                            random_owned_planet = {
                                limit = {
                                    free_housing >= 1
                                    free_jobs >= 1
                                    habitability = { who = PREVPREV value >= 0.1 }
                                    is_under_colonization = no 
                                }
                                resettle_pop = { pop = PREVPREV planet = this }
                                #log = "---- New Planet 10: [This.GetName]"
                                prev = { set_variable = { which = planet_found value = 1 } }
                            }
                        }
                        if = { limit = { check_variable = { which = planet_found value = -1 } } 
                            random_owned_planet = {
                                limit = {
                                    free_housing >= 1
                                    free_jobs >= 1
                                    is_under_colonization = no 
                                }
                                resettle_pop = { pop = PREVPREV planet = this }
                                #log = "---- New Planet Any: [This.GetName]"
                                prev = { set_variable = { which = planet_found value = 1 } }
                            }
                        }
                    }

                    if = { limit = { check_variable = { which = planet_found value = 1 } }
                        add_resource = { energy = -150 }               
                    }
                    else = {
                        # log = "---- NO NEW PLANET FOUND ----"
                    }
                }
            }
        }
    }    
}

# Move only unemployed and overcrowded
country_event = {
    id = eac_apm.10
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        every_owned_planet = {
            limit = {
                free_housing < 0
                count_pops = { limit = { is_unemployed = yes } count > 0 }
                NOT = { has_modifier = eac_apm_focus_no_migration_modifier }
                has_orbital_bombardment = no
                #free_jobs = 0
            }
            # log = "-- Planet: [This.GetName]"
            every_owned_pop = {
                limit = { 
                    is_unemployed = yes 
                    if = { 
                        limit = {
                            PREV = {
                                NOT = { has_modifier = eac_apm_focus_assimilating_modifier }
                            }
                        }
                        NOT = { has_citizenship_type = { type = citizenship_assimilation } } # Ignore assimilating pops                        
                    }
                    owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    OR = {
                        has_migration_control = no
                        pop_has_trait = trait_machine_unit 
                        pop_has_trait = trait_mechanical 
                        # species = { has_trait = trait_machine_unit }
                        # species = { has_trait = trait_mechanical }
                    }
                }
                # log = "--- Pop: [This.GetName]"
                if = { 
                    limit = { 
                        owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                        planet = { free_housing < 0 } # Only while overcrowded
                    }  
                    PREVPREV = {
                        # log = "--- firing eac_apm_find_new_home"
                        eac_apm_find_new_home = yes
                    }
                }
            }
        }
        country_event = { id = eac_apm.12 }
        country_event = { id = eac_apm.15 }
    }    
}

# Move all unemployed
country_event = {
    id = eac_apm.11
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        every_owned_planet = {
            limit = {
                count_pops = { limit = { is_unemployed = yes } count > 0 }
                NOT = { has_modifier = eac_apm_focus_no_migration_modifier }
                has_orbital_bombardment = no
            }
            # log = "-- Planet: [This.GetName]"
            every_owned_pop = {
                limit = { 
                    is_unemployed = yes 
                    if = { 
                        limit = {
                            PREV = {
                                NOT = { has_modifier = eac_apm_focus_assimilating_modifier }
                            }
                        }
                        NOT = { has_citizenship_type = { type = citizenship_assimilation } } # Ignore assimilating pops                        
                    }
                    owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    OR = {
                        has_migration_control = no
                        pop_has_trait = trait_machine_unit 
                        pop_has_trait = trait_mechanical 
                        # species = { has_trait = trait_machine_unit }
                        # species = { has_trait = trait_mechanical }
                    }
                }
                # log = "--- Pop: [This.GetName]"
                if = { 
                    limit = { 
                        owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    }  
                    PREVPREV = {
                        eac_apm_find_new_home = yes
                    }
                }
            }
        }
        country_event = { id = eac_apm.12 }
        country_event = { id = eac_apm.15 }
    }    
}

# Handle toiler jobs on thrall wordls
country_event = {
    id = eac_apm.12
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        # log = "eac_apm.12"
        every_owned_planet = {
            limit = {
                has_modifier = slave_colony
                any_owned_pop = { has_job = slave_toiler }
                has_modifier = eac_apm_focus_toilers_modifier
                has_orbital_bombardment = no
            }
            # log = "-- Planet: [This.GetName]"
            every_owned_pop = {
                limit = { 
                    has_job = slave_toiler 
                    if = { 
                        limit = {
                            PREV = {
                                NOT = { has_modifier = eac_apm_focus_assimilating_modifier }
                            }
                        }
                        NOT = { has_citizenship_type = { type = citizenship_assimilation } } # Ignore assimilating pops                        
                    }
                    owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    OR = {
                        has_migration_control = no
                        species = { has_trait = trait_machine_unit }
                        species = { has_trait = trait_mechanical }
                    }
                }
                # log = "--- Pop: [This.GetName]"
                if = { 
                    limit = { 
                        owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    }  
                    PREVPREV = {
                        # log = "--- fire find new home next"
                        eac_apm_find_new_home = yes
                    }
                }
            }
        }
    }    
}

# Move all low hab (60) pops regardless of housing or employment
country_event = {
    id = eac_apm.13
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        set_variable = { which = low_migration_60_counter value = 0 }
        every_owned_planet = {
            limit = {
                any_owned_pop = { planet = { habitability = { who = PREV value < 0.6 } } }
                NOT = { has_modifier = eac_apm_focus_no_migration_modifier }
                has_orbital_bombardment = no
            }
            # log = "-- Planet: [This.GetName]"
            every_owned_pop = {
                limit = { 
                    planet = { habitability = { who = PREV value < 0.6 } } 
                    if = { 
                        limit = {
                            PREV = {
                                NOT = { has_modifier = eac_apm_focus_assimilating_modifier }
                            }
                        }
                        NOT = { has_citizenship_type = { type = citizenship_assimilation } } # Ignore assimilating pops                        
                    }
                    owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    OR = {
                        has_migration_control = no
                        pop_has_trait = trait_machine_unit 
                        pop_has_trait = trait_mechanical 
                    }
                }
                # log = "--- Pop: [This.GetName]"
                if = { 
                    limit = { 
                        owner = { 
                            has_country_resource = { type = energy amount > 1000 } # minimum of 1K energy to move pops
                            check_variable = { which = low_migration_60_counter value < 3 } # at most 3 pops per month
                        } 
                        planet = { count_pops = { count > 1 } } # cannot move last pop
                    }  
                    PREVPREV = {
                        # log = "--- firing eac_apm_find_new_home"
                        eac_apm_find_new_home = yes
                        if = { limit = { check_variable = { which = planet_found value = 1 } }
                            change_variable = { which = low_migration_60_counter value = 1 }
                        }
                    }
                }
            }
        }
    }    
}

# Move all low hab (40) pops regardless of housing or employment
country_event = {
    id = eac_apm.14
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        set_variable = { which = low_migration_40_counter value = 0 }
        every_owned_planet = {
            limit = {
                any_owned_pop = { planet = { habitability = { who = PREV value < 0.4 } } }
                NOT = { has_modifier = eac_apm_focus_no_migration_modifier }
                has_orbital_bombardment = no
            }
            # log = "-- Planet: [This.GetName]"
            every_owned_pop = {
                limit = { 
                    planet = { habitability = { who = PREV value < 0.4 } } 
                    if = { 
                        limit = {
                            PREV = {
                                NOT = { has_modifier = eac_apm_focus_assimilating_modifier }
                            }
                        }
                        NOT = { has_citizenship_type = { type = citizenship_assimilation } } # Ignore assimilating pops                        
                    }
                    owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    OR = {
                        has_migration_control = no
                        pop_has_trait = trait_machine_unit 
                        pop_has_trait = trait_mechanical 
                    }
                }
                # log = "--- Pop: [This.GetName]"
                if = { 
                    limit = { 
                        owner = { 
                            has_country_resource = { type = energy amount > 1000 } # minimum of 1K energy to move pops
                            check_variable = { which = low_migration_40_counter value < 3 } # at most 3 pops per month
                        } 
                        planet = { count_pops = { count > 1 } } # cannot move last pop
                    }  
                    PREVPREV = {
                        # log = "--- firing eac_apm_find_new_home"
                        eac_apm_find_new_home = yes
                        if = { limit = { check_variable = { which = planet_found value = 1 } }
                            change_variable = { which = low_migration_40_counter value = 1 }
                        }
                    }
                }
            }
        }
    }    
}

# Handle all overcrowding on planets
country_event = {
    id = eac_apm.15
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        # log = "eac_apm.12"
        every_owned_planet = {
            limit = {
                has_modifier = eac_apm_focus_all_overcrowding_modifier
                free_housing < 0
                has_orbital_bombardment = no
            }
            # log = "-- Planet: [This.GetName]"
            every_owned_pop = {
                limit = { 
                    OR = {
					    is_pop_category = slave
                        is_pop_category = robot_servant
                    }
                    owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    OR = {
                        has_migration_control = no
                        species = { has_trait = trait_machine_unit }
                        species = { has_trait = trait_mechanical }
                    }
                    prev = { free_housing < 0 }
                }
                # log = "--- Pop: [This.GetName]"
                if = { 
                    limit = { 
                        owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                        prev = { free_housing < 0 }
                    }  
                    PREVPREV = {
                        # log = "--- fire find new home next"
                        eac_apm_find_new_home = yes
                    }
                }
            }
            every_owned_pop = {
                limit = { 
                    OR = {
                        is_pop_category = worker
					    is_pop_category = simple_drone
                    }
                    owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    OR = {
                        has_migration_control = no
                        species = { has_trait = trait_machine_unit }
                        species = { has_trait = trait_mechanical }
                    }
                    prev = { free_housing < 0 }
                }
                # log = "--- Pop: [This.GetName]"
                if = { 
                    limit = { 
                        owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                        prev = { free_housing < 0 }
                    }  
                    PREVPREV = {
                        # log = "--- fire find new home next"
                        eac_apm_find_new_home = yes
                    }
                }
            }
            every_owned_pop = {
                limit = { 
                    OR = {
                        is_pop_category = specialist
					    is_pop_category = complex_drone
					    is_pop_category = bio_trophy
                    }
                    owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                    OR = {
                        has_migration_control = no
                        species = { has_trait = trait_machine_unit }
                        species = { has_trait = trait_mechanical }
                    }
                    prev = { free_housing < 0 }
                }
                # log = "--- Pop: [This.GetName]"
                if = { 
                    limit = { 
                        owner = { has_country_resource = { type = energy amount > 1000 } } # minimum of 1K energy to move pops
                        prev = { free_housing < 0 }
                    }  
                    PREVPREV = {
                        # log = "--- fire find new home next"
                        eac_apm_find_new_home = yes
                    }
                }
            }
        }
    }    
}

country_event = {
    id = eac_apm.999
    is_triggered_only = yes
    title = eac_apm.999.title
    desc = eac_apm.999.desc
    picture = GFX_evt_unity_symbol

    immediate = {
        set_variable = { which = country_unemployed_pops value = 0 }
        set_variable = { which = country_free_jobs value = 0 }
        set_variable = { which = country_free_housing value = 0 }

        every_owned_planet = {
            if = { limit = { free_jobs > 0 } eac_apm_compute_planet_free_jobs = yes }
            if = { limit = { free_housing > 0 } eac_apm_compute_planet_free_housing = yes }
            eac_apm_compute_planet_unemployed_pops = yes
        }
    }

    option = {
        name = eac_apm_close_window
    }
}