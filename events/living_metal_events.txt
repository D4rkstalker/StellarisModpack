namespace = living_metal_events

country_event = {
	id = living_metal_events.0
	title = "living_metal_events.0.name"
	desc = "living_metal_events.0.desc"
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_synthetic_evolution

	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				OR = {
					has_trait = trait_mechanical
					has_trait = trait_machine_unit
				}
				NOT = { species = { has_trait = trait_living_metal } }
			}
			modify_species = {
				species = this
				add_trait = trait_living_metal
			}
			species = { save_event_target_as = living_metal_species }
		}
		change_dominant_species = { species = event_target:living_metal_species change_all = yes }
		#observer_event = { id = observer.5 }
		every_country = {
			limit = {
				is_ai = no
				has_communications = root
				NOT = { is_same_value = root }
			}
			#country_event = { id = utopia.2602 }
		}
	}

	option = {
		name = "living_metal_events.0.a"
		tooltip = {
			modify_species = {
				species = this
				add_trait = trait_living_metal
			}
		}
	}
}

planet_event = {
	id = living_metal_events.10
	hide_window = yes

	is_triggered_only = yes

	trigger = {	
		has_orbital_bombardment_stance = living_metal_seeding

	}

	immediate = {
		owner = {
			add_static_war_exhaustion = {
				attacker = from
				location = root
				value_for_planet_destruction = 1
			}
			country_event = { id = action.82 }
		}
		from = { country_event = { id = action.83 } }
		
		set_planet_flag = armageddon_nuked
		planet_event = { id = living_metal_events.99 }
	}
}

planet_event = {
	id = living_metal_events.20
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		AND = {
			has_orbital_bombardment_stance = living_metal_seeding 
			planet_devastation >= 25
		}
	}

	immediate = {
		if = {
			limit = { 
				AND = {
					planet_devastation >= 25 
					NOT = { has_deposit = d_living_metal_bombardment_deposit_1 }
				}
				
			}
			add_deposit = d_living_metal_bombardment_deposit_1
		}
		else_if = {
			limit = { 
				AND = {
					planet_devastation >= 50 
					NOT = { has_deposit = d_living_metal_bombardment_deposit_2 }
				}
				
			}
			add_deposit = d_living_metal_bombardment_deposit_2
		}
		else_if = {
			limit = { 
				AND = {
					planet_devastation >= 75 
					NOT = { has_deposit = d_living_metal_bombardment_deposit_3 }
				}
				
			}
			add_deposit = d_living_metal_bombardment_deposit_3
		}
		else_if = {
			limit = { 
				AND = {
					planet_devastation >= 100 
					NOT = { has_deposit = d_living_metal_bombardment_deposit_4 }
				}
				
			}
			add_deposit = d_living_metal_bombardment_deposit_4
			planet_event = {id = living_metal_events.10}
		}
	}
}

planet_event = {
	id = living_metal_events.30
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				is_planet_class = pc_living_metal				
			}
		}
		set_planet_flag = previously_seeded
	}
}
planet_event = {
	id = living_metal_events.31
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				has_planet_flag = previously_seeded
				OR = {
					is_planet_class = pc_barren
					is_planet_class = pc_ringworld
					is_planet_class = pc_habitat
				}
			}
		}
		remove_planet_flag = previously_seeded
		if = {
			limit = {
				exists = mining_station
			}
			mining_station = {
				delete_fleet = this
			}
		}
		if = {
			limit = {
				exists = research_station
			}
			research_station = {
				delete_fleet = this
			}
		}
	}
}


planet_event = {
	id = living_metal_events.99
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_deposit = {
			remove_deposit = yes
		}
		remove_modifier = "natural_beauty"
		remove_modifier = "atmospheric_aphrodisiac"
		remove_modifier = "atmospheric_hallucinogen"
		remove_modifier = "lush_planet"
		add_deposit = d_living_metal_planet_deposit
		every_owned_pop = {
			if = {
				limit = { 
					OR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
				random_list = {
					5 = {}
					1 = { from = {add_deposit = d_living_metal_pop_deposit} }
				}
				
			}
			else = {
				random_list = {
					10 = {}
					1 = { from = { add_deposit = d_living_metal_pop_deposit} }
				}
			
			}
		}
		if = {
			limit = { is_planet_class = pc_habitat }
			spawn_habitat_pacifier_effect = yes
			change_pc = {
				class = pc_habitat_living_metal
				inherit_entity = yes
			}
		}
		else_if = {
			limit = { is_planet_class = pc_ringworld_habitable }
			spawn_ringworld_pacifier_effect = yes
			change_pc = {
				class = pc_ringworld_living_metal
				inherit_entity = yes
			}
		}
		else = {
			change_pc = {
				class = pc_living_metal
				inherit_entity = yes
			}
		}
	}
}

planet_event = {
	id = living_metal_events.100
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				exists = owner
				owner = { NOT = { is_same_value = from.owner } }
				NOT = { is_planet_class = pc_ai }
			}
			from.owner = {
				country_event = { id = living_metal_events.110 }
			}
		}

		#Dismantle observation post
		if = {
			limit = {
				has_observation_outpost = yes
			}
			observation_outpost_owner = {
				country_event = { id = planet_destruction.1000 days = 1 }
			}
		}

		# Swarm Situation Log counter
		if = {
			limit = {
				exists = owner
				owner = { is_country_type = swarm }
			}
			every_country = {
				limit = { has_event_chain = "prethoryn_scourge_chain" }
				add_event_chain_counter = {
					event_chain = "prethoryn_scourge_chain"
					counter = "infested_worlds"
					amount = -1
				}
				add_event_chain_counter = {
					event_chain = "prethoryn_scourge_chain"
					counter = "infested_worlds_cleansed"
					amount = 1
				}
			}
		}

		if = {
			limit = {
				exists = owner
				owner = {
					NOT = { is_same_value = from.owner }
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
			}
			# Generate threat
			add_threat = { who = from.owner amount = 300 }
			# modifier for allies + those upset by the shield
			every_country = {
				limit = {
					NOT = { has_valid_civic = civic_machine_terminator }
					NOR = {
						is_same_value = from.owner
						is_same_value = root.owner
						AND = {
							has_federation = yes
							is_in_federation_with = from.owner
						}
					}
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						AND = {
							has_federation = yes
							is_in_federation_with = root.owner
						}
						has_ai_personality = awakened_fallen_empire_xenophile
						AND = {
							is_country_type = default
							OR = {
								is_egalitarian = yes
								is_xenophile = yes
								is_militarist = yes
							}
						}
					}
				}
				add_opinion_modifier = {
					modifier = opinion_seeded_a_world
					who = from.owner
				}
			}
			# modifiers for victim
			owner = {
				add_opinion_modifier = {
					modifier = opinion_seeded_my_world
					who = from.owner
				}
				if = {
					limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
					add_modifier = {
						modifier = colossus_victim
						days = 10800 # 30 years
					}
				}
			}
		}
		# Pandora's World Achievement
		from.owner = { country_event = { id = achievement.3 } }
		# Add war exhaustion to planet owner
		owner = {
			add_static_war_exhaustion = {
				attacker = from.fleet.owner
				location = root
				value_for_planet_destruction = 1.0
			}
		}
		clear_deposits = yes
		planet_event = { id = living_metal_events.99 }
	}
}

country_event = {
	id = living_metal_events.110
	title = living_metal_events.110.name
	desc = {
		text = living_metal_events.110.desc
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
	}
	desc = {
		text = living_metal_events.110.desc.alt
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
	}
	picture = GFX_evt_shielded_planet
	show_sound = event_mystic_reveal
	location = from

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = fired_seeder }
	}

	immediate = {
		set_country_flag = fired_seeder
	}

	option = {
		name = living_metal_events.110.a
		trigger = {
			NOR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
	}

	option = {
		name = living_metal_events.110.b
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
	}
}
