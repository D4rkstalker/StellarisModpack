namespace = mom_exiles

# Sets country flag for empire starting in Durin´s Forge System
event = {
	id = mom_exiles.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			limit = {
				has_origin = origin_mom_exiles
			}
			country_event = { id = mom_exiles.2 days = 5 }
			capital_scope = {
				solar_system = {
					spawn_system = {
						min_distance = 20
						max_distance = 60
						min_jumps = 2
						max_jumps = 4
						initializer = "mom_exiles_system"
					}
				}
			}
		}
	}
}

country_event = {
	id = mom_exiles.2
	title = "mom_exiles.2.name"
	desc = "mom_exiles.2.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_default
	location = capital_star
	
	is_triggered_only = yes
	
	immediate = {
		begin_event_chain = {
			event_chain = "mom_exiles"
		}
		closest_system = {
			limit = { 
				has_star_flag = mom_exiles_system
			}
			save_event_target_as = mom_exiles_system
		}
		create_point_of_interest = {
			id = mom_exiles_system.1
			name = mom_exiles_system.1.name
			desc = mom_exiles_system.1.desc
			event_chain = mom_exiles
			location = event_target:mom_exiles_system
		}
	}
	
	option = {
		name = mom_exiles.2.a
	}
}

# Fired when mom_exiles_system is visited
ship_event = {
	id = mom_exiles.3
	title = "mom_exiles.3.name"
	desc = "mom_exiles.3.desc"
	is_triggered_only = yes 
	show_sound = event_mystic_reveal
	picture = GFX_evt_fallen_empire
	location = root
	
	trigger = {
		FROM = { # system
			has_star_flag = mom_exiles_system
		}
		owner = { # Country
			has_event_chain = mom_exiles
			NOT = {
				has_country_flag = mom_exiles_system_found
			}
		}
	}
	
	immediate = {
		FROM = { # system
			random_system_planet = {
				limit = { has_planet_flag = mom_exiles_planet }
				save_event_target_as = mom_exiles_planet
			}
		}

		owner = {
			set_country_flag = mom_exiles_system_found
			remove_point_of_interest = mom_exiles_system.1
		}
	}
	
	option = {
		name = mom_exiles.3.a
		owner = {
			end_event_chain = "mom_exiles"
			begin_event_chain = {
				event_chain = "mom_exiles_planet"
			}
			create_point_of_interest = {
				id = mom_exiles_system.2
				name = mom_exiles_system.2.name
				desc = mom_exiles_system.2.desc
				event_chain = mom_exiles_planet
				location = event_target:mom_exiles_planet
			}
		}
	}
}

#Fired when mom_exiles_planet is surveyed
ship_event = {
	id = mom_exiles.4
	title = "mom_exiles.4.name"
	desc = "mom_exiles.4.desc"
	picture = GFX_evt_city_ruins
	is_triggered_only = yes
	location = from
	show_sound = event_ghost_town
	
	trigger = {
		FROM = { #planet
			has_planet_flag = mom_exiles_planet
		}
		owner = {
			has_event_chain = mom_exiles_planet
			not = {
				has_country_flag = mom_exiles_planet_surveyed
			}
		}
	}
	immediate = {
		owner = {
			remove_point_of_interest = mom_exiles_system.2
			set_country_flag = mom_exiles_planet_surveyed
		}
	}
	option = {
		name = mom_exiles.4.a
		enable_special_project = {
			name = "MOM_EXILES_PLANET_EXPEDITION_PROJECT"
			owner = root.owner
			location = from
		}
	}
}

#Fired when the expedition project is completed
ship_event = {
	id = mom_exiles.5
	title = "mom_exiles.5.name"
	desc = "mom_exiles.5.desc"
	picture = GFX_evt_city_ruins
	location = from
	show_sound = event_default
	is_triggered_only = yes
	immediate = {
		FromFromFrom = { # planet
			save_event_target_as = mom_exiles_planet
		}
		owner = {
			create_point_of_interest = {
				id = mom_exiles_system.3
				name = mom_exiles_system.3.name
				desc = mom_exiles_system.3.desc
				event_chain = mom_exiles_planet
				location = event_target:mom_exiles_planet
			}
			remove_point_of_interest = mom_exiles_system.2
		}
	}
	
	option = {
		name = mom_exiles.5.a
		FromFromFrom = {
			add_modifier = {
				modifier = "mom_expedition_preparation"
				days = -1
			}
		}
		hidden_effect = {
			owner = {
				abort_special_project = {
					type = "MOM_EXILES_PLANET_EXPEDITION_PROJECT"
					location = event_target:mom_exiles_planet
				}
			}
		}
	}
}

# event 6 removed

planet_event = {
	id = mom_exiles.7
	title = "mom_exiles.7.name"
	desc = "mom_exiles.7.desc"
	location = ROOT
	show_sound = event_construction
	picture = GFX_evt_city_ruins
	
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}
	trigger = {
		has_planet_flag = mom_exiles_planet
		owner = {
			has_event_chain = mom_exiles_planet
		}
		num_pops > 0
	}
	immediate = {
		owner = {
			create_point_of_interest = {
				id = mom_exiles_system.4
				name = mom_exiles_system.4.name
				desc = mom_exiles_system.4.desc
				event_chain = mom_exiles_planet
				location = ROOT
			}
			remove_point_of_interest = mom_exiles_system.3
		}
	}
	option = {
		name = mom_exiles.7.a
	}
}

#Last Tileblocker removed. Entrance to the Depth found
planet_event = {
	id = mom_exiles.8001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		planet_event = { id = mom_exiles.8002 days = 1 }
	}
}

planet_event = {
	id = mom_exiles.8002
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = {
					has_deposit = d_mom_city_ruins
				}
			}
			planet_event = { id = mom_exiles.8 }
		}
	}
}

planet_event = {
	id = mom_exiles.8
	title = "mom_exiles.8.name"
	desc = "mom_exiles.8.desc"
	location = ROOT
	show_sound = event_mystic_reveal
	picture = GFX_evt_alien_ruins
	is_triggered_only = yes

	immediate = {
		set_planet_flag = mom_exiles_mines
		owner = {
			remove_point_of_interest = mom_exiles_system.4
		}
	}
	option = {
		name = mom_exiles.8.a
		add_deposit = d_mom_exiles_mines
		owner = {
			enable_special_project = {
				name = "MOM_EXILES_DEEPS_EXPEDITION_PROJECT"
				owner = root.owner
				location = ROOT
			}
		}
	}
}

# Expedition leads to Attack

planet_event = {
	id = mom_exiles.9
	title = "mom_exiles.9.name"
	desc = "mom_exiles.9.desc"
	show_sound = event_air_raid_siren
	location = ROOT
	picture = GFX_evt_ground_combat
	
	is_triggered_only = yes
 
	trigger = {
		owner = {
			has_event_chain = mom_exiles_planet
		}
	}
	
	immediate = {
		create_country = {
			name = "Underground Horrors"
			type = faction
			effect = {
				establish_communications_no_message = root.owner
			}
			flag = {
				icon = {
					category = "pirate"
					file = "flag_pirate_10.dds"
				}
				background= {
					category = "backgrounds"
					file = "new_dawn.dds"
				}
				colors = {
					"red"
					"black"
					"null"
					"null"
				}
			}
		}
		IF = {
			limit = {
				owner = {
					is_ai = no
				}
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
		}
		else = {
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
		}
		
		last_created_country = {
			save_global_event_target_as = mom_underground_horrors
		}
		owner = {
			set_country_flag = mom_exiles_fight_1
		}
	}
	
	option = {
		name = mom_exiles.9.a
		add_modifier = {
			modifier = "mom_scared_population"
			days = -1
		}
	}
}

#Lost to Ancient Horrors

planet_event = {
	id = mom_exiles.10
	title = "mom_exiles.10.name"
	desc = "mom_exiles.10.desc"
	location = root
	show_sound = event_ground_battle
	picture = GFX_evt_ground_combat

	mean_time_to_happen = {
		months = 2
	}

	pre_triggers = {
		has_owner = yes
		is_occupied_flag = yes
	}
	trigger = {
		has_planet_flag = mom_exiles_planet
		#Owner of the planet has event chain
		owner = { # Country
			has_event_chain = mom_exiles_planet
			not = {
				has_country_flag = mom_exiles_lost_1
			}
		}
		
		#Attackers are horrors
		controller = {
			is_same_value = event_target:mom_underground_horrors
		}
	}
	immediate = {
		planet_event = {
			id = mom_exiles.14 #Start the rolling purge
			days = 60
		}
		owner = { # country
			set_country_flag = mom_exiles_lost_1
			country_event = {
				id = mom_exiles.11 # Inform player about what will happen when the horrors are controlling the planet
				days = 60
			}
		}
	}
	option = {
		name = mom_exiles.10.a
	}
}

# Inform player about what will happen when the horrors are controlling the planet
country_event = {
	id = mom_exiles.11
	title = "mom_exiles.11.name"
	desc = "mom_exiles.11.desc"
	is_triggered_only = yes
	show_sound = event_red_alert
	picture = GFX_evt_interior_battle
	location = event_target:mom_exiles_planet

	option = {
		name = mom_exiles.11.a
	}
}

#Defended against Ancient Horrors

# defend win
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
country_event = {
	id = mom_exiles.12
	title = "mom_exiles.12.name"
	desc = "mom_exiles.12.desc"
	is_triggered_only = yes
	location = FromFrom
	show_sound = event_ground_battle
	picture = GFX_evt_ground_combat
	
	trigger = {
		fromfrom = { #planet
			has_planet_flag = mom_exiles_planet
			is_occupied_flag = no
		}
		has_country_flag = mom_exiles_fight_1
		has_event_chain = mom_exiles_planet
		NOT = {
			has_country_flag = mom_exiles_retaliation
		}
	}
	immediate = {
		remove_country_flag = mom_exiles_fight_1
	}
	option = {
		name = mom_exiles.12.a
		random_owned_planet = {
			limit = {
				has_planet_flag = mom_exiles_planet
			}
			enable_special_project = {
				name = "MOM_EXILES_DEEPS_RETALIATION_PROJECT"
				owner = ROOT
				location = THIS
			}
		}
	}
}

#Reconquest against Horrors

planet_event = {
	id = mom_exiles.13
	title = "mom_exiles.13.name"
	desc = "mom_exiles.13.desc"
	location = root
	show_sound = event_ground_battle
	picture = GFX_evt_ground_combat

	mean_time_to_happen = {
		months = 2
	}

	pre_triggers = {
		has_owner = yes
		has_ground_combat = no
		is_occupied_flag = no
	}
	trigger = {		
		has_planet_flag = mom_exiles_planet		
		owner = {
			has_event_chain = mom_exiles_planet
			has_country_flag = mom_exiles_fight_1
			NOT = {
				has_country_flag = mom_exiles_retaliation
			}
		}
	}
	immediate = {
		owner = {
			remove_country_flag = mom_exiles_fight_1
		}
	}
	option = {
		name = mom_exiles.13.a
		enable_special_project = {
			name = "MOM_EXILES_DEEPS_RETALIATION_PROJECT"
			owner = ROOT.owner
			location = root
		}
	}
}

# Periodically kill a pop until there is only one left
# Then give an event to the owner telling them about the pop fortifying their position.
planet_event = {
	id = mom_exiles.14
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = {
		is_occupied_flag = yes
	}
	trigger = {
		has_planet_flag = mom_exiles_planet		
		owner = {
			OR = {
				has_country_flag = mom_exiles_fight_1
				has_country_flag = mom_exiles_retaliation
			}
		}
	}
	immediate = {
		IF = {
			limit = { 
				count_pops = {
					count > 10
				} 
			}
			random_pop = {
				kill_pop = yes
			}
			planet_event = {
				id = mom_exiles.14 #Re fire this event in a month
				days = 90
				random = 15
			}
		}
		else = {
			owner = {
				country_event = { id = mom_exiles.15 } # The last pops have fortified their position.
			}
		}
	}
}

# The last pops have fortified their position.
country_event = {
	id = mom_exiles.15
	title = "mom_exiles.15.name"
	desc = "mom_exiles.15.desc"
	is_triggered_only = yes
	show_sound = event_red_alert
	picture = GFX_evt_interior_battle
	location = event_target:mom_exiles_planet
	
	option = {
		name = mom_exiles.15.a
	}
}

# Assault of the Underground
planet_event = {
	id = mom_exiles.16
	title = "mom_exiles.16.name"
	desc = "mom_exiles.16.desc"
	show_sound = event_air_raid_siren
	location = ROOT
	picture = GFX_evt_ground_combat
	
	is_triggered_only = yes
	
	trigger = {
		owner = { # Country
			has_event_chain = mom_exiles_planet
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = mom_exiles_retaliation
		}
		create_country = {
			name = "Underground Horrors"
			type = faction
			effect = {
				establish_communications_no_message = root.owner
			}
			flag = {
				icon = {
					category = "pirate"
					file = "flag_pirate_10.dds"
				}
				background= {
					category = "backgrounds"
					file = "new_dawn.dds"
				}
				colors = {
					"red"
					"black"
					"null"
					"null"
				}
			}	
		}
		IF = {
			limit = {
				owner = {
					is_ai = no
				}
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
		}
		else = {
			create_army = {
				name = "Ancient Horrors"
				owner = last_created
				type = "mom_ancient_horrors"
			}
		}
		last_created_country = {
			save_global_event_target_as = mom_underground_horrors
		}
	}
	option = {
		name = mom_exiles.16.a
	}
}

#Defended against Ancient Horrors

# defend win
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
country_event = {
	id = mom_exiles.17
	title = "mom_exiles.17.name"
	desc = "mom_exiles.17.desc"
	is_triggered_only = yes
	location = FromFrom
	show_sound = event_ground_battle
	picture = GFX_evt_ground_combat

	trigger = {
		fromfrom = { #planet
			has_planet_flag = mom_exiles_planet
			is_occupied_flag = no
		}
		has_event_chain = mom_exiles_planet
		has_country_flag = mom_exiles_retaliation
	}
	immediate = {
		remove_country_flag = mom_exiles_retaliation
	}
	option = {
		name = mom_exiles.17.a
		random_owned_planet = {
			limit = {
				has_planet_flag = mom_exiles_planet
			}
			remove_modifier = "mom_scared_population"
			add_modifier = {
				modifier = "mom_underground_secured"
				days = -1
			}
		}
		end_event_chain = "mom_exiles_planet"
		hidden_effect = {
			country_event = { id = mom_exiles.181 days = 1000 random = 500 }
		}
	}
}

#Reconquest against Horrors

planet_event = {
	id = mom_exiles.18
	title = "mom_exiles.17.name"
	desc = "mom_exiles.17.desc"
	location = root
	show_sound = event_ground_battle
	picture = GFX_evt_ground_combat

	mean_time_to_happen = {
		months = 2
	}
	
	pre_triggers = {
		has_owner = yes
		has_ground_combat = no
		is_occupied_flag = no
	}
	trigger = {
		
		has_planet_flag = mom_exiles_planet
		
		
		owner = {
			has_event_chain = mom_exiles_planet
			has_country_flag = mom_exiles_retaliation
		}
	}
	immediate = {
		owner = {
			remove_country_flag = mom_exiles_retaliation
		}
	}
	option = {
		name = mom_exiles.17.a
		save_event_target_as = mom_exiles_planet
		remove_modifier = "mom_scared_population"
		owner = {
			end_event_chain = "mom_exiles_planet"
		}
		hidden_effect = {
			owner = {
				country_event = { id = mom_exiles.181 days = 1000 random = 500 }
			}
		}
	}
}

country_event = {
	id = mom_exiles.181
	title = "mom_exiles.181.name"
	desc = "mom_exiles.181.desc"
	location = event_target:mom_exiles_planet
	is_triggered_only = yes
	show_sound = event_mystic_reveal
	picture = GFX_evt_physics_research
	
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mom_exiles_planet
			}
			save_event_target_as = mom_exiles_planet
		}
	}
	
	option = {
		name = mom_exiles.181.a
		begin_event_chain = {
			event_chain = "mom_exiles_planet_rebuilding"
		}
		random_owned_planet = {
			limit = {
				has_planet_flag = mom_exiles_planet
			}
			save_event_target_as = mom_exiles_planet
			enable_special_project = {
				name = "MOM_EXILES_RESTORATION_PROJECT"
				owner = ROOT
				location = THIS
			}
		}
	}
}

# Atmospheric Renewer repaired
planet_event = {
	id = mom_exiles.19
	title = "mom_exiles.19.name"
	desc = "mom_exiles.19.desc"
	location = ROOT
	show_sound = event_construction
	picture = GFX_evt_physics_research
	
	is_triggered_only = yes
	
	trigger = {
		owner = { # Country
			has_event_chain = mom_exiles_planet_rebuilding
		}
	}
	
	option = {
		name = mom_exiles.19.a
		hidden_effect = {
			planet_event = { id = mom_exiles.20 days = 1800 random = 60 }
		}
	}	
}

# Atmosphere Restored
planet_event = {
	id = mom_exiles.20
	title = "mom_exiles.20.name"
	desc = "mom_exiles.20.desc"
	location = ROOT
	show_sound = event_cityscape
	picture = GFX_evt_news_room
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			has_event_chain = mom_exiles_planet_rebuilding
		}
	}
	
	immediate = {
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_continental
					}
				}
			}
			change_pc = pc_continental
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_desert
					}
				}
			}
			change_pc = pc_desert
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_tropical
					}
				}
			}
			change_pc = pc_tropical
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_arid
					}
				}
			}
			change_pc = pc_arid
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_ocean
					}
				}
			}
			change_pc = pc_ocean
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_tundra
					}
				}
			}
			change_pc = pc_tundra
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_arctic
					}
				}
			}
			change_pc = pc_arctic
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_savannah
					}
				}
			}
			change_pc = pc_savannah
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						is_planet_class = pc_alpine
					}
				}
			}
			change_pc = pc_alpine
		}
		if = {
			limit = {
				owner = {
					home_planet = {
						NOR = {
							is_planet_class = pc_arctic
							is_planet_class = pc_tundra
							is_planet_class = pc_ocean
							is_planet_class = pc_arid
							is_planet_class = pc_tropical
							is_planet_class = pc_desert
							is_planet_class = pc_continental
							is_planet_class = pc_savannah
							is_planet_class = pc_alpine
						}
					}	
				}
			}
			change_pc = pc_gaia
		}
	}
	
	option = {
		name = mom_exiles.20.a
		owner = {	
			random_owned_planet = {
				limit = {
					has_planet_flag = mom_exiles_planet
				}
				remove_modifier = "irradiated_planet"
				remove_modifier = "mom_expedition_preparation"
				set_planet_flag = mom_exiles_planet_restored
			}
		}
		hidden_effect = {
			planet_event = { id = mom_exiles.21 days = 1800 random = 150 }
		}
	}
}

# Living metal storage found and project to study it and a possible restoration of the ring
planet_event = {
	id = mom_exiles.21
	title = "mom_exiles.21.name"
	desc = "mom_exiles.21.desc"
	location = ROOT
	show_sound = event_mystic_reveal
	picture = GFX_evt_news_room
	
	is_triggered_only = yes
	
	trigger = {
		has_planet_flag = mom_exiles_planet_restored
		owner = { # Country
			has_event_chain = mom_exiles_planet_rebuilding
		}
	}
	
	option = {
		name = mom_exiles.21.a
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mom_exiles_planet
				}
				enable_special_project = {
					name = "MOM_EXILES_RING_RECONSTRUCTION_PROJECT"
					owner = ROOT
					location = THIS
				}
			}
		}
	}
}

# Ring restoration Project complete
planet_event = {
	id = mom_exiles.22
	title = "mom_exiles.22.name"
	desc = "mom_exiles.22.desc"
	location = ROOT
	show_sound = event_construction
	picture = GFX_evt_space_station
	
	is_triggered_only = yes
	
	trigger = {
		has_planet_flag = mom_exiles_planet_restored
		owner = { # Country
			has_event_chain = mom_exiles_planet_rebuilding
		}
	}
	
	option = {
		name = mom_exiles.22.a
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mom_exiles_planet
				}
				set_planet_flag = mom_exiles_ring_restoration
				add_modifier = {
					modifier = "mom_ringworld_reconstruction"
					days = -1
				}
			}
		}
		hidden_effect = {
			planet_event = { id = mom_exiles.23 days = 3600 random = 300 }
		}
	}
}

# Ringworld restored
planet_event = {
	id = mom_exiles.23
	title = "mom_exiles.23.name"
	desc = "mom_exiles.23.desc"
	location = ROOT
	show_sound = event_celebration
	picture = GFX_evt_ringworld
	
	is_triggered_only = yes
	
	trigger = {
		has_planet_flag = mom_exiles_ring_restoration
		owner = { # Country
			has_event_chain = mom_exiles_planet_rebuilding
		}
	}
	
	option = {
		name = mom_exiles.23.a
		remove_modifier = "mom_ringworld_reconstruction"
		remove_modifier = "wasteland_orbital_debris"
		solar_system = {
			every_system_ambient_object = {
				destroy_ambient_object = this
			}
		}
		add_modifier = {
			modifier = "mom_ringworld_restored"
			days = -1
		}
		owner = {
			add_modifier = {
				modifier = "mom_ringworld_reconstructed"
				days = 3600
			}

			random_owned_planet = {
				limit = {
					has_planet_flag = mom_exiles_ring_restoration
				}
				create_ambient_object = {
					type = "mom_exiles_intact_ring_01_object"
					location = THIS
				}
				last_created_ambient_object = {
					set_location = {
						target = PREV
						distance = 0
						angle = 0
					}
				}
			}
			end_event_chain = "mom_exiles_planet_rebuilding"
		}
	}
}