# Government Variety Pack
# Events - Shroud-Touched Origin
# Author: littleraskol

namespace = lrsk_gov_var_shroud_touched

# Sets initial tech progress, planet deposit, and pop traits
country_event = {
	id = lrsk_gov_var_shroud_touched.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = lrsk_gov_var_origin_shroud_touched
	}

	immediate = {
		set_country_flag = lrsk_gov_var_shroud_touched_nation

		add_research_option = tech_psionic_theory
		add_tech_progress = {
			tech = tech_psionic_theory
			progress = 0.05
		}

		# Tag species as being a shroud-touched origin. Not sure if useful...
		species = { set_species_flag = lrsk_gov_var_shroud_touched_species }
		
		# Randomly sets some to Latent Psionic or to lose Natural Esper
		every_owned_pop = { pop_event = { id = lrsk_gov_var_shroud_touched.3 } }

		capital_scope ={
			if = {
				limit = { owner = { has_origin = lrsk_gov_var_origin_shroud_touched } } # probably redundant but eh

				set_planet_flag = lrsk_gov_var_shroud_touched_capital

				add_deposit = d_lrsk_gov_var_shroud_pockets
			}
		}

		# Semi-immediate check that some other mod did not remove the shroud pockets
		country_event = {
			id = lrsk_government_variety_pack_backend.2
			days = 2
		}
	}
}

#Catches pop growth on planet
planet_event = {
	id = lrsk_gov_var_shroud_touched.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {	fromfrom = { pop_has_trait = lrsk_gov_var_trait_natural_esper } }

	immediate = {
		if = {
			limit = { fromfrom = { pop_has_trait = lrsk_gov_var_trait_natural_esper } } # probably redundant but eh
			fromfrom = { pop_event = { id = lrsk_gov_var_shroud_touched.3 } }
		}
	}

}

# Handles traits on pops
pop_event = {
	id = lrsk_gov_var_shroud_touched.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		#species = { has_species_flag = lrsk_gov_var_shroud_touched_species }
		pop_has_trait = lrsk_gov_var_trait_natural_esper
	}

	immediate = {
		if = {
			limit = { pop_has_trait = lrsk_gov_var_trait_natural_esper } # probably redundant but eh
			if = {
				limit = {
					or = {
						pop_has_trait = trait_latent_psionic
						pop_has_trait = trait_psionic
					}
				}
				modify_species = {
					species = this
					remove_trait = lrsk_gov_var_trait_natural_esper
				}
				owner = { if = {
					limit = {
						has_country_flag = lrsk_gov_var_shroud_touched_nation
						NOT = { has_country_flag = lrsk_gov_var_shroud_touched_esper_undone } 
					} 
					country_event = { id = lrsk_gov_var_shroud_touched.4 }
				} } # in this case, we have to remove them ALL.
			}
			else = {
				# Usually do nothing, rarely promote pop to Latent Psionic, sometimes remove Natural Esper
				random_list = {
					60 = { } 
					5 = { 
						modify_species = { 
							species = this
							remove_trait = lrsk_gov_var_trait_natural_esper
							add_trait = trait_latent_psionic
							#set_species_flag = lrsk_gov_var_shroud_touched_promoted
						} 
					}
					35 = {
						modify_species = { 
							species = this
							remove_trait = lrsk_gov_var_trait_natural_esper
							#set_species_flag = lrsk_gov_var_shroud_touched_demoted
						} 
					}
				}
			}
		}
	}
}

# Attempt to change species after ascension.
country_event = {
	id = lrsk_gov_var_shroud_touched.4
	hide_window = yes
	is_triggered_only = yes
	#fire_only_once = yes

	trigger = {
		or = { 
			has_ascension_perk = ap_mind_over_matter
			has_ascension_perk = ap_transcendence
		}
		has_country_flag = lrsk_gov_var_shroud_touched_nation
		NOT = { has_country_flag = lrsk_gov_var_shroud_touched_esper_undone }
	}

	immediate = {
		if = {
			limit = { or = {
				has_ascension_perk = ap_mind_over_matter
				has_ascension_perk = ap_transcendence
			} }
			every_owned_pop = {
				if = { 
					limit = {
						pop_has_trait = lrsk_gov_var_trait_natural_esper
						or = {
							pop_has_trait = trait_latent_psionic
							pop_has_trait = trait_psionic
						}
					}
					modify_species = {
						species = this
						remove_trait = lrsk_gov_var_trait_natural_esper
					}
				}
			}

			modify_species = {
				species = this
				remove_trait = lrsk_gov_var_trait_natural_esper
			}

			set_country_flag = lrsk_gov_var_shroud_touched_esper_undone
		}
	}
}

# New Leaders Get Psionic/Esper Traits
country_event = {
	id = lrsk_gov_var_shroud_touched.5
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = { has_trait = lrsk_gov_var_trait_natural_esper }
		}
	}

	immediate = {
		from = {
			random_list = {
				#usually no trait
				60 = {}
				#very rarely get full on psionic
				5 = {
					modifier = {
						factor = 0
						owner = {
							OR = {
								has_ascension_perk = ap_mind_over_matter
								has_ascension_perk = ap_transcendence
							}
						} # probably redundant but eh
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					else_if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					else_if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					else_if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
					else_if = {
						limit = { leader_class = ruler }
						add_trait = leader_trait_ruler_psionic
						add_ruler_trait = leader_trait_ruler_psionic
					}
				}
				#sometimes get esper trait
				35 = {
					modifier = {
						factor = 0
						root = {
							OR = {
								has_ascension_perk = ap_mind_over_matter
								has_ascension_perk = ap_transcendence
							}
						} # probably redundant but eh
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = lrsk_gov_var_leader_trait_admiral_esper
						add_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
					}
					else_if = {
						limit = { leader_class = general }
						add_trait = lrsk_gov_var_leader_trait_general_esper
						add_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
					}
					else_if = {
						limit = { leader_class = governor }
						add_trait = lrsk_gov_var_leader_trait_governor_esper
						add_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
					}
					else_if = {
						limit = { leader_class = scientist }
						add_trait = lrsk_gov_var_leader_trait_scientist_esper
						add_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
					}
					else_if = {
						limit = { leader_class = ruler }
						add_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
					}

				}
			}
		}
	}
}

# Ruler gets normal class trait if one hasn't been assigned
country_event = {
	id = lrsk_gov_var_shroud_touched.6
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			has_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
			NOR = {
				has_trait = lrsk_gov_var_leader_trait_admiral_esper
				has_trait = lrsk_gov_var_leader_trait_general_esper
				has_trait = lrsk_gov_var_leader_trait_governor_esper
				has_trait = lrsk_gov_var_leader_trait_scientist_esper
				has_trait = leader_trait_admiral_psionic
				has_trait = leader_trait_general_psionic
				has_trait = leader_trait_governor_psionic
				has_trait = leader_trait_scientist_psionic
				has_trait = leader_trait_admiral_chosen
				has_trait = leader_trait_general_chosen
				has_trait = leader_trait_governor_chosen
				has_trait = leader_trait_scientist_chosen			
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = lrsk_gov_var_leader_trait_admiral_esper
				break = yes
			}
			if = {
				limit = { leader_class = general }
				add_trait = lrsk_gov_var_leader_trait_general_esper
				break = yes
			}
			if = {
				limit = { leader_class = governor }
				add_trait = lrsk_gov_var_leader_trait_governor_esper
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				add_trait = lrsk_gov_var_leader_trait_scientist_esper
				break = yes
			}
		}
	}
}

# Convert leader traits to psionic when AP advances to mind-over-matter
country_event = {
	id = lrsk_gov_var_shroud_touched.7
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_country_flag = lrsk_gov_var_shroud_touched_nation
		has_ascension_perk = ap_mind_over_matter
		NOT = { has_ascension_perk = ap_transcendence }
	}

	immediate = {
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
			every_owned_leader = {
				limit = {
					is_same_species = root
					NOR = {
						has_leader_flag = lrsk_gov_var_esper_ap_mom_checked
						has_trait =	leader_trait_admiral_psionic
						has_trait =	leader_trait_general_psionic
						has_trait =	leader_trait_governor_psionic
						has_trait =	leader_trait_scientist_psionic
						has_trait =	leader_trait_ruler_psionic
					}
					OR = {
						has_trait = lrsk_gov_var_leader_trait_admiral_esper
						has_trait = lrsk_gov_var_leader_trait_general_esper
						has_trait = lrsk_gov_var_leader_trait_governor_esper
						has_trait = lrsk_gov_var_leader_trait_scientist_esper
						has_trait = lrsk_gov_var_leader_trait_ruler_esper		
					}
				}
				set_leader_flag = lrsk_gov_var_esper_ap_mom_checked
				random_list = {
					40 = {
						if = {
							limit = { has_trait = lrsk_gov_var_leader_trait_admiral_esper }
							remove_trait = lrsk_gov_var_leader_trait_admiral_esper
							add_trait = leader_trait_admiral_psionic
							add_ruler_trait = leader_trait_ruler_psionic
						}
						if = {
							limit = { has_trait = lrsk_gov_var_leader_trait_general_esper }
							remove_trait = lrsk_gov_var_leader_trait_general_esper
							add_trait = leader_trait_general_psionic
							add_ruler_trait = leader_trait_ruler_psionic
						}
						if = {
							limit = { has_trait = lrsk_gov_var_leader_trait_governor_esper }
							remove_trait = lrsk_gov_var_leader_trait_governor_esper
							add_trait = leader_trait_governor_psionic
							add_ruler_trait = leader_trait_ruler_psionic
						}
						if = {
							limit = { has_trait = lrsk_gov_var_leader_trait_scientist_esper }
							remove_trait = lrsk_gov_var_leader_trait_scientist_esper
							add_trait = leader_trait_scientist_psionic
							add_ruler_trait = leader_trait_ruler_psionic
						}
						if = {
							limit = { has_trait = lrsk_gov_var_leader_trait_ruler_esper }
							remove_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
							add_ruler_trait = leader_trait_ruler_psionic
						}
					}
					60 = {	} #Do nothing
				}
			}
		}
	}
}

# Convert leader traits to psionic when AP advances to transcend
country_event = {
	id = lrsk_gov_var_shroud_touched.8
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_country_flag = lrsk_gov_var_shroud_touched_nation
		has_ascension_perk = ap_transcendence
	}

	immediate = {
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
			every_owned_leader = {
				limit = {
					is_same_species = root
					NOT = { has_leader_flag = lrsk_gov_var_esper_ap_trscd_checked }
				}
				set_leader_flag = lrsk_gov_var_esper_ap_trscd_checked
				if = {
					limit = { has_trait = lrsk_gov_var_leader_trait_admiral_esper }
					remove_trait = lrsk_gov_var_leader_trait_admiral_esper
				}
				if = {
					limit = { has_trait = lrsk_gov_var_leader_trait_general_esper }
					remove_trait = lrsk_gov_var_leader_trait_general_esper
				}
				if = {
					limit = { has_trait = lrsk_gov_var_leader_trait_governor_esper }
					remove_trait = lrsk_gov_var_leader_trait_governor_esper
				}
				if = {
					limit = { has_trait = lrsk_gov_var_leader_trait_scientist_esper }
					remove_trait = lrsk_gov_var_leader_trait_scientist_esper
				}
				if = {
					limit = { has_trait = lrsk_gov_var_leader_trait_ruler_esper }
					remove_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
				}
			}
		}
	}
}

# A kind of general fallback sanity check...
event = {
	id = lrsk_gov_var_shroud_touched.9
	is_triggered_only = yes
	hide_window = yes

	trigger = {
	}

	immediate = {
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
			every_owned_leader = {
				limit = {
					OR = {
						has_trait = lrsk_gov_var_leader_trait_admiral_esper
						has_trait = lrsk_gov_var_leader_trait_general_esper
						has_trait = lrsk_gov_var_leader_trait_governor_esper
						has_trait = lrsk_gov_var_leader_trait_scientist_esper
						has_trait = lrsk_gov_var_leader_trait_ruler_esper		
					}
					OR = {
						has_trait =	leader_trait_admiral_psionic
						has_trait =	leader_trait_general_psionic
						has_trait =	leader_trait_governor_psionic
						has_trait =	leader_trait_scientist_psionic
						has_trait =	leader_trait_ruler_psionic
						has_trait = leader_trait_admiral_chosen
						has_trait = leader_trait_general_chosen
						has_trait = leader_trait_governor_chosen
						has_trait = leader_trait_scientist_chosen
						has_trait = leader_trait_ruler_chosen
					}
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_admiral_esper
						has_trait = leader_trait_admiral_psionic
					} }
					remove_trait = lrsk_gov_var_leader_trait_admiral_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_general_esper
						has_trait = leader_trait_general_psionic
					} }
					remove_trait = lrsk_gov_var_leader_trait_general_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_governor_esper
						has_trait = leader_trait_governor_psionic
					} }
					remove_trait = lrsk_gov_var_leader_trait_governor_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_scientist_esper
						has_trait = leader_trait_scientist_psionic
					} }
					remove_trait = lrsk_gov_var_leader_trait_scientist_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_ruler_esper
						has_trait = leader_trait_ruler_psionic
					} }
					remove_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_admiral_esper
						has_trait = leader_trait_admiral_chosen
					} }
					remove_trait = lrsk_gov_var_leader_trait_admiral_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_general_esper
						has_trait = leader_trait_general_chosen
					} }
					remove_trait = lrsk_gov_var_leader_trait_general_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_governor_esper
						has_trait = leader_trait_governor_chosen
					} }
					remove_trait = lrsk_gov_var_leader_trait_governor_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_scientist_esper
						has_trait = leader_trait_scientist_chosen
					} }
					remove_trait = lrsk_gov_var_leader_trait_scientist_esper
				}
				if = {
					limit = { and = {
						has_trait = lrsk_gov_var_leader_trait_ruler_esper
						has_trait = leader_trait_ruler_chosen
					} }
					remove_ruler_trait = lrsk_gov_var_leader_trait_ruler_esper
				}
			}
		}
	}
}
event = {
	id = lrsk_gov_var_shroud_touched.10
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		#any_pop = {
		#	pop_has_trait = lrsk_gov_var_trait_natural_esper
		#	OR = {
		#		pop_has_trait = trait_latent_psionic
		#		pop_has_trait = trait_psionic
		#	}
		#}
	}

	immediate = {
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
			every_owned_pop = {
				limit = {
					pop_has_trait = lrsk_gov_var_trait_natural_esper
					OR = {
						pop_has_trait = trait_latent_psionic
						pop_has_trait = trait_psionic
					}
				}
				modify_species = {
					species = this
					remove_trait = lrsk_gov_var_trait_natural_esper
				}
			}
		}
	}
}