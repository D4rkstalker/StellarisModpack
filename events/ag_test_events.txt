namespace = ag_test

# Special Test Events/Effects:
# Use "effect ag_set_difficulty = { ag_value = x }" to set difficulty to some value that cannot be set in Mod Menu.
# ag_test.999x events are used in testing UI, useless in actual gameplay.
# Other events could spawn ships around your capital, different from ships acquired from "add_ship" command, these ships have flags, variables, and could trigger events.

country_event = {
	id = ag_test.9999
	title = "Test Event #9999"
	desc = "Here is a long description, very very long..."
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = { room = ag_ancient_ai_red_room }
	
	location = capital_scope
	trackable = yes
	
	is_triggered_only = yes
	trigger = { always = no }
	
	option = { name = "Option 1" }
	option = { name = "Option 2" }
	option = { name = "Option 3" }
	option = { name = "Option 4" }
	option = { name = "Option 5" }
	option = { name = "Option 6" }
	option = { name = "Option 7" }
	option = { name = "Option 8" }
	option = { name = "Option 9" }
	option = { name = "Option 10" }
	option = { name = "Option 11" }
	option = { name = "Option 12" }
	option = { name = "Option 13" }
	option = { name = "Option 14" }
	option = { name = "Option 15" }
	option = { name = "Option 16" }
}
country_event = {
	id = ag_test.9998
	title = "Test Event #9998"
	desc = "Here is a long description, very very long..."
	diplomatic = yes
	custom_gui = "ag_ship_action_window"
	custom_gui_option = "ag_action_background_option"
	picture_event_data = { room = ag_ancient_empire_mod_settings_room }
	is_triggered_only = yes
	trigger = { always = no }
	immediate = { }
	option = {
		name = "ag_ship_action.1.1"
		default_hide_option = yes
	}
	option = {
		name = "ag_ship_action.1.2"
	}
	option = {
		name = "ag_ship_action.1.3"
	}
	# option = { name = "" custom_gui = "ag_ancient_knowledge_option_description" }
	# option = { name = "Option 1" custom_gui = "ag_ancient_knowledge_extended_background_option" }
	# option = { name = "" custom_gui = "ag_ancient_knowledge_common_option" }
	# option = { name = "Option 2" custom_gui = "ag_ancient_knowledge_common_option" }
	# option = { name = "Option 3" custom_gui = "ag_ancient_knowledge_common_option" }
	# option = { name = "Option 4" custom_gui = "ag_ancient_knowledge_common_option" }
	# option = { name = "Option 5" custom_gui = "ag_ancient_knowledge_fold_option" }
	# option = { name = "Option 6" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 7" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 8" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 9" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 10" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 11" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 12" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 13" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 14" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 15" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "Option 16" custom_gui = "ag_ancient_knowledge_extend_option" }
	# option = { name = "" custom_gui = "ag_action_deploy_system_option" }
	# option = { name = "" custom_gui = "ag_action_deploy_galaxy_option" }
	# option = { name = "Option 3" custom_gui = "ag_action_background_option" }
	# option = { name = "" custom_gui = "ag_action_star_killer_option" }
	# option = { name = "" custom_gui = "ag_action_planet_killer_option" }
	# option = { name = "" custom_gui = "ag_action_planet_sweeper_option" }
	# option = { name = "Option 4" custom_gui = "ag_action_background_option" }
	# option = { name = "" custom_gui = "ag_action_turret_deploy_single_option" }
	# option = { name = "" custom_gui = "ag_action_deploy_system_option" }
	# option = { name = "" custom_gui = "ag_action_deploy_galaxy_option" }
	# option = { name = "Option 5" custom_gui = "ag_action_background_option" }
	# option = { name = "" custom_gui = "ag_action_turret_deploy_single_option" }
	# option = { name = "" custom_gui = "ag_action_deploy_system_option" }
	# option = { name = "" custom_gui = "ag_action_deploy_galaxy_option" }
	# option = { name = "Option 6" custom_gui = "ag_action_background_option" }
	# option = { name = "Option 7" custom_gui = "ag_action_background_option" }
	# option = { name = "Option 8" custom_gui = "ag_action_background_option" }
	# option = { name = "Option 9" custom_gui = "ag_action_background_option" }
	# option = { name = "Option 10" custom_gui = "ag_action_background_option" }
	# option = { name = "Option 11" custom_gui = "ag_action_background_option" }
	# option = { name = "Option 12" custom_gui = "ag_action_background_option" }
	# option = { name = "Option 13" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 14" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 15" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 16" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 17" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 18" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 19" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 20" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 21" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 22" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 23" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 24" custom_gui = "ag_system_selector_option" }
	# option = { name = "Option 25" custom_gui = "ag_system_selector_option" }
	# option = { name = "" custom_gui = "ag_system_selector_systems_page_first_option" }
	# option = { name = "" custom_gui = "ag_system_selector_systems_page_prev_option" }
	# option = { name = "Confirm" custom_gui = "ag_system_selector_confirm_option" }
	# option = { name = "" custom_gui = "ag_system_selector_systems_page_next_option" }
	# option = { name = "" custom_gui = "ag_system_selector_systems_page_last_option" }
	# option = { name = "Prev" custom_gui = "ag_system_selector_option" }
	# option = { name = "Cancel" custom_gui = "ag_system_selector_option" }
}
country_event = {
	id = ag_test.8888
	title = "Test Event #8888"
	desc = "Here is a long description, very very long..."
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_leader_window"
	custom_gui_option = "ag_ancient_event_leader_option"
	
	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:ag_StarlightII_anim_portrait
	}
	
	location = capital_scope
	trackable = yes
	
	is_triggered_only = yes
	# trigger = { always = no }
	
	immediate = { if = {
		limit = { NOT = { exists = event_target:ag_StarlightII_anim_portrait } }
		event_target:global_event_country = {
			create_leader = {
				name = ""
				species = random
				class = admiral
				traits = random
				skill = 10
			}
			last_created_leader = { save_global_event_target_as = ag_StarlightII_anim_portrait }
		}
		event_target:ag_StarlightII_anim_portrait = { change_leader_portrait = ag_StarlightII_anim_portrait }
	} }
	
	option = { name = "Clothes Diff 01" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_clothes_diff value = 1 } } is_dialog_only = yes response_text = "Set Clothes Diff 01" }
	option = { name = "Clothes Diff 02" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_clothes_diff value = 2 } } is_dialog_only = yes response_text = "Set Clothes Diff 02" }
	option = { name = "Clothes Diff 03" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_clothes_diff value = 3 } } is_dialog_only = yes response_text = "Set Clothes Diff 03" }
	option = { name = "Clothes Diff 04" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_clothes_diff value = 4 } } is_dialog_only = yes response_text = "Set Clothes Diff 04" }
	option = { name = "Face Diff 01" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_face_diff value = 1 } } is_dialog_only = yes response_text = "Set Face Diff 01" }
	option = { name = "Face Diff 02" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_face_diff value = 2 } } is_dialog_only = yes response_text = "Set Face Diff 02" }
	option = { name = "Face Diff 03" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_face_diff value = 3 } } is_dialog_only = yes response_text = "Set Face Diff 03" }
	option = { name = "Face Diff 04" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_face_diff value = 4 } } is_dialog_only = yes response_text = "Set Face Diff 04" }
	option = { name = "Face Diff 05" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_face_diff value = 5 } } is_dialog_only = yes response_text = "Set Face Diff 05" }
	option = { name = "Face Diff 06" event_target:ag_StarlightII_anim_portrait = { set_variable = { which = ag_anim_StarlightII_face_diff value = 6 } } is_dialog_only = yes response_text = "Set Face Diff 06" }
	option = { name = "Close" }
}
country_event = {
	id = ag_test.8887
	title = "Test Event #8887"
	desc = "Here is a long description, very very long..."
	picture = GFX_leader_recruitment_bg_renowned
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_leader_window"
	custom_gui_option = "ag_ancient_event_leader_option"
	
	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:ag_StarInAurora_anim_portrait
	}
	
	location = capital_scope
	trackable = yes
	
	is_triggered_only = yes
	# trigger = { always = no }
	
	immediate = { if = {
		limit = { NOT = { exists = event_target:ag_StarInAurora_anim_portrait } }
		event_target:global_event_country = {
			create_leader = {
				name = ""
				species = random
				class = admiral
				traits = random
				skill = 10
			}
			last_created_leader = { save_global_event_target_as = ag_StarInAurora_anim_portrait }
		}
		event_target:ag_StarInAurora_anim_portrait = { change_leader_portrait = ag_StarInAurora_anim_portrait }
	} }
	
	option = { name = "Clothes Diff 01" event_target:ag_StarInAurora_anim_portrait = { set_variable = { which = ag_anim_StarInAurora_clothes_diff value = 1 } } is_dialog_only = yes response_text = "Set Clothes Diff 01" }
	option = { name = "Clothes Diff 02" event_target:ag_StarInAurora_anim_portrait = { set_variable = { which = ag_anim_StarInAurora_clothes_diff value = 2 } } is_dialog_only = yes response_text = "Set Clothes Diff 02" }
	option = { name = "Face Diff 01" event_target:ag_StarInAurora_anim_portrait = { set_variable = { which = ag_anim_StarInAurora_face_diff value = 1 } } is_dialog_only = yes response_text = "Set Face Diff 01" }
	option = { name = "Face Diff 02" event_target:ag_StarInAurora_anim_portrait = { set_variable = { which = ag_anim_StarInAurora_face_diff value = 2 } } is_dialog_only = yes response_text = "Set Face Diff 02" }
	option = { name = "Face Diff 03" event_target:ag_StarInAurora_anim_portrait = { set_variable = { which = ag_anim_StarInAurora_face_diff value = 3 } } is_dialog_only = yes response_text = "Set Face Diff 03" }
	option = { name = "Face Diff 04" event_target:ag_StarInAurora_anim_portrait = { set_variable = { which = ag_anim_StarInAurora_face_diff value = 4 } } is_dialog_only = yes response_text = "Set Face Diff 04" }
	option = { name = "Face Diff 05" event_target:ag_StarInAurora_anim_portrait = { set_variable = { which = ag_anim_StarInAurora_face_diff value = 5 } } is_dialog_only = yes response_text = "Set Face Diff 05" }
	option = { name = "Face Diff 06" event_target:ag_StarInAurora_anim_portrait = { set_variable = { which = ag_anim_StarInAurora_face_diff value = 6 } } is_dialog_only = yes response_text = "Set Face Diff 06" }
	option = { name = "Close" }
}

country_event = {
	id = ag_test.1
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_primitive_corvette"
					design = "NAME_ag_primitive_corvette_1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_primitive_corvette"
					design = "NAME_ag_primitive_corvette_2"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.3
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_primitive_titan"
					design = "NAME_ag_primitive_titan_1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.4
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_primitive_titan"
					design = "NAME_ag_primitive_titan_2"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.5
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "Ancient Drone"
					design = "NAME_ag_ancient_monitor_drone_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.101
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_alpha_titan_ship"
					design = "NAME_ag_alpha_titan_hostile"
					prefix = no
					effect = {
						set_ship_flag = ag_alpha_titan_player
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.102
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_alpha_titan_player_spawn = {
			ag_unlock_ship = no
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.103
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_alpha_titan_player_spawn = {
			ag_unlock_ship = yes
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.104
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		capital_scope.solar_system = {
			spawn_megastructure = {
				type = ag_ancient_alpha_megastructure
				planet = root.capital_scope
				orbit_distance = 45
				orbit_angle = 128
				owner = root
				init_effect = {
					save_global_event_target_as = ag_psionic_conduit_megastructure
					set_variable = { which = ag_alpha_psionic_conduit_energy_percent value = 50.0 }
					set_variable = { which = ag_alpha_psionic_conduit_used_capacity value = 50.0 }
				}
			}
			event_target:global_event_country = { if = {
				limit = { NOT = { has_country_flag = ag_alpha_120_fired } }
				set_country_flag = ag_alpha_120_fired
				country_event = { id = ag_alpha.120 }
			} }
		}
	}
}
country_event = {
	id = ag_test.201
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_beta_drone_type1_ship"
					design = "NAME_ag_beta_drone_type1_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.202
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_beta_drone_type2_ship"
					design = "NAME_ag_beta_drone_type2_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.203
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_beta_station_type1_ship"
					design = "NAME_ag_beta_station_type1_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.204
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_beta_station_type1_ship"
					design = "NAME_ag_beta_station_type1_0"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.205
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_beta_station_type1_ship"
					design = "NAME_ag_beta_station_type1_1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.206
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_beta_station_type2_ship"
					design = "NAME_ag_beta_station_type2_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.207
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_beta_station_type2_ship"
					design = "NAME_ag_beta_station_type2_0"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.208
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_beta_station_type2_ship"
					design = "NAME_ag_beta_station_type2_1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.209
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_country_flag = ag_beta_ships_unlocked
		if = { limit = { NOT = { has_technology = tech_ag_beta_station_type2 } } ag_give_technology = { ag_tech = tech_ag_beta_station_type2 } }
		if = { limit = { NOT = { has_technology = tech_ag_beta_station_type2_effect } } ag_give_technology = { ag_tech = tech_ag_beta_station_type2_effect } }
		capital_scope.solar_system = {
			spawn_megastructure = {
				type = ag_beta_station_type2_megastructure
				planet = root.capital_scope
				orbit_distance = 45
				orbit_angle = 0
				owner = root
			}
		}
	}
}
country_event = {
	id = ag_test.301
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_station_ship"
					design = "NAME_ag_gamma_station_hostile"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						set_ship_flag = ag_gamma_station_player
						set_ship_flag = ag_gamma_station_protection_enabled
						set_ship_flag = ag_gamma_station_protection_1
						ag_set_disable_at_health = { ag_value = 0.75 ag_disable_type = gamma_station }
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.302
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_gamma_station_player_spawn = {
			ag_unlock_ship = no
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.303
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_gamma_station_player_spawn = {
			ag_unlock_ship = yes
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.304
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_station_small_ship"
					design = "NAME_ag_gamma_station_small_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.305
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_station_small_ship"
					design = "NAME_ag_gamma_station_small_moving_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.306
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_battlecruiser_ship"
					design = "NAME_ag_gamma_battlecruiser_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.307
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_battlecruiser_ship"
					design = "NAME_ag_gamma_battlecruiser_0"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.308
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_battlecruiser_ship"
					design = "NAME_ag_gamma_battlecruiser_1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.309
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_escort_ship"
					design = "NAME_ag_gamma_escort_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.310
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_escort_ship"
					design = "NAME_ag_gamma_escort_0"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.311
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_escort_ship"
					design = "NAME_ag_gamma_escort_1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.312
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_station_aux_drone_ship"
					design = "NAME_ag_gamma_station_aux_drone_0"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.313
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_station_aux_drone_ship"
					design = "NAME_ag_gamma_station_aux_drone_1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.314
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_gamma_titan_ship"
					design = "NAME_ag_gamma_titan_hostile"
					prefix = no
					effect = {
						set_ship_flag = ag_gamma_titan_player
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.315
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_gamma_titan_player_spawn = {
			ag_unlock_ship = no
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.316
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_gamma_titan_player_spawn = {
			ag_unlock_ship = yes
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.401
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_delta_titan_ship"
					design = "NAME_ag_delta_titan_hostile"
					prefix = no
					effect = {
						set_ship_flag = ag_delta_titan_player
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.402
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_delta_titan_player_spawn = {
			ag_unlock_ship = no
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.403
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_delta_titan_player_spawn = {
			ag_unlock_ship = yes
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.404
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "Ancient Drone"
					design = "NAME_ag_delta_drone_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.405
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_delta_platform_ship"
					design = "NAME_ag_delta_platform_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.406
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_delta_platform_ship"
					design = "NAME_ag_delta_platform_0"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.407
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_delta_platform_ship"
					design = "NAME_ag_delta_platform_1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.408
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				set_fleet_flag = ag_delta_platform_player
				create_ship = {
					name = "NAME_ag_delta_platform_ship"
					design = "NAME_ag_delta_platform_00"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.409
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				set_fleet_flag = ag_delta_platform_player
				create_ship = {
					name = "NAME_ag_delta_platform_ship"
					design = "NAME_ag_delta_platform_10"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.501
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_defensive_station_large_1"
					design = "NAME_ag_epsilon_defensive_station_large_01_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.502
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_defensive_station_large_1"
					design = "NAME_ag_epsilon_defensive_station_large_02_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.503
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_defensive_station_large_1"
					design = "NAME_ag_epsilon_defensive_station_large_03_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.504
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_defensive_station_large_1"
					design = "NAME_ag_epsilon_defensive_station_large_04_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.505
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_defensive_station_small_11"
					design = "NAME_ag_epsilon_defensive_station_small_01_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.506
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_defensive_station_small_11"
					design = "NAME_ag_epsilon_defensive_station_small_02_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.507
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_defensive_station_small_11"
					design = "NAME_ag_epsilon_defensive_station_small_03_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.508
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_defensive_station_small_11"
					design = "NAME_ag_epsilon_defensive_station_small_04_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.509
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_titan_ship"
					design = "NAME_ag_epsilon_titan_hostile"
					prefix = no
					effect = {
						set_ship_flag = ag_epsilon_titan_player
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.510
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_epsilon_titan_player_spawn = {
			ag_unlock_ship = no
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.511
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_epsilon_titan_player_spawn = {
			ag_unlock_ship = yes
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.512
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "NAME_ag_epsilon_obelisk_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_obelisk_ship"
					design = "NAME_ag_epsilon_obelisk_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.513
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_epsilon_titan_ship"
					design = "NAME_ag_epsilon_titan_station_hostile"
					prefix = no
					effect = {
						set_ship_flag = ag_epsilon_titan_player
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.601
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_country_flag = ag_eta_ships_unlocked
		if = { limit = { NOT = { has_technology = tech_gateway_activation } } ag_give_technology = { ag_tech = tech_gateway_activation } }
		if = { limit = { NOT = { has_technology = tech_gateway_construction } } ag_give_technology = { ag_tech = tech_gateway_construction } }
		if = { limit = { NOT = { has_technology = tech_ag_ancient_eta_gateway } } ag_give_technology = { ag_tech = tech_ag_ancient_eta_gateway } }
		if = { limit = { NOT = { has_technology = tech_ag_ancient_eta_gateway_control_station } } ag_give_technology = { ag_tech = tech_ag_ancient_eta_gateway_control_station } }
		if = { limit = { NOT = { has_technology = tech_ag_ancient_eta_gateway_activation } } set_country_flag = ag_eta_3_fired ag_give_technology = { ag_tech = tech_ag_ancient_eta_gateway_activation } }
		if = { limit = { exists = event_target:ag_eta_gateway_controller } clear_global_event_target = ag_eta_gateway_controller }
		if = { limit = { NOT = { has_technology = tech_ag_ancient_eta_gateway_lgate } } ag_give_technology = { ag_tech = tech_ag_ancient_eta_gateway_lgate } }
		if = { limit = { NOT = { has_technology = tech_ag_ancient_eta_gateway_ancients } } ag_give_technology = { ag_tech = tech_ag_ancient_eta_gateway_ancients } }
		if = { limit = { NOT = { has_technology = tech_ag_ancient_eta_gateway_wormhole } } ag_give_technology = { ag_tech = tech_ag_ancient_eta_gateway_wormhole } }
		save_global_event_target_as = ag_eta_gateway_controller
		capital_scope.solar_system = {
			spawn_megastructure = {
				type = ag_ancient_eta_gateway_megastructure_4
				planet = root.capital_scope
				orbit_distance = 45
				orbit_angle = 128
				owner = root
			}
		}
	}
}
country_event = {
	id = ag_test.602
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "NAME_ag_eta_gateway_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_eta_gateway_ship"
					design = "NAME_ag_eta_gateway_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.603
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "NAME_ag_eta_gateway_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_eta_gateway_ship"
					design = "NAME_ag_eta_gateway_hostile_alt"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.604
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_eta_gateway_player_spawn = {
			ag_unlock_ship = no
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.605
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_eta_gateway_player_spawn = {
			ag_unlock_ship = yes
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.606
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "NAME_ag_eta_titan_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_eta_titan_ship"
					design = "NAME_ag_eta_titan_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.607
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_eta_titan_player_spawn = {
			ag_unlock_ship = no
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.608
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_eta_titan_player_spawn = {
			ag_unlock_ship = yes
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.609
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "NAME_ag_eta_titan_phantom_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_eta_titan_phantom_ship"
					design = "NAME_ag_eta_titan_phantom_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.610
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "NAME_ag_eta_titan_phantom_fleet"
			settings = {
				spawn_debris = no
				can_change_composition = no
				can_change_leader = no
				can_disband = no
				can_upgrade = no
			}
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_eta_titan_phantom_ship"
					design = "NAME_ag_eta_titan_phantom_player"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = invincible }
						ship_event = { id = ag_subsystem.74 days = 1 }
						ag_delayed_delete_ship = { ag_days = @ag_sub_eta_hallucination_remote_effect_days }
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.611
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		if = {
			limit = { NOT = { has_country_flag = ag_test_611_fired } }
			set_country_flag = ag_test_611_fired
			create_ship_design = { design = "NAME_ag_eta_titan_starbase_hostile" }
			add_ship_design = last_created_design
		}
		if = {
			limit = { capital_scope.solar_system = { exists = starbase } }
			capital_scope.solar_system.starbase.fleet = { delete_fleet = this }
		}
		capital_scope.solar_system = { create_starbase = { size = "ag_eta_titan_starbase_hostile" owner = root } }
	}
}
country_event = {
	id = ag_test.701
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_titan_ship"
					design = "NAME_ag_zeta_titan"
					prefix = no
					effect = {
						set_ship_flag = ag_zeta_titan_player
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.702
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_battleship_ship"
					design = "NAME_ag_zeta_battleship"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.703
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_destroyer_ship"
					design = "NAME_ag_zeta_destroyer"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.704
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_military_station_small_ship"
					design = "NAME_ag_zeta_military_station_small"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.705
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_military_station_large_ship"
					design = "NAME_ag_zeta_military_station_large"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.706
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_military_station_large_ship"
					design = "NAME_ag_zeta_military_station_large_beam"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.707
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_titan_ship"
					design = "NAME_ag_zeta_titan_psi"
					prefix = no
					effect = {
						set_ship_flag = ag_zeta_titan_player
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.708
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_battleship_ship"
					design = "NAME_ag_zeta_battleship_psi"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.709
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_destroyer_ship"
					design = "NAME_ag_zeta_destroyer_psi"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.710
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_military_station_small_ship"
					design = "NAME_ag_zeta_military_station_small_psi"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.711
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_military_station_large_ship"
					design = "NAME_ag_zeta_military_station_large_psi"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.712
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_small_ship_ship"
					design = "NAME_ag_zeta_crisis_small_ship"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.713
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_medium_ship_ship"
					design = "NAME_ag_zeta_crisis_medium_ship"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.714
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_large_ship_ship"
					design = "NAME_ag_zeta_crisis_large_ship"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.715
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_support_ship_ship"
					design = "NAME_ag_zeta_crisis_support_ship"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.716
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_construction_ship_ship"
					design = "NAME_ag_zeta_crisis_construction_ship"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.717
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		if = {
			limit = { NOT = { has_country_flag = ag_test_717_fired } }
			set_country_flag = ag_test_717_fired
			create_ship_design = { design = "NAME_ag_zeta_crisis_starbase_design" }
			add_ship_design = last_created_design
		}
		if = {
			limit = { capital_scope.solar_system = { exists = starbase } }
			capital_scope.solar_system.starbase.fleet = { delete_fleet = this }
		}
		capital_scope.solar_system = { create_starbase = { size = "starbase_ag_zeta_crisis" owner = root } }
	}
}
country_event = {
	id = ag_test.718
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_defensive_platform_ship"
					design = "NAME_ag_zeta_crisis_defensive_platform"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.719
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_avatar_t1_ship"
					design = "NAME_ag_zeta_crisis_avatar_t1"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.720
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_avatar_t2_ship"
					design = "NAME_ag_zeta_crisis_avatar_t2"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.721
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_avatar_t3_ship"
					design = "NAME_ag_zeta_crisis_avatar_t3"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.722
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_avatar_t4_ship"
					design = "NAME_ag_zeta_crisis_avatar_t4"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.723
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_avatar_t5_ship"
					design = "NAME_ag_zeta_crisis_avatar_t5"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.724
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_portal_ship"
					design = "NAME_ag_zeta_crisis_portal"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.725
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_psionic_storm_ship"
					design = "NAME_ag_zeta_crisis_psionic_storm_small"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.726
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_psionic_storm_ship"
					design = "NAME_ag_zeta_crisis_psionic_storm_large"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.727
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_psionic_singularity_ship"
					design = "NAME_ag_zeta_crisis_psionic_singularity"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.728
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_area_inhibitor_ship"
					design = "NAME_ag_zeta_area_inhibitor"
					prefix = no
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.729
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_ancient_psionic_container_ship"
					design = "NAME_ag_ancient_psionic_container"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						set_ship_flag = ag_ancient_psionic_storm_container_player
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.730
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_ancient_psionic_container_ship"
					design = "NAME_ag_ancient_psionic_container_alt"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						set_ship_flag = ag_ancient_psionic_singularity_container_player
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.732
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_zeta_crisis_guardian_fleet
				set_fleet_flag = ag_zeta_crisis_home_guardian_fleet
				set_owner = root

				while = {
					count = @ag_zeta_crisis_home_guardian_fleet_num_large_ships_basic
					ag_zeta_crisis_large_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
				}
				while = {
					count = @ag_zeta_crisis_home_guardian_fleet_num_medium_ships_basic
					ag_zeta_crisis_medium_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
				}
				while = {
					count = @ag_zeta_crisis_home_guardian_fleet_num_small_ships_basic
					ag_zeta_crisis_small_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
				}
				while = {
					count = @ag_zeta_crisis_home_guardian_fleet_num_support_ships_basic
					ag_zeta_crisis_support_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_support_ships value = 1 }
				}

				if = {
					limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 1 } } }
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_large_ships_additional
						ag_zeta_crisis_large_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
					}
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_medium_ships_additional
						ag_zeta_crisis_medium_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
					}
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_small_ships_additional
						ag_zeta_crisis_small_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
					}
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_large_ships_additional
						ag_zeta_crisis_large_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
					}
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_medium_ships_additional
						ag_zeta_crisis_medium_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
					}
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_small_ships_additional
						ag_zeta_crisis_small_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
					}
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_support_ships_additional
						ag_zeta_crisis_support_ship_spawn = yes
						change_variable = { which = ag_zeta_crisis_support_ship_spawn value = 1 }
					}
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } }
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_large_ships_additional
						ag_zeta_crisis_large_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
					}
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_medium_ships_additional
						ag_zeta_crisis_medium_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
					}
					while = {
						count = @ag_zeta_crisis_home_guardian_fleet_num_small_ships_additional
						ag_zeta_crisis_small_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
					}
				}

				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random
				}
				set_formation_scale = 2.5
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
			}
		}
	}
}
country_event = {
	id = ag_test.733
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "NAME_ag_zeta_crisis_special_ship_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_zeta_crisis_special_ship_ship"
					design = "NAME_ag_zeta_crisis_special_ship"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.734
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_zeta_crisis_relic_country_ckeck = yes
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_zeta_psionic_storm_fleet
				set_fleet_flag = ag_zeta_psionic_storm_small
				set_owner = event_target:ag_zeta_crisis_relic_country
				create_ship = {
					name = "NAME_ag_zeta_crisis_psionic_storm_ship"
					design = "NAME_ag_zeta_crisis_psionic_storm_small"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope.solar_system.star
					distance = 0
					angle = random 
				}
				set_event_locked = yes
			}
		}
	}
}
country_event = {
	id = ag_test.801
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_ancient_primitive_country_ship"
					design = "NAME_ag_experiment_ship_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.802
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_experiment_ship_ship"
					design = "NAME_ag_experiment_ship"
					prefix = no
					effect = {
						if = {
							limit = { exists = event_target:ag_ancient_starfish_ship }
							clear_global_event_target = ag_ancient_starfish_ship
						}
						save_global_event_target_as = ag_ancient_starfish_ship
						ag_difficulty_bonus = yes
						set_ship_flag = ag_experiment_ship_damaged
						add_modifier = {
							modifier = "ag_seriously_damaged_ship"
							days = -1
						}
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2501
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_battleship_form"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2502
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_battleship_form_psi_jumpdrive_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2503
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_battleship_form_jumpdrive_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2504
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_3"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2505
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_2"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2506
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2507
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_science_ship_form"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2508
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_science_ship_form_psi_jumpdrive_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2509
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_science_ship_form_jumpdrive_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2510
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_science_ship_form_hyperdrive_3"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2511
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_science_ship_form_hyperdrive_2"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2512
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		set_global_flag = ag_lost_ancient_ship_spawned
		if = {
			limit = { NOT = { exists = event_target:ag_lost_ancient_ship_owner } }
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_owner }
			clear_global_event_target = ag_lost_ancient_ship_owner
		}
		save_global_event_target_as = ag_lost_ancient_ship_owner
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_science_ship_form_hyperdrive_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
						set_ship_flag = ag_lost_ancient_ship
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2513
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "Ancient Cruiser"
					design = "NAME_ag_ancient_cruiser_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2601
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "NAME_ag_ancient_wandering_ship_ship"
					design = "NAME_ag_ancient_wandering_ship_hostile"
					prefix = no
					effect = {
						set_ship_flag = ag_ancient_wandering_ship_player
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
country_event = {
	id = ag_test.2602
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_ancient_wandering_ship_player_spawn = {
			ag_unlock_ship = no
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.2603
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		ag_ancient_wandering_ship_player_spawn = {
			ag_unlock_ship = yes
			ag_owner = root
			ag_location_target = root.capital_scope
			ag_location_distance = 45
			ag_location_angle = random
		}
	}
}
country_event = {
	id = ag_test.2604
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		create_fleet = {
			name = "Test Ship"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_has_ancient_ship_in_fleet
				set_owner = root
				create_ship = {
					name = "Setllar Anchor"
					design = "NAME_ag_ancient_anchor_station_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = root.capital_scope
					distance = 45
					angle = random 
				}
			}
		}
	}
}
