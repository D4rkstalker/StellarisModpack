namespace = nep_test

country_event = {
	id = nep_test.1
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
	capital_scope = {
	create_fleet = {
		name = "Malfunctioning Guards"
		settings = {
			spawn_debris = no 
		}
		effect = {		
			set_owner = ROOT
			while = {
				count = 15
				create_ship = {
					name = "Malfunctioning Guard"
					design = "NAME_Xeoh"
				}
			}
			while = {
				count = 30
				create_ship = {
					name = "Malfunctioning Guards"
					design = "NAME_Tes"
				}
			}
			while = {
				count = 60
				create_ship = {
					name = "Malfunctioning Guards"
					design = "NAME_Sekae"
				}
			}
			while = {
				count = 140
				create_ship = {
					name = "Malfunctioning Guards"
					design = "NAME_Deek"
				}
			}
			
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	}
    }
}

country_event = {
	id = nep_test.2
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
		create_seal_evil_country = yes
		capital_scope = {
		create_fleet = {
		name = "Seal Evil"
		settings = {
			spawn_debris = no 
		}
		effect = {			
			set_owner = event_target:seal_evil_country
			create_ship = {
				name = "Seal Evil"
				design = "NAME_nep_Seal_evil"
				effect = {
					#set_disabled = yes
				}
			}	
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self	
			
			#set_event_locked = yes
			fleet_event = { id = nep_test.21 days = 3 }
		}
	}
		}
		}
}

fleet_event = {
	id = nep_test.21
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }
	
	immediate = {
		set_event_locked = yes
	}	
}
country_event = {
	id = nep_test.3
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }
		
	immediate = {
		capital_scope = {
			set_variable = { which = "vari1" value = 1 }
			random_system = {
				set_variable = { which = "vari1" value = 2 }
				random_rim_system = {
					set_variable = { which = "vari1" value = 3 }
					if = {
						limit = {
							check_variable = { which = "vari1" value = 1 }
						}
						log = "[This.GetName] = 1"
					}
					if = {
						limit = {
							check_variable = { which = "vari1" value = 2 }
						}
						log = "[This.GetName] = 2"
					}
					if = {
						limit = {
							check_variable = { which = "vari1" value = 3 }
						}
						log = "[This.GetName] = 3"
					}
				}
				if = {
					limit = {
						check_variable = { which = "vari1" value = 1 }
					}
					log = "[This.GetName] = 1"
				}
				if = {
					limit = {
						check_variable = { which = "vari1" value = 2 }
					}
					log = "[This.GetName] = 2"
				}
				if = {
					limit = {
						check_variable = { which = "vari1" value = 3 }
					}
					log = "[This.GetName] = 3"
				}
			}
			if = {
				limit = {
					check_variable = { which = "vari1" value = 1 }
				}
				log = "[This.GetName] = 1"
			}
			if = {
				limit = {
					check_variable = { which = "vari1" value = 2 }
				}
				log = "[This.GetName] = 2"
			}
			if = {
				limit = {
					check_variable = { which = "vari1" value = 3 }
				}
				log = "[This.GetName] = 3"
			}	
		}
	}
}

country_event = {
	id = nep_test.4
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }

	immediate = {
		capital_scope = {
			solar_system = {
			random_system = {
				limit = {
					distance = {
						source = prev
						use_bypasses = no
						min_jumps = 2
						max_jumps = 6
					}
				}
				if = {
					limit = { has_hyperlane_to = prev }
					log = "2~6:[This.GetName] = yes"
				}
				else = {
					log = "2~6:[This.GetName] = no"
				}
			}
			random_system = {
				limit = {
					distance = {
						source = prev
						use_bypasses = no
						min_jumps = 1
						max_jumps = 1
					}
				}
				if = {
					limit = { has_hyperlane_to = prev }
					log = "1:[This.GetName] = yes"
				}
				else = {
					log = "1:[This.GetName] = no"
				}
			}
			random_system = {
				limit = {
					distance = {
						source = prev
						use_bypasses = no
						min_jumps = 0
						max_jumps = 0
					}
				}
				if = {
					limit = { exists = this }
					log = "0:[This.GetName] = yes"
				}
				else = {
					log = "0: = no"
				}
			}
		}}
	}
}

country_event = {
	id = nep_test.5
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }

	immediate = {
		#cluster
		set_spawn_system_batch = begin
		no_scope = {
			spawn_system = {
				min_distance >= 565
				max_distance <= 575
				min_orientation_angle = 314
				max_orientation_angle = 316
				hyperlane = no
				initializer = nep_Central_init
			}
		}
		random_system = { 
			limit = { has_star_flag = nep_Central_system }
			spawn_system = {
				min_distance >= 15
				max_distance <= 35
				min_orientation_angle = 0
				max_orientation_angle = 360
				hyperlane = no
				initializer = nep_Centaury_init
			}
			spawn_system = {
				min_distance >= 15
				max_distance <= 35
				min_orientation_angle = 0
				max_orientation_angle = 360
				hyperlane = no
				initializer = nep_Magellan_init
			}
			spawn_system = {
				min_distance >= 15
				max_distance <= 35
				min_orientation_angle = 0
				max_orientation_angle = 360
				hyperlane = no
				initializer = nep_Orion_init
			}
			spawn_system = {
				min_distance >= 20
				max_distance <= 40
				min_orientation_angle = 0
				max_orientation_angle = 360
				hyperlane = no
				initializer = nep_Aurora_init
			}
			spawn_system = {
				min_distance >= 20
				max_distance <= 40
				min_orientation_angle = 0
				max_orientation_angle = 360
				hyperlane = no
				initializer = nep_Tra_init
			}
			spawn_system = {
				min_distance >= 15
				max_distance <= 35
				min_orientation_angle = 0
				max_orientation_angle = 360
				hyperlane = no
				initializer = nep_Andromeda_init
			}
			spawn_system = {
				min_distance >= 20
				max_distance <= 40
				min_orientation_angle = 0
				max_orientation_angle = 360
				hyperlane = no
				initializer = nep_Persei_init
			}
			#spawn_system = {
			#	min_distance >= 20
			#	max_distance <= 40
			#	min_orientation_angle = 0
			#	max_orientation_angle = 360
			#	hyperlane = no
			#	initializer = nep_Trantor_init
			#}
			spawn_system = {
				min_distance >= 30
				max_distance <= 50
				min_orientation_angle = 0
				max_orientation_angle = 360
				hyperlane = no
				initializer = nep_Exterior_init
			}
		}
		while = {
			limit = {
				any_system = {
					has_star_flag = nep_Krahen_cluster
					check_variable = { which = hyperlane_num value < 3 }
				}
			}
			random_system = {
				limit = {
					has_star_flag = nep_Krahen_cluster
					check_variable = { which = hyperlane_num value < 3 }
				}
				random_system = {
					limit = {
						NOT = { 
							is_same_value = prev 
							has_hyperlane_to = prev
						}
						has_star_flag = nep_Krahen_cluster
						check_variable = { which = hyperlane_num value < 3 }
					}
					add_hyperlane = {
						from = this
						to = prev
					}
					change_variable = { which = hyperlane_num value = 1 }
				}
				change_variable = { which = hyperlane_num value = 1 }
			}
		}
		set_spawn_system_batch = end
	}
}

country_event = {
	id = nep_test.6
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }
	
	immediate = {
		random_system = {
			limit = { has_star_flag = nep_Krahen_cluster }
			random_system = {
				limit = {
					distance = {
						source = prev
						use_bypasses = no
						min_jumps = 9
						max_jumps = 9
					}
					has_star_flag = nep_Krahen_cluster
				}
				if = {
					limit = { exists = this }
					log = "[This.GetName] - [Prev.GetName]"
				}
				else = {
					log = "Nope."				
				}
			}
		}
	}
}

fleet_event = {
	id = nep_test.7
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }
	
	immediate = {
		add_modifier = {
			modifier = fleet_force_disparity_effect
			days = -1
		}
	}
}

planet_event = {
	id = nep_test.8
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }
	
	immediate = {
		solar_system = {
			every_system_planet = {
				remove_planet = yes
			}
		}
	}
}

country_event = {
	id = nep_test.9
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }

	immediate = {
		create_fleet = {
			name = "Krah'en Invader"
			settings = {
				spawn_debris = no 
				can_change_leader = no
				uses_naval_capacity = no
			}
			effect = {		
				set_owner = root
				while = {
					count = 60
					create_ship = {
						name = "Krah'en Invader"
						design = "NAME_Krahen_Battleship"
					}
				}
				set_location = {
					target = root.capital_scope
					distance = 150
					angle = random
				}
				set_formation_scale = 2.0
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
				set_fleet_bombardment_stance = armageddon
			}
		}
	}
}

fleet_event = {
	id = nep_test.9000
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }

	immediate = {
		create_fleet = {
			name = "Krah'en Invader"
			settings = {
				spawn_debris = no 
				can_change_leader = no
				uses_naval_capacity = no
			}
			effect = {		
				set_owner = root.owner
				while = {
					count = 60
					create_ship = {
						name = "Krah'en Invader"
						design = "NAME_Krahen_Battleship"
					}
				}
				set_location = {
					target = root
					distance = 150
					angle = random
				}
				set_formation_scale = 2.0
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
				set_fleet_bombardment_stance = armageddon
			}
		}
	}
}

country_event = {
	id = nep_test.10
    hide_window = yes
	is_triggered_only = yes

	trigger = { always = no }

	immediate = {

		create_fleet = {
			name = "NAME_nep_corrupted_finalweapons"
			settings = {
				spawn_debris = no 
				can_change_leader = no
				uses_naval_capacity = no
			}
			effect = {
				set_owner = root
				while = {
					count = 3
					create_ship = {
						name = "NAME_nep_Corrupted_Finalweapon"
						design = "NAME_nep_finalweapon_design"
					}
				}
				
				set_location = {
					target = root.capital_scope
					distance = 30
					angle = random
				}
				
				add_modifier = {
					modifier = fleet_force_disparity_effect
					days = -1
				}
				
				set_formation_scale = 1.6
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
				set_fleet_bombardment_stance = armageddon
				
			}
		}
	}
}

country_event = {
	id = nep_test.11
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
		create_species = {
			name = random
			class = ROBOT
			portrait = 2dsynth_01
			namelist = "AI"
			traits = {
				trait = trait_mechanical
			}
		}
		create_country = {
			name = "NAME_finalweapon_country"
			type = nep_finalweapon_country
			species = last_created_species
			flag = {
			    icon = {
    		        category = "special"
    		        file = "unknown.dds"
    		    }
    		    background = {
    		        category = "backgrounds"
    		        file = "00_solid.dds"
    		    }
    		    colors = {
    		        "black"
    		        "null"
    		        "null"
    		        "null"
    		    }
			}
		}
			create_leader = {
				class = admiral
				species = prev.owner_species
				name = random
				skill = 10
				traits = {
					trait = leader_trait_aggressive
				}
			}
			create_fleet = {
				name = "NAME_nep_corrupted_finalweapons"
				settings = {
					spawn_debris = no 
					can_change_leader = no
					uses_naval_capacity = no
				}
				effect = {
					set_owner = last_created_country
					while = {
						count = 3
						create_ship = {
							name = "NAME_nep_Corrupted_Finalweapon"
							design = "NAME_nep_finalweapon_design"
						}
					}
					assign_leader = last_created_leader
					set_location = {
						target = root.capital_scope
						distance = 30
						angle = random
					}
					
					add_modifier = {
						modifier = fleet_force_disparity_effect
						days = -1
					}
					
					set_formation_scale = 1.6
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
					set_fleet_bombardment_stance = armageddon
					
					set_fleet_flag = nep_corrupted_finalweapons
				}
			}
	}
}

# fleet_event = {
	# id = nep_test.12
    # hide_window = yes
	# is_triggered_only = yes


	# trigger = { always = no }

	# immediate = {
		# queue_actions = {
			# land_armies_on_planet = from
			# jump_drive = from
		# }
	# }
# }

planet_event = {
	id = nep_test.13
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { always = no }
	
	immediate = {
		add_deposit = "d_nep_unknown_vortex"
	}
}

planet_event = {
	id = nep_test.14
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { always = no }
	
	immediate = {
		create_species = {
			name = Krah'en
			class = random_non_machine
			portrait = mol4
			traits = {
				trait = trait_Krahen
			}
		}
		create_country = {
			name = "Krah'en Empire"
			species = last_created_species
			type = nep_Krahen_country
			auto_delete = no
			# authority = auth_imperial
			# ethos = {
				# ethic = ethic_militarist
				# ethic = ethic_fanatic_xenophobe
			# }
			# civics = {
				# civic = civic_fanatic_purifiers
				# civic = civic_cutthroat_politics
			# }
			flag = {
				icon = {
					category = "domination"
					file = "domination_12.dds"
				}
				background= {
					category = "backgrounds"
					file = "new_dawn.dds"
				}
				colors={
					"red"
					"black"
					"null"
					"null"
				}
			}
		}
		create_colony = {
			owner = last_created_country
			species = last_created_species
			ethos = owner
		}
		last_created_country = {
			set_country_flag = nep_Krahen_country
			save_global_event_target_as = nep_Krahen_country
		}
		create_Krahen_invader = yes
	}
}

country_event = {
	id = nep_test.15
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { always = no }
	
	immediate = {
		set_global_flag = nep_SEoOC_easy
	}
}
	
country_event = {
	id = nep_test.16
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { always = no }
	
	immediate = {
		set_global_flag = nep_dragon_end
		set_country_flag = nep_dragon_summoner
		country_event = { id = nep_inva.1 }
		create_species = {
			name = "NAME_nep_Krahen"
			class = random_non_machine
			portrait = mol4
			traits = {
				trait = trait_Krahen
			}
		}
		create_country = {
			name = "NAME_nep_Krahen_Empire"
			species = last_created_species
			type = nep_Krahen_country
			auto_delete = no
			name_list = MOL_Krahen
			authority = auth_imperial
			ethos = {
				ethic = ethic_militarist
				ethic = ethic_fanatic_xenophobe
			}
			civics = {
				civic = civic_fanatic_purifiers
				civic = civic_cutthroat_politics
			}
			flag = {
				icon = {
					category = "domination"
					file = "domination_12.dds"
				}
				background= {
					category = "backgrounds"
					file = "new_dawn.dds"
				}
				colors={
					"red"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			create_leader = {
				class = ruler
				species = owner_main_species
				name = "NAME_nep_Imperator"
				traits = {
					trait = random_trait
					trait = random_trait
				}
				skill = 10
			}
			set_leader = last_created_leader
			set_policy = {
				policy = orbital_bombardment
				option = orbital_bombardment_armageddon
				cooldown = no
			}
			set_country_flag = nep_Krahen_country
			save_global_event_target_as = nep_Krahen_country
			if = {
				limit = { NOT = { has_global_flag = nep_SEoOC_easy } }
				add_modifier = {
					modifier = nep_Krahen_buff
					days = -1
				}
			}
			nep_easy_mod = yes
		}
		set_global_flag = nep_Krahen_begin
		remove_global_flag = nep_sealgate_appeared
		random_country = {
			limit = { has_country_flag = nep_Krahen_country }
			country_event = { id = nep_inva.21 }
		}
	}
}

country_event = {
	id = nep_test.17
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { 
			any_system = {
				is_fe_cluster = NO
				any_system_planet = {
					AND = {
						OR = {
							is_colony = yes
							is_under_colonization = yes
							is_colonizable = yes
						}
						OR = {
							is_capital = no
							AND = {
								is_capital = yes
								exists = owner
								owner = {
									if = {
										limit = {
											count_system = {
												limit = {
													any_system_planet = {
														is_colony = yes
													}
													owner = { is_same_value = prev }
												}
												count > 1
											}
										}
										always = no
									}
									else = { 
										always = yes
									}
								}
							}
						}
					}
				}		
			}
	}
	
	immediate = {
	
	}
}

country_event = {
	id = nep_test.18
    hide_window = yes
	is_triggered_only = yes

	trigger = {
		always = no
	}
	
	immediate = {
		every_galaxy_planet = {
			limit = {
				OR = {
					is_colony = yes
					is_under_colonization = yes
					is_colonizable = yes
				}
			}
			root = {
				change_variable = { which = 1_num value = 1 }
			}
		}
		every_galaxy_planet = {
			limit = {
				colonizable_planet = yes
			}
			root = {
				change_variable = { which = 2_num value = 1 }
			}
		}
		log = "[This.1_num]"
		log = "[This.2_num]"
	}
}
	
country_event = {
	id = nep_test.19
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { 
		always = no
	}
	
	immediate = {
		if = {
			limit = {
				count_system_within_border = {
					limit = {
						any_system_planet = {
							is_colony = yes
						}
					}
					count >= 1
				}
			}
			log = "test_19:1"
		}
		if = {
			limit = {
				count_system_within_border = {
					limit = {
						any_system_planet = {
							is_colony = yes
						}
					}
					count >= 2
				}
			}
			log = "test_19:2"
		}
		if = {
			limit = {
				count_system_within_border = {
					limit = {
						any_system_planet = {
							is_colony = yes
						}
					}
					count >= 3
				}
			}
			log = "test_19:3"
		}
		if = {
			limit = {
				count_system_within_border = {
					limit = {
						any_system_planet = {
							is_colony = yes
						}
					}
					count >= 4
				}
			}
			log = "test_19:4"
		}
		if = {
			limit = {
				count_system_within_border = {
					limit = {
						any_system_planet = {
							is_colony = yes
						}
					}
					count >= 5
				}
			}
			log = "test_19:5"
		}
	}
}

fleet_event = {
	id = nep_test.20
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { 
		always = no
	}
	
	immediate = {
		queue_actions = {
			repeat = {
				move_to = event_target:highway_note_NNE
				move_to = event_target:highway_note_NE
				move_to = event_target:highway_note_ENE
				move_to = event_target:highway_note_E
				move_to = event_target:highway_note_ESE
				move_to = event_target:highway_note_SE
				move_to = event_target:highway_note_SSE
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N			
			}
		}
	}
}

country_event = {
	id = nep_test.22
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { 
		always = no
	}
	
	immediate = {
		random_system = {
			limit = { 
				is_neighbor_of = root
			}
			log = "1.[This.GetName]"			
			random_system = {
				limit = {
					distance = {
						source = prev
						min_jumps = 2
						max_jumps = 4
					}
				}
				log = "3.[This.GetName]"
			}
		}
	}
}

fleet_event = {
	id = nep_test.23
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = no
	}
	
	immediate = {
		set_fleet_flag = nep_test_23
		auto_move_to_planet = {
			target = owner.capital_scope
			clear_auto_move_on_arrival = yes
		}
	}
}

country_event = {
	id = nep_test.231
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		from = { has_fleet_flag = nep_test_23 }
	}
	
	immediate = {
		log = "test231fire"
		from = { clear_fleet_actions = this }
	}
}


planet_event = {
	id = nep_test.24
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = no
	}
	
	immediate = {
		set_planet_flag = nep_test@root
		set_planet_flag = nep_test2@root.space_owner
		set_planet_flag = nep_test3@root.owner.GetName
		set_planet_flag = nep_test4[root.owner.GetName]
		set_planet_flag = nep_test5[@root.owner.GetName]
	}
}

fleet_event = {
	id = nep_test.25
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = no
	}
	
	immediate = {
		add_modifier = {
			modifier = nep_energy_syphon_stage1
			days = -1
		}
		add_modifier = {
			modifier = nep_energy_syphon_stage1
			days = -1
		}
		add_modifier = {
			modifier = nep_energy_syphon_stage1
			days = -1
		}
		add_modifier = {
			modifier = nep_energy_syphon_stage1
			days = -1
		}
		if = {
			limit = {
				any_owned_ship = {
					has_modifier = nep_energy_syphon_stage1
				}
			}
			log = test25.yes
		}
	}
}

country_event = {
	id = nep_test.26
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = no
	}
	
	immediate = {
		random_owned_pop_species = {
			set_military_service_type = { country = root type = military_service_none cooldown = yes }
		}
	}
}

planet_event = {
	id = nep_test.27
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = no
	}
	
	immediate = {
		random_country = {
			limit = { is_ai = no }
			save_event_target_as = nep_player_empire
		}
		if = {
			limit = {
				solar_system = { has_access_fleet = event_target:nep_player_empire }
			}
			log = "test.27:[Root.Solar_system.GetName]:yes"
		}
		else = {
			log = "test.27:[Root.Solar_system.GetName]:no"
		}
	}
}

country_event = {
	id = nep_test.28
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = no
	}
	
	immediate = {
		create_country = {
			name = NAME_nep_galactic_trust_territorys_highway
			type = nep_galactic_trust_territorys
			auto_delete = no
			flag = {
				icon = {
					category = "ornate"
					file = "flag_ornate_24.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors ={
					"teal"
					"dark_teal"
					"null"
					"null"
				}
			}
		}	
	}
}

country_event = {
	id = nep_test.29
	title = "nep_dragon.1.name"
	desc = "nep_dragon.1.desc"	
	picture = GFX_evt_frozen
	
	is_triggered_only = yes
		
	trigger = {
		always = no
	}
	
	immediate = {
	}

	option = { name = CURSES }
}

country_event = {
	id = nep_test.30
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		has_global_flag = nep_gpc_spawn
		any_system = {
			any_system_planet = {
				is_colony = yes
				is_capital = no
				owner = {
					is_country_type = default
				}
			}
			distance = {
				source = root.capital_scope
				use_bypasses = yes
				min_jumps = 5 
				max_jumps = 20
			}
			has_access_fleet = root
		}
	}

	immediate = {
		random_system = {
			limit = {
				any_system_planet = {
					is_colony = yes
					is_capital = no
					owner = {
						is_country_type = default
					}
				}
				distance = {
					source = root.capital_scope
					min_jumps = 5 max_jumps = 20
				}
				has_access_fleet = root
			}
			random_system_planet = {
				limit = { is_colony = yes }
				save_global_event_target_as = nep_escort_destiny
			}
		}
	}
}

country_event = {
	id = nep_test.31
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		exists = event_target:nep_escort_destiny
		any_owned_fleet = {
			can_access_system = root.capital_scope.solar_system
			can_access_system = event_target:nep_escort_destiny.solar_system
		}
	}

	immediate = {
	}
}

country_event = {
	id = nep_test.32
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		always = no
	}

	immediate = {
		if = { limit = { has_global_flag = giga_core_inactive } log = "giga_core_inactive" }
		if = { limit = { has_global_flag = giga_core_active } log = "giga_core_active" }
		if = { limit = { has_global_flag = giga_core_birch } log = "giga_core_birch" }
		if = { limit = { has_global_flag = giga_core_qso } log = "giga_core_qso" }
	}
}

fleet_event = {
	id = nep_test.33
	hide_window = yes	
	
	is_triggered_only = yes
		
	trigger = {
		always = no
	}
	
	immediate = {
		random_galaxy_planet = {
			clear_global_event_target = nep_sub_seal_3
			save_global_event_target_as = nep_sub_seal_3
		}
		set_location = event_target:nep_sub_seal_3
	}
}

fleet_event = {
	id = nep_test.340
	hide_window = yes
	
	is_triggered_only = yes
		
	trigger = {
		always = no
	}
	
	immediate = {
		random_megastructure = {
			root = { set_location = prev }
		}
	}
}

fleet_event = {
	id = nep_test.34
	hide_window = yes	
	
	is_triggered_only = yes
		
	trigger = {
		always = no
	}
	
	immediate = {
		random_megastructure = {
			clear_global_event_target = nep_sub_seal_3
			save_global_event_target_as = nep_sub_seal_3
		}
		set_location = event_target:nep_sub_seal_3
	}
}

fleet_event = {
	id = nep_test.35
	hide_window = yes	
	
	is_triggered_only = yes
		
	trigger = {
		always = no
	}
	
	immediate = {
		random_megastructure = {
			limit = { is_megastructure_type = nep_sealphantom_node }
			clear_global_event_target = nep_sub_seal_3
			save_global_event_target_as = nep_sub_seal_3
		}
		set_location = event_target:nep_sub_seal_3
	}
}

fleet_event = {
	id = nep_test.36
	hide_window = yes	
	
	is_triggered_only = yes
		
	trigger = {
		always = no
	}
	
	immediate = {
		random_megastructure = {
			limit = { is_megastructure_type = nep_sealphantom_node }
			clear_global_event_target = nep_sub_seal_4
			save_global_event_target_as = nep_sub_seal_4
		}
		set_location = event_target:nep_sub_seal_4
	}
}

fleet_event = {
	id = nep_test.37
	hide_window = yes	
	
	is_triggered_only = yes
		
	trigger = {
		always = no
	}
	
	immediate = {
		random_system = {
			limit = { has_star_flag = nep_seal_system }
			random_system_megastructure = {
				limit = { is_megastructure_type = nep_sealphantom_node }
				clear_global_event_target = nep_sub_seal_4
				save_global_event_target_as = nep_sub_seal_4
			}
		}
		set_location = event_target:nep_sub_seal_4
	}
}

fleet_event = {
	id = nep_test.38
	hide_window = yes	
	
	is_triggered_only = yes
		
	trigger = {
		always = no
	}
	
	immediate = {
		event_target:nep_gaia_country = {
			capital_scope = {
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 1
						}
					}
					log = "1"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 2
						}
					}
					log = "2"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 3
						}
					}
					log = "3"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 4
						}
					}
					log = "4"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 5
						}
					}
					log = "5"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 6
						}
					}
					log = "6"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 7
						}
					}
					log = "7"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 8
						}
					}
					log = "8"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 9
						}
					}
					log = "9"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 10
						}
					}
					log = "10"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 11
						}
					}
					log = "11"
				}
				if = {
					limit = {
						has_ground_combat = no
						count_planet_army = {
							count < 12
						}
					}
					log = "12"
				}
			}
		}
	}
}

country_event = {
	id = nep_test.39
	hide_window = yes	
	
	is_triggered_only = yes
		
	trigger = {
		always = no
		has_global_flag = nep_whitegoo_spawn
	}
	
	immediate = {
		event_target:global_event_country = {
			while = {
				count = 30
				country_event = { id = nep_whitegoo.2 }
				country_event = { id = nep_whitegoo.31 }
				country_event = { id = nep_whitegoo.41 }
			}
		}
	}
}


planet_event = {
	id = nep_test.40
	hide_window = yes	
	
	is_triggered_only = yes
		
	trigger = {
		always = no
		has_global_flag = nep_highway_used
		is_star = yes
		solar_system = {
			exists = space_owner
			space_owner = { 
				is_ai = no
			}
			has_star_flag = nep_highway_station_system
			any_neighbor_system = {
				has_star_flag = nep_highway_note_system 
			}
			NOT = {
				any_neighbor_system = {
					has_star_flag = nep_highway_note_system 
				}
			}
		}
	}
	
	immediate = {
		event_target:global_event_country = {
			while = {
				count = 30
				country_event = { id = nep_whitegoo.2 }
				country_event = { id = nep_whitegoo.31 }
				country_event = { id = nep_whitegoo.41 }
			}
		}
	}
}