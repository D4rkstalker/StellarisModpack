namespace = Events_GAPS_The_Unswallowed

#every_owned_ship = { limit = { <triggers> } <effects> }
country_event = {
	id = Events_GAPS_The_Unswallowed.1
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { has_origin = Origin_GAPS_The_Unswallowed }
	
	immediate = {
		every_owned_planet = { 
			limit = { is_colony = yes }
			add_deposit = d_GAPS_Void_World
			set_planet_flag = Planet_Flag_GAPS_Void_World
			set_planet_flag = Planet_Flag_GAPS_Pulled_From_Void
		}
		
		give_technology = { tech = tech_mine_dark_matter message = no }
		give_technology = { tech = Tech_GAPS_Knowledge_Of_The_Void_1 message = no }
		
		every_system_within_border = {
			limit = { any_system_planet = { is_planet_class = pc_black_hole } }
			set_star_flag = gwen_cloud_wormhole
			spawn_natural_wormhole = {
				bypass_type = wormhole_2
				random_pos = yes
				orbit_angle = 360
			}
		}
	}
}
#
country_event = {
	id = Events_GAPS_The_Unswallowed.11
	title = Events_GAPS_The_Unswallowed.11.name
	desc = Events_GAPS_The_Unswallowed.11.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	trigger = {
		has_origin = Origin_GAPS_The_Unswallowed
		OR = {
			last_increased_tech = Tech_GAPS_Knowledge_Of_The_Void_1
			last_increased_tech = Tech_GAPS_Knowledge_Of_The_Void_2
			last_increased_tech = Tech_GAPS_Knowledge_Of_The_Void_3
			last_increased_tech = Tech_GAPS_Knowledge_Of_The_Void_4
			last_increased_tech = Tech_GAPS_Knowledge_Of_The_Void_5
			last_increased_tech = Tech_GAPS_Knowledge_Of_The_Void_6
			last_increased_tech = Tech_GAPS_Knowledge_Of_The_Void_7
		}
	}

	option = {
		name = "Events_GAPS_The_Unswallowed.Pull_From_The_Void"
		custom_tooltip = "Events_GAPS_The_Unswallowed.Pull_From_The_Void.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Unswallowed_Pull_From_The_Void
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Unswallowed_Pull_From_The_Void }
		}
		ai_chance = {
			factor = 25
		}
	}

	option = {
		name = "Events_GAPS_The_Unswallowed.Black_Matter_Expanse"
		custom_tooltip = "Events_GAPS_The_Unswallowed.Black_Matter_Expanse.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Unswallowed_Black_Matter_Expanse
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Unswallowed_Black_Matter_Expanse }
		}
		ai_chance = {
			factor = 25
		}
	}

	option = {
		name = "Events_GAPS_The_Unswallowed.Through_The_Void"
		custom_tooltip = "Events_GAPS_The_Unswallowed.Through_The_Void.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Unswallowed_Through_The_Void
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Unswallowed_Through_The_Void }
		}
		ai_chance = {
			factor = 25
		}
	}

	option = {
		name = "Events_GAPS_The_Unswallowed.Call_Void_Cloud"
		custom_tooltip = "Events_GAPS_The_Unswallowed.Call_Void_Cloud.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Unswallowed_Call_Void_Cloud
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Unswallowed_Call_Void_Cloud }
		}
		ai_chance = {
			factor = 25
		}
	}

	option = {
		name = "Events_GAPS_The_Unswallowed.Cloud_Cover"
		custom_tooltip = "Events_GAPS_The_Unswallowed.Cloud_Cover.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Unswallowed_Cloud_Cover
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Unswallowed_Cloud_Cover }
		}
		ai_chance = {
			factor = 25
		}
	}
	
	option = {
		name = "Events_GAPS_The_Unswallowed.Black_Hole_Travel_Distance"
		custom_tooltip = "Events_GAPS_The_Unswallowed.Black_Hole_Travel_Distance.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Unswallowed_Black_Hole_Travel_Distance
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Unswallowed_Black_Hole_Travel_Distance }
		}
		ai_chance = {
			factor = 25
		}
	}
	
	option = {
		name = "Events_GAPS_The_Unswallowed.Black_Hole_Pull"
		custom_tooltip = "Events_GAPS_The_Unswallowed.Black_Hole_Pull.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Unswallowed_Black_Hole_Pull
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Unswallowed_Black_Hole_Pull }
		}
		ai_chance = {
			factor = 25
		}
	}

}
#
# A fleet has entered a system
# Scope = Fleet
# From = System
################
# MODIFIER
################
fleet_event = {
	id = Events_GAPS_The_Unswallowed.3
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		owner = { has_origin = Origin_GAPS_The_Unswallowed }
	}
	
	immediate = {
		remove_modifier = Ship_Modifier_GAPS_Black_Hole_Attunement
		remove_modifier = Ship_Modifier_GAPS_Jumps_Out
		remove_modifier = Ship_Modifier_GAPS_Not_Pulled_In
		remove_modifier = Ship_Modifier_GAPS_Restores_From_The_Void
		if = {
			limit = { 
				owner = { has_origin = Origin_GAPS_The_Unswallowed } 
				from = { 
					any_system_planet = { is_planet_class = pc_black_hole } 
					has_modifier = System_Modifier_GaPS_Black_Hole_Attunement 
				} 
			}
			add_modifier = { modifier = Ship_Modifier_GAPS_Black_Hole_Attunement	days = -1 }
		}
		if = {
			limit = { 
				owner = { has_origin = Origin_GAPS_The_Unswallowed } 
				from = { 
					any_system_planet = { is_planet_class = pc_black_hole } 
					has_modifier = System_Modifier_GAPS_Black_Hole_Jumping 
				} 
			}
			add_modifier = { modifier = Ship_Modifier_GAPS_Jumps_Out	days = -1 }
		}
		if = {
			limit = { 
				owner = { has_origin = Origin_GAPS_The_Unswallowed } 
				from = { 
					any_system_planet = { is_planet_class = pc_black_hole } 
					has_modifier = System_Modifier_GAPS_Black_Hole_Restoring 
				} 
			}
			add_modifier = { modifier = Ship_Modifier_GAPS_Restores_From_The_Void	days = -1 }
		}
		if = {
			limit = { 
				owner = { has_origin = Origin_GAPS_The_Unswallowed } 
				from = { 
					any_system_planet = { is_planet_class = pc_black_hole } 
					has_modifier = System_Modifier_GAPS_Pulls_Them_In 
				} 
			}
			add_modifier = { modifier = Ship_Modifier_GAPS_Not_Pulled_In	days = -1 }
		}
	}
}

planet_event = {
	id = Events_GAPS_The_Unswallowed.4
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		solar_system = {
			spawn_planet = {
				class = pc_gaia
				location = root
				orbit_distance_offset = 60
				orbit_angle_offset = 100
				size = 15
				deposit_blockers = none
				modifiers = none
				init_effect = {
					set_name = "Void Planet"
					save_event_target_as = new_planet
					set_planet_flag = Planet_Flag_GAPS_Void_World
				}
			}
			if = {
				limit = { owner = { ideal_planet_class = pc_desert } }
				event_target:new_planet = {
					change_pc = { class = pc_desert inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_arid } }
				event_target:new_planet = {
					change_pc = { class = pc_arid inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_savannah } }
				event_target:new_planet = {
					change_pc = { class = pc_savannah inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_tropical } }
				event_target:new_planet = {
					change_pc = { class = pc_tropical inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_continental } }
				event_target:new_planet = {
					change_pc = { class = pc_continental inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_ocean } }
				event_target:new_planet = {
					change_pc = { class = pc_ocean inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_tundra } }
				event_target:new_planet = {
					change_pc = { class = pc_tundra inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_arctic } }
				event_target:new_planet = {
					change_pc = { class = pc_arctic inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_alpine } }
				event_target:new_planet = {
					change_pc = { class = pc_alpine inherit_entity = no }
				}
			}
			#PD COMPATIBILITY
			else_if = {
				limit = { owner = { ideal_planet_class = pc_sandsea } }
				event_target:new_planet = {
					change_pc = { class = pc_sandsea inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_oasis } }
				event_target:new_planet = {
					change_pc = { class = pc_oasis inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_mesa } }
				event_target:new_planet = {
					change_pc = { class = pc_mesa inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_outback } }
				event_target:new_planet = {
					change_pc = { class = pc_outback inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_med } }
				event_target:new_planet = {
					change_pc = { class = pc_med inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_mangrove } }
				event_target:new_planet = {
					change_pc = { class = pc_mangrove inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_wetswamp } }
				event_target:new_planet = {
					change_pc = { class = pc_wetswamp inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_desertislands } }
				event_target:new_planet = {
					change_pc = { class = pc_desertislands inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_hajungle } }
				event_target:new_planet = {
					change_pc = { class = pc_hajungle inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_forest } }
				event_target:new_planet = {
					change_pc = { class = pc_forest inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_steppe } }
				event_target:new_planet = {
					change_pc = { class = pc_steppe inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_prairie } }
				event_target:new_planet = {
					change_pc = { class = pc_prairie inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_retinal } }
				event_target:new_planet = {
					change_pc = { class = pc_retinal inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_cascadian } }
				event_target:new_planet = {
					change_pc = { class = pc_cascadian inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_hadesert } }
				event_target:new_planet = {
					change_pc = { class = pc_hadesert inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_snow } }
				event_target:new_planet = {
					change_pc = { class = pc_snow inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_mushroom } }
				event_target:new_planet = {
					change_pc = { class = pc_mushroom inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_swamp } }
				event_target:new_planet = {
					change_pc = { class = pc_swamp inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_subarctic } }
				event_target:new_planet = {
					change_pc = { class = pc_subarctic inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_antarctic } }
				event_target:new_planet = {
					change_pc = { class = pc_antarctic inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_frozen_desert } }
				event_target:new_planet = {
					change_pc = { class = pc_frozen_desert inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_boreal } }
				event_target:new_planet = {
					change_pc = { class = pc_boreal inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_glacial } }
				event_target:new_planet = {
					change_pc = { class = pc_glacial inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_geothermal } }
				event_target:new_planet = {
					change_pc = { class = pc_geothermal inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_karst } }
				event_target:new_planet = {
					change_pc = { class = pc_karst inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_primal } }
				event_target:new_planet = {
					change_pc = { class = pc_primal inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_salt } }
				event_target:new_planet = {
					change_pc = { class = pc_salt inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_aquatic } }
				event_target:new_planet = {
					change_pc = { class = pc_aquatic inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_biolumen } }
				event_target:new_planet = {
					change_pc = { class = pc_biolumen inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_irradiated } }
				event_target:new_planet = {
					change_pc = { class = pc_irradiated inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_superhabitable } }
				event_target:new_planet = {
					change_pc = { class = pc_superhabitable inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_pdshroud } }
				event_target:new_planet = {
					change_pc = { class = pc_pdshroud inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_salt } }
				event_target:new_planet = {
					change_pc = { class = pc_salt inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_aquatic } }
				event_target:new_planet = {
					change_pc = { class = pc_aquatic inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_methane } }
				event_target:new_planet = {
					change_pc = { class = pc_methane inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_ash } }
				event_target:new_planet = {
					change_pc = { class = pc_ash inherit_entity = no }
				}
			}

			else_if = {
				limit = { owner = { ideal_planet_class = pc_ammonia } }
				event_target:new_planet = {
					change_pc = { class = pc_ammonia inherit_entity = no }
				}
			}

			else_if = {
				limit = { owner = { ideal_planet_class = pc_crystal } }
				event_target:new_planet = {
					change_pc = { class = pc_crystal inherit_entity = no }
				}
			}

			else_if = {
				limit = { owner = { ideal_planet_class = pc_floating } }
				event_target:new_planet = {
					change_pc = { class = pc_floating inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_graveyard } }
				event_target:new_planet = {
					change_pc = { class = pc_graveyard inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_technoorganic } }
				event_target:new_planet = {
					change_pc = { class = pc_technoorganic inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_archive } }
				event_target:new_planet = {
					change_pc = { class = pc_archive inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = d_storm_corridor } }
				event_target:new_planet = {
					change_pc = { class = d_storm_corridor inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_storm } }
				event_target:new_planet = {
					change_pc = { class = pc_storm inherit_entity = no }
					set_planet_flag =  pdnoseamonster
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_megaflora } }
				event_target:new_planet = {
					change_pc = { class = pc_megaflora inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_megafloratol } }
				event_target:new_planet = {
					change_pc = { class = pc_megafloratol inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_mud } }
				event_target:new_planet = {
					change_pc = { class = pc_mud inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_veld } }
				event_target:new_planet = {
					change_pc = { class = pc_veld inherit_entity = no }
				}
			}
			else_if = {
				limit = { owner = { ideal_planet_class = pc_lake } }
				event_target:new_planet = {
					change_pc = { class = pc_lake inherit_entity = no }
				}
			}
			event_target:new_planet = {
				reroll_planet_modifiers = yes
				reroll_deposits = yes
				planet_event = { id = pdengine.14 days = 1 }
				add_deposit = d_GAPS_Void_World
			}
		}
	}
}
#CRITTER SPAWNING COMMANDS
planet_event = {
	id = Events_GAPS_The_Unswallowed.41
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		solar_system.owner = { save_event_target_as = Country_Target_GAPS_Void_Dwellers }
		if = {
			limit = { NOT = { exists = event_target:Global_Target_GAPS_Void_Dwellers_Critters } }
			create_country = {
				name = "NAME_Enigmatic_Energy"
				type = GAPS_Void_Dwellers
				flag = {
					icon = {
						category = "zoological"
						file = "flag_zoological_1.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"black"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = Global_Target_GAPS_Void_Dwellers_Critters
				}
			}
			event_target:Global_Target_GAPS_Void_Dwellers_Critters = {
				set_faction_hostility = {
					set_hostile = no
					#set_neutral = no
					set_friendly = yes
					target = event_target:Country_Target_GAPS_Void_Dwellers
				}
				set_truce = { target = event_target:Country_Target_GAPS_Void_Dwellers }
			}
			every_country = {
				limit = { OR = { has_government = gov_curator_enclave has_government_authority = gov_curator_enclave has_origin = Origin_GAPS_The_Unswallowed } }				
				event_target:Global_Target_GAPS_Void_Dwellers_Critters = {
					set_faction_hostility = {
						set_hostile = no
						#set_neutral = no
						set_friendly = yes
						target = prev
					}
					set_truce = { target = prev }
				}
			}
		}
		create_fleet = {
			name = "NAME_Void_Cloud"
			effect = {
				set_owner = event_target:Global_Target_GAPS_Void_Dwellers_Critters
				create_ship = {
					name = ""
					design = "NAME_Cloud_Entity"
				}
				set_location = root
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 500
			}
		}
		last_created_fleet = {
			add_modifier = { modifier = cloud_power	days = -1 }
			if = { 
				limit = { event_target:Country_Target_GAPS_Void_Dwellers = { has_country_flag = Country_Flag_GAPS_Completed_Project_Power_From_The_Worm } }
				add_modifier = { modifier = Ship_Modifier_GaPS_Power_From_The_Void	days = -1 }
			}
		}
	}
}
		
planet_event = {
	id = Events_GAPS_The_Unswallowed.42
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		solar_system.owner = { save_event_target_as = Country_Target_GAPS_Void_Dwellers }
		if = {
			limit = { NOT = { exists = event_target:Global_Target_GAPS_Void_Dwellers_Critters } }
			create_country = {
				name = "NAME_Enigmatic_Energy"
				type = GAPS_Void_Dwellers
				flag = {
					icon = {
						category = "zoological"
						file = "flag_zoological_1.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"black"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = Global_Target_GAPS_Void_Dwellers
				}
			}
			event_target:Global_Target_GAPS_Void_Dwellers_Critters = {
				set_faction_hostility = {
					set_hostile = no
					#set_neutral = no
					set_friendly = yes
					target = event_target:Country_Target_GAPS_Void_Dwellers
				}
			}
			every_country = {
				limit = { OR = { has_government = gov_curator_enclave has_government_authority = gov_curator_enclave has_origin = Origin_GAPS_The_Unswallowed } }				
				event_target:Global_Target_GAPS_Void_Dwellers_Critters = {
					set_faction_hostility = {
						set_hostile = no
						#set_neutral = no
						set_friendly = yes
						target = prev
					}
					set_truce = { target = prev }
				}
			}
		}
		create_fleet = {
			name = "NAME_VLUUR"
			effect = {
				set_owner = event_target:Global_Target_GAPS_Void_Dwellers_Critters
				create_ship = {
					name = "NAME_VLUUR"
					design = "NAME_Cloud_Entity"
				}
				set_location = prev
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = return_point
				set_aggro_range = 0
				queue_actions = {
					wait = { # Cooldown until they start moving
						duration = 10
						duration = 2000
						random = 500
					}
				}
			}
		}
		last_created_fleet = {
			add_modifier = { modifier = vluur_power	days = -1 }
			if = { 
				limit = { event_target:Country_Target_GAPS_Void_Dwellers = { has_country_flag = Country_Flag_GAPS_Completed_Project_Power_From_The_Worm } }
				add_modifier = { modifier = Ship_Modifier_GaPS_Power_From_The_Void	days = -1 }
			}
		}
	}
}
planet_event = {
	id = Events_GAPS_The_Unswallowed.43
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		solar_system.owner = { save_event_target_as = Country_Target_GAPS_Void_Dwellers }
		if = {
			limit = { NOT = { exists = event_target:Global_Target_GAPS_Void_Dwellers_Critters } }
			create_country = {
				name = "NAME_Enigmatic_Energy"
				type = GAPS_Void_Dwellers
				flag = {
					icon = {
						category = "zoological"
						file = "flag_zoological_1.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"black"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = Global_Target_GAPS_Void_Dwellers
				}
			}
			event_target:Global_Target_GAPS_Void_Dwellers_Critters = {
				set_faction_hostility = {
					set_hostile = no
					#set_neutral = no
					set_friendly = yes
					target = event_target:Country_Target_GAPS_Void_Dwellers
				}
			}
			every_country = {
				limit = { OR = { has_government = gov_curator_enclave has_government_authority = gov_curator_enclave has_origin = Origin_GAPS_The_Unswallowed } }				
				event_target:Global_Target_GAPS_Void_Dwellers_Critters = {
					set_faction_hostility = {
						set_hostile = no
						#set_neutral = no
						set_friendly = yes
						target = prev
					}
					set_truce = { target = prev }
				}
			}
		}
		create_fleet = {
			name = "NAME_Dimensional_Horror"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_owner = event_target:Country_Target_GAPS_Void_Dwellers
				create_ship = {
					name = "NAME_Dimensional_Horror"
					design = "NAME_Dimensional_Horror"
				}
				set_location = {
					target = PREV
					distance = 100
					angle = random
				}
			}
			set_fleet_stance = aggressive
		}
		last_created_fleet = {
			if = { 
				limit = { event_target:Country_Target_GAPS_Void_Dwellers = { has_country_flag = Country_Flag_GAPS_Completed_Project_Power_From_The_Worm } }
				add_modifier = { modifier = Ship_Modifier_GaPS_Power_From_The_Void	days = -1 }
			}
		}
	}
}
planet_event = {
	id = Events_GAPS_The_Unswallowed.44
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		solar_system = {
			add_modifier = { modifier = System_Modifier_GaPS_New_Black_Hole days = -1 }
			every_system_planet = {
				limit = { is_star = yes }
				change_pc = pc_black_hole
			}
			owner = {
				set_country_flag = Country_Flag_GAPS_Void_CAller_System_Changed
			}
		}
	}
}
		
					
country_event = {
	id = Events_GAPS_The_Unswallowed.5
	hide_window = no
	is_triggered_only = yes
	title = "gwen_friendships_cloud.2.name"
	picture = GFX_evt_wormhole
	show_sound = event_ex_started
	location = event_target:location_event_target_gwen_cloud_wormhole
	desc = "gwen_friendships_cloud.2.desc_01"
	
	immediate = {
		random_system = {
			limit = {
				is_star_class = sc_black_hole
				not = { has_star_flag = gwen_cloud_system }	
				not = { has_star_flag = gwen_cloud_wormhole }	
			}
			save_event_target_as = location_event_target_gwen_cloud_wormhole
			if = { 
				limit = { exists = event_target:location_event_target_gwen_cloud_wormhole }
				set_star_flag = gwen_cloud_wormhole
				spawn_natural_wormhole = {
					bypass_type = wormhole_2
					random_pos = yes
					orbit_angle = 360
				}
				random_system_planet = {
					limit = { is_primary_star = yes }
					save_event_target_as = Target_Planet_GAPS_D_Vision
				}
				create_fleet = { 
					name = "Scry Sensor"
					settings = { 
						can_upgrade = no 
						can_disband = no
						can_change_composition = no 
						can_change_leader = no 
						uses_naval_capacity = no
						spawn_debris = no
					}
				}
				last_created_fleet = {
					set_owner = root
					create_ship = {
						name = "Scry Sensor"
						design = "NAME_DS47"
					}
					set_location = event_target:Target_Planet_GAPS_D_Vision
					save_event_target_as = Target_Planet_GAPS_Scry_Sensor
					set_event_locked = yes
					hidden_effect = { fleet_event = { id = Events_GAPS_Precognitive.9 days = 1 } }
				}
			}
		}
	}
}


planet_event = {
	id = Events_GAPS_The_Unswallowed.6
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		change_planet_size = 1
		remove_planet_flag = GAPS_random_deposit_selected
		while = { 
			limit = { not = { has_planet_flag = GAPS_random_deposit_selected } }
			random_list = { 
				39 = {
					random_list = {			
						#CORE?	
						1 = {	add_deposit =	d_mountain_range	}
						1 = {	add_deposit =	d_active_volcano	}
						1 = {	add_deposit =	d_dangerous_wildlife_blocker	}
						1 = {	add_deposit =	d_dense_jungle	}
						1 = {	add_deposit =	d_toxic_kelp	}
						1 = {	add_deposit =	d_deep_sinkhole	}
						1 = {	add_deposit =	d_quicksand_basin	}
						1 = {	add_deposit =	d_noxious_swamp	}
						1 = {	add_deposit =	d_massive_glacier	}
						1 = {	add_deposit =	d_radioactive_wasteland	}
						1 = {	add_deposit =	d_city_ruins	}
						1 = {	add_deposit =	d_bomb_crater	}
					}
					set_planet_flag = GAPS_random_deposit_selected			
				}
			}
		}
	}
}
country_event = {
	id = Events_GAPS_The_Unswallowed.71
	id = Events_GAPS_The_Unswallowed.71
	title = Events_GAPS_The_Unswallowed.71.name
	desc = Events_GAPS_The_Unswallowed.71.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		begin_event_chain = {
			event_chain = "Special_Project_GAPS_Cloud_Home_System_chain"
			target = root
		}
		every_system = {		
			limit = { any_ship_in_system = { owner = { OR = { is_country_type = vluur is_country_type = cloud } } } }
			random_system_planet = { limit = { is_primary_star = yes } save_event_target_as = Target_Planet_GAPS_Cloud_Home_Star }
			enable_special_project = { name = Special_Project_GAPS_Cloud_Home_System owner = root location = event_target:Target_Planet_GAPS_Cloud_Home_Star }
		}
	}
}
country_event = {
	id = Events_GAPS_The_Unswallowed.72
	id = Events_GAPS_The_Unswallowed.72
	title = Events_GAPS_The_Unswallowed.72.name
	desc = Events_GAPS_The_Unswallowed.72.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Study_Vluur_Cloud
	}
}
country_event = {
	id = Events_GAPS_The_Unswallowed.73
	id = Events_GAPS_The_Unswallowed.73
	title = Events_GAPS_The_Unswallowed.73.name
	desc = Events_GAPS_The_Unswallowed.73.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Power_Of_The_Worm
	}
}
country_event = {
	id = Events_GAPS_The_Unswallowed.74
	id = Events_GAPS_The_Unswallowed.74
	title = Events_GAPS_The_Unswallowed.74.name
	desc = Events_GAPS_The_Unswallowed.74.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Power_From_The_Worm
		add_modifier = { modifier = days = -1 }
		every_system_within_border = {
			every_fleet_in_system = {
				limit = { owner = { is_country_type = GAPS_Void_Dwellers } }
				add_modifier = { modifier = Ship_Modifier_GaPS_Power_From_The_Void	days = -1 }
			}
		}
	}
}
country_event = {
	id = Events_GAPS_The_Unswallowed.75
	id = Events_GAPS_The_Unswallowed.75
	title = Events_GAPS_The_Unswallowed.75.name
	desc = Events_GAPS_The_Unswallowed.75.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	immediate = {
		set_country_flag = Country_Flag_GAPS_Completed_Project_Open_Rift
	}
}