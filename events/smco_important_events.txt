namespace = smco_important

country_event = {
	id = smco_important.1
	title = "smco_important.1.title"
	desc = "smco_important.1.desc"
	picture = GFX_evt_SMCO_menu

	is_triggered_only = yes

	trigger = { NOT = { has_global_flag = smco_important_read } }

	immediate = {
		log = "smco_important.1 running..."
	}

	option = {
		name = "smco_important_understood"
		hidden_effect = { set_global_flag = smco_important_read }
	}
}

#Black hole fix
event = {
	id = smco_important.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = smco_black_hole_fixed }
	}

	immediate = {
		log = "smco_important.2 running..."
		every_system = {
			every_system_planet = {
				limit = { is_planet_class = pc_black_hole }

				SMCO_black_hole_planet_entities = yes
			}
		}
		set_global_flag = smco_black_hole_fixed
	}
}

#Rogue planet change spawning mid-session
country_event = {
	id = smco_important.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOR = {
			has_global_flag = smco_rogue_planet_spawn_default
			has_global_flag = smco_rogue_planet_spawn_flyby
			has_global_flag = smco_rogue_planet_spawn_hybrid
		}
	}

	immediate = {
		set_variable = {
			which = smco_rogue_planet_spawn_midsession
			value = 0
		}
		every_system = {
			limit = { has_star_flag = SMCO_can_spawn_rogue_system }

			remove_star_flag = SMCO_can_spawn_rogue_system
		}
		every_system = {
			prev = {
				change_variable = {
					which = smco_rogue_planet_spawn_midsession
					value = 1
				}
			}
		}
		log = "[This.smco_rogue_planet_spawn_midsession] value before dividing"

		#Flyby spawning mechanism for galaxies with at least 1500 systems mid-session
		#Safety net of 100 systems, so execute if at least 1400 systems mid-sessions
		if = {
			limit = {
				check_variable = {
					which = smco_rogue_planet_spawn_midsession
					value >= 1400
				}
			}
			set_global_flag = smco_rogue_planet_spawn_flyby
		}
		else_if = {
			limit = {
				check_variable = {
					which = smco_rogue_planet_spawn_midsession
					value < 1400
				}
			}
			set_global_flag = smco_rogue_planet_spawn_default
		}

		#Setting up systems for rogue planet spawning
		divide_variable = {
			which = smco_rogue_planet_spawn_midsession
			value = 1000000
		}
		multiply_variable = {
			which = smco_rogue_planet_spawn_midsession
			value = 100000
		}
		log = "[This.smco_rogue_planet_spawn_midsession] values after dividing"
		while = {
			count = smco_rogue_planet_spawn_midsession

			random_system = {
				limit = { NOT = { has_star_flag = SMCO_can_spawn_rogue_system } }

				set_star_flag = SMCO_can_spawn_rogue_system
			}
		}

		every_system = {
			limit = {
				has_global_flag = smco_rogue_planet_spawn_flyby
				has_star_flag = SMCO_can_spawn_rogue_system
			}

			random_list = {
				50 = {
					spawn_planet = {
						class = pc_SMCO_small_rogue_planet
						orbit_location = yes
						orbit_distance_offset = 360
						init_effect = {
							SMCO_rogue_planet_modifiers = yes
							SMCO_rogue_planet_deposits = yes
							smco_rogue_planet_naming = yes
							set_name = smco_rogue_planet_name
							prevent_anomaly = yes
						}
					}
					remove_star_flag = SMCO_can_spawn_rogue_system
				}
				50 = {
					spawn_planet = {
						class = pc_SMCO_sub_brown_dwarf_planet
						orbit_location = yes
						orbit_distance_offset = 360
						init_effect = {
							SMCO_rogue_planet_modifiers = yes
							SMCO_rogue_planet_deposits = yes
							smco_rogue_planet_naming = yes
							set_name = smco_rogue_planet_name
							prevent_anomaly = yes
						}
					}
					remove_star_flag = SMCO_can_spawn_rogue_system
				}
			}
		}
	}
}
