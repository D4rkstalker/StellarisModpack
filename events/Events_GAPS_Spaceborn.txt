namespace = Events_GAPS_Spaceborn

country_event = {
	id = Events_GAPS_Spaceborn.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		root = {
			has_civic = civic_GAPS_Spaceborn
		}
	}
	immediate = {
		every_owned_planet = {
		}
	}
}
country_event = {
	id = Events_GAPS_Spaceborn.2
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		root = {
			has_civic = civic_GAPS_Spaceborn
			has_technology = Tech_GAPS_Hidden_Causeways
		}
	}
	immediate = {
		save_event_target_as = test
		#every_owned_fleet = { limit = { <triggers> } <effects> }
		every_system_within_border = {
			every_fleet_in_system = {
				limit = { owner = { is_same_value = root } }
				add_modifier = { modifier = Ship_Modifier_GAPS_Hidden_Causeways	days = 30 }
			}
		}
	}
}
################3
#REMEMEBER TO MAKE THE TECHS NOT TRIGGER SOCRETES SHIT
#########
country_event = {
	id = Events_GAPS_Spaceborn.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		this = { has_civic = civic_GAPS_Spaceborn }
	}

	immediate = {
		if = { 
			limit = { OR = { last_increased_tech = tech_mining_1 last_increased_tech = tech_mining_2 last_increased_tech = tech_mining_3 } }
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_mining_1_tech_mining_2_tech_mining_3 message = no }
		}
		if = { 
			limit = { OR = { last_increased_tech = tech_powered_exoskeletons last_increased_tech = tech_repeatable_improved_tile_mineral_output } }
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_powered_exoskeletons_tech_repeatable_improved_tile_mineral_output message = no }
		}
		if = { 
			limit = { OR = { last_increased_tech = tech_engineering_1 last_increased_tech = tech_engineering_2 last_increased_tech = tech_engineering_3 } }
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_engineering_1_tech_engineering_2_tech_engineering_3 message = no }
		}
		if = { 
			limit = { OR = { last_increased_tech = tech_assembly_pattern } }
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_assembly_pattern message = no }
		}
		if = { 
			limit = { OR = { last_increased_tech = tech_construction_templates } }
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_construction_templates message = no }
		}
		if = { 
			limit = { OR = { last_increased_tech = tech_physics_1 last_increased_tech = tech_physics_2 last_increased_tech = tech_physics_3 } }
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_physics_1_tech_physics_2_tech_physics_3 message = no }
		}
		if = { 
			limit = { 
				OR = { 
					last_increased_tech = tech_power_plant_2 
					last_increased_tech = tech_power_plant_3 
					last_increased_tech = tech_power_plant_4 
				} 
			}
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_power_plant_2_tech_power_plant_3_tech_power_plant_4 message = no }
		}
		if = { 
			limit = { 
				OR = { 
					last_increased_tech = tech_repeatable_improved_tile_energy_output 
					last_increased_tech = tech_prescient_data_modeling 
					last_increased_tech = tech_gargantuan_evolution 
				} 
			}
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_repeatable_improved_tile_energy_output_tech_prescient_data_modeling_tech_gargantuan_evolution message = no }
		}
		if = { 
			limit = { 
				OR = { 
					last_increased_tech = tech_gene_crops 
					last_increased_tech = tech_nano_vitality_crops 
					last_increased_tech = tech_eco_simulation 
				} 
			}
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_gene_crops_tech_nano_vitality_crops_tech_eco_simulation message = no }
		}
		if = { 
			limit = { 
				OR = { 
					last_increased_tech = tech_repeatable_improved_tile_food_output  
				} 
			}
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_repeatable_improved_tile_food_output message = no }
		}
		if = { 
			limit = { 
				OR = { 
					last_increased_tech = tech_nutrient_replication  
				} 
			}
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_nutrient_replication message = no }
		}
		if = { 
			limit = { 
				OR = { 
					last_increased_tech = tech_synthetic_thought_patterns 
					last_increased_tech = tech_collective_production_methods 
					last_increased_tech = tech_resource_processing_algorithms 
				} 
			}
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_synthetic_thought_patterns_tech_collective_production_methods_tech_resource_processing_algorithms message = no }
		}
		if = { 
			limit = { OR = { last_increased_tech = tech_society_1 last_increased_tech = tech_society_2 last_increased_tech = tech_society_3 } }
			give_technology = { tech = Tech_GAPS_Space_Born_Replacement_For_tech_society_1_tech_society_2_tech_society_3 message = no }
		}
	}
}

country_event = {
	id = Events_GAPS_Spaceborn.4
	title = Events_GAPS_Spaceborn.4.name
	desc = Events_GAPS_Spaceborn.4.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	trigger = {
		this = { has_civic = civic_GAPS_Spaceborn }
		last_increased_tech = Tech_GAPS_Space_Building
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Station_Gardens"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Station_Gardens.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Station_Gardens
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Station_Gardens }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Rare_Gatherer"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Rare_Gatherer.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Rare_Gatherer
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Rare_Gatherer }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Mineral_Gatherer"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Mineral_Gatherer.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Mineral_Gatherer
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Mineral_Gatherer }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Energy_Gatherer"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Energy_Gatherer.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Energy_Gatherer
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Energy_Gatherer }
		}
		ai_chance = {
			factor = 20
		}
	}


	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Research_Gatherer"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Module_GAPS_Spaceborn_Research_Gatherer.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Research_Gatherer
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Module_GAPS_Spaceborn_Research_Gatherer }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Space_Forge"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Space_Forge.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Space_Forge
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Space_Forge }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Space_Manufacturer"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Space_Manufacturer.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Space_Manufacturer
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Space_Manufacturer }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Off_Planet_Housing"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Off_Planet_Housing.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Off_Planet_Housing
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Off_Planet_Housing }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Space_Monument"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Space_Monument.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Space_Monument
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Space_Monument }
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Space_Claimer"
		custom_tooltip = "Events_GAPS_Spaceborn.Starbase_Bulding_GAPS_Spaceborn_Space_Claimer.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Space_Claimer
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Spaceborn_has_Starbase_Bulding_GAPS_Spaceborn_Space_Claimer }
		}
		ai_chance = {
			factor = 20
		}
	}
}
#
country_event = {
	id = Events_GAPS_Spaceborn.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		this = { has_civic = civic_GAPS_Spaceborn }
	}
	immediate = {
		give_technology = { tech = Tech_GAPS_Space_Building message = no }
	}
}