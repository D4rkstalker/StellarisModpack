namespace = MECR
# Activation flag of this mod: flag_MECR_activated

event = { #1.检查各种flag[on_monthly_pulse]
	id = MECR.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# mod启用flag
		remove_global_flag = flag_MECR_activated
		set_timed_global_flag = {
			flag = flag_MECR_activated
			days = 30
		}
		if = { #取消cwtools报错
			limit = { always = no }
			set_global_flag = galactic_republic_formed
			random_country = {
				set_country_flag = flag_debug_yes_i_have_a_think_tank
				set_country_flag = flag_debug_yes_i_have_master_builders
			}
		}
		if = { #重设帝国特许状
			limit = {
				has_galactic_emperor = yes
				any_country = { has_modifier = imperial_charter }
				galactic_emperor = { NOT = { has_modifier = imp_concession_ports_mult } }
			}
			galactic_emperor = { country_event = { id = emperor.65 } }
		}
		if = { #设置常量（用来检查script_value）
			limit = { NOT = { has_global_flag = flag_global_event_country_constants_set_v_3_0 } }
			event_target:global_event_country = {
				set_variable = { which = constant_1 value = 1 }
				set_variable = { which = constant_2 value = 2 }
				set_variable = { which = constant_3 value = 3 }
				set_variable = { which = constant_4 value = 4 }
				set_variable = { which = constant_5 value = 5 }
				set_variable = { which = constant_6 value = 6 }
				set_variable = { which = constant_7 value = 7 }
				set_variable = { which = constant_8 value = 8 }
				set_variable = { which = constant_9 value = 9 }
				set_variable = { which = constant_10 value = 10 }
				set_variable = { which = constant_11 value = 11 }
				set_variable = { which = constant_12 value = 12 }
				set_variable = { which = constant_13 value = 13 }
				set_variable = { which = constant_14 value = 14 }
				set_variable = { which = constant_15 value = 15 }
				set_variable = { which = constant_16 value = 16 }
				set_variable = { which = constant_17 value = 17 }
				set_variable = { which = constant_18 value = 18 }
				set_variable = { which = constant_19 value = 19 }
				set_variable = { which = constant_20 value = 20 }
			}
			set_global_flag = flag_global_event_country_constants_set_v_3_0
		}
		if = { #为银河邦联设置常量（用来检查script_value）
			limit = {
				any_federation = {
					has_federation_perk = galactic_confederation_passive
					NOT = { is_variable_set = constant_20 }
				}
			}
			every_federation = {
				limit = {
					has_federation_perk = galactic_confederation_passive
					NOT = { is_variable_set = constant_20 }
				}
				set_variable = { which = constant_1 value = 1 }
				set_variable = { which = constant_2 value = 2 }
				set_variable = { which = constant_3 value = 3 }
				set_variable = { which = constant_4 value = 4 }
				set_variable = { which = constant_5 value = 5 }
				set_variable = { which = constant_6 value = 6 }
				set_variable = { which = constant_7 value = 7 }
				set_variable = { which = constant_8 value = 8 }
				set_variable = { which = constant_9 value = 9 }
				set_variable = { which = constant_10 value = 10 }
				set_variable = { which = constant_11 value = 11 }
				set_variable = { which = constant_12 value = 12 }
				set_variable = { which = constant_13 value = 13 }
				set_variable = { which = constant_14 value = 14 }
				set_variable = { which = constant_15 value = 15 }
				set_variable = { which = constant_16 value = 16 }
				set_variable = { which = constant_17 value = 17 }
				set_variable = { which = constant_18 value = 18 }
				set_variable = { which = constant_19 value = 19 }
				set_variable = { which = constant_20 value = 20 }
			}
		}
		if = { #和平时移除对抗天灾flag
			limit = {
				has_global_flag = galactic_community_crisis_fighting
				OR = {
					galaxy_is_peace = yes
					is_galactic_community_formed = no
				}
			}
			remove_global_flag = galactic_community_crisis_fighting
		}
		if = { #打击化身天灾添加对抗天灾flag
			limit = {
				any_country = {
					has_crisis_level = crisis_level_5
				}
				is_galactic_community_formed = yes
				NOT = { has_global_flag = galactic_community_crisis_fighting }
			}
			set_global_flag = galactic_community_crisis_fighting
		}
		if = { #战乱时移除五年计划制订flag
			limit = {
				galaxy_is_peace = no
				has_global_flag = flag_galactic_focus_five_year_plan_formulating
			}
			remove_global_flag = flag_galactic_focus_five_year_plan_formulating
			remove_global_flag = flag_galactic_focus_five_year_plan_formulating_timer
		}
		if = { #非战乱时移除战争命令flag
			limit = {
				has_global_flag = flag_any_war_order_activated
				NOR = {
					AND = {
						has_global_flag = galactic_community_crisis_fighting
						is_crisis_ongoing = yes
					}
					any_country = { has_been_declared_crisis = yes }
				}
			}
			cancel_resolution = resolution_galactic_focus_war_order_industrial_mobilization
			cancel_resolution = resolution_galactic_focus_war_order_build_fleet
			cancel_resolution = resolution_galactic_focus_war_order_devastating_blow
			cancel_resolution = resolution_galactic_focus_war_order_planetary_defense
			remove_global_flag = flag_any_war_order_activated
		}
		if = { #根据监管人议案设置flag
			limit = {
				has_galactic_custodian = yes
				NOT = { has_global_flag = flag_MECR_2_4_5_flag_repaired }
			}
			if = { # resolution_custodian_galactic_standard
				limit = {
					is_active_resolution = resolution_custodian_galactic_standard
					NOT = { has_global_flag = flag_galactic_standard_set }
				}
				set_global_flag = flag_galactic_standard_set
				set_global_flag = galactic_standard_activated
			}
			if = { # resolution_custodian_galactic_mobilization
				limit = {
					is_active_resolution = resolution_custodian_galactic_mobilization
					NOT = { has_global_flag = galactic_mobilization_activated }
				}
				set_global_flag = galactic_mobilization_activated
			}
			if = { # resolution_custodian_webway_project
				limit = {
					is_active_resolution = resolution_custodian_webway_project
					NOT = { has_global_flag = webway_project_activated }
				}
				set_global_flag = webway_project_activated
			}
			if = { # resolution_custodian_gdf
				limit = { is_active_resolution = resolution_custodian_gdf }
				if = {
					limit = { is_active_resolution = resolution_custodian_expand_gdf }
					if = {
						limit = { is_active_resolution = resolution_custodian_expand_gdf_3 }
						if = {
							limit = { is_active_resolution = resolution_custodian_expand_gdf_4 }
							if = {
								limit = { is_active_resolution = resolution_custodian_expand_gdf_5 }
								event_target:global_event_country = { set_variable = { which = gdf_expand_size value = 2 } }
							}
							else = { event_target:global_event_country = { set_variable = { which = gdf_expand_size value = 4 } } }
						}
						else = { event_target:global_event_country = { set_variable = { which = gdf_expand_size value = 3 } } }
					}
					else = { event_target:global_event_country = { set_variable = { which = gdf_expand_size value = 2 } } }
				}
				else = { event_target:global_event_country = { set_variable = { which = gdf_expand_size value = 1 } } }
			}
			else = { event_target:global_event_country = { clear_variable = gdf_expand_size } }
			set_global_flag = flag_MECR_2_4_5_flag_repaired
		}
		if = { #星海帝国建国后根据监管人议案flag调整决议
			limit = {
				has_galactic_emperor = yes
				OR = {
					has_global_flag = flag_MECR_emperor_resolutions_repaired
					has_global_flag = flag_MECR_emperor_ia_resolutions_repaired
				}
			}
			if = { # 其他议案
				limit = { NOT = { has_global_flag = flag_MECR_emperor_resolutions_repaired } }
				if = { # resolution_emperor_galactic_standard
					limit = {
						has_global_flag = galactic_standard_activated
						NOT = { is_active_resolution = resolution_emperor_galactic_standard }
					}
					pass_resolution_no_cooldown = resolution_emperor_galactic_standard
					cancel_resolution = resolution_custodian_galactic_standard
					remove_global_flag = galactic_standard_activated
				}
				if = { # resolution_emperor_galactic_mobilization
					limit = {
						has_global_flag = galactic_mobilization_activated
						NOT = { is_active_resolution = resolution_emperor_galactic_mobilization }
					}
					pass_resolution_no_cooldown = resolution_emperor_galactic_mobilization
					cancel_resolution = resolution_custodian_galactic_mobilization
					remove_global_flag = galactic_mobilization_activated
				}
				if = { # resolution_emperor_webway_project
					limit = {
						has_global_flag = webway_project_activated
						NOT = { is_active_resolution = resolution_emperor_webway_project }
					}
					pass_resolution_no_cooldown = resolution_emperor_webway_project
					cancel_resolution = resolution_custodian_webway_project
					remove_global_flag = webway_project_activated
				}
				set_global_flag = flag_MECR_emperor_resolutions_repaired
			}
			if = { # resolution_emperor_imperial_armada
				limit = {
					NOT = { has_global_flag = flag_MECR_emperor_ia_resolutions_repaired }
					is_active_resolution = resolution_emperor_imperial_armada
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = gdf_expand_size value = 5 } } }
					pass_resolution_no_cooldown = resolution_emperor_expand_ia_3
					pass_resolution_no_cooldown = resolution_emperor_expand_ia_4
					pass_resolution_no_cooldown = resolution_emperor_expand_ia_5
					cancel_resolution = resolution_custodian_expand_gdf_5
					cancel_resolution = resolution_custodian_expand_gdf_4
					cancel_resolution = resolution_custodian_expand_gdf_3
				}
				else_if = {
					limit = { event_target:global_event_country = { check_variable = { which = gdf_expand_size value = 4 } } }
					pass_resolution_no_cooldown = resolution_emperor_expand_ia_3
					pass_resolution_no_cooldown = resolution_emperor_expand_ia_4
					cancel_resolution = resolution_custodian_expand_gdf_4
					cancel_resolution = resolution_custodian_expand_gdf_3
				}
				else_if = {
					limit = { event_target:global_event_country = { check_variable = { which = gdf_expand_size value = 3 } } }
					pass_resolution_no_cooldown = resolution_emperor_expand_ia_3
					cancel_resolution = resolution_custodian_expand_gdf_3
				}
				event_target:global_event_country = { clear_variable = gdf_expand_size }
				set_global_flag = flag_MECR_emperor_ia_resolutions_repaired
			}
			remove_global_flag = galactic_mobilization_activated
			remove_global_flag = webway_project_activated
		}
		if = { #版本更新：移除所有GDF/IA的舰容占用
			limit = { NOT = { has_global_flag = flag_MECR_gdfia_nc_usage_removed } }
			set_global_flag = flag_MECR_gdfia_nc_usage_removed
			every_galaxy_fleet = {
				limit = { has_ship_owner_type = galactic_community }
				add_modifier = { modifier = fleet_modifier_gdf_no_nc_usage }
			}
		}
		if = { #版本更新：为帝国行省添加科学院科技共享忠诚度奖励
			limit = { NOT = { has_global_flag = flag_MECR_provinces_get_ias_loyalty_bonus_repaired } }
			set_global_flag = flag_MECR_provinces_get_ias_loyalty_bonus_repaired
			if = {
				limit = {
					galactic_emperor = {
						has_federation = yes
						federation = { has_federation_law = imperial_academy_of_sciences_technical_unification }
					}
				}
				every_country = {
					limit = { is_imperial_province = yes }
					change_variable = { which = ias_get_new_tech_loyalty_bonus value = 180 }
				}
			}
		}
		if = { #版本更新：移除过度添加的旧场馆
			limit = { NOT = { has_global_flag = flag_MECR_overload_former_exhibition_center_removed } }
			set_global_flag = flag_MECR_overload_former_exhibition_center_removed
			every_galaxy_planet = {
				limit = {
					has_owner = yes
					count_deposits = { type = d_expo_former_exhibition_center count > 1 }
				}
				while = {
					limit = { count_deposits = { type = d_expo_former_exhibition_center count > 1 } }
					remove_deposit = d_expo_former_exhibition_center
				}
			}
		}
		if = { #版本更新：新的外交传统替换
			limit = { NOT = { has_global_flag = flag_MECR_diplomacy_traditions_swapped } }
			set_global_flag = flag_MECR_diplomacy_traditions_swapped
			galactic_emperor = {
				if = {
					limit = {
						has_active_tradition = tr_diplomacy_imperial_prestige
						NOT = { has_country_flag = flag_tr_diplomacy_imperial_prestige_complete }
					}
					switch = {
						trigger = has_policy_flag
						diplo_stance_condescending_authority = { set_policy = { policy = diplomatic_stance option = diplo_stance_condescending_authority_advanced cooldown = no } }
						diplo_stance_humble_and_friendly	 = { set_policy = { policy = diplomatic_stance option = diplo_stance_humble_and_friendly_advanced cooldown = no } }
						diplo_stance_glory_conquest			 = { set_policy = { policy = diplomatic_stance option = diplo_stance_glory_conquest_advanced cooldown = no } }
						diplo_stance_universal_transactions	 = { set_policy = { policy = diplomatic_stance option = diplo_stance_universal_transactions_advanced cooldown = no } }
					}
					set_country_flag = flag_tr_diplomacy_imperial_prestige_complete
				}
			}
		}
		if = { #兼容Forerunner Traditions Overhaul
			limit = {
				NOT = { has_global_flag = Forerunner_Traditions_Overhaul_check_delay }
				NOT = { has_global_flag = Forerunner_Traditions_Overhaul }
			}
			if = {
				limit = {
					any_playable_country = {
						OR = {
							AND = {
								has_tradition = tr_diplomacy_adopt
								OR = {
									has_tradition = frr_diplomacy_federation_a
									has_tradition = frr_diplomacy_ideology_a
									has_tradition = frr_diplomacy_association_a
									has_tradition = frr_diplomacy_government_a
									has_tradition = frr_diplomacy_integration_a
									has_tradition = frr_diplomacy_administration_a
								}
							}
							AND = {
								has_tradition = tr_discovery_finish
								OR = {
									has_tradition = frr_discovery_exploration_a
									has_tradition = frr_discovery_curiosity_a
									has_tradition = frr_discovery_academy_a
									has_tradition = frr_discovery_physics_a
									has_tradition = frr_discovery_society_a
									has_tradition = frr_discovery_engineering_a
								}
							}
							AND = {
								has_tradition = tr_domination_finish
								OR = {
									has_tradition = frr_production_excavation_a
									has_tradition = frr_production_manufacturing_a
									has_tradition = frr_production_fabrication_a
									has_tradition = frr_production_assembly_a
									has_tradition = frr_production_refinement_a
									has_tradition = frr_production_agriculture_a
								}
							}
							AND = {
								has_tradition = tr_expansion_adopt
								OR = {
									has_tradition = frr_expansion_colonization_a
									has_tradition = frr_expansion_space_race_a
									has_tradition = frr_expansion_population_a
									has_tradition = frr_expansion_infrastructure_a
									has_tradition = frr_expansion_foundation_a
									has_tradition = frr_expansion_bureaucracy_a
								}
							}
							AND = {
								has_tradition = tr_mercantile_finish
								OR = {
									has_tradition = frr_commerce_exchange_a
									has_tradition = frr_commerce_trade_a
									has_tradition = frr_commerce_security_a
									has_tradition = frr_commerce_accumulation_a
									has_tradition = frr_commerce_capability_a
									has_tradition = frr_commerce_enterprises_a
								}
							}
							AND = {
								has_tradition = tr_harmony_finish
								OR = {
									has_tradition = frr_prosperity_aesthetics_a
									has_tradition = frr_prosperity_tranquillity_a
									has_tradition = frr_prosperity_control_a
									has_tradition = frr_prosperity_renaissance_a
									has_tradition = frr_prosperity_alteration_a
									has_tradition = frr_prosperity_recreation_a
								}
							}
							AND = {
								has_tradition = tr_subterfuge_adopt
								OR = {
									has_tradition = frr_subterfuge_agency_a
									has_tradition = frr_subterfuge_intelligence_a
									has_tradition = frr_subterfuge_keeper_a
									has_tradition = frr_subterfuge_reconnaissance_a
									has_tradition = frr_subterfuge_surveillance_a
									has_tradition = frr_subterfuge_manikin_a
								}
							}
							AND = {
								has_tradition = tr_unyielding_finish
								OR = {
									has_tradition = frr_supremacy_quantity_a
									has_tradition = frr_supremacy_quality_a
									has_tradition = frr_supremacy_deterrence_a
									has_tradition = frr_supremacy_admirality_a
									has_tradition = frr_supremacy_warfare_a
									has_tradition = frr_supremacy_devastation_a
								}
							}
						}
					}
				}
				set_global_flag = Forerunner_Traditions_Overhaul
			}
			else = {
				set_global_flag = Forerunner_Traditions_Overhaul_check_delay
			}
		}
	}
}
event = { #2.开局处理：先[on_game_start]
	id = MECR.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = { remove_country_flag = flag_reload_game_MECR }
		# mod启用flag
		set_timed_global_flag = {
			flag = flag_MECR_activated
			days = 30
		}
		set_global_flag = flag_MECR_2_0_notice
		event_target:global_event_country = {
			#set_saved_date = {
			#	key = lower_house_voting_timer
			#	days_from_present = 60
			#	expires = 60
			#}
			export_trigger_value_to_variable = {
				trigger = check_galaxy_setup_value
				parameters = { setting = mid_game_year }
				variable = mid_game_days
			}
			if = {
				limit = { check_variable = { which = mid_game_days value > 75 } }
				set_variable = { which = mid_game_days value = 75 }
			}
			multiply_variable = { which = mid_game_days value = 360 }
			set_saved_date = {
				key = galactic_confederation_pre_timer
				days_from_present = mid_game_days
				expires = mid_game_days
			}
			set_saved_date = {
				key = the_step_towards_a_united_galaxy_pre_timer
				days_from_present = mid_game_days
				expires = mid_game_days
			}
			export_trigger_value_to_variable = {
				trigger = check_galaxy_setup_value
				parameters = { setting = end_game_year }
				variable = end_game_days
			}
			if = {
				limit = { check_variable = { which = end_game_days value > 150 } }
				set_variable = { which = end_game_days value = 150 }
			}
			multiply_variable = { which = end_game_days value = 360 }
			set_saved_date = {
				key = imperial_unification_pre_timer
				days_from_present = end_game_days
				expires = end_game_days
			}
		}
		# 兼容星海帝皇起源
		every_country = {
			limit = { is_ai = no }
			set_variable = { which = start_c value = 1 }
			set_variable = { which = start_d value = 0 }
			set_variable = { which = start_e value = 0 }
			set_variable = { which = start_f value = 0 }
			set_variable = { which = start_az value = 1 }
			set_variable = { which = start_aa value = 0 }
			set_variable = { which = start_ab value = 0 }
			set_variable = { which = start_ac value = 0 }
			set_variable = { which = start_ad value = 0 }
			set_variable = { which = start_ae value = 0 }
			# 荣耀征服外交姿态和平时期持续损失帝国权威
			set_variable = { which = years_of_peace value = 0 }
			set_variable = { which = glory_conquest_cost_ia value = years_of_peace }
			multiply_variable = { which = glory_conquest_cost_ia value = 0.05 }
			if = {
				limit = { check_variable = { which = glory_conquest_cost_ia value > 1 } }
				set_variable = { which = glory_conquest_cost_ia value = 1 }
			}
		}
		# 兼容Forerunner Traditions Overhaul
		set_timed_global_flag = {
			flag = Forerunner_Traditions_Overhaul_check_delay
			days = 1800
		}
	}
}
event = { #3.读档刷新显示[on_single_player_save_game_load]
	id = MECR.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = { remove_country_flag = flag_reload_game_MECR }
	}
}
country_event = { #4.刷新帝国权威显示
	id = MECR.4
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		imperial_authority_trend_check = yes
	}
}
event = { #5.皇帝设置改善关系deposit[on_monthly_pulse]
	id = MECR.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_galactic_emperor = yes
	}
	immediate = {
		galactic_emperor = {
			if = {
				limit = {
					OR = {
						has_policy_flag = diplo_stance_isolationist
						has_policy_flag = diplo_stance_belligerent
						has_policy_flag = diplo_stance_supremacist
					}
				}
				if = {
					limit = { capital_scope = { NOT = { has_deposit = d_emperor_improving_relations } } }
					capital_scope = { add_deposit = d_emperor_improving_relations }
				}
				if = {
					limit = {
						any_owned_planet = {
							has_deposit = d_emperor_improving_relations
							is_capital = no
						}
					}
					every_owned_planet = {
						limit = {
							has_deposit = d_emperor_improving_relations
							is_capital = no
						}
						remove_deposit = d_emperor_improving_relations
					}
				}
			}
			else_if = {
				limit = {
					any_owned_planet = { has_deposit = d_emperor_improving_relations }
				}
				every_owned_planet = {
					limit = { has_deposit = d_emperor_improving_relations }
					remove_deposit = d_emperor_improving_relations
				}
			}
		}
		every_country = {
			limit = {
				is_galactic_emperor = no
				any_owned_planet = { has_deposit = d_emperor_improving_relations }
			}
			every_owned_planet = {
				limit = { has_deposit = d_emperor_improving_relations }
				remove_deposit = d_emperor_improving_relations
			}
		}
	}
}
event = { #6.开局处理：最后[on_game_start]
	id = MECR.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_global_flag = flag_galactic_standard_set_timer
		remove_global_flag = flag_standardizing_weights_and_measures_set_timer
	}
}
ship_event = { #10.新建的GDF/IA舰船移除舰容占用[on_ship_built]
	id = MECR.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_ship_owner_type = galactic_community
	}
	immediate = {
		add_modifier = { modifier = fleet_modifier_gdf_no_nc_usage }
	}
}
country_event = { #15.被释放的附庸国添加定时flag[on_released_as_vassal]
	id = MECR.15
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_timed_country_flag = {
			flag = flag_released_from_@from
			days = 3600
		}
	}
}
planet_event = { #81.粉碎天灾轨道轰炸把行星炸成死寂星球——人口全灭[on_planet_zero_pops]
	id = MECR.81
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_orbital_bombardment_stance = crush_the_crisis
		habitable_planet = yes
	}

	immediate = {
		owner = {
			add_static_war_exhaustion = {
				attacker = from
				location = root
				value_for_planet_destruction = 0.5
			}
			country_event = { id = action.82 }
		}
		from = { country_event = { id = action.83 } }
		set_planet_flag = nuked_planet_anomalies_disabled
		remove_all_buildings = yes
		remove_all_districts = yes
		if = {
			limit = { NOT = { is_planet_class = pc_nuked } }
			change_pc = pc_nuked
			reroll_deposits = yes
		}
		remove_modifier = "natural_beauty"
		remove_modifier = "atmospheric_aphrodisiac"
		remove_modifier = "atmospheric_hallucinogen"
		remove_modifier = "lush_planet"
		remove_modifier = "dangerous_wildlife"
		set_planet_flag = armageddon_nuked
	}
}
planet_event = { #82.粉碎天灾轨道轰炸把行星炸成死寂星球——100%破坏度[on_planet_bombarded]
	id = MECR.82
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_orbital_bombardment_stance = crush_the_crisis
		habitable_planet = yes
		NOT = { is_planet_class = pc_nuked }
		planet_devastation >= 100
	}

	immediate = {
		change_pc = pc_nuked
		set_planet_flag = nuked_planet_anomalies_disabled
		remove_all_districts = yes
		while = {
			count = 11
			ruin_building = random_no_capital
		}
		reroll_deposits = yes
		remove_modifier = "natural_beauty"
		remove_modifier = "atmospheric_aphrodisiac"
		remove_modifier = "atmospheric_hallucinogen"
		remove_modifier = "lush_planet"
		remove_modifier = "dangerous_wildlife"
		set_planet_flag = armageddon_nuked
	}
}
planet_event = { #83.粉碎天灾轨道轰炸——20%破坏度以上摧毁一座防御建筑，CD9-15个月[on_planet_bombarded]
	id = MECR.83
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_orbital_bombardment_stance = crush_the_crisis
		OR = {
			has_active_building = building_planetary_shield_generator
			has_active_building = building_stronghold
			has_active_building = building_fortress
			has_active_building = building_military_academy
			has_active_building = building_dread_encampment
			has_holding = { holding = holding_dread_outpost owner = any }
		}
		NOT = { has_planet_flag = destroyed_building_crush_the_crisis }
		planet_devastation >= 20
	}

	immediate = {
		random_list = {
			30 = {
				modifier = { set = 0 NOT = { has_active_building = building_planetary_shield_generator } }
				remove_building = building_planetary_shield_generator
				owner = {
					create_message = {
						type = PLANET_BOMBARDMENT_BUILDING_DESTROYED
						localization = PLANET_BOMBARDMENT_BUILDING_DESTROYED_DESC_building_planetary_shield_generator
						days = 30
						target = root
						variable = {
							type = name
							localization = PLANET
							scope = root
						}
					}
				}
			}
			10 = {
				modifier = { set = 0 NOT = { has_active_building = building_stronghold } }
				remove_building = building_stronghold
				owner = {
					create_message = {
						type = PLANET_BOMBARDMENT_BUILDING_DESTROYED
						localization = PLANET_BOMBARDMENT_BUILDING_DESTROYED_DESC_building_stronghold
						days = 30
						target = root
						variable = {
							type = name
							localization = PLANET
							scope = root
						}
					}
				}
			}
			10 = {
				modifier = { set = 0 NOT = { has_active_building = building_fortress } }
				remove_building = building_fortress
				owner = {
					create_message = {
						type = PLANET_BOMBARDMENT_BUILDING_DESTROYED
						localization = PLANET_BOMBARDMENT_BUILDING_DESTROYED_DESC_building_fortress
						days = 30
						target = root
						variable = {
							type = name
							localization = PLANET
							scope = root
						}
					}
				}
			}
			5 = {
				modifier = { set = 0 NOT = { has_active_building = building_military_academy } }
				remove_building = building_military_academy
				owner = {
					create_message = {
						type = PLANET_BOMBARDMENT_BUILDING_DESTROYED
						localization = PLANET_BOMBARDMENT_BUILDING_DESTROYED_DESC_building_military_academy
						days = 30
						target = root
						variable = {
							type = name
							localization = PLANET
							scope = root
						}
					}
				}
			}
			20 = {
				modifier = { set = 0 NOT = { has_active_building = building_dread_encampment } }
				remove_building = building_dread_encampment
				owner = {
					create_message = {
						type = PLANET_BOMBARDMENT_BUILDING_DESTROYED
						localization = PLANET_BOMBARDMENT_BUILDING_DESTROYED_DESC_building_dread_encampment
						days = 30
						target = root
						variable = {
							type = name
							localization = PLANET
							scope = root
						}
					}
				}
			}
			20 = {
				modifier = { set = 0 NOT = { has_holding = { holding = holding_dread_outpost owner = any } } }
				remove_holding = { holding = holding_dread_outpost owner = any }
				remove_planet_flag = active_dread_outpost
				owner = {
					create_message = {
						type = PLANET_BOMBARDMENT_BUILDING_DESTROYED
						localization = PLANET_BOMBARDMENT_BUILDING_DESTROYED_DESC_holding_dread_outpost
						days = 30
						target = root
						variable = {
							type = name
							localization = PLANET
							scope = root
						}
					}
				}
			}
		}
		random_list = {
			10 = { set_timed_planet_flag = { flag = destroyed_building_crush_the_crisis days = 270 } }
			10 = { set_timed_planet_flag = { flag = destroyed_building_crush_the_crisis days = 300 } }
			10 = { set_timed_planet_flag = { flag = destroyed_building_crush_the_crisis days = 330 } }
			10 = { set_timed_planet_flag = { flag = destroyed_building_crush_the_crisis days = 360 } }
			10 = { set_timed_planet_flag = { flag = destroyed_building_crush_the_crisis days = 390 } }
			10 = { set_timed_planet_flag = { flag = destroyed_building_crush_the_crisis days = 420 } }
			10 = { set_timed_planet_flag = { flag = destroyed_building_crush_the_crisis days = 450 } }
		}
		
	}
}
country_event = { #90.用大远征全战打死国家加帝国权威并夺取战利品(3010.)[on_country_destroyed]
	id = MECR.90
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_war = {
			OR = {
				AND = {
					any_defender = { is_same_value = root }
					any_attacker = { is_galactic_emperor = yes }
				}
				AND = {
					any_attacker = { is_same_value = root }
					any_defender = { is_galactic_emperor = yes }
				}
			}
			using_war_goal = {
				type = wg_imperial_crusade_total_war
				owner = galactic_emperor
			}
		}
	}

	immediate = {
		add_imperial_authority = 30
		country_event = { id = MECR.3010 } # 夺取战利品
	}
}
country_event = { #100.添加对抗天灾flag[on_war_beginning]
	id = MECR.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_crisis_level = crisis_level_5
		is_galactic_community_formed = yes
	}

	immediate = {
		set_global_flag = galactic_community_crisis_fighting
	}
}
country_event = { #110.内战爆发解散帝国联邦[on_war_beginning]
	id = MECR.110
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_galactic_emperor = yes
		is_active_resolution = resolution_emperor_the_step_towards_a_united_galaxy
		from = {
			OR = {
				using_war_goal = {
					type = wg_galactic_civil_war_loyalists
					owner = attacker
				}
				using_war_goal = {
					type = wg_galactic_civil_war_loyalists
					owner = defender
				}
			}
		}
	}

	immediate = {
		cancel_resolution = resolution_emperor_the_step_towards_a_united_galaxy
		if = {
			limit = { has_global_flag = imperial_unification_start }
			cancel_resolution = resolution_emperor_imperial_unification
		}
		galactic_emperor = {
			if = {
				limit = { has_federation = yes }
				federation = {
					if = {
						limit = { has_federation_perk = imperium_federation_passive }
						set_federation_type = imperial_loyalists_federation
					}
				}
			}
		}
	}
}

country_event = { #120.强迫成为行省战胜(战败国触发，提供from)[wg_force_become_province]
	id = MECR.120
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		overlord = {
			country_event = {
				id = MECR.121
				days = 3
			}
		}
	}
}
country_event = { #121.强迫成为行省战胜[120.]
	id = MECR.121
	title = "MECR.121.title"
	desc = "MECR.121.desc"
	picture = GFX_evt_victorious_army
	is_triggered_only = yes

	immediate = {
	}

	option = {
		name = "MECR.121.option.none"
		trigger = {
			from = {
				NOT = {
					any_agreement = {
						has_term_value = {
							term = specialist_type
							value = imperial_province_specialist_none
						}
					}
				}
			}
		}
		from = {
			random_agreement = {
				set_agreement_preset = {
					preset = preset_imperial_province
					apply_terms = yes
				}
			}
		}
		ai_chance = {
			base = 0
		}
	}
	option = {
		name = "MECR.121.option.bulwark"
		trigger = {
			from = {
				NOT = {
					any_agreement = {
						has_term_value = {
							term = specialist_type
							value = imperial_province_specialist_bulwark
						}
					}
				}
			}
		}
		from = {
			random_agreement = {
				set_agreement_preset = {
					preset = preset_imperial_province_bulwark
					apply_terms = yes
				}
			}
		}
		ai_chance = {
			base = 0
		}
	}
	option = {
		name = "MECR.121.option.scholarium"
		trigger = {
			from = {
				NOT = {
					any_agreement = {
						has_term_value = {
							term = specialist_type
							value = imperial_province_specialist_scholarium
						}
					}
				}
			}
		}
		from = {
			random_agreement = {
				set_agreement_preset = {
					preset = preset_imperial_province_scholarium
					apply_terms = yes
				}
			}
		}
		ai_chance = {
			base = 0
		}
	}
	option = {
		name = "MECR.121.option.prospectorium"
		trigger = {
			from = {
				NOT = {
					any_agreement = {
						has_term_value = {
							term = specialist_type
							value = imperial_province_specialist_prospectorium
						}
					}
				}
			}
		}
		from = {
			random_agreement = {
				set_agreement_preset = {
					preset = preset_imperial_province_prospectorium
					apply_terms = yes
				}
			}
		}
		ai_chance = {
			base = 0
		}
	}
	option = {
		name = "MECR.121.option.keep_recent"
		default_hide_option = yes
		ai_chance = {
			base = 100
		}
	}
}

country_event = { #130.传统：共识推动：每月计算结束议程行动减价[on_monthly_pulse_country]
	id = MECR.130
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_active_tradition = tr_politics_consensus_driven_custodian
			has_active_tradition = tr_politics_consensus_driven_emperor
		}
		is_voting_on_resolution = any
	}

	immediate = {
		set_variable = { which = consensus_driven_support value = 0 }
		set_variable = { which = consensus_driven_oppose value = 0 }
		set_variable = { which = consensus_driven_abstain value = 0 }
		set_variable = { which = consensus_driven_total value = 0 }
		every_galcom_member = {
			limit = { position_on_current_resolution = support }
			root = { change_variable = { which = consensus_driven_support value = prev.trigger:diplomacy_weight } }
		}
		every_galcom_member = {
			limit = { position_on_current_resolution = oppose }
			root = { change_variable = { which = consensus_driven_oppose value = prev.trigger:diplomacy_weight } }
		}
		every_galcom_member = {
			limit = { position_on_current_resolution = abstain }
			root = { change_variable = { which = consensus_driven_abstain value = prev.trigger:diplomacy_weight } }
		}
		change_variable = { which = consensus_driven_total value = consensus_driven_support }
		change_variable = { which = consensus_driven_total value = consensus_driven_oppose }
		change_variable = { which = consensus_driven_total value = consensus_driven_abstain }
		divide_variable = { which = consensus_driven_abstain value = 3 }
		if = {
			limit = { check_variable = { which = consensus_driven_support value > consensus_driven_oppose } }
			set_variable = { which = consensus_driven_comparing value = consensus_driven_support }
			subtract_variable = { which = consensus_driven_comparing value = consensus_driven_oppose }
			subtract_variable = { which = consensus_driven_comparing value = consensus_driven_abstain }
		}
		else = {
			set_variable = { which = consensus_driven_comparing value = consensus_driven_oppose }
			subtract_variable = { which = consensus_driven_comparing value = consensus_driven_support }
			subtract_variable = { which = consensus_driven_comparing value = consensus_driven_abstain }
		}
		if = {
			limit = { check_variable = { which = consensus_driven_comparing value > 0 } }
			divide_variable = { which = consensus_driven_comparing value = consensus_driven_total }
		}
		else = {
			set_variable = { which = consensus_driven_comparing value = 0 }
		}
	}
}
country_event = { #131.传统：无上庄严&共识驱动：皇帝通过议案加权威、减治理[on_monthly_pulse_country]
	id = MECR.131
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
	}

	immediate = {
		if = {
			limit = { has_active_tradition = tr_politics_gravitas_emperor }
			add_imperial_authority = 8
		}
		if = {
			limit = { has_active_tradition = tr_politics_consensus_driven_emperor }
			random_situation = {
				limit = { is_situation_type = situation_imperial_governance }
				if = {
					limit = { situation_progress > 15 }
					add_situation_progress = -5
				}
				else = {
					add_situation_progress = value:situation_imperial_governance_improve_civil_war_leniency_low #降低至10.01
				}
			}
		}
	}
}

country_event = { #140.格式塔皇帝切换节点类型[agenda_gestalt_emperor_switch_councilor]
	id = MECR.140
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_owned_leader = {
			limit = {
				is_councilor = yes
				is_councilor_type = councilor_gestalt_general
			}
			root = {
				clone_leader = {
					target = prev
					name = councilor_gestalt_general_icn
					skill = 1
					gender = indeterminable
					event_leader = yes
					skip_background_generation = yes
					can_manually_change_location = no
					can_see_in_list = no
					custom_description = councilor_gestalt_general_icn_desc
					randomize_traits = no
					background_ethic = ethic_gestalt_consciousness
					effect = {
						save_event_target_as = gestalt_councilor
					}
				}
				event_target:gestalt_councilor = {
					set_owner = prev
					change_leader_portrait = councilor_hive_general_1
					set_council_position = councilor_gestalt_general
					set_immortal = yes
					set_leader_flag = leader_death_events_blocked
					set_leader_flag = gestalt_imperial_prime_minister
					if = {
						limit = { has_trait = subclass_general_marshall }
						remove_trait = subclass_general_marshall
					}
					add_trait = subclass_general_imperial_prime_minister
					THIS = {
						if = {
							limit = { prevprev = { has_trait = leader_trait_spymaster } }
							add_trait = leader_trait_spymaster
						}
						if = {
							limit = { prevprev = { has_trait = leader_trait_totalitarian } }
							add_trait = leader_trait_totalitarian
						}
						if = {
							limit = { prevprev = { has_trait = leader_trait_bellicose } }
							add_trait = leader_trait_bellicose
						}
						if = {
							limit = { prevprev = { has_trait = leader_trait_aturion_organizer } }
							add_trait = leader_trait_aturion_organizer
						}
						if = {
							limit = { prevprev = { has_trait = leader_trait_educator } }
							add_trait = leader_trait_educator
						}
						if = {
							limit = { prevprev = { has_trait = leader_trait_master_bureaucrat } }
							add_trait = leader_trait_master_bureaucrat
						}
						if = {
							limit = { prevprev = { has_trait = leader_trait_admiral_warform_node } }
							add_trait = leader_trait_admiral_warform_node
						}
					}
					prevprev = {
						switch = {
							trigger = has_skill
							2 = { prev = { add_skill = 1 } }
							3 = { prev = { add_skill = 2 } }
							4 = { prev = { add_skill = 3 } }
							5 = { prev = { add_skill = 4 } }
							6 = { prev = { add_skill = 5 } }
							7 = { prev = { add_skill = 6 } }
							8 = { prev = { add_skill = 7 } }
							9 = { prev = { add_skill = 8 } }
							10 = { prev = { add_skill = 9 } }
							default = { }
						}
					}
					add_experience = 1
					set_variable = { which = exp_gain_mult value = trigger:has_experience }
					set_variable = { which = exp_gain_save_data value = prevprev.trigger:has_experience }
					set_variable = { which = exp_gain value = exp_gain_save_data }
					subtract_variable = { which = exp_gain value = trigger:has_experience }
					divide_variable = { which = exp_gain value = exp_gain_mult }
					add_experience_var = { scope = this var = exp_gain }
					if = {
						limit = { prevprev = { has_leader_flag = gestalt_imperial_prime_minister } }
						add_experience = 1000
					}
				}
			}
			kill_leader = { show_notification = no }
		}
	}
}

####################################################################################################
####################################################################################################
###################### 皇帝定时检定 ################ Regular checks of emperor ######################
####################################################################################################
####################################################################################################

country_event = { #200.皇帝每月执行[on_monthly_pulse_country]
	id = MECR.200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
	}

	immediate = {
		if = {
			limit = { NOT = { is_active_resolution = resolution_custodian_form_empire } }
			pass_resolution_no_cooldown = resolution_custodian_form_empire
		}
		# 帝国权威每月额外变化
		imperial_authority_trend_check = yes
		if = { #这个计算是为了防止在权威已满时继续因为可以被覆盖的小额降低而持续无法满足200，或者反过来
			limit = {
				NOR = {
					AND = {
						check_variable = { which = imperial_authority_trend value > 0 }
						imperial_authority = 200
					}
					AND = {
						check_variable = { which = imperial_authority_trend value < 0 }
						imperial_authority = 0
					}
				}
			}
			add_imperial_authority = var_imperial_authority_monthly_get
		}
		# 帝国行省移除部分忠诚度影响
		every_subject = {
			limit = { is_imperial_province = yes }
			erase_modifier = { MOD = divided_patronage }
			add_ethics_compatibility_modifier = yes
		}
		# 至高权威外交姿态额外附庸忠诚度
		if = {
			limit = { has_policy_flag = diplo_stance_condescending_authority }
			if = {
				limit = { has_active_tradition = tr_diplomacy_imperial_prestige }
				every_subject = {
					add_modifier = {
						modifier = modifier_condescending_authority
						multiplier = 2
						days = 31
					}
				}
			}
			else = {
				every_subject = {
					add_modifier = {
						modifier = modifier_condescending_authority
						multiplier = 1.5
						days = 31
					}
				}
			}
		}
		# 荣耀征服外交姿态和平时期持续损失帝国权威
		if = {
			limit = { always = yes }
			set_variable = { which = years_of_peace value = trigger:years_of_peace }
			set_variable = { which = glory_conquest_cost_ia value = trigger:years_of_peace }
			multiply_variable = { which = glory_conquest_cost_ia value = 0.05 }
			if = {
				limit = { check_variable = { which = glory_conquest_cost_ia value > 1 } }
				set_variable = { which = glory_conquest_cost_ia value = 1 }
			}
		}
		# 帝国科学院分配科研点
		if = {
			limit = { is_active_resolution = resolution_emperor_imperial_academy_of_sciences }
			export_resource_income_to_variable = {
				resource = physics_research
				variable = ias_research_points
			}
			divide_variable = { which = ias_research_points value = 100 }
			every_country = {
				limit = {
					is_galactic_community_member = yes
					is_galactic_emperor = no
					NOR = {
						any_agreement = { agreement_preset = preset_imperial_senator }
						AND = {
							exists = federation
							federation = { has_federation_law = imperial_academy_of_sciences_technical_unification }
							imperial_province_or_special_economic_zone = yes
						}
					}
				}
				add_resource = {
					physics_research = 10
					society_research = 10
					engineering_research = 10
					mult = galactic_emperor.ias_research_points
				}
			}
		}
		# 刷新帝国军团数量的显示
		if = {
			limit = { is_active_resolution = resolution_emperor_imperial_legions }
			imperial_legions_amount_check = yes
		}
		# 帝国议会席位议案调整
		if = {
			limit = { is_galactic_council_established = yes }
			switch = {
				trigger = num_council_positions
				0 = {
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_1 }
						cancel_resolution = resolution_emperor_council_size_1
					}
				}
				1 = {
					if = {
						limit = { is_active_resolution = resolution_emperor_abolish_council }
						cancel_resolution = resolution_emperor_abolish_council
					}
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_2 }
						cancel_resolution = resolution_emperor_council_size_2
					}
				}
				2 = {
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_1 }
						cancel_resolution = resolution_emperor_council_size_1
					}
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_3 }
						cancel_resolution = resolution_emperor_council_size_3
					}
				}
				3 = {
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_2 }
						cancel_resolution = resolution_emperor_council_size_2
					}
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_4 }
						cancel_resolution = resolution_emperor_council_size_4
					}
				}
				4 = {
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_3 }
						cancel_resolution = resolution_emperor_council_size_3
					}
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_5 }
						cancel_resolution = resolution_emperor_council_size_5
					}
				}
				5 = {
					if = {
						limit = { is_active_resolution = resolution_emperor_council_size_4 }
						cancel_resolution = resolution_emperor_council_size_4
					}
				}
			}
		}
		# 扰乱帝国治理行动的影响：8
		if = {
			limit = {
				event_target:global_event_country = {
					check_variable = { which = disrupt_imperial_governance_8_counter value > 0 }
				}
			}
			if = {
				limit = {
					event_target:global_event_country = {
						check_variable = { which = disrupt_imperial_governance_8_counter value > 0 }
					}
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_8_counter value = 1 } } }
					set_variable = { which = imperial_fleet_debuff_disrupt_8 value = 1.0 }
				}
				else_if = {
					limit = { event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_8_counter value = 2 } } }
					set_variable = { which = imperial_fleet_debuff_disrupt_8 value = 1.5 }
				}
				else_if = {
					limit = { event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_8_counter value = 3 } } }
					set_variable = { which = imperial_fleet_debuff_disrupt_8 value = 1.75 }
				}
				else_if = {
					limit = { event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_8_counter value = 4 } } }
					set_variable = { which = imperial_fleet_debuff_disrupt_8 value = 1.90 }
				}
				else = {
					set_variable = { which = imperial_fleet_debuff_disrupt_8 value = event_target:global_event_country.disrupt_imperial_governance_8_counter }
					multiply_variable = { which = imperial_fleet_debuff_disrupt_8 value = 0.1 }
					change_variable = { which = imperial_fleet_debuff_disrupt_8 value = 1.50 }
				}
			}
			else = {
				clear_variable = imperial_fleet_debuff_disrupt_8
			}
			add_modifier = {
				modifier = imperial_fleet_debuff_disrupt_8
				multiplier = imperial_fleet_debuff_disrupt_8
				days = 31
			}
		}
	}
}
country_event = { #201.皇帝每年执行[on_yearly_pulse_country]
	id = MECR.201
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
	}

	immediate = {
		# AI皇帝如果帝国军团容量不满，直接刷出来
		if = {
			limit = {
				is_active_resolution = resolution_emperor_imperial_legions
				is_ai = yes
			}
			if = {
				limit = {
					check_variable = {
						which = imperial_legion_soldier_count
						value < var_imperial_legion_cap
					}
				}
				capital_scope = {
					create_army = {
						owner = galactic_emperor
						type = "imperial_legion"
					}
				}
				change_variable = {
					which = "imperial_legion_soldier_count"
					value = 1
				}
			}
			if = {
				limit = {
					check_variable = {
						which = imperial_legion_soldier_count
						value < var_imperial_legion_cap
					}
				}
				capital_scope = {
					create_army = {
						owner = galactic_emperor
						type = "imperial_legion"
					}
				}
				change_variable = {
					which = "imperial_legion_soldier_count"
					value = 1
				}
			}
			if = {
				limit = {
					check_variable = {
						which = imperial_legion_soldier_count_mega_warform
						value < var_imperial_mega_warform_cap
					}
				}
				capital_scope = {
					create_army = {
						owner = galactic_emperor
						type = "imperial_mega_warform"
					}
				}
				change_variable = {
					which = "imperial_legion_soldier_count_mega_warform"
					value = 1
				}
			}
			if = {
				limit = {
					check_variable = {
						which = imperial_legion_soldier_count_warrior_drones
						value < var_imperial_warrior_drones_cap
					}
				}
				capital_scope = {
					create_army = {
						owner = galactic_emperor
						type = "imperial_warrior_drones"
					}
				}
				change_variable = {
					which = "imperial_legion_soldier_count_warrior_drones"
					value = 1
				}
			}
		}
		if = { #非帝国成员删除仆从军
			limit = { is_active_resolution = resolution_emperor_imperial_legions_extensive_recruitment }
			every_playable_country = {
				limit = {
					OR = {
						check_variable = { which = imperial_vassal_legion_count value > 0 }
						check_variable = { which = imperial_vassal_mega_warform_count value > 0 }
						check_variable = { which = imperial_vassal_warrior_drones_count value > 0 }
					}
				}
				if = {
					limit = { is_galactic_community_member = no }
					every_owned_army = {
						limit = {
							is_defensive_army = no
							OR = {
								army_type = imperial_vassal_legion
								army_type = imperial_vassal_mega_warform
								army_type = imperial_vassal_warrior_drones
							}
						}
						remove_army = yes
					}
					clear_variable = imperial_vassal_legion_count
					clear_variable = imperial_vassal_mega_warform_count
					clear_variable = imperial_vassal_warrior_drones_count
				}
			}
		}
		# 刷新特许状贸易港数量的统计
		if = {
			limit = {
				OR = {
					any_country = { has_modifier = imperial_charter }
					galactic_emperor = { has_modifier = imp_concession_ports_mult }
				}
			}
			set_variable = { which = imp_concession_ports value = 0 }
			every_country = {
				export_trigger_value_to_variable = {
					trigger = count_owned_planet
					parameters = {
						limit = {
							has_branch_office = yes
							has_holding = { holding = building_imperial_concession_port owner = planet.branch_office_owner }
						}
					}
					variable = imp_concession_ports_count
				}
				galactic_emperor = {
					change_variable = { which = imp_concession_ports value = prev.imp_concession_ports_count }
				}
			}
			country_event = { id = emperor.65 }
		}
		# 星炬燃烧人口
		if = {
			limit = { is_active_resolution = resolution_emperor_light_the_astronomican }
			event_target:the_location_of_the_astronomican = {
				if = {
					limit = { NOT = { is_same_value = galactic_emperor.capital_scope } }
					remove_deposit = d_the_astronomican
				}
			}
			galactic_emperor = {
				capital_scope = {
					if = {
						limit = { NOT = { has_deposit = d_the_astronomican }}
						add_deposit = d_the_astronomican
					}
					save_global_event_target_as = the_location_of_the_astronomican
					planet_event = {
						id = MECR.701
						days = 1
					}
				}
			}
		}
		# 为帝国中枢和帝国行省替换防御部队种类：双向调整
		if = {
			limit = {
				OR = {
					is_active_resolution = resolution_emperor_imperial_legions_extensive_recruitment
					any_playable_country = { has_country_flag = imperial_defense_force_deployed }
				}
			}
			every_playable_country = {
				country_event = {
					id = MECR.710
					days = 1
				}
			}
		}
	}
}


####################################################################################################
####################################################################################################
###################### 帝国治理局势 ############## Imperial Governance situation ####################
####################################################################################################
####################################################################################################

country_event = { #300.帝国治理计算[on_monthly_pulse_country]
	id = MECR.300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_galactic_emperor = yes
			has_country_flag = flag_situation_imperial_governance_running
		}
	}

	immediate = {
		if = { 
			limit = { is_galactic_emperor = no }
			random_owned_leader = {
				limit = {
					has_leader_flag = gestalt_imperial_prime_minister
					is_councilor = yes
					is_councilor_type = councilor_gestalt_general
				}
				kill_leader = { show_notification = yes }
			}
			every_situation = {
				limit = { is_situation_type = situation_imperial_governance }
				destroy_situation = this
			}
			remove_country_flag = flag_situation_imperial_governance_running
		}
		else = {
			# ai皇帝的治理协力
			if = {
				limit = { is_ai = yes }
				every_subject = {
					limit = {
						is_imperial_province = yes
					}
					if = {
						limit = {
							NOT = {
								any_owned_planet = {
									has_holding = { holding = holding_province_administrative_center owner = galactic_emperor }
								}
							}
						}
						capital_scope = {
							add_holding = { holding = holding_province_administrative_center owner = galactic_emperor }
						}
					}
				}
			}
			# 设置状态
			if = {
				limit = {
					NOT = { any_situation = { is_situation_type = situation_imperial_governance } }
				}
				start_situation = {
					type = situation_imperial_governance
					target = root
				}
				set_country_flag = flag_situation_imperial_governance_running
			}
			# 帝国治理能力：作弊
			remove_modifier = modifier_imperial_governance_capacity_cheat
			if = {
				limit = {
					NOT = {
						check_variable = { which = imperial_governance_capacity_cheat value = 0 }
					}
				}
				add_modifier = {
					modifier = modifier_imperial_governance_capacity_cheat
					mult = imperial_governance_capacity_cheat
					days = 30
				}
			}
			# 统计帝国治理能力
			set_variable = { which = imperial_governance_power value = modifier:imperial_governance_capacity }
				#来自ai加成
			if = {
				limit = { is_ai = yes }
				random_situation = {
					limit = { is_situation_type = situation_imperial_governance }
					root = { set_variable = { which = situation_imperial_governance_progress value = prev.trigger:situation_progress } }
				}
				multiply_variable = { which = situation_imperial_governance_progress value = 40 }
				change_variable = { which = imperial_governance_power value = situation_imperial_governance_progress }
			}
			if = {
				limit = { check_variable = { which = imperial_governance_power value < 0 } }
				set_variable = { which = imperial_governance_power value = 0 }
			}
			# 统计帝国治理需要
			#来自帝国机构
			set_variable = { which = institute_usage value = modifier:imperial_governance_usage }
			#来自帝国海军
			set_variable = { which = naval_usage value = modifier:imperial_governance_usage_naval }
			if = {
				limit = {
					galactic_emperor = {
						has_federation = yes
						federation = {
							OR = {
								has_federation_law = imperial_armada_conscription_low
								has_federation_law = imperial_armada_conscription_mid
								has_federation_law = imperial_armada_conscription_high
							}
						}
					}
				}
				set_variable = { which = naval_usage_ia_conscription value = naval_cap_ia_received }
				multiply_variable = { which = naval_usage_ia_conscription value = 0.1 }
				change_variable = { which = naval_usage value = naval_usage_ia_conscription }
			}
			#来自行省规模
			set_variable = { which = province_usage value = 0 }
			every_country = {
				limit = { is_imperial_province = yes }
				# 每一规模导致的治理需求
				set_variable = { which = imperial_governance_usage_per_provincial_sprawl value = 1 }
				change_variable = { which = imperial_governance_usage_per_provincial_sprawl value = modifier:imperial_governance_usage_per_provincial_sprawl }
				# 其他的治理需求修正
				set_variable = { which = prvc_province_usage_mult value = 1 }
				if = { # 谦逊友善外交态度：-15~25%
					limit = { galactic_emperor = { has_policy_flag = diplo_stance_humble_and_friendly } }
					if = {
						limit = { galactic_emperor = { has_active_tradition = tr_diplomacy_imperial_prestige } }
						change_variable = { which = prvc_province_usage_mult value = -0.15 }
					}
					else = {
						change_variable = { which = prvc_province_usage_mult value = -0.25 }
					}
				}
				# 治理需求
				if = {
					limit = { empire_size >= 1 } #规避加速行省特化修正影响
					export_trigger_value_to_variable = { variable = provincial_governance_usage trigger = empire_size }
					multiply_variable = { which = provincial_governance_usage value = imperial_governance_usage_per_provincial_sprawl }
					change_variable = { which = provincial_governance_usage value = 250 } #250基础花费
					multiply_variable = { which = provincial_governance_usage value = prvc_province_usage_mult }
					if = { # 特使：减半
						limit = {
							galactic_emperor = {
								OR = {
									is_ai = yes
									any_envoy = {
										envoy_location_country = {
											is_same_value = prevprevprev
										}
									}
								}
							}
						}
						multiply_variable = { which = provincial_governance_usage value = 0.5 }
					}
				}
				root = {
					change_variable = { which = province_usage value = prev.provincial_governance_usage }
				}
			}
			# 扰乱帝国治理行动的影响
			if = {
				limit = {
					event_target:global_event_country = {
						check_variable = { which = disrupt_imperial_governance_3_counter value > 0 }
					}
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_3_counter value = 1 } } }
					set_variable = { which = governance_usage_disrupt_3 value = 1.10 }
				}
				else_if = {
					limit = { event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_3_counter value = 2 } } }
					set_variable = { which = governance_usage_disrupt_3 value = 1.16 }
				}
				else_if = {
					limit = { event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_3_counter value = 3 } } }
					set_variable = { which = governance_usage_disrupt_3 value = 1.20 }
				}
				else_if = {
					limit = { event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_3_counter value = 4 } } }
					set_variable = { which = governance_usage_disrupt_3 value = 1.22 }
				}
				else = {
					set_variable = { which = governance_usage_disrupt_3 value = event_target:global_event_country.disrupt_imperial_governance_3_counter }
					multiply_variable = { which = governance_usage_disrupt_3 value = 0.01 }
					change_variable = { which = governance_usage_disrupt_3 value = 1.18 }
				}
				multiply_variable = { which = institute_usage value = governance_usage_disrupt_3 }
				multiply_variable = { which = naval_usage value = governance_usage_disrupt_3 }
				multiply_variable = { which = province_usage value = governance_usage_disrupt_3 }
			}
			else = {
				clear_variable = governance_usage_disrupt_3
			}
			#总计
			round_variable = imperial_governance_power
			round_variable = institute_usage
			round_variable = naval_usage
			round_variable = province_usage
			set_variable = { which = imperial_governance_needing value = 0 }
			change_variable = { which = imperial_governance_needing value = institute_usage }
			change_variable = { which = imperial_governance_needing value = naval_usage }
			change_variable = { which = imperial_governance_needing value = province_usage }
			if = {
				limit = { check_variable = { which = imperial_governance_needing value < 0 } }
				set_variable = { which = imperial_governance_needing value = 0 }
			}
			# 计算状态月度变化值
			set_variable = { which = province_gov_situation_monthly_progress value = imperial_governance_needing }
			divide_variable = { which = province_gov_situation_monthly_progress value = imperial_governance_power }
			if = {
				limit = { check_variable = { which = province_gov_situation_monthly_progress value > 2 } }
				set_variable = { which = province_gov_situation_monthly_progress value = 2 }
			}
			else_if = {
				limit = { check_variable = { which = province_gov_situation_monthly_progress value < 0.5 } }
				set_variable = { which = province_gov_situation_monthly_progress value = 0.5 }
			}
			# ai皇帝的治理协力
			if = {
				limit = {
					is_ai = yes
					check_variable = { which = province_gov_situation_monthly_progress value > 0.5 }
					resource_income_compare = { resource = unity value > 100 }
				}
				random_owned_planet = {
					limit = {
						NOT = { has_building = building_imperial_government }
						OR = {
							is_capital = yes
							has_unity_designation = yes
						}
						num_pops >= 30
					}
					if = {
						limit = { free_building_slots > 0 }
						add_building = building_imperial_government
					}
					else_if = {
						limit = {
							num_buildings = { type = any value < 12 }
							free_district_slots > 0
							NOT = { uses_district_set = habitat }
						}
						if = {
							limit = { root = { is_regular_empire = yes } }
							add_district = district_city
						}
						else_if = {
							limit = { root = { is_machine_empire = yes } }
							add_district = district_nexus
						}
						else_if = {
							limit = { root = { is_hive_empire = yes } }
							add_district = district_hive
						}
						add_building = building_imperial_government
					}
					else = {
						remove_last_built_building = yes
						add_building = building_imperial_government
					}
				}
			}
		}
	}
}
situation_event = { #301.帝国治理状态效果[situation_imperial_governance:on_monthly]
	id = MECR.301
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		hidden_effect = {
			export_trigger_value_to_variable = {
				trigger = situation_progress
				variable = situation_progress_var
			}
			# 阶段效果
			if = {
				limit = { current_stage = stage_ipg_solidary }
				# 消息
				if = { #↑
					limit = {
						OR = {
							has_global_flag = stage_ipg_authoritative
							has_global_flag = stage_ipg_orderly
							has_global_flag = stage_ipg_disorderly
							has_global_flag = stage_ipg_incontrollable
						}
					}
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						create_message = {
							type = MESSAGE_IMPERIAL_GOVERNANCE_IMPROVE
							localization = MESSAGE_IMPERIAL_GOVERNANCE_IMPROVE_DESC_SOLIDARY
							days = 6
							target = THIS
						}
					}
				}
				set_imperial_governance_modifier_solidary = yes
				set_imperial_governance_flag = { flag = solidary }
			}
			else_if = {
				limit = { current_stage = stage_ipg_authoritative }
				# 消息
				if = { #↑
					limit = {
						OR = {
							has_global_flag = stage_ipg_orderly
							has_global_flag = stage_ipg_disorderly
							has_global_flag = stage_ipg_incontrollable
						}
					}
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						create_message = {
							type = MESSAGE_IMPERIAL_GOVERNANCE_IMPROVE
							localization = MESSAGE_IMPERIAL_GOVERNANCE_IMPROVE_DESC_AUTHORITATIVE
							days = 6
							target = THIS
						}
					}
				}
				if = { #↓
					limit = {
						OR = {
							has_global_flag = stage_ipg_solidary
						}
					}
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						create_message = {
							type = MESSAGE_IMPERIAL_GOVERNANCE_DETERIORATE
							localization = MESSAGE_IMPERIAL_GOVERNANCE_DETERIORATE_DESC_AUTHORITATIVE
							days = 6
							target = THIS
						}
					}
				}
				set_imperial_governance_modifier = { modifier = authoritative }
				set_imperial_governance_flag = { flag = authoritative }
			}
			else_if = {
				limit = { current_stage = stage_ipg_orderly }
				# 消息
				if = { #↑
					limit = {
						OR = {
							has_global_flag = stage_ipg_disorderly
							has_global_flag = stage_ipg_incontrollable
						}
					}
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						create_message = {
							type = MESSAGE_IMPERIAL_GOVERNANCE_IMPROVE
							localization = MESSAGE_IMPERIAL_GOVERNANCE_IMPROVE_DESC_ORDERLY
							days = 6
							target = THIS
						}
					}
				}
				if = { #↓
					limit = {
						OR = {
							has_global_flag = stage_ipg_solidary
							has_global_flag = stage_ipg_authoritative
						}
					}
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						create_message = {
							type = MESSAGE_IMPERIAL_GOVERNANCE_DETERIORATE
							localization = MESSAGE_IMPERIAL_GOVERNANCE_DETERIORATE_DESC_ORDERLY
							days = 6
							target = THIS
						}
					}
				}
				set_imperial_governance_modifier = { modifier = orderly }
				set_imperial_governance_flag = { flag = orderly }
			}
			else_if = {
				limit = { current_stage = stage_ipg_disorderly }
				# 消息
				if = { #↑
					limit = {
						OR = {
							has_global_flag = stage_ipg_incontrollable
						}
					}
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						create_message = {
							type = MESSAGE_IMPERIAL_GOVERNANCE_IMPROVE
							localization = MESSAGE_IMPERIAL_GOVERNANCE_IMPROVE_DESC_DISORDERLY
							days = 6
							target = THIS
						}
					}
				}
				if = { #↓
					limit = {
						OR = {
							has_global_flag = stage_ipg_solidary
							has_global_flag = stage_ipg_authoritative
							has_global_flag = stage_ipg_orderly
						}
					}
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						create_message = {
							type = MESSAGE_IMPERIAL_GOVERNANCE_DETERIORATE
							localization = MESSAGE_IMPERIAL_GOVERNANCE_DETERIORATE_DESC_DISORDERLY
							days = 6
							target = THIS
						}
					}
				}
				set_imperial_governance_modifier = { modifier = disorderly }
				set_imperial_governance_flag = { flag = disorderly }
			}
			else_if = {
				limit = { current_stage = stage_ipg_incontrollable }
				# 消息
				if = { #↓
					limit = {
						OR = {
							has_global_flag = stage_ipg_solidary
							has_global_flag = stage_ipg_authoritative
							has_global_flag = stage_ipg_orderly
							has_global_flag = stage_ipg_disorderly
						}
					}
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						create_message = {
							type = MESSAGE_IMPERIAL_GOVERNANCE_DETERIORATE
							localization = MESSAGE_IMPERIAL_GOVERNANCE_DETERIORATE_DESC_INCONTROLLABLE
							days = 6
							target = THIS
						}
					}
				}
				set_imperial_governance_modifier = { modifier = incontrollable }
				set_imperial_governance_flag = { flag = incontrollable }
			}
			else = {
				reset_imperial_governance_modifier = yes
			}
			# 选项效果
			if = {
				limit = { current_situation_approach = approach_ipg_tolerant }
				owner = {
					if = {
						limit = {
							has_federation = yes
							federation = { has_federation_perk = imperium_federation_passive }
						}
						if = {
							limit = { has_country_flag = civil_war_leniency }
							federation = { add_federation_experience = -1.5 }
						}
						else = {
							federation = { add_federation_experience = -2 }
						}
					}
				}
			}
			else_if = {
				limit = { current_situation_approach = approach_ipg_strict }
				owner = {
					if = {
						limit = {
							has_federation = yes
							federation = { has_federation_perk = imperium_federation_passive }
						}
						federation = { add_federation_experience = 2 }
					}
				}
			}
		}
	}
}
country_event = { #302.帝国治理教程：导入[situation_imperial_governance:on_start]
	id = MECR.302
	title = "MECR.302.title"
	desc = {
		trigger = { is_gestalt = no }
		text = "MECR.302.desc"
	}
	desc = {
		trigger = { is_machine_empire = yes }
		text = "MECR.302.desc.machine"
	}
	desc = {
		trigger = { is_hive_empire = yes }
		text = "MECR.302.desc.hive"
	}
	is_advisor_event = yes
	is_triggered_only = yes
	auto_select = yes

	trigger = { is_ai = no }

	option = {
		name = "YES"
		hidden_effect = { country_event = { id = MECR.303 } }
	}
	option = {
		name = "NO"
		custom_tooltip = "MECR.302.no.tooltip"
		default_hide_option = yes
	}
	after = {
		if = {
			limit = { NOT = { has_global_flag = flag_mecr_situation_imperial_governance_tutorial_building_added } }
			capital_scope = {
				if = {
					limit = { NOT = { has_building = building_imperial_government } }
					if = {
						limit = { free_building_slots > 0 }
						add_building = building_imperial_government
						hidden_effect = { set_global_flag = flag_mecr_situation_imperial_governance_tutorial_building_added }
					}
					else = {
						tooltip = { add_building = building_imperial_government }
						custom_tooltip = "MECR.302.cant_add_building_imperial_government"
					}
				}
			}
		}
	}
}
country_event = { #303.帝国治理教程：能力
	id = MECR.303
	title = "MECR.303.title"
	desc = {
		trigger = { is_gestalt = no }
		text = "MECR.303.desc"
	}
	desc = {
		trigger = { is_machine_empire = yes }
		text = "MECR.303.desc.machine"
	}
	desc = {
		trigger = { is_hive_empire = yes }
		text = "MECR.303.desc.hive"
	}
	is_advisor_event = yes
	is_triggered_only = yes
	auto_select = yes

	trigger = { is_ai = no }

	option = {
		name = "next_tutorial"
		hidden_effect = { country_event = { id = MECR.304 } }
	}
	option = {
		name = "close_tutorial"
		custom_tooltip = "MECR.302.no.tooltip"
	}
}
country_event = { #304.帝国治理教程：需求
	id = MECR.304
	title = "MECR.304.title"
	desc = "MECR.304.desc"
	is_advisor_event = yes
	is_triggered_only = yes
	auto_select = yes

	trigger = { is_ai = no }

	option = {
		name = "next_tutorial"
		hidden_effect = { country_event = { id = MECR.305 } }
	}
	option = {
		name = "last_tutorial"
		hidden_effect = { country_event = { id = MECR.303 } }
	}
	option = {
		name = "close_tutorial"
		custom_tooltip = "MECR.302.no.tooltip"
	}
}
country_event = { #305.帝国治理教程：状态
	id = MECR.305
	title = "MECR.305.title"
	desc = "MECR.305.desc"
	is_advisor_event = yes
	is_triggered_only = yes
	auto_select = yes

	trigger = { is_ai = no }

	option = {
		name = "first_tutorial"
		hidden_effect = { country_event = { id = MECR.303 } }
	}
	option = {
		name = "last_tutorial"
		hidden_effect = { country_event = { id = MECR.304 } }
	}
	option = {
		name = "close_tutorial"
		custom_tooltip = "MECR.302.no.tooltip"
	}
}

country_event = { #310.帝国治理状态崩溃，皇帝事件(311.)[situation_imperial_governance:on_progress_complete]
	id = MECR.310
	title = "MECR.310.title"
	desc = {
		trigger = { is_gestalt = no }
		text = "MECR.310.desc"
	}
	desc = {
		trigger = { is_machine_empire = yes }
		text = "MECR.310.desc.machine"
	}
	desc = {
		trigger = { is_hive_empire = yes }
		text = "MECR.310.desc.hive"
	}
	picture = GFX_evt_civil_action
	show_sound = event_red_alert
	is_triggered_only = yes

	immediate = {
		# 设置显示用flag
		if = {
			limit = {
				OR = {
					is_active_resolution = resolution_emperor_imperial_academy_of_sciences
					is_active_resolution = resolution_emperor_imperial_department_of_engineering
					is_active_resolution = resolution_emperor_imperial_ministry_of_education
					is_active_resolution = resolution_emperor_imperial_ministry_of_defence
					is_active_resolution = resolution_emperor_ina
					is_active_resolution = resolution_emperor_gto
				}
			}
			set_timed_country_flag = {
				flag = flag_disband_all_disbandable_imperial_institutions
				days = 30
			}
		}
		if = {
			limit = { is_active_resolution = resolution_emperor_expand_ia }
			set_timed_country_flag = {
				flag = flag_reduce_imperial_armada_to_minimum
				days = 30
			}
		}
		if = {
			limit = {
				has_federation = yes
				federation = {
					has_federation_perk = imperium_federation_passive
					federation_experience > 820
				}
			}
			set_timed_country_flag = {
				flag = flag_imperium_federation_reduce_to_level_2
				days = 30
			}
		}
		if = {
			limit = {
				any_country = {
					is_exactly_imperial_province = yes
				}
			}
			set_timed_country_flag = {
				flag = flag_imperium_provinces_will_be_released
				days = 30
			}
		}
		# 废除所有部门
		this = {
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_academy_of_sciences }
				cancel_resolution = resolution_emperor_imperial_academy_of_sciences
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_department_of_engineering }
				cancel_resolution = resolution_emperor_imperial_department_of_engineering
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_ministry_of_education }
				cancel_resolution = resolution_emperor_imperial_ministry_of_education
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_ministry_of_defence }
				cancel_resolution = resolution_emperor_imperial_ministry_of_defence
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_ina }
				cancel_resolution = resolution_emperor_ina
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_gto }
				cancel_resolution = resolution_emperor_gto
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia_10 }
				cancel_resolution = resolution_emperor_expand_ia_10
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia_9 }
				cancel_resolution = resolution_emperor_expand_ia_9
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia_8 }
				cancel_resolution = resolution_emperor_expand_ia_8
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia_7 }
				cancel_resolution = resolution_emperor_expand_ia_7
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia_6 }
				cancel_resolution = resolution_emperor_expand_ia_6
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia_5 }
				cancel_resolution = resolution_emperor_expand_ia_5
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia_4 }
				cancel_resolution = resolution_emperor_expand_ia_4
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia_3 }
				cancel_resolution = resolution_emperor_expand_ia_3
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_expand_ia }
				cancel_resolution = resolution_emperor_expand_ia
			}
		}
		# 帝国联邦等级降低到3，帝国行省全部解放
		if = {
			limit = {
				has_federation = yes
				federation = {
					has_federation_perk = imperium_federation_passive
				}
			}
			federation = {
				every_country = {
					limit = { is_exactly_imperial_province = yes }
					set_subject_of = { who = none }
					country_event = { id = MECR.710 days = 1 } # 防御部队改变
					join_alliance = { who = galactic_emperor override_requirements = yes }
				}
				every_member = {
					every_federation_ally = {
						remove_opinion_modifier = { modifier = opinion_broke_federation who = prev }
					}
				}
				if = {
					limit = { federation_experience > 820 }
					set_variable = { which = fed_exp_change value = 820 }
					subtract_variable = { which = fed_exp_change value = trigger:federation_experience }
					add_federation_experience = fed_exp_change
					clear_variable = fed_exp_change
				}
				add_cohesion = 200
				add_cohesion = -50
				remove_modifier = federation_law_category_centralization_cooldown
				remove_modifier = federation_law_category_fleet_contribution_cooldown
				remove_modifier = federation_law_category_succession_type_cooldown
			}
		}
		else = {
			every_country = {
				limit = { is_exactly_imperial_province = yes }
				set_subject_of = { who = none }
				country_event = { id = MECR.710 days = 1 } # 防御部队改变
			}
		}
		# 重新启用状态
		every_situation = {
			limit = { is_situation_type = situation_imperial_governance }
			destroy_situation = this
		}
		start_situation = {
			type = situation_imperial_governance
			target = galactic_emperor
		}
		every_situation = {
			limit = { is_situation_type = situation_imperial_governance }
			add_situation_progress = 15
		}
		if = {
			limit = { NOT = { has_country_flag = flag_imperial_governance_reformed } }
			set_country_flag = flag_imperial_governance_reformed
			set_country_flag = flag_imperial_governance_reforming
		}
		set_imperial_governance_flag = { flag = authoritative }
		# 调整资源
		add_resource = {
			influence = -10000
		}
		#add_resource = {
		#	influence = 500
		#}
		# 重新统计
		country_event = {
			id = MECR.300
		}
		random_situation = {
			limit = {
				is_situation_type = situation_imperial_governance
			}
			situation_event = {
				id = MECR.301
			}
		}
		# 其他成员通知
		every_galcom_member = {
			limit = { is_galactic_emperor = no }
			country_event = {
				id = MECR.311
			}
		}
	}

	option = {
		name = "MAKE_IT_SO"
		if = {
			limit = { has_country_flag = flag_disband_all_disbandable_imperial_institutions }
			custom_tooltip = "disband_all_disbandable_imperial_institutions"
		}
		if = {
			limit = { has_country_flag = flag_reduce_imperial_armada_to_minimum }
			custom_tooltip = "reduce_imperial_armada_to_minimum"
		}
		if = {
			limit = { has_country_flag = flag_imperium_federation_reduce_to_level_2 }
			custom_tooltip = "imperium_federation_reduce_to_level_2"
		}
		if = {
			limit = { has_country_flag = flag_imperium_provinces_will_be_released }
			custom_tooltip = "imperium_provinces_will_be_released"
		}
		custom_tooltip = "set_influence_0"
		tooltip = {
			random_situation = {
				limit = { is_situation_type = situation_imperial_governance }
				add_situation_progress = -60
			}
		}
		if = {
			limit = { has_country_flag = flag_imperial_governance_reforming }
			custom_tooltip = "imperial_governance_capacity_add_600"
			hidden_effect = {
				remove_country_flag = flag_imperial_governance_reforming
			}
		}
	}
}
country_event = { #311.帝国治理状态崩溃，成员通知[310.]
	id = MECR.311
	title = "MECR.311.title"
	desc = "MECR.311.desc"
	picture = GFX_evt_civil_action
	show_sound = event_conversation
	is_triggered_only = yes

	option = {
		name = "OK"
		tooltip = {
		}
	}
}


####################################################################################################
####################################################################################################
################## 扰乱帝国治理行动 ########### Operation: Disrupt Imperial Governance ##############
####################################################################################################
####################################################################################################

espionage_operation_event = { #320.间谍行动：扰乱帝国治理：阶段1[operation_disrupt_imperial_governance:stage 1]
	id = MECR.320
	title = MECR.320.name
	desc = {
		text = MECR.320.1.desc
		trigger = {
			NAND = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
	}
	desc = {
		text = MECR.320.2.desc
		trigger = {
			has_federation = yes
			federation = { has_federation_perk = imperium_federation_passive }
		}
	}
	picture = GFX_evt_spy_network
	show_sound = event_spymaster
	espionage_operation = yes

	is_triggered_only = yes

	option = {
		name = ACKNOWLEDGED
	}
}
espionage_operation_event = { #321.间谍行动：扰乱帝国治理：阶段2(325.)[operation_disrupt_imperial_governance:stage 2]
	id = MECR.321
	title = MECR.321.name
	desc = MECR.321.desc
	picture = GFX_evt_spymaster
	show_sound = event_spymaster
	espionage_operation = yes

	is_triggered_only = yes

	immediate = {
		set_espionage_operation_progress_locked = yes
		while = {
			count = 3
			random_list = {
				100 = { #尝试协助抵抗组织
					modifier = { factor = 0 has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_1 }
					modifier = { factor = 100 owner = { check_variable = { which = disrupt_imperial_governance_alternative value = 1 } } }
					modifier = {
						factor = 0
						NOT = {
							any_galcom_member = {
								is_country_type = default
								is_galactic_emperor = no
								NOT = { is_same_value = root.owner }
								is_ai = yes
							}
						}
					}
					modifier = {
						factor = 0.1
						NOT = {
							any_galcom_member = {
								is_country_type = default
								is_galactic_emperor = no
								NOT = { is_same_value = root.owner }
								is_ai = yes
								NOT = { has_country_flag = operation_disrupt_imperial_governance_1_rise_uprising_chance }
							}
						}
					}
					set_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_1
				}
				100 = { #尝试传播反对思想
					modifier = { factor = 0 has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_2 }
					modifier = { factor = 100 owner = { check_variable = { which = disrupt_imperial_governance_alternative value = 2 } } }
					modifier = {
						factor = 0
						NOT = {
							any_galcom_member = {
								is_country_type = default
								is_gestalt = no
								is_galactic_emperor = no
								NOT = { is_same_value = root.owner }
							}
						}
					}
					modifier = {
						factor = 0.5
						event_target:global_event_country = {
							is_variable_set = disrupt_imperial_governance_2_counter
							check_variable = { which = disrupt_imperial_governance_2_counter value > 0 }
						}
					}
					set_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_2
				}
				100 = { #尝试扰乱帝国行政
					modifier = { factor = 0 has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_3 }
					modifier = { factor = 100 owner = { check_variable = { which = disrupt_imperial_governance_alternative value = 3 } } }
					modifier = {
						factor = 0.5
						event_target:global_event_country = {
							is_variable_set = disrupt_imperial_governance_3_counter
							check_variable = { which = disrupt_imperial_governance_3_counter value > 0 }
						}
					}
					set_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_3
				}
				100 = { #尝试败坏帝国总督
					modifier = { factor = 0 has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_4 }
					modifier = { factor = 100 owner = { check_variable = { which = disrupt_imperial_governance_alternative value = 4 } } }
					modifier = {
						factor = 0
						galactic_emperor = {
							NOT = {
								any_owned_leader = {
									leader_class = governor
									exists = sector
									NOT = { has_trait = leader_trait_arrested_development_2 }
								}
							}
						}
					}
					modifier = {
						factor = 0.5
						galactic_emperor = {
							count_owned_leader = {
								count > 2
								limit = {
									leader_class = governor
									has_trait = leader_trait_arrested_development_2
								}
							}
						}
					}
					set_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_4
				}
				100 = { #尝试渗透帝安局
					modifier = { factor = 0 has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_5 }
					modifier = { factor = 100 owner = { check_variable = { which = disrupt_imperial_governance_alternative value = 5 } } }
					modifier = { factor = 0 NOT = { is_active_resolution = resolution_emperor_isd} }
					modifier = { factor = 0 spy_network = { has_espionage_asset = asset_isd_officer } }
					modifier = { factor = 0 spy_network = { has_espionage_asset = asset_isd_hive_drone } }
					modifier = { factor = 0 spy_network = { has_espionage_asset = asset_isd_machine_drone } }
					set_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_5
				}
				100 = { #尝试窃取帝国仓储
					modifier = { factor = 0 has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_6 }
					modifier = { factor = 100 owner = { check_variable = { which = disrupt_imperial_governance_alternative value = 6 } } }
					set_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_6
				}
				100 = { #尝试挑拨行省关系
					modifier = { factor = 0 has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_7 }
					modifier = { factor = 100 owner = { check_variable = { which = disrupt_imperial_governance_alternative value = 7 } } }
					modifier = {
						factor = 0
						NOT = {
							any_galcom_member = {
								is_country_type = default
								is_gestalt = no
								is_galactic_emperor = no
								NOT = { is_same_value = root.owner }
							}
						}
					}
					set_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_7
				}
				100 = { #尝试干扰帝国海军
					modifier = { factor = 0 has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_8 }
					modifier = { factor = 100 owner = { check_variable = { which = disrupt_imperial_governance_alternative value = 8 } } }
					modifier = {
						factor = 0.5
						event_target:global_event_country = {
							is_variable_set = disrupt_imperial_governance_8_counter
							check_variable = { which = disrupt_imperial_governance_8_counter value > 0 }
						}
					}
					set_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_8
				}
			}
		}
	}

	option = {
		name = ACKNOWLEDGED
		owner = {
			country_event = {
				id = MECR.325
			}
		}
	}
}
espionage_operation_event = { #322.间谍行动：扰乱帝国治理：阶段3成功(323.)[operation_disrupt_imperial_governance:stage 3]
	id = MECR.322
	title = MECR.322.name
	# 尝试协助抵抗组织
	desc = {
		text = MECR.322.1.desc
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_1
			event_target:operation_disrupt_1_target_empire = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.322.1.h.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_1
			event_target:operation_disrupt_1_target_empire = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.322.1.m.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_1
			event_target:operation_disrupt_1_target_empire = { is_machine_empire = yes }
		}
	}
	# 尝试传播反对思想
	desc = {
		text = MECR.322.2.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_2
		}
	}
	# 尝试扰乱帝国行政
	desc = {
		text = MECR.322.3.desc
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_3
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.322.3.h.desc
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_3
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.322.3.m.desc
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_3
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试败坏帝国总督
	desc = {
		text = MECR.322.4.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_4
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.322.4.h.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_4
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.322.4.m.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_4
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试渗透帝安局
	desc = {
		text = MECR.322.5.desc
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_5
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.322.5.h.desc
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_5
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.322.5.m.desc
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_5
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试窃取帝国仓储
	desc = {
		text = MECR.322.6.desc
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_6 }
	}
	# 尝试挑拨行省关系
	desc = {
		text = MECR.322.7.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_7
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.322.7.h.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_7
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.322.7.m.desc 
		trigger = {
			has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_7
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试干扰帝国海军
	desc = {
		text = MECR.322.8.desc
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_8 }
	}
	# 任务目标丢失
	desc = {
		text = MECR.322.target_lost.desc
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_target_lost }
	}

	picture = { 
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_1 }
		picture = GFX_evt_gunrunning
	}
	picture = { 
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_2 }
		picture = GFX_evt_alien_propaganda
	}
	picture = {
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_3 }
		picture = GFX_evt_announcement
	}
	picture = { 
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_4 }
		picture = GFX_evt_throne_room
	}
	picture = {
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_5 }
		picture = GFX_evt_acquire_asset
	}
	picture = {
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_6 }
		picture = GFX_evt_treasure_pile
	}
	picture = { 
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_7 }
		picture = GFX_evt_civil_action
	}
	picture = {
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_8 }
		picture = GFX_evt_imperial_vassal
	}
	picture = { # 任务目标丢失
		trigger = { has_espionage_operation_flag = flag_operation_disrupt_imperial_governance_target_lost }
		picture = GFX_evt_galactic_empire
	}
	show_sound = event_default
	is_triggered_only = yes
	espionage_operation = yes

	immediate = {
		switch = {
			trigger = has_espionage_operation_flag
			flag_operation_disrupt_imperial_governance_1 = {
				random_galcom_member = {
					limit = {
						is_country_type = default
						is_galactic_emperor = no
						NOT = { is_same_value = root.owner }
						is_ai = yes
					}
					weights = {
						base = 100
						modifier = { factor = 0.50 is_part_of_galactic_council = yes }
						modifier = { factor = 0.25 opinion_level = { who = galactic_emperor level = excellent } }
						modifier = { factor = 0.50 opinion_level = { who = galactic_emperor level = good } }
						modifier = { factor = 2.00 opinion_level = { who = galactic_emperor level = poor } }
						modifier = { factor = 4.00 opinion_level = { who = galactic_emperor level = terrible } }
						modifier = { factor = 0.25 is_subject = yes overlord = { is_galactic_emperor = yes } is_imperial_province = no }
						modifier = { factor = 0.01 has_country_flag = operation_disrupt_imperial_governance_1_rise_uprising_chance }
					}
					save_event_target_as = operation_disrupt_1_target_empire
				}
				if = {
					limit = { NOT = { exists = event_target:operation_disrupt_1_target_empire } }
					remove_espionage_operation_flag = flag_operation_disrupt_imperial_governance_1
					set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_target_lost
					owner = { set_country_flag = flag_operation_disrupt_imperial_governance_target_lost }
				}
				else = {
					owner = { set_country_flag = flag_operation_disrupt_imperial_governance_1 }
				}
			}
			flag_operation_disrupt_imperial_governance_2 = {
				random_galcom_member = {
					limit = {
						is_country_type = default
						is_gestalt = no
						is_galactic_emperor = no
						NOT = { is_same_value = root.owner }
					}
					weights = {
						base = 100
						modifier = { factor = 0.50 is_part_of_galactic_council = yes }
						modifier = { factor = 0.25 opinion_level = { who = galactic_emperor level = excellent } }
						modifier = { factor = 0.50 opinion_level = { who = galactic_emperor level = good } }
						modifier = { factor = 2.00 opinion_level = { who = galactic_emperor level = poor } }
						modifier = { factor = 4.00 opinion_level = { who = galactic_emperor level = terrible } }
					}
					save_event_target_as = operation_disrupt_2_target_empire
				}
				if = {
					limit = { NOT = { exists = event_target:operation_disrupt_2_target_empire } }
					remove_espionage_operation_flag = flag_operation_disrupt_imperial_governance_2
					set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_target_lost
					owner = { set_country_flag = flag_operation_disrupt_imperial_governance_target_lost }
				}
				else = {
					owner = { set_country_flag = flag_operation_disrupt_imperial_governance_2 }
				}
			}
			flag_operation_disrupt_imperial_governance_3 = { owner = { set_country_flag = flag_operation_disrupt_imperial_governance_3 } }
			flag_operation_disrupt_imperial_governance_4 = {
				galactic_emperor = {
					random_owned_leader = {
						limit = {
							leader_class = governor
							exists = sector
							NOT = { has_trait = leader_trait_arrested_development_2 }
						}
						weights = {
							base = 1
							mult = trigger:has_skill
							max = 4
						}
						save_event_target_as = operation_disrupt_4_target_governor
						sector = {
							save_event_target_as = operation_disrupt_4_target_sector
						}
					}
				}
				if = {
					limit = { NOT = { exists = event_target:operation_disrupt_4_target_governor } }
					remove_espionage_operation_flag = flag_operation_disrupt_imperial_governance_4
					set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_target_lost
					owner = { set_country_flag = flag_operation_disrupt_imperial_governance_target_lost }
				}
				else = {
					owner = { set_country_flag = flag_operation_disrupt_imperial_governance_4 }
				}
			}
			flag_operation_disrupt_imperial_governance_5 = { owner = { set_country_flag = flag_operation_disrupt_imperial_governance_5 } }
			flag_operation_disrupt_imperial_governance_6 = { owner = { set_country_flag = flag_operation_disrupt_imperial_governance_6 } }
			flag_operation_disrupt_imperial_governance_7 = {
				random_galcom_member = {
					limit = {
						is_country_type = default
						is_gestalt = no
						is_galactic_emperor = no
						NOT = { is_same_value = root.owner }
					}
					weights = {
						base = 100
						modifier = { factor = 1.25 is_part_of_galactic_council = yes }
						modifier = { factor = 2.00 opinion_level = { who = galactic_emperor level = excellent } }
						modifier = { factor = 1.50 opinion_level = { who = galactic_emperor level = good } }
						modifier = { factor = 0.80 opinion_level = { who = galactic_emperor level = poor } }
						modifier = { factor = 0.50 opinion_level = { who = galactic_emperor level = terrible } }
					}
					save_event_target_as = operation_disrupt_7_target_empire
				}
				if = {
					limit = { NOT = { exists = event_target:operation_disrupt_7_target_empire } }
					remove_espionage_operation_flag = flag_operation_disrupt_imperial_governance_7
					set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_target_lost
					owner = { set_country_flag = flag_operation_disrupt_imperial_governance_target_lost }
				}
				else = {
					owner = { set_country_flag = flag_operation_disrupt_imperial_governance_7 }
				}
			}
			flag_operation_disrupt_imperial_governance_8 = { owner = { set_country_flag = flag_operation_disrupt_imperial_governance_8 } }
		}
		set_espionage_operation_progress_locked = yes
	}

	option = {
		name = LAUNCH_OPERATION
		owner = {
			country_event = { id = MECR.323 days = 7 random = 7 }
		}
	}

	after = {
		hidden_effect = {
			set_espionage_operation_progress_locked = no
		}
	}
}
country_event = { #323.间谍行动：扰乱帝国治理成功(324.330.331.332.)[322.]
	id = MECR.323
	title = MECR.323.name
	# 尝试协助抵抗组织
	desc = {
		text = MECR.323.1.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_1
			event_target:operation_disrupt_1_target_empire = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.323.1.h.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_1
			event_target:operation_disrupt_1_target_empire = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.323.1.m.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_1
			event_target:operation_disrupt_1_target_empire = { is_machine_empire = yes }
		}
	}
	# 尝试传播反对思想
	desc = {
		text = MECR.323.2.desc
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_2 }
	}
	# 尝试扰乱帝国行政
	desc = {
		text = MECR.323.3.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_3
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.323.3.h.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_3
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.323.3.m.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_3
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试败坏帝国总督
	desc = {
		text = MECR.323.4.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_4
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.323.4.h.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_4
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.323.4.m.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_4
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试渗透帝安局
	desc = {
		text = MECR.323.5.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_5
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.323.5.h.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_5
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.323.5.m.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_5
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试窃取帝国仓储
	desc = {
		text = MECR.323.6.desc
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_6 }
	}
	# 尝试挑拨行省关系
	desc = {
		text = MECR.323.7.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_7
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.323.7.h.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_7
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.323.7.m.desc
		trigger = {
			has_country_flag = flag_operation_disrupt_imperial_governance_7
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试干扰帝国海军
	desc = {
		text = MECR.323.8.desc
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_8 }
	}
	# 任务目标丢失
	desc = {
		text = MECR.323.target_lost.desc
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_target_lost }
	}

	picture = {
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_1 }
		picture = GFX_evt_gunrunning
	}
	picture = { 
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_2 }
		picture = GFX_evt_alien_propaganda
	}
	picture = {
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_3 }
		picture = GFX_evt_announcement
	}
	picture = { 
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_4 }
		picture = GFX_evt_throne_room
	}
	picture = {
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_5 }
		picture = GFX_evt_acquire_asset
	}
	picture = {
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_6 }
		picture = GFX_evt_treasure_pile
	}
	picture = { 
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_7 }
		picture = GFX_evt_civil_action
	}
	picture = {
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_8 }
		picture = GFX_evt_imperial_vassal
	}
	picture = { # 任务目标丢失
		trigger = { has_country_flag = flag_operation_disrupt_imperial_governance_target_lost }
		picture = GFX_evt_galactic_empire
	}
	show_sound = event_default
	is_triggered_only = yes

	immediate = {
		galactic_emperor = {
			random_situation = {
				limit = { is_situation_type = situation_imperial_governance }
				add_situation_progress = 15
			}
		}
		switch = {
			trigger = has_country_flag
			flag_operation_disrupt_imperial_governance_target_lost = { }
			flag_operation_disrupt_imperial_governance_1 = {
				event_target:operation_disrupt_1_target_empire = {
					remove_country_flag = operation_disrupt_imperial_governance_1_rise_uprising_chance
					set_timed_country_flag = {
						flag = operation_disrupt_imperial_governance_1_rise_uprising_chance
						days = 5400
					}
				}
			}
			flag_operation_disrupt_imperial_governance_2 = {
				event_target:global_event_country = {
					change_variable = { which = disrupt_imperial_governance_2_counter value = 1 }
					country_event = {
						id = MECR.330
						days = 5400
					}
				}
			}
			flag_operation_disrupt_imperial_governance_3 = {
				event_target:global_event_country = {
					change_variable = { which = disrupt_imperial_governance_3_counter value = 1 }
					country_event = {
						id = MECR.331
						days = 1800
					}
				}
			}
			flag_operation_disrupt_imperial_governance_4 = {
				event_target:operation_disrupt_4_target_governor = {
					if = {
						limit = { has_trait = leader_trait_arrested_development }
						remove_trait = leader_trait_arrested_development
					}
					add_trait = leader_trait_arrested_development_2
				}
			}
			flag_operation_disrupt_imperial_governance_5 = {
				if = {
					limit = { galactic_emperor = { is_regular_empire = yes } }
					from.spynetwork = { create_espionage_asset = { type = asset_isd_officer } }
				}
				else_if = {
					limit = { galactic_emperor = { is_hive_empire = yes } }
					from.spynetwork = { create_espionage_asset = { type = asset_isd_hive_drone } }
				}
				else_if = {
					limit = { galactic_emperor = { is_machine_empire = yes } }
					from.spynetwork = { create_espionage_asset = { type = asset_isd_machine_drone } }
				}
			}
			flag_operation_disrupt_imperial_governance_6 = {
				galactic_emperor = {
					# 1
					random_list = {
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_1_ value = 0.03 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_1_ value = 0.04 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_1_ value = 0.05 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_1_ value = 0.06 } }
					}
					random_list = {
						1 = {
							set_country_flag = resource_stolen_1_energy_@root
							export_resource_stockpile_to_variable = { resource = energy variable = resource_stolen_1_amount_@root }
							multiply_variable = { which = resource_stolen_1_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_1_ }
							add_resource = { energy = -1 mult = resource_stolen_1_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_1_minerals_@root
							export_resource_stockpile_to_variable = { resource = minerals variable = resource_stolen_1_amount_@root }
							multiply_variable = { which = resource_stolen_1_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_1_ }
							add_resource = { minerals = -1 mult = resource_stolen_1_amount_@root }
						}
						1 = {
							modifier = { set = 0 country_uses_food = no }
							set_country_flag = resource_stolen_1_food_@root
							export_resource_stockpile_to_variable = { resource = food variable = resource_stolen_1_amount_@root }
							multiply_variable = { which = resource_stolen_1_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_1_ }
							add_resource = { food = -1 mult = resource_stolen_1_amount_@root }
						}
						1 = {
							modifier = { set = 0 country_uses_consumer_goods = no }
							set_country_flag = resource_stolen_1_consumer_goods_@root
							export_resource_stockpile_to_variable = { resource = consumer_goods variable = resource_stolen_1_amount_@root }
							multiply_variable = { which = resource_stolen_1_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_1_ }
							add_resource = { consumer_goods = -1 mult = resource_stolen_1_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_1_alloys_@root
							export_resource_stockpile_to_variable = { resource = alloys variable = resource_stolen_1_amount_@root }
							multiply_variable = { which = resource_stolen_1_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_1_ }
							add_resource = { alloys = -1 mult = resource_stolen_1_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_1_volatile_motes_@root
							export_resource_stockpile_to_variable = { resource = volatile_motes variable = resource_stolen_1_amount_@root }
							multiply_variable = { which = resource_stolen_1_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_1_ }
							add_resource = { volatile_motes = -1 mult = resource_stolen_1_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_1_exotic_gases_@root
							export_resource_stockpile_to_variable = { resource = exotic_gases variable = resource_stolen_1_amount_@root }
							multiply_variable = { which = resource_stolen_1_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_1_ }
							add_resource = { exotic_gases = -1 mult = resource_stolen_1_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_1_rare_crystals_@root
							export_resource_stockpile_to_variable = { resource = rare_crystals variable = resource_stolen_1_amount_@root }
							multiply_variable = { which = resource_stolen_1_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_1_ }
							add_resource = { rare_crystals = -1 mult = resource_stolen_1_amount_@root }
						}
					}
					# 2
					random_list = {
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_2_ value = 0.03 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_2_ value = 0.04 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_2_ value = 0.05 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_2_ value = 0.06 } }
					}
					random_list = {
						1 = {
							set_country_flag = resource_stolen_2_energy_@root
							export_resource_stockpile_to_variable = { resource = energy variable = resource_stolen_2_amount_@root }
							multiply_variable = { which = resource_stolen_2_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_2_ }
							add_resource = { energy = -1 mult = resource_stolen_2_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_2_minerals_@root
							export_resource_stockpile_to_variable = { resource = minerals variable = resource_stolen_2_amount_@root }
							multiply_variable = { which = resource_stolen_2_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_2_ }
							add_resource = { minerals = -1 mult = resource_stolen_2_amount_@root }
						}
						1 = {
							modifier = { set = 0 country_uses_food = no }
							set_country_flag = resource_stolen_2_food_@root
							export_resource_stockpile_to_variable = { resource = food variable = resource_stolen_2_amount_@root }
							multiply_variable = { which = resource_stolen_2_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_2_ }
							add_resource = { food = -1 mult = resource_stolen_2_amount_@root }
						}
						1 = {
							modifier = { set = 0 country_uses_consumer_goods = no }
							set_country_flag = resource_stolen_2_consumer_goods_@root
							export_resource_stockpile_to_variable = { resource = consumer_goods variable = resource_stolen_2_amount_@root }
							multiply_variable = { which = resource_stolen_2_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_2_ }
							add_resource = { consumer_goods = -1 mult = resource_stolen_2_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_2_alloys_@root
							export_resource_stockpile_to_variable = { resource = alloys variable = resource_stolen_2_amount_@root }
							multiply_variable = { which = resource_stolen_2_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_2_ }
							add_resource = { alloys = -1 mult = resource_stolen_2_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_2_volatile_motes_@root
							export_resource_stockpile_to_variable = { resource = volatile_motes variable = resource_stolen_2_amount_@root }
							multiply_variable = { which = resource_stolen_2_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_2_ }
							add_resource = { volatile_motes = -1 mult = resource_stolen_2_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_2_exotic_gases_@root
							export_resource_stockpile_to_variable = { resource = exotic_gases variable = resource_stolen_2_amount_@root }
							multiply_variable = { which = resource_stolen_2_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_2_ }
							add_resource = { exotic_gases = -1 mult = resource_stolen_2_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_2_rare_crystals_@root
							export_resource_stockpile_to_variable = { resource = rare_crystals variable = resource_stolen_2_amount_@root }
							multiply_variable = { which = resource_stolen_2_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_2_ }
							add_resource = { rare_crystals = -1 mult = resource_stolen_2_amount_@root }
						}
					}
					# 3
					random_list = {
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_3_ value = 0.03 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_3_ value = 0.04 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_3_ value = 0.05 } }
						1 = { set_variable = { which = operation_disrupt_imperial_governance_6_percent_stolen_3_ value = 0.06 } }
					}
					random_list = {
						1 = {
							set_country_flag = resource_stolen_3_energy_@root
							export_resource_stockpile_to_variable = { resource = energy variable = resource_stolen_3_amount_@root }
							multiply_variable = { which = resource_stolen_3_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_3_ }
							add_resource = { energy = -1 mult = resource_stolen_3_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_3_minerals_@root
							export_resource_stockpile_to_variable = { resource = minerals variable = resource_stolen_3_amount_@root }
							multiply_variable = { which = resource_stolen_3_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_3_ }
							add_resource = { minerals = -1 mult = resource_stolen_3_amount_@root }
						}
						1 = {
							modifier = { set = 0 country_uses_food = no }
							set_country_flag = resource_stolen_3_food_@root
							export_resource_stockpile_to_variable = { resource = food variable = resource_stolen_3_amount_@root }
							multiply_variable = { which = resource_stolen_3_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_3_ }
							add_resource = { food = -1 mult = resource_stolen_3_amount_@root }
						}
						1 = {
							modifier = { set = 0 country_uses_consumer_goods = no }
							set_country_flag = resource_stolen_3_consumer_goods_@root
							export_resource_stockpile_to_variable = { resource = consumer_goods variable = resource_stolen_3_amount_@root }
							multiply_variable = { which = resource_stolen_3_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_3_ }
							add_resource = { consumer_goods = -1 mult = resource_stolen_3_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_3_alloys_@root
							export_resource_stockpile_to_variable = { resource = alloys variable = resource_stolen_3_amount_@root }
							multiply_variable = { which = resource_stolen_3_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_3_ }
							add_resource = { alloys = -1 mult = resource_stolen_3_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_3_volatile_motes_@root
							export_resource_stockpile_to_variable = { resource = volatile_motes variable = resource_stolen_3_amount_@root }
							multiply_variable = { which = resource_stolen_3_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_3_ }
							add_resource = { volatile_motes = -1 mult = resource_stolen_3_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_3_exotic_gases_@root
							export_resource_stockpile_to_variable = { resource = exotic_gases variable = resource_stolen_3_amount_@root }
							multiply_variable = { which = resource_stolen_3_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_3_ }
							add_resource = { exotic_gases = -1 mult = resource_stolen_3_amount_@root }
						}
						1 = {
							set_country_flag = resource_stolen_3_rare_crystals_@root
							export_resource_stockpile_to_variable = { resource = rare_crystals variable = resource_stolen_3_amount_@root }
							multiply_variable = { which = resource_stolen_3_amount_@root value = operation_disrupt_imperial_governance_6_percent_stolen_3_ }
							add_resource = { rare_crystals = -1 mult = resource_stolen_3_amount_@root }
						}
					}
				}
			}
			flag_operation_disrupt_imperial_governance_7 = {
				event_target:operation_disrupt_7_target_empire = {
					add_opinion_modifier = {
						who = galactic_emperor
						modifier = opinion_operation_disrupt_imperial_governance_7
					}
					add_modifier = {
						modifier = modifier_operation_disrupt_imperial_governance_7
						days = 1800
					}
				}
			}
			flag_operation_disrupt_imperial_governance_8 = {
				event_target:global_event_country = {
					change_variable = { which = disrupt_imperial_governance_8_counter value = 1 }
					country_event = {
						id = MECR.332
						days = 1800
					}
				}
			}
		}
	}

	option = {
		name = ACKNOWLEDGED
		tooltip = {
			galactic_emperor = {
				random_situation = {
					limit = { is_situation_type = situation_imperial_governance }
					add_situation_progress = 15
				}
			}
		}
		switch = {
			trigger = has_country_flag
			flag_operation_disrupt_imperial_governance_target_lost = { }
			flag_operation_disrupt_imperial_governance_1 = {
				custom_tooltip = "MECR.323.1.tooltip"
			}
			flag_operation_disrupt_imperial_governance_2 = {
				custom_tooltip = "MECR.323.2.tooltip"
			}
			flag_operation_disrupt_imperial_governance_3 = {
				custom_tooltip = "MECR.323.3.tooltip"
			}
			flag_operation_disrupt_imperial_governance_4 = {
				tooltip = {
					event_target:operation_disrupt_4_target_governor = {
						add_trait = leader_trait_arrested_development_2
					}
				}
			}
			flag_operation_disrupt_imperial_governance_5 = {
				tooltip = {
					if = {
						limit = { galactic_emperor = { is_regular_empire = yes } }
						from.spynetwork = { create_espionage_asset = { type = asset_isd_officer } }
					}
					else_if = {
						limit = { galactic_emperor = { is_hive_empire = yes } }
						from.spynetwork = { create_espionage_asset = { type = asset_isd_hive_drone } }
					}
					else_if = {
						limit = { galactic_emperor = { is_machine_empire = yes } }
						from.spynetwork = { create_espionage_asset = { type = asset_isd_machine_drone } }
					}
				}
			}
			flag_operation_disrupt_imperial_governance_6 = {
				custom_tooltip = "MECR.323.6.tooltip.a"
				if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_1_energy_@root } }
					add_resource = { energy = 1 mult = galactic_emperor.resource_stolen_1_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_1_minerals_@root } }
					add_resource = { minerals = 1 mult = galactic_emperor.resource_stolen_1_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_1_food_@root } }
					add_resource = { food = 1 mult = galactic_emperor.resource_stolen_1_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_1_consumer_goods_@root } }
					add_resource = { consumer_goods = 1 mult = galactic_emperor.resource_stolen_1_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_1_alloys_@root } }
					add_resource = { alloys = 1 mult = galactic_emperor.resource_stolen_1_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_1_volatile_motes_@root } }
					add_resource = { volatile_motes = 1 mult = galactic_emperor.resource_stolen_1_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_1_exotic_gases_@root } }
					add_resource = { exotic_gases = 1 mult = galactic_emperor.resource_stolen_1_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_1_rare_crystals_@root } }
					add_resource = { rare_crystals = 1 mult = galactic_emperor.resource_stolen_1_amount_@root }
				}
				if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_2_energy_@root } }
					add_resource = { energy = 1 mult = galactic_emperor.resource_stolen_2_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_2_minerals_@root } }
					add_resource = { minerals = 1 mult = galactic_emperor.resource_stolen_2_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_2_food_@root } }
					add_resource = { food = 1 mult = galactic_emperor.resource_stolen_2_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_2_consumer_goods_@root } }
					add_resource = { consumer_goods = 1 mult = galactic_emperor.resource_stolen_2_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_2_alloys_@root } }
					add_resource = { alloys = 1 mult = galactic_emperor.resource_stolen_2_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_2_volatile_motes_@root } }
					add_resource = { volatile_motes = 1 mult = galactic_emperor.resource_stolen_2_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_2_exotic_gases_@root } }
					add_resource = { exotic_gases = 1 mult = galactic_emperor.resource_stolen_2_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_2_rare_crystals_@root } }
					add_resource = { rare_crystals = 1 mult = galactic_emperor.resource_stolen_2_amount_@root }
				}
				if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_3_energy_@root } }
					add_resource = { energy = 1 mult = galactic_emperor.resource_stolen_3_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_3_minerals_@root } }
					add_resource = { minerals = 1 mult = galactic_emperor.resource_stolen_3_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_3_food_@root } }
					add_resource = { food = 1 mult = galactic_emperor.resource_stolen_3_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_3_consumer_goods_@root } }
					add_resource = { consumer_goods = 1 mult = galactic_emperor.resource_stolen_3_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_3_alloys_@root } }
					add_resource = { alloys = 1 mult = galactic_emperor.resource_stolen_3_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_3_volatile_motes_@root } }
					add_resource = { volatile_motes = 1 mult = galactic_emperor.resource_stolen_3_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_3_exotic_gases_@root } }
					add_resource = { exotic_gases = 1 mult = galactic_emperor.resource_stolen_3_amount_@root }
				}
				else_if = {
					limit = { galactic_emperor = { has_country_flag = resource_stolen_3_rare_crystals_@root } }
					add_resource = { rare_crystals = 1 mult = galactic_emperor.resource_stolen_3_amount_@root }
				}
				hidden_effect = {
					galactic_emperor = {
						remove_country_flag = resource_stolen_1_energy_@root
						remove_country_flag = resource_stolen_1_minerals_@root
						remove_country_flag = resource_stolen_1_food_@root
						remove_country_flag = resource_stolen_1_consumer_goods_@root
						remove_country_flag = resource_stolen_1_alloys_@root
						remove_country_flag = resource_stolen_1_volatile_motes_@root
						remove_country_flag = resource_stolen_1_exotic_gases_@root
						remove_country_flag = resource_stolen_1_rare_crystals_@root
						clear_variable = resource_stolen_1_amount_@root
						remove_country_flag = resource_stolen_2_energy_@root
						remove_country_flag = resource_stolen_2_minerals_@root
						remove_country_flag = resource_stolen_2_food_@root
						remove_country_flag = resource_stolen_2_consumer_goods_@root
						remove_country_flag = resource_stolen_2_alloys_@root
						remove_country_flag = resource_stolen_2_volatile_motes_@root
						remove_country_flag = resource_stolen_2_exotic_gases_@root
						remove_country_flag = resource_stolen_2_rare_crystals_@root
						clear_variable = resource_stolen_2_amount_@root
						remove_country_flag = resource_stolen_3_energy_@root
						remove_country_flag = resource_stolen_3_minerals_@root
						remove_country_flag = resource_stolen_3_food_@root
						remove_country_flag = resource_stolen_3_consumer_goods_@root
						remove_country_flag = resource_stolen_3_alloys_@root
						remove_country_flag = resource_stolen_3_volatile_motes_@root
						remove_country_flag = resource_stolen_3_exotic_gases_@root
						remove_country_flag = resource_stolen_3_rare_crystals_@root
						clear_variable = resource_stolen_3_amount_@root
					}
				}
				custom_tooltip = "MECR.323.6.tooltip.b"
				add_resource = { energy = -500 }
			}
			flag_operation_disrupt_imperial_governance_7 = {
				tooltip = {
					event_target:operation_disrupt_7_target_empire = {
						add_opinion_modifier = {
							who = galactic_emperor
							modifier = opinion_operation_disrupt_imperial_governance_7
						}
						add_modifier = {
							modifier = modifier_operation_disrupt_imperial_governance_7
							days = 1800
						}
					}
				}
			}
			flag_operation_disrupt_imperial_governance_8 = {
				custom_tooltip = "MECR.323.8.tooltip"
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						has_country_flag = flag_operation_disrupt_imperial_governance_2
						event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_2_counter value > 1 } }
					}
					AND = {
						has_country_flag = flag_operation_disrupt_imperial_governance_3
						event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_3_counter value > 1 } }
					}
					AND = {
						has_country_flag = flag_operation_disrupt_imperial_governance_8
						event_target:global_event_country = { check_variable = { which = disrupt_imperial_governance_8_counter value > 1 } }
					}
				}
			}
			custom_tooltip = "MECR.323.tooltip.action_effect_weakened"
		}
		from.spynetwork = {
			add_spy_network_level_on_success_effect = { VALUE = -15 }
		}
	}

	after = {
		hidden_effect = {
			destroy_espionage_operation = from
			galactic_emperor = { country_event = { id = MECR.324 } }
		}
	}
}
country_event = { #324.间谍行动：扰乱帝国治理：皇帝通知[323.]
	id = MECR.324
	title = MECR.324.name
	# 尝试协助抵抗组织
	desc = {
		text = MECR.324.1.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_1 }
			event_target:operation_disrupt_1_target_empire = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.324.1.h.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_1 }
			event_target:operation_disrupt_1_target_empire = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.324.1.m.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_1 }
			event_target:operation_disrupt_1_target_empire = { is_machine_empire = yes }
		}
	}
	# 尝试传播反对思想
	desc = {
		text = MECR.324.2.desc
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_2 } }
	}
	# 尝试扰乱帝国行政
	desc = {
		text = MECR.324.3.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_3 }
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.324.3.h.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_3 }
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.324.3.m.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_3 }
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试败坏帝国总督
	desc = {
		text = MECR.324.4.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_4 }
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.324.4.h.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_4 }
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.324.4.m.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_4 }
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试渗透帝安局
	desc = {
		text = MECR.324.5.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_5 }
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.324.5.h.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_5 }
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.324.5.m.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_5 }
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试窃取帝国仓储
	desc = {
		text = MECR.324.6.desc
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_6 } }
	}
	# 尝试挑拨行省关系
	desc = {
		text = MECR.324.7.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_7 }
			galactic_emperor = { is_regular_empire = yes }
		}
	}
	desc = {
		text = MECR.324.7.h.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_7 }
			galactic_emperor = { is_hive_empire = yes }
		}
	}
	desc = {
		text = MECR.324.7.m.desc
		trigger = {
			from = { has_country_flag = flag_operation_disrupt_imperial_governance_7 }
			galactic_emperor = { is_machine_empire = yes }
		}
	}
	# 尝试干扰帝国海军
	desc = {
		text = MECR.324.8.desc
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_8 } }
	}
	# 任务目标丢失
	desc = {
		text = MECR.324.target_lost.desc
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_target_lost } }
	}

	picture = { 
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_1 } }
		picture = GFX_evt_gunrunning
	}
	picture = { 
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_2 } }
		picture = GFX_evt_alien_propaganda
	}
	picture = {
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_3 } }
		picture = GFX_evt_announcement
	}
	picture = { 
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_4 } }
		picture = GFX_evt_throne_room
	}
	picture = {
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_5 } }
		picture = GFX_evt_acquire_asset
	}
	picture = {
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_6 } }
		picture = GFX_evt_treasure_pile
	}
	picture = { 
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_7 } }
		picture = GFX_evt_civil_action
	}
	picture = {
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_8 } }
		picture = GFX_evt_imperial_vassal
	}
	picture = { # 任务目标丢失
		trigger = { from = { has_country_flag = flag_operation_disrupt_imperial_governance_target_lost } }
		picture = GFX_evt_galactic_empire
	}
	show_sound = event_yellow_alert
	is_triggered_only = yes

	option = {
		name = MECR.324.a
		tooltip = {
			random_situation = {
				limit = { is_situation_type = situation_imperial_governance }
				add_situation_progress = 15
			}
		}
		custom_tooltip = "MECR.324.a.tooltip"
		hidden_effect = {
			from = {
				remove_country_flag = flag_operation_disrupt_imperial_governance_1
				remove_country_flag = flag_operation_disrupt_imperial_governance_2
				remove_country_flag = flag_operation_disrupt_imperial_governance_3
				remove_country_flag = flag_operation_disrupt_imperial_governance_4
				remove_country_flag = flag_operation_disrupt_imperial_governance_5
				remove_country_flag = flag_operation_disrupt_imperial_governance_6
				remove_country_flag = flag_operation_disrupt_imperial_governance_7
				remove_country_flag = flag_operation_disrupt_imperial_governance_8
				remove_country_flag = flag_operation_disrupt_imperial_governance_target_lost
			}
		}
	}
}
country_event = { #325.间谍行动：扰乱帝国治理：阶段2弹窗[321.]
	id = MECR.325
	title = MECR.321.name
	desc = MECR.321.desc
	picture = GFX_evt_spymaster
	show_sound = event_spymaster
	is_triggered_only = yes

	option = {
		name = MECR.321.option.1
		trigger = { from = { has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_1 } }
		hidden_effect = { from = { set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_1 } }
	}
	option = {
		name = MECR.321.option.2
		trigger = { from = { has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_2 } }
		hidden_effect = { from = { set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_2 } }
	}
	option = {
		name = MECR.321.option.3
		trigger = { from = { has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_3 } }
		hidden_effect = { from = { set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_3 } }
	}
	option = {
		name = MECR.321.option.4
		trigger = { from = { has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_4 } }
		hidden_effect = { from = { set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_4 } }
	}
	option = {
		name = MECR.321.option.5
		trigger = { from = { has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_5 } }
		hidden_effect = { from = { set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_5 } }
	}
	option = {
		name = MECR.321.option.6
		trigger = { from = { has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_6 } }
		hidden_effect = { from = { set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_6 } }
	}
	option = {
		name = MECR.321.option.7
		trigger = { from = { has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_7 } }
		hidden_effect = { from = { set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_7 } }
	}
	option = {
		name = MECR.321.option.8
		trigger = { from = { has_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_8 } }
		hidden_effect = { from = { set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_8 } }
	}
	after = {
		hidden_effect = {
			from = {
				remove_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_1
				remove_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_2
				remove_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_3
				remove_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_4
				remove_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_5
				remove_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_6
				remove_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_7
				remove_espionage_operation_flag = flag_disrupt_imperial_governance_alternative_8
				set_espionage_operation_flag = flag_operation_disrupt_imperial_governance_plan_set
				set_espionage_operation_progress_locked = no
			}
		}
	}
}

# 330.-332. 扰乱帝国治理行动后续变量处理[323.]
country_event = { #330.
	id = MECR.330
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		check_variable = { which = disrupt_imperial_governance_2_counter value > 0 }
	}

	immediate = {
		subtract_variable = { which = disrupt_imperial_governance_2_counter value = 1 }
	}
}
country_event = { #331.
	id = MECR.331
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		check_variable = { which = disrupt_imperial_governance_3_counter value > 0 }
	}

	immediate = {
		subtract_variable = { which = disrupt_imperial_governance_3_counter value = 1 }
	}
}
country_event = { #332.
	id = MECR.332
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		check_variable = { which = disrupt_imperial_governance_8_counter value > 0 }
	}

	immediate = {
		subtract_variable = { which = disrupt_imperial_governance_8_counter value = 1 }
	}
}

####################################################################################################
####################################################################################################
######################## 各种议案效果 ################### effects of resolutions ####################
####################################################################################################
####################################################################################################

country_event = { #400.援助提供经济情报[on_monthly_pulse_country]
	id = MECR.400
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_galactic_community_member = yes
		has_galactic_custodian = yes
		is_galactic_custodian = no
		is_active_resolution = resolution_custodian_assist_the_developing_countries
	}

	immediate = {
		if = {
			limit = { 
				relative_power = { who = galactic_custodian category = economy value <= inferior }
			}
			galactic_custodian = {
				add_intel_report = {
					category = economy
					level = 4
					days = 1080
					who = ROOT
				}
				add_intel_report = {
					category = government
					level = 4
					days = 1080
					who = ROOT
				}
			}
		}
		else = {
			galactic_custodian = {
				add_intel_report = {
					category = economy
					level = 3
					days = 1080
					who = ROOT
				}
				add_intel_report = {
					category = government
					level = 3
					days = 1080
					who = ROOT
				}
			}
		}
	}
}

# Five Year Plans
event = { #500.对各国进行统计(501.)[on_monthly_pulse]
	id = MECR.500
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_FYP_ongoing = yes
	}

	immediate = {
		every_country = {
			limit = { is_galactic_community_member = yes }
			country_event = {
				id = MECR.501
				days = 1
			}
		}
	}
}
country_event = { #501.五年计划进度统计(503.)
	id = MECR.501
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_community_member = yes
		any_FYP_ongoing = yes
	}

	immediate = {
		if = { #基建建设
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_infrastructure_construction }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 1 } } }
				set_variable = { which = FYP_task_kind value = 1 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
			}
			every_owned_planet = {
				limit = { is_under_colonization = no }
				if = {
					limit = { has_building_construction = yes }
					ROOT = { change_variable = { which = FYP_task_yes value = 1 } }
				}
				else = {
					ROOT = { change_variable = { which = FYP_task_no value = 1 } }
				}
			}
			set_variable = { which = FYP_task value = FYP_task_yes }
			change_variable = { which = FYP_task value = FYP_task_no }
			set_variable = { which = FYP_task_progress value = FYP_task_yes }
			divide_variable = { which = FYP_task_progress value = FYP_task }
			if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.05 } }
				set_variable = { which = FYP_task_grade value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.15 } }
				set_variable = { which = FYP_task_grade value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.25 } }
				set_variable = { which = FYP_task_grade value = 6 }
			}
			else = {
				set_variable = { which = FYP_task_grade value = 9 }
			}
		}
		if = { #科学研究
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_science_research }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 2 } } }
				set_variable = { which = FYP_task_kind value = 2 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
			}
			# 写在 MECR.502
			if = {
				limit = { check_variable = { which = FYP_task_yes value < 9 } }
				set_variable = { which = FYP_task_grade value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_yes value < 15 } }
				set_variable = { which = FYP_task_grade value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_yes value < 21 } }
				set_variable = { which = FYP_task_grade value = 6 }
			}
			else = {
				set_variable = { which = FYP_task_grade value = 9 }
			}
		}
		if = { #医疗保健
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_medical_care }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 3 } } }
				set_variable = { which = FYP_task_kind value = 3 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
			}
			every_owned_planet = {
				limit = { is_under_colonization = no }
				if = {
					limit = { free_amenities > 5 }
					ROOT = {
						change_variable = { which = FYP_task_yes value = 1 }
					}
				}
				else = {
					ROOT = {
						change_variable = { which = FYP_task_no value = 1 }
					}
				}
			}
			set_variable = { which = FYP_task value = FYP_task_yes }
			change_variable = { which = FYP_task value = FYP_task_no }
			set_variable = { which = FYP_task_progress value = FYP_task_yes }
			divide_variable = { which = FYP_task_progress value = FYP_task }
			if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.75 } }
				set_variable = { which = FYP_task_grade value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.9 } }
				set_variable = { which = FYP_task_grade value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.95 } }
				set_variable = { which = FYP_task_grade value = 6 }
			}
			else = {
				set_variable = { which = FYP_task_grade value = 9 }
			}
		}
		if = { #和谐外交
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_harmonious_diplomacy }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 4 } } }
				set_variable = { which = FYP_task_kind value = 4 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
			}
			if = {
				limit = {
					is_at_war = yes
					any_war = {
						any_attacker = { is_same_value = ROOT }
						is_justice_war = no
					}
				}
				change_variable = { which = FYP_task_no value = 7 }
			}
			else = {
				change_variable = { which = FYP_task_yes value = 7 }
			}
			if = {
				limit = {
					any_country = {
						ROOT = {
							is_improving_relations_with = PREV
						}
					}
				}
				change_variable = { which = FYP_task_yes value = 3 }
			}
			else = {
				change_variable = { which = FYP_task_no value = 3 }
			}
			set_variable = { which = FYP_task value = FYP_task_yes }
			change_variable = { which = FYP_task value = FYP_task_no }
			set_variable = { which = FYP_task_progress value = FYP_task_yes }
			divide_variable = { which = FYP_task_progress value = FYP_task }
			if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.4 } }
				set_variable = { which = FYP_task_grade value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.7 } }
				set_variable = { which = FYP_task_grade value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.9 } }
				set_variable = { which = FYP_task_grade value = 6 }
			}
			else = {
				set_variable = { which = FYP_task_grade value = 9 }
			}
		}
		if = { #共同富裕，随机延迟计算(503.)
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_shared_prosperity }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 5 } } }
				set_variable = { which = FYP_task_kind value = 5 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
				set_variable = { which = FYP_task_count value = 0 }
			}
			country_event = {
				id = MECR.503
				days = 1
				random = 3
			}
		}
	}
}
country_event = { #502.五年计划：科学研究（完成科研）[on_tech_increased]
	id = MECR.502
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_community_member = yes
		is_active_resolution = resolution_galactic_focus_five_year_plan_science_research
	}

	immediate = {
		change_variable = { which = FYP_task_yes value = 1 }
	}
}
country_event = { #503.五年计划：共同富裕（延迟计算）[501.][resolution]
	id = MECR.503
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_active_resolution = resolution_galactic_focus_five_year_plan_shared_prosperity
	}

	immediate = {
		# 计算各生活标准的人口
		if = { #非格式塔
			limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
			# lv1：乌托邦
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						#OR = {
						#	has_living_standard = { type = living_standard_organic_trophy }
							has_living_standard = { type = living_standard_utopian }
						#}
					}
				}
				variable = level_1_pops
			}
			# lv2：福利，同甘，颓废，化学
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						OR = {
							has_living_standard = { type = living_standard_shared_burden }
							has_living_standard = { type = living_standard_good }
							has_living_standard = { type = living_standard_decadent }
							has_living_standard = { type = living_standard_chemical_bliss }
						}
					}
				}
				variable = level_2_pops
			}
			# lv3：普通 #普通水平0分数，所以不要统计
			if = {
				limit = { always = no }
				export_trigger_value_to_variable = {
					trigger = count_owned_pop
					parameters = {
						limit = {
							OR = {
								has_living_standard = { type = living_standard_academic_privilege }
								has_living_standard = { type = living_standard_normal }
								#has_living_standard = { type = living_standard_hive_mind }
								has_living_standard = { type = living_standard_deassimilation }
								#has_living_standard = { type = living_standard_ego_assimilation }
								has_living_standard = { type = living_standard_tech_assimilation }
								has_living_standard = { type = living_standard_psi_assimilation }
								AND = { # 离群的工蜂和无人机
									has_living_standard = { type = living_standard_none }
									OR = {
										has_trait = trait_hive_mind
										has_trait = trait_machine_unit
									}
								}
								AND = { #mod妹抖
									has_trait = trait_machine_maid
									has_living_standard = { type = living_standard_servitude }
								}
							}
						}
					}
					variable = level_3_pops
				}
			}
			set_variable = { which = level_3_pops value = 0 }
			# lv4：阶层，贫困，侍仆，驱逐
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						OR = {
							has_living_standard = { type = living_standard_stratified }
							has_living_standard = { type = living_standard_subsistence }
							AND = {
								has_living_standard = { type = living_standard_servitude }
								NOT = { has_trait = trait_machine_maid } #mod妹抖
							}
							AND = {
								has_living_standard = { type = living_standard_none }
								OR = {
									has_purge_type = { type = purge_displacement }
									has_purge_type = { type = purge_necrophage }
								}
							}
						}
					}
				}
				variable = level_4_pops
			}
			# lv5：屠杀
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						has_living_standard = { type = living_standard_none }
						NOR = {
							has_trait = trait_hive_mind
							has_trait = trait_machine_unit
							has_purge_type = { type = purge_displacement }
							has_purge_type = { type = purge_necrophage }
						}
					}
				}
				variable = level_5_pops
			}
			# 额外：被奴役
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						is_enslaved = yes
					}
				}
				variable = enslaved_pops
			}
			# 额外：高幸福
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						happiness >= 0.9
					}
				}
				variable = happy_pops
			}
		}
		else = { #格式塔
			# lv1：手办
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						#OR = {
							has_living_standard = { type = living_standard_organic_trophy }
						#	has_living_standard = { type = living_standard_utopian }
						#}
					}
				}
				variable = level_1_pops
			}
			# lv2：无
			set_variable = { which = level_2_pops value = 0 }
			# lv3：普通 #普通水平0分数，所以不要统计
			if = {
				limit = { always = no }
				export_trigger_value_to_variable = {
					trigger = count_owned_pop
					parameters = {
						limit = {
							OR = {
								#has_living_standard = { type = living_standard_academic_privilege }
								#has_living_standard = { type = living_standard_normal }
								has_living_standard = { type = living_standard_hive_mind }
								#has_living_standard = { type = living_standard_deassimilation }
								has_living_standard = { type = living_standard_ego_assimilation }
								has_living_standard = { type = living_standard_tech_assimilation }
								#has_living_standard = { type = living_standard_psi_assimilation }
								AND = { # 离群的工蜂和无人机
									has_living_standard = { type = living_standard_none }
									OR = {
										has_trait = trait_hive_mind
										has_trait = trait_machine_unit
									}
								}
								#AND = { #mod妹抖
								#	has_trait = trait_machine_maid
								#	has_living_standard = { type = living_standard_servitude }
								#}
							}
						}
					}
					variable = level_3_pops
				}
			}
			set_variable = { which = level_3_pops value = 0 }
			# lv4：驱逐
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						#OR = {
							#has_living_standard = { type = living_standard_stratified }
							#has_living_standard = { type = living_standard_subsistence }
							#AND = {
							#	has_living_standard = { type = living_standard_servitude }
							#	NOT = { has_trait = trait_machine_maid } #mod妹抖
							#}
							#AND = {
								has_living_standard = { type = living_standard_none }
								OR = {
									has_purge_type = { type = purge_displacement }
									has_purge_type = { type = purge_necrophage }
								}
							#}
						#}
					}
				}
				variable = level_4_pops
			}
			# lv5：屠杀
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						has_living_standard = { type = living_standard_none }
						NOR = {
							has_trait = trait_hive_mind
							has_trait = trait_machine_unit
							has_purge_type = { type = purge_displacement }
							has_purge_type = { type = purge_necrophage }
						}
					}
				}
				variable = level_5_pops
			}
			# 额外：被奴役
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						is_enslaved = yes
					}
				}
				variable = enslaved_pops
			}
			# 额外：高幸福
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = {
					limit = {
						happiness >= 0.9
					}
				}
				variable = happy_pops
			}
		}

		#计算来自各标准人口的得分
		set_variable = { which = score_from_level_1_pops value = level_1_pops }
		set_variable = { which = score_from_level_2_pops value = level_2_pops }
		set_variable = { which = score_from_level_4_pops value = level_4_pops }
		set_variable = { which = score_from_level_5_pops value = level_5_pops }
		set_variable = { which = score_from_enslaved_pops value = enslaved_pops }
		set_variable = { which = score_from_happy_pops value = happy_pops }
		if = { #如果消费品短缺，空头支票将不会得到分数
			limit = { has_deficit = consumer_goods }
			set_variable = { which = score_from_level_1_pops value = 0 }
			set_variable = { which = score_from_level_2_pops value = 0 }
		}
			# 加分项
		multiply_variable = { which = score_from_level_1_pops value = 3 }
		multiply_variable = { which = score_from_level_2_pops value = 1 }
		multiply_variable = { which = score_from_happy_pops value = 0.5 }
		set_variable = { which = FYP_5_get_score value = score_from_level_1_pops }
		change_variable = { which = FYP_5_get_score value = score_from_level_2_pops }
		change_variable = { which = FYP_5_get_score value = score_from_happy_pops }
			# 扣分项
		multiply_variable = { which = score_from_level_4_pops value = 1 }
		multiply_variable = { which = score_from_level_5_pops value = 5 }
		multiply_variable = { which = score_from_enslaved_pops value = 1 }
		set_variable = { which = FYP_5_lost_score value = score_from_level_4_pops }
		change_variable = { which = FYP_5_lost_score value = score_from_level_5_pops }
		change_variable = { which = FYP_5_lost_score value = score_from_enslaved_pops }
			# 总分
		set_variable = { which = FYP_5_recent_score value = FYP_5_get_score }
		subtract_variable = { which = FYP_5_recent_score value = FYP_5_lost_score }

		# 计算人口数量，正在被同化的人口/格式塔子个体减半计算
		export_trigger_value_to_variable = { trigger = num_pops variable = FYP_5_recent_pops }
		export_trigger_value_to_variable = {
			trigger = count_owned_pop
			parameters = {
				limit = {
					OR = {
						has_trait = trait_hive_mind
						has_trait = trait_machine_unit
						has_citizenship_type = { type = citizenship_assimilation }
					}
				}
			}
			variable = gestalt_pops
		}
		multiply_variable = { which = gestalt_pops value = 0.5 }
		subtract_variable = { which = FYP_5_recent_pops value = gestalt_pops }

		# 计算平均每人口得分
		divide_variable = { which = FYP_5_recent_score value = FYP_5_recent_pops }

		# 得分修正项
		if = { # 非格式塔：贫富分化：平均得分和平均失分中较低的一项*0.5，从平均得分中扣除
			limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
			if = {
				limit = { check_variable = { which = FYP_5_get_score value < FYP_5_lost_score } }
				set_variable = { which = FYP_5_poverty_gap_score value = FYP_5_get_score }
			}
			else = {
				set_variable = { which = FYP_5_poverty_gap_score value = FYP_5_lost_score }
			}
			multiply_variable = { which = FYP_5_poverty_gap_score value = 0.5 }
			divide_variable = { which = FYP_5_poverty_gap_score value = FYP_5_recent_pops }
			subtract_variable = { which = FYP_5_recent_score value = FYP_5_poverty_gap_score }
		}
		else = { #格式塔：星球平均盈余舒适度*0.1，计入得分
			set_variable = { which = FYP_5_gestalt_planet_score value = 0 }
			every_owned_planet = {
				prev = {
					change_variable = {
						which = FYP_5_gestalt_planet_score
						value = prev.trigger:free_amenities
					}
				}
			}
			multiply_variable = { which = FYP_5_gestalt_planet_score value = 0.1 }
			export_trigger_value_to_variable = { trigger = count_owned_planet variable = FYP_5_recent_planets }
			divide_variable = { which = FYP_5_gestalt_planet_score value = FYP_5_recent_planets }
			change_variable = { which = FYP_5_recent_score value = FYP_5_gestalt_planet_score }
		}
		set_variable = { which = FYP_task_yes value = FYP_5_recent_score }

		# 计算历史平均评分
		multiply_variable = { which = FYP_task_progress value = FYP_task_count }
		change_variable = { which = FYP_task_progress value = FYP_task_yes }
		change_variable = { which = FYP_task_count value = 1 }
		divide_variable = { which = FYP_task_progress value = FYP_task_count }
		if = { # x < -2.5
			limit = { check_variable = { which = FYP_task_progress value < -2.5 } }
			set_variable = { which = FYP_task_grade value = 0 }
		}
		else_if = { # -2.5 <= x < -1
			limit = { check_variable = { which = FYP_task_progress value < -1 } }
			set_variable = { which = FYP_task_grade value = 1 }
		}
		else_if = { # -1 <= x < 1
			limit = { check_variable = { which = FYP_task_progress value < 1 } }
			set_variable = { which = FYP_task_grade value = 3 }
		}
		else_if = { # 1 <= x < 2.5
			limit = { check_variable = { which = FYP_task_progress value < 2.5 } }
			set_variable = { which = FYP_task_grade value = 6 }
		}
		else = { # 2.5 < x
			set_variable = { which = FYP_task_grade value = 9 }
		}
	}
}


planet_event = { #701.星炬燃烧人口
	id = MECR.701
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				any_owned_pop = {
					has_trait = trait_psionic
				}
			}
			random_owned_pop = {
				limit = {
					has_trait = trait_psionic
				}
				kill_pop = yes
			}
		}
		else_if = {
			limit = {
				owner = {
					any_owned_pop = {
						has_trait = trait_psionic
					}
				}
			}
			owner = {
				random_owned_pop = {
					limit = {
						has_trait = trait_psionic
					}
					kill_pop = yes
				}
			}
		}
		else = {
			random_owned_pop = {
				kill_pop = yes
			}
		}
		create_message = {
			type = MESSAGE_TYPE_ASTRONOMICAN
			localization = "MESSAGE_TYPE_ASTRONOMICAN_DESC"
			days = 30
			target = this
		}
	}
}

country_event = { #705.通过裁减或扩充政府机构：如果两个都存在，两个都移除[210.fedperk:imperium_provinces.]
	id = MECR.705
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			last_resolution_changed = resolution_emperor_reduce_government_agencies
			last_resolution_changed = resolution_emperor_expand_government_agencies
		}
	}

	immediate = {
		if = {
			limit = {
				is_active_resolution = resolution_emperor_reduce_government_agencies
				is_active_resolution = resolution_emperor_expand_government_agencies
			}
			cancel_resolution = resolution_emperor_reduce_government_agencies
			cancel_resolution = resolution_emperor_expand_government_agencies
		}
	}
}

country_event = { #710.帝国军团扩大征募：为帝国中枢和帝国行省替换防御部队种类：双向调整[210.fedperk:imperium_provinces.]
	id = MECR.710
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_active_resolution = resolution_emperor_imperial_legions_extensive_recruitment }
			if = {
				limit = {
					OR = {
						is_galactic_emperor = yes
						is_imperial_province = yes
					}
					NOT = {
						has_country_flag = imperial_defense_force_deployed
					}
				}
				every_owned_army = {
					limit = { is_defensive_army = yes }
					switch = {
						trigger = army_type
						defense_army = { modify_army = { type = imperial_defense_army } }
						undead_defense_army = { modify_army = { type = imperial_undead_defense_army } }
						robotic_defense_army = { modify_army = { type = imperial_robotic_defense_army } }
						machine_defense = { modify_army = { type = imperial_machine_defense } }
						offspring_defense = { modify_army = { type = imperial_offspring_defense } }
					}
				}
				set_country_flag = imperial_defense_force_deployed
			}
			else_if = {
				limit = {
					NOR = {
						is_galactic_emperor = yes
						is_imperial_province = yes
					}
					has_country_flag = imperial_defense_force_deployed
				}
				every_owned_army = {
					limit = { is_defensive_army = yes }
					switch = {
						trigger = army_type
						imperial_defense_army = { modify_army = { type = defense_army } }
						imperial_undead_defense_army = { modify_army = { type = undead_defense_army } }
						imperial_robotic_defense_army = { modify_army = { type = robotic_defense_army } }
						imperial_machine_defense = { modify_army = { type = machine_defense } }
						imperial_offspring_defense = { modify_army = { type = offspring_defense } }
					}
				}
				remove_country_flag = imperial_defense_force_deployed
			}
		}
		else_if = {
			limit = {
				has_country_flag = imperial_defense_force_deployed
			}
			every_owned_army = {
				limit = { is_defensive_army = yes }
				switch = {
					trigger = army_type
					imperial_defense_army = { modify_army = { type = defense_army } }
					imperial_undead_defense_army = { modify_army = { type = undead_defense_army } }
					imperial_robotic_defense_army = { modify_army = { type = robotic_defense_army } }
					imperial_machine_defense = { modify_army = { type = machine_defense } }
					imperial_offspring_defense = { modify_army = { type = offspring_defense } }
				}
			}
			remove_country_flag = imperial_defense_force_deployed
		}
	}
}



country_event = { #999.打开帝国设置窗口[resolution_galactic_focus_open_imperial_setting_menu]
	id = MECR.999
	title = "MECR.999.title"
	desc = "MECR.999.desc"
	picture = GFX_evt_galactic_empire
	show_sound = event_administrative_work
	is_triggered_only = yes
	trigger = { is_ai = no }
	abort_trigger = { is_ai = yes }

	#打开帝国治理教程
	option = {
		name = "MECR.999.watch_tutorial"
		country_event = {
			id = MECR.302
		}
		hidden_effect = {
			set_global_flag = close_999
		}
	}

	#打开/关闭帝国联邦降频运算
	option = {
		name = "MECR.999.frequency_reduction"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = { always = no }
	}
	option = {
		name = "MECR.999.frequency_reduction_on"
		custom_tooltip = "MECR.999.frequency_reduction_on.tooltip"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = { NOT = { has_global_flag = flag_MECR_frequency_reduction } }
		hidden_effect = { set_global_flag = flag_MECR_frequency_reduction }
	}
	option = {
		name = "MECR.999.frequency_reduction_off"
		custom_tooltip = "MECR.999.frequency_reduction_off.tooltip"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = { has_global_flag = flag_MECR_frequency_reduction }
		hidden_effect = {
			remove_global_flag = flag_MECR_frequency_reduction
			remove_global_flag = flag_MECR_frequency_reduction_CD
		}
	}
	#打开/关闭帝国银行降频运算
	option = {
		name = "MECR.999.ib_frequency_reduction"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = { always = no }
	}
	option = {
		name = "MECR.999.ib_frequency_reduction_on"
		custom_tooltip = "MECR.999.ib_frequency_reduction_on.tooltip"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = {
			federation = {
				has_federation_law = imperial_bank_control
			}
			NOT = { has_global_flag = flag_MECR_ib_frequency_reduction }
		}
		hidden_effect = { set_global_flag = flag_MECR_ib_frequency_reduction }
	}
	option = {
		name = "MECR.999.ib_frequency_reduction_off"
		custom_tooltip = "MECR.999.ib_frequency_reduction_off.tooltip"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = {
			federation = {
				has_federation_law = imperial_bank_control
			}
			has_global_flag = flag_MECR_ib_frequency_reduction
		}
		hidden_effect = {
			remove_global_flag = flag_MECR_ib_frequency_reduction
			remove_global_flag = flag_MECR_ib_frequency_reduction_CD
		}
	}
	#打开/关闭帝国海军征召降频运算
	option = {
		name = "MECR.999.ia_frequency_reduction"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = { always = no }
	}
	option = {
		name = "MECR.999.ia_frequency_reduction_on"
		custom_tooltip = "MECR.999.ia_frequency_reduction_on.tooltip"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = {
			federation = {
				OR = {
					has_federation_law = imperial_armada_conscription_low
					has_federation_law = imperial_armada_conscription_mid
					has_federation_law = imperial_armada_conscription_high
				}
			}
			NOT = { has_global_flag = flag_MECR_ia_frequency_reduction }
		}
		hidden_effect = { set_global_flag = flag_MECR_ia_frequency_reduction }
	}
	option = {
		name = "MECR.999.ia_frequency_reduction_off"
		custom_tooltip = "MECR.999.ia_frequency_reduction_off.tooltip"
		trigger = {
			galactic_emperor = {
				has_federation = yes
				federation = { has_federation_perk = imperium_federation_passive }
			}
		}
		allow = {
			federation = {
				OR = {
					has_federation_law = imperial_armada_conscription_low
					has_federation_law = imperial_armada_conscription_mid
					has_federation_law = imperial_armada_conscription_high
				}
			}
			has_global_flag = flag_MECR_ia_frequency_reduction
		}
		hidden_effect = {
			remove_global_flag = flag_MECR_ia_frequency_reduction
		}
	}


	#调整帝国联邦整合速度
	option = {
		name = "MECR.999.integration_speed"
		custom_tooltip = "MECR.999.integration_speed.tooltip"
		trigger = { has_global_flag = imperial_unification_start }
		allow = { always = no }
	}
	option = {
		name = "MECR.999.integration_speed_normal"
		custom_tooltip = "MECR.999.integration_speed_normal.tooltip"
		trigger = { has_global_flag = imperial_unification_start }
		allow = {
			OR = {
				has_global_flag = imperium_integration_speed_slow
				has_global_flag = imperium_integration_speed_very_slow
			}
		}
		hidden_effect = {
			remove_global_flag = imperium_integration_speed_slow
			remove_global_flag = imperium_integration_speed_very_slow
		}
	}
	option = {
		name = "MECR.999.integration_speed_slow"
		custom_tooltip = "MECR.999.integration_speed_slow.tooltip"
		trigger = { has_global_flag = imperial_unification_start }
		allow = {
			NOT = {
				has_global_flag = imperium_integration_speed_slow
			}
		}
		hidden_effect = {
			remove_global_flag = imperium_integration_speed_very_slow
			set_global_flag = imperium_integration_speed_slow
		}
	}
	option = {
		name = "MECR.999.integration_speed_very_slow"
		custom_tooltip = "MECR.999.integration_speed_very_slow.tooltip"
		trigger = { has_global_flag = imperial_unification_start }
		allow = {
			NOT = {
				has_global_flag = imperium_integration_speed_very_slow
			}
		}
		hidden_effect = {
			remove_global_flag = imperium_integration_speed_slow
			set_global_flag = imperium_integration_speed_very_slow
		}
	}
	
	option = {
		name = "MECR.999.exit"
		default_hide_option = yes
		hidden_effect = { set_global_flag = close_999 }
	}
	after = { #改变设置后重新打开此窗口
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = close_999 } }
				country_event = { id = MECR.999 }
			}
			else = {
				remove_global_flag = close_999
			}
		}
	}
}


####################################################################################################
####################################################################################################
###################### 帝国联邦 ######################## Imperial Federation ########################
####################################################################################################
####################################################################################################

country_event = { #1000.帝国联邦建立(1002.)
	id = MECR.1000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_playable_country = { #停战
			limit = { is_galactic_community_member = yes }
			every_war = {
				limit = {
					any_attacker = { is_galactic_community_member = yes }
					any_defender = { is_galactic_community_member = yes }
				}
				every_war_participant = {
					limit = { is_galactic_community_member = yes }
					prev = { remove_war_participant = prev }
				}
			}
		}
		random_playable_country = { #添加第一个国家
			limit = {
				is_galactic_community_member = yes
				is_galactic_emperor = no
			}
			join_alliance = {
				who = root
				name = "NAME_imperium_federation"
				override_requirements = yes
			}
		}
		every_playable_country = { #添加剩下的国家
			limit = { is_galactic_community_member = yes }
			join_alliance = { who = root override_requirements = yes }
		}
		federation = { #激活基础特质，防止附庸加不进来
			set_federation_type = imperium_federation
			set_federation_leader = root
		}
		every_playable_country = { #再加一次防止疏漏
			limit = {
				is_galactic_community_member = yes
				NOT = { is_in_federation_with = root }
			}
			join_alliance = { who = root override_requirements = yes }
		}
		federation = { #联邦编辑
			set_federation_type = imperium_federation
			set_federation_leader = root
			set_name = "NAME_imperium_federation"

			set_federation_flag = special_federation
			set_federation_flag = enable_federation_cooldowns
			#save_global_event_target_as = ET_imperium_federation

			save_event_target_as = this_imperium_federation
			# 帝国整合
			set_federation_law = centralization_imperium_low
			# 帝国法律
			set_federation_law = imperial_armada_conscription_none
			#set_federation_law = ia_service_exemption_prohibit
			set_federation_law = free_migration_no_imperium
			set_federation_law = imperium_ai_policy_non_intervention
			set_federation_law = imperium_slavery_policy_non_intervention
			# 帝国机构
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_bank }
				set_federation_law = imperial_bank_supervision
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_isd }
				set_federation_law = isd_political_police
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_academy_of_sciences }
				set_federation_law = imperial_academy_of_sciences_talent_concentration
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_department_of_engineering }
				set_federation_law = imperial_department_of_engineering_standardized_construction
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_ministry_of_education }
				set_federation_law = imperial_ministry_of_education_science_education_reforming
			}
			
			add_cohesion = -200
			add_cohesion = trigger:imperial_authority
			
		}
		every_country = { #通知
			country_event = {
				id = MECR.1002
			}
		}
	}
}
country_event = { #1001.40年后如果皇帝不是帝国联邦领袖了，设为帝国联邦领袖(已经弃用，由1004.代替)[1000.1001.]
	id = MECR.1001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
		has_federation = yes
		federation = {
			has_federation_perk = imperium_federation_passive
			is_same_value = event_target:this_imperium_federation
		}
	}

	immediate = {
		federation = {
			set_federation_leader = root
		}
	}
}
country_event = { #1002.帝国联邦建立通知[1000.]
	id = MECR.1002
	title = "MECR.1002.title"
	desc = {
		trigger = { is_galactic_emperor = yes }
		text = "MECR.1002.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
		}
		text = "MECR.1002.desc.b"
	}
	desc = {
		trigger = { is_galactic_community_member = no }
		text = "MECR.1002.desc.c"
	}
	picture = GFX_evt_coronation
	show_sound = event_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.1002.option.a"
		trigger = {
			is_galactic_emperor = yes
		}
	}
	option = {
		name = "MECR.1002.option.b"
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
		}
	}
	option = {
		name = "MECR.1002.option.c"
		trigger = {
			is_galactic_community_member = no
		}
		add_casus_belli = {
			type = cb_end_threat_renegade_containment
			who = galactic_emperor
			days = -1
		}
	}
}
country_event = { #1003.帝国联邦升级通知[集权度提升法律.]
	id = MECR.1003
	title = "MECR.1003.title"
	desc = "MECR.1003.desc"
	picture = GFX_evt_galactic_empire
	show_sound = event_yellow_alert
	is_triggered_only = yes

	option = {
		name = "DISCONCERTING"
		add_resource = {
			influence = 200
		}
	}
}
country_event = { #1004.帝国联邦/银河邦联重选举后设置皇帝/监管人为领袖[on_federation_new_leader]
	id = MECR.1004
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_federation = yes
		federation = {
			OR = {
				has_federation_perk = imperium_federation_passive
				AND = {
					has_federation_perk = galactic_confederation_passive
					has_federation_law = succession_type_custodian_confederation
				}
			}
		}
	}

	immediate = {
		federation = {
			if = {
				limit = { has_federation_perk = imperium_federation_passive }
				if = {
					limit = { has_galactic_emperor = yes }
					set_federation_leader = galactic_emperor
				}
				else = {
					set_federation_type = default_federation
				}
			}
			else = {
				if = {
					limit = { has_galactic_custodian = yes }
					set_federation_leader = galactic_custodian
				}
				else = {
					set_federation_law = succession_type_rotation_confederation
				}
			}
		}
	}
}

country_event = { #1010.帝国联邦每月(1011.1020.1030.1040.1050.1053.1060.4061.1070.1100.)[on_monthly_pulse_country]
	id = MECR.1010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
		is_active_resolution = resolution_emperor_the_step_towards_a_united_galaxy
	}

	immediate = {
		if = { #帝国权威归零，帝国联邦直接爆炸
			limit = {
				exists = federation 
				federation = { has_federation_perk = imperium_federation_passive }
				imperial_authority = 0
			}
			federation = {
				every_member = {
					leave_alliance = {
						override_requirements = yes
					}
				}
			}
			cancel_resolution = resolution_emperor_imperial_unification
			cancel_resolution = resolution_emperor_the_step_towards_a_united_galaxy
		}
		#【【【总目录】】】
		if = {
			limit = {
				exists = federation 
				federation = { has_federation_perk = imperium_federation_passive }
			}
			federation = { #计算帝国机构总等级
				if = {
					limit = { has_federation_law = centralization_imperium_low }
					set_variable = { which = imperial_institutions_upgrades_support value = @imperial_institutions_num_1 }
				}
				else_if = {
					limit = { has_federation_law = centralization_imperium_mid }
					set_variable = { which = imperial_institutions_upgrades_support value = @imperial_institutions_num_2 }
				}
				else_if = {
					limit = { has_federation_law = centralization_imperium_high }
					set_variable = { which = imperial_institutions_upgrades_support value = @imperial_institutions_num_3 }
				}
				else_if = {
					limit = { has_federation_law = centralization_imperium_max }
					set_variable = { which = imperial_institutions_upgrades_support value = @imperial_institutions_num_4 }
				}
				else_if = {
					limit = { has_federation_law = centralization_imperium_unified_imperium }
					set_variable = { which = imperial_institutions_upgrades_support value = @imperial_institutions_num_5 }
				}
				if = {
					limit = { has_federation_perk = imperium_elite_bureaucrats }
					change_variable = { which = imperial_institutions_upgrades_support value = @imperial_institutions_num_add }
				}
				#export_modifier_to_variable = {
				#	modifier = federation_total_level_of_core_institutions_capacity_add
				#	variable = imperial_institutions_upgrades_support
				#}
			}
			# 所有是帝国成员的国家添加进来，不是帝国成员的国家移除出去
			every_playable_country = {
				limit = {
					is_galactic_emperor = no
					OR = {
						is_galactic_community_member = yes
						AND = {
							is_subject = yes
							overlord = { is_galactic_community_member = yes }
						}
					}
					NOT = { is_in_federation_with = galactic_emperor }
				}
				join_alliance = { who = root override_requirements = yes }
			}
			every_playable_country = {
				limit = {
					is_galactic_community_member = no
					is_in_federation_with = galactic_emperor
				}
				if = {
					limit = {
						is_subject = yes
						overlord = { is_galactic_community_member = yes }
					}
					add_to_galactic_community_no_message = yes
				}
				else = {
					leave_alliance = { override_requirements = yes }
				}
			}
			# 特质：帝国市场，计算帝国市场收入(1011.)【降频调整】
			if = {
				limit = { federation = { has_federation_perk = imperium_market } }
				if = {
					limit = { 
						NAND = {
							has_global_flag = flag_MECR_frequency_reduction
							has_global_flag = flag_MECR_frequency_reduction_CD
						}
					}
					country_event = {
						id = MECR.1011
					}
				}
			}
			# 特质：帝国门户，如果有成员没有在首都建立星门，尝试建立(1030.)【降频直接】
			if = {
				limit = {
					federation = { has_federation_perk = imperium_gateways }
					any_federation_ally = { NOT = { has_country_flag = flag_imperium_gateways } }
				}
				if = {
					limit = { 
						NAND = {
							has_global_flag = flag_MECR_frequency_reduction
							has_global_flag = flag_MECR_frequency_reduction_CD
						}
					}
					country_event = {
						id = MECR.1030
					}
				}
			}
			# 特质：帝国行省，所有联邦成员转化为帝国行省，添加5年cd flag
			if = {
				limit = {
					federation = { has_federation_perk = imperium_provinces }
					any_federation_ally = {
						is_galactic_emperor = no
						is_country_type = default
						NAND = {
							is_subject = yes
							overlord = { is_same_value = root }
						}
					}
				}
				federation = {
					save_cohesion = yes
					every_member = {
						limit = {
							is_galactic_emperor = no
							is_country_type = default
							NAND = {
								is_subject = yes
								overlord = { is_same_value = root }
							}
						}
						become_imperial_vassal = { type = province }
						country_event = { id = MECR.710 days = 1 } # 防御部队改变
						join_alliance = { who = root override_requirements = yes }
						if = { #切换政策
							limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
							# ai
							if = {
								limit = {
									federation = { has_federation_law = imperium_ai_policy_ai_outlawed }
									NOT = { has_policy_flag = ai_outlawed }
									NOT = { has_country_flag = synthetic_empire }
									OR = {
										has_ethic = ethic_materialist
										has_ethic = ethic_fanatic_materialist
									}
								}
								if = {
									limit = { has_ethic = ethic_fanatic_materialist }
									country_remove_ethic = ethic_fanatic_materialist
								}
								if = {
									limit = { has_ethic = ethic_materialist }
									country_remove_ethic = ethic_materialist
								}
								set_policy = {
									policy = artificial_intelligence_policy
									option = ai_outlawed
									cooldown = yes
								}
							}
							if = {
								limit = {
									federation = { has_federation_law = imperium_ai_policy_ai_servitude }
									NOT = { has_policy_flag = ai_servitude }
									NOT = { has_country_flag = synthetic_empire }
								}
								set_policy = {
									policy = artificial_intelligence_policy
									option = ai_servitude
									cooldown = yes
								}
							}
							if = {
								limit = {
									federation = { has_federation_law = imperium_ai_policy_ai_full_rights }
									NOT = { has_policy_flag = ai_full_rights }
									OR = {
										has_ethic = ethic_spiritualist
										has_ethic = ethic_fanatic_spiritualist
										has_policy_flag = robots_outlawed
									}
								}
								if = {
									limit = { has_ethic = ethic_fanatic_spiritualist }
									country_remove_ethic = ethic_fanatic_spiritualist
								}
								if = {
									limit = { has_ethic = ethic_spiritualist }
									country_remove_ethic = ethic_spiritualist
								}
								if = {
									limit = { has_policy_flag = robots_outlawed }
									set_policy = {
										policy = robot_pop_policy
										option = robot_pops_allowed
										cooldown = yes
									}
								}
								set_policy = {
									policy = artificial_intelligence_policy
									option = ai_full_rights
									cooldown = yes
								}
							}
							# 奴隶制
							if = {
								limit = {
									federation = { has_federation_law = imperium_slavery_policy_slavery_not_allowed }
									NOT = { has_policy_flag = slavery_not_allowed }
									OR = {
										has_valid_civic = civic_slaver_guilds
										has_valid_civic = civic_indentured_assets
									}
								}
								if = {
									limit = { has_valid_civic = civic_slaver_guilds }
									force_remove_civic = civic_slaver_guilds
								}
								if = {
									limit = { has_valid_civic = civic_indentured_assets }
									force_remove_civic = civic_indentured_assets
								}
								set_policy = {
									policy = slavery
									option = slavery_not_allowed
									cooldown = yes
								}
							}
							if = {
								limit = {
									federation = { has_federation_law = imperium_slavery_policy_slavery_allowed }
									NOT = { has_policy_flag = slavery_allowed }
									NOR = {
										has_ethic = ethic_authoritarian
										has_ethic = ethic_fanatic_authoritarian
										has_ethic = ethic_xenophobe
										has_ethic = ethic_fanatic_xenophobe
									}
								}
								shift_ethic = ethic_authoritarian
								set_policy = {
									policy = slavery
									option = slavery_allowed
									cooldown = yes
								}
							}
						}
						imperium_recover_fleet_target = yes
						set_timed_country_flag = {
							flag = flag_country_recent_become_province
							years = 5
						}
					}
					every_member = {
						every_federation_ally = {
							remove_opinion_modifier = { modifier = opinion_broke_federation who = prev }
						}
					}
					load_cohesion = yes
				}
			}
			# 法律：帝国海军，计算ia得到的征召舰容(1020.)【延迟一天】【降频取消】
			if = {
				limit = {
					federation = {
						OR = {
							has_federation_law = imperial_armada_conscription_low
							has_federation_law = imperial_armada_conscription_mid
							has_federation_law = imperial_armada_conscription_high
						}
					}
				}
				if = {
					limit = { 
						NOT = {
							has_global_flag = flag_MECR_ia_frequency_reduction
						}
					}
					country_event = {
						id = MECR.1020
						days = 1
					}
				}
			}
			# 法律：自由移民：检查deposit(1080.)【降频直接】
			if = {
				limit = { federation = { has_federation_law = free_migration_yes_imperium } }
				if = {
					limit = { 
						NAND = {
							has_global_flag = flag_MECR_frequency_reduction
							has_global_flag = flag_MECR_frequency_reduction_CD
						}
					}
					country_event = {
						id = MECR.1080
					}
				}
			}
			# 法律：帝国中央银行：lvl3，每月把联邦成员的收支转移到国库(1040.)【降频调整】
			if = {
				limit = { federation = { has_federation_law = imperial_bank_control } }
				if = {
					limit = { 
						NAND = {
							has_global_flag = flag_MECR_ib_frequency_reduction
							has_global_flag = flag_MECR_ib_frequency_reduction_CD
						}
					}
					country_event = {
						id = MECR.1040
						days = 1
					}
				}
			}
			# 法律：帝国科学院：lvl2，每月根据高级科学家数量提供加成(1050.)【降频调整】
			if = {
				limit = {
					federation = {
						OR = {
							has_federation_law = imperial_academy_of_sciences_research_integration
							has_federation_law = imperial_academy_of_sciences_technical_unification
						}
					}
				}
				if = {
					limit = { 
						NAND = {
							has_global_flag = flag_MECR_frequency_reduction
							has_global_flag = flag_MECR_frequency_reduction_CD
						}
					}
					country_event = {
						id = MECR.1050
					}
				}
			}
			# 法律：帝国科学院：lvl3，每月共享科技(1054.)【延迟二天】【降频取消】
			if = {
				limit = {
					federation = {
						has_federation_law = imperial_academy_of_sciences_technical_unification
					}
				}
				if = {
					limit = { 
						has_global_flag = ias3_tech_increased
						NOT = { has_global_flag = flag_MECR_frequency_reduction }
					}
					country_event = {
						id = MECR.1054
						days = 2
					}
				}
			}
			# 法律：帝国科学院：lvl3，每月将降低行省的得到科技忠诚度bonus变量
			if = {
				limit = {
					federation = {
						has_federation_law = imperial_academy_of_sciences_technical_unification
					}
				}
				every_country = {
					limit = { is_imperial_province = yes }
					if = {
						limit = { check_variable = { which = ias_get_new_tech_loyalty_bonus value > 0 } }
						subtract_variable = { which = ias_get_new_tech_loyalty_bonus value = 1 }
					}
				}
			}
			# 法律：帝国工程署：lvl2，每月重新计算帝国成员可以出租的巨构槽，并且关闭不必要的租借(1060.1061.)
			if = {
				limit = {
					federation = {
						OR = {
							has_federation_law = imperial_department_of_engineering_personnel_coordination
							has_federation_law = imperial_department_of_engineering_project_new_world
						}
					}
				}
				country_event = {
					id = MECR.1060
				}
				country_event = {
					id = MECR.1061
					days = 10
					random = 10
				}
			}
			else = { #否则移除借入借出修正
				every_country = {
					limit = {
						OR = {
							has_modifier = rent_in_a_construction_group
							has_modifier = rent_out_a_construction_group
						}
					}
					remove_modifier = rent_in_a_construction_group
					remove_modifier = rent_out_a_construction_group
				}
			}
			# 法律：帝国教育部：lvl3，如果多出飞升槽，检查已完成传统树(1070.)【延迟一天】【降频调整】
			if = {
				limit = {
					federation = {
						has_federation_law = imperial_ministry_of_education_critical_view_of_history
					}
				}
				if = {
					limit = { 
						NAND = {
							has_global_flag = flag_MECR_frequency_reduction
							has_global_flag = flag_MECR_frequency_reduction_CD
						}
					}
					country_event = {
						id = MECR.1070
						days = 1
					}
				}
			}
			# 法律：帝国国防部：lvl2：新国家司令/将领增加特质(1090.)
			if = {
				limit = {
					federation = {
						OR = {
							has_federation_law = imperial_ministry_of_defence_strategy_institute
							has_federation_law = imperial_ministry_of_defence_joint_headquarter
						}
					}
				}
				if = {
					limit = {
						any_country = {
							OR = {
								is_same_value = root
								is_in_federation_with = root
							}
							NOT = { has_country_flag = flag_imod2_traits_added }
						}
					}
					country_event = {
						id = MECR.1090
					}
				}
			}

			# 法律：帝国集权：统一帝国，尝试将帝国行省整合(1100.1104.)【延迟一天】【降频直接】
			if = {
				limit = { federation = { has_federation_law = centralization_imperium_unified_imperium } }
				if = {
					limit = { 
						NAND = {
							has_global_flag = flag_MECR_frequency_reduction
							has_global_flag = flag_MECR_frequency_reduction_CD
						}
					}
					if = {
						limit = {
							any_federation_ally = {
								NOT = { has_country_flag = flag_country_recent_become_province }
								is_country_type = default
								is_galactic_emperor = no
								is_subject = yes
								NOT = { any_agreement = { agreement_preset = preset_imperial_special_economic_zone } }
							}
						}
						country_event = {
							id = MECR.1100
							days = 1
						}
					}
					every_federation_ally = {
						limit = {
							is_subject = yes
							any_agreement = { agreement_preset = preset_imperial_senator }
							num_owned_relics > 0
						}
						country_event = {
							id = MECR.1104
							days = 1
						}
					}
				}
			}

			federation = { #移除退联邦修正
				every_member = {
					every_federation_ally = {
						remove_opinion_modifier = { modifier = opinion_broke_federation who = prev }
					}
				}
			}
		}

		else = {
			cancel_resolution = resolution_emperor_the_step_towards_a_united_galaxy
			cancel_resolution = resolution_emperor_imperial_unification
		}
		# 如果是降频运行状态，在CD结束的情况下重新设置CD
		if = {
			limit = {
				has_global_flag = flag_MECR_frequency_reduction
				NOT = { has_global_flag = flag_MECR_frequency_reduction_CD }
			}
			set_timed_global_flag = {
				flag = flag_MECR_frequency_reduction_CD
				days = 345
			}
		}
		if = {
			limit = {
				has_global_flag = flag_MECR_ib_frequency_reduction
				NOT = { has_global_flag = flag_MECR_ib_frequency_reduction_CD }
			}
			set_timed_global_flag = {
				flag = flag_MECR_ib_frequency_reduction_CD
				days = 345
			}
		}
	}
}
country_event = { #1011.【每月计算】【降频调整】帝国市场：分红金额(1012.)[1010.]
	id = MECR.1011
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_federation_ally = { #拆掉意外导致舰容为零的国家的舰队，免得维护费爆炸
			limit = { max_naval_capacity = 0 }
			every_owned_fleet = {
				limit = { is_civilian = no }
				delete_fleet = {
					target = this
					kill_leader = no
					destroy_template = yes
				}
			}
		}
		federation = {
			if = {
				limit = { has_federation_perk = imperium_market_4 }
				set_variable = { which = im_param value = 0.25 }
			}
			else_if = {
				limit = { has_federation_perk = imperium_market_3 }
				set_variable = { which = im_param value = 0.20 }
			}
			else_if = {
				limit = { has_federation_perk = imperium_market_2 }
				set_variable = { which = im_param value = 0.15 }
			}
			else = {
				set_variable = { which = im_param value = 0.10 }
			}
			set_variable = { which = imperium_market_num_pops value = 0 }
			# 基础收入
			set_variable = { which = imperium_market_energy value = 2000 }
			set_variable = { which = imperium_market_minerals value = 2000 }
			set_variable = { which = imperium_market_food value = 2000 }
			set_variable = { which = imperium_market_consumer_goods value = 1000 }
			set_variable = { which = imperium_market_alloys value = 500 }
			set_variable = { which = imperium_market_volatile_motes value = 50 }
			set_variable = { which = imperium_market_exotic_gases value = 50 }
			set_variable = { which = imperium_market_rare_crystals value = 50 }
			every_member = {
				limit = {
					OR = {
						is_country_type = default
						has_country_flag = fallen_empire_compromised
					}
				}

				export_trigger_value_to_variable = { trigger = num_pops variable = im_num_pops }
				change_variable = { which = im_num_pops value = 500 }
				prev = { change_variable = { which = imperium_market_num_pops value = prev.im_num_pops } }

				imperial_market_basic_income_calculate = { resource = energy }
				imperial_market_basic_income_calculate = { resource = minerals }
				imperial_market_basic_income_calculate = { resource = food }
				imperial_market_basic_income_calculate = { resource = consumer_goods }
				imperial_market_basic_income_calculate = { resource = alloys }
				imperial_market_basic_income_calculate = { resource = volatile_motes }
				imperial_market_basic_income_calculate = { resource = exotic_gases }
				imperial_market_basic_income_calculate = { resource = rare_crystals }
			}
			multiply_variable = { which = imperium_market_energy value = im_param }
			multiply_variable = { which = imperium_market_minerals value = im_param }
			multiply_variable = { which = imperium_market_food value = im_param }
			multiply_variable = { which = imperium_market_consumer_goods value = im_param }
			multiply_variable = { which = imperium_market_alloys value = im_param }
			multiply_variable = { which = imperium_market_volatile_motes value = im_param }
			multiply_variable = { which = imperium_market_exotic_gases value = im_param }
			multiply_variable = { which = imperium_market_rare_crystals value = im_param }
			if = {
				limit = {
					OR = {
						check_variable = { which = imperium_market_energy value < 0 }
						check_variable = { which = imperium_market_minerals value < 0 }
						check_variable = { which = imperium_market_food value < 0 }
						check_variable = { which = imperium_market_consumer_goods value < 0 }
						check_variable = { which = imperium_market_alloys value < 0 }
						check_variable = { which = imperium_market_volatile_motes value < 0 }
						check_variable = { which = imperium_market_exotic_gases value < 0 }
						check_variable = { which = imperium_market_rare_crystals value < 0 }
					}
				}
				#set_timed_global_flag = { flag = flag_imperial_market_risk days = 20 }
				if = { limit = { check_variable = { which = imperium_market_energy value < 0 } } set_variable = { which = imperium_market_energy value = 0 } }
				if = { limit = { check_variable = { which = imperium_market_minerals value < 0 } } set_variable = { which = imperium_market_minerals value = 0 } }
				if = { limit = { check_variable = { which = imperium_market_food value < 0 } } set_variable = { which = imperium_market_food value = 0 } }
				if = { limit = { check_variable = { which = imperium_market_consumer_goods value < 0 } } set_variable = { which = imperium_market_consumer_goods value = 0 } }
				if = { limit = { check_variable = { which = imperium_market_alloys value < 0 } } set_variable = { which = imperium_market_alloys value = 0 } }
				if = { limit = { check_variable = { which = imperium_market_volatile_motes value < 0 } } set_variable = { which = imperium_market_volatile_motes value = 0 } }
				if = { limit = { check_variable = { which = imperium_market_exotic_gases value < 0 } } set_variable = { which = imperium_market_exotic_gases value = 0 } }
				if = { limit = { check_variable = { which = imperium_market_rare_crystals value < 0 } } set_variable = { which = imperium_market_rare_crystals value = 0 } }
			}
			every_member = {
				limit = {
					OR = {
						is_country_type = default
						has_country_flag = fallen_empire_compromised
					}
				}
				divide_variable = {
					which = im_num_pops
					value = prev.imperium_market_num_pops
				}
				set_variable = { which = im_income_energy value = prev.imperium_market_energy }
				set_variable = { which = im_income_minerals value = prev.imperium_market_minerals }
				set_variable = { which = im_income_food value = prev.imperium_market_food }
				set_variable = { which = im_income_consumer_goods value = prev.imperium_market_consumer_goods }
				set_variable = { which = im_income_alloys value = prev.imperium_market_alloys }
				set_variable = { which = im_income_volatile_motes value = prev.imperium_market_volatile_motes }
				set_variable = { which = im_income_exotic_gases value = prev.imperium_market_exotic_gases }
				set_variable = { which = im_income_rare_crystals value = prev.imperium_market_rare_crystals }
				multiply_variable = { which = im_income_energy value = im_num_pops }
				multiply_variable = { which = im_income_minerals value = im_num_pops }
				multiply_variable = { which = im_income_food value = im_num_pops }
				multiply_variable = { which = im_income_consumer_goods value = im_num_pops }
				multiply_variable = { which = im_income_alloys value = im_num_pops }
				multiply_variable = { which = im_income_volatile_motes value = im_num_pops }
				multiply_variable = { which = im_income_exotic_gases value = im_num_pops }
				multiply_variable = { which = im_income_rare_crystals value = im_num_pops }
				remove_modifier = imperium_market_all
				remove_modifier = imperium_market_energy
				remove_modifier = imperium_market_minerals
				remove_modifier = imperium_market_food
				remove_modifier = imperium_market_consumer_goods
				remove_modifier = imperium_market_alloys
				remove_modifier = imperium_market_volatile_motes
				remove_modifier = imperium_market_exotic_gases
				remove_modifier = imperium_market_rare_crystals
				THIS = {
					set_variable = { which = display_im_income_energy value = im_income_energy }
					set_variable = { which = display_im_income_minerals value = im_income_minerals }
					set_variable = { which = display_im_income_food value = im_income_food }
					set_variable = { which = display_im_income_consumer_goods value = im_income_consumer_goods }
					set_variable = { which = display_im_income_alloys value = im_income_alloys }
					set_variable = { which = display_im_income_volatile_motes value = im_income_volatile_motes }
					set_variable = { which = display_im_income_exotic_gases value = im_income_exotic_gases }
					set_variable = { which = display_im_income_rare_crystals value = im_income_rare_crystals }
					multiply_variable = { which = display_im_income_energy value = 10 }
					multiply_variable = { which = display_im_income_minerals value = 10 }
					multiply_variable = { which = display_im_income_food value = 10 }
					multiply_variable = { which = display_im_income_consumer_goods value = 10 }
					multiply_variable = { which = display_im_income_alloys value = 10 }
					multiply_variable = { which = display_im_income_volatile_motes value = 10 }
					multiply_variable = { which = display_im_income_exotic_gases value = 10 }
					multiply_variable = { which = display_im_income_rare_crystals value = 10 }
					round_variable = display_im_income_energy
					round_variable = display_im_income_minerals
					round_variable = display_im_income_food
					round_variable = display_im_income_consumer_goods
					round_variable = display_im_income_alloys
					round_variable = display_im_income_volatile_motes
					round_variable = display_im_income_exotic_gases
					round_variable = display_im_income_rare_crystals
					multiply_variable = { which = display_im_income_energy value = 0.1 }
					multiply_variable = { which = display_im_income_minerals value = 0.1 }
					multiply_variable = { which = display_im_income_food value = 0.1 }
					multiply_variable = { which = display_im_income_consumer_goods value = 0.1 }
					multiply_variable = { which = display_im_income_alloys value = 0.1 }
					multiply_variable = { which = display_im_income_volatile_motes value = 0.1 }
					multiply_variable = { which = display_im_income_exotic_gases value = 0.1 }
					multiply_variable = { which = display_im_income_rare_crystals value = 0.1 }
				}
				# 根据是否降频设置modifier定时器时长
				if = {
					limit = { NOT = { has_global_flag = flag_MECR_frequency_reduction } }
					add_modifier = { modifier = imperium_market_all days = 31 }
					add_modifier = { modifier = imperium_market_energy multiplier = im_income_energy days = 31 }
					add_modifier = { modifier = imperium_market_minerals multiplier = im_income_minerals days = 31 }
					add_modifier = { modifier = imperium_market_food multiplier = im_income_food days = 31 }
					add_modifier = { modifier = imperium_market_consumer_goods multiplier = im_income_consumer_goods days = 31 }
					add_modifier = { modifier = imperium_market_alloys multiplier = im_income_alloys days = 31 }
					add_modifier = { modifier = imperium_market_volatile_motes multiplier = im_income_volatile_motes days = 31 }
					add_modifier = { modifier = imperium_market_exotic_gases multiplier = im_income_exotic_gases days = 31 }
					add_modifier = { modifier = imperium_market_rare_crystals multiplier = im_income_rare_crystals days = 31 }
					if = {
						limit = { has_global_flag = flag_imperial_market_risk }
						create_message = {
							type = MESSAGE_IMPERIAL_MARKET_RISK
							localization = MESSAGE_IMPERIAL_MARKET_RISK_DESC
							days = 6
							target = THIS
						}
					}
				}
				else = {
					add_modifier = { modifier = imperium_market_all days = 361 }
					add_modifier = { modifier = imperium_market_energy multiplier = im_income_energy days = 361 }
					add_modifier = { modifier = imperium_market_minerals multiplier = im_income_minerals days = 361 }
					add_modifier = { modifier = imperium_market_food multiplier = im_income_food days = 361 }
					add_modifier = { modifier = imperium_market_consumer_goods multiplier = im_income_consumer_goods days = 361 }
					add_modifier = { modifier = imperium_market_alloys multiplier = im_income_alloys days = 361 }
					add_modifier = { modifier = imperium_market_volatile_motes multiplier = im_income_volatile_motes days = 361 }
					add_modifier = { modifier = imperium_market_exotic_gases multiplier = im_income_exotic_gases days = 361 }
					add_modifier = { modifier = imperium_market_rare_crystals multiplier = im_income_rare_crystals days = 361 }
					if = {
						limit = { has_global_flag = flag_imperial_market_risk }
						create_message = {
							type = MESSAGE_IMPERIAL_MARKET_RISK
							localization = MESSAGE_IMPERIAL_MARKET_RISK_DESC
							days = 30
							target = THIS
						}
					}
				}
			}
			#外部国家的负面影响
			every_country = {
				limit = {
					is_country_type = default
					is_homicidal = no
					OR = {
						NOT = { exists = federation }
						NOT = { federation = { is_same_value = prevprev } }
					}
					NOT = { #有联邦协从关系的不受制裁
						prev = {
							any_member = { has_association_status = PREVPREV }
						}
					}
				}
				if = {
					limit = { NOT = { has_country_flag = flag_imperial_preference_outer_noticed } }
					country_event = {
						id = MECR.1012
					}
				}
				remove_modifier = imperial_preference_outer_1
				remove_modifier = imperial_preference_outer_2
				remove_modifier = imperial_preference_outer_3
				remove_modifier = imperial_preference_outer_4
				# 根据是否降频设置modifier定时器时长
				if = {
					limit = { NOT = { has_global_flag = flag_MECR_frequency_reduction } }
					if = {
						limit = { prev = { has_federation_perk = imperium_market_4 } }
						add_modifier = { modifier = imperial_preference_outer_4 days = 31 }
					}
					else_if = {
						limit = { prev = { has_federation_perk = imperium_market_3 } }
						add_modifier = { modifier = imperial_preference_outer_3 days = 31 }
					}
					else_if = {
						limit = { prev = { has_federation_perk = imperium_market_2 } }
						add_modifier = { modifier = imperial_preference_outer_2 days = 31 }
					}
					else = {
						add_modifier = { modifier = imperial_preference_outer_1 days = 31 }
					}
				}
				else = {
					if = {
						limit = { prev = { has_federation_perk = imperium_market_4 } }
						add_modifier = { modifier = imperial_preference_outer_4 days = 361 }
					}
					else_if = {
						limit = { prev = { has_federation_perk = imperium_market_3 } }
						add_modifier = { modifier = imperial_preference_outer_3 days = 361 }
					}
					else_if = {
						limit = { prev = { has_federation_perk = imperium_market_2 } }
						add_modifier = { modifier = imperial_preference_outer_2 days = 361 }
					}
					else = {
						add_modifier = { modifier = imperial_preference_outer_1 days = 361 }
					}
				}
			}
		}
	}
}
country_event = { #1012.【初次】帝国市场建立：对域外国家的通知[1011.]
	id = MECR.1012
	title = "MECR.1012.title"
	desc = "MECR.1012.desc"
	picture = GFX_evt_alien_segregation
	show_sound = event_factions
	is_triggered_only = yes

	immediate = {
		set_country_flag = flag_imperial_preference_outer_noticed
	}

	option = {
		name = "WORRYING"
	}
}
country_event = { #1020.【每月计算】【降频取消】帝国海军：贡献容量与额外维护费[1010.]
	id = MECR.1020
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = flag_MECR_ia_frequency_reduction }
	}

	immediate = {
		# 征召的舰容
		set_variable = { which = naval_cap_ia_received value = 0 } 
		federation = {
			every_member = {
				limit = { NOT = { has_country_flag = flag_ia_service_exemption } }
				#求当前舰容mult乘数
				export_modifier_to_variable = {
					modifier = country_naval_cap_mult
					variable = IACount_country_naval_cap_mult
				}
				change_variable = {
					which = IACount_country_naval_cap_mult
					value = 1
				}
				#求当前基础舰容
				export_trigger_value_to_variable = {
					trigger = max_naval_capacity
					variable = IACount_base_naval_cap
				}
				divide_variable = {
					which = IACount_base_naval_cap
					value = IACount_country_naval_cap_mult
				}
				#求扣除前的舰容mult乘数
				change_variable = {
					which = IACount_country_naval_cap_mult
					value = IACount_transfer_to_ia_percent
				}
				#求新的应扣除的舰容mult乘数
				set_variable = {
					which = IACount_transfer_to_ia_percent
					value = IACount_country_naval_cap_mult
				}
				multiply_variable = {
					which = IACount_transfer_to_ia_percent
					value = value:ia_transfer_percent
				}
				set_variable = {
					which = IACount_transfer_to_ia_percent_GET
					value = IACount_transfer_to_ia_percent
				}
				#根据应扣除的舰容mult乘数添加修正
				if = { #戍邦特化型-25%需要降低的舰容
					limit = {
						is_imperial_province = yes
						any_agreement = { has_active_specialization = specialist_bulwark }
					}
					multiply_variable = {
						which = IACount_transfer_to_ia_percent
						value = 0.75
					}
				}
				remove_modifier = ia_take_naval_cap
				add_modifier = {
					modifier = ia_take_naval_cap
					multiplier = IACount_transfer_to_ia_percent
					days = 31
				}
				#扣除的舰容mult修正×基础舰容=贡献的舰容值
				set_variable = {
					which = IACount_transfer_amount
					value = IACount_base_naval_cap
				}
				multiply_variable = {
					which = IACount_transfer_amount
					value = IACount_transfer_to_ia_percent_GET
				}
				root = { change_variable = { which = naval_cap_ia_received value = prev.IACount_transfer_amount } }
			}
		}
		remove_modifier = ia_receive_naval_cap
		if = {
			limit = { check_variable = { which = naval_cap_ia_received value > 0 } }
			add_modifier = {
				modifier = ia_receive_naval_cap
				multiplier = naval_cap_ia_received
				days = 31
			}
		}
		# 没收舰队
		if = {
			limit = { has_global_flag = imperium_recover_fleet_flag }
			imperium_recover_fleet = yes
			remove_global_flag = imperium_recover_fleet_flag
		}
		# 超出舰容的维护费
		remove_modifier = ia_naval_cap_over_upkeep
		set_variable = { which = ia_fleet_size value = 0 }
		every_owned_fleet = {
			limit = { has_ship_owner_type = galactic_community }
			root = { change_variable = { which = ia_fleet_size value = prev.trigger:fleet_size } }
		}
		export_modifier_to_variable = { modifier = country_community_gdf_naval_capacity variable = ia_naval_cap }
		subtract_variable = { which = ia_fleet_size value = ia_naval_cap }
		if = {
			limit = { check_variable = { which = ia_fleet_size value > 0 } }
			add_modifier = {
				modifier = ia_naval_cap_over_upkeep
				multiplier = ia_fleet_size
				days = 31
			}
		}
	}
}
country_event = { #1030.【每月计算】帝国门户：尝试建立星门(1032.1033.)[1010.]
	id = MECR.1030
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { has_technology = tech_gateway_construction }
			federation = {
				every_member = {
					limit = { NOT = { has_country_flag = flag_imperium_gateways } }
					capital_scope = {
						solar_system = {
							if = {
								limit = {
									NOT = {
										any_system_megastructure = {
											OR = {
												is_megastructure_type = gateway_0
												is_megastructure_type = gateway_ruined
												is_megastructure_type = gateway_final
												is_megastructure_type = gateway_restored
											}
										}
									}
								}
								spawn_megastructure = {
									type = gateway_final
									name = "NAME_imperial_gateway"
									owner = prevprev
									random_pos = yes
									orbit_distance = 200
									orbit_angle = 360
									init_effect = {
										set_megastructure_flag = imperial_gateway
										#add_modifier = { modifier = imperial_gateways_modifier }
									}
								}
								if = {
									limit = { is_active_resolution = resolution_emperor_webway_project }
									prevprev = {
										add_resource = {
											alloys = -1500
											energy = -1800
										}
										country_event = { id = MECR.1032 }
									}
									galactic_emperor = {
										add_resource = {
											alloys = -1500
											energy = -1800
										}
										create_message = {
											type = MESSAGE_TYPE_IMPERIAL_GATEWAY
											localization = "MESSAGE_TYPE_IMPERIAL_GATEWAY_LOCAL"
											days = 7
											target = prev
										}
									}
								}
								else = {
									prevprev = {
										add_resource = {
											alloys = -2000
											energy = -2400
										}
										country_event = { id = MECR.1032 }
									}
									galactic_emperor = {
										add_resource = {
											alloys = -1500
											energy = -1800
										}
										create_message = {
											type = MESSAGE_TYPE_IMPERIAL_GATEWAY
											localization = "MESSAGE_TYPE_IMPERIAL_GATEWAY_LOCAL"
											days = 7
											target = this
										}
									}
								}
							}
							else_if = {
								limit = {
									any_system_megastructure = {
										OR = {
											is_megastructure_type = gateway_0
											is_megastructure_type = gateway_ruined
										}
									}
								}
								random_system_megastructure = {
									limit = {
										OR = {
											is_megastructure_type = gateway_0
											is_megastructure_type = gateway_ruined
										}
									}
									if = {
										limit = { is_upgrading = no }
										upgrade_megastructure_to = gateway_final
										set_name = "NAME_imperial_gateway"
										set_megastructure_flag = imperial_gateway
										#add_modifier = { modifier = imperial_gateways_modifier }
										if = {
											limit = { is_active_resolution = resolution_emperor_webway_project }
											owner = {
												add_resource = {
													alloys = -750
													energy = -1800
												}
												country_event = { id = MECR.1033 }
											}
											galactic_emperor = {
												add_resource = {
													alloys = -750
													energy = -1800
												}
												create_message = {
													type = MESSAGE_TYPE_IMPERIAL_GATEWAY_UPGRADED
													localization = "MESSAGE_TYPE_IMPERIAL_GATEWAY_UPGRADED_LOCAL"
													days = 7
													target = this
												}
											}
										}
										else = {
											owner = {
												add_resource = {
													alloys = -1000
													energy = -2400
												}
												country_event = { id = MECR.1033 }
											}
											galactic_emperor = {
												add_resource = {
													alloys = -1000
													energy = -2400
												}
												create_message = {
													type = MESSAGE_TYPE_IMPERIAL_GATEWAY_UPGRADED
													localization = "MESSAGE_TYPE_IMPERIAL_GATEWAY_UPGRADED_LOCAL"
													days = 7
													target = this
												}
											}
										}
									}
									else = {
										upgrade_megastructure_to = gateway_final
										set_name = "NAME_imperial_gateway"
										set_megastructure_flag = imperial_gateway
										#add_modifier = { modifier = imperial_gateways_modifier }
									}
								}
							}
							else = {
								random_system_megastructure = {
									limit = {
										OR = {
											is_megastructure_type = gateway_final
											is_megastructure_type = gateway_restored
										}
										NOT = { has_megastructure_flag = imperial_gateway }
									}
									set_name = "NAME_imperial_gateway"
									set_megastructure_flag = imperial_gateway
									#add_modifier = { modifier = imperial_gateways_modifier }
								}
							}
						}
					}
					set_country_flag = flag_imperium_gateways
				}
			}
		}
	}
}
country_event = { #1031.【初次】建立帝国门户[imperium_gateways]
	id = MECR.1031
	title = "MECR.1031.title"
	desc = "MECR.1031.desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_construction
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { NOT = { has_technology = tech_gateway_activation } }
			give_technology = { tech = tech_gateway_activation }
		}
		if = {
			limit = { NOT = { has_technology = tech_gateway_construction } }
			give_technology = { tech = tech_gateway_construction }
		}
		if = {
			limit = { has_technology = tech_gateway_construction }
			federation = {
				every_member = {
					limit = { NOT = { has_country_flag = flag_imperium_gateways } }
					capital_scope = {
						solar_system = {
							if = {
								limit = {
									NOT = {
										any_system_megastructure = {
											OR = {
												is_megastructure_type = gateway_0
												is_megastructure_type = gateway_ruined
												is_megastructure_type = gateway_final
												is_megastructure_type = gateway_restored
											}
										}
									}
								}
								spawn_megastructure = {
									type = gateway_final
									name = "NAME_imperial_gateway"
									owner = prevprev
									random_pos = yes
									orbit_distance = 200
									orbit_angle = 360
									init_effect = {
										set_megastructure_flag = imperial_gateway
										#add_modifier = { modifier = imperial_gateways_modifier }
									}
								}
								if = {
									limit = { is_active_resolution = resolution_emperor_webway_project }
									prevprev = {
										add_resource = {
											alloys = -1500
											energy = -1800
										}
										country_event = { id = MECR.1032 }
									}
									galactic_emperor = {
										change_variable = { which = imperial_gateway_cost_alloys value = 1500 }
										change_variable = { which = imperial_gateway_cost_energy value = 1800 }
									}
								}
								else = {
									prevprev = {
										add_resource = {
											alloys = -2000
											energy = -2400
										}
										country_event = { id = MECR.1032 }
									}
									galactic_emperor = {
										change_variable = { which = imperial_gateway_cost_alloys value = 2000 }
										change_variable = { which = imperial_gateway_cost_energy value = 2400 }
									}
								}
							}
							else_if = {
								limit = {
									any_system_megastructure = {
										OR = {
											is_megastructure_type = gateway_0
											is_megastructure_type = gateway_ruined
										}
									}
								}
								random_system_megastructure = {
									limit = {
										OR = {
											is_megastructure_type = gateway_0
											is_megastructure_type = gateway_ruined
										}
									}
									if = {
										limit = { is_upgrading = no }
										upgrade_megastructure_to = gateway_final
										set_name = "NAME_imperial_gateway"
										set_megastructure_flag = imperial_gateway
										#add_modifier = { modifier = imperial_gateways_modifier }
										if = {
											limit = { is_active_resolution = resolution_emperor_webway_project }
											owner = {
												add_resource = {
													alloys = -750
													energy = -1800
												}
												country_event = { id = MECR.1033 }
											}
											galactic_emperor = {
												change_variable = { which = imperial_gateway_cost_alloys value = 750 }
												change_variable = { which = imperial_gateway_cost_energy value = 1800 }
											}
										}
										else = {
											owner = {
												add_resource = {
													alloys = -1000
													energy = -2400
												}
												country_event = { id = MECR.1033 }
											}
											galactic_emperor = {
												change_variable = { which = imperial_gateway_cost_alloys value = 1000 }
												change_variable = { which = imperial_gateway_cost_energy value = 2400 }
											}
										}
									}
									else = {
										upgrade_megastructure_to = gateway_final
										set_name = "NAME_imperial_gateway"
										set_megastructure_flag = imperial_gateway
										#add_modifier = { modifier = imperial_gateways_modifier }
									}
								}
							}
							else = {
								random_system_megastructure = {
									limit = {
										OR = {
											is_megastructure_type = gateway_final
											is_megastructure_type = gateway_restored
										}
										NOT = { has_megastructure_flag = imperial_gateway }
									}
									set_name = "NAME_imperial_gateway"
									set_megastructure_flag = imperial_gateway
									#add_modifier = { modifier = imperial_gateways_modifier }
								}
							}
						}
					}
					set_country_flag = flag_imperium_gateways
				}
			}
		}
		add_resource = {
			alloys = -1
			mult = imperial_gateway_cost_alloys
		}
		add_resource = {
			energy = -1
			mult = imperial_gateway_cost_energy
		}
	}

	option = {
		name = "MECR.1031.option"
		tooltip = {
			add_resource = {
				alloys = -1
				mult = imperial_gateway_cost_alloys
			}
			add_resource = {
				energy = -1
				mult = imperial_gateway_cost_energy
			}
		}
	}
}
country_event = { #1032.【初次】帝国门户建成：所有者通知[1030.]
	id = MECR.1032
	title = "MECR.1032.title"
	desc = {
		trigger = { NOT = { has_ethic = ethic_gestalt_consciousness } }
		text = "MECR.1032.desc.a"
	}
	desc = {
		trigger = { has_ethic = ethic_gestalt_consciousness }
		text = "MECR.1032.desc.b"
	}
	picture = GFX_evt_drifting_gateway
	show_sound = event_construction
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = no
	}

	option = {
		name = "EXCELLENT"
	}
}
country_event = { #1033.【初次】帝国门户升级：所有者通知[1030.]
	id = MECR.1033
	title = "MECR.1033.title"
	desc = {
		trigger = { NOT = { has_ethic = ethic_gestalt_consciousness } }
		text = "MECR.1033.desc.a"
	}
	desc = {
		trigger = { has_ethic = ethic_gestalt_consciousness }
		text = "MECR.1033.desc.b"
	}
	picture = GFX_evt_drifting_gateway
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = no
	}

	option = {
		name = "EXCELLENT"
	}
}
country_event = { #1040.【每月计算】【降频调整】帝国银行：lvl3：上缴与补贴[1010.]
	id = MECR.1040
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = financial_income_energy value = 0 }
		set_variable = { which = financial_income_minerals value = 0 }
		set_variable = { which = financial_income_food value = 0 }
		set_variable = { which = financial_income_alloys value = 0 }
		set_variable = { which = financial_income_consumer_goods value = 0 }
		set_variable = { which = financial_income_volatile_motes value = 0 }
		set_variable = { which = financial_income_rare_crystals value = 0 }
		set_variable = { which = financial_income_exotic_gases value = 0 }
		every_federation_ally = {
			limit = {
				imperial_province_or_special_economic_zone = yes
			}
			# 根据是否降频设置资源库存上下限
			if = {
				limit = { NOT = { has_global_flag = flag_MECR_ib_frequency_reduction } }
				financial_calculate = { resource = energy min = 2000 max = 10000 }
				financial_calculate = { resource = minerals min = 2000 max = 20000 }
				financial_calculate = { resource = alloys min = 1000 max = 20000 }
				financial_calculate = { resource = volatile_motes min = 200 max = 2000 }
				financial_calculate = { resource = rare_crystals min = 200 max = 2000 }
				financial_calculate = { resource = exotic_gases min = 200 max = 2000 }
				if = {
					limit = { country_uses_food = yes }
					financial_calculate = { resource = food min = 2000 max = 10000 }
				}
				if = {
					limit = { country_uses_consumer_goods = yes }
					financial_calculate = { resource = consumer_goods min = 2000 max = 10000 }
				}
			}
			else = { #降频时下限翻倍
				financial_calculate = { resource = energy min = 8000 max = 10000 }
				financial_calculate = { resource = minerals min = 8000 max = 20000 }
				financial_calculate = { resource = alloys min = 4000 max = 20000 }
				financial_calculate = { resource = volatile_motes min = 800 max = 2000 }
				financial_calculate = { resource = rare_crystals min = 800 max = 2000 }
				financial_calculate = { resource = exotic_gases min = 800 max = 2000 }
				if = {
					limit = { country_uses_food = yes }
					financial_calculate = { resource = food min = 4000 max = 10000 }
				}
				if = {
					limit = { country_uses_consumer_goods = yes }
					financial_calculate = { resource = consumer_goods min = 4000 max = 10000 }
				}
			}
		}
		galactic_emperor = {
			if = {
				limit = {
					NAND = {
						check_variable = { which = financial_income_energy value = 0 }
						check_variable = { which = financial_income_minerals value = 0 }
						check_variable = { which = financial_income_food value = 0 }
						check_variable = { which = financial_income_alloys value = 0 }
						check_variable = { which = financial_income_consumer_goods value = 0 }
						check_variable = { which = financial_income_volatile_motes value = 0 }
						check_variable = { which = financial_income_rare_crystals value = 0 }
						check_variable = { which = financial_income_exotic_gases value = 0 }
					}
				}
				add_resource = { energy = 1 mult = financial_income_energy }
				add_resource = { minerals = 1 mult = financial_income_minerals }
				add_resource = { food = 1 mult = financial_income_food }
				add_resource = { alloys = 1 mult = financial_income_alloys }
				add_resource = { consumer_goods = 1 mult = financial_income_consumer_goods }
				add_resource = { volatile_motes = 1 mult = financial_income_volatile_motes }
				add_resource = { rare_crystals = 1 mult = financial_income_rare_crystals }
				add_resource = { exotic_gases = 1 mult = financial_income_exotic_gases }
				# 显示用取整
				set_variable = { which = financial_income_int_energy				value = financial_income_energy }
				set_variable = { which = financial_income_int_minerals				value = financial_income_minerals }
				set_variable = { which = financial_income_int_food					value = financial_income_food }
				set_variable = { which = financial_income_int_alloys				value = financial_income_alloys }
				set_variable = { which = financial_income_int_consumer_goods		value = financial_income_consumer_goods }
				set_variable = { which = financial_income_int_volatile_motes		value = financial_income_volatile_motes }
				set_variable = { which = financial_income_int_rare_crystals			value = financial_income_rare_crystals }
				set_variable = { which = financial_income_int_exotic_gases			value = financial_income_exotic_gases }
				round_variable = financial_income_int_energy
				round_variable = financial_income_int_minerals
				round_variable = financial_income_int_food
				round_variable = financial_income_int_alloys
				round_variable = financial_income_int_consumer_goods
				round_variable = financial_income_int_volatile_motes
				round_variable = financial_income_int_rare_crystals
				round_variable = financial_income_int_exotic_gases
				if = {
					limit = { NOT = { has_global_flag = flag_MECR_ib_frequency_reduction } }
					create_message = {
						type = MESSAGE_TYPE_IMPERIAL_FINANCE
						localization = "MESSAGE_TYPE_IMPERIAL_FINANCE_LOCAL"
						days = 6
						target = this
					}
				}
				else = {
					create_message = {
						type = MESSAGE_TYPE_IMPERIAL_FINANCE_YEARLY
						localization = "MESSAGE_TYPE_IMPERIAL_FINANCE_LOCAL"
						days = 18
						target = this
					}
				}
				# 根据是否降频设置统计
				change_variable = { which = month value = 1 }
				if = {
					limit = {
						has_global_flag = flag_MECR_ib_frequency_reduction
						has_global_flag = flag_financial_income_statistic
					}
					remove_global_flag = flag_financial_income_statistic
					clear_financial_income_statistic = { month = JAN }
					clear_financial_income_statistic = { month = FEB }
					clear_financial_income_statistic = { month = MAR }
					clear_financial_income_statistic = { month = APR }
					clear_financial_income_statistic = { month = MAY }
					clear_financial_income_statistic = { month = JUN }
					clear_financial_income_statistic = { month = JUL }
					clear_financial_income_statistic = { month = AUG }
					clear_financial_income_statistic = { month = SEP }
					clear_financial_income_statistic = { month = OCT }
					clear_financial_income_statistic = { month = DEC }
					clear_financial_income_year_statistic = yes
				}
				if = {
					limit = { has_global_flag = flag_financial_income_statistic }
					if = {
						limit = { check_variable = { which = month value = 1 } }
						financial_income_statistic = { month = JAN }
					}
					else_if = {
						limit = { check_variable = { which = month value = 2 } }
						financial_income_statistic = { month = FEB }
					}
					else_if = {
						limit = { check_variable = { which = month value = 3 } }
						financial_income_statistic = { month = MAR }
					}
					else_if = {
						limit = { check_variable = { which = month value = 4 } }
						financial_income_statistic = { month = APR }
					}
					else_if = {
						limit = { check_variable = { which = month value = 5 } }
						financial_income_statistic = { month = MAY }
					}
					else_if = {
						limit = { check_variable = { which = month value = 6 } }
						financial_income_statistic = { month = JUN }
					}
					else_if = {
						limit = { check_variable = { which = month value = 7 } }
						financial_income_statistic = { month = JUL }
					}
					else_if = {
						limit = { check_variable = { which = month value = 8 } }
						financial_income_statistic = { month = AUG }
					}
					else_if = {
						limit = { check_variable = { which = month value = 9 } }
						financial_income_statistic = { month = SEP }
					}
					else_if = {
						limit = { check_variable = { which = month value = 10 } }
						financial_income_statistic = { month = OCT }
					}
					else_if = {
						limit = { check_variable = { which = month value = 11 } }
						financial_income_statistic = { month = NOV }
					}
					else_if = {
						limit = { check_variable = { which = month value = 12 } }
						financial_income_statistic = { month = DEC }
					}
				}
			}
		}
	}
}
country_event = { #1041.【初次】帝国银行：lvl3：(1043.)[MECR_law:imperial_bank_control]
	id = MECR.1041
	title = "MECR.1041.title"
	desc = "MECR.1041.desc"
	picture = GFX_evt_coronation
	show_sound = event_galactic_market

	is_triggered_only = yes

	immediate = {
		set_variable = { which = financial_income_energy value = 0 }
		set_variable = { which = financial_income_minerals value = 0 }
		set_variable = { which = financial_income_food value = 0 }
		set_variable = { which = financial_income_alloys value = 0 }
		set_variable = { which = financial_income_consumer_goods value = 0 }
		set_variable = { which = financial_income_volatile_motes value = 0 }
		set_variable = { which = financial_income_rare_crystals value = 0 }
		set_variable = { which = financial_income_exotic_gases value = 0 }
		every_federation_ally = {
			limit = {
				imperial_province_or_special_economic_zone = yes
			}
			financial_calculate = { resource = energy min = 2000 max = 20000 }
			financial_calculate = { resource = minerals min = 4000 max = 40000 }
			financial_calculate = { resource = alloys min = 4000 max = 40000 }
			financial_calculate = { resource = volatile_motes min = 400 max = 4000 }
			financial_calculate = { resource = rare_crystals min = 400 max = 4000 }
			financial_calculate = { resource = exotic_gases min = 400 max = 4000 }
			if = {
				limit = { country_uses_food = yes }
				financial_calculate = { resource = food min = 2000 max = 20000 }
			}
			if = {
				limit = { country_uses_consumer_goods = yes }
				financial_calculate = { resource = consumer_goods min = 2000 max = 20000 }
			}
			country_event = {
				id = MECR.1042
			}
		}
	}
	
	option = {
		name = "MECR.1041.option"
		add_resource = { energy = 1 mult = financial_income_energy }
		add_resource = { minerals = 1 mult = financial_income_minerals }
		add_resource = { food = 1 mult = financial_income_food }
		add_resource = { alloys = 1 mult = financial_income_alloys }
		add_resource = { consumer_goods = 1 mult = financial_income_consumer_goods }
		add_resource = { volatile_motes = 1 mult = financial_income_volatile_motes }
		add_resource = { rare_crystals = 1 mult = financial_income_rare_crystals }
		add_resource = { exotic_gases = 1 mult = financial_income_exotic_gases }
	}
}
country_event = { #1042.【初次】帝国银行：lvl3：通知成员[1041.]
	id = MECR.1042
	title = "MECR.1042.title"
	desc = "MECR.1042.desc"
	picture = GFX_evt_coronation
	show_sound = event_galactic_market

	is_triggered_only = yes
	
	option = {
		name = "MECR.1042.option"
		tooltip = {
			add_resource = { energy = -1 mult = financial_hand_in_energy }
			add_resource = { minerals = -1 mult = financial_hand_in_minerals }
			add_resource = { food = -1 mult = financial_hand_in_food }
			add_resource = { alloys = -1 mult = financial_hand_in_alloys }
			add_resource = { consumer_goods = -1 mult = financial_hand_in_consumer_goods }
			add_resource = { volatile_motes = -1 mult = financial_hand_in_volatile_motes }
			add_resource = { rare_crystals = -1 mult = financial_hand_in_rare_crystals }
			add_resource = { exotic_gases = -1 mult = financial_hand_in_exotic_gases }
		}
	}
}
country_event = { #1043.【取消】帝国银行：lvl3：[MECR_law:imperial_bank_administration]
	id = MECR.1043
	hide_window = yes
	is_triggered_only = yes

	immediate = {
	}
}
country_event = { #1050.【每月计算】【降频调整】帝国科学院：lvl2：高级科学家数量[1010.] [MECR_law:imperial_academy_of_sciences_research_integration]
	id = MECR.1050
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			set_variable = { which = iaos2_scientist_bonus value = 0 }
			every_member = {
				every_owned_leader = {
					limit = {
						leader_class = scientist
						has_skill >= 5
					}
					prevprev = {
						change_variable = { which = iaos2_scientist_bonus value = 1 }
					}
				}
				every_owned_leader = {
					limit = {
						leader_class = scientist
						has_skill >= 7
					}
					prevprev = {
						change_variable = { which = iaos2_scientist_bonus value = 1 }
					}
				}
			}
			every_member = {
				remove_modifier = resolution_emperor_imperial_academy_of_sciences_lvl2_scientist_bonus
				# 根据是否降频设置modifier定时器时长
				if = {
					limit = { NOT = { has_global_flag = flag_MECR_frequency_reduction } }
					add_modifier = {
						modifier = resolution_emperor_imperial_academy_of_sciences_lvl2_scientist_bonus
						multiplier = prev.iaos2_scientist_bonus
						days = 31
					}
				}
				else = {
					add_modifier = {
						modifier = resolution_emperor_imperial_academy_of_sciences_lvl2_scientist_bonus
						multiplier = prev.iaos2_scientist_bonus
						days = 361
					}
				}
			}
		}
	}
}
country_event = { #1051.【初次】帝国科学院：lvl3：通知+拷贝科技(1230.)[MECR_law:imperial_academy_of_sciences_technical_unification]
	id = MECR.1051
	title = "MECR.1051.title"
	desc = "MECR.1051.desc"
	picture = GFX_evt_physics_research
	show_sound = event_laboratory_sound
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_galactic_emperor = yes }
			country_event = {
				id = MECR.1230
			}
		}
	}

	option = {
		name = "MARVELOUS"
	}
}
country_event = { #1052.【其他触发】【降频取消】帝国科学院：lvl3：获得新科技时共享：第一步[on_tech_increased]
	id = MECR.1052
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = flag_MECR_frequency_reduction }
		is_galactic_community_member = yes
		has_galactic_emperor = yes
		has_federation = yes
		federation = { has_federation_law = imperial_academy_of_sciences_technical_unification }
		OR = {
			is_galactic_emperor = yes
			is_imperial_province = yes
		}
		NOR = {
			last_increased_tech = tech_akx_worm_1
			last_increased_tech = tech_akx_worm_2
			last_increased_tech = tech_akx_worm_3
			last_increased_tech = tech_algorithm_improvement
			last_increased_tech = tech_production_improvement
		}
	}

	immediate = {
		# 如果没有dummy，创建
		if = {
			limit = { NOT = { exists = event_target:ias3_tech_dummy } }
			create_country = {
				name = "IAS Tech Dummy"
				type = ias_tech_dummy
				ignore_initial_colony_error = yes
				ethos = {
					ethic = ethic_authoritarian
					ethic = ethic_spiritualist
					ethic = ethic_xenophile
				}
				authority = auth_imperial
				origin = origin_default
				civics = {
					civic = civic_philosopher_king
				}
				species = random
				flag = {
					icon = {
						category = "special"
						file = "the_empire.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"blue"
						"blue"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = ias3_tech_dummy
				}
			}
			create_country = {
				name = "IAS Tech Dummy Hive"
				type = ias_tech_dummy
				ignore_initial_colony_error = yes
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
				authority = auth_hive_mind
				origin = origin_default
				civics = {
					civic = civic_hive_subspace_ephapse
				}
				species = random
				flag = {
					icon = {
						category = "special"
						file = "the_empire.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"green"
						"green"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = ias3_tech_dummy_hive
				}
			}
			create_country = {
				name = "IAS Tech Dummy Machine"
				type = ias_tech_dummy
				ignore_initial_colony_error = yes
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
				authority = auth_machine_intelligence
				origin = origin_default
				civics = {
					civic = civic_machine_servitor
				}
				species = random
				flag = {
					icon = {
						category = "special"
						file = "the_empire.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"yellow"
						"yellow"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = ias3_tech_dummy_machine
				}
			}
		}
		# 拷贝一次科技
		if = {
			limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
			event_target:ias3_tech_dummy = {
				copy_techs_from = { target = root }
			}
		}
		else_if = {
			limit = { is_machine_empire = yes }
			event_target:ias3_tech_dummy_machine = {
				copy_techs_from = { target = root }
			}
		}
		else_if = {
			limit = { is_hive_empire = yes }
			event_target:ias3_tech_dummy_hive = {
				copy_techs_from = { target = root }
			}
		}
		set_timed_global_flag = {
			flag = ias3_tech_increased
			days = 3
		}
	}
}
country_event = { #1054.【每月计算】【降频取消】帝国科学院：lvl3：获得新科技时共享：第二步[1010.]
	id = MECR.1054
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = ias3_tech_increased
		NOT = { has_global_flag = flag_MECR_frequency_reduction }
	}

	immediate = {
		# dummy交换科技
		event_target:ias3_tech_dummy = {
			copy_techs_from = { target = event_target:ias3_tech_dummy_machine }
			copy_techs_from = { target = event_target:ias3_tech_dummy_hive }
		}
		event_target:ias3_tech_dummy_machine = {
			copy_techs_from = { target = event_target:ias3_tech_dummy }
			copy_techs_from = { target = event_target:ias3_tech_dummy_hive }
		}
		event_target:ias3_tech_dummy_hive = {
			copy_techs_from = { target = event_target:ias3_tech_dummy }
			copy_techs_from = { target = event_target:ias3_tech_dummy_machine }
		}
		# 拷贝二次科技
		every_galcom_member = {
			limit = {
				OR = {
					is_galactic_emperor = yes
					is_imperial_province = yes
				}
			}
			set_variable = { which = num_techs_before value = trigger:num_researched_techs }
			if = {
				limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
				copy_techs_from = {
					target = event_target:ias3_tech_dummy
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_production_improvement
					}
				}
			}
			else_if = {
				limit = { is_machine_empire = yes }
				copy_techs_from = {
					target = event_target:ias3_tech_dummy_machine
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_algorithm_improvement
					}
				}
			}
			else_if = {
				limit = { is_hive_empire = yes }
				copy_techs_from = {
					target = event_target:ias3_tech_dummy_hive
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_algorithm_improvement
					}
				}
			}
			set_variable = { which = num_techs_get value = trigger:num_researched_techs }
			subtract_variable = { which = num_techs_get value = num_techs_before }
			if = {
				limit = { check_variable = { which = num_techs_get value > 0 } }
				multiply_variable = { which = num_techs_get value = 3 }
				change_variable = {
					which = ias_get_new_tech_loyalty_bonus
					value = num_techs_get
				}
			}
		}
	}
}
country_event = { #1053.【每月计算】帝国科学院：lvl3：收纳科研点[1010.]
	id = MECR.1053
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		always = no
	}

	immediate = {
		set_variable = { which = iaos3_phy_receive value = 0 }
		set_variable = { which = iaos3_soc_receive value = 0 }
		set_variable = { which = iaos3_eng_receive value = 0 }
		every_federation_ally = {
			limit = { is_imperial_province = yes }
			export_resource_income_to_variable = { resource = physics_research variable = iaos3_phy }
			export_resource_income_to_variable = { resource = society_research variable = iaos3_soc }
			export_resource_income_to_variable = { resource = engineering_research variable = iaos3_eng }
			root = {
				change_variable = { which = iaos3_phy_receive value = prev.iaos3_phy }
				change_variable = { which = iaos3_soc_receive value = prev.iaos3_soc }
				change_variable = { which = iaos3_eng_receive value = prev.iaos3_eng }
			}
		}
		add_resource = { physics_research = 1 mult = iaos3_phy_receive }
		add_resource = { society_research = 1 mult = iaos3_soc_receive }
		add_resource = { engineering_research = 1 mult = iaos3_eng_receive }
	}
}
country_event = { #1060.【每月计算】帝国工程署：lvl2：租借工程队[1010.] [MECR_law:imperial_department_of_engineering_personnel_coordination]
	id = MECR.1060
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			set_variable = { which = idoe2_rented_megaconstructing_slot value = 0 }
			every_member = { #设置计数器
				limit = { NOT = { is_variable_set = idoe2_rent_in_count } }
				set_variable = { which = idoe2_rent_in_count value = 0 }
			}
			every_country = { #移除非成员国的借入借出
				limit = {
					OR = {
						has_modifier = rent_in_a_construction_group
						has_modifier = rent_out_a_construction_group
					}
					NOR = {
						is_same_value = root
						is_in_federation_with = root
					}
				}
				remove_modifier = rent_in_a_construction_group
				remove_modifier = rent_out_a_construction_group
			}
			# 计算
			every_member = {
				if = { #如果有借出，移除借出修正
					limit = { has_modifier = rent_out_a_construction_group }
					remove_modifier = rent_out_a_construction_group
					set_country_flag = flag_rent_out_prior
				}
				else_if = { #如果有借入，统计被借入的槽位个数
					limit = { has_modifier = rent_in_a_construction_group }
					prev = { change_variable = { which = idoe2_rented_megaconstructing_slot value = prev.idoe2_rent_in_count } }
				}
				#重设借入，避免bug
				remove_modifier = rent_in_a_construction_group
				if = {
					limit = { check_variable = { which = idoe2_rent_in_count value > 0 } }
					add_modifier = { modifier = rent_in_a_construction_group multiplier = idoe2_rent_in_count }
				}
				# 计算每个国家的槽位
				set_variable = {
					which = idoe2_free_megaconstructing_slot
					value = value:idoe2_free_megaconstructing_slot
				}
				if = { #找出可以借出的国家：如果有空位，
					limit = {
						check_variable = { which = idoe2_free_megaconstructing_slot value > 0 }
					}
					if = { #，有借入，减少一支借入
						limit = {
							has_modifier = rent_in_a_construction_group
							NOT = { has_country_flag = flag_idoe2_ai_recent_rent_players }
						}
						imperial_department_of_engineering_lvl2_return_megaconstructing_slot = yes
						prev = { subtract_variable = { which = idoe2_rented_megaconstructing_slot value = 1 } }
					}
					else_if = { #，无借入，不拒绝，代表可以借出
						limit = {
							NOT = { has_edict = refuse_to_rent_out_construction_groups }
						}
						set_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
					}
				}
			}
			#按借入的数量，给有借出资格的国家执行借出，优先借之前的
			while = {
				count = idoe2_rented_megaconstructing_slot
				if = {
					limit = {
						any_member = {
							has_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
							has_country_flag = flag_rent_out_prior
						}
					}
					random_member = {
						limit = {
							has_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
							has_country_flag = flag_rent_out_prior
						}
						remove_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
						remove_country_flag = flag_rent_out_prior
						add_modifier = {
							modifier = rent_out_a_construction_group
							days = 31
						}
						change_variable = { which = idoe2_free_megaconstructing_slot value = -1 }
					}
				}
				else = {
					random_member = {
						limit = { has_country_flag = flag_can_rent_out_megaconstructing_slot_monthly }
						remove_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
						add_modifier = {
							modifier = rent_out_a_construction_group
							days = 31
						}
						change_variable = { which = idoe2_free_megaconstructing_slot value = -1 }
						create_message = {
							type = MESSAGE_TYPE_IDOE2_RENT
							localization = "MESSAGE_TYPE_IDOE2_RENT_OUT"
							days = 7
							target = capital_scope
						}
					}
				}
			}
			# 清空多余的借出资格flag
			every_member = {
				limit = { has_country_flag = flag_can_rent_out_megaconstructing_slot_monthly }
				remove_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
			}
			every_member = {
				limit = { has_country_flag = flag_rent_out_prior }
				remove_country_flag = flag_rent_out_prior
				create_message = {
					type = MESSAGE_TYPE_IDOE2_RENT
					localization = "MESSAGE_TYPE_IDOE2_RETURN_BACK"
					days = 7
					target = capital_scope
				}
			}
			every_member = {
				set_variable = { which = idoe2_free_megaconstructing_slot value = value:idoe2_free_megaconstructing_slot }
			}
		}
		#create_message = {
		#	type = MESSAGE_TYPE_IDOE2_RENT
		#	localization = "MECR1060activated"
		#	days = 7
		#	target = capital_scope
		#}
	}
}
country_event = { #1061.帝国工程署：lvl2：令有需要的AI向有2个空闲的玩家租借工程队，帮玩家赚笔小钱[1010.]
	id = MECR.1061
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		federation = {
			OR = {
				has_federation_law = imperial_department_of_engineering_personnel_coordination
				has_federation_law = imperial_department_of_engineering_project_new_world
			}
		}
	}
	immediate = {
		federation = { #找想要借出的玩家
			random_member = {
				limit = {
					is_ai = no
					NOR = {
						has_modifier = rent_in_a_construction_group
						has_modifier = rent_out_a_construction_group
					}
				}
				set_variable = {
					which = idoe2_free_megaconstructing_slot
					value = value:idoe2_free_megaconstructing_slot
				}
				if = {
					limit = { check_variable = { which = idoe2_free_megaconstructing_slot value > 1 } }
					set_timed_country_flag = {
						flag = flag_idoe2_player_able_to_rent_out
						days = 1
					}
					federation = {
						every_member = { #找想要借入的ai
							limit = {
								is_ai = yes
								NOR = {
									has_modifier = rent_in_a_construction_group
									has_modifier = rent_out_a_construction_group
								}
							}
							set_variable = {
								which = idoe2_free_megaconstructing_slot
								value = value:idoe2_free_megaconstructing_slot
							}
							if = {
								limit = {
									check_variable = { which = idoe2_free_megaconstructing_slot value < 1 }
									resource_stockpile_compare = { resource = alloys value > 20000 }
									resource_stockpile_compare = { resource = influence value > 200 }
									resource_stockpile_compare = { resource = unity value > 6000 }
								}
								set_timed_country_flag = {
									flag = flag_idoe2_ai_able_to_rent_players
									days = 1
								}
							}
						}
						random_member = { #定向交割
							limit = {
								is_ai = yes
								has_country_flag = flag_idoe2_ai_able_to_rent_players
							}
							random_federation_ally = {
								limit = { has_country_flag = flag_idoe2_player_able_to_rent_out }
								remove_country_flag = flag_idoe2_player_able_to_rent_out
								add_modifier = {
									modifier = rent_out_a_construction_group
									days = 31
								}
								change_variable = { which = idoe2_free_megaconstructing_slot value = -1 }
								create_message = {
									type = MESSAGE_TYPE_IDOE2_RENT
									localization = "MESSAGE_TYPE_IDOE2_RENT_OUT"
									days = 7
									target = capital_scope
								}
								add_resource = {
									influence = 2.5
									unity = 200
								}
							}
							change_variable = { which = idoe2_rent_in_count value = 1 }
							remove_modifier = rent_in_a_construction_group
							add_modifier = { modifier = rent_in_a_construction_group multiplier = idoe2_rent_in_count }
							create_message = {
								type = MESSAGE_TYPE_IDOE2_RENT
								localization = "MESSAGE_TYPE_IDOE2_RENT_IN"
								days = 7
								target = capital_scope
							}
							set_timed_country_flag = {
								flag = flag_idoe2_cd
								days = 1
							}
							set_timed_country_flag = {
								flag = flag_idoe2_ai_recent_rent_players
								days = 60
							}
						}
					}
				}
			}
		}
	}
}
country_event = { #1070.【每月计算】【降频调整】帝国教育部：lvl3：完成的传统树[1010.] [MECR_law:imperial_department_of_engineering_personnel_coordination]
	id = MECR.1070
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			every_member = {
				limit = {
					OR = {
						is_galactic_emperor = yes
						is_imperial_province = yes
					}
				}
				if = {
					limit = { num_ascension_perk_slots > imoe3_ap_slot_num }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = adaptability }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = diplomacy }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = discovery }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = domination }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = expansion }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = harmony }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = mercantile }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = prosperity }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = subterfuge }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = supremacy }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = synchronicity }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = unyielding }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = versatility }
					# traditions in mods
					# Rogue Maid
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = service }
					# 工整传统
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_independent }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_development }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_laws }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_revival }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_industry }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_abstinence }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_economy }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_leaders }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_patience }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_wonders }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_environment_protection }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_art }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_courage }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_government }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_wisdom }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_loyal }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_chasingstars }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = tt_sovereignty }
					# 更多思潮无限
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = ancom }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = future }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = isolated }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = noble }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = piety }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = revolution }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = right }
					
					set_variable = { which = imoe3_ap_slot_num value = trigger:num_ascension_perk_slots }
				}
			}
			every_member = {
				limit = {
					OR = {
						is_galactic_emperor = yes
						is_imperial_province = yes
					}
				}
				remove_modifier = resolution_emperor_imperial_ministry_of_education_lvl_3
				# 根据是否降频设置modifier定时器时长
				if = {
					limit = { NOT = { has_global_flag = flag_MECR_frequency_reduction } }
					add_modifier = {
						modifier = resolution_emperor_imperial_ministry_of_education_lvl_3
						multiplier = prev.imoe3_bonus
						days = 31
					}
				}
				else = {
					add_modifier = {
						modifier = resolution_emperor_imperial_ministry_of_education_lvl_3
						multiplier = prev.imoe3_bonus
						days = 361
					}
				}
			}
		}
	}
}
country_event = { #1080.【每月计算】【降频直接】自由迁移的deposit检查[1010.] [MECR_law:free_migration_yes_imperium]
	id = MECR.1080
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			every_member = {
				if = {
					limit = { capital_scope = { NOT = { has_deposit = d_free_migration_imperial } } }
					capital_scope = { add_deposit = d_free_migration_imperial }
				}
				if = {
					limit = {
						any_owned_planet = {
							has_deposit = d_free_migration_imperial
							is_capital = no
						}
					}
					every_owned_planet = {
						limit = {
							has_deposit = d_free_migration_imperial
							is_capital = no
						}
						remove_deposit = d_free_migration_imperial
					}
				}
			}
		}
		every_country = {
			limit = {
				NOT = { is_in_federation_with = root }
				any_owned_planet = { has_deposit = d_free_migration_imperial }
			}
			every_owned_planet = {
				limit = { has_deposit = d_free_migration_imperial }
				remove_deposit = d_free_migration_imperial
			}
		}
	}
}
country_event = { #1090.【每月计算】帝国国防部：lvl2：新国家司令/将领增加特质[1010.] [MECR_law:imperial_ministry_of_defence_strategy_institute]
	id = MECR.1090
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = {
				OR = {
					is_same_value = root
					is_in_federation_with = root
				}
				NOT = { has_country_flag = flag_imod2_traits_added }
			}
			every_owned_leader = {
				limit = {
					NOT = { has_trait = leader_trait_imperial_strategy_institute }
					OR = {
						leader_class = admiral
						leader_class = general
					}
				}
				add_trait = leader_trait_imperial_strategy_institute
			}
			every_pool_leader = {
				limit = {
					NOT = { has_trait = leader_trait_imperial_strategy_institute }
					OR = {
						leader_class = admiral
						leader_class = general
					}
				}
				add_trait = leader_trait_imperial_strategy_institute
			}
			set_country_flag = flag_imod2_traits_added
		}
	}
}
country_event = { #1091.【其他触发】帝国国防部：lvl2：新司令/将领增加特质[on_leader_spawned]
	id = MECR.1091
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_galactic_community_member = yes
		has_federation = yes
		federation = {
			OR = {
				has_federation_law = imperial_ministry_of_defence_strategy_institute
				has_federation_law = imperial_ministry_of_defence_joint_headquarter
			}
		}
		from = {
			OR = {
				leader_class = admiral
				leader_class = general
			}
		}
	}

	immediate = {
		from = {
			add_trait = leader_trait_imperial_strategy_institute
		}
	}
}
country_event = { #1092.【年检】帝国国防部：--lvl2：不满足条件时国家司令/将领移除特质[on_yearly_pulse_country] [MECR_law:imperial_ministry_of_defence_executive_office]
	id = MECR.1092
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = flag_imod2_traits_added
		NAND = {
			has_federation = yes
			federation = {
				OR = {
					has_federation_law = imperial_ministry_of_defence_strategy_institute
					has_federation_law = imperial_ministry_of_defence_joint_headquarter
				}
			}
		}
	}

	immediate = {
		every_owned_leader = {
			limit = { has_trait = leader_trait_imperial_strategy_institute }
			remove_trait = leader_trait_imperial_strategy_institute
		}
		every_pool_leader = {
			limit = { has_trait = leader_trait_imperial_strategy_institute }
			remove_trait = leader_trait_imperial_strategy_institute
		}
		remove_country_flag = flag_imod2_traits_added
	}
}
fleet_event = { #1093.【其他触发】帝国国防部：lvl3：退回的舰队移除修正[on_fleet_lease_ended]
	id = MECR.1093
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_ship = { has_modifier = fleet_modifier_no_nc_usage_for_called_fleet }
	}
	immediate = {
		every_owned_ship = { remove_modifier = fleet_modifier_no_nc_usage_for_called_fleet }
	}
}

country_event = { #1100.帝国统一：准备吞并(1101.1104.)[resolution_emperor_imperial_unification] [1010.]
	id = MECR.1100
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			save_cohesion = yes
			every_member = { #能吞并的设为帝国参议员
				limit = {
					NOT = { has_country_flag = flag_country_recent_become_province }
					is_country_type = default
					is_galactic_emperor = no
					is_subject = yes
					NOT = { any_agreement = { agreement_preset = preset_imperial_special_economic_zone } }
					# 根据皇帝政体决定哪些国家能被整合
					if = {
						limit = { has_galactic_emperor = yes }
						if = { #非格式塔
							limit = { galactic_emperor = { NOT = { has_ethic = ethic_gestalt_consciousness } } }
							if = {
								limit = { NOT = { has_global_flag = flag_rogue_maid_mod_activated } }
								NOT = { has_ethic = ethic_gestalt_consciousness }
							}
							else = {
								OR = {
									NOT = { has_ethic = ethic_gestalt_consciousness }
									has_civic = civic_machine_servitor
								}
							}
						}
						else_if = { #智械妹抖
							limit = { galactic_emperor = { has_civic = civic_machine_servitor } }
							is_hive_empire = no
						}
						else_if = { #智械
							limit = { galactic_emperor = { is_machine_empire = yes } }
							is_machine_empire = yes
						}
						else_if = { #蜂群
							limit = { galactic_emperor = { is_hive_empire = yes } }
							is_hive_empire = yes
						}
					}
				}
				#set_name = "[This.GetName] $rename_imperial_senator$"
				set_country_type = imperial_senator
				become_imperial_vassal = { type = senator }
				if = { #如果是小灰的主人，处理小灰
					limit = {
						exists = event_target:gray_owner
						is_same_value = event_target:gray_owner
					}
					if = {
						limit = {
							OR = {
								has_country_flag = gray_warship_active
								has_country_flag = gray_army_active
							}
						}
						create_gray_governor = yes
					}
				}
				every_owned_leader = {
					limit = { NOR = { leader_class = ruler is_event_leader = yes } }
					set_owner = galactic_emperor
				}
				every_owned_fleet = {
					limit = { NOT = { any_controlled_ship = { is_ship_class = shipclass_starbase } } }
					set_owner = galactic_emperor
				}
				#every_owned_army = {
				#	limit = { is_defensive_army = no }
				#	set_owner = galactic_emperor
				#}
				join_alliance = { who = galactic_emperor override_requirements = yes }
			}
			every_member = { #不能吞并的设为经济特区
				limit = {
					NOT = { has_country_flag = flag_country_recent_become_province }
					NOT = { is_country_type = imperial_senator }
					is_galactic_emperor = no
					is_subject = yes
					NOT = { any_agreement = { agreement_preset = preset_imperial_special_economic_zone } }
				}
				#set_name = "[This.GetName] $rename_imperial_special_economic_zone$"
				become_imperial_vassal = { type = special_economic_zone }
				if = { #如果是小灰的主人，处理小灰
					limit = {
						exists = event_target:gray_owner
						is_same_value = event_target:gray_owner
					}
					if = {
						limit = {
							OR = {
								has_country_flag = gray_warship_active
								has_country_flag = gray_army_active
							}
						}
						create_gray_governor = yes
					}
				}
				join_alliance = { who = galactic_emperor override_requirements = yes }
			}
			load_cohesion = yes
		}
		if = {
			limit = { NOT = { has_country_flag = flag_mecr1101_ongoing } }
			country_event = {
				id = MECR.1101
				days = 1
			}
		}
		every_federation_ally = {
			limit = {
				is_subject = yes
				any_agreement = { agreement_preset = preset_imperial_senator }
				num_owned_relics > 0
			}
			country_event = {
				id = MECR.1104
			}
		}
	}
}
country_event = { #1101.帝国统一：执行吞并(循环.1103.)[循环.1101.]
	id = MECR.1101
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			is_country_type = imperial_senator
			OR = {
				count_owned_planet = { count > 0 }
				count_owned_fleet = { count > 0 }
			}
		}
	}
	immediate = {
		federation = { save_cohesion = yes }
		random_country = { #随机选一个参议员，吞并50个星系
			limit = {
				is_country_type = imperial_senator
				OR = {
					count_owned_fleet = { count > 0 }
					count_owned_planet = { count > 0 }
				}
			}
			while = { #移交星基
				count = value:imperium_integration_speed
				random_owned_fleet = {
					set_owner = galactic_emperor
					if = { #如果是升级星基，添加主权信标
						limit = {
							any_controlled_ship = { is_ship_class = shipclass_starbase }
							solar_system = {
								starbase = {
									has_starbase_size > starbase_outpost
									NOT = { has_starbase_building = sb_building_sovereign_beacon }
								}
							}
						}
						solar_system = {
							starbase = {
								set_starbase_flag = flag_starbase_from_senetor
								set_starbase_building = {
									building = sb_building_sovereign_beacon
									slot = 1
								}
							}
						}
					}
					solar_system = {
						every_system_planet = {
							limit = {
								has_owner = yes
								owner = { is_galactic_emperor = no }
							}
							set_owner = galactic_emperor
						}
					}
				}
			}
			if = { #移交无星基的星球
				limit = { any_owned_planet = { solar_system = { has_owner = no } } }
				every_owned_planet = {
					limit = { solar_system = { has_owner = no } }
					set_owner = galactic_emperor
				}
			}
			if = { #恢复联邦成员
				limit = { NOT = { is_in_federation_with = galactic_emperor } }
				join_alliance = { who = galactic_emperor override_requirements = yes }
			}
			if = { #转移资源
				limit = { NOT = { has_country_flag = resource_turned_over } }
				senetor_turn_over = { resource = energy }
				senetor_turn_over = { resource = minerals }
				senetor_turn_over = { resource = food }
				senetor_turn_over = { resource = alloys }
				senetor_turn_over = { resource = consumer_goods }
				senetor_turn_over = { resource = exotic_gases }
				senetor_turn_over = { resource = rare_crystals }
				senetor_turn_over = { resource = volatile_motes }
				senetor_turn_over = { resource = sr_dark_matter }
				senetor_turn_over = { resource = sr_living_metal }
				senetor_turn_over = { resource = sr_zro }
				senetor_turn_over = { resource = nanites }
				set_country_flag = resource_turned_over
			}
		}
		federation = { load_cohesion = yes }
		if = { #下一天循环执行
			limit = {
				any_country = {
					is_country_type = imperial_senator
					OR = {
						count_owned_fleet = { count > 0 }
						count_owned_planet = { count > 0 }
					}
				}
			}
			set_timed_country_flag = {
				flag = flag_mecr1101_ongoing
				days = 1
			}
			country_event = {
				id = MECR.1101
				days = 1
			}
		}
		else = {
			every_federation_ally = {
				limit = { is_country_type = imperial_senator }
				every_owned_army = {
					limit = { is_defensive_army = no }
					set_owner = galactic_emperor
				}
			}
			country_event = {
				id = MECR.1103
				days = 3
			}
		}
		capital_scope = { change_variable = { which = countmecr1101 value = 1 } } #debug观察
	}
}
country_event = { #1102.开始吞并通知，改联邦法律[resolution_emperor_imperial_unification]
	id = MECR.1102
	title = "MECR.1102.title"
	desc = {
		trigger = { is_galactic_emperor = yes }
		text = "MECR.1102.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
			# 根据皇帝政体决定哪些国家能被整合
			if = {
				limit = { has_galactic_emperor = yes }
				if = { #非格式塔
					limit = { galactic_emperor = { NOT = { has_ethic = ethic_gestalt_consciousness } } }
					if = {
						limit = { NOT = { has_global_flag = flag_rogue_maid_mod_activated } }
						NOT = { has_ethic = ethic_gestalt_consciousness }
					}
					else = {
						OR = {
							NOT = { has_ethic = ethic_gestalt_consciousness }
							has_civic = civic_machine_servitor
						}
					}
				}
				else_if = { #智械妹抖
					limit = { galactic_emperor = { has_civic = civic_machine_servitor } }
					is_hive_empire = no
				}
				else_if = { #智械
					limit = { galactic_emperor = { is_machine_empire = yes } }
					is_machine_empire = yes
				}
				else_if = { #蜂群
					limit = { galactic_emperor = { is_hive_empire = yes } }
					is_hive_empire = yes
				}
			}
		}
		text = "MECR.1102.desc.b"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
			# 根据皇帝政体决定哪些国家不能被整合
			if = {
				limit = { has_galactic_emperor = yes }
				if = { #非格式塔
					limit = { galactic_emperor = { NOT = { has_ethic = ethic_gestalt_consciousness } } }
					if = {
						limit = { NOT = { has_global_flag = flag_rogue_maid_mod_activated } }
						has_ethic = ethic_gestalt_consciousness
					}
					else = {
						has_ethic = ethic_gestalt_consciousness
						NOT = { has_civic = civic_machine_servitor }
					}
				}
				else_if = { #智械妹抖
					limit = { galactic_emperor = { has_civic = civic_machine_servitor } }
					is_hive_empire = yes
				}
				else_if = { #智械
					limit = { galactic_emperor = { is_machine_empire = yes } }
					is_machine_empire = no
				}
				else_if = { #蜂群
					limit = { galactic_emperor = { is_hive_empire = yes } }
					is_hive_empire = no
				}
			}
		}
		text = "MECR.1102.desc.c"
	}
	desc = {
		trigger = { is_galactic_community_member = no }
		text = "MECR.1102.desc.d"
	}
	picture = GFX_evt_coronation
	show_sound = event_administrative_work
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_galactic_emperor = yes }
			set_global_flag = imperial_unification_start
		}
	}

	option = {
		name = "MECR.1102.option.a"
		trigger = {
			is_galactic_emperor = yes
			is_ai = no
		}
		custom_tooltip = "MECR.1102.option.a.tooltip"
		hidden_effect = {
			remove_global_flag = imperium_integration_speed_slow
			remove_global_flag = imperium_integration_speed_very_slow
		}
		federation = { #设置法律，增加联邦经验
			set_federation_law = centralization_imperium_unified_imperium
			add_federation_experience = 120
		}
	}
	option = {
		name = "MECR.1102.option.a.slow"
		trigger = {
			is_galactic_emperor = yes
		}
		custom_tooltip = "MECR.1102.option.a.slow.tooltip"
		hidden_effect = {
			remove_global_flag = imperium_integration_speed_very_slow
			set_global_flag = imperium_integration_speed_slow
		}
		federation = { #设置法律，增加联邦经验
			set_federation_law = centralization_imperium_unified_imperium
			add_federation_experience = 120
		}
	}
	option = {
		name = "MECR.1102.option.a.veryslow"
		trigger = {
			is_galactic_emperor = yes
			is_ai = no
		}
		custom_tooltip = "MECR.1102.option.a.veryslow.tooltip"
		hidden_effect = {
			remove_global_flag = imperium_integration_speed_slow
			set_global_flag = imperium_integration_speed_very_slow
		}
		federation = { #设置法律，增加联邦经验
			set_federation_law = centralization_imperium_unified_imperium
			add_federation_experience = 120
		}
	}
	option = {
		name = "MECR.1102.option.b"
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
		}
	}
	option = {
		name = "MECR.1102.option.c"
		custom_tooltip = "MECR.1102.option.c.tooltip"
		trigger = {
			is_galactic_community_member = no
		}
	}
}
country_event = { #1103.吞并完成通知，赢得游戏[1101.]
	id = MECR.1103
	title = "MECR.1103.title"
	desc = "MECR.1103.desc"
	picture = GFX_evt_coronation
	show_sound = event_celebration
	is_triggered_only = yes

	option = {
		name = "MECR.1103.option"
		win = yes
		add_imperial_authority = 200
		federation = { add_cohesion = 200 }
	}
}
country_event = { #1104.帝国统一：夺取遗珍[1010.1100.]
	id = MECR.1104
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_subject = yes
		any_agreement = { agreement_preset = preset_imperial_senator }
		num_owned_relics > 0
	}

	immediate = {
		galactic_emperor = {
			steal_relic = {
				target = root
				relic = all
			}
			create_message = {
				type = MESSAGE_TYPE_EMPEROR_TAKE_RELICS
				localization = "MESSAGE_TYPE_EMPEROR_TAKE_RELICS_DESC_subject_event"
				days = 30
				target = capital_scope
			}
		}
	}
}
country_event = { #1105.整合行省：夺取遗珍[on_subject_integrated]
	id = MECR.1105
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
		from = {
			is_subject = yes
			is_imperial_province = yes
			num_owned_relics > 0
		}
	}

	immediate = {
		steal_relic = {
			target = from
			relic = all
		}
		create_message = {
			type = MESSAGE_TYPE_EMPEROR_TAKE_RELICS
			localization = "MESSAGE_TYPE_EMPEROR_TAKE_RELICS_DESC_overlord_event"
			days = 30
			target = capital_scope
		}
	}
}

country_event = { #1200.帝国联邦每年(1220.)[on_yearly_pulse_country]
	id = MECR.1200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
		is_active_resolution = resolution_emperor_the_step_towards_a_united_galaxy
	}

	immediate = {
		if = { #总目录
			limit = {
				exists = federation 
				federation = { has_federation_perk = imperium_federation_passive }
			}
			# 法律：帝国海军，计算ia得到的征召舰容(1220.)【延迟十天】【降频调整】
			if = {
				limit = {
					federation = {
						OR = {
							has_federation_law = imperial_armada_conscription_low
							has_federation_law = imperial_armada_conscription_mid
							has_federation_law = imperial_armada_conscription_high
						}
					}
				}
				country_event = {
					id = MECR.1220
					days = 10
				}
			}
			# 法律：帝国银行：lvl3：年度统计(1240.)
			if = {
				limit = {
					federation = { has_federation_law = imperial_bank_control }
					NOT = { has_global_flag = flag_MECR_ib_frequency_reduction }
				}
				country_event = {
					id = MECR.1240
				}
			}
			# 法律：帝国科学院：lvl3，每年共享科技(1230.)【降频启用】
			if = {
				limit = {
					federation = {
						has_federation_law = imperial_academy_of_sciences_technical_unification
					}
				}
				country_event = {
					id = MECR.1230
					days = 10
				}
			}
		}
	}
}
country_event = { #1220.【每年计算】帝国海军：刷新容量计算[1200.]
	id = MECR.1220
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# 征召的舰容
		set_variable = { which = naval_cap_ia_received value = 0 } 
		federation = {
			every_member = {
				limit = { NOT = { has_country_flag = flag_ia_service_exemption } }
				remove_modifier = ia_take_naval_cap
			}
		}
		country_event = {
			id = MECR.1221
			days = 1
		}
	}
}
country_event = { #1221.【每年计算】【降频调整】帝国海军：贡献容量与额外维护费[1200.]
	id = MECR.1221
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# 征召的舰容
		set_variable = { which = naval_cap_ia_received value = 0 } 
		federation = {
			every_member = {
				limit = { NOT = { has_country_flag = flag_ia_service_exemption } }

				#求当前舰容mult乘数
				export_modifier_to_variable = {
					modifier = country_naval_cap_mult
					variable = IACount_country_naval_cap_mult
				}
				change_variable = {
					which = IACount_country_naval_cap_mult
					value = 1
				}
				#求当前基础舰容
				export_trigger_value_to_variable = {
					trigger = max_naval_capacity
					variable = IACount_base_naval_cap
				}
				divide_variable = {
					which = IACount_base_naval_cap
					value = IACount_country_naval_cap_mult
				}
				#求应扣除的舰容mult乘数
				set_variable = {
					which = IACount_transfer_to_ia_percent
					value = IACount_country_naval_cap_mult
				}
				multiply_variable = {
					which = IACount_transfer_to_ia_percent
					value = value:ia_transfer_percent
				}
				set_variable = {
					which = IACount_transfer_to_ia_percent_GET
					value = IACount_transfer_to_ia_percent
				}
				#根据应扣除的舰容mult乘数添加修正
				if = { #戍邦特化型-25%需要降低的舰容
					limit = {
						is_imperial_province = yes
						any_agreement = { has_active_specialization = specialist_bulwark }
					}
					multiply_variable = {
						which = IACount_transfer_to_ia_percent
						value = 0.75
					}
				}
				# 根据是否降频设置modifier定时器时长
				if = {
					limit = { NOT = { has_global_flag = flag_MECR_ia_frequency_reduction } }
					add_modifier = {
						modifier = ia_take_naval_cap
						multiplier = IACount_transfer_to_ia_percent
						days = 31
					}
				}
				else = {
					add_modifier = {
						modifier = ia_take_naval_cap
						multiplier = IACount_transfer_to_ia_percent
						days = 361
					}
				}
				#扣除的舰容mult修正×基础舰容=贡献的舰容值
				set_variable = {
					which = IACount_transfer_amount
					value = IACount_base_naval_cap
				}
				multiply_variable = {
					which = IACount_transfer_amount
					value = IACount_transfer_to_ia_percent_GET
				}
				root = { change_variable = { which = naval_cap_ia_received value = prev.IACount_transfer_amount } }
			}
		}
		remove_modifier = ia_receive_naval_cap
		if = {
			limit = { check_variable = { which = naval_cap_ia_received value > 0 } }
			# 根据是否降频设置modifier定时器时长
			if = {
				limit = { NOT = { has_global_flag = flag_MECR_ia_frequency_reduction } }
				add_modifier = {
					modifier = ia_receive_naval_cap
					multiplier = naval_cap_ia_received
					days = 31
				}
			}
			else = {
				add_modifier = {
					modifier = ia_receive_naval_cap
					multiplier = naval_cap_ia_received
					days = 361
				}
			}
		}
		# 没收舰队
		if = {
			limit = { has_global_flag = imperium_recover_fleet_flag }
			imperium_recover_fleet = yes
			remove_global_flag = imperium_recover_fleet_flag
		}
		# 超出舰容的维护费
		remove_modifier = ia_naval_cap_over_upkeep
		set_variable = { which = ia_fleet_size value = 0 }
		every_owned_fleet = {
			limit = { has_ship_owner_type = galactic_community }
			root = { change_variable = { which = ia_fleet_size value = prev.trigger:fleet_size } }
		}
		export_modifier_to_variable = { modifier = country_community_gdf_naval_capacity variable = ia_naval_cap }
		subtract_variable = { which = ia_fleet_size value = ia_naval_cap }
		if = {
			limit = { check_variable = { which = ia_fleet_size value > 0 } }
			# 根据是否降频设置modifier定时器时长
			if = {
				limit = { NOT = { has_global_flag = flag_MECR_ia_frequency_reduction } }
				add_modifier = {
					modifier = ia_naval_cap_over_upkeep
					multiplier = ia_fleet_size
					days = 31
				}
			}
			else = {
				add_modifier = {
					modifier = ia_naval_cap_over_upkeep
					multiplier = ia_fleet_size
					days = 361
				}
			}
		}
	}
}
country_event = { #1230.【每年计算】【降频启用】帝国科学院：lvl3：拷贝科技[1200.]
	id = MECR.1230
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# 创建dummy
		if = {
			limit = { NOT = { exists = event_target:ias3_tech_dummy } }
			create_country = {
				name = "IAS Tech Dummy"
				type = ias_tech_dummy
				ignore_initial_colony_error = yes
				ethos = {
					ethic = ethic_authoritarian
					ethic = ethic_spiritualist
					ethic = ethic_xenophile
				}
				authority = auth_imperial
				origin = origin_default
				civics = {
					civic = civic_philosopher_king
				}
				species = random
				flag = {
					icon = {
						category = "special"
						file = "the_empire.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"blue"
						"blue"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = ias3_tech_dummy
				}
			}
			create_country = {
				name = "IAS Tech Dummy Hive"
				type = ias_tech_dummy
				ignore_initial_colony_error = yes
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
				authority = auth_hive_mind
				origin = origin_default
				civics = {
					civic = civic_hive_subspace_ephapse
				}
				species = random
				flag = {
					icon = {
						category = "special"
						file = "the_empire.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"green"
						"green"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = ias3_tech_dummy_hive
				}
			}
			create_country = {
				name = "IAS Tech Dummy Machine"
				type = ias_tech_dummy
				ignore_initial_colony_error = yes
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
				authority = auth_machine_intelligence
				origin = origin_default
				civics = {
					civic = civic_machine_servitor
				}
				species = random
				flag = {
					icon = {
						category = "special"
						file = "the_empire.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"yellow"
						"yellow"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = ias3_tech_dummy_machine
				}
			}
		}
		# 拷贝一次科技
		every_galcom_member = {
			limit = {
				OR = {
					is_galactic_emperor = yes
					is_imperial_province = yes
				}
			}
			if = {
				limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
				event_target:ias3_tech_dummy = {
					copy_techs_from = { target = prev }
				}
			}
			else_if = {
				limit = { is_machine_empire = yes }
				event_target:ias3_tech_dummy_machine = {
					copy_techs_from = { target = prev }
				}
			}
			else_if = {
				limit = { is_hive_empire = yes }
				event_target:ias3_tech_dummy_hive = {
					copy_techs_from = { target = prev }
				}
			}
			set_timed_global_flag = {
				flag = ias3_tech_increased
				days = 3
			}
		}
		# dummy交换科技
		event_target:ias3_tech_dummy = {
			copy_techs_from = { target = event_target:ias3_tech_dummy_machine }
			copy_techs_from = { target = event_target:ias3_tech_dummy_hive }
		}
		event_target:ias3_tech_dummy_machine = {
			copy_techs_from = { target = event_target:ias3_tech_dummy }
			copy_techs_from = { target = event_target:ias3_tech_dummy_hive }
		}
		event_target:ias3_tech_dummy_hive = {
			copy_techs_from = { target = event_target:ias3_tech_dummy }
			copy_techs_from = { target = event_target:ias3_tech_dummy_machine }
		}
		# 拷贝二次科技
		every_galcom_member = {
			limit = {
				OR = {
					is_galactic_emperor = yes
					is_imperial_province = yes
				}
			}
			set_variable = { which = num_techs_before value = trigger:num_researched_techs }
			if = {
				limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
				copy_techs_from = {
					target = event_target:ias3_tech_dummy
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_production_improvement
					}
				}
			}
			else_if = {
				limit = { is_machine_empire = yes }
				copy_techs_from = {
					target = event_target:ias3_tech_dummy_machine
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_algorithm_improvement
					}
				}
			}
			else_if = {
				limit = { is_hive_empire = yes }
				copy_techs_from = {
					target = event_target:ias3_tech_dummy_hive
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_algorithm_improvement
					}
				}
			}
			set_variable = { which = num_techs_get value = trigger:num_researched_techs }
			subtract_variable = { which = num_techs_get value = num_techs_before }
			if = {
				limit = { check_variable = { which = num_techs_get value > 0 } }
				multiply_variable = { which = num_techs_get value = 3 }
				change_variable = {
					which = ias_get_new_tech_loyalty_bonus
					value = num_techs_get
				}
			}
		}
	}
}
country_event = { #1240.【每年计算】帝国银行：lvl3：年度统计[1200.]
	id = MECR.1240
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = flag_MECR_ib_frequency_reduction }
	}

	immediate = {
		set_variable = { which = month value = 0 }
		if = {
			limit = { NOT = { has_global_flag = flag_financial_income_statistic } }
			set_global_flag = flag_financial_income_statistic
		}
		else = {
			financial_income_year_statistic = yes
		}
	}
}

event = { #1300.帝国权威过低时，牺牲帝国联邦等级换取50权威，每十年最多一次[on_yearly_pulse]
	id = MECR.1300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_galactic_emperor = yes
		is_active_resolution = resolution_emperor_the_step_towards_a_united_galaxy
		imperial_authority < 50
		galactic_emperor = {
			has_federation = yes
			federation = {
				has_federation_perk = imperium_federation_passive
				federation_level > 1
				NOT = { has_federation_flag = flag_imperium_federation_level_to_auth }
			}
		}
	}

	immediate = {
		galactic_emperor = {
			country_event = {
				id = MECR.1301
			}
		}
	}
}
country_event = { #1301.帝国联邦等级换取权威，皇帝事件[1300.]
	id = MECR.1301
	title = "MECR.1301.title"
	desc = "MECR.1301.desc"
	picture = GFX_evt_galactic_empire
	show_sound = event_red_alert
	is_triggered_only = yes

	option = {
		name = "MECR.1301.option.a"
		add_resource = {
			influence = -100
		}
		federation = {
			switch = {
				trigger = federation_level
				6 = { add_federation_experience = -12000 }
				5 = { add_federation_experience = -960 }
				4 = { add_federation_experience = -720 }
				3 = { add_federation_experience = -480 }
				default = { add_federation_experience = -240 }
			}
			add_cohesion = -100
		}
		add_imperial_authority = 50
		hidden_effect = {
			federation = {
				set_timed_federation_flag = {
					flag = flag_imperium_federation_level_to_auth
					days = 3600
				}
			}
			every_federation_ally = {
				country_event = {
					id = MECR.1302
				}
			}
		}
	}
	option = {
		name = "MECR.1301.option.b"
		hidden_effect = {
			federation = {
				set_timed_federation_flag = {
					flag = flag_imperium_federation_level_to_auth
					days = 900
				}
			}
		}
	}
}
country_event = { #1302.帝国联邦等级换取权威，成员通知[1301.]
	id = MECR.1302
	title = "MECR.1302.title"
	desc = "MECR.1302.desc"
	picture = GFX_evt_galactic_empire
	show_sound = event_conversation
	is_triggered_only = yes

	option = {
		name = "OK"
		default_hide_option = yes
		add_resource = {
			influence = 100
		}
		tooltip = {
			federation = {
				switch = {
					trigger = federation_level
					6 = { add_federation_experience = -12000 }
					5 = { add_federation_experience = -960 }
					4 = { add_federation_experience = -720 }
					3 = { add_federation_experience = -480 }
					default = { add_federation_experience = -240 }
				}
				add_cohesion = -100
			}
			add_imperial_authority = 50
		}
	}
}

planet_event = { #1501.帝安局镇压叛乱决议的后续效果(1501.)[decision_isd_against_planetary_revolt]
	id = MECR.1501
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_modifier = planet_modifier_isd_against_planetary_revolt
	}

	immediate = {
		if = {
			limit = {
				owner = {
					any_situation = {
						is_situation_type = situation_planetary_revolt
						target = { is_same_value = root }
					}
				}
			}
			planet_event = {
				id = MECR.1501
				days = 30
			}
		}
		else = {
			remove_modifier = planet_modifier_isd_against_planetary_revolt
		}
	}
}

# 1991.-1996. 通过议案之后延迟一天设置法律 
country_event = {
	id = MECR.1991
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_perk = imperium_federation_passive }
				set_federation_law = imperial_bank_supervision
			}
		}
	}
}
country_event = {
	id = MECR.1992
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_perk = imperium_federation_passive }
				set_federation_law = isd_political_police
			}
		}
	}
}
country_event = {
	id = MECR.1993
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_perk = imperium_federation_passive }
				set_federation_law = imperial_academy_of_sciences_talent_concentration
			}
		}
	}
}
country_event = {
	id = MECR.1994
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_perk = imperium_federation_passive }
				set_federation_law = imperial_department_of_engineering_standardized_construction
			}
		}
	}
}
country_event = {
	id = MECR.1995
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_perk = imperium_federation_passive }
				set_federation_law = imperial_ministry_of_education_science_education_reforming
			}
		}
	}
}
country_event = {
	id = MECR.1996
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_perk = imperium_federation_passive }
				set_federation_law = imperial_ministry_of_defence_executive_office
			}
		}
	}
}


####################################################################################################
####################################################################################################
####################### 银河邦联 ######################## Galactic Conederation #####################
####################################################################################################
####################################################################################################

country_event = { #2000.银河邦联建立前夜
	id = MECR.2000
	title = "MECR.2000.title"
	desc = {
		trigger = { is_gestalt = no }
		text = "MECR.2000.desc"
	}
	desc = {
		trigger = { is_gestalt = yes }
		text = "MECR.2000.desc.gestalt"
	}
	picture = GFX_evt_arguing_senate
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_federation = yes
				federation = { NOT = { has_federation_flag = special_federation } }
			}
			federation = {
				switch = {
					trigger = has_federation_type
					trade_federation = { set_global_flag = confederation_bedrock_trade set_global_flag = confederation_bedrock_active }
					research_federation = { set_global_flag = confederation_bedrock_research set_global_flag = confederation_bedrock_active }
					military_federation = { set_global_flag = confederation_bedrock_military set_global_flag = confederation_bedrock_active }
					hegemony_federation = { set_global_flag = confederation_bedrock_hegemony set_global_flag = confederation_bedrock_active }
					spiritualist_federation = { set_global_flag = confederation_bedrock_spiritualist set_global_flag = confederation_bedrock_active }
					TT_communist_federation = { set_global_flag = confederation_bedrock_TT_communist set_global_flag = confederation_bedrock_active }
					default = { set_global_flag = confederation_bedrock_default set_global_flag = confederation_bedrock_active }
				}
			}
		}
		else = {
			remove_global_flag = confederation_bedrock_active
			remove_global_flag = confederation_bedrock_trade
			remove_global_flag = confederation_bedrock_research
			remove_global_flag = confederation_bedrock_military
			remove_global_flag = confederation_bedrock_hegemony
			remove_global_flag = confederation_bedrock_default
		}
	}

	# 原版
	option = { #博爱
		name = "MECR.2000.option.fraternity"
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_xenophile
		}
		custom_tooltip = "MECR.2000.option.fraternity.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_xenophile = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_xenophile = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_xenophobe = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_xenophobe = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_fraternity
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_xenophile }
			modifier = { mult = 8		has_ethic = ethic_xenophile }
			modifier = { mult = 0.12	has_ethic = ethic_xenophobe }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_xenophobe }
		}
	}
	option = { #和平
		name = "MECR.2000.option.peace"
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_pacifist
		}
		custom_tooltip = "MECR.2000.option.peace.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_pacifist = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_pacifist = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_militarist = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_militarist = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_peace
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_pacifist }
			modifier = { mult = 8		has_ethic = ethic_pacifist }
			modifier = { mult = 0.12	has_ethic = ethic_militarist }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_militarist }
		}
	}
	option = { #征服
		name = "MECR.2000.option.conquest"
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_militarist
		}
		custom_tooltip = "MECR.2000.option.conquest.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_militarist = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_militarist = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_pacifist = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_pacifist = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_conquest
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_militarist }
			modifier = { mult = 8		has_ethic = ethic_militarist }
			modifier = { mult = 0.12	has_ethic = ethic_pacifist }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_pacifist }
		}
	}
	option = { #平等
		name = "MECR.2000.option.equality"
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_egalitarian
		}
		custom_tooltip = "MECR.2000.option.equality.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_egalitarian = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_egalitarian = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_authoritarian = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_authoritarian = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_equality
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_egalitarian }
			modifier = { mult = 8		has_ethic = ethic_egalitarian }
			modifier = { mult = 0.12	has_ethic = ethic_authoritarian }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_authoritarian }
		}
	}
	option = { #秩序
		name = "MECR.2000.option.order"
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_authoritarian
		}
		custom_tooltip = "MECR.2000.option.order.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_authoritarian = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_authoritarian = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_egalitarian = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_egalitarian = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_order
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_egalitarian }
			modifier = { mult = 8		has_ethic = ethic_authoritarian }
			modifier = { mult = 0.12	has_ethic = ethic_egalitarian }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_egalitarian }
		}
	}
	option = { #理性
		name = "MECR.2000.option.rationality"
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_materialist
		}
		custom_tooltip = "MECR.2000.option.rationality.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_materialist = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_materialist = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_spiritualist = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_spiritualist = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_rationality
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_materialist }
			modifier = { mult = 8		has_ethic = ethic_materialist }
			modifier = { mult = 0.12	has_ethic = ethic_spiritualist }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_spiritualist }
		}
	}
	option = { #虔信
		name = "MECR.2000.option.piety"
		#allow = { NOT = { has_ethic = ethic_gestalt_consciousness } }
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_spiritualist
		}
		custom_tooltip = "MECR.2000.option.piety.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_spiritualist = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_spiritualist = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_materialist = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_materialist = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_piety
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_materialist }
			modifier = { mult = 8		has_ethic = ethic_spiritualist }
			modifier = { mult = 0.12	has_ethic = ethic_materialist }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_materialist }
		}
	}

	# ECI
	option = { #社会主义-
		trigger = { eci_mod_activated = yes }
		allow = { is_capitalism = no }
		name = "MECR.2000.option.eci_socialism"
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_socialism
		}
		custom_tooltip = "MECR.2000.option.eci_socialism.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_socialism = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_socialism = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_capitalism = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_capitalism = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_eci_socialism
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_socialism }
			modifier = { mult = 8		has_ethic = ethic_socialism }
			modifier = { mult = 0.12	has_ethic = ethic_capitalism }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_capitalism }
		}
	}
	option = { #资本主义-
		trigger = { eci_mod_activated = yes }
		allow = { is_socialism = no }
		name = "MECR.2000.option.eci_capitalism"
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_fanatic_capitalism
		}
		custom_tooltip = "MECR.2000.option.eci_capitalism.tooltip"
		switch = {
			trigger = has_ethic
			ethic_fanatic_capitalism = { add_monthly_resource_mult = { resource = unity value = 12 } }
			ethic_capitalism = { add_monthly_resource_mult = { resource = unity value = 6 } }
			ethic_socialism = { add_monthly_resource_mult = { resource = unity value = -12 } }
			ethic_fanatic_socialism = { add_monthly_resource_mult = { resource = unity value = -24 } }
		}
		hidden_effect = {
			set_global_flag = confederation_purpose_eci_capitalism
		}
		ai_chance = {
			base = 100
			modifier = { mult = 50		has_ethic = ethic_fanatic_capitalism }
			modifier = { mult = 8		has_ethic = ethic_capitalism }
			modifier = { mult = 0.12	has_ethic = ethic_socialism }
			modifier = { mult = 0.02	has_ethic = ethic_fanatic_socialism }
		}
	}
	# 无宗旨
	option = {
		name = "MECR.2000.option.no_purpose"
		custom_tooltip = "MECR.2000.option.no_purpose.tooltip"
		ai_chance = {
			base = 1
			modifier = { mult = 1000		has_ethic = ethic_gestalt_consciousness }
		}
	}

	after = {
		hidden_effect = {
			country_event = {
				id = MECR.2001
			}
		}
	}
}
country_event = { #2001.银河邦联的建立
	id = MECR.2001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_galcom_member = {
			limit = { has_federation = yes }
			leave_alliance = { override_requirements = yes }
		}
		every_playable_country = { #停战
			limit = { is_galactic_community_member = yes }
			every_war = {
				limit = {
					any_attacker = { is_galactic_community_member = yes }
					any_defender = { is_galactic_community_member = yes }
				}
				every_war_participant = {
					limit = { is_galactic_community_member = yes }
					prev = { remove_war_participant = prev }
				}
			}
		}
		random_playable_country = { #添加第一个国家
			limit = {
				is_galactic_community_member = yes
				NOT = { is_same_value = root }
				is_subject = no
			}
			join_alliance = {
				who = root
				name = "NAME_galactic_confederation"
				override_requirements = yes
			}
		}
		random_playable_country = { #添加第一个国家（附庸）
			limit = {
				is_galactic_community_member = yes
				NOT = { is_same_value = root }
				is_subject = yes
				overlord = { is_same_value = root }
			}
			join_alliance = {
				who = root
				name = "NAME_galactic_confederation"
				override_requirements = yes
			}
		}
		federation = { #激活基础特质，防止附庸加不进来
			set_federation_type = galactic_confederation_
			set_federation_leader = root
			set_allow_subjects_to_join = yes
		}
		every_playable_country = { #添加剩下的国家：独立国家
			limit = {
				is_galactic_community_member = yes
				NOT = { is_same_value = root }
				is_subject = no
			}
			join_alliance = { who = root override_requirements = yes }
		}
		every_playable_country = { #添加剩下的国家：附庸
			limit = {
				is_galactic_community_member = yes
				NOT = { is_same_value = root }
				is_subject = yes
				overlord = { is_galactic_community_member = yes }
			}
			join_alliance = { who = root override_requirements = yes }
		}
		every_playable_country = { #宗主不是共同体成员的附庸：成为邦联的协从（effect做不到，先搁置）
			limit = {
				is_galactic_community_member = yes
				NOT = { is_same_value = root }
				is_subject = yes
				overlord = { is_galactic_community_member = no }
			}
			if = {
				limit = {
					any_agreement = {
						OR = {
							has_term_value = { term = subject_diplomacy value = subject_can_do_diplomacy }
							has_term_value = { term = subject_diplomacy value = subject_can_do_diplomacy_but_not_vote }
						}
					}
				}
			}
		}
		federation = { #联邦编辑
			set_federation_type = galactic_confederation_
			set_federation_leader = root
			set_name = "NAME_galactic_confederation"

			set_federation_flag = special_federation
			set_federation_flag = galactic_confederation

			save_event_target_as = this_galactic_confederation
			# 联邦法律
			set_federation_law = centralization_minimal_confederation
			set_federation_law = fleet_contribution_none
			set_federation_law = succession_type_custodian_confederation
			set_federation_law = vote_weight_diplomatic_confederation
			set_federation_law = declare_war_unanimous_vote
			set_federation_law = invite_members_unanimous_vote
			set_federation_law = kick_members_majority_vote
			set_federation_law = free_migration_no
			set_federation_law = treaties_separate_yes_confederation
			set_federation_law = confederation_specialization_choose_vote_deciding
			set_variable = { which = confed_institutions_levels value = value:confed_institutions_levels }
			# 非法律设置
			set_allow_subjects_to_join = yes
			set_diplomacy_action_setting = {
				action = action_ask_to_leave_federation
				settings = { acceptance_type = default }
			}

			add_cohesion = -200
			add_cohesion = 100

			remove_modifier = federation_law_category_centralization_cooldown
			remove_modifier = federation_law_category_fleet_contribution_cooldown
			remove_modifier = federation_law_category_succession_type_cooldown
			remove_modifier = federation_law_category_voting_weight_cooldown
			remove_modifier = federation_law_category_war_declaration_vote_cooldown
			remove_modifier = federation_law_category_invite_members_vote_cooldown
			remove_modifier = federation_law_category_kick_members_vote_cooldown
			remove_modifier = federation_law_category_free_migration_cooldown
			remove_modifier = federation_law_category_separate_treaties_cooldown
			remove_modifier = federation_law_category_confederation_specialization_choose_cooldown

			set_federation_flag = enable_federation_cooldowns
		}
		every_playable_country = { #通知事件
			country_event = {
				id = MECR.2002
			}
		}
		country_event = {
			id = MECR.2003
			days = 1
		}
	}
}
country_event = { #2002.银河邦联的建立：所有国家通知
	id = MECR.2002
	title = "MECR.2002.title"
	desc = {
		trigger = {
			is_gal_confed_member = yes
		}
		text = "MECR.2002.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			is_gal_confed_member = no
		}
		text = "MECR.2002.desc.b"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.2002.desc.c"
	}
	picture = GFX_evt_galactic_community
	show_sound = event_celebration
	is_triggered_only = yes

	option = {
		name = "MECR.2002.option.a"
		add_resource = { influence = 200 }
		trigger = {
			is_gal_confed_member = yes
		}
	}
	option = {
		name = "MECR.2002.option.b"
		add_monthly_resource_mult = { resource = unity value = 10 }
		trigger = {
			is_gal_confed_member = yes
			is_subject = no
		}
	}
	option = {
		name = "MECR.2002.option.c"
		trigger = {
			is_galactic_community_member = yes
			is_gal_confed_member = no
		}
	}
	option = {
		name = "MECR.2002.option.d"
		exclusive_trigger = {
			is_galactic_community_member = no
		}
	}
	after = {
		hidden_effect = {
			remove_country_flag = galconfed_upgrade_type_t
			remove_country_flag = galconfed_upgrade_type_r
			remove_country_flag = galconfed_upgrade_type_m
		}
	}
}
country_event = { #2003.邦联建立后议案调整
	id = MECR.2003
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		pass_resolution_no_cooldown = resolution_custodian_confed_galpol
	}
}
country_event = { #2005.邦联成员国退出共同体，同时退出邦联
	id = MECR.2005
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_federation = yes
		federation = { has_federation_perk = galactic_confederation_passive }
	}

	immediate = {
		leave_alliance = { override_requirements = yes }
	}
}

country_event = { #2010.民主投票的邦联晋级选择：前期准备(2011.2012.)
	id = MECR.2010
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		remove_global_flag = galconfed_upgraded_t
		remove_global_flag = galconfed_upgraded_r
		remove_global_flag = galconfed_upgraded_m
		federation = {
			every_member = {
				country_event = {
					id = MECR.2011
				}
			}
		}
		set_timed_global_flag = {
			flag = galconfed_upgrade_voting
			days = 29
		}
		country_event = {
			id = MECR.2012
			days = 30
		}
	}
}
country_event = { #2011.民主投票的邦联晋级选择：投票
	id = MECR.2011
	title = "MECR.2011.title"
	desc = {
		trigger = { federation = { galconfed_specialization_num_0 = yes } }
		text = "MECR.2011.desc.a"
	}
	desc = {
		trigger = { federation = { galconfed_specialization_num_1 = yes } }
		text = "MECR.2011.desc.b"
	}
	desc = {
		trigger = { federation = { galconfed_specialization_num_2 = yes } }
		text = "MECR.2011.desc.c"
	}
	picture = GFX_evt_arguing_senate
	is_triggered_only = yes
	auto_select = yes

	option = {
		name = "MECR.2011.t"
		if = {
			limit = { federation = { galconfed_specialization_num_0 = yes } }
			custom_tooltip = "MECR.2011.trade_bonus.3"
		}
		else_if = {
			limit = { federation = { galconfed_specialization_num_1 = yes } }
			custom_tooltip = "MECR.2011.trade_bonus.2"
		}
		else_if = {
			limit = { federation = { galconfed_specialization_num_2 = yes } }
			custom_tooltip = "MECR.2011.trade_bonus.1"
		}
		trigger = { federation = { NOT = { has_federation_perk = trade_federation_passive } } }
		allow = {
			galconfed_upgrade_subject_vote_check = { TYPE = t }
			custom_tooltip = {
				fail_text = "cant_choose_trade_as_first_specialization_with_eci_socialism_purpose"
				OR = {
					federation = {
						OR = {
							has_federation_perk = trade_galconfed_specialization_bonus_1
							has_federation_perk = research_galconfed_specialization_bonus_1
							has_federation_perk = military_galconfed_specialization_bonus_1
						}
					}
					NOT = { has_global_flag = confederation_purpose_eci_socialism }
				}
			}
		}
		hidden_effect = { set_country_flag = galconfed_upgrade_type_t}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|pacifist|HATE|militarist|
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|xenophile|HATE|xenophobe|
		}
	}
	option = {
		name = "MECR.2011.r"
		if = {
			limit = { federation = { galconfed_specialization_num_0 = yes } }
			custom_tooltip = "MECR.2011.research_bonus.3"
		}
		else_if = {
			limit = { federation = { galconfed_specialization_num_1 = yes } }
			custom_tooltip = "MECR.2011.research_bonus.2"
		}
		else_if = {
			limit = { federation = { galconfed_specialization_num_2 = yes } }
			custom_tooltip = "MECR.2011.research_bonus.1"
		}
		trigger = { federation = { NOT = { has_federation_perk = research_federation_passive } } }
		allow = {
			galconfed_upgrade_subject_vote_check = { TYPE = r }
			custom_tooltip = {
				fail_text = "cant_choose_research_as_first_specialization_with_piety_purpose"
				OR = {
					federation = {
						OR = {
							has_federation_perk = trade_galconfed_specialization_bonus_1
							has_federation_perk = research_galconfed_specialization_bonus_1
							has_federation_perk = military_galconfed_specialization_bonus_1
						}
					}
					NOT = { has_global_flag = confederation_purpose_piety }
				}
			}
		}
		hidden_effect = { set_country_flag = galconfed_upgrade_type_r }
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|materialist|HATE|spiritualist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_rationality }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_piety }
		}
	}
	option = {
		name = "MECR.2011.m"
		if = {
			limit = { federation = { galconfed_specialization_num_0 = yes } }
			custom_tooltip = "MECR.2011.military_bonus.3"
		}
		else_if = {
			limit = { federation = { galconfed_specialization_num_1 = yes } }
			custom_tooltip = "MECR.2011.military_bonus.2"
		}
		else_if = {
			limit = { federation = { galconfed_specialization_num_2 = yes } }
			custom_tooltip = "MECR.2011.military_bonus.1"
		}
		trigger = { federation = { NOT = { has_federation_perk = military_federation_passive } } }
		allow = {
			galconfed_upgrade_subject_vote_check = { TYPE = m }
			custom_tooltip = {
				fail_text = "cant_choose_military_as_first_specialization_with_peace_purpose"
				OR = {
					federation = {
						OR = {
							has_federation_perk = trade_galconfed_specialization_bonus_1
							has_federation_perk = research_galconfed_specialization_bonus_1
							has_federation_perk = military_galconfed_specialization_bonus_1
						}
					}
					NOT = { has_global_flag = confederation_purpose_peace }
				}
			}
		}
		hidden_effect = { set_country_flag = galconfed_upgrade_type_m }
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|militarist|HATE|pacifist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_conquest }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_peace }
		}
	}

	after = {
		if = {
			limit = { federation = { galconfed_specialization_num_2 = yes } }
			custom_tooltip = "MECR.2011.after"
		}
		else = {
			custom_tooltip = "MECR.2011.after.last"
		}
	}
	abort_trigger = { NOT = { has_global_flag = galconfed_upgrade_voting } }
}
country_event = { #2012.民主投票的邦联晋级选择：统计票数(2013.)
	id = MECR.2012
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		federation = {
			set_variable = { which = galconfed_upgrade_type_t value = 0 }
			set_variable = { which = galconfed_upgrade_type_r value = 0 }
			set_variable = { which = galconfed_upgrade_type_m value = 0 }
			if = {
				limit = { has_federation_law = vote_weight_equal_confederation }
				every_member = {
					switch = {
						trigger = has_country_flag
						galconfed_upgrade_type_t = {
							prev = { change_variable = { which = galconfed_upgrade_type_t value = 1 } }
						}
						galconfed_upgrade_type_r = {
							prev = { change_variable = { which = galconfed_upgrade_type_r value = 1 } }
						}
						galconfed_upgrade_type_m = {
							prev = { change_variable = { which = galconfed_upgrade_type_m value = 1 } }
						}
					}
					if = {
						limit = { is_federation_leader = yes }
						switch = {
							trigger = has_country_flag
							galconfed_upgrade_type_t = {
								prev = { change_variable = { which = galconfed_upgrade_type_t value = 1 } }
							}
							galconfed_upgrade_type_r = {
								prev = { change_variable = { which = galconfed_upgrade_type_r value = 1 } }
							}
							galconfed_upgrade_type_m = {
								prev = { change_variable = { which = galconfed_upgrade_type_m value = 1 } }
							}
						}
					}
				}
			}
			else = {
				every_member = {
					switch = {
						trigger = has_country_flag
						galconfed_upgrade_type_t = {
							prev = { change_variable = { which = galconfed_upgrade_type_t value = prev.trigger:diplomacy_weight } }
						}
						galconfed_upgrade_type_r = {
							prev = { change_variable = { which = galconfed_upgrade_type_r value = prev.trigger:diplomacy_weight } }
						}
						galconfed_upgrade_type_m = {
							prev = { change_variable = { which = galconfed_upgrade_type_m value = prev.trigger:diplomacy_weight } }
						}
					}
					if = {
						limit = { is_federation_leader = yes }
						switch = {
							trigger = has_country_flag
							galconfed_upgrade_type_t = {
								prev = { change_variable = { which = galconfed_upgrade_type_t value = prev.trigger:diplomacy_weight } }
							}
							galconfed_upgrade_type_r = {
								prev = { change_variable = { which = galconfed_upgrade_type_r value = prev.trigger:diplomacy_weight } }
							}
							galconfed_upgrade_type_m = {
								prev = { change_variable = { which = galconfed_upgrade_type_m value = prev.trigger:diplomacy_weight } }
							}
						}
					}
				}
			}
			switch = {
				trigger = has_federation_type
				galactic_confederation_ = {
					if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_t
								value > galconfed_upgrade_type_r
							}
							check_variable = {
								which = galconfed_upgrade_type_t
								value > galconfed_upgrade_type_m
							}
						}
						switch_confederation_type = { type = t_ }
					}
					else_if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_r
								value > galconfed_upgrade_type_t
							}
							check_variable = {
								which = galconfed_upgrade_type_r
								value > galconfed_upgrade_type_m
							}
						}
						switch_confederation_type = { type = r_ }
					}
					else_if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_m
								value > galconfed_upgrade_type_t
							}
							check_variable = {
								which = galconfed_upgrade_type_m
								value > galconfed_upgrade_type_r
							}
						}
						switch_confederation_type = { type = m_ }
					}
					else = { #有平局
						if = {
							limit = {
								check_variable = {
									which = galconfed_upgrade_type_t
									value = galconfed_upgrade_type_r
								}
								check_variable = {
									which = galconfed_upgrade_type_t
									value > galconfed_upgrade_type_m
								}
							}
							random_list = {
								50 = { switch_confederation_type = { type = t_ } }
								50 = { switch_confederation_type = { type = r_ } }
							}
						}
						else_if = {
							limit = {
								check_variable = {
									which = galconfed_upgrade_type_t
									value = galconfed_upgrade_type_m
								}
								check_variable = {
									which = galconfed_upgrade_type_t
									value > galconfed_upgrade_type_r
								}
							}
							random_list = {
								50 = { switch_confederation_type = { type = t_ } }
								50 = { switch_confederation_type = { type = m_ } }
							}
						}
						else_if = {
							limit = {
								check_variable = {
									which = galconfed_upgrade_type_r
									value = galconfed_upgrade_type_m
								}
								check_variable = {
									which = galconfed_upgrade_type_r
									value > galconfed_upgrade_type_t
								}
							}
							random_list = {
								50 = { switch_confederation_type = { type = r_ } }
								50 = { switch_confederation_type = { type = m_ } }
							}
						}
						else = {
							random_list = {
								50 = { switch_confederation_type = { type = t_ } }
								50 = { switch_confederation_type = { type = r_ } }
								50 = { switch_confederation_type = { type = m_ } }
							}
						}
					}
				}
				galactic_confederation_t_ = {
					if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_r
								value > galconfed_upgrade_type_m
							}
						}
						switch_confederation_type = { type = t_r_ }
					}
					else_if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_m
								value > galconfed_upgrade_type_r
							}
						}
						switch_confederation_type = { type = t_m_ }
					}
					else = { #有平局
						random_list = {
							50 = { switch_confederation_type = { type = t_r_ } }
							50 = { switch_confederation_type = { type = t_m_ } }
						}
					}
				}
				galactic_confederation_r_ = {
					if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_t
								value > galconfed_upgrade_type_m
							}
						}
						switch_confederation_type = { type = r_t_ }
					}
					else_if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_m
								value > galconfed_upgrade_type_t
							}
						}
						switch_confederation_type = { type = r_m_ }
					}
					else = { #有平局
						random_list = {
							50 = { switch_confederation_type = { type = r_t_ } }
							50 = { switch_confederation_type = { type = r_t_ } }
						}
					}
				}
				galactic_confederation_m_ = {
					if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_t
								value > galconfed_upgrade_type_r
							}
						}
						switch_confederation_type = { type = m_t_ }
					}
					else_if = {
						limit = {
							check_variable = {
								which = galconfed_upgrade_type_r
								value > galconfed_upgrade_type_t
							}
						}
						switch_confederation_type = { type = m_r_ }
					}
					else = { #有平局
						random_list = {
							50 = { switch_confederation_type = { type = m_t_ } }
							50 = { switch_confederation_type = { type = m_r_ } }
						}
					}
				}
				galactic_confederation_t_r_ = {
					switch_confederation_type = { type = t_r_m }
				}
				galactic_confederation_t_m_ = {
					switch_confederation_type = { type = t_m_r }
				}
				galactic_confederation_r_t_ = {
					switch_confederation_type = { type = r_t_m }
				}
				galactic_confederation_r_m_ = {
					switch_confederation_type = { type = r_m_t }
				}
				galactic_confederation_m_t_ = {
					switch_confederation_type = { type = m_t_r }
				}
				galactic_confederation_m_r_ = {
					switch_confederation_type = { type = m_r_t }
				}
			}
			clear_variable = galconfed_upgrade_type_t
			clear_variable = galconfed_upgrade_type_r
			clear_variable = galconfed_upgrade_type_m
			if = {
				limit = {
					OR = {
						has_federation_type = galactic_confederation_t_
						has_federation_type = galactic_confederation_r_t_
						has_federation_type = galactic_confederation_m_t_
						has_federation_type = galactic_confederation_r_m_t
						has_federation_type = galactic_confederation_m_r_t
					}
				}
				set_timed_global_flag = {
					flag = galconfed_upgraded_t
					days = 30
				}
			}
			else_if = {
				limit = {
					OR = {
						has_federation_type = galactic_confederation_r_
						has_federation_type = galactic_confederation_t_r_
						has_federation_type = galactic_confederation_m_r_
						has_federation_type = galactic_confederation_t_m_r
						has_federation_type = galactic_confederation_m_t_r
					}
				}
				set_timed_global_flag = {
					flag = galconfed_upgraded_r
					days = 30
				}
			}
			else_if = {
				limit = {
					OR = {
						has_federation_type = galactic_confederation_m_
						has_federation_type = galactic_confederation_t_m_
						has_federation_type = galactic_confederation_r_m_
						has_federation_type = galactic_confederation_t_r_m
						has_federation_type = galactic_confederation_r_t_m
					}
				}
				set_timed_global_flag = {
					flag = galconfed_upgraded_m
					days = 30
				}
			}
			every_country = { #非邦联国家移除flag
				limit = {
					OR = {
						has_federation = no
						federation = { NOT = { is_same_value = prevprev } }
					}
				}
				remove_country_flag = galconfed_upgrade_type_t
				remove_country_flag = galconfed_upgrade_type_r
				remove_country_flag = galconfed_upgrade_type_m
			}
			# 统计影响力移交
			every_member = {
				remove_country_flag = galconfed_upgraded_demand_satisfied
				remove_country_flag = galconfed_upgraded_demand_not_satisfied
			}
			set_variable = { which = demand_satisfied_members_diplo_weight value = 0 }
			set_variable = { which = demand_not_satisfied_members_influence value = 0 }
			every_member = {
				limit = {
					OR = {
						AND = {
							has_global_flag = galconfed_upgraded_t
							has_country_flag = galconfed_upgrade_type_t
						}
						AND = {
							has_global_flag = galconfed_upgraded_r
							has_country_flag = galconfed_upgrade_type_r
						}
						AND = {
							has_global_flag = galconfed_upgraded_m
							has_country_flag = galconfed_upgrade_type_m
						}
					}
				}
				set_timed_country_flag = { flag = galconfed_upgraded_demand_satisfied days = 720 }
				prev = { change_variable = { which = demand_satisfied_members_diplo_weight value = prev.trigger:diplomacy_weight } }
			}
			every_member = {
				limit = { NOT = { has_country_flag = galconfed_upgraded_demand_satisfied } }
				set_timed_country_flag = { flag = galconfed_upgraded_demand_not_satisfied days = 720 }
				prev = { change_variable = { which = demand_not_satisfied_members_influence value = 100 } }
			}
			every_member = {
				limit = { has_country_flag = galconfed_upgraded_demand_satisfied }
				set_variable = { which = galconfed_upgraded_influence_pay value = trigger:diplomacy_weight }
				divide_variable = { which = galconfed_upgraded_influence_pay value = prev.demand_satisfied_members_diplo_weight }
				multiply_variable = { which = galconfed_upgraded_influence_pay value = prev.demand_not_satisfied_members_influence }
			}
			add_cohesion = 100
			# 通知事件
			every_member = {
				country_event = {
					id = MECR.2013
					days = 1
				}
			}
		}
	}
}
country_event = { #2013.民主投票的邦联晋级选择：所有成员通知，
	id = MECR.2013
	title = "MECR.2013.title"
	desc = {
		trigger = {
			federation = {
				OR = {
					has_federation_type = galactic_confederation_t_
					has_federation_type = galactic_confederation_r_t_
					has_federation_type = galactic_confederation_r_m_t
					has_federation_type = galactic_confederation_m_t_
					has_federation_type = galactic_confederation_m_r_t
				}
			}
		}
		text = "MECR.2013.desc.t"
	}
	desc = {
		trigger = {
			federation = {
				OR = {
					has_federation_type = galactic_confederation_r_
					has_federation_type = galactic_confederation_t_r_
					has_federation_type = galactic_confederation_t_m_r
					has_federation_type = galactic_confederation_m_r_
					has_federation_type = galactic_confederation_m_t_r
				}
			}
		}
		text = "MECR.2013.desc.r"
	}
	desc = {
		trigger = {
			federation = {
				OR = {
					has_federation_type = galactic_confederation_m_
					has_federation_type = galactic_confederation_t_m_
					has_federation_type = galactic_confederation_t_r_m
					has_federation_type = galactic_confederation_r_m_
					has_federation_type = galactic_confederation_r_t_m
				}
			}
		}
		text = "MECR.2013.desc.m"
	}
	picture = GFX_evt_galactic_senate
	show_sound = event_conversation
	is_triggered_only = yes

	option = {
		name = "GOOD"
		if = {
			limit = { check_variable = { which = galconfed_upgraded_influence_pay value > 0 } }
			custom_tooltip = "MECR.2013.option.GOOD.tooltip"
			add_resource = { influence = -1 mult = galconfed_upgraded_influence_pay }
		}
		tooltip = { federation = { add_cohesion = 100 } }
		hidden_effect = { clear_variable = galconfed_upgraded_influence_pay }
		trigger = { has_country_flag = galconfed_upgraded_demand_satisfied }
	}
	option = {
		name = "UNDERSTOOD"
		custom_tooltip = "MECR.2013.option.UNDERSTOOD.tooltip"
		add_resource = { influence = 100 }
		tooltip = { federation = { add_cohesion = 100 } }
		trigger = { NOT = { has_country_flag = galconfed_upgraded_demand_satisfied } }
	}
	after = {
		hidden_effect = {
			remove_country_flag = galconfed_upgrade_type_t
			remove_country_flag = galconfed_upgrade_type_r
			remove_country_flag = galconfed_upgrade_type_m
			if = {
				limit = { is_federation_leader = yes }
			}
		}
	}
}

country_event = { #2020.主席专裁的邦联晋级选择：选择(2021.)
	id = MECR.2020
	title = "MECR.2020.title"
	desc = {
		trigger = { federation = { galconfed_specialization_num_0 = yes } }
		text = "MECR.2020.desc.a"
	}
	desc = {
		trigger = { federation = { galconfed_specialization_num_1 = yes } }
		text = "MECR.2020.desc.b"
	}
	desc = {
		trigger = { federation = { galconfed_specialization_num_2 = yes } }
		text = "MECR.2020.desc.c"
	}
	picture = GFX_evt_grand_speech
	show_sound = event_factions
	is_triggered_only = yes

	immediate = {
		set_global_flag = galconfed_upgrade_voting
	}

	#第一次选择
	option = {
		name = "MECR.2011.t"
		custom_tooltip = "MECR.2011.trade_bonus.3"
		trigger = { federation = { has_federation_type = galactic_confederation_ } }
		allow = {
			custom_tooltip = {
				fail_text = "cant_choose_trade_as_first_specialization_with_eci_socialism_purpose"
				OR = {
					federation = {
						OR = {
							has_federation_perk = trade_galconfed_specialization_bonus_1
							has_federation_perk = research_galconfed_specialization_bonus_1
							has_federation_perk = military_galconfed_specialization_bonus_1
						}
					}
					NOT = { has_global_flag = confederation_purpose_eci_socialism }
				}
			}
		}
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = t_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|pacifist|HATE|militarist|
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|xenophile|HATE|xenophobe|
		}
	}
	option = {
		name = "MECR.2011.r"
		custom_tooltip = "MECR.2011.research_bonus.3"
		trigger = { federation = { has_federation_type = galactic_confederation_ } }
		allow = {
			custom_tooltip = {
				fail_text = "cant_choose_research_as_first_specialization_with_piety_purpose"
				NOT = { has_global_flag = confederation_purpose_piety }
			}
		}
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = r_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|materialist|HATE|spiritualist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_rationality }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_piety }
		}
	}
	option = {
		name = "MECR.2011.m"
		custom_tooltip = "MECR.2011.military_bonus.3"
		trigger = { federation = { has_federation_type = galactic_confederation_ } }
		allow = {
			custom_tooltip = {
				fail_text = "cant_choose_military_as_first_specialization_with_peace_purpose"
				NOT = { has_global_flag = confederation_purpose_peace }
			}
		}
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = m_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|militarist|HATE|pacifist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_conquest }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_peace }
		}
	}

	#第二次选择
	#t
	option = {
		name = "MECR.2011.r"
		custom_tooltip = "MECR.2011.research_bonus.2"
		trigger = { federation = { has_federation_type = galactic_confederation_t_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = t_r_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|materialist|HATE|spiritualist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_rationality }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_piety }
		}
	}
	option = {
		name = "MECR.2011.m"
		custom_tooltip = "MECR.2011.military_bonus.2"
		trigger = { federation = { has_federation_type = galactic_confederation_t_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = t_m_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|militarist|HATE|pacifist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_conquest }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_peace }
		}
	}
	#r
	option = {
		name = "MECR.2011.t"
		custom_tooltip = "MECR.2011.trade_bonus.2"
		trigger = { federation = { has_federation_type = galactic_confederation_r_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = r_t_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|pacifist|HATE|militarist|
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|xenophile|HATE|xenophobe|
		}
	}
	option = {
		name = "MECR.2011.m"
		custom_tooltip = "MECR.2011.military_bonus.2"
		trigger = { federation = { has_federation_type = galactic_confederation_r_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = r_m_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|militarist|HATE|pacifist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_conquest }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_peace }
		}
	}
	#m
	option = {
		name = "MECR.2011.t"
		custom_tooltip = "MECR.2011.trade_bonus.2"
		trigger = { federation = { has_federation_type = galactic_confederation_m_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = m_t_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|pacifist|HATE|militarist|
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|xenophile|HATE|xenophobe|
		}
	}
	option = {
		name = "MECR.2011.r"
		custom_tooltip = "MECR.2011.research_bonus.2"
		trigger = { federation = { has_federation_type = galactic_confederation_m_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = m_r_ }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|materialist|HATE|spiritualist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_rationality }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_piety }
		}
	}

	#第三次选择
	#t
	option = {
		name = "MECR.2011.m"
		custom_tooltip = "MECR.2011.military_bonus.1"
		trigger = { federation = { has_federation_type = galactic_confederation_t_r_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = t_r_m }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|militarist|HATE|pacifist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_conquest }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_peace }
		}
	}
	option = {
		name = "MECR.2011.r"
		custom_tooltip = "MECR.2011.research_bonus.1"
		trigger = { federation = { has_federation_type = galactic_confederation_t_m_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = t_m_r }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|materialist|HATE|spiritualist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_rationality }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_piety }
		}
	}
	#r
	option = {
		name = "MECR.2011.m"
		custom_tooltip = "MECR.2011.military_bonus.1"
		trigger = { federation = { has_federation_type = galactic_confederation_r_t_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = r_t_m }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|militarist|HATE|pacifist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_conquest }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_peace }
		}
	}
	option = {
		name = "MECR.2011.t"
		custom_tooltip = "MECR.2011.trade_bonus.1"
		trigger = { federation = { has_federation_type = galactic_confederation_r_m_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = r_m_t }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|pacifist|HATE|militarist|
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|xenophile|HATE|xenophobe|
		}
	}
	#m
	option = {
		name = "MECR.2011.r"
		custom_tooltip = "MECR.2011.research_bonus.1"
		trigger = { federation = { has_federation_type = galactic_confederation_m_t_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = m_t_r }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|materialist|HATE|spiritualist|
			modifier = { mult = 1.5 has_global_flag = confederation_purpose_rationality }
			modifier = { mult = 0.5 has_global_flag = confederation_purpose_piety }
		}
	}
	option = {
		name = "MECR.2011.t"
		custom_tooltip = "MECR.2011.trade_bonus.1"
		trigger = { federation = { has_federation_type = galactic_confederation_m_r_ } }
		hidden_effect = {
			federation = {
				switch_confederation_type = { type = m_r_t }
			}
		}
		ai_chance = {
			base = 100
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|pacifist|HATE|militarist|
			mult = value:galconfed_upgrade_ethic_ai_chance|LIKE|xenophile|HATE|xenophobe|
		}
	}

	after = {
		hidden_effect = {
			remove_global_flag = galconfed_upgrade_voting
			every_federation_ally = {
				country_event = { id = MECR.2021 }
			}
		}
	}
}
country_event = { #2021.主席专裁的邦联晋级选择：其他国家通知
	id = MECR.2021
	title = "MECR.2021.title"
	desc = {
		trigger = {
			federation = {
				OR = {
					has_federation_type = galactic_confederation_t_
					has_federation_type = galactic_confederation_r_t_
					has_federation_type = galactic_confederation_r_m_t
					has_federation_type = galactic_confederation_m_t_
					has_federation_type = galactic_confederation_m_r_t
				}
			}
		}
		text = "MECR.2021.desc.t"
	}
	desc = {
		trigger = {
			federation = {
				OR = {
					has_federation_type = galactic_confederation_r_
					has_federation_type = galactic_confederation_t_r_
					has_federation_type = galactic_confederation_t_m_r
					has_federation_type = galactic_confederation_m_r_
					has_federation_type = galactic_confederation_m_t_r
				}
			}
		}
		text = "MECR.2021.desc.r"
	}
	desc = {
		trigger = {
			federation = {
				OR = {
					has_federation_type = galactic_confederation_m_
					has_federation_type = galactic_confederation_t_m_
					has_federation_type = galactic_confederation_t_r_m
					has_federation_type = galactic_confederation_r_m_
					has_federation_type = galactic_confederation_r_t_m
				}
			}
		}
		text = "MECR.2021.desc.m"
	}
	picture = GFX_evt_grand_speech
	show_sound = event_factions
	is_triggered_only = yes

	option = {
		name = "UNDERSTOOD"
	}
}

event = { #2500.银河邦联每月统计预触发[on_monthly_pulse]
	id = MECR.2500
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_active_resolution = resolution_custodian_establish_the_galactic_confederation
	}

	immediate = {
		if = {
			limit = { any_federation = { has_federation_perk = galactic_confederation_passive } }
			if = {
				limit = { has_galactic_custodian = yes }
				galactic_custodian = {
					country_event = {
						id = MECR.2501
					}
				}
			}
			else = {
				random_country = {
					limit = {
						has_federation = yes
						is_federation_leader = yes
						federation = { has_federation_perk = galactic_confederation_passive }
					}
					country_event = {
						id = MECR.2501
					}
				}
			}
		}
		else = {
			cancel_resolution = resolution_custodian_establish_the_galactic_confederation
		}
	}
}
country_event = { #2501.银河邦联每月(2510.2530.2560.)[2500.]
	id = MECR.2501
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			every_member = {
				limit = { is_galactic_community_member = no }
				leave_alliance = { override_requirements = yes }
			}
		}
		#【【【总目录】】】
		# 传统：邦联精神
		federation.every_member = {
			limit = { has_active_tradition = tr_diplomacy_confederation_spirit }
			remove_modifier = tr_diplomacy_confederation_spirit
			add_modifier = {
				modifier = tr_diplomacy_confederation_spirit
				multiplier = trigger:num_envoys_to_federation
				days = 31
			}
		}
		# 机构-特质：银河发展银行lvl3：每个联邦特使+3%岗位产出的基础进阶战略资源
		if = {
			limit = {
				is_active_resolution = resolution_custodian_galactic_development_bank
				has_federation = yes
				federation = { has_federation_perk = trade_galconfed_specialization_bonus_3 }
			}
			country_event = {
				id = MECR.2510
				days = 1
			}
		}
		# 机构-特质：银河防御委员会lvl3：每个联邦特使+20%联邦海军贡献
		if = {
			limit = {
				is_active_resolution = resolution_custodian_galactic_defense_committee
				has_federation = yes
				federation = { has_federation_perk = military_galconfed_specialization_bonus_3 }
			}
			country_event = {
				id = MECR.2530
				days = 1
			}
		}
		# 机构：银河工程署：检查各行星与巨构的工程船修正(2560.)
		if = {
			limit = { is_active_resolution = resolution_custodian_galactic_department_of_engineering }
			country_event = {
				id = MECR.2560
				days = 1
			}
		}
		# 法律：自由移民：检查deposit(2570.)
		if = {
			limit = { federation = { has_federation_law = free_migration_yes_confederation } }
			country_event = {
				id = MECR.2570
				days = 1
			}
		}
	}
}
country_event = { #2510.机构-特质：银河发展银行lvl3：每个联邦特使+4%岗位产出的基础进阶战略资源[2501.]
	id = MECR.2510
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = {
					is_active_resolution = resolution_custodian_galactic_development_bank
					OR = {
						check_variable = { which = centralization_institution_upgrades_cap value >= value:confed_institutions_levels }
						AND = {
							OR = {
								has_federation_type = galactic_confederation_t_
								has_federation_type = galactic_confederation_t_m_
								has_federation_type = galactic_confederation_t_r_
								has_federation_type = galactic_confederation_t_r_m
								has_federation_type = galactic_confederation_t_m_r
							}
							federation_level > 4
						}
					}
				}
				every_member = {
					remove_modifier = resolution_custodian_galactic_development_bank_lvl_3
					add_modifier = {
						modifier = resolution_custodian_galactic_development_bank_lvl_3
						multiplier = trigger:num_envoys_to_federation
						days = 31
					}
				}
			}
			else = {
				every_member = {
					remove_modifier = resolution_custodian_galactic_development_bank_lvl_3
				}
			}
		}
	}
}
country_event = { #2530.机构-特质：银河防御委员会lvl3：每个联邦特使+20%联邦海军贡献[2501.]
	id = MECR.2530
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = {
					is_active_resolution = resolution_custodian_galactic_defense_committee
					OR = {
						check_variable = { which = centralization_institution_upgrades_cap value >= value:confed_institutions_levels }
						AND = {
							OR = {
								has_federation_type = galactic_confederation_m_
								has_federation_type = galactic_confederation_m_t_
								has_federation_type = galactic_confederation_m_r_
								has_federation_type = galactic_confederation_m_t_r
								has_federation_type = galactic_confederation_m_r_t
							}
							federation_level > 4
						}
					}
				}
				every_member = {
					remove_modifier = resolution_custodian_galactic_defense_committee_lvl_3
					add_modifier = {
						modifier = resolution_custodian_galactic_defense_committee_lvl_3
						multiplier = trigger:num_envoys_to_federation
						days = 31
					}
				}
			}
			else = {
				every_member = {
					remove_modifier = resolution_custodian_galactic_defense_committee_lvl_3
				}
			}
		}
	}
}
country_event = { #2560.机构：银河工程署：检查各行星与巨构的工程船修正[2501.]
	id = MECR.2560
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			every_member = {
				every_owned_planet = {
					limit = {
						any_fleet_in_orbit = {
							is_civilian = yes
							any_owned_ship = { is_ship_class = shipclass_constructor }
							owner = { is_same_value = prevprev.owner }
						}
					}
					add_modifier = {
						modifier = resolution_custodian_galactic_department_of_engineering_target_planet
						mult = value:gdoe_constructors_count
						days = 30
					}
				}
				if = {
					limit = { has_global_flag = resolution_custodian_galactic_department_of_engineering_upgrade_1 }
					every_owned_megastructure = {
						limit = {
							any_fleet_in_orbit = {
								is_civilian = yes
								any_owned_ship = { is_ship_class = shipclass_constructor }
								owner = { is_same_value = prevprev.owner }
							}
						}
						add_modifier = {
							modifier = resolution_custodian_galactic_department_of_engineering_target_megastructure
							mult = value:gdoe_constructors_count
							days = 30
						}
					}
				}
			}
		}
	}
}
country_event = { #2570.自由迁移的deposit检查[1010.] [MECR_law:free_migration_yes_confederation]
	id = MECR.2570
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			every_member = {
				if = {
					limit = { capital_scope = { NOT = { has_deposit = d_free_migration_confederation } } }
					capital_scope = { add_deposit = d_free_migration_confederation }
				}
				if = {
					limit = {
						any_owned_planet = {
							has_deposit = d_free_migration_confederation
							is_capital = no
						}
					}
					every_owned_planet = {
						limit = {
							has_deposit = d_free_migration_confederation
							is_capital = no
						}
						remove_deposit = d_free_migration_confederation
					}
				}
			}
		}
		every_country = {
			limit = {
				NOT = { is_in_federation_with = root }
				any_owned_planet = { has_deposit = d_free_migration_confederation }
			}
			every_owned_planet = {
				limit = { has_deposit = d_free_migration_confederation }
				remove_deposit = d_free_migration_confederation
			}
		}
	}
}


####################################################################################################
####################################################################################################
########################### 大远征 ########################### Imperial Crusade #####################
####################################################################################################
####################################################################################################

country_event = { #3000.大远征开始(3002.)
	id = MECR.3000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		#处理正在进行的战争
		every_galcom_member = {
			every_war = { #帝国成员间的战争：立即结束
				limit = { NOT = { any_war_participant = { is_galactic_community_member = no } } }
				every_war_participant = {
					limit = { is_galactic_community_member = yes }
					prev = { remove_war_participant = prev }
				}
			}
			every_war = { #涉及帝国成员与非成员的战争：转换为大远征
				limit = {
					any_war_participant = { is_galactic_community_member = no }
					any_war_participant = { is_galactic_community_member = yes }
				}
				if = { # 混乱的战争（进攻方和防御方都有成员与非成员）：帝国成员强制退出
					limit = {
						any_attacker = { is_galactic_community_member = no }
						any_attacker = { is_galactic_community_member = yes }
						any_defender = { is_galactic_community_member = no }
						any_defender = { is_galactic_community_member = yes }
					}
					every_war_participant = {
						limit = { is_galactic_community_member = yes }
						prev = { remove_war_participant = prev }
					}
				}
				else_if = { # 其中一方只有帝国成员的战争：不纯方的帝国成员强制退出
					limit = {
						any_attacker = { is_galactic_community_member = yes }
						any_defender = { is_galactic_community_member = yes }
					}
					if = {
						limit = { any_attacker = { is_galactic_community_member = no } }
						every_attacker = {
							limit = { is_galactic_community_member = yes }
							prev = { remove_war_participant = prev }
						}
					}
					else_if = {
						limit = { any_defender = { is_galactic_community_member = no } }
						every_defender = {
							limit = { is_galactic_community_member = yes }
							prev = { remove_war_participant = prev }
						}
					}
				}
				else_if = { # 其中一方只有非帝国成员的战争：不纯方的非帝国成员强制退出
					limit = {
						any_attacker = { is_galactic_community_member = no }
						any_defender = { is_galactic_community_member = no }
					}
					if = {
						limit = { any_attacker = { is_galactic_community_member = yes } }
						every_attacker = {
							limit = { is_galactic_community_member = no }
							prev = { remove_war_participant = prev }
						}
					}
					else_if = {
						limit = { any_defender = { is_galactic_community_member = yes } }
						every_defender = {
							limit = { is_galactic_community_member = no }
							prev = { remove_war_participant = prev }
						}
					}
				}
				else = { #其中一方只有帝国成员，另一方只有非成员：什么也不做
				}
				if = { #皇帝加入战争，重选战争目标
					limit = { exists = this }
					if = {
						limit = { any_attacker = { is_galactic_community_member = yes } }
						if = {
							limit = { NOT = { any_war_participant = { is_galactic_emperor = yes } } }
							galactic_emperor = { join_war_on_side = { war = prev side = attackers } }
						}
						random_defender = {
							limit = { is_war_leader = yes }
							save_event_target_as = imperial_crusade_war_switch_target
						}
						if = {
							limit = { is_total_war = yes }
							set_war_goal = { type = wg_imperial_crusade_total_war target = galactic_emperor enemy = event_target:imperial_crusade_war_switch_target }
						}
						else = {
							set_war_goal = { type = wg_imperial_crusade target = galactic_emperor enemy = event_target:imperial_crusade_war_switch_target }
						}
						#set_name = "rename_imperial_crusade_war_defender"
					}
					else_if = {
						limit = { any_defender = { is_galactic_community_member = yes } }
						if = {
							limit = { NOT = { any_war_participant = { is_galactic_emperor = yes } } }
							galactic_emperor = { join_war_on_side = { war = prev side = defenders } }
						}
						random_attacker = {
							limit = { is_war_leader = yes }
							save_event_target_as = imperial_crusade_war_switch_target
						}
						if = {
							limit = { is_total_war = yes }
							set_war_goal = { type = wg_imperial_crusade_total_war target = galactic_emperor enemy = event_target:imperial_crusade_war_switch_target }
						}
						else = {
							set_war_goal = { type = wg_imperial_crusade target = galactic_emperor enemy = event_target:imperial_crusade_war_switch_target }
						}
						#set_name = "rename_imperial_crusade_war_attacker"
					}
					set_name = "NAME_Imperial_Crusade_War"
					every_galcom_member = {
						limit = { is_galactic_emperor = no }
						join_war_on_side = { war = prev side = galactic_emperor }
					}
				}
			}
		}
		#开启大远征战争
		every_country = {
			limit = {
				is_galactic_community_member = no
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { is_at_war_with = galactic_emperor }
				is_federation_leader = yes
			}
			if = {
				limit = {
					is_country_type = default
					is_homicidal = no
					NOT = { has_ascension_perk = ap_become_the_crisis }
				}
				galactic_emperor = {
					declare_war = {
						target = prev
						attacker_war_goal = "wg_imperial_crusade"
					}
				}
			}
			else = {
				galactic_emperor = {
					declare_war = {
						target = prev
						attacker_war_goal = "wg_imperial_crusade_total_war"
					}
				}
			}
			set_country_flag = flag_imperial_crusade_target_@galactic_emperor
		}
		every_country = {
			limit = {
				is_galactic_community_member = no
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { is_at_war_with = galactic_emperor }
			}
			if = {
				limit = {
					is_country_type = default
					is_homicidal = no
				}
				galactic_emperor = {
					declare_war = {
						target = prev
						attacker_war_goal = "wg_imperial_crusade"
					}
				}
			}
			else = {
				galactic_emperor = {
					declare_war = {
						target = prev
						attacker_war_goal = "wg_imperial_crusade_total_war"
					}
				}
			}
			set_country_flag = flag_imperial_crusade_target_@galactic_emperor
		}
		#帝国成员加入皇帝的战争
		every_galcom_member = {
			limit = { is_galactic_emperor = no }
			join_war = galactic_emperor
		}
		#统计作为大远征目标的国家面积
		set_variable = { which = imperial_crusade_target_empires_galaxy_percentage value = 0 }
		every_country = {
			limit = {
				is_galactic_community_member = no
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				is_at_war_with = galactic_emperor
			}
			root = { change_variable = { which = imperial_crusade_target_empires_galaxy_percentage value = prev.trigger:galaxy_percentage } }
		}
		# 启用战争贡献分数统计
		every_galcom_member = {
			begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
			set_variable = { which = imperial_crusade_my_war_score value = 0 }
		}
		event_target:global_event_country = {
			set_variable = { which = imperial_crusade_total_war_score value = 0 }
		}
		#flag
		set_timed_global_flag = {
			flag = flag_imperial_crusade_ongoing
			days = 31
		}
		#通知
		every_country = { #通知
			limit = {
				OR = {
					is_galactic_emperor = yes
					has_communications = galactic_emperor
					any_country = {
						is_at_war_with = galactic_emperor
						has_communications = prev
					}
				}
			}
			country_event = {
				id = MECR.3002
			}
		}
	}
}
country_event = { #3002.大远征开始通知
	id = MECR.3002
	title = "MECR.3002.name"
	desc = {
		trigger = { is_galactic_emperor = yes }
		text = "MECR.3002.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
		}
		text = "MECR.3002.desc.b"
	}
	desc = {
		trigger = {
			is_at_war_with = galactic_emperor
			any_war = {
				is_total_war = no
				any_war_participant = { is_galactic_emperor = yes }
			}
		}
		text = "MECR.3002.desc.c"
	}
	desc = {
		trigger = {
			is_at_war_with = galactic_emperor
			any_war = {
				is_total_war = yes
				any_war_participant = { is_galactic_emperor = yes }
			}
		}
		text = "MECR.3002.desc.c.total_war"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
			NOT = { is_at_war_with = galactic_emperor }
		}
		text = "MECR.3002.desc.d"
	}
	picture = GFX_evt_fleet_from_surface
	show_sound = event_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.3002.option.a"
		trigger = {
			is_galactic_emperor = yes
		}
	}
	option = {
		name = "MECR.3002.option.b"
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
		}
	}
	option = {
		name = "MECR.3002.option.c"
		trigger = {
			is_at_war_with = galactic_emperor
		}
	}
	option = {
		name = "MECR.3002.option.d"
		trigger = {
			is_galactic_community_member = no
			NOT = { is_at_war_with = galactic_emperor }
		}
	}
}
country_event = { #3005.大远征月检(3020.3006.3050.)[on_monthly_pulse_country]
	id = MECR.3005
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_active_resolution = resolution_galactic_empire_imperial_crusade_MECR
		is_galactic_emperor = yes
	}

	immediate = {
		#不是帝国成员有分数统计的移除统计
		every_playable_country = {
			limit = {
				is_galactic_community_member = no
				has_event_chain = imperial_crusade_war_score
			}
			end_event_chain = imperial_crusade_war_score
		}
		#是帝国成员没有有分数统计的添加统计
		every_playable_country = {
			limit = {
				NOT = { has_event_chain = imperial_crusade_war_score }
				is_galactic_community_member = yes
			}
			begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
			set_variable = { which = imperial_crusade_my_war_score value = 0 }
		}
		#帝国成员贡献分显示刷新，召开帝国军事会议
		event_target:global_event_country = {
			set_variable = { which = imperial_crusade_total_war_score value = 0 }
			every_galcom_member = {
				prev = {
					change_variable = {
						which = imperial_crusade_total_war_score
						value = prev.imperial_crusade_my_war_score
					}
				}
			}
			every_galcom_member = { #重设总贡献数值显示
				end_event_chain = imperial_crusade_war_score
				begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
				add_event_chain_counter = {
					event_chain = imperial_crusade_war_score
					counter = my_war_score
					amount = imperial_crusade_my_war_score
				}
				add_event_chain_counter = {
					event_chain = imperial_crusade_war_score
					counter = total_war_score
					amount = event_target:global_event_country.imperial_crusade_total_war_score
				}
			}
			if = { #帝国军事会议
				limit = {
					OR = {
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 300 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 1 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 600 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 2 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 900 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 3 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 1200 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 4 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 1500 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 5 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 1800 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 6 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 2100 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 7 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 2400 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 8 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 2700 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 9 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 3000 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 10 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 3300 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 11 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 3600 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 12 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 3900 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 13 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 4200 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 14 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 4500 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 15 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 4800 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 16 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 5100 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 17 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 5400 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 18 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 5700 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 19 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 6000 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 20 }
						}
					}
				}
				change_variable = { which = imperial_crusade_war_score_bonus value = 1 }
				galactic_emperor = {
					country_event = {
						id = MECR.3020
						days = 3
					}
				}
			}
			else_if = { #帝国军事会议 #debug
				limit = {
					has_global_flag = flag_imperial_crusade_debug
					OR = {
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 300 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 1 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 600 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 2 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 900 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 3 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 1200 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 4 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 1500 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 5 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 1800 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 6 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 2100 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 7 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 2400 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 8 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 2700 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 9 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 3000 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 10 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 3300 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 11 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 3600 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 12 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 3900 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 13 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 4200 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 14 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 4500 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 15 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 4800 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 16 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 5100 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 17 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 5400 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 18 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 5700 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 19 }
						}
						AND = {
							check_variable = { which = imperial_crusade_total_war_score value >= 6000 }
							check_variable = { which = imperial_crusade_war_score_bonus value < 20 }
						}
					}
				}
				change_variable = { which = imperial_crusade_war_score_bonus value = 1 }
				galactic_emperor = {
					country_event = {
						id = MECR.3020
						days = 3
					}
				}
			}
		}
		# buff计算
		if = {
			limit = { check_variable = { which = imperial_crusade_war_conference_incite_fanaticism value > 0 } }
			set_variable = { which = incite_fanaticism_mult__0_25 value = imperial_crusade_war_conference_incite_fanaticism }
			multiply_variable = { which = incite_fanaticism_mult__0_25 value = -0.25 }
			set_variable = { which = incite_fanaticism_mult_0_05 value = imperial_crusade_war_conference_incite_fanaticism } 
			multiply_variable = { which = incite_fanaticism_mult_0_05 value = 0.05 }
			set_variable = { which = incite_fanaticism_mult_20 value = imperial_crusade_war_conference_incite_fanaticism }
			multiply_variable = { which = incite_fanaticism_mult_20 value = 20 }
		}
		else = {
			clear_variable = incite_fanaticism_mult__0_25
			clear_variable = incite_fanaticism_mult_0_05
			clear_variable = incite_fanaticism_mult_20
		}
		if = {
			limit = { check_variable = { which = imperial_crusade_war_conference_gather_strength value > 0 } }
			subtract_variable = { which = imperial_crusade_war_conference_gather_strength value = 1 } 
		}
		if = {
			limit = { check_variable = { which = imperial_crusade_war_conference_economic_recuperation value > 0 } }
			subtract_variable = { which = imperial_crusade_war_conference_economic_recuperation value = 1 } 
		}
		# 如果有国家没有被宣战，则宣战
		if = {
			limit = {
				any_country = {
					is_galactic_community_member = no
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					NOT = { is_at_war_with = galactic_emperor }
					NOT = { has_country_flag = flag_imperial_crusade_target_@galactic_emperor }
				}
			}
			#开启大远征战争
			every_country = {
				limit = {
					is_galactic_community_member = no
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					NOT = { is_at_war_with = galactic_emperor }
					NOT = { has_country_flag = flag_imperial_crusade_target_@galactic_emperor }
					is_federation_leader = yes
				}
				if = {
					limit = {
						is_country_type = default
						is_homicidal = no
						NOT = { has_ascension_perk = ap_become_the_crisis }
					}
					galactic_emperor = {
						declare_war = {
							target = prev
							attacker_war_goal = "wg_imperial_crusade"
						}
					}
				}
				else = {
					galactic_emperor = {
						declare_war = {
							target = prev
							attacker_war_goal = "wg_imperial_crusade_total_war"
						}
					}
				}
				set_country_flag = flag_imperial_crusade_target_@galactic_emperor
			}
			every_country = { 
				limit = {
					is_galactic_community_member = no
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					NOT = { is_at_war_with = galactic_emperor }
					NOT = { has_country_flag = flag_imperial_crusade_target_@galactic_emperor }
				}
				if = {
					limit = {
						is_country_type = default
						is_homicidal = no
					}
					galactic_emperor = {
						declare_war = {
							target = prev
							attacker_war_goal = "wg_imperial_crusade"
						}
					}
				}
				else = {
					galactic_emperor = {
						declare_war = {
							target = prev
							attacker_war_goal = "wg_imperial_crusade_total_war"
						}
					}
				}
				set_country_flag = flag_imperial_crusade_target_@galactic_emperor
			}
			#帝国成员加入皇帝的战争
			every_galcom_member = {
				limit = { is_galactic_emperor = no }
				join_war = galactic_emperor
			}
		}
		#已经屈服的国家移除flag
		every_country = {
			limit = {
				is_galactic_community_member = yes
				has_country_flag = flag_imperial_crusade_target_@galactic_emperor
			}
			remove_country_flag = flag_imperial_crusade_target_@galactic_emperor
			set_country_flag = flag_surrander_in_imperial_crusade_@galactic_emperor
		}
		#大远征进行判断
		if = { #所有战争都结束，大远征结束
			limit = { is_in_imperial_crusade = no }
			country_event = {
				id = MECR.3050
			}
		}
		else_if = { #帝国权威小于60，大远征结束
			limit = {
				imperial_authority < 60 
			}
			country_event = {
				id = MECR.3006
			}
		}
		else = { #大远征仍在进行
			set_timed_global_flag = {
				flag = flag_imperial_crusade_ongoing
				days = 31
			}
		}
	}
}
country_event = { #3006.帝国权威小于60大远征终止(3050.)
	id = MECR.3006
	title = "MECR.3006.name"
	desc = "MECR.3006.desc"
	picture = GFX_evt_civil_action
	show_sound = event_planetary_riot
	is_triggered_only = yes

	immediate = {
		galactic_emperor = {
			set_country_flag = flag_end_imperial_crusade_tired
			every_war = { #全面战争：直接停战
				limit = { using_war_goal = { type = wg_imperial_crusade_total_war owner = galactic_emperor } }
				every_war_participant = {
					prev = { remove_war_participant = prev }
				}
			}
			every_war = { #非全面战争：白和处理
				limit = { using_war_goal = { type = wg_imperial_crusade owner = galactic_emperor } }
				every_war_participant = { #双方占领的有宣称的星系移交所有权
					every_owned_planet = {
						limit = {
							is_occupied_flag = yes
							controller = {
								has_claim = prev.solar_system
								is_war_participant = { war = prevprevprev side = galactic_emperor }
							}
						}
						if = {
							limit = {
								solar_system = {
									NOT = {
										any_system_colony = {
											is_occupied_flag = no
										}
									}
								}
							}
							set_owner = controller
							solar_system.starbase = {
								set_owner = prev.controller
								fleet = { set_owner = prevprev.controller }
							}
							solar_system.every_system_colony = {
								set_owner = prev.controller
							}
						}
					}
					prev = { remove_war_participant = prev }
				}
				if = { #帝国方占领非无宣称的星系建立新国家
					limit = { any_attacker = { is_galactic_emperor = yes } }
					every_defender = {
						create_country = {
							name = random
							type = default
							name_list = this
							species = this
							flag = random
							effect = {
								copy_ethos_and_authority = prev
								change_government = { civics = random }
								copy_techs_from = { target = prev }
								set_origin_effect = yes
								save_event_target_as = released_country_from_imperial_crusade
							}
						}
						every_owned_starbase = {
							limit = {
								controller = {
									NOT = { is_same_value = prevprev }
									is_war_participant = { war = prevprevprev side = galactic_emperor }
								}
								NOT = {
									any_system_colony = {
										is_occupied_flag = no
									}
								}
							}
							set_owner = event_target:released_country_from_imperial_crusade
							solar_system.every_system_colony = {
								set_owner = event_target:released_country_from_imperial_crusade
							}
						}
						event_target:released_country_from_imperial_crusade = {
							add_to_galactic_community = yes
							if = {
								limit = {
									galactic_emperor = {
										has_federation = yes
										federation = { has_federation_type = imperium_federation }
									}
								}
								galactic_emperor.federation = { save_cohesion = yes }
								join_alliance = {
									who = galactic_emperor
									override_requirements = yes
								}
								galactic_emperor.federation = { load_cohesion = yes }
							}
						}
					}
				}
				else_if = {
					limit = { any_defender = { is_galactic_emperor = yes } }
					every_attacker = {
						create_country = {
							name = random
							type = default
							name_list = this
							species = this
							flag = random
							effect = {
								copy_ethos_and_authority = prev
								change_government = { civics = random }
								copy_techs_from = { target = prev }
								set_origin_effect = yes
								save_event_target_as = released_country_from_imperial_crusade
							}
						}
						every_owned_starbase = {
							limit = {
								controller = {
									NOT = { is_same_value = prevprev }
									is_war_participant = { war = prevprevprev side = galactic_emperor }
								}
								NOT = {
									any_system_colony = {
										is_occupied_flag = no
									}
								}
							}
							set_owner = event_target:released_country_from_imperial_crusade
							solar_system.every_system_colony = {
								set_owner = event_target:released_country_from_imperial_crusade
							}
						}
						event_target:released_country_from_imperial_crusade = {
							add_to_galactic_community = yes
							if = {
								limit = {
									galactic_emperor = {
										has_federation = yes
										federation = { has_federation_type = imperium_federation }
									}
								}
								galactic_emperor.federation = { save_cohesion = yes }
								join_alliance = {
									who = galactic_emperor
									override_requirements = yes
								}
								galactic_emperor.federation = { load_cohesion = yes }
							}
						}
					}
				}
				every_war_participant = {
					prev = { remove_war_participant = prev }
				}
			}
			country_event = {
				id = MECR.3050
				days = 5
			}
		}
	}

	option = {
		name = "MECR.3006.option"
		add_modifier = {
			modifier = imperial_crusade_tired_imperium
			days = 2400
		}
	}
}
country_event = { #3010.夺取大远征战败国战利品[wg_imperial_crusade.90.]
	id = MECR.3010
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		export_resource_stockpile_to_variable = { resource = energy variable = spoil_energy }
		export_resource_stockpile_to_variable = { resource = minerals variable = spoil_minerals }
		export_resource_stockpile_to_variable = { resource = food variable = spoil_food }
		export_resource_stockpile_to_variable = { resource = consumer_goods variable = spoil_consumer_goods }
		export_resource_stockpile_to_variable = { resource = alloys variable = spoil_alloys }
		export_resource_stockpile_to_variable = { resource = volatile_motes variable = spoil_volatile_motes }
		export_resource_stockpile_to_variable = { resource = exotic_gases variable = spoil_exotic_gases }
		export_resource_stockpile_to_variable = { resource = rare_crystals variable = spoil_rare_crystals }
		export_resource_stockpile_to_variable = { resource = sr_living_metal variable = spoil_sr_living_metal }
		export_resource_stockpile_to_variable = { resource = sr_zro variable = spoil_sr_zro }
		export_resource_stockpile_to_variable = { resource = sr_dark_matter variable = spoil_sr_dark_matter }
		export_resource_stockpile_to_variable = { resource = nanites variable = spoil_nanites }
		export_resource_stockpile_to_variable = { resource = minor_artifacts variable = spoil_minor_artifacts }

		add_resource = { energy = -1 mult = spoil_energy }
		add_resource = { minerals = -1 mult = spoil_minerals }
		add_resource = { food = -1 mult = spoil_food }
		add_resource = { consumer_goods = -1 mult = spoil_consumer_goods }
		add_resource = { alloys = -1 mult = spoil_alloys }
		add_resource = { volatile_motes = -1 mult = spoil_volatile_motes }
		add_resource = { exotic_gases = -1 mult = spoil_exotic_gases }
		add_resource = { rare_crystals = -1 mult = spoil_rare_crystals }
		add_resource = { sr_living_metal = -1 mult = spoil_sr_living_metal }
		add_resource = { sr_zro = -1 mult = spoil_sr_zro }
		add_resource = { sr_dark_matter = -1 mult = spoil_sr_dark_matter }
		add_resource = { nanites = -1 mult = spoil_nanites }
		add_resource = { minor_artifacts = -1 mult = spoil_minor_artifacts }
	
		#帝国成员贡献分显示刷新，召开帝国军事会议
		event_target:global_event_country = {
			set_variable = { which = imperial_crusade_total_war_score value = 0 }
			every_galcom_member = {
				prev = {
					change_variable = {
						which = imperial_crusade_total_war_score
						value = prev.imperial_crusade_my_war_score
					}
				}
			}
			every_galcom_member = { #重设总贡献数值显示
				end_event_chain = imperial_crusade_war_score
				begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
				add_event_chain_counter = {
					event_chain = imperial_crusade_war_score
					counter = my_war_score
					amount = imperial_crusade_my_war_score
				}
				add_event_chain_counter = {
					event_chain = imperial_crusade_war_score
					counter = total_war_score
					amount = event_target:global_event_country.imperial_crusade_total_war_score
				}
			}
		}
		divide_variable = { which = spoil_energy value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_minerals value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_food value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_consumer_goods value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_alloys value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_volatile_motes value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_exotic_gases value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_rare_crystals value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_sr_living_metal value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_sr_zro value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_sr_dark_matter value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_nanites value = event_target:global_event_country.imperial_crusade_total_war_score }
		divide_variable = { which = spoil_minor_artifacts value = event_target:global_event_country.imperial_crusade_total_war_score }
		every_galcom_member = {
			limit = { check_variable = { which = imperial_crusade_my_war_score value > 0 } }
			set_variable = { which = spoil_receive_energy value = root.spoil_energy }
			set_variable = { which = spoil_receive_minerals value = root.spoil_minerals }
			set_variable = { which = spoil_receive_food value = root.spoil_food }
			set_variable = { which = spoil_receive_consumer_goods value = root.spoil_consumer_goods }
			set_variable = { which = spoil_receive_alloys value = root.spoil_alloys }
			set_variable = { which = spoil_receive_volatile_motes value = root.spoil_volatile_motes }
			set_variable = { which = spoil_receive_exotic_gases value = root.spoil_exotic_gases }
			set_variable = { which = spoil_receive_rare_crystals value = root.spoil_rare_crystals }
			set_variable = { which = spoil_receive_sr_living_metal value = root.spoil_sr_living_metal }
			set_variable = { which = spoil_receive_sr_zro value = root.spoil_sr_zro }
			set_variable = { which = spoil_receive_sr_dark_matter value = root.spoil_sr_dark_matter }
			set_variable = { which = spoil_receive_nanites value = root.spoil_nanites }
			set_variable = { which = spoil_receive_minor_artifacts value = root.spoil_minor_artifacts }
			multiply_variable = { which = spoil_receive_energy value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_minerals value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_food value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_consumer_goods value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_alloys value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_volatile_motes value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_exotic_gases value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_rare_crystals value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_sr_living_metal value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_sr_zro value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_sr_dark_matter value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_nanites value = imperial_crusade_my_war_score }
			multiply_variable = { which = spoil_receive_minor_artifacts value = imperial_crusade_my_war_score }
			add_resource = { energy = 1 mult = spoil_receive_energy }
			add_resource = { minerals = 1 mult = spoil_receive_minerals }
			add_resource = { food = 1 mult = spoil_receive_food }
			add_resource = { consumer_goods = 1 mult = spoil_receive_consumer_goods }
			add_resource = { alloys = 1 mult = spoil_receive_alloys }
			add_resource = { volatile_motes = 1 mult = spoil_receive_volatile_motes }
			add_resource = { exotic_gases = 1 mult = spoil_receive_exotic_gases }
			add_resource = { rare_crystals = 1 mult = spoil_receive_rare_crystals }
			add_resource = { sr_living_metal = 1 mult = spoil_receive_sr_living_metal }
			add_resource = { sr_zro = 1 mult = spoil_receive_sr_zro }
			add_resource = { sr_dark_matter = 1 mult = spoil_receive_sr_dark_matter }
			add_resource = { nanites = 1 mult = spoil_receive_nanites }
			add_resource = { minor_artifacts = 1 mult = spoil_receive_minor_artifacts }
			create_message = {
				type = MESSAGE_TYPE_IMPERIAL_CRUSADE_SPOIL
				localization = "MESSAGE_TYPE_IMPERIAL_CRUSADE_SPOIL_DESC"
				days = 30
				target = root.capital_scope
				variable = {
					type = name
					localization = TARGET
					scope = root
				}
			}
		}
	}
}
country_event = { #3020.每2000总分，进行帝国军事会议(3021.3025.)[3005.]
	id = MECR.3020
	title = "MECR.3020.name"
	desc = "MECR.3020.desc"
	picture = GFX_evt_galactic_empire
	show_sound = event_administrative_work
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_ai = yes }
			export_modifier_to_variable = {
				modifier = imperial_authority_monthly_get
				variable = var_imperial_authority_monthly_get
			}

			export_modifier_to_variable = {
				modifier = country_community_gdf_naval_capacity
				variable = ia_capacity
			}
			change_variable = { which = ia_capacity value = 400 }
			every_galaxy_fleet = {
				limit = { has_ship_owner_type = galactic_community }
				root = { subtract_variable = { which = ia_capacity value = prev.trigger:fleet_size } }
			}
			set_timed_country_flag = {
				flag = flag_MECR_620_ai_lag
				days = 21
			}
		}
	}

	option = {
		name = "MECR.3020.incite_fanaticism"
		allow = {
			imperial_authority >= 150
		}
		custom_tooltip = "MECR.3020.incite_fanaticism.tooltip"
		hidden_effect = {
			change_variable = { which = imperial_crusade_war_conference_incite_fanaticism value = 1 }
			country_event = { #持续五年
				id = MECR.3025
				days = 1800
			}
			every_galcom_member = {
				limit = { is_galactic_emperor = no }
				set_country_flag = flag_imperial_crusade_war_conference_incite_fanaticism
				country_event = { id = MECR.3021 }
			}
		}
		ai_chance = {
			base = 100
			#imperial_authority
			modifier = {
				mult = 0.5
				imperial_authority < 120
			}
			modifier = {
				mult = 0.5
				imperial_authority < 100
			}
			modifier = {
				mult = 0
				imperial_authority < 80
			}
			modifier = {
				mult = 2
				imperial_authority > 140
			}
			modifier = {
				mult = 2
				imperial_authority > 160
			}
			modifier = {
				mult = 2
				imperial_authority > 180
			}
			#imperial_authority_trend
			modifier = {
				mult = 0.5
				check_variable = { which = imperial_authority_trend value < -0.2 }
			}
			modifier = {
				mult = 0.5
				check_variable = { which = imperial_authority_trend value < -0.5 }
			}
			modifier = {
				mult = 0.1
				check_variable = { which = imperial_authority_trend value < -1 }
			}
			modifier = {
				mult = 1.5
				check_variable = { which = imperial_authority_trend value > 0 }
			}
			modifier = {
				mult = 2
				check_variable = { which = imperial_authority_trend value > 0.5 }
			}
			modifier = {
				mult = 2
				check_variable = { which = imperial_authority_trend value > 1 }
			}
			#situation_imperial_governance
			modifier = {
				mult = 2
				any_situation = {
					is_situation_type = situation_imperial_governance
					current_stage = stage_ipg_solidary
				}
			}
			modifier = {
				mult = 0.5
				any_situation = {
					is_situation_type = situation_imperial_governance
					current_stage = stage_ipg_orderly
				}
			}
			modifier = {
				mult = 0.5
				any_situation = {
					is_situation_type = situation_imperial_governance
					current_stage = stage_ipg_disorderly
				}
			}
			modifier = {
				mult = 0
				any_situation = {
					is_situation_type = situation_imperial_governance
					current_stage = stage_ipg_incontrollable
				}
			}
		}
	}
	option = {
		name = "MECR.3020.gather_strength"
		allow = {
			imperial_authority >= 120
		}
		custom_tooltip = "MECR.3020.gather_strength.tooltip"
		hidden_effect = {
			change_variable = { which = imperial_crusade_war_conference_gather_strength value = 24 }
			every_galcom_member = {
				limit = { is_galactic_emperor = no }
				set_country_flag = flag_imperial_crusade_war_conference_gather_strength
				country_event = { id = MECR.3021 }
			}
		}
		ai_chance = {
			base = 60
			modifier = {
				mult = 2
				used_naval_capacity_percent < 0.66
			}
			modifier = {
				mult = 2
				check_variable = { which = ia_capacity value > 400 }
			}
			modifier = {
				mult = 2
				check_variable = { which = ia_capacity value > 1000 }
			}
			modifier = {
				mult = 0.5
				OR = {
					used_naval_capacity_percent > 0.9
					check_variable = { which = ia_capacity value < 200 }
				}
			}
			modifier = {
				mult = 0.2
				used_naval_capacity_percent > 0.9
				check_variable = { which = ia_capacity value < 200 }
			}
		}
	}
	option = {
		name = "MECR.3020.economic_recuperation"
		allow = {
			imperial_authority <= 180
		}
		custom_tooltip = "MECR.3020.economic_recuperation.tooltip"
		hidden_effect = {
			set_variable = { which = imperial_crusade_war_conference_gather_strength value = 24 }
			every_galcom_member = {
				limit = { is_galactic_emperor = no }
				set_country_flag = flag_imperial_crusade_war_conference_economic_recuperation
				country_event = { id = MECR.3021 }
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				mult = 7
				has_deficit = alloys
			}
			modifier = {
				mult = 7
				has_deficit = energy
			}
			modifier = {
				mult = 3
				OR = {
					has_deficit = minerals
					AND = {
						has_deficit = consumer_goods
						country_uses_consumer_goods = yes
					}
					AND = {
						has_deficit = food
						country_uses_food = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_deficit = volatile_motes
					has_deficit = exotic_gases
					has_deficit = rare_crystals
				}
			}
		}
	}
	option = {
		name = "MECR.3020.consolidate_our_solidarity"
		allow = {
			imperial_authority <= 150
		}
		custom_tooltip = "MECR.3020.consolidate_our_solidarity.tooltip"
		add_imperial_authority = 20
		hidden_effect = {
			every_galcom_member = {
				limit = { is_galactic_emperor = no }
				set_country_flag = flag_imperial_crusade_war_conference_consolidate_our_solidarity
				country_event = { id = MECR.3021 }
			}
		}
		ai_chance = {
			base = 150
			subtract = trigger:imperial_authority
			mult = 2
			modifier = {
				imperial_authority < 80
				add = 100
			}
		}
	}
}
country_event = { #3021.帝国军事会议，其他成员国通知
	id = MECR.3021
	title = "MECR.3021.name"
	desc = {
		text = "MECR.3021.desc.incite_fanaticism"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_incite_fanaticism }
	}
	desc = {
		text = "MECR.3021.desc.gather_strength"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_gather_strength }
	}
	desc = {
		text = "MECR.3021.desc.economic_recuperation"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_economic_recuperation }
	}
	desc = {
		text = "MECR.3021.desc.consolidate_our_solidarity"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_consolidate_our_solidarity }
	}
	picture = GFX_evt_galactic_empire
	show_sound = event_administrative_work
	is_triggered_only = yes

	option = {
		name = "MECR.3021.a.incite_fanaticism"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_incite_fanaticism }
		add_imperial_authority = 1
		custom_tooltip = "MECR.3020.incite_fanaticism.tooltip"
		hidden_effect = { remove_country_flag = flag_imperial_crusade_war_conference_incite_fanaticism }
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 100
		}
	}
	option = {
		name = "MECR.3021.a.gather_strength"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_gather_strength }
		add_imperial_authority = 1
		custom_tooltip = "MECR.3020.gather_strength.tooltip"
		hidden_effect = { remove_country_flag = flag_imperial_crusade_war_conference_gather_strength }
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 100
		}
	}
	option = {
		name = "MECR.3021.a.economic_recuperation"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_economic_recuperation }
		add_imperial_authority = 1
		custom_tooltip = "MECR.3020.economic_recuperation.tooltip"
		hidden_effect = { remove_country_flag = flag_imperial_crusade_war_conference_economic_recuperation }
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 200
		}
	}
	option = {
		name = "MECR.3021.a.consolidate_our_solidarity"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_consolidate_our_solidarity }
		add_imperial_authority = 1
		custom_tooltip = "MECR.3020.consolidate_our_solidarity.tooltip"
		tooltip = { add_imperial_authority = 20 }
		hidden_effect = { remove_country_flag = flag_imperial_crusade_war_conference_consolidate_our_solidarity }
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 60
		}
	}

	option = {
		name = "MECR.3021.b.incite_fanaticism"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_incite_fanaticism }
		add_imperial_authority = -1
		custom_tooltip = "MECR.3020.incite_fanaticism.tooltip"
		hidden_effect = { remove_country_flag = flag_imperial_crusade_war_conference_incite_fanaticism }
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 80
		}
	}
	option = {
		name = "MECR.3021.b.gather_strength"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_gather_strength }
		add_imperial_authority = -1
		custom_tooltip = "MECR.3020.gather_strength.tooltip"
		hidden_effect = { remove_country_flag = flag_imperial_crusade_war_conference_gather_strength }
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 80
		}
	}
	option = {
		name = "MECR.3021.b.economic_recuperation"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_economic_recuperation }
		add_imperial_authority = -1
		custom_tooltip = "MECR.3020.economic_recuperation.tooltip"
		hidden_effect = { remove_country_flag = flag_imperial_crusade_war_conference_economic_recuperation }
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 80
		}
	}
	option = {
		name = "MECR.3021.b.consolidate_our_solidarity"
		trigger = { has_country_flag = flag_imperial_crusade_war_conference_consolidate_our_solidarity }
		add_imperial_authority = -1
		custom_tooltip = "MECR.3020.consolidate_our_solidarity.tooltip"
		tooltip = { add_imperial_authority = 20 }
		hidden_effect = { remove_country_flag = flag_imperial_crusade_war_conference_consolidate_our_solidarity }
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 80
		}
	}
}
country_event = { #3025.五年后移除一层煽动狂热
	id = MECR.3025
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		
	}

	immediate = {
		if = {
			limit = { check_variable = { which = imperial_crusade_war_conference_incite_fanaticism value > 0 } }
			subtract_variable = { which = imperial_crusade_war_conference_incite_fanaticism value = 1 }
		}
	}
}
country_event = { #3030.大远征积分：摧毁舰船[on_ship_destroyed_perp]
	id = MECR.3030
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_imperial_crusade_ongoing
		is_galactic_community_member = yes
		From = {
			OR = {
				is_hostile = root
				is_in_imperial_crusade = yes
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_event_chain = imperial_crusade_war_score }
				is_galactic_community_member = yes
			}
			begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
		}
		FromFromFrom = {
			switch = {
				trigger = is_ship_size
				# normal
				corvette = { root = { imperial_crusade_score = { value = 1 } } }
				frigate = { root = { imperial_crusade_score = { value = 1 } } }
				destroyer = { root = { imperial_crusade_score = { value = 2 } } }
				cruiser = { root = { imperial_crusade_score = { value = 4 } } }
				battleship = { root = { imperial_crusade_score = { value = 8 } } }
				titan = { root = { imperial_crusade_score = { value = 16 } } }
				transport = { root = { imperial_crusade_score = { value = 1 } } }
				military_station_small = { root = { imperial_crusade_score = { value = 2 } } }
				military_station_medium = { root = { imperial_crusade_score = { value = 4 } } }
				military_station_large = { root = { imperial_crusade_score = { value = 8 } } }
				juggernaut = { root = { imperial_crusade_score = { value = 32 } } }
				colossus = { root = { imperial_crusade_score = { value = 32 } } }
				crisis_corvette = { root = { imperial_crusade_score = { value = 1 } } }
				crisis_destroyer = { root = { imperial_crusade_score = { value = 2 } } }
				crisis_cruiser = { root = { imperial_crusade_score = { value = 4 } } }
				star_eater = { root = { imperial_crusade_score = { value = 32 } } }
				# fallen empire
				massive_ship_fallen_empire = { root = { imperial_crusade_score = { value = 16 } } }
				large_ship_fallen_empire = { root = { imperial_crusade_score = { value = 8 } } }
				small_ship_fallen_empire = { root = { imperial_crusade_score = { value = 2 } } }
				military_station_small_fallen_empire = { root = { imperial_crusade_score = { value = 2 } } }
				military_station_large_fallen_empire = { root = { imperial_crusade_score = { value = 8 } } }
				# special
				mining_station = { }
				research_station = { }
				observation_station = { }
				enclave_station = { }
				enclave_mercenary_station = { }
				enclave_salvager_station = { }
				enclave_shroudwalker_station = { }
				primitive_space_station = { }
				offspring_corvette = { root = { imperial_crusade_score = { value = 1 } } }
				offspring_frigate = { root = { imperial_crusade_score = { value = 1 } } }
				offspring_destroyer = { root = { imperial_crusade_score = { value = 2 } } }
				offspring_cruiser = { root = { imperial_crusade_score = { value = 4 } } }
				offspring_battleship = { root = { imperial_crusade_score = { value = 8 } } }
				reanimated_space_dragon_red = { root = { imperial_crusade_score = { value = 32 } } }
				reanimated_space_dragon_blue = { root = { imperial_crusade_score = { value = 32 } } }
				reanimated_space_dragon_origin = { root = { imperial_crusade_score = { value = 32 } } }
				reanimated_leviathan_01_elder_tiyanki = { root = { imperial_crusade_score = { value = 32 } } }
				reanimated_leviathan_01_voidspawn = { root = { imperial_crusade_score = { value = 32 } } }
				reanimated_space_amoeba = { root = { imperial_crusade_score = { value = 32 } } }
				reanimated_space_amoeba_centenarian = { root = { imperial_crusade_score = { value = 1 } } }
				reanimated_space_amoeba_mother = { root = { imperial_crusade_score = { value = 4 } } }
				reanimated_space_dragon_red = { root = { imperial_crusade_score = { value = 8 } } }
				reanimated_space_whale_1 = { root = { imperial_crusade_score = { value = 4 } } }
				reanimated_space_whale_2 = { root = { imperial_crusade_score = { value = 4 } } }
				reanimated_space_whale_3 = { root = { imperial_crusade_score = { value = 3 } } }
				reanimated_space_whale_4 = { root = { imperial_crusade_score = { value = 3 } } }
				# mid-game crisis
				marauder_corvette = { root = { imperial_crusade_score = { value = 1 } } }
				marauder_destroyer = { root = { imperial_crusade_score = { value = 2 } } }
				marauder_cruiser = { root = { imperial_crusade_score = { value = 4 } } }
				marauder_galleon = { root = { imperial_crusade_score = { value = 16 } } }
				marauder_station = { root = { imperial_crusade_score = { value = 4 } } }
				marauder_void_dwelling = { root = { imperial_crusade_score = { value = 8 } } }
				graygoo_mothership = { root = { imperial_crusade_score = { value = 16 } } }
				graygoo_interdictor = { root = { imperial_crusade_score = { value = 4 } } }
				graygoo_factory = { root = { imperial_crusade_score = { value = 32 } } }
				# crisis
				large_ship_swarm = { root = { imperial_crusade_score_crisis = { value = 8 } } }
				large_ship_carrier_swarm = { root = { imperial_crusade_score_crisis = { value = 8 } } }
				small_ship_swarm = { root = { imperial_crusade_score_crisis = { value = 2 } } }
				queen_swarm = { root = { imperial_crusade_score_crisis = { value = 16 } } }
				large_ship_ed = { root = { imperial_crusade_score_crisis = { value = 8 } } }
				medium_ship_ed = { root = { imperial_crusade_score_crisis = { value = 4 } } }
				small_ship_ed = { root = { imperial_crusade_score_crisis = { value = 2 } } }
				dimensional_portal_ed = { root = { imperial_crusade_score_crisis = { value = 128 } } }
				large_ship_ai = { root = { imperial_crusade_score_crisis = { value = 8 } } }
				small_ship_ai = { root = { imperial_crusade_score_crisis = { value = 2 } } }
				military_station_large_ai = { root = { imperial_crusade_score_crisis = { value = 8 } } }
				military_station_small_ai = { root = { imperial_crusade_score_crisis = { value = 4 } } }
				core_ai = { root = { imperial_crusade_score_crisis = { value = 32 } } }
				final_core_ai = { root = { imperial_crusade_score_crisis = { value = 32 } } }
				# space monsters &leviathans
				pirate_corvette = { root = { imperial_crusade_score = { value = 1 } } }
				pirate_destroyer = { root = { imperial_crusade_score = { value = 2 } } }
				pirate_cruiser = { root = { imperial_crusade_score = { value = 4 } } }
				pirate_station = { root = { imperial_crusade_score = { value = 4 } } }
				bemat_corvette = { root = { imperial_crusade_score = { value = 1 } } }
				bemat_destroyer = { root = { imperial_crusade_score = { value = 2 } } }
				bemat_cruiser = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_ship_medium_blue = { root = { imperial_crusade_score = { value = 2 } } }
				crystal_ship_medium_green = { root = { imperial_crusade_score = { value = 2 } } }
				crystal_ship_medium_yellow = { root = { imperial_crusade_score = { value = 2 } } }
				crystal_ship_medium_red = { root = { imperial_crusade_score = { value = 2 } } }
				crystal_ship_medium_blue_elite = { root = { imperial_crusade_score = { value = 2 } } }
				crystal_ship_medium_green_elite = { root = { imperial_crusade_score = { value = 2 } } }
				crystal_ship_medium_yellow_elite = { root = { imperial_crusade_score = { value = 2 } } }
				crystal_ship_medium_red_elite = { root = { imperial_crusade_score = { value = 2 } } }
				crystal_ship_large_blue = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_ship_large_green = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_ship_large_yellow = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_ship_large_red = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_ship_large_blue_elite = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_ship_large_green_elite = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_ship_large_yellow_elite = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_ship_large_red_elite = { root = { imperial_crusade_score = { value = 4 } } }
				crystal_station_large = { root = { imperial_crusade_score = { value = 16 } } }
				space_cloud = { root = { imperial_crusade_score = { value = 4 } } }
				space_amoeba = { root = { imperial_crusade_score = { value = 1 } } }
				space_amoeba_mother = { root = { imperial_crusade_score = { value = 4 } } }
				lost_swarm_adult = { root = { imperial_crusade_score = { value = 8 } } }
				space_whale_1 = { root = { imperial_crusade_score = { value = 4 } } }
				space_whale_2 = { root = { imperial_crusade_score = { value = 4 } } }
				space_whale_3 = { root = { imperial_crusade_score = { value = 3 } } }
				space_whale_4 = { root = { imperial_crusade_score = { value = 3 } } }
				space_whale_5 = { root = { imperial_crusade_score = { value = 3 } } }
				ancient_mining_drone = { root = { imperial_crusade_score = { value = 1 } } }
				ancient_corvette = { root = { imperial_crusade_score = { value = 1 } } }
				ancient_destroyer = { root = { imperial_crusade_score = { value = 2 } } }
				lesser_space_cloud = { root = { imperial_crusade_score = { value = 4 } } }
				space_dragon_red = { root = { imperial_crusade_score = { value = 32 } } }
				stellarite = { root = { imperial_crusade_score = { value = 32 } } }
				sphere = { root = { imperial_crusade_score = { value = 32 } } }
				galleon = { root = { imperial_crusade_score = { value = 8 } } }
				station_xl = { root = { imperial_crusade_score = { value = 16 } } }
				station_l = { root = { imperial_crusade_score = { value = 8 } } }
				station_m = { root = { imperial_crusade_score = { value = 4 } } }
				station_s = { root = { imperial_crusade_score = { value = 2 } } }
				station_xs = { root = { imperial_crusade_score = { value = 1 } } }
				dimensional_horror = { root = { imperial_crusade_score = { value = 32 } } }
				toxic_god = { root = { imperial_crusade_score = { value = 32 } } }
				npc_warship_01 = { root = { imperial_crusade_score = { value = 16 } } }
				homebase = { root = { imperial_crusade_score = { value = 8 } } }
				hive_asteroid = { root = { imperial_crusade_score = { value = 8 } } }
				wraith_01_blue = { root = { imperial_crusade_score = { value = 16 } } }
				wraith_01_red = { root = { imperial_crusade_score = { value = 16 } } }
				wraith_01_yellow = { root = { imperial_crusade_score = { value = 16 } } }
				space_dragon_baby = { root = { imperial_crusade_score = { value = 16 } } }
				space_dragon_blue = { root = { imperial_crusade_score = { value = 32 } } }
				space_dragon_origin = { root = { imperial_crusade_score = { value = 32 } } }
				space_dragon_origin_baby = { root = { imperial_crusade_score = { value = 16 } } }
				psionic_avatar = { root = { imperial_crusade_score = { value = 16 } } }
				corrupted_avatar = { root = { imperial_crusade_score = { value = 16 } } }
				shroud_manifestation = { root = { imperial_crusade_score = { value = 16 } } }
				warped_consciousness = { root = { imperial_crusade_score = { value = 32 } } }
				leviathan_01_scavenger_bot = { root = { imperial_crusade_score = { value = 32 } } }
				leviathan_01_elder_tiyanki = { root = { imperial_crusade_score = { value = 32 } } }
				leviathan_01_voidspawn = { root = { imperial_crusade_score = { value = 32 } } }
				enigmatic_cache = { root = { imperial_crusade_score = { value = 32 } } }
				nanite_space_dragon_baby = { root = { imperial_crusade_score = { value = 16 } } }
				space_amoeba_centenarian = { root = { imperial_crusade_score = { value = 8 } } }
				caravaneer_destroyer_01 = { root = { imperial_crusade_score = { value = 2 } } }
				caravaneer_cruiser_01 = { root = { imperial_crusade_score = { value = 4 } } }
				# events
				payback_warship = { root = { imperial_crusade_score = { value = 16 } } }
				abandoned_ship = { root = { imperial_crusade_score = { value = 4 } } }
				station_generic_01 = { root = { imperial_crusade_score = { value = 4 } } }
				sensor_station_01 = { root = { imperial_crusade_score = { value = 4 } } }
				eventship_01 = { root = { imperial_crusade_score = { value = 4 } } }
				eventship_02 = { root = { imperial_crusade_score = { value = 1 } } }
				eventship_03 = { root = { imperial_crusade_score = { value = 8 } } }
				eventship_04 = { root = { imperial_crusade_score = { value = 8 } } }
				eventship_05 = { root = { imperial_crusade_score = { value = 4 } } }
				eventship_06 = { root = { imperial_crusade_score = { value = 2 } } }
				eventship_07 = { root = { imperial_crusade_score = { value = 2 } } }
				nomad_destroyer = { root = { imperial_crusade_score = { value = 2 } } }
				ancient_drone_station = { root = { imperial_crusade_score = { value = 16 } } }
				ghost_ship = { root = { imperial_crusade_score = { value = 2 } } }
				wenkwort_enforcer = { root = { imperial_crusade_score = { value = 4 } } }

				default = { root = { imperial_crusade_score = { value = 1 } } }
			}
		}
	}
}
country_event = { #3031.大远征积分：舰船牺牲[on_ship_destroyed_perp]
	id = MECR.3031
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_imperial_crusade_ongoing
		From = { is_galactic_community_member = yes }
		OR = {
			is_hostile = From
			is_in_imperial_crusade = yes
		}
	}

	immediate = {
		From = {
			if = {
				limit = {
					NOT = { has_event_chain = imperial_crusade_war_score }
					is_galactic_community_member = yes
				}
				begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
			}
		}
		FromFromFrom = {
			switch = {
				trigger = is_ship_size
				# normal
				corvette = { From = { imperial_crusade_score = { value = 0.5 } } }
				frigate = { From = { imperial_crusade_score = { value = 0.5 } } }
				destroyer = { From = { imperial_crusade_score = { value = 1 } } }
				cruiser = { From = { imperial_crusade_score = { value = 2 } } }
				battleship = { From = { imperial_crusade_score = { value = 8 } } }
				titan = { From = { imperial_crusade_score = { value = 8 } } }
				transport = { From = { imperial_crusade_score = { value = 0.5 } } }
				military_station_small = { From = { imperial_crusade_score = { value = 1 } } }
				military_station_medium = { From = { imperial_crusade_score = { value = 2 } } }
				military_station_large = { From = { imperial_crusade_score = { value = 8 } } }
				juggernaut = { From = { imperial_crusade_score = { value = 16 } } }
				colossus = { From = { imperial_crusade_score = { value = 16 } } }
				crisis_corvette = { From = { imperial_crusade_score = { value = 0.5 } } }
				crisis_destroyer = { From = { imperial_crusade_score = { value = 1 } } }
				crisis_cruiser = { From = { imperial_crusade_score = { value = 2 } } }
				star_eater = { From = { imperial_crusade_score = { value = 16 } } }
				# fallen empire
				massive_ship_fallen_empire = { From = { imperial_crusade_score = { value = 8 } } }
				large_ship_fallen_empire = { From = { imperial_crusade_score = { value = 8 } } }
				small_ship_fallen_empire = { From = { imperial_crusade_score = { value = 1 } } }
				military_station_small_fallen_empire = { From = { imperial_crusade_score = { value = 1 } } }
				military_station_large_fallen_empire = { From = { imperial_crusade_score = { value = 8 } } }
				# special
				mining_station = { }
				research_station = { }
				observation_station = { }
				enclave_station = { }
				enclave_mercenary_station = { }
				enclave_salvager_station = { }
				enclave_shroudwalker_station = { }
				primitive_space_station = { }
				offspring_corvette = { From = { imperial_crusade_score = { value = 0.5 } } }
				offspring_frigate = { From = { imperial_crusade_score = { value = 0.5 } } }
				offspring_destroyer = { From = { imperial_crusade_score = { value = 1 } } }
				offspring_cruiser = { From = { imperial_crusade_score = { value = 2 } } }
				offspring_battleship = { From = { imperial_crusade_score = { value = 8 } } }
				reanimated_space_dragon_red = { From = { imperial_crusade_score = { value = 16 } } }
				reanimated_space_dragon_blue = { From = { imperial_crusade_score = { value = 16 } } }
				reanimated_space_dragon_origin = { From = { imperial_crusade_score = { value = 16 } } }
				reanimated_leviathan_01_elder_tiyanki = { From = { imperial_crusade_score = { value = 16 } } }
				reanimated_leviathan_01_voidspawn = { From = { imperial_crusade_score = { value = 16 } } }
				reanimated_space_amoeba = { From = { imperial_crusade_score = { value = 16 } } }
				reanimated_space_amoeba_centenarian = { From = { imperial_crusade_score = { value = 0.5 } } }
				reanimated_space_amoeba_mother = { From = { imperial_crusade_score = { value = 2 } } }
				reanimated_space_dragon_red = { From = { imperial_crusade_score = { value = 8 } } }
				reanimated_space_whale_1 = { From = { imperial_crusade_score = { value = 2 } } }
				reanimated_space_whale_2 = { From = { imperial_crusade_score = { value = 2 } } }
				reanimated_space_whale_3 = { From = { imperial_crusade_score = { value = 1.5 } } }
				reanimated_space_whale_4 = { From = { imperial_crusade_score = { value = 1.5 } } }
				# space monsters &leviathans
				toxic_god = { From = { imperial_crusade_score = { value = 16 } } }
				npc_warship_01 = { From = { imperial_crusade_score = { value = 8 } } }
				space_dragon_baby = { From = { imperial_crusade_score = { value = 8 } } }
				space_dragon_origin = { From = { imperial_crusade_score = { value = 16 } } }
				space_dragon_origin_baby = { From = { imperial_crusade_score = { value = 8 } } }
				psionic_avatar = { From = { imperial_crusade_score = { value = 8 } } }
				shroud_manifestation = { From = { imperial_crusade_score = { value = 8 } } }
				nanite_space_dragon_baby = { From = { imperial_crusade_score = { value = 8 } } }
				caravaneer_destroyer_01 = { From = { imperial_crusade_score = { value = 1 } } }
				caravaneer_cruiser_01 = { From = { imperial_crusade_score = { value = 2 } } }
				space_amoeba = { From = { imperial_crusade_score = { value = 1 } } }
				space_amoeba_mother = { From = { imperial_crusade_score = { value = 2 } } }
				space_amoeba_centenarian = { From = { imperial_crusade_score = { value = 8 } } }
				# events
				payback_warship = { From = { imperial_crusade_score = { value = 8 } } }
				eventship_01 = { From = { imperial_crusade_score = { value = 2 } } }
				eventship_02 = { From = { imperial_crusade_score = { value = 0.5 } } }
				eventship_03 = { From = { imperial_crusade_score = { value = 8 } } }
				eventship_04 = { From = { imperial_crusade_score = { value = 8 } } }
				eventship_05 = { From = { imperial_crusade_score = { value = 2 } } }
				eventship_06 = { From = { imperial_crusade_score = { value = 1 } } }
				eventship_07 = { From = { imperial_crusade_score = { value = 1 } } }
				nomad_destroyer = { From = { imperial_crusade_score = { value = 1 } } }

				default = { From = { imperial_crusade_score = { value = 0.5 } } }
			}
		}
	}
}
starbase_event = { #3032.大远征积分：摧毁/失能星基[on_starbase_destroyed.on_starbase_disabled]
	id = MECR.3032
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_imperial_crusade_ongoing
		From.owner = { is_galactic_community_member = yes }
		owner = {
			NOT = { is_same_value = From.owner }
			OR = {
				is_hostile = From.owner
				is_in_imperial_crusade = yes
			}
		}
	}
	
	immediate = {
		From.owner = {
			if = {
				limit = {
					NOT = { has_event_chain = imperial_crusade_war_score }
					is_galactic_community_member = yes
				}
				begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
			}
		}
		switch = {
			trigger:has_starbase_size
			starbase_outpost = { From.owner = { imperial_crusade_score = { value = 1 } } }
			starbase_starport = { From.owner = { imperial_crusade_score = { value = 4 } } }
			starbase_starhold = { From.owner = { imperial_crusade_score = { value = 9 } } }
			starbase_starfortress = { From.owner = { imperial_crusade_score = { value = 16 } } }
			starbase_citadel = { From.owner = { imperial_crusade_score = { value = 32 } } }
			starbase_swarm = { From.owner = { imperial_crusade_score_crisis = { value = 16 } } }
			starbase_ai = { From.owner = { imperial_crusade_score_crisis = { value = 16 } } }
			starbase_exd_0 = { From.owner = { imperial_crusade_score_crisis = { value = 16 } } }
			starbase_exd = { From.owner = { imperial_crusade_score_crisis = { value = 16 } } }
			starbase_marauder = { From.owner = { imperial_crusade_score = { value = 16 } } }
			starbase_gatebuilders = { From.owner = { imperial_crusade_score = { value = 16 } } }
			starbase_fe_outpost = { From.owner = { imperial_crusade_score = { value = 1 } } }
			orbital_ring_tier_1 = { From.owner = { imperial_crusade_score = { value = 4 } } }
			orbital_ring_tier_2 = { From.owner = { imperial_crusade_score = { value = 4 } } }
			orbital_ring_tier_3 = { From.owner = { imperial_crusade_score = { value = 4 } } }
		}
	}
}
starbase_event = { #3033.大远征积分：失能星基立即加flag，高优先级[on_starbase_disabled]
	id = MECR.3033
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_imperial_crusade_ongoing
		From.owner = { is_galactic_community_member = yes }
		owner = {
			OR = {
				is_hostile = From.owner
				is_in_imperial_crusade = yes
			}
		}
	}
	
	immediate = {
		fleet = {
			every_owned_ship = {
				set_timed_ship_flag = {
					flag = flag_starbase_disabled_imperial_crusade
					days = 1
				}
			}
		}
	}
}
starbase_event = { #3034.大远征积分：占领星基[on_starbase_transfer]
	id = MECR.3034
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_ship_flag = flag_starbase_disabled_imperial_crusade
	}
	
	immediate = {
		owner = {
			if = {
				limit = {
					NOT = { has_event_chain = imperial_crusade_war_score }
					is_galactic_community_member = yes
				}
				begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
			}
		}
		switch = {
			trigger:is_ship_size
			starbase_outpost = { owner = { imperial_crusade_score = { value = 1 } } }
			starbase_starport = { owner = { imperial_crusade_score = { value = 4 } } }
			starbase_starhold = { owner = { imperial_crusade_score = { value = 9 } } }
			starbase_starfortress = { owner = { imperial_crusade_score = { value = 16 } } }
			starbase_citadel = { owner = { imperial_crusade_score = { value = 32 } } }
			starbase_swarm = { owner = { imperial_crusade_score_crisis = { value = 16 } } }
			starbase_ai = { owner = { imperial_crusade_score_crisis = { value = 16 } } }
			starbase_exd_0 = { owner = { imperial_crusade_score_crisis = { value = 16 } } }
			starbase_exd = { owner = { imperial_crusade_score_crisis = { value = 16 } } }
			starbase_marauder = { owner = { imperial_crusade_score = { value = 16 } } }
			starbase_gatebuilders = { owner = { imperial_crusade_score = { value = 16 } } }
			starbase_fe_outpost = { owner = { imperial_crusade_score = { value = 1 } } }
			orbital_ring_tier_1 = { owner = { imperial_crusade_score = { value = 4 } } }
			orbital_ring_tier_2 = { owner = { imperial_crusade_score = { value = 4 } } }
			orbital_ring_tier_3 = { owner = { imperial_crusade_score = { value = 4 } } }
		}
	}
}
country_event = { #3035.大远征积分：占领行星[on_planet_attackers_win]
	id = MECR.3035
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_imperial_crusade_ongoing
		is_galactic_community_member = yes
		From = {
			OR = {
				is_hostile = root
				is_in_imperial_crusade = yes
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = { has_event_chain = imperial_crusade_war_score }
				is_galactic_community_member = yes
			}
			begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
		}
		if = {
			limit = { From = { is_crisis_faction = yes } }
			imperial_crusade_score_crisis = { value = 30 }
		}
		else = {
			imperial_crusade_score = { value = 10 }
			imperial_crusade_score = { value = FromFrom.trigger:count_owned_pops }
		}
	}
}
planet_event = { #3036.大远征积分：部分巨像射击行星，高优先级[on_destroy_planet_with_xx]
	id = MECR.3036
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_imperial_crusade_ongoing
		From.owner = { is_galactic_community_member = yes }
		owner = {
			NOT = { is_same_value = From.owner }
			OR = {
				is_hostile = From.owner
				is_in_imperial_crusade = yes
			}
		}
	}
	
	immediate = {
		From.owner = {
			if = {
				limit = {
					NOT = { has_event_chain = imperial_crusade_war_score }
					is_galactic_community_member = yes
				}
				begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
			}
			if = {
				limit = { root.owner = { is_crisis_faction = yes } }
				imperial_crusade_score_crisis = { value = 30 }
			}
			else = {
				imperial_crusade_score = { value = 10 }
				imperial_crusade_score = { value = FromFrom.trigger:count_owned_pops }
			}
		}
	}
}
planet_event = { #3037.大远征积分：炸死人口[on_pop_bombed_to_death]
	id = MECR.3037
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_imperial_crusade_ongoing
		From = { is_galactic_community_member = yes }
		owner = {
			OR = {
				is_hostile = From
				is_in_imperial_crusade = yes
			}
		}
	}

	immediate = {
		From = {
			if = {
				limit = {
					NOT = { has_event_chain = imperial_crusade_war_score }
					is_galactic_community_member = yes
				}
				begin_event_chain = { event_chain = imperial_crusade_war_score target = this }
			}
			imperial_crusade_score = { value = 1 }
		}
	}
}
country_event = { #3050.大远征结束处理与计算(3051.3052.3053.3054.3055.)
	id = MECR.3050
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# 统计剩余的作为大远征目标的国家面积
		set_variable = { which = imperial_crusade_unconquered_area_galaxy_percentage value = 0 }
		every_country = {
			limit = {
				is_galactic_community_member = no
				has_country_flag = flag_imperial_crusade_target_@galactic_emperor
			}
			remove_country_flag = flag_imperial_crusade_target_@galactic_emperor
			root = { change_variable = { which = imperial_crusade_unconquered_area_galaxy_percentage value = prev.trigger:galaxy_percentage } }
		}
		set_variable = { which = imperial_crusade_conquered_progress value = imperial_crusade_unconquered_area_galaxy_percentage }
		divide_variable = { which = imperial_crusade_conquered_progress value = imperial_crusade_target_empires_galaxy_percentage }
		remove_global_flag = flag_imperial_crusade_ongoing
		galactic_emperor = {
			set_country_flag = flag_imperial_crusade_ended
		}
		event_target:global_event_country = {
			clear_variable = imperial_crusade_total_war_score
			clear_variable = imperial_crusade_war_score_bonus
		}
		#结束事件
		if = { #S
			limit = { check_variable = { which = imperial_crusade_unconquered_area_galaxy_percentage value = 0 } }
			every_playable_country = {
				country_event = {
					id = MECR.3051
				}
			}
		}
		else_if = { #A
			limit = { check_variable = { which = imperial_crusade_unconquered_area_galaxy_percentage value <= 0.1 } }
			every_playable_country = {
				country_event = {
					id = MECR.3052
				}
			}
		}
		else_if = { #B
			limit = { check_variable = { which = imperial_crusade_unconquered_area_galaxy_percentage value <= 0.2 } }
			every_playable_country = {
				country_event = {
					id = MECR.3053
				}
			}
		}
		else_if = { #C
			limit = { check_variable = { which = imperial_crusade_unconquered_area_galaxy_percentage value <= 0.4 } }
			every_playable_country = {
				country_event = {
					id = MECR.3054
				}
			}
		}
		else = { #D
			every_playable_country = {
				country_event = {
					id = MECR.3055
				}
			}
		}
		cancel_resolution = resolution_galactic_empire_imperial_crusade_MECR
	}
}
country_event = { #3051.大远征结束S
	id = MECR.3051
	title = "MECR.3015.name"
	desc = {
		text = "MECR.3015.desc.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
	}
	desc = {
		text = "MECR.3015.desc.member"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
	}
	desc = {
		text = "MECR.3015.desc.outsider"
		trigger = {
			is_galactic_community_member = no
		}
	}
	picture = GFX_evt_fleet_from_surface
	show_sound = event_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.3015.option.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
		add_resource = {
			influence = 500
		}
		add_modifier = {
			modifier = imperial_crusade_rank_s
			days = 3600
		}
	}
	option = {
		name = "MECR.3015.option.member.a"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		add_resource = {
			influence = 250
		}
		add_opinion_modifier = {
			who = galactic_emperor
			modifier = opinion_victory_of_crusade
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_s
					days = 3600
				}
			}
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 200
		}
	}
	option = {
		name = "MECR.3015.option.member.b"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		add_modifier = {
			modifier = imperial_crusade_disrupting_the_imperium
			days = 360
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_s
					days = 3600
				}
			}
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 1
		}
	}
	option = {
		name = "MECR.3015.option.outsider"
		trigger = {
			is_galactic_community_member = no
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_s
					days = 3600
				}
			}
		}
	}
	after = {
		tooltip = { cancel_resolution = resolution_galactic_empire_imperial_crusade_MECR }
		hidden_effect = {
			if = {
				limit = { has_event_chain = imperial_crusade_war_score }
				end_event_chain = imperial_crusade_war_score
			}
			clear_variable = imperial_crusade_my_war_score
		}
	}
}
country_event = { #3052.大远征结束A
	id = MECR.3052
	title = "MECR.3016.name"
	desc = {
		text = "MECR.3016.desc.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
	}
	desc = {
		text = "MECR.3016.desc.member"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
	}
	desc = {
		text = "MECR.3016.desc.outsider"
		trigger = {
			is_galactic_community_member = no
		}
	}
	picture = GFX_evt_fleet_from_surface
	show_sound = event_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.3016.option.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
		add_resource = {
			influence = 300
		}
		add_modifier = {
			modifier = imperial_crusade_rank_a
			days = 3600
		}
	}
	option = {
		name = "MECR.3016.option.member.a"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		add_resource = {
			influence = 150
		}
		add_opinion_modifier = {
			who = galactic_emperor
			modifier = opinion_victory_of_crusade
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_a
					days = 3600
				}
			}
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 100
		}
	}
	option = {
		name = "MECR.3016.option.member.b"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		add_modifier = {
			modifier = imperial_crusade_disrupting_the_imperium
			days = 900
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_a
					days = 3600
				}
			}
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 20
		}
	}
	option = {
		name = "MECR.3016.option.outsider"
		trigger = {
			is_galactic_community_member = no
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_a
					days = 3600
				}
			}
		}
	}
	after = {
		tooltip = { cancel_resolution = resolution_galactic_empire_imperial_crusade_MECR }
		hidden_effect = {
			if = {
				limit = { has_event_chain = imperial_crusade_war_score }
				end_event_chain = imperial_crusade_war_score
			}
			clear_variable = imperial_crusade_my_war_score
		}
	}
}
country_event = { #3053.大远征结束B
	id = MECR.3053
	title = "MECR.3017.name"
	desc = {
		text = "MECR.3017.desc.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
	}
	desc = {
		text = "MECR.3017.desc.member"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
	}
	desc = {
		text = "MECR.3017.desc.outsider"
		trigger = {
			is_galactic_community_member = no
		}
	}
	picture = GFX_evt_fleet_from_surface
	show_sound = event_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.3017.option.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
		add_resource = {
			influence = 200
		}
	}
	option = {
		name = "MECR.3017.option.member.a"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		add_resource = {
			influence = 100
		}
		add_opinion_modifier = {
			who = galactic_emperor
			modifier = opinion_victory_of_crusade
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 80
		}
	}
	option = {
		name = "MECR.3017.option.member.b"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		add_modifier = {
			modifier = imperial_crusade_disrupting_the_imperium
			days = 1800
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 40
		}
	}
	option = {
		name = "MECR.3017.option.outsider"
		trigger = {
			is_galactic_community_member = no
		}
	}
	after = {
		tooltip = { cancel_resolution = resolution_galactic_empire_imperial_crusade_MECR }
		hidden_effect = {
			if = {
				limit = { has_event_chain = imperial_crusade_war_score }
				end_event_chain = imperial_crusade_war_score
			}
			clear_variable = imperial_crusade_my_war_score
		}
	}
}
country_event = { #3054.大远征结束C
	id = MECR.3054
	title = "MECR.3018.name"
	desc = {
		text = "MECR.3018.desc.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
	}
	desc = {
		text = "MECR.3018.desc.member"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
	}
	desc = {
		text = "MECR.3018.desc.outsider"
		trigger = {
			is_galactic_community_member = no
		}
	}
	picture = GFX_evt_fleet_from_surface
	show_sound = event_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.3018.option.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
		add_modifier = {
			modifier = imperial_crusade_rank_c
			days = 3600
		}
	}
	option = {
		name = "MECR.3018.option.member.a"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		galactic_emperor = {
			add_opinion_modifier = {
				who = prev
				modifier = opinion_support_the_emperor_in_adversity
			}
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_c
					days = 3600
				}
			}
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 60
		}
	}
	option = {
		name = "MECR.3018.option.member.b"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		add_modifier = {
			modifier = imperial_crusade_disrupting_the_imperium
			mult = 2
			days = 1800
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_c
					days = 3600
				}
			}
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 80
		}
	}
	option = {
		name = "MECR.3018.option.outsider"
		trigger = {
			is_galactic_community_member = no
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_c
					days = 3600
				}
			}
		}
	}
	after = {
		tooltip = { cancel_resolution = resolution_galactic_empire_imperial_crusade_MECR }
		hidden_effect = {
			if = {
				limit = { has_event_chain = imperial_crusade_war_score }
				end_event_chain = imperial_crusade_war_score
			}
			clear_variable = imperial_crusade_my_war_score
		}
	}
}
country_event = { #3055.大远征结束D
	id = MECR.3055
	title = "MECR.3019.name"
	desc = {
		text = "MECR.3019.desc.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
	}
	desc = {
		text = "MECR.3019.desc.member"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
	}
	desc = {
		text = "MECR.3019.desc.outsider"
		trigger = {
			is_galactic_community_member = no
		}
	}
	picture = GFX_evt_fleet_from_surface
	show_sound = event_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.3019.option.emperor"
		trigger = {
			is_galactic_emperor = yes
		}
		add_modifier = {
			modifier = imperial_crusade_rank_d
			days = 3600
		}
	}
	option = {
		name = "MECR.3019.option.member.a"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		galactic_emperor = {
			add_opinion_modifier = {
				who = prev
				modifier = opinion_support_the_emperor_in_the_darkest_hour
			}
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_d
					days = 3600
				}
			}
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_support
			BASE = 40
		}
	}
	option = {
		name = "MECR.3019.option.member.b"
		trigger = {
			is_galactic_emperor = no
			is_galactic_community_member = yes
		}
		add_modifier = {
			modifier = imperial_crusade_disrupting_the_imperium
			mult = 3
			days = 3600
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_d
					days = 3600
				}
			}
		}
		inline_script = {
			script = imperial_crusade_event_options/ai_chance_oppose
			BASE = 100
		}
	}
	option = {
		name = "MECR.3019.option.outsider"
		trigger = {
			is_galactic_community_member = no
		}
		tooltip = {
			galactic_emperor = {
				add_modifier = {
					modifier = imperial_crusade_rank_d
					days = 3600
				}
			}
		}
	}
	after = {
		tooltip = { cancel_resolution = resolution_galactic_empire_imperial_crusade_MECR }
		hidden_effect = {
			if = {
				limit = { has_event_chain = imperial_crusade_war_score }
				end_event_chain = imperial_crusade_war_score
			}
			clear_variable = imperial_crusade_my_war_score
		}
	}
}

####################################################################################################
####################################################################################################
################### 打击犯罪集团 #################### Crack down on criminal syndicate ##############
####################################################################################################
####################################################################################################
# resolution_custodian_crack_down_on_criminal_syndicate
country_event = { #9900.共同体内的犯罪集团被命令立即结束行为（9902.9903.9904.9905.）
	id = MECR.9900
	title = "MECR.9900.title"
	desc = "MECR.9900.desc"
	picture = GFX_evt_announcement
	show_sound = event_factions
	is_triggered_only = yes

	immediate = {
		save_event_target_as = target_criminal_syndicate
		set_variable = { which = all_branch_offices_in_galcom value = 0 }
		every_galcom_member = {
			limit = {
				any_owned_planet = {
					has_branch_office = yes
					branch_office_owner = { is_same_value = root }
				}
			}
			every_owned_planet = {
				limit = {
					has_branch_office = yes
					branch_office_owner = { is_same_value = root }
				}
				root = { change_variable = { which = all_branch_offices_in_galcom value = 1 } }
			}
		}
		set_variable = { which = branch_offices_in_galcom value = all_branch_offices_in_galcom }
		set_variable = { which = crack_downed_branch_office value = 0 }
	}
	option = { #屈服，移除罪企国策，分部建筑改变，受辱
		name = "MECR.9900.option.a"
		custom_tooltip = "MECR.9900.option.a.desc"
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			galactic_custodian = {
				country_event = {
					id = MECR.9902
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9903
				}
			}
			change_criminal_syndicate_into_megacorp = yes
		}
		ai_chance = {
			factor = 1
			modifier = { mult = all_branch_offices_in_galcom }
			modifier = { mult = 2 }
			modifier = {
				mult = 1.5
				OR = {
					opinion_level = { who = galactic_custodian level > neutral }
					opinion_level = { who = galactic_emperor level > neutral }
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					relative_power = { who = galactic_custodian value = inferior }
					relative_power = { who = galactic_emperor value = inferior }
				}
			}
			modifier = {
				mult = 5
				OR = {
					relative_power = { who = galactic_custodian value = pathetic }
					relative_power = { who = galactic_emperor value = pathetic }
				}
			}
		}
	}
	option = { #不屈服，受决议影响
		name = "MECR.9900.option.b"
		custom_tooltip = "MECR.9900.option.b.desc"
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			every_Country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_community_member = yes
				}
				country_event = {
					id = MECR.9904
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = { mult = all_branch_offices_in_galcom }
			modifier = {
				mult = 1.5
				OR = {
					opinion_level = { who = galactic_custodian level = terrible }
					opinion_level = { who = galactic_emperor level = terrible }
				}
			}
			modifier = {
				mult = 3
				OR = {
					relative_power = { who = galactic_custodian value = equivalent }
					relative_power = { who = galactic_emperor value = equivalent }
				}
			}
			modifier = {
				mult = 10
				OR = {
					relative_power = { who = galactic_custodian value = superior }
					relative_power = { who = galactic_emperor value = superior }
				}
			}
			modifier = {
				mult = 100
				OR = {
					relative_power = { who = galactic_custodian value = overwhelming }
					relative_power = { who = galactic_emperor value = overwhelming }
				}
			}
			modifier = {
				factor = 0.5
				is_active_resolution = resolution_mutualdefense_enemy_of_my_enemy
			}
			modifier = {
				factor = 0.75
				NOT = { is_active_resolution = resolution_mutualdefense_renegade_containment }
			}
			modifier = {
				factor = 0.5
				is_active_resolution = resolution_custodian_establish_the_galactic_confederation
			}
		}
	}
	option = { #退出共同体
		name = "MECR.9900.option.c"
		custom_tooltip = "MECR.9900.option.c.desc"
		remove_from_galactic_community = yes
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			every_Country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_community_member = yes
				}
				country_event = {
					id = MECR.9905
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = { mult = all_branch_offices_in_galcom }
			modifier = {
				mult = 1.5
				OR = {
					opinion_level = { who = galactic_custodian level = terrible }
					opinion_level = { who = galactic_emperor level = terrible }
				}
			}
			modifier = {
				mult = 3
				OR = {
					relative_power = { who = galactic_custodian value = equivalent }
					relative_power = { who = galactic_emperor value = equivalent }
				}
			}
			modifier = {
				mult = 10
				OR = {
					relative_power = { who = galactic_custodian value = superior }
					relative_power = { who = galactic_emperor value = superior }
				}
			}
			modifier = {
				mult = 100
				OR = {
					relative_power = { who = galactic_custodian value = overwhelming }
					relative_power = { who = galactic_emperor value = overwhelming }
				}
			}
			modifier = {
				factor = 0.5
				is_active_resolution = resolution_mutualdefense_enemy_of_my_enemy
			}
			modifier = {
				factor = 0
				is_active_resolution = resolution_mutualdefense_renegade_containment
			}
			modifier = {
				factor = 0
				is_active_resolution = resolution_custodian_establish_the_galactic_confederation
			}
			modifier = { factor = 0.25 }
		}
	}
}
country_event = { #9902.监管人消息：共同体内的犯罪集团屈服
	id = MECR.9902
	title = "MECR.9902.title"
	desc = "MECR.9902.desc"
	picture = GFX_evt_signing
	is_triggered_only = yes

	option = {
		name = "EXCELLENT"
		add_resource = { influence = 50 }
	}
}
country_event = { #9903.行星所有者消息：共同体内的犯罪集团屈服
	id = MECR.9903
	title = "MECR.9902.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
		}
		text = "MECR.9903.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.9903.desc.b"
	}
	picture = GFX_evt_news_room
	is_triggered_only = yes

	option = {
		name = "MECR.9903.option.a"
		add_resource = { influence = 50 }
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_normal
		}
	}
}
country_event = { #9904.其他国家消息：共同体内的犯罪集团拒绝屈服
	id = MECR.9904
	title = "MECR.9904.title"
	desc = {
		trigger = { is_galactic_custodian = yes }
		text = "MECR.9904.desc.a"
	}
	desc = {
		trigger = { is_galactic_custodian = no }
		text = "MECR.9904.desc.b"
	}
	picture = GFX_evt_announcement
	is_triggered_only = yes

	option = {
		name = "MECR.9904.option.a"
		trigger = {
			OR = {
				is_galactic_custodian = yes
				AND = {
					is_megacorp = no
					NOT = { has_ethic = ethic_gestalt_consciousness }
				}
			}
		}
	}
	option = {
		name = "MECR.9904.option.b"
		trigger = {
			is_megacorp = yes
			is_galactic_custodian = no
		}
	}
	option = {
		name = "MECR.9904.option.c"
		trigger = {
			has_ethic = ethic_gestalt_consciousness
			is_galactic_custodian = no
		}
	}
}
country_event = { #9905.其他国家消息：共同体内的犯罪集团退出共同体
	id = MECR.9905
	title = "MECR.9905.title"
	desc = "MECR.9905.desc"
	picture = GFX_evt_announcement
	is_triggered_only = yes

	option = {
		name = "MECR.9904.option.a"
		trigger = {
			OR = {
				is_galactic_custodian = yes
				AND = {
					is_megacorp = no
					NOT = { has_ethic = ethic_gestalt_consciousness }
				}
			}
		}
	}
	option = {
		name = "MECR.9904.option.b"
		trigger = {
			is_megacorp = yes
			is_galactic_custodian = no
		}
	}
	option = {
		name = "MECR.9904.option.c"
		trigger = {
			has_ethic = ethic_gestalt_consciousness
			is_galactic_custodian = no
		}
	}
}

country_event = { #9910.共同体外的犯罪集团被命令立即结束行为（9912.9913.9914.）
	id = MECR.9910
	title = "MECR.9910.title"
	desc = "MECR.9910.desc"
	picture = GFX_evt_announcement
	show_sound = event_factions
	is_triggered_only = yes

	immediate = {
		save_event_target_as = target_criminal_syndicate_outer
		every_galcom_member = {
			limit = {
				any_owned_planet = {
					has_branch_office = yes
					branch_office_owner = { is_same_value = root }
				}
			}
			every_owned_planet = {
				limit = {
					has_branch_office = yes
					branch_office_owner = { is_same_value = root }
				}
				root = { change_variable = { which = all_branch_offices_in_galcom value = 1 } }
			}
		}
	}
	option = { #屈服
		name = "MECR.9910.option.a"
		custom_tooltip = "MECR.9900.option.a.desc"
		force_remove_civic = civic_criminal_heritage
		add_to_galactic_community_no_message = yes
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = flag_outer_criminal_join_community
				days = 10
			}
			galactic_custodian = {
				country_event = {
					id = MECR.9912
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9913
				}
			}
			change_criminal_syndicate_into_megacorp = yes
		}
		ai_chance = {
			factor = 1
			modifier = { mult = all_branch_offices_in_galcom }
			modifier = { mult = 2 }
			modifier = {
				mult = 1.5
				OR = {
					opinion_level = { who = galactic_custodian level > neutral }
					opinion_level = { who = galactic_emperor level > neutral }
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					relative_power = { who = galactic_custodian value = inferior }
					relative_power = { who = galactic_emperor value = inferior }
				}
			}
			modifier = {
				mult = 5
				OR = {
					relative_power = { who = galactic_custodian value = pathetic }
					relative_power = { who = galactic_emperor value = pathetic }
				}
			}
			modifier = {
				factor = 0.75
				NOT = { is_active_resolution = resolution_mutualdefense_renegade_containment }
			}
		}
	}
	option = { #屈服，但是不会回到共同体
		name = "MECR.9910.option.b"
		custom_tooltip = "MECR.9900.option.b.desc"
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = flag_outer_criminal_not_join_community
				days = 10
			}
			galactic_custodian = {
				country_event = {
					id = MECR.9912
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9913
				}
			}
			change_criminal_syndicate_into_megacorp = yes
		}
		ai_chance = {
			factor = 1
			modifier = { mult = all_branch_offices_in_galcom }
			modifier = { mult = 2 }
			modifier = {
				mult = 1.5
				OR = {
					opinion_level = { who = galactic_custodian level > neutral }
					opinion_level = { who = galactic_emperor level > neutral }
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					relative_power = { who = galactic_custodian value = inferior }
					relative_power = { who = galactic_emperor value = inferior }
				}
			}
			modifier = {
				mult = 5
				OR = {
					relative_power = { who = galactic_custodian value = pathetic }
					relative_power = { who = galactic_emperor value = pathetic }
				}
			}
			modifier = {
				factor = 0
				is_active_resolution = resolution_mutualdefense_renegade_containment
			}
			modifier = { factor = 0.25 }
		}
	}
	option = { #不屈服
		name = "MECR.9910.option.c"
		custom_tooltip = "MECR.9900.option.c.desc"
		remove_from_galactic_community = yes
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			every_Country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_community_member = yes
				}
				country_event = {
					id = MECR.9914
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = { mult = all_branch_offices_in_galcom }
			modifier = {
				mult = 1.5
				OR = {
					opinion_level = { who = galactic_custodian level = terrible }
					opinion_level = { who = galactic_emperor level = terrible }
				}
			}
			modifier = {
				mult = 3
				OR = {
					relative_power = { who = galactic_custodian value = equivalent }
					relative_power = { who = galactic_emperor value = equivalent }
				}
			}
			modifier = {
				mult = 10
				OR = {
					relative_power = { who = galactic_custodian value = superior }
					relative_power = { who = galactic_emperor value = superior }
				}
			}
			modifier = {
				mult = 100
				OR = {
					relative_power = { who = galactic_custodian value = overwhelming }
					relative_power = { who = galactic_emperor value = overwhelming }
				}
			}
			modifier = {
				factor = 0.5
				is_active_resolution = resolution_mutualdefense_enemy_of_my_enemy
			}
			modifier = {
				factor = 0.5
				is_active_resolution = resolution_mutualdefense_renegade_containment
			}
		}
	}
}
country_event = { #9912.监管人消息：共同体外的犯罪集团屈服
	id = MECR.9912
	title = "MECR.9912.title"
	desc = {
		trigger = {
			from = { has_country_flag = flag_outer_criminal_join_community }
		}
		text = "MECR.9912.desc.join"
	}
	desc = {
		trigger = {
			from = { has_country_flag = flag_outer_criminal_not_join_community }
		}
		text = "MECR.9912.desc.not_join"
	}
	picture = GFX_evt_signing
	is_triggered_only = yes

	option = {
		name = "EXCELLENT"
		add_resource = { influence = 100 }
	}
}
country_event = { #9913.行星所有者消息：共同体外的犯罪集团屈服
	id = MECR.9913
	title = "MECR.9913.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
		}
		text = "MECR.9913.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.9913.desc.b"
	}
	picture = GFX_evt_news_room
	is_triggered_only = yes
	
	option = {
		name = "MECR.9913.option.a"
		add_resource = { influence = 50 }
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_normal
		}
	}
}
country_event = { #9914.其他国家消息：共同体外的犯罪集团拒绝屈服
	id = MECR.9914
	title = "MECR.9914.title"
	desc = {
		trigger = { is_galactic_custodian = yes }
		text = "MECR.9914.desc.a"
	}
	desc = {
		trigger = { is_galactic_custodian = no }
		text = "MECR.9914.desc.b"
	}
	picture = GFX_evt_announcement
	is_triggered_only = yes

	option = {
		name = "MECR.9904.option.a"
		trigger = {
			OR = {
				is_galactic_custodian = yes
				AND = {
					is_megacorp = no
					NOT = { has_ethic = ethic_gestalt_consciousness }
				}
			}
		}
	}
	option = {
		name = "MECR.9904.option.b"
		trigger = {
			is_megacorp = yes
			is_galactic_custodian = no
		}
	}
	option = {
		name = "MECR.9904.option.c"
		trigger = {
			has_ethic = ethic_gestalt_consciousness
			is_galactic_custodian = no
		}
	}
}

country_event = { #9920.犯罪集团试图向共同体求和（9908.9909.）
	id = MECR.9920
	title = "MECR.9920.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
		}
		text = "MECR.9920.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.9920.desc.b"
	}
	is_triggered_only = yes
	
	diplomatic = yes
	picture_event_data = {
		portrait = galactic_custodian
		room = galactic_custodian.ruler
	}

	immediate = {
		save_event_target_as = target_criminal_syndicate_late
		set_country_flag = flag_custodian9920_ing
	}
	
	option = {
		trigger = {
			is_galactic_community_member = yes
		}
		name = "MECR.9920.option.a"
		custom_tooltip = "MECR.9920.option.a.desc"
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_modifier = {
			modifier = board_purged
			years = 10
		}
		hidden_effect = {
			kill_leader = { type = ruler }
			every_owned_leader = {
				limit = { leader_class = governor }
				kill_leader = { fire = yes show_notification = no }
			}
			galactic_custodian = {
				country_event = {
					id = MECR.9922
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					is_galactic_emperor = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9923
				}
			}
			change_criminal_syndicate_into_megacorp = yes
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		trigger = {
			is_galactic_community_member = no
		}
		name = "MECR.9920.option.b"
		custom_tooltip = "MECR.9920.option.a.desc"
		add_to_galactic_community_no_message = yes
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_modifier = {
			modifier = board_purged
			years = 10
		}
		hidden_effect = {
			kill_leader = { type = ruler }
			every_owned_leader = {
				limit = { leader_class = governor }
				kill_leader = { fire = yes show_notification = no }
			}
			galactic_custodian = {
				country_event = {
					id = MECR.9922
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					is_galactic_emperor = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9923
				}
			}
			change_criminal_syndicate_into_megacorp = yes
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		name = "MECR.9920.option.c"
		default_hide_option = yes
		hidden_effect = {
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 0
		}
	}
}
country_event = { #9921.犯罪集团试图向帝国求和（9908.9909.）
	id = MECR.9921
	title = "MECR.9920.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
		}
		text = "MECR.9921.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.9921.desc.b"
	}
	is_triggered_only = yes
	
	diplomatic = yes
	picture_event_data = {
		portrait = galactic_emperor
		room = galactic_emperor.ruler
	}

	immediate = {
		save_event_target_as = target_criminal_syndicate_late
		set_country_flag = flag_custodian9920_ing
	}
	
	option = {
		trigger = {
			is_galactic_community_member = yes
		}
		name = "MECR.9920.option.a"
		custom_tooltip = "MECR.9920.option.a.desc"
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_modifier = {
			modifier = board_purged
			years = 10
		}
		hidden_effect = {
			kill_leader = { type = ruler }
			every_owned_leader = {
				limit = { leader_class = governor }
				kill_leader = { fire = yes show_notification = no }
			}
			galactic_emperor = {
				country_event = {
					id = MECR.9922
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_emperor = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9923
				}
			}
			change_criminal_syndicate_into_megacorp = yes
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		trigger = {
			is_galactic_community_member = no
		}
		name = "MECR.9920.option.b"
		custom_tooltip = "MECR.9920.option.a.desc"
		add_to_galactic_community_no_message = yes
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_modifier = {
			modifier = board_purged
			years = 10
		}
		hidden_effect = {
			kill_leader = { type = ruler }
			every_owned_leader = {
				limit = { leader_class = governor }
				kill_leader = { fire = yes show_notification = no }
			}
			galactic_emperor = {
				country_event = {
					id = MECR.9922
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					is_galactic_emperor = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9923
				}
			}
			change_criminal_syndicate_into_megacorp = yes
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		name = "MECR.9920.option.c"
		default_hide_option = yes
		hidden_effect = {
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 0
		}
	}
}
country_event = { #9922.监管人/皇帝消息：犯罪集团求和
	id = MECR.9922
	title = "MECR.9922.title"
	desc = {
		trigger = {
			is_galactic_custodian = yes
		}
		text = "MECR.9922.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_emperor = yes
		}
		text = "MECR.9922.desc.b"
	}
	picture = GFX_evt_alien_segregation
	is_triggered_only = yes

	option = {
		name = "MECR.9922.option.a"
		add_resource = { influence = 100 }
	}
}
country_event = { #9923.行星所有者消息：犯罪集团求和
	id = MECR.9923
	title = "MECR.9922.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
			has_galactic_custodian = yes
		}
		text = "MECR.9923.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			has_galactic_emperor = yes
		}
		text = "MECR.9923.desc.b"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
			has_galactic_custodian = yes
		}
		text = "MECR.9923.desc.c"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
			has_galactic_emperor = yes
		}
		text = "MECR.9923.desc.d"
	}
	picture = GFX_evt_alien_segregation
	is_triggered_only = yes

	option = {
		name = "MECR.9922.option.a"
		add_resource = { influence = 50 }
		if = {
			limit = { has_galactic_custodian = yes }
			add_opinion_modifier = {
				who = galactic_custodian
				modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_normal
			}
		}
		else = {
			add_opinion_modifier = {
				who = galactic_emperor
				modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_normal
			}
		}
	}
}
event = { #9907.打击犯罪集团分部[on_monthly_pulse]
	id = MECR.9907
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_crack_down_on_criminal_syndicate
		OR = {
			has_galactic_custodian = yes
			has_galactic_emperor = yes
		}
		any_galcom_member = {
			any_owned_planet = {
				has_branch_office = yes
				branch_office_owner = {
					is_criminal_syndicate = yes
					is_galactic_community_member = no
				}
				NOR = {
					has_modifier = GALPOL_operations
					has_modifier = ISD_operations
				}
			}
		}
	}

	immediate = {
		random_galcom_member = {
			limit = {
				any_owned_planet = {
					has_branch_office = yes
					branch_office_owner = {
						is_criminal_syndicate = yes
						is_galactic_community_member = no
					}
					NOR = {
						has_modifier = GALPOL_operations
						has_modifier = ISD_operations
					}
				}
			}
			random_owned_planet = {
				limit = {
					has_branch_office = yes
					branch_office_owner = {
						is_criminal_syndicate = yes
						is_galactic_community_member = no
					}
					owner = {
						is_galactic_community_member = yes
					}
					NOR = {
						has_modifier = GALPOL_operations
						has_modifier = ISD_operations
					}
				}
				if = {
					limit = { has_galactic_custodian = yes }
					add_modifier = {
						modifier = GALPOL_operations
						months = 6
						clear_on_owner_change = yes
					}
				}
				else = {
					add_modifier = {
						modifier = ISD_operations
						months = 6
						clear_on_owner_change = yes
					}
				}
				if = {
					limit = { has_modifier = crime_lord_deal }
					remove_modifier = crime_lord_deal
					add_modifier = { modifier = "crime_lord_deal_broken" days = 360 }
				}
			}
		}
	}
}
planet_event = { #9908.犯罪集团分部被关闭[on_branch_office_closed]
	id = MECR.9908
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_crack_down_on_criminal_syndicate
		from = { is_criminal_syndicate = yes }
		owner = { is_galactic_community_member = yes }
		OR = {
			has_galactic_custodian = yes
			has_galactic_emperor = yes
		}
	}

	immediate = {
		from = {
			change_variable = { which = crack_downed_branch_office value = 1 }
		}
	}
}
country_event = { #9909.犯罪集团每五年衡量是否要投降[on_five_year_pulse_country]
	id = MECR.9909
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_crack_down_on_criminal_syndicate
		is_criminal_syndicate = yes
		is_ai = yes
		OR = {
			has_galactic_custodian = yes
			has_galactic_emperor = yes
		}
		NOT = { has_country_flag = flag_custodian9920_ing }
	}

	immediate = {
		set_variable = { which = branch_offices_in_galcom value = 0 }
		every_galcom_member = {
			limit = {
				any_owned_planet = {
					has_branch_office = yes
					branch_office_owner = { is_same_value = root }
				}
			}
			every_owned_planet = {
				limit = {
					has_branch_office = yes
					branch_office_owner = { is_same_value = root }
				}
				root = { change_variable = { which = branch_offices_in_galcom value = 1 } }
			}
		}
		random_list = {
			1 = { #投降
				modifier = {
					add = all_branch_offices_in_galcom
				}
				modifier = {
					add = branch_offices_in_galcom
				}
				modifier = {
					mult = 1.5
					OR = {
						opinion_level = { who = galactic_custodian level > neutral }
						opinion_level = { who = galactic_emperor level > neutral }
					}
				}
				modifier = {
					mult = 1.5
					OR = {
						relative_power = { who = galactic_custodian value = inferior }
						relative_power = { who = galactic_emperor value = inferior }
					}
				}
				modifier = {
					mult = 5
					OR = {
						relative_power = { who = galactic_custodian value = pathetic }
						relative_power = { who = galactic_emperor value = pathetic }
					}
				}

				country_event = {
					id = MECR.9920
				}
			}
			1 = { #顽抗
				modifier = {
					add = all_branch_offices_in_galcom
				}
				modifier = {
					add = crack_downed_branch_office
				}
				modifier = {
					mult = 1.5
					OR = {
						opinion_level = { who = galactic_custodian level = terrible }
						opinion_level = { who = galactic_emperor level = terrible }
					}
				}
				modifier = {
					mult = 3
					OR = {
						relative_power = { who = galactic_custodian value = equivalent }
						relative_power = { who = galactic_emperor value = equivalent }
					}
				}
				modifier = {
					mult = 10
					OR = {
						relative_power = { who = galactic_custodian value = superior }
						relative_power = { who = galactic_emperor value = superior }
					}
				}
				modifier = {
					mult = 100
					OR = {
						relative_power = { who = galactic_custodian value = overwhelming }
						relative_power = { who = galactic_emperor value = overwhelming }
					}
				}
				modifier = {
					factor = 0.5
					is_active_resolution = resolution_mutualdefense_enemy_of_my_enemy
				}
				modifier = {
					factor = 0
					is_active_resolution = resolution_mutualdefense_renegade_containment
				}
			}
		}
	}
}
