namespace = shadowgate_galactic

##################################################################
# Starting Events
##################################################################
event = {
	id = shadowgate_galactic.0
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_global_flag = shadowgate_mod_active
		event_target:global_event_country = {
			random_list = {
				1 = { get_galaxy_setup_value = { which = ShadowgateGalaxyNum setting = num_empires } }
				1 = { get_galaxy_setup_value = { which = ShadowgateGalaxyNum setting = num_advanced_empires scale_by = 2 } }
				1 = { get_galaxy_setup_value = { which = ShadowgateGalaxyNum setting = num_fallen_empires scale_by = 2 } }
				1 = { get_galaxy_setup_value = { which = ShadowgateGalaxyNum setting = num_guaranteed_colonies scale_by = 3 } }
				1 = { get_galaxy_setup_value = { which = ShadowgateGalaxyNum setting = num_marauder_empires scale_by = 3 } }
			}
			every_galaxy_species = { limit = { OR = { is_species_class = REP is_species_class = AVI is_species_class = FUN } }
				random_list = {
					1 = { }
					1 = {
						prev = { change_variable = { which = ShadowgateGalaxyNum value = 1 } }
					}
				}
			}
			every_playable_country = {
				random_list = {
					1 = { }
					1 = {
						switch = {
							trigger = has_ethic
							ethic_militarist = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 1 } } }
							ethic_pacifist = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 2 } } }
							ethic_spiritualist = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 2 } } }
							ethic_materialist = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 3 } } }
							ethic_egalitarian = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 3 } } }
							ethic_authoritarian = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 4 } } }
							ethic_xenophile = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 4 } } }
							ethic_xenophobe = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 5 } } }
							ethic_fanatic_militarist = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 5 } } }
							ethic_fanatic_pacifist = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 4 } } }
							ethic_fanatic_spiritualist = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 4 } } }
							ethic_fanatic_materialist = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 3 } } }
							ethic_fanatic_egalitarian = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 3 } } }
							ethic_fanatic_authoritarian = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 2 } } }
							ethic_fanatic_xenophile = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 2 } } }
							ethic_fanatic_xenophobe = { prev = { change_variable = { which = ShadowgateGalaxyNum value = 1 } } }
						}
					}
				}
			}
			set_shadowgate_build_date = { DATE = 1 NUM = 11 MIN = 1 MAX = 23 }
			set_shadowgate_build_date = { DATE = 2 NUM = 50 MIN = 11 MAX = 99 }
			set_variable = { which = ShadowgateRelicSpawnCount value = 3 }
			set_variable = { which = NumShadowgates value = 1 }
			if = { limit = { count_system = { count < 400 } } change_variable = { which = NumShadowgates value = 1 } }
			else_if = { limit = { count_system = { count < 600 } } change_variable = { which = NumShadowgates value = 2 } }
			else = { change_variable = { which = NumShadowgates value = 3 } }
			random_list = {
				2 = { modifier = { factor = 0 OR = { count_system = { count >= 1000 } check_galaxy_setup_value = { setting = num_empires value >= 20 } } } }
				1 = { change_variable = { which = NumShadowgates value = 1 } }
			}
			set_variable = { which = ShadowgateActiveShadowAnchors value = 0 }
			set_variable = { which = ShadowgateSMAnchorReduction value = 1 }
			while = { count = NumShadowgates
				random_system = {
					limit = {
						has_star_flag = shadowgate_shadow_remnant
						NOT = { has_star_flag = shadowgate_shadow_remnant_origin }
						OR = {
							AND = { count_system = { count < 600 } NOT = { any_system = { has_star_flag = shadowgate_solar_system OR = { distance = { source = prev type = hyperlane max_jumps <= 10 } distance = { source = prev type = euclidean min_distance >= 0 max_distance <= 100 } } } } }
							AND = { count_system = { count >= 600 } NOT = { any_system = { has_star_flag = shadowgate_solar_system OR = { distance = { source = prev type = hyperlane max_jumps <= 20 } distance = { source = prev type = euclidean min_distance >= 0 max_distance <= 200 } } } } }
						}
					}
					remove_star_flag = shadowgate_shadow_remnant
					set_star_flag = shadowgate_solar_system
					every_system_ambient_object = { limit = { has_ambient_object_flag = shadowgate_shadow_remnant } destroy_ambient_object = this }
					random_system_planet = { limit = { has_planet_flag = shadowgate_shadow_remnant }
						remove_planet_flag = shadowgate_shadow_remnant
						set_planet_size = 9
						change_pc = pc_shadowgate
						clear_deposits = yes
						add_modifier = { modifier = pm_shadowgate_hazardous_environment days = -1 }
						add_deposit = d_innate_shadow_pulse
						add_deposit = d_harmonic_subspace_resonators
						add_deposit = d_shadow_pulse_condensers		
						add_deposit = d_spectral_projection_arrays
						add_deposit = d_untuned_subspace_resonators
						add_deposit = d_depressurized_windchests
						add_deposit = d_defunct_containment_field_nodes
						add_deposit = d_faulty_ignition_chambers
						add_deposit = d_warped_polarizing_lenses
						add_deposit = d_fractured_projector_prisms
						set_planet_flag = shadowgate_planet
						set_planet_flag = colony_event
						set_planet_flag = asteroid_sighted
						set_planet_flag = planet_prospected
						set_planet_flag = has_been_scanned
						set_variable = { which = ShadowgateLevel value = 1 }
						set_variable = { which = ShadowgateRPMinEvent value = 0 }
						set_variable = { which = ShadowgateRPDecay value = 1 }
						set_variable = { which = ShadowgateRCHAmount value = 0 }
						set_variable = { which = ShadowgateEther value = 50 }
						set_variable = { which = ShadowgateEtherCost value = 0 }
						set_variable = { which = ShadowgateEtherMax value = 50 }
						set_variable = { which = ShadowgateListedCount value = 0 }
						set_variable = { which = TerminusBarrierFortifyCount value = 0 }
						set_variable = { which = TerminusCoreFortifyCount value = 0 }
						set_variable = { which = TerminusTotalFortifyCount value = 0 }
						set_variable = { which = ShadowgateBerthedAnchors value = 0 }
						regenerate_shadowgate_variables = yes
						random_list = {
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_1 } set_variable = { which = ShadowgateName value = 1 } set_global_flag = shadowgate_name_1 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_2 } set_variable = { which = ShadowgateName value = 2 } set_global_flag = shadowgate_name_2 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_3 } set_variable = { which = ShadowgateName value = 3 } set_global_flag = shadowgate_name_3 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_4 } set_variable = { which = ShadowgateName value = 4 } set_global_flag = shadowgate_name_4 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_5 } set_variable = { which = ShadowgateName value = 5 } set_global_flag = shadowgate_name_5 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_6 } set_variable = { which = ShadowgateName value = 6 } set_global_flag = shadowgate_name_6 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_7 } set_variable = { which = ShadowgateName value = 7 } set_global_flag = shadowgate_name_7 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_8 } set_variable = { which = ShadowgateName value = 8 } set_global_flag = shadowgate_name_8 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_9 } set_variable = { which = ShadowgateName value = 9 } set_global_flag = shadowgate_name_9 }
							1 = { modifier = { factor = 0 has_global_flag = shadowgate_name_10 } set_variable = { which = ShadowgateName value = 10 } set_global_flag = shadowgate_name_10 }
						}
						set_variable = { which = ShadowgateGalaxyNum value = event_target:global_event_country }
						inverted_switch = {
							trigger = has_global_flag
							shadowgate_a_spawned = {
								set_global_flag = shadowgate_a_spawned
								set_name = shadowgate_a
								save_global_event_target_as = shadowgate_planet_a
								solar_system = { set_name = prev }
								set_planet_flag = shadowgate_a
								create_shadowrift_country = { SHADOWGATE = a A = 0 }
							}
							shadowgate_b_spawned = {
								set_global_flag = shadowgate_b_spawned
								set_name = shadowgate_b
								save_global_event_target_as = shadowgate_planet_b
								solar_system = { set_name = prev }
								set_planet_flag = shadowgate_b
								create_shadowrift_country = { SHADOWGATE = b B = 0 }
							}
							shadowgate_c_spawned = {
								set_global_flag = shadowgate_c_spawned
								set_name = shadowgate_c
								save_global_event_target_as = shadowgate_planet_c
								solar_system = { set_name = prev }
								set_planet_flag = shadowgate_c
								create_shadowrift_country = { SHADOWGATE = c C = 0 }
							}
							shadowgate_d_spawned = {
								set_global_flag = shadowgate_d_spawned
								set_name = shadowgate_d
								save_global_event_target_as = shadowgate_planet_d
								solar_system = { set_name = prev }
								set_planet_flag = shadowgate_d
								create_shadowrift_country = { SHADOWGATE = d D = 0 }
							}
							shadowgate_e_spawned = {
								set_global_flag = shadowgate_e_spawned
								set_name = shadowgate_e
								save_global_event_target_as = shadowgate_planet_e
								solar_system = { set_name = prev }
								set_planet_flag = shadowgate_e
								create_shadowrift_country = { SHADOWGATE = e E = 0 }
							}
						}
					}
				}
			}
		}
		create_country = {
			type = shadowgate
			flag = {
				icon = {
					category = "shadowgate"
					file = "flag_shadowrune_10.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"dark_purple"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			set_name = shadowgate_global_country_name
			save_global_event_target_as = shadowgate_global_country
			set_country_flag = shadowgate_exclude_hostile_ai
			every_country = { limit = { NOT = { has_communications = prev } } establish_communications_no_message = prev }
		}
		every_country = { limit = { is_guardian_country = yes }
			every_owned_fleet = { set_fleet_flag = shadowgate_aggressive_fleet }
		}
		every_playable_country = {
			set_variable = { which = ShadowgateESStored value = 30 }
		}
		every_system = { limit = { OR = { has_star_flag = shadowgate_shadow_remnant has_star_flag = shadowgate_solar_system } }
			event_target:global_event_country = {
				change_variable = { which = ShadowgateSTBonus value = 1 }
				change_variable = { which = ShadowgateVCCountry value = 1 }
			}
			create_shadowrift_country = { VC = 1 }
			set_variable = { which = ShadowgateVCCountry value = event_target:global_event_country }
		}
		while = { count = 3
			event_target:global_event_country = { save_event_target_as = shadow_anchor_placement }
			random_system = { limit = { num_planets_in_system > 2 NOR = { has_star_flag = shadow_anchor has_star_flag = shadowgate_hidden_system has_star_flag = shadowgate_blocked_system has_star_flag = empire_cluster } OR = { AND = { is_fe_cluster = yes exists = space_owner space_owner = { NOT = { any_system_within_border = { any_system_megastructure = { is_megastructure_type = shadow_anchor } } } OR = { has_ethic = ethic_fanatic_materialist has_ethic = ethic_fanatic_spiritualist } } } has_star_flag = guardians_dragon_system has_star_flag = guardians_horror_system has_star_flag = guardians_dreadnought_system has_star_flag = guardians_fortress_system } }
				random_system_planet = { limit = { NOR = { is_star = yes is_asteroid = yes is_moon = yes is_colonizable = yes is_colony = yes has_deposit = yes has_anomaly = yes has_planet_flag = has_megastructure is_planet_class = pc_habitat has_planet_flag = shadowgate_planet } } save_event_target_as = shadow_anchor_placement }
				if = { limit = { NOT = { event_target:shadow_anchor_placement = { is_same_value = event_target:global_event_country } } }
					if = { limit = { exists = space_owner } spawn_megastructure = { type = shadow_anchor owner = space_owner planet = event_target:shadow_anchor_placement } }
					else = { spawn_megastructure = { type = shadow_anchor planet = event_target:shadow_anchor_placement } }
				}
			}
		}
		if = { limit = { NOT = { any_megastructure = { is_megastructure_type = shadow_anchor } } }
			event_target:global_event_country = { save_event_target_as = shadow_anchor_placement }
			random_system = { limit = { num_planets_in_system > 2 NOR = { has_star_flag = shadowgate_hidden_system has_star_flag = shadowgate_blocked_system has_star_flag = empire_cluster } any_system_planet = { OR = { is_planet_class = pc_gaia is_planet_class = pc_relic } } }
				random_system_planet = { limit = { NOR = { is_star = yes is_asteroid = yes is_moon = yes is_colonizable = yes is_colony = yes has_deposit = yes has_anomaly = yes has_planet_flag = has_megastructure is_planet_class = pc_habitat has_planet_flag = shadowgate_planet } } save_event_target_as = shadow_anchor_placement }
				if = { limit = { NOT = { event_target:shadow_anchor_placement = { is_same_value = event_target:global_event_country } } }
					if = { limit = { exists = space_owner } spawn_megastructure = { type = shadow_anchor owner = space_owner planet = event_target:shadow_anchor_placement } }
					else = { spawn_megastructure = { type = shadow_anchor planet = event_target:shadow_anchor_placement } }
				}
			}
		}
		event_target:global_event_country = { country_event = { id = shadowgate_galactic.1 days = 1 } }
	}
}

country_event = {
	id = shadowgate_galactic.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { NOT = { has_global_flag = shadowgate_prevent_ap_spawn } }
			event_target:global_event_country = { subtract_variable = { which = ShadowgateRelicSpawnCount value = 1 } }
			random_system = { limit = { has_star_flag = shadowgate_solar_system }
				set_star_flag = shadowgate_ap_solar_system
				set_name = shadowgate_ap_solar_system
				random_system_planet = { limit = { has_planet_flag = shadowgate_planet }
					create_species = {
						name = random
						class = random_non_machine
						portrait = random
						traits = {
							ideal_planet_class = pc_habitat
							trait = trait_psionic
							trait = trait_intelligent
							trait = trait_sedentary
						}
						homeworld = this
					}
					create_country = {
						type = shadowgate_ap
						species = last_created
						flag = {
							icon = {
								category = "shadowgate"
								file = "flag_shadowforge.dds"
							}
							background= {
								category = "backgrounds"
								file = "00_solid.dds"
							}
							colors = {
								"dark_purple"
								"black"
								"null"
								"null"
							}
						}
						ethos = {
							ethic = ethic_fanatic_pacifist
							ethic = ethic_spiritualist
						}
						ignore_initial_colony_error = yes
						effect = {
							set_graphical_culture = fallen_empire_01
							add_global_ship_design = "NAME_FE_Starbase"
						}
					}
					save_global_event_target_as = shadowgate_ap_planet
					set_owner = last_created_country
					set_controller = last_created_country
					set_capital = yes
					set_planet_flag = shadowgate_d_compass_unlocked
					set_planet_flag = shadowgate_ashen_pilgrimage
					add_modifier = { modifier = pm_shadowgate_ap days = -1 }
					remove_deposit = d_untuned_subspace_resonators
					add_district = district_harmonic_subspace_resonator
					add_district = district_harmonic_subspace_resonator
					add_district = district_shadow_pulse_condenser
					add_district = district_spectral_projection_array
					while = { count = 20
						random_list = {
							1 = { }
							2 = { change_variable = { which = ShadowgateSOUSBlessings value = 1 } }
						}
					}
					apply_shadowrift_core_fortification = { AMOUNT = 30 }
					apply_shadowrift_barrier_fortification = { AMOUNT = 30 }
					regenerate_shadowgate_variables = yes
					set_variable = { which = ShadowgateEther value = ShadowgateEtherMax }
					add_building = building_shadowgate_ap_citadel
					add_building = building_class_4_singularity
					add_building = building_dimensional_fabricator
					add_building = building_dimensional_fabricator
					last_created_country = {
						add_relic = r_shadowgate_cpc
						add_relic = r_shadowgate_sous
						set_name = shadowgate_ap_country_name
						create_ship_design = { design = "NAME_Shadowgate_Umbral_Citadel" }
						add_ship_design = last_created_design
						create_ship_design = { design = "NAME_Shadowgate_Umbral_Lance" }
						add_ship_design = last_created_design
						country_event = { id = shadowgate_galactic.2 days = 1 }
						save_global_event_target_as = shadowgate_ap_country
						save_global_event_target_as = shadowgate_ap_last_summoner
						save_event_target_as = shadowgate_d_compass_owner
						set_country_flag = shadowgate_d_compass_saved
						set_shadowgate_bazaar = { SLOT = Left }
						set_shadowgate_bazaar = { SLOT = Mid }
						set_shadowgate_bazaar = { SLOT = Right }
						set_variable = { which = ShadowgateAPProgress value = 20000 }
						while = { count = 5
							random_list = {
								1 = { change_variable = { which = ShadowgateAPProgress value = 162 } }
								1 = { change_variable = { which = ShadowgateAPProgress value = 211 } }
								1 = { change_variable = { which = ShadowgateAPProgress value = 346 } }
								1 = { change_variable = { which = ShadowgateAPProgress value = 427 } }
								1 = { change_variable = { which = ShadowgateAPProgress value = 511 } }
							}
						}
						set_variable = { which = ShadowgateAPUpgrade value = 100000 }
						country_event = { id = shadowgate_pilgrimage.35 days = 3599 }
						country_event = { id = shadowgate_pilgrimage.60 days = 10800 random = 1800 }
						every_country = {
							limit = {
								OR = {
									is_country_type = dormant_marauders
									is_country_type = fallen_empire
									is_country_type = enclave
								}
								NOT = { has_communications = prev }
							}
							establish_communications_no_message = prev
							if = { limit = { is_country_type = dormant_marauders } set_faction_hostility = { target = prev set_hostile = no set_neutral = no set_friendly = yes } }
						}
					}
					set_planet_flag = shadowgate_sp
					change_variable = { which = ShadowgateLodestonesActive value = 1 }
					switch = {
						trigger = has_planet_flag
						shadowgate_a = { planet_event = { id = shadowgate_a.3011 } solar_system = { set_star_flag = shadowrift_a_sp_origin } }
						shadowgate_b = { planet_event = { id = shadowgate_b.3011 } solar_system = { set_star_flag = shadowrift_b_sp_origin } }
						shadowgate_c = { planet_event = { id = shadowgate_c.3011 } solar_system = { set_star_flag = shadowrift_c_sp_origin } }
						shadowgate_d = { planet_event = { id = shadowgate_d.3011 } solar_system = { set_star_flag = shadowrift_d_sp_origin } }
						shadowgate_e = { planet_event = { id = shadowgate_e.3011 } solar_system = { set_star_flag = shadowrift_e_sp_origin } }
					}
				}
				create_starbase = {
					size = "starbase_citadel"
					owner = event_target:shadowgate_ap_country
					module = "gun_battery"
					module = "gun_battery"
					module = "gun_battery"
					module = "gun_battery"
					module = "gun_battery"
					module = "gun_battery"
			
					building = "target_uplink_computer"
					building = "command_center"
					building = "disruption_field"
					building = "communications_jammer"
				}
				starbase = {
					fleet = {
						set_name = shadowgate_ap_starbase_name
						every_owned_ship = { set_name = shadowgate_ap_starbase_name }
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Black_Harbor"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Black_Harbor"
							design = "NAME_Shadowgate_Umbral_Citadel"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 55
							angle = 0
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Dark_Sentinel"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Dark_Sentinel"
							design = "NAME_Shadowgate_Umbral_Lance"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 50
							angle = 40
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Dark_Sentinel"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Dark_Sentinel"
							design = "NAME_Shadowgate_Umbral_Lance"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 50
							angle = 80
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Black_Harbor"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Black_Harbor"
							design = "NAME_Shadowgate_Umbral_Citadel"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 55
							angle = 120
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Dark_Sentinel"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Dark_Sentinel"
							design = "NAME_Shadowgate_Umbral_Lance"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 50
							angle = 160
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Dark_Sentinel"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Dark_Sentinel"
							design = "NAME_Shadowgate_Umbral_Lance"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 50
							angle = 200
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Black_Harbor"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Black_Harbor"
							design = "NAME_Shadowgate_Umbral_Citadel"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 55
							angle = 240
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Dark_Sentinel"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Dark_Sentinel"
							design = "NAME_Shadowgate_Umbral_Lance"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 50
							angle = 280
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
				create_fleet = {
					name = "NAME_Shadowgate_Dark_Sentinel"
					settings = { is_boss = yes }
					effect = {
						set_owner = event_target:shadowgate_ap_country
						create_ship = {
							name = "NAME_Shadowgate_Dark_Sentinel"
							design = "NAME_Shadowgate_Umbral_Lance"
							graphical_culture = "ancient"
							effect = {
								set_name = ""
							}
						}
						set_location = {
							target = event_target:shadowgate_ap_planet
							distance = 50
							angle = 320
						}
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
						set_fleet_flag = shadowgate_ap
					}
				}
			}
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = shroud_spirits
					AND = { is_guardian_country = yes NOT = { is_country_type = guardian_wraith } }
					is_amoeba_country_type = yes
					is_tiyanki_country_type = yes
					is_crystal_country_type = yes
					is_drone_country_type = yes
				}
			}
			set_country_flag = shadowgate_hostile_to_shadowrift
		}
		every_country = { limit = { is_ai = yes OR = { shadowgate_is_fe = yes shadowgate_is_ae = yes is_country_type = shadowgate_ap } }
			if = { limit = { OR = { shadowgate_is_fe = yes shadowgate_is_ae = yes } }
				set_variable = { which = ShadowgateSeal value = 500 }
				while = { count = 20
					random_list = { 
						1 = { change_variable = { which = ShadowgateSeal value = 25 } }
						1 = { }
					}
				}
				change_variable = { which = ShadowgateLodestonesOwned value = 3 }
				if = { limit = { OR = { has_ethic = ethic_fanatic_materialist has_ethic = ethic_fanatic_spiritualist } }
					set_faction_hostility = { target = event_target:shadowgate_ap_country set_hostile = yes set_neutral = no set_friendly = no }
				}
			}
			set_country_flag = shadowgate_ita_unlocked
			set_country_flag = has_shadow_anchors
			set_country_flag = shadowgate_dl_knowledge
			set_country_flag = shadowgate_first_rift_summoned
			set_country_flag = shadowrift_assault_notified
			set_country_flag = shadowgate_seen_disabled
			set_country_flag = has_dimensional_shift
			give_technology = { tech = tech_labyrinthine_cartography }
		}
		event_target:global_event_country = {
			while = { count = ShadowgateRelicSpawnCount
				random_list = {
					1 = { modifier = { factor = 0 has_global_flag = shadowgate_transmitter_acquired }
						random_galaxy_planet = { limit = { OR = { has_planet_flag = machine_world_1 has_planet_flag = machine_world_2 has_planet_flag = machine_world_3 has_planet_flag = machine_world_4 } NOR = { has_anomaly = yes exists = archaeological_site } }
							create_archaeological_site = shadowgate_crwt_digsite
						}
						set_global_flag = shadowgate_transmitter_acquired
					}
					1 = { modifier = { factor = 0 has_global_flag = shadowgate_edict_acquired }
						random_system = { limit = { has_star_flag = shadowgate_shadow_remnant NOT = { has_star_flag = shadowgate_shadow_remnant_origin } }
							random_system_planet = { limit = { has_planet_flag = shadowgate_shadow_remnant }
								create_archaeological_site = shadowgate_ae_digsite
							}
						}
						set_global_flag = shadowgate_edict_acquired
					}
					1 = { modifier = { factor = 0 has_global_flag = shadowgate_converter_acquired }
						if = { limit = { exists = event_target:shadowgate_ap_planet }
							event_target:shadowgate_ap_planet = { create_archaeological_site = shadowgate_cpc_digsite }
						}
						else = {
							random_galaxy_planet = { limit = { has_planet_flag = shadowgate_planet } create_archaeological_site = shadowgate_cpc_digsite }
						}
						set_global_flag = shadowgate_converter_acquired
					}
				}
			}
		}
	}
}

country_event = {
	id = shadowgate_galactic.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:shadowgate_ap_planet = {
			solar_system = {
				
			}
		}
	}
}

country_event = { # Partially copied from progress.6 in events/progress_events.txt and altered - credit and thanks to Henrik Thyrwall.
	id = shadowgate_galactic.5
	title = "progress.4.name"
	picture = GFX_evt_news_room
	desc = {
		trigger = { NOT = { has_authority = auth_machine_intelligence } }
		text = shadowgate.firstencounter.desc
	}
	desc = {
		trigger = { has_authority = auth_machine_intelligence }
		text = shadowgate.firstencounter.machine.desc
	}
	is_triggered_only = yes
	
	trigger = {
		is_ai = no
		NOT = { has_country_flag = first_contact_event }
	}
	
	immediate = {
		set_country_flag = first_contact_event
	}

	option = {
		name = shadowgate.firstencounter.answer
		trigger = { NOT = { has_authority = auth_machine_intelligence } }
	}

	option = {
		name = ACKNOWLEDGED
		trigger = { has_authority = auth_machine_intelligence }
	}
}

# Randomly spawns a rare system.
event = {
	id = shadowgate_galactic.10
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_global_flag = shadowgate_mod_active NOT = { has_global_flag = shadowgate_unique_spawned } mid_game_years_passed > 0 }

	immediate = {
		if = { limit = { NOT = { has_global_flag = shadowgate_unique_spawned } }
			random_list = {
				500 = { }
				1 = {
					set_global_flag = shadowgate_unique_spawned
					random_list = {
						1 = { random_system = { spawn_system = { min_distance = 10 max_distance = 30 initializer = shadowgate_unique_1 hyperlane = no } } }
						1 = { random_system = { spawn_system = { min_distance = 10 max_distance = 30 initializer = shadowgate_unique_2 hyperlane = no } } }
						1 = { random_system = { spawn_system = { min_distance = 10 max_distance = 30 initializer = shadowgate_unique_3 hyperlane = no } } }
						1 = { random_system = { spawn_system = { min_distance = 10 max_distance = 30 initializer = shadowgate_unique_4 hyperlane = no } } }
					}
					random_system = { limit = { has_star_flag = shadowgate_unique_system }
						save_global_event_target_as = shadowgate_unique_system
					}
				}
			}
		}
	}
}

# Initial discovery of an ownerless shadowgate.
ship_event = {
	id = shadowgate_galactic.20
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { NOT = { owner = { has_country_flag = encountered_shadowgate } } from = { has_star_flag = shadowgate_solar_system NOT = { exists = space_owner } } }
	
	immediate = {
		owner = { set_country_flag = encountered_shadowgate }
		solar_system = {
			random_system_planet = { limit = { has_planet_flag = shadowgate_planet }
				set_surveyed = { surveyed = yes surveyor = root.owner }
				switch = {
					trigger = has_planet_flag
					shadowgate_a = { root.owner = { country_event = { id = shadowgate_a.1 days = 3 } } }
					shadowgate_b = { root.owner = { country_event = { id = shadowgate_b.1 days = 3 } } }
					shadowgate_c = { root.owner = { country_event = { id = shadowgate_c.1 days = 3 } } }
					shadowgate_d = { root.owner = { country_event = { id = shadowgate_d.1 days = 3 } } }
					shadowgate_e = { root.owner = { country_event = { id = shadowgate_e.1 days = 3 } } }
				}
			}
		}
	}
}

# Shadowgate is colonized.
planet_event = {
	id = shadowgate_galactic.30
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { has_planet_flag = shadowgate_planet NOT = { owner = { is_country_type = shadowgate_ap } } }
	
	immediate = {
		if = { limit = { has_planet_flag = shadowgate_d_compass_unlocked } owner = { set_country_flag = shadowgate_dl_knowledge } }
		owner = {
			set_country_flag = encountered_shadowgate
			if = { limit = { NOT = { any_owned_planet = { NOT = { is_same_value = root } has_planet_flag = shadowgate_planet is_colony = yes } } }
				if = { limit = { NOT = { root = { shadowgate_is_disabled = yes } } }
					if = { limit = { is_ai = no }
						if = { limit = { has_country_flag = shadowgate_ap_accessed }
							switch = {
								trigger = has_country_flag
								shadowgate_a_accessed = { remove_shadowgate_accessed = { SHADOWGATE = a } }
								shadowgate_b_accessed = { remove_shadowgate_accessed = { SHADOWGATE = b } }
								shadowgate_c_accessed = { remove_shadowgate_accessed = { SHADOWGATE = c } }
								shadowgate_d_accessed = { remove_shadowgate_accessed = { SHADOWGATE = d } }
								shadowgate_e_accessed = { remove_shadowgate_accessed = { SHADOWGATE = e } }
							}
						}
						root = { set_shadowgate_accessed = yes }
					}
					root = {
						switch = {
							trigger = has_planet_flag
							shadowgate_a = { planet_event = { id = shadowgate_a.3 days = 5 } }
							shadowgate_b = { planet_event = { id = shadowgate_b.3 days = 5 } }
							shadowgate_c = { planet_event = { id = shadowgate_c.3 days = 5 } }
							shadowgate_d = { planet_event = { id = shadowgate_d.3 days = 5 } }
							shadowgate_e = { planet_event = { id = shadowgate_e.3 days = 5 } }
						}
					}
				}
				else = { root = { set_planet_flag = shadowgate_transferred_disabled } }
			}
		}
	}
}

country_event = {
	id = shadowgate_galactic.40
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { has_global_flag = shadowgate_prevent_ap_spawn } has_origin = origin_shadow_remnant }

	immediate = {
		capital_scope = {
			solar_system = {
				closest_system = { limit = { has_star_flag = shadowgate_shadow_remnant_origin }
					save_event_target_as = shadowgate_shadow_remnant_origin
				}
			}
		}
		country_event = { id = shadowgate_galactic.41 }
	}
}

country_event = {
	id = shadowgate_galactic.41
	title = shadow.remnant.origin.title
	desc = shadow.remnant.origin.begin.desc
	picture = GFX_evt_ancient_records
	show_sound = event_factions
	is_triggered_only = yes
	trackable = yes

	immediate = {
		set_country_flag = encountered_shadow_remnant
		event_target:shadowgate_shadow_remnant_origin = {
			star = {
				root = {
					begin_event_chain = { event_chain = shadowgate_shadow_remnant_origin target = root }
					create_point_of_interest = {
						id = shadowgate_shadow_remnant_origin
						name = "shadowgate_shadow_remnant_origin"
						event_chain = shadowgate_shadow_remnant_origin
						location = prev
					}
				}
			}
		}
	}

	option = {
		name = shadow.remnant.origin.begin.answer
	}
}

ship_event = {
	id = shadowgate_galactic.42
	hide_window = yes
	is_triggered_only = yes

	trigger = { exists = event_target:shadowgate_ap_country owner = { NOT = { has_communications = event_target:shadowgate_ap_country } } from = { is_point_of_interest = { id = shadowgate_shadow_remnant_origin event_chain = shadowgate_shadow_remnant_origin owner = root.owner } } }

	immediate = { from = { save_event_target_as = shadowgate_shadow_remnant_origin } owner = { country_event = { id = shadowgate_galactic.43 days = 1 } } }
}

country_event = {
	id = shadowgate_galactic.43
	title = shadow.remnant.origin.title
	desc = shadow.remnant.origin.destination.desc
	picture = GFX_evt_shadow_remnant
	show_sound = event_whispering
	is_triggered_only = yes

	immediate = { remove_point_of_interest = shadowgate_shadow_remnant_origin end_event_chain = shadowgate_shadow_remnant_origin }

	option = {
		name = shadow.remnant.origin.destination.answer
		enable_special_project = {
			name = SHADOW_REMNANT_PROJECT
			location = capital_scope
			owner = root
		}
	}
}

country_event = {
	id = shadowgate_galactic.44
	title = shadow.remnant.origin.finished.title
	desc = shadow.remnant.origin.finished.desc
	picture = GFX_evt_shadow_remnant
	show_sound = shadowgate_eth
	is_triggered_only = yes

	trigger = { exists = event_target:shadowgate_ap_country NOT = { has_communications = event_target:shadowgate_ap_country } }

	option = {
		name = shadow.remnant.origin.finished.answer
		hidden_effect = { country_event = { id = shadowgate_galactic.45 } }
	}
}

country_event = {
	id = shadowgate_galactic.45
	title = shadow.remnant.origin.finished.title
	desc = shadow.remnant.origin.contact.desc
	diplomatic = yes
	custom_gui = "shadowgate_ap_event_window"
	custom_gui_option = "shadowgate_ap_option"
	picture_event_data = {
		room = "no_video_feed_room"
	}
	is_triggered_only = yes
	show_sound = shadowgate_eth

	option = {
		name = DOTDOTDOT
		hidden_effect = { owner = { set_timed_country_flag = { flag = shadow_remnant_origin_surveyed days = 1 } } event_target:shadowgate_ap_country = { establish_contact = { who = root location = capital_scope.solar_system } } }
	}
}

country_event = {
	id = shadowgate_galactic.50
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { has_communications = from } from = { OR = { is_country_type = shadowrift is_country_type = shadowgate } } }

	immediate = { establish_communications_no_message = from }
}

ship_event = {
	id = shadowgate_galactic.60
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { has_star_flag = shadowgate_shadow_remnant } owner = { NOR = { has_country_flag = encountered_shadow_remnant has_country_flag = has_dimensional_shift } } }

	immediate = { owner = { set_country_flag = encountered_shadow_remnant } ship_event = { id = shadowgate_galactic.61 days = 1 } }
}

ship_event = {
	id = shadowgate_galactic.61
	title = shadow.remnant.system.found.title
	desc = shadow.remnant.system.found.desc
	picture = GFX_evt_shadow_remnant
	location = fromfrom
	show_sound = shadowgate_eth
	is_triggered_only = yes

	option = {
		name = INTERESTING
	}
}

##################################################################
# AI Events
##################################################################

# Overrides the name that AI empires give to shadowgates upon colonization.
planet_event = {
	id = shadowgate_galactic.100
	hide_window = yes
	is_triggered_only = yes

	trigger = { exists = owner owner = { is_ai = yes } has_planet_flag = shadowgate_planet }

	immediate = {
		switch = {
			trigger = has_planet_flag
			shadowgate_a = { set_name = shadowgate_a }
			shadowgate_b = { set_name = shadowgate_b }
			shadowgate_c = { set_name = shadowgate_c }
			shadowgate_d = { set_name = shadowgate_d }
			shadowgate_e = { set_name = shadowgate_e }
		}
	}
}

# Periodically summons shadowrifts from AI shadowgates.
event = {
	id = shadowgate_galactic.105
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				is_ai = yes
				NOR = { is_country_type = shadowgate_ap has_relic = r_shadowgate_crwt_active }
				any_owned_planet = {
					is_colonized_shadowgate = yes
					check_variable = { which = ShadowgateEther value >= 30 }
					controller = { is_same_value = prevprev }
					NOR = { has_planet_flag = shadowgate_ai_use_cooldown has_planet_flag = shadowrift_nascent shadowgate_is_disabled = yes has_modifier = pm_shadowgate_dimensional_shift has_modifier = pm_shadowgate_banishing has_modifier = pm_shadowgate_cooldown }
				}
			}
			random_owned_planet = { limit = { is_colonized_shadowgate = yes check_variable = { which = ShadowgateEther value >= 30 } controller = { is_same_value = prevprev } NOR = { has_planet_flag = shadowgate_ai_use_cooldown has_planet_flag = shadowrift_nascent shadowgate_is_disabled = yes has_modifier = pm_shadowgate_dimensional_shift has_modifier = pm_shadowgate_banishing has_modifier = pm_shadowgate_cooldown } }
				switch = {
					trigger = has_planet_flag
					shadowgate_a = { planet_event = { id = shadowgate_a.600 } }
					shadowgate_b = { planet_event = { id = shadowgate_b.600 } }
					shadowgate_c = { planet_event = { id = shadowgate_c.600 } }
					shadowgate_d = { planet_event = { id = shadowgate_d.600 } }
					shadowgate_e = { planet_event = { id = shadowgate_e.600 } }
				}
			}
		}
	}
}

# Yearly Pulse for AI Shadowgates.
event = {
	id = shadowgate_galactic.110
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { exists = event_target:shadowgate_planet_a event_target:shadowgate_planet_a = { exists = owner owner = { is_ai = yes } } } event_target:shadowgate_planet_a = { owner = { country_event = { id = shadowgate_galactic.111 } country_event = { id = shadowgate_galactic.112 } } planet_event = { id = shadowgate_galactic.113 } } }
		if = { limit = { exists = event_target:shadowgate_planet_b event_target:shadowgate_planet_b = { exists = owner owner = { is_ai = yes } } } event_target:shadowgate_planet_b = { owner = { country_event = { id = shadowgate_galactic.111 } country_event = { id = shadowgate_galactic.112 } } planet_event = { id = shadowgate_galactic.113 } } }
		if = { limit = { exists = event_target:shadowgate_planet_c event_target:shadowgate_planet_c = { exists = owner owner = { is_ai = yes } } } event_target:shadowgate_planet_c = { owner = { country_event = { id = shadowgate_galactic.111 } country_event = { id = shadowgate_galactic.112 } } planet_event = { id = shadowgate_galactic.113 } } }
		if = { limit = { exists = event_target:shadowgate_planet_d event_target:shadowgate_planet_d = { exists = owner owner = { is_ai = yes } } } event_target:shadowgate_planet_d = { owner = { country_event = { id = shadowgate_galactic.111 } country_event = { id = shadowgate_galactic.112 } } planet_event = { id = shadowgate_galactic.113 } } }
		if = { limit = { exists = event_target:shadowgate_planet_e event_target:shadowgate_planet_e = { exists = owner owner = { is_ai = yes } } } event_target:shadowgate_planet_e = { owner = { country_event = { id = shadowgate_galactic.111 } country_event = { id = shadowgate_galactic.112 } } planet_event = { id = shadowgate_galactic.113 } } }
	}
}

# Periodically dampen a rival's shadowgate seal.
country_event = {
	id = shadowgate_galactic.111
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_ai = yes NOT = { has_country_flag = shadowgate_ai_seal_dampened } has_resource = { type = influence amount >= 300 } NOR = { is_country_type = shadowgate_ap has_relic = r_shadowgate_crwt_active } if = { limit = { exists = event_target:shadowgate_ap_country has_communications = event_target:shadowgate_ap_country } event_target:shadowgate_ap_planet = { NOT = { shadowgate_is_disabled = yes } } } else = { any_owned_planet = { is_colonized_shadowgate = yes NOT = { shadowgate_is_disabled = yes } controller = { is_same_value = root } } } }

	immediate = {
		random_country = { limit = { NOT = { is_same_value = root } OR = { is_at_war_with = root has_rival = root root = { has_rival = prev } } check_variable = { which = ShadowgateSeal value > 0 } }
			random_list = {
				3 = { }
				1 = {
					root = { set_timed_country_flag = { flag = shadowgate_ai_seal_dampened days = 1080 } }
					if = { limit = { check_variable = { which = ShadowgateSeal value >= @shadowgate_seal_gr_p } root = { has_resource = { type = influence amount >= @shadowgate_seal_gr_p } } }
						random_list = {
							1 = { root = { add_resource = { influence = @shadowgate_seal_gr } } change_variable = { which = ShadowgateSeal value = @shadowgate_seal_gr } }
							2 = { root = { add_resource = { influence = @shadowgate_seal_lg } } change_variable = { which = ShadowgateSeal value = @shadowgate_seal_lg } }
						}
					}
					else_if = { limit = { check_variable = { which = ShadowgateSeal value >= @shadowgate_seal_lg_p } root = { has_resource = { type = influence amount >= @shadowgate_seal_lg_p } } }
						random_list = {
							1 = { root = { add_resource = { influence = @shadowgate_seal_lg } } change_variable = { which = ShadowgateSeal value = @shadowgate_seal_lg } }
							2 = { root = { add_resource = { influence = @shadowgate_seal_sm } } change_variable = { which = ShadowgateSeal value = @shadowgate_seal_sm } }
						}
					}
					else_if = { limit = { root = { has_resource = { type = influence amount >= @shadowgate_seal_sm_p } } }
						root = { add_resource = { influence = @shadowgate_seal_sm } }
						change_variable = { which = ShadowgateSeal value = @shadowgate_seal_sm }
					}
					send_shadowgate_seal_revoked_message = yes
					if = { limit = { root = { is_at_war_with = prev NOT = { has_relic = r_shadowgate_crwt_active } any_owned_planet = { is_colonized_shadowgate = yes controller = { is_same_value = root } NOR = { has_planet_flag = shadowrift_nascent shadowgate_is_disabled = yes has_modifier = pm_shadowgate_dimensional_shift has_modifier = pm_shadowgate_banishing has_modifier = pm_shadowgate_cooldown } } } }
						random_owned_planet = { limit = { is_colonized_shadowgate = yes controller = { is_same_value = root } NOR = { has_planet_flag = shadowrift_nascent shadowgate_is_disabled = yes has_modifier = pm_shadowgate_dimensional_shift has_modifier = pm_shadowgate_banishing has_modifier = pm_shadowgate_cooldown } }
							switch = {
								trigger = has_planet_flag
								shadowgate_a = { planet_event = { id = shadowgate_a.600 } }
								shadowgate_b = { planet_event = { id = shadowgate_b.600 } }
								shadowgate_c = { planet_event = { id = shadowgate_c.600 } }
								shadowgate_d = { planet_event = { id = shadowgate_d.600 } }
								shadowgate_e = { planet_event = { id = shadowgate_e.600 } }
							}
						}
					}
				}
			}
		}
	}
}

# Periodically amplify an AI or AI ally's shadowgate seal.
country_event = {
	id = shadowgate_galactic.112
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_ai = yes NOT = { has_country_flag = shadowgate_ai_seal_amplified } has_resource = { type = influence amount >= 300 } NOR = { is_country_type = shadowgate_ap has_relic = r_shadowgate_crwt_active } if = { limit = { exists = event_target:shadowgate_ap_country has_communications = event_target:shadowgate_ap_country event_target:shadowgate_ap_country = { trust = { who = root value >= 25 } } event_target:shadowgate_ap_planet = { NOT = { shadowgate_is_disabled = yes } } } always = yes } else = { any_owned_planet = { is_colonized_shadowgate = yes NOT = { shadowgate_is_disabled = yes } controller = { is_same_value = root } } } }

	immediate = {
		random_list = {
			5 = { }
			1 = {
				root = { set_timed_country_flag = { flag = shadowgate_ai_seal_amplified days = 1800 } }
				random_list = {
					1 = { random_country = { limit = { OR = { is_same_value = root is_in_federation_with = root has_defensive_pact = root } if = { limit = { NOT = { is_same_value = root } } their_opinion = { who = root value >= 50 } } } save_event_target_as = shadowgate_ai_seal_boost_target } }
					2 = { if = { limit = { check_variable = { which = ShadowgateSeal value < 1000 } } save_event_target_as = shadowgate_ai_seal_boost_target } else = { random_country = { limit = { OR = { is_in_federation_with = root has_defensive_pact = root } if = { limit = { NOT = { is_same_value = root } } their_opinion = { who = root value >= 50 } } } save_event_target_as = shadowgate_ai_seal_boost_target } } }
				}
				if = { limit = { exists = event_target:shadowgate_ai_seal_boost_target }
					event_target:shadowgate_ai_seal_boost_target = {
						if = { limit = { check_variable = { which = ShadowgateSeal value < 1000 } }
							if = { limit = { check_variable = { which = ShadowgateSeal value <= 900 } root = { has_resource = { type = influence amount >= @shadowgate_seal_gr_p } } }
								random_list = {
									1 = { root = { add_resource = { influence = @shadowgate_seal_gr } } change_variable = { which = ShadowgateSeal value = @shadowgate_seal_gr_p } }
									2 = { root = { add_resource = { influence = @shadowgate_seal_lg } } change_variable = { which = ShadowgateSeal value = @shadowgate_seal_lg_p } }
								}
							}
							else_if = { limit = { check_variable = { which = ShadowgateSeal value <= 950 } root = { has_resource = { type = influence amount >= @shadowgate_seal_lg_p } } }
								random_list = {
									1 = { root = { add_resource = { influence = @shadowgate_seal_lg } } change_variable = { which = ShadowgateSeal value = @shadowgate_seal_lg_p } }
									2 = { root = { add_resource = { influence = @shadowgate_seal_sm } } change_variable = { which = ShadowgateSeal value = @shadowgate_seal_sm_p } }
								}
							}
							else_if = { limit = { root = { has_resource = { type = influence amount >= @shadowgate_seal_sm_p } } }
								root = { add_resource = { influence = @shadowgate_seal_sm } }
								change_variable = { which = ShadowgateSeal value = @shadowgate_seal_sm_p }
							}
						}
					}
				}
			}
		}
	}
}

# Periodically fortify an AI-owned shadowgate shadowrift terminus.
planet_event = {
	id = shadowgate_galactic.113
	hide_window = yes
	is_triggered_only = yes

	trigger = { owner = { NOT = { has_relic = r_shadowgate_crwt_active } } is_colonized_shadowgate = yes NOT = { shadowgate_is_disabled = yes } controller = { is_same_value = root.owner } }

	immediate = {
		random_list = {
			6 = { modifier = { factor = 0.5 owner = { OR = { shadowgate_is_fe = yes shadowgate_is_ae = yes } } } }
			1 = {
				random_list = {
					1 = { apply_shadowrift_core_fortification = yes }
					1 = { apply_shadowrift_barrier_fortification = yes }
				}
			}
		}
	}
}

# AI begins banishing a shadowrift if a threat enters the system.
fleet_event = {
	id = shadowgate_galactic.115
	hide_window = yes
	is_triggered_only = yes

	trigger = { any_owned_ship = { is_ship_class = shipclass_military is_ship_class = shipclass_military_special } from = { has_star_flag = has_shadowrift } }

	immediate = {
		random_list = {
			1 = { }
			2 = {
				from = {
					switch = {
						trigger = has_star_flag
						has_shadowrift_a = { event_target:shadowgate_planet_a = { save_event_target_as = shadowgate_ai_banishing_planet } }
						has_shadowrift_b = { event_target:shadowgate_planet_b = { save_event_target_as = shadowgate_ai_banishing_planet } }
						has_shadowrift_c = { event_target:shadowgate_planet_c = { save_event_target_as = shadowgate_ai_banishing_planet } }
						has_shadowrift_d = { event_target:shadowgate_planet_d = { save_event_target_as = shadowgate_ai_banishing_planet } }
						has_shadowrift_e = { event_target:shadowgate_planet_e = { save_event_target_as = shadowgate_ai_banishing_planet } }
					}
				}
				event_target:shadowgate_ai_banishing_planet = {
					if = { limit = { exists = owner controller = { is_same_value = owner } }
						if = { limit = { owner = { is_country_type = shadowgate_ap } exists = event_target:shadowgate_ap_last_summoner } event_target:shadowgate_ap_last_summoner = { save_event_target_as = shadowgate_ai_banishing_owner } }
						else_if = { limit = { owner = { is_ai = yes } } owner = { save_event_target_as = shadowgate_ai_banishing_owner } }
						if = { limit = { event_target:shadowgate_ai_banishing_owner = { is_hostile = root.owner relative_power = { who = root.owner category = fleet value < superior } } } planet_event = { id = shadowgate_galactic.116 days = 5 random = 3 } }
					}
				}
			}
		}
	}
}

# AI decides to banish a shadowrift.
planet_event = {
	id = shadowgate_galactic.116
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_planet_flag = shadowrift_active NOR = { has_modifier = pm_shadowgate_banishing shadowgate_is_disabled = yes } }

	immediate = {
		switch = {
			trigger = has_planet_flag
			shadowgate_a = { banish_active_shadowrift = { SHADOWGATE = a } }
			shadowgate_b = { banish_active_shadowrift = { SHADOWGATE = b } }
			shadowgate_c = { banish_active_shadowrift = { SHADOWGATE = c } }
			shadowgate_d = { banish_active_shadowrift = { SHADOWGATE = d } }
			shadowgate_e = { banish_active_shadowrift = { SHADOWGATE = e } }
		}
		remove_planet_flag = shadowgate_ai_use_cooldown
	}
}

# Hunt a shadowrift in the current solar_system.
fleet_event = {
	id = shadowgate_galactic.120
	hide_window = yes
	is_triggered_only = yes

	trigger = { solar_system = { has_star_flag = has_shadowrift } NOT = { has_fleet_flag = shadowgate_rift_hunter_cooldown } owner = { is_ai = yes NOR = { has_country_flag = shadowgate_exclude_hostile_ai is_country_type = dormant_marauders } } OR = { has_fleet_flag = shadowgate_aggressive_fleet count_owned_ship = { count > 1 limit = { is_ship_class = shipclass_military } } } }

	immediate = {
		solar_system = {
			switch = {
				trigger = has_star_flag
				has_shadowrift_vc = { event_target:global_event_country = { save_event_target_as = hunted_shadowrift_owner } }
				has_shadowrift_a = { event_target:shadowgate_planet_a = { save_event_target_as = hunted_shadowgate_planet } }
				has_shadowrift_b = { event_target:shadowgate_planet_b = { save_event_target_as = hunted_shadowgate_planet } }
				has_shadowrift_c = { event_target:shadowgate_planet_c = { save_event_target_as = hunted_shadowgate_planet } }
				has_shadowrift_d = { event_target:shadowgate_planet_d = { save_event_target_as = hunted_shadowgate_planet } }
				has_shadowrift_e = { event_target:shadowgate_planet_e = { save_event_target_as = hunted_shadowgate_planet } }
			}
			if = { limit = { exists = event_target:hunted_shadowgate_planet }
				event_target:hunted_shadowgate_planet = {
					if = { limit = { exists = event_target:shadowgate_owner } event_target:shadowgate_owner = { save_event_target_as = hunted_shadowrift_owner } }
					else_if = { limit = { has_planet_flag = shadowgate_ashen_pilgrimage exists = event_target:shadowgate_ap_last_summoner } event_target:shadowgate_ap_last_summoner = { save_event_target_as = hunted_shadowrift_owner } }
					else_if = { limit = { exists = owner } owner = { save_event_target_as = hunted_shadowrift_owner } }
				}
			}
			random_fleet_in_system = { limit = { has_fleet_flag = shadowrift } save_event_target_as = hunted_shadowrift }
		}
		if = { limit = { exists = event_target:hunted_shadowrift_owner exists = event_target:hunted_shadowrift }
			set_timed_fleet_flag = { flag = shadowgate_rift_hunter_cooldown days = 720 }
			if = {
				limit = {
					owner = {
						OR = {
							AND = {
								event_target:hunted_shadowrift = { has_fleet_flag = shadowrift_vc }
								NOR = {
									has_tech_option = tech_labyrinthine_cartography
									has_technology = tech_labyrinthine_cartography
									any_owned_planet = { has_planet_flag = shadowgate_vc_effect is_colonized_shadowgate = yes }
									any_federation_ally = { OR = { has_technology = tech_labyrinthine_cartography any_owned_planet = { has_planet_flag = shadowgate_vc_effect is_colonized_shadowgate = yes } } }
								}
							}
							AND = {
								is_hostile = event_target:hunted_shadowrift_owner
								OR = {
									event_target:hunted_shadowrift_owner = { any_owned_fleet = { exists = solar_system solar_system = { is_within_borders_of = root.owner } } }
									relative_power = { who = event_target:hunted_shadowrift_owner category = fleet value < superior }
									is_country_type = gray_goo
									is_country_type = feral_prethoryn
									is_country_type = feral_prethoryn_infighting
									has_country_flag = shadowgate_hostile_to_shadowrift
								}
							}
							AND = {
								NOT = { is_hostile = event_target:hunted_shadowrift_owner }
								has_closed_borders = event_target:hunted_shadowrift_owner
								root.solar_system = { is_within_borders_of = prev }
								OR = {
									any_owned_planet = { is_colonized_shadowgate = yes }
									AND = {
										opinion = { who = event_target:hunted_shadowrift_owner value < 0 }
										OR = {
											has_opinion_modifier = { modifier = shadowrift_trespass who = event_target:hunted_shadowrift_owner }
											has_opinion_modifier = { modifier = opinion_threat who = event_target:hunted_shadowrift_owner }
										}
									}
									opinion = { who = event_target:hunted_shadowrift_owner value < -100 }
								}
							}
						}
					}
				}
				clear_orders = yes
				auto_follow_fleet = { target = event_target:hunted_shadowrift attack_fleet = yes }
			}
			else_if = { limit = { solar_system = { is_within_borders_of = prev.owner } owner = { has_closed_borders = event_target:hunted_shadowrift_owner has_opinion_modifier = { modifier = shadowrift_trespass who = event_target:hunted_shadowrift_owner } } } remove_fleet_flag = shadowgate_rift_hunter_cooldown set_timed_fleet_flag = { flag = shadowgate_rift_hunter_delayed days = 31 } owner = { country_event = { id = shadowgate_galactic.121 days = 30 } } }
		}
	}
}

country_event = {
	id = shadowgate_galactic.121
	hide_window = yes
	is_triggered_only = yes

	immediate = { every_owned_fleet = { limit = { has_fleet_flag = shadowgate_rift_hunter_delayed } remove_fleet_flag = shadowgate_rift_hunter_delayed fleet_event = { id = shadowgate_galactic.120 } } }
}

# Seek a shadowrift in the adjacent system (and potentially attack it with the events above)
fleet_event = {
	id = shadowgate_galactic.122
	hide_window = yes
	is_triggered_only = yes

	trigger = { owner = { is_ai = yes NOT = { has_country_flag = shadowgate_exclude_hostile_ai } is_country_type = default } solar_system = { any_neighbor_system = { has_star_flag = has_shadowrift root.owner = { intel_level = { system = prev level >= high } } } } count_owned_ship = { count > 1 limit = { is_ship_class = shipclass_military } } }

	immediate = {
		solar_system = {
			random_neighbor_system = { limit = { has_star_flag = has_shadowrift root.owner = { intel_level = { system = prev level >= high } } }
				random_fleet_in_system = { limit = { has_fleet_flag = shadowrift exists = owner }
					owner = {
						if = { limit = { OR = { prev = { has_fleet_flag = shadowrift_owner_safeguard } NOT = { has_relation_flag = { flag = shadowgate_rift_seeker_cooldown who = root.owner } } } }
							set_timed_relation_flag = { flag = shadowgate_rift_seeker_cooldown who = root.owner days = 720 }
							prevprev = {
								random_system_planet = { limit = { has_planet_flag = has_shadowrift } save_event_target_as = sought_shadowrift }
							}
							root = {
								clear_orders = yes
								auto_move_to_planet = { target = event_target:sought_shadowrift clear_auto_move_on_arrival = yes }
							}
						}
					}
				}
			}
		}
	}
}

# Send an idle AI fleet to a shadowrift within its owner's territory.
country_event = {
	id = shadowgate_galactic.123
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_ai = yes any_system_within_border = { has_star_flag = has_shadowrift NOR = { has_star_flag = shadowgate_solar_system has_star_flag = shadowgate_ai_searching_shadowrift } } any_owned_fleet = { is_fleet_idle = yes exists = solar_system solar_system = { is_within_borders_of = root } count_owned_ship = { count > 1 limit = { is_ship_class = shipclass_military } } } }

	immediate = {
		random_system_within_border = { limit = { has_star_flag = has_shadowrift NOR = { has_star_flag = shadowgate_solar_system has_star_flag = shadowgate_ai_searching_shadowrift } }
			set_timed_star_flag = { flag = shadowgate_ai_searching_shadowrift days = 3600 }
			random_system_planet = { limit = { has_planet_flag = has_shadowrift } save_event_target_as = searched_shadowrift }
		}
		random_owned_fleet = { limit = { is_fleet_idle = yes count_owned_ship = { count > 1 limit = { is_ship_class = shipclass_military } } }
			clear_orders = yes
			auto_move_to_planet = { target = event_target:searched_shadowrift clear_auto_move_on_arrival = yes arrival_effect = shadowgate_ai_searching_shadowrift }
		}
	}
}

# Emulate dimensional compass usage/shadow anchor construction for AI empires.
country_event = {
	id = shadowgate_galactic.130
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_ai = yes check_variable = { which = ShadowgateLodestonesOwned value > 0 } NOR = { is_country_type = shadowgate_ap has_relic = r_shadowgate_crwt_active } any_owned_planet = { is_colonized_shadowgate = yes NOT = { shadowgate_is_disabled = yes } } }

	immediate = {
		save_event_target_as = shadowgate_d_compass_owner
		random_owned_planet = { limit = { is_colonized_shadowgate = yes NOT = { shadowgate_is_disabled = yes } }
			random_list = {
				2 = { modifier = { factor = 0 OR = { has_planet_flag = shadowgate_ai_used_compass AND = { num_districts = { type = district_harmonic_subspace_resonator value = 0 } num_districts = { type = district_shadow_pulse_condenser value = 0 } num_districts = { type = district_spectral_projection_array value = 0 } } } }
					set_timed_planet_flag = { flag = shadowgate_ai_used_compass days = 10800 }
					set_variable = { which = ShadowgateLodestonesActive value = 0 }
					if = { limit = { OR = { has_planet_flag = shadowgate_dc_effect AND = { num_districts = { type = district_harmonic_subspace_resonator value = 3 } num_districts = { type = district_shadow_pulse_condenser value = 3 } num_districts = { type = district_spectral_projection_array value = 3 } } } } set_planet_flag = shadowgate_dc change_variable = { which = ShadowgateLodestonesActive value = 1 } owner = { set_country_flag = shadowgate_d_compass_saved subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
					set_variable = { which = ShadowgateAICompassCount value = 1 }
					if = { limit = { has_planet_flag = shadowgate_dc } change_variable = { which = ShadowgateAICompassCount value = 1 } }
					if = { limit = { prev = { has_relic = r_shadowgate_shadowforge } } change_variable = { which = ShadowgateAICompassCount value = 1 } }
					if = { limit = { check_variable = { which = ShadowgateAICompassCount value <= ShadowgateLodestonesOwned } }
						while = { count = ShadowgateAICompassCount
							random_list = {
								4 = { modifier = { factor = 0 OR = { has_planet_flag = shadowgate_rch num_districts = { type = district_shadow_pulse_condenser value < 2 } } } set_planet_flag = shadowgate_rch change_variable = { which = ShadowgateLodestonesActive value = 1 } owner = { set_country_flag = shadowgate_d_compass_saved subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
	#							4 = { modifier = { factor = 0 OR = { has_planet_flag = shadowgate_dup num_districts = { type = district_spectral_projection_array value < 2 } } } set_planet_flag = shadowgate_dup change_variable = { which = ShadowgateLodestonesActive value = 1 } owner = { set_country_flag = shadowgate_d_compass_saved subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
								7 = { modifier = { factor = 0 OR = { has_planet_flag = shadowgate_sp num_districts = { type = district_harmonic_subspace_resonator value < 2 } } } set_planet_flag = shadowgate_sp change_variable = { which = ShadowgateLodestonesActive value = 1 } owner = { set_country_flag = shadowgate_d_compass_saved subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
								7 = { modifier = { factor = 0 OR = { has_planet_flag = shadowgate_vc num_districts = { type = district_spectral_projection_array value = 0 } root = { count_system_within_border = { count = 0 limit = { has_star_flag = shadowgate_shadow_remnant } } } } } set_planet_flag = shadowgate_vc change_variable = { which = ShadowgateLodestonesActive value = 1 } owner = { set_country_flag = shadowgate_d_compass_saved subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
								10 = { modifier = { factor = 0 OR = { has_planet_flag = shadowgate_asp num_districts = { type = district_shadow_pulse_condenser value = 0 } } } set_planet_flag = shadowgate_asp change_variable = { which = ShadowgateLodestonesActive value = 1 } owner = { set_country_flag = shadowgate_d_compass_saved subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
								6 = { modifier = { factor = 0 OR = { has_planet_flag = shadowgate_sm num_districts = { type = district_harmonic_subspace_resonator value = 0 } root = { count_owned_megastructure = { count = 0 limit = { is_megastructure_type = shadow_anchor } } } } } set_planet_flag = shadowgate_sm change_variable = { which = ShadowgateLodestonesActive value = 1 } owner = { set_country_flag = shadowgate_d_compass_saved subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
								1 = { }
							}
						}
						if = { limit = { root = { has_country_flag = shadowgate_d_compass_saved } }
							owner = { subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } }
							switch = {
								trigger = has_planet_flag
								shadowgate_a = { planet_event = { id = shadowgate_a.3011 } }
								shadowgate_b = { planet_event = { id = shadowgate_b.3011 } }
								shadowgate_c = { planet_event = { id = shadowgate_c.3011 } }
								shadowgate_d = { planet_event = { id = shadowgate_d.3011 } }
								shadowgate_e = { planet_event = { id = shadowgate_e.3011 } }
							}
						}
						else = { change_variable = { which = ShadowgateBerthedAnchors value = 1 } owner = { subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
					}
					clear_variable = ShadowgateAICompassCount
				}
				1 = { change_variable = { which = ShadowgateBerthedAnchors value = 1 } owner = { subtract_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
				2 = { }
			}
		}
	}
}

# Clear a blocker/restore a district on an ai owned shadowgate planet.
planet_event = {
	id = shadowgate_galactic.135
	hide_window = yes
	is_triggered_only = yes

	trigger = { exists = owner owner = { is_ai = yes } NAND = { num_districts = { type = district_harmonic_subspace_resonator value = 3 } num_districts = { type = district_shadow_pulse_condenser value = 3 } num_districts = { type = district_spectral_projection_array value = 3 } } }

	immediate = {
		if = { limit = { exists = owner owner = { is_ai = yes } }
			random_list = {
				1 = { modifier = { factor = 0 num_districts = { type = district_harmonic_subspace_resonator value > 0 } }
					add_district = district_harmonic_subspace_resonator shadowgate_district_was_built = { DISTRICT = district_harmonic_subspace_resonator }
				}
				1 = { modifier = { factor = 0 NOT = { num_districts = { type = district_harmonic_subspace_resonator value = 1 } } }
					if = { limit = { has_deposit = d_warped_polarizing_lenses } remove_deposit = d_warped_polarizing_lenses }
					else = { add_district = district_harmonic_subspace_resonator shadowgate_district_was_built = { DISTRICT = district_harmonic_subspace_resonator } }
				}
				1 = { modifier = { factor = 0 OR = { has_deposit = d_warped_polarizing_lenses NOT = { num_districts = { type = district_harmonic_subspace_resonator value = 2 } } } }
					if = { limit = { has_deposit = d_depressurized_windchests } remove_deposit = d_depressurized_windchests }
					else = { add_district = district_harmonic_subspace_resonator shadowgate_district_was_built = { DISTRICT = district_harmonic_subspace_resonator } }
				}
				1 = { modifier = { factor = 0 num_districts = { type = district_shadow_pulse_condenser value > 0 } }
					add_district = district_shadow_pulse_condenser shadowgate_district_was_built = { DISTRICT = district_shadow_pulse_condenser }
				}
				1 = { modifier = { factor = 0 NOT = { num_districts = { type = district_shadow_pulse_condenser value = 1 } } }
					if = { limit = { has_deposit = d_defunct_containment_field_nodes } remove_deposit = d_defunct_containment_field_nodes }
					else = { add_district = district_shadow_pulse_condenser shadowgate_district_was_built = { DISTRICT = district_shadow_pulse_condenser } }
				}
				1 = { modifier = { factor = 0 OR = { has_deposit = d_defunct_containment_field_nodes NOT = { num_districts = { type = district_shadow_pulse_condenser value = 2 } } } }
					if = { limit = { has_deposit = d_faulty_ignition_chambers } remove_deposit = d_faulty_ignition_chambers }
					else = { add_district = district_shadow_pulse_condenser shadowgate_district_was_built = { DISTRICT = district_shadow_pulse_condenser } }
				}
				1 = { modifier = { factor = 0 num_districts = { type = district_spectral_projection_array value > 0 } }
					add_district = district_spectral_projection_array shadowgate_district_was_built = { DISTRICT = district_spectral_projection_array }
				}
				1 = { modifier = { factor = 0 NOT = { num_districts = { type = district_spectral_projection_array value = 1 } } }
					if = { limit = { has_deposit = d_warped_polarizing_lenses } remove_deposit = d_warped_polarizing_lenses }
					else = { add_district = district_spectral_projection_array shadowgate_district_was_built = { DISTRICT = district_spectral_projection_array } }
				}
				1 = { modifier = { factor = 0 OR = { has_deposit = d_warped_polarizing_lenses NOT = { num_districts = { type = district_spectral_projection_array value = 2 } } } }
					if = { limit = { has_deposit = d_fractured_projector_prisms } remove_deposit = d_fractured_projector_prisms }
					else = { add_district = district_spectral_projection_array shadowgate_district_was_built = { DISTRICT = district_spectral_projection_array } }
				}
			}
		}
	}
}

event = {
	id = shadowgate_galactic.136
	hide_window = yes
	is_triggered_only = yes

	trigger = { mid_game_years_passed > 0 }

	immediate = {
		random_country = { limit = { is_ai = yes NOR = { has_country_flag = shadowgate_upgraded is_country_type = shadowgate_ap } any_owned_planet = { is_colonized_shadowgate = yes } }
			set_timed_country_flag = { flag = shadowgate_upgraded days = 7200 }
			random_owned_planet = { limit = { is_colonized_shadowgate = yes }
				planet_event = { id = shadowgate_galactic.135 days = 1800 random = 1080 }
			}
		}
	}
}

# AI spawns shadow anchors in their territory if their shadowgate(s) possess any berthed anchors. Also covers the activation of any existing inactive ones.
country_event = {
	id = shadowgate_galactic.140
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_ai = yes NOR = { is_country_type = shadowgate_ap has_relic = r_shadowgate_crwt_active } has_country_flag = has_shadow_anchors OR = { any_owned_planet = { is_colonized_shadowgate = yes NOT = { shadowgate_is_disabled = yes } check_variable = { which = ShadowgateBerthedAnchors value > 0 } } any_system_within_border = { has_star_flag = inactive_shadow_anchor any_system_megastructure = { NOT = { is_upgrading = yes } } } } }

	immediate = {
		random_system_within_border = { limit = { exists = starbase starbase = { has_starbase_size > starbase_outpost } any_system_planet = { OR = { has_planet_flag = allow_shadow_anchor NOR = { has_planet_flag = prevent_shadow_anchor is_star = yes is_asteroid = yes is_moon = yes is_colonizable = yes is_colony = yes } } } OR = { has_star_flag = allow_shadow_anchor NOR = { has_star_flag = shadow_anchor has_star_flag = prevent_shadow_anchor has_star_flag = shadowgate_solar_system any_system_planet = { is_capital = yes } } } }
			random_system_planet = { limit = { OR = { has_planet_flag = allow_shadow_anchor NOR = { has_planet_flag = prevent_shadow_anchor is_star = yes is_asteroid = yes is_moon = yes is_colonizable = yes is_colony = yes } } } save_event_target_as = shadowgate_ai_shadow_anchor_planet }
		}
		if = { limit = { exists = event_target:shadowgate_ai_shadow_anchor_planet }
			random_owned_planet = { limit = { is_colonized_shadowgate = yes check_variable = { which = ShadowgateBerthedAnchors value > 0 } }
				subtract_variable = { which = ShadowgateBerthedAnchors value = 1 }
				event_target:shadowgate_ai_shadow_anchor_planet = {
					solar_system = {
						spawn_megastructure = { type = shadow_anchor owner = space_owner planet = prev }
						random_system_megastructure = { limit = { is_megastructure_type = shadow_anchor } upgrade_megastructure_to = shadow_anchor_toggle }
					}
				}
			}
		}
		else = {
			random_system_within_border = { limit = { has_star_flag = inactive_shadow_anchor any_system_megastructure = { NOT = { is_upgrading = yes } } }
				random_system_megastructure = { limit = { is_megastructure_type = shadow_anchor } upgrade_megastructure_to = shadow_anchor_toggle }
			}
		}
	}
}

# Fallen/Awakened Materialist/Spiritualist empires will confront shadowgate owners about their suspicions when traversing their territory.
fleet_event = {
	id = shadowgate_galactic.150
	hide_window = yes
	is_triggered_only = yes

	trigger = { owner = { OR = { shadowgate_is_fe = yes shadowgate_is_ae = yes } is_ai = yes OR = { has_ethic = ethic_fanatic_materialist has_ethic = ethic_fanatic_spiritualist } } NOT = { has_global_flag = shadowgate_fe_confrontation } exists = space_owner space_owner = { NOR = { is_country_type = shadowgate_ap is_same_value = root.owner is_at_war_with = root.owner has_country_flag = shadowgate_fe_confronted } any_owned_planet = { is_colonized_shadowgate = yes } } }

	immediate = {
		random_list = {
			50 = { }
			1 = {
				set_global_flag = shadowgate_fe_confrontation
				owner = { save_event_target_as = shadowgate_fe_threat }
				space_owner = {
					random_owned_planet = { limit = { is_colonized_shadowgate = yes }
						switch = {
							trigger = has_planet_flag
							shadowgate_a = { planet_event = { id = shadowgate_a.310 days = 30 random = 15 } }
							shadowgate_b = { planet_event = { id = shadowgate_b.310 days = 30 random = 15 } }
							shadowgate_c = { planet_event = { id = shadowgate_c.310 days = 30 random = 15 } }
							shadowgate_d = { planet_event = { id = shadowgate_d.310 days = 30 random = 15 } }
							shadowgate_e = { planet_event = { id = shadowgate_e.310 days = 30 random = 15 } }
						}
					}
				}
			}
		}
	}
}

# Fallen/Awakened Materialist/Spiritualist empires will confront neighboring shadowgate owners about their suspicions.
planet_event = {
	id = shadowgate_galactic.151
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOR = { has_global_flag = shadowgate_fe_confrontation has_planet_flag = shadowgate_ashen_pilgrimage } owner = { NOR = { has_country_flag = shadowgate_fe_confronted } any_neighbor_country = { is_ai = yes OR = { shadowgate_is_fe = yes shadowgate_is_ae = yes } OR = { has_ethic = ethic_fanatic_materialist has_ethic = ethic_fanatic_spiritualist } NOT = { is_at_war_with = prev } } } }

	immediate = {
		random_list = {
			50 = {  }
			1 = {
				set_global_flag = shadowgate_fe_confrontation
				owner = {
					random_neighbor_country = { limit = { is_ai = yes OR = { shadowgate_is_fe = yes shadowgate_is_ae = yes } OR = { has_ethic = ethic_fanatic_materialist has_ethic = ethic_fanatic_spiritualist } NOT = { is_at_war_with = prev } }
						save_event_target_as = shadowgate_fe_threat
					}
				}
				switch = {
					trigger = has_planet_flag
					shadowgate_a = { planet_event = { id = shadowgate_a.310 days = 30 random = 15 } }
					shadowgate_b = { planet_event = { id = shadowgate_b.310 days = 30 random = 15 } }
					shadowgate_c = { planet_event = { id = shadowgate_c.310 days = 30 random = 15 } }
					shadowgate_d = { planet_event = { id = shadowgate_d.310 days = 30 random = 15 } }
					shadowgate_e = { planet_event = { id = shadowgate_e.310 days = 30 random = 15 } }
				}
			}
		}
	}
}

##################################################################
# Hidden Functionalities
##################################################################

# Shadowgate is transferred between countries (conquered or traded).
planet_event = {
	id = shadowgate_galactic.200
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_colonized_shadowgate = yes NOT = { from = { is_country_type = shadowgate_ap } } }

	immediate = {
		if = { limit = { NOT = { owner = { is_country_type = swarm } } }
			if = { limit = { NOT = { shadowgate_is_disabled = yes } }
				if = { limit = { NOT = { owner = { any_owned_planet = { NOT = { is_same_value = root } has_planet_flag = shadowgate_planet } } } }
					from = { set_country_flag = shadowgate_transferred }
					switch = {
						trigger = has_planet_flag
						shadowgate_a = { planet_event = { id = shadowgate_a.3 days = 5 } }
						shadowgate_b = { planet_event = { id = shadowgate_b.3 days = 5 } }
						shadowgate_c = { planet_event = { id = shadowgate_c.3 days = 5 } }
						shadowgate_d = { planet_event = { id = shadowgate_d.3 days = 5 } }
						shadowgate_e = { planet_event = { id = shadowgate_e.3 days = 5 } }
					}
				}
			}
			else = {
				set_planet_flag = shadowgate_transferred_disabled
				if = { limit = { solar_system = { shadowgate_antiresonant_void_check = yes } NOT = { has_modifier = pm_shadowgate_disabled } }
					solar_system = { save_event_target_as = shadowrift_vd_rift_system }
					planet_event = { id = shadowgate_galactic.230 }
				}
			}
			if = { limit = { has_planet_flag = shadowgate_d_compass_unlocked } owner = { set_country_flag = shadowgate_dl_knowledge } }
		}
		else = { destroy_colony = yes }
	}
}

# Remove shadow mooring rifts when a shadowgate becomes ownerless or transfers owners, and create new ones after undergoing transfer.
planet_event = {
	id = shadowgate_galactic.205
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_planet_flag = shadowgate_planet has_planet_flag = shadowgate_sm_effect has_planet_flag = shadowrift_active }

	immediate = {
		set_planet_flag = remove_shadow_mooring_rifts
		remove_planet_flag = shadowgate_sm_denied
		switch = {
			trigger = has_planet_flag
			shadowgate_a = { remove_active_shadowrift = { SHADOWGATE = a } if = { limit = { exists = owner owner = { is_same_value = from } } planet_event = { id = shadowgate_a.3000 } } }
			shadowgate_b = { remove_active_shadowrift = { SHADOWGATE = b } if = { limit = { exists = owner owner = { is_same_value = from } } planet_event = { id = shadowgate_b.3000 } } }
			shadowgate_c = { remove_active_shadowrift = { SHADOWGATE = c } if = { limit = { exists = owner owner = { is_same_value = from } } planet_event = { id = shadowgate_c.3000 } } }
			shadowgate_d = { remove_active_shadowrift = { SHADOWGATE = d } if = { limit = { exists = owner owner = { is_same_value = from } } planet_event = { id = shadowgate_d.3000 } } }
			shadowgate_e = { remove_active_shadowrift = { SHADOWGATE = e } if = { limit = { exists = owner owner = { is_same_value = from } } planet_event = { id = shadowgate_e.3000 } } }
		}
	}
}

# Remove a lodestone socketed under the effects of a shadowforge when a shadowgate loses its owner/transfers to another empire.
planet_event = {
	id = shadowgate_galactic.210
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_planet_flag = shadowgate_planet NOT = { has_planet_flag = shadowgate_ashen_pilgrimage } if = { limit = { exists = owner } owner = { NOT = { has_relic = r_shadowgate_shadowforge } } } if = { limit = { has_planet_flag = shadowgate_dc_effect } check_variable = { which = ShadowgateLodestonesActive value > 3 } } else = { check_variable = { which = ShadowgateLodestonesActive value > 1 } } }

	immediate = {
		set_variable = { which = ShadowgateLodestonesActive value = 0 }
		if = { limit = { has_planet_flag = shadowgate_dc_effect } set_planet_flag = shadowgate_dc change_variable = { which = ShadowgateLodestonesActive value = 1 } }
		if = { limit = { has_planet_flag = shadowgate_rch_effect } set_planet_flag = shadowgate_rch change_variable = { which = ShadowgateLodestonesActive value = 1 } }
		if = { limit = { has_planet_flag = shadowgate_dup_effect } set_planet_flag = shadowgate_dup change_variable = { which = ShadowgateLodestonesActive value = 1 } }
		if = { limit = { has_planet_flag = shadowgate_sp_effect } set_planet_flag = shadowgate_sp change_variable = { which = ShadowgateLodestonesActive value = 1 } }
		if = { limit = { has_planet_flag = shadowgate_vc_effect } set_planet_flag = shadowgate_vc change_variable = { which = ShadowgateLodestonesActive value = 1 } }
		if = { limit = { has_planet_flag = shadowgate_asp_effect } set_planet_flag = shadowgate_asp change_variable = { which = ShadowgateLodestonesActive value = 1 } }
        if = { limit = { has_planet_flag = shadowgate_sm_effect } set_planet_flag = shadowgate_sm change_variable = { which = ShadowgateLodestonesActive value = 1 } }
		while = { limit = { if = { limit = { has_planet_flag = shadowgate_dc_effect } check_variable = { which = ShadowgateLodestonesActive value > 3 } } else = { check_variable = { which = ShadowgateLodestonesActive value > 1 } } }
			random_list = {
				1 = { modifier = { factor = 0 NOT = { has_planet_flag = shadowgate_rch } } remove_planet_flag = shadowgate_rch subtract_variable = { which = ShadowgateLodestonesActive value = 1 } }
				1 = { modifier = { factor = 0 NOT = { has_planet_flag = shadowgate_dup } } remove_planet_flag = shadowgate_dup subtract_variable = { which = ShadowgateLodestonesActive value = 1 } }
				1 = { modifier = { factor = 0 NOT = { has_planet_flag = shadowgate_sp } } remove_planet_flag = shadowgate_sp subtract_variable = { which = ShadowgateLodestonesActive value = 1 } }
				1 = { modifier = { factor = 0 NOT = { has_planet_flag = shadowgate_vc } } remove_planet_flag = shadowgate_vc subtract_variable = { which = ShadowgateLodestonesActive value = 1 } }
				1 = { modifier = { factor = 0 NOT = { has_planet_flag = shadowgate_asp } } remove_planet_flag = shadowgate_asp subtract_variable = { which = ShadowgateLodestonesActive value = 1 } }
				1 = { modifier = { factor = 0 NOT = { has_planet_flag = shadowgate_sm } } remove_planet_flag = shadowgate_sm subtract_variable = { which = ShadowgateLodestonesActive value = 1 } }
			}
		}
		event_target:global_event_country = { save_event_target_as = shadowgate_d_compass_owner }
		switch = {
			trigger = has_planet_flag
			shadowgate_a = { planet_event = { id = shadowgate_a.3011 } }
			shadowgate_b = { planet_event = { id = shadowgate_b.3011 } }
			shadowgate_c = { planet_event = { id = shadowgate_c.3011 } }
			shadowgate_d = { planet_event = { id = shadowgate_d.3011 } }
			shadowgate_e = { planet_event = { id = shadowgate_e.3011 } }
		}
	}
}

# The contries that act as attackable shadowrift terminuses routinely lose ownership of said shadowrift terminuses. This event preempts other events that interact with terminuses to try and prevent any discontinuities.
country_event = {
	id = shadowgate_galactic.215
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_system = { limit = { has_star_flag = has_shadowrift }
			switch = {
				trigger = has_star_flag
				has_shadowrift_a = { every_fleet_in_system = { limit = { has_fleet_flag = shadowrift } set_owner = event_target:shadowrift_country_a } }
				has_shadowrift_b = { every_fleet_in_system = { limit = { has_fleet_flag = shadowrift } set_owner = event_target:shadowrift_country_b } }
				has_shadowrift_c = { every_fleet_in_system = { limit = { has_fleet_flag = shadowrift } set_owner = event_target:shadowrift_country_c } }
				has_shadowrift_d = { every_fleet_in_system = { limit = { has_fleet_flag = shadowrift } set_owner = event_target:shadowrift_country_d } }
				has_shadowrift_e = { every_fleet_in_system = { limit = { has_fleet_flag = shadowrift } set_owner = event_target:shadowrift_country_e } }
				shadowgate_shadow_remnant = {
					random_country = { limit = { check_variable = { which = ShadowgateVCCountry value = prev } }
						prev = { every_fleet_in_system = { limit = { has_fleet_flag = shadowrift_vc } set_owner = prevprev } }
					}
				}
			}
		}
	}
}

# Extension of the above event, but triggered immediately after a rift is cast.
fleet_event = {
	id = shadowgate_galactic.216
	hide_window = yes
	is_triggered_only = yes

	abort_trigger = { NOR = { exists = from exists = this } }

	immediate = {
		switch = {
			trigger = has_fleet_flag
			shadowrift_a = { set_owner = event_target:shadowrift_country_a }
			shadowrift_b = { set_owner = event_target:shadowrift_country_b }
			shadowrift_c = { set_owner = event_target:shadowrift_country_c }
			shadowrift_d = { set_owner = event_target:shadowrift_country_d }
			shadowrift_e = { set_owner = event_target:shadowrift_country_e }
			shadowrift_vc = {
				solar_system = {
					random_country = { limit = { check_variable = { which = ShadowgateVCCountry value = prev } }
						root = { set_owner = prev }
					}
				}
			}
		}
		if = { limit = { has_fleet_flag = shadowrift_owner_safeguard } fleet_event = { id = shadowgate_galactic.216 days = 1 } }
	}
}

# Notification that a shadowgate's dimensional feedback modifier has run its course.
planet_event = {
	id = shadowgate_galactic.220
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { shadowgate_is_disabled = yes } }

	immediate = {
		if = { limit = { NOT = { has_planet_flag = shadowgate_ashen_pilgrimage } }
			create_message = {
				type = MESSAGE_TYPE_SHADOWGATE_OFF_COOLDOWN
				localization = MESSAGE_SHADOWGATE_OFF_COOLDOWN
				days = 15
				target = this
				variable = {
					type = name
					localization = SHADOWGATE
					scope = this
				}
			}
		}
		else = {
			event_target:shadowgate_ap_country = {
				every_relation = { limit = { has_country_flag = shadowgate_ap_shadowgate_notify NOT = { is_hostile = prev } }
					create_message = {
						type = MESSAGE_TYPE_SHADOWGATE_OFF_COOLDOWN
						localization = MESSAGE_SHADOWGATE_OFF_COOLDOWN_AP
						days = 15
						target = prev
						variable = {
							type = name
							localization = SHADOWGATE
							scope = prev
						}
					}
				}
			}
		}
	}
}

# Notifies a country that a hostile fleet has engaged one of its shadowrift terminuses.
country_event = {
	id = shadowgate_galactic.225
	hide_window = yes
	is_triggered_only = yes

	trigger = { fromfrom = { has_fleet_flag = shadowrift } }

	immediate = {
		fromfrom = { fleet_event = { id = shadowgate_galactic.226 days = 1 } }
		if = { limit = { fromfrom = { solar_system = { NOT = { has_star_flag = has_shadowrift_vc } } } }
			fromfrom = {
				solar_system = {
					switch = {
						trigger = has_star_flag
						default = { }
						has_shadowrift_a = { event_target:shadowgate_planet_a = { save_event_target_as = shadowgate_assaulted_planet } }
						has_shadowrift_b = { event_target:shadowgate_planet_b = { save_event_target_as = shadowgate_assaulted_planet } }
						has_shadowrift_c = { event_target:shadowgate_planet_c = { save_event_target_as = shadowgate_assaulted_planet } }
						has_shadowrift_d = { event_target:shadowgate_planet_d = { save_event_target_as = shadowgate_assaulted_planet } }
						has_shadowrift_e = { event_target:shadowgate_planet_e = { save_event_target_as = shadowgate_assaulted_planet } }
					}
				}
			}
			event_target:shadowgate_assaulted_planet = {
				if = { limit = { exists = owner }
					owner = { 
						if = { limit = { is_country_type = shadowgate_ap exists = event_target:shadowgate_ap_last_summoner }
							event_target:shadowgate_ap_last_summoner = {
								save_event_target_as = shadowgate_assaulted_owner
								if = { limit = { NOT = { has_country_flag = shadowgate_ap_accessed } prevprev = { has_planet_flag = shadowgate_accessed } }
									random_country = { limit = { has_country_flag = shadowgate_ap_accessed }
										switch = {
											trigger = has_country_flag
											shadowgate_a_accessed = { remove_shadowgate_accessed = { SHADOWGATE = a } }
											shadowgate_b_accessed = { remove_shadowgate_accessed = { SHADOWGATE = b } }
											shadowgate_c_accessed = { remove_shadowgate_accessed = { SHADOWGATE = c } }
											shadowgate_d_accessed = { remove_shadowgate_accessed = { SHADOWGATE = d } }
											shadowgate_e_accessed = { remove_shadowgate_accessed = { SHADOWGATE = e } }
										}
									}
								}
							}
						}
						else = { save_event_target_as = shadowgate_assaulted_owner }
					}
				}
			}
			if = { limit = { exists = event_target:shadowgate_assaulted_owner exists = from from = { NOT = { is_same_value = event_target:shadowgate_assaulted_owner } } }
				event_target:shadowgate_assaulted_owner = {
					if = { limit = { shadowgate_aggressor_is_valid_cb_target = yes }
						set_timed_relation_flag = { flag = shadowrift_attacked who = from days = 1800 }
						add_casus_belli = {
							type = cb_shadowrift_attacked
							who = from
							days = 1800
						}
					}
				}
				if = { limit = { NOT = { fromfrom = { has_fleet_flag = shadowrift_attacked_warning } } }
					fromfrom = { set_timed_fleet_flag = { flag = shadowrift_attacked_warning days = 90 } }
					event_target:shadowgate_assaulted_owner = {
						create_message = {
							type = MESSAGE_TYPE_SHADOWRIFT_ATTACKED
							localization = MESSAGE_SHADOWRIFT_ATTACKED
							days = 30
							target = fromfrom.solar_system
							variable = {
								type = name
								localization = FLEET
								scope = fromfromfrom
							}
							variable = {
								type = name
								localization = SYSTEM
								scope = fromfrom.solar_system
							}
						}
						event_target:shadowgate_assaulted_planet = {
							if = { limit = { NOR = { has_planet_flag = shadowgate_dup_on has_planet_flag = shadowgate_ashen_pilgrimage } }
								if = { limit = { OR = { NOT = { prev = { has_country_flag = shadowrift_assault_notified } } AND = { has_planet_flag = shadowgate_rp_notifications NOT = { has_planet_flag = shadowgate_rp_assault_alert } } } }
									set_timed_planet_flag = { flag = shadowgate_rp_assault_alert days = 1800 }
									remove_planet_flag = shadowgate_rp_notified
									send_shadowgate_ruinous_potency_message = yes
									set_timed_planet_flag = { flag = shadowgate_rp_assaulted days = 5 }
								}
								if = { limit = { NOT = { prev = { has_country_flag = shadowrift_assault_notified } } }
									prev = { set_country_flag = shadowrift_assault_notified }
									planet_event = { id = shadowgate_galactic.323 days = 3 }
								}
							}
						}
					}
				}
			}
		}
		else = {
			fromfrom = {
				solar_system = {
					every_country = { limit = { intel_level = { system = prev level > low } NOT = { is_same_value = root.from } OR = { has_technology = tech_labyrinthine_cartography any_owned_planet = { has_planet_flag = shadowgate_vc_effect is_colonized_shadowgate = yes } } }
						if = { limit = { shadowgate_aggressor_is_valid_cb_target = yes }
							set_timed_relation_flag = { flag = shadowrift_attacked who = root.from days = 1800 }
							add_casus_belli = {
								type = cb_shadowrift_attacked
								who = root.from
								days = 1800
							}
						}
						if = { limit = { NOT = { prevprev = { has_fleet_flag = shadowrift_attacked_warning } } }
							prevprev = { set_timed_fleet_flag = { flag = shadowrift_attacked_warning days = 90 } }
							create_message = {
								type = MESSAGE_TYPE_SHADOWRIFT_ATTACKED
								localization = MESSAGE_SHADOWRIFT_VC_ATTACKED
								days = 90
								target = prev
								variable = {
									type = name
									localization = FLEET
									scope = root.fromfromfrom
								}
								variable = {
									type = name
									localization = SYSTEM
									scope = prev
								}	
							}
						}
					}
				}
			}
		}
	}
}

# Spawns an energy orb that looks like the source of the reactive lightning that shoots out of a rift during assault.
fleet_event = {
	id = shadowgate_galactic.226
	hide_window = yes
	is_triggered_only = yes

	abort_trigger = { NOR = { exists = from exists = this } }

	trigger = { is_in_combat = yes NOT = { has_fleet_flag = shadowrift_lightning } }

	immediate = {
		set_timed_fleet_flag = { flag = shadowrift_lightning days = 15 }
		solar_system = { every_system_ambient_object = { limit = { has_ambient_object_flag = shadowrift_lightning } destroy_ambient_object = this } }
		create_ambient_object = { type = shadowrift_cloud location = this use_3d_location = yes scale = @shadowgate_cloud_scale duration = @shadowgate_cloud_offset }
		last_created_ambient_object = { set_ambient_object_flag = shadowrift_lightning }
		fleet_event = { id = shadowgate_galactic.226 days = 15 }
	}
}

# Violent destabilization from when either a terminus is defeated in combat or a shadowgate reaches 100% Devastation.
planet_event = {
	id = shadowgate_galactic.230
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { NOT = { has_planet_flag = shadowgate_vd } }
			set_timed_planet_flag = { flag = shadowgate_vd days = 1 }
			if = { limit = { NOT = { exists = owner } } event_target:global_event_country = { save_event_target_as = shadowgate_vd_owner } }
			else_if = { limit = { has_planet_flag = shadowgate_ashen_pilgrimage exists = event_target:shadowgate_ap_last_summoner } event_target:shadowgate_ap_last_summoner = { save_event_target_as = shadowgate_vd_owner } }
			else = { owner = { save_event_target_as = shadowgate_vd_owner } }
			if = { limit = { has_modifier = pm_shadowgate_dimensional_shift }
				remove_modifier = pm_shadowgate_dimensional_shift
				solar_system = { random_system_ambient_object = { limit = { has_ambient_object_flag = dimensional_shift_priming } destroy_ambient_object = this } }
				create_ambient_object = { type = red_sun_grow_particle_object location = this scale = @shadowgate_remove_shadowrift_scale entity_offset_height = @shadowgate_remove_shadowrift_offset use_3d_location = yes duration = 10 }
			}
			if = { limit = { has_planet_flag = shadowrift_active }
				switch = {
					trigger = has_planet_flag
					shadowgate_a = { event_target:shadowrift_current_origin_a = { save_event_target_as = shadowrift_vd_origin } event_target:shadowrift_current_terminus_a = { save_event_target_as = shadowrift_vd_terminus } }
					shadowgate_b = { event_target:shadowrift_current_origin_b = { save_event_target_as = shadowrift_vd_origin } event_target:shadowrift_current_terminus_b = { save_event_target_as = shadowrift_vd_terminus } }
					shadowgate_c = { event_target:shadowrift_current_origin_c = { save_event_target_as = shadowrift_vd_origin } event_target:shadowrift_current_terminus_c = { save_event_target_as = shadowrift_vd_terminus } }
					shadowgate_d = { event_target:shadowrift_current_origin_d = { save_event_target_as = shadowrift_vd_origin } event_target:shadowrift_current_terminus_d = { save_event_target_as = shadowrift_vd_terminus } }
					shadowgate_e = { event_target:shadowrift_current_origin_e = { save_event_target_as = shadowrift_vd_origin } event_target:shadowrift_current_terminus_e = { save_event_target_as = shadowrift_vd_terminus } }
				}
			}
			set_variable = { which = ShadowgateRPExposed value = 0 }
			set_variable = { which = ShadowgateDevastation value = 0 }
			set_variable = { which = ShadowgateFortifyMitigation value = 0 }
			set_variable = { which = ShadowgatePopDeaths value = 0 }
			set_variable = { which = TerminusFortifications value = TerminusBarrierFortifyCount }
			set_variable = { which = TerminusFortificationsHalved value = TerminusFortifications }
			multiply_variable = { which = TerminusFortificationsHalved value = 0.5 }
			while = { count = ShadowgateRP
				if = { limit = { check_variable = { which = TerminusFortifications value > 0 } planet_devastation < 100 }
					random_list = {
						3 = { change_variable = { which = ShadowgateFortifyMitigation value = 1 } }
						1 = { modifier = { factor = 0 check_variable = { which = ShadowgateFortifyMitigation value < TerminusFortificationsHalved } } add_planet_devastation = 1 change_variable = { which = ShadowgateDevastation value = 1 } }
					}
					subtract_variable = { which = TerminusFortifications value = 1 }
				}
				else_if = { limit = { planet_devastation < 100 }
					random_list = {
						125 = { add_planet_devastation = 1 change_variable = { which = ShadowgateDevastation value = 1 } }
						1 = { modifier = { factor = 0 num_pops = 1 } random_owned_pop = { kill_pop = yes } change_variable = { which = ShadowgatePopDeaths value = 1 } }
					}
				}
				else_if = { limit = { num_pops > 0 }
					random_list = {
						75 = { }
						1 = {
							if = { limit = { num_pops = 1 } owner = { country_event = { id = shadowgate_galactic.236 } } }
							random_owned_pop = { kill_pop = yes }
							change_variable = { which = ShadowgatePopDeaths value = 1 }
						}
					}
				}
			}
			clear_variable = TerminusFortifications
			clear_variable = TerminusFortificationsHalved
			set_variable = { which = ShadowgateRPExposed value = ShadowgateRP }
			subtract_variable = { which = ShadowgateRPExposed value = ShadowgateFortifyMitigation }
			if = { limit = { has_planet_flag = shadowrift_queued }
				switch = {
					trigger = has_planet_flag
					shadowgate_a = { event_target:shadowrift_queued_origin_a = { save_event_target_as = shadowrift_vd_queued_origin } event_target:shadowrift_queued_terminus_a = { save_event_target_as = shadowrift_vd_queued_destination } }
					shadowgate_b = { event_target:shadowrift_queued_origin_b = { save_event_target_as = shadowrift_vd_queued_origin } event_target:shadowrift_queued_terminus_b = { save_event_target_as = shadowrift_vd_queued_destination } }
					shadowgate_c = { event_target:shadowrift_queued_origin_c = { save_event_target_as = shadowrift_vd_queued_origin } event_target:shadowrift_queued_terminus_c = { save_event_target_as = shadowrift_vd_queued_destination } }
					shadowgate_d = { event_target:shadowrift_queued_origin_d = { save_event_target_as = shadowrift_vd_queued_origin } event_target:shadowrift_queued_terminus_d = { save_event_target_as = shadowrift_vd_queued_destination } }
					shadowgate_e = { event_target:shadowrift_queued_origin_e = { save_event_target_as = shadowrift_vd_queued_origin } event_target:shadowrift_queued_terminus_e = { save_event_target_as = shadowrift_vd_queued_destination } }
				}
				remove_planet_flag = shadowrift_queued
				event_target:shadowrift_vd_queued_origin = { remove_star_flag = shadowrift_queued }
				event_target:shadowrift_vd_queued_destination = { remove_star_flag = shadowrift_queued }
				if = { limit = { exists = event_target:shadowgate_vd_owner event_target:shadowgate_vd_owner = { NOR = { is_ai = yes is_same_value = event_target:global_event_country } } }
					if = { limit = { has_planet_flag = shadowgate_ashen_pilgrimage }
						if = { limit = { exists = event_target:shadowgate_ap_queued_summoner }
							event_target:shadowgate_ap_queued_summoner = {
								if = { limit = { has_origin = origin_shadow_remnant }
									add_resource = { energy = @shadowgate_ap_summon_cost_origin_en_p }
								}
								else = { add_resource = { energy = @shadowgate_ap_summon_cost_en_p } }
								clear_global_event_target = shadowgate_ap_queued_summoner
							}
						}
					}
					else = { change_variable = { which = ShadowgateEther value = ShadowgateEtherCostLocked } }
				}
			}
			if = { limit = { planet_devastation < 100 has_planet_flag = shadowrift_active NOT = { solar_system = { shadowgate_antiresonant_void_check = yes } } }
				event_target:shadowgate_vd_owner = {
					create_message = {
						type = MESSAGE_TYPE_SHADOWRIFT_DESTROYED
						localization = MESSAGE_SHADOWRIFT_DESTROYED
						days = 90
						target = event_target:shadowrift_vd_rift_system
						variable = {
							type = name
							localization = ORIGIN
							scope = event_target:shadowrift_vd_origin
						}
						variable = {
							type = name
							localization = DESTINATION
							scope = event_target:shadowrift_vd_terminus
						}
						variable = {
							type = name
							localization = SHADOWGATE
							scope = prev
						}
						variable = {
							type = variable
							varname = ShadowgateRPExposed
							localization = EXPOSURE
							scope = prev
						}
						variable = {
							type = variable
							varname = ShadowgateRP
							localization = POTENCY
							scope = prev
						}
						variable = {
							type = variable
							varname = ShadowgateDevastation
							localization = DEVASTATION
							scope = prev
						}
						variable = {
							type = variable
							varname = ShadowgateFortifyMitigation
							localization = MITIGATIONS
							scope = prev
						}
						variable = {
							type = variable
							varname = TerminusBarrierFortifyCount
							localization = FORTIFICATIONS
							scope = prev
						}
						variable = {
							type = variable
							varname = ShadowgatePopDeaths
							localization = DEATHS
							scope = prev
						}
					}
					if = { limit = { prev = { has_planet_flag = shadowgate_ashen_pilgrimage } } country_event = { id = shadowgate_pilgrimage.1105 days = 1 } }
				}
			}
			else = {
				set_variable = { which = ShadowgateDisabledTime value = ShadowgateRP }
				multiply_variable = { which = ShadowgateDisabledTime value = 0.03 }
				floor_variable = ShadowgateDisabledTime
				shadowgate_catastrophic_destabilization = yes
				if = { limit = { has_planet_flag = shadowrift_active }
					event_target:shadowgate_vd_owner = {
						create_message = {
							type = MESSAGE_TYPE_SHADOWRIFT_DESTROYED_ALT
							localization = MESSAGE_SHADOWRIFT_DESTROYED
							days = 90
							target = event_target:shadowrift_vd_rift_system
							variable = {
								type = name
								localization = ORIGIN
								scope = event_target:shadowrift_vd_origin
							}
							variable = {
								type = name
								localization = DESTINATION
								scope = event_target:shadowrift_vd_terminus
							}
							variable = {
								type = name
								localization = SHADOWGATE
								scope = prev
							}
							variable = {
								type = variable
								varname = ShadowgateRPExposed
								localization = EXPOSURE
								scope = prev
							}
							variable = {
								type = variable
								varname = ShadowgateRP
								localization = POTENCY
								scope = prev
							}
							variable = {
								type = variable
								varname = ShadowgateDevastation
								localization = DEVASTATION
								scope = prev
							}
							variable = {
								type = variable
								varname = ShadowgateFortifyMitigation
								localization = MITIGATIONS
								scope = prev
							}
							variable = {
								type = variable
								varname = TerminusBarrierFortifyCount
								localization = FORTIFICATIONS
								scope = prev
							}
							variable = {
								type = variable
								varname = ShadowgatePopDeaths
								localization = DEATHS
								scope = prev
							}
						}
						if = { limit = { prev = { has_planet_flag = shadowgate_ashen_pilgrimage } } country_event = { id = shadowgate_pilgrimage.1106 days = 1 } }
					}
				}
				create_message = {
					type = MESSAGE_TYPE_SHADOWGATE_DISABLED
					localization = MESSAGE_SHADOWGATE_DISABLED
					days = 60
					target = this
				}
			}
			if = { limit = { solar_system = { shadowgate_antiresonant_void_check = yes } }
				create_message = {
					type = MESSAGE_TYPE_SHADOWGATE_ANTIRESONANCE
					localization = MESSAGE_SHADOWGATE_ANTIRESONANCE_NORIFT
					days = 45
					target = this
				}
			}
			else_if = { limit = { has_planet_flag = shadowrift_active event_target:shadowrift_vd_rift_system = { shadowgate_antiresonant_void_check = yes } }
				create_message = {
					type = MESSAGE_TYPE_SHADOWGATE_ANTIRESONANCE
					localization = MESSAGE_SHADOWGATE_ANTIRESONANCE
					days = 45
					target = event_target:shadowrift_vd_rift_system
					variable = {
						type = name
						localization = SYSTEM
						scope = event_target:shadowrift_vd_rift_system
					}
				}
			}
			clear_variable = ShadowgateRPExposed
			clear_variable = ShadowgateDevastation
			clear_variable = ShadowgateFortifyMitigation
			clear_variable = ShadowgatePopDeaths
			if = { limit = { has_planet_flag = shadowrift_active }
				if = { limit = { NOR = { has_modifier = pm_shadowgate_stabilized_rift shadowgate_is_disabled = yes } }
					switch = {
						trigger = has_planet_flag
						shadowgate_a = { activate_shadowgate_cooldown = { SHADOWGATE = a STABLE = UNSTABLE } }
						shadowgate_b = { activate_shadowgate_cooldown = { SHADOWGATE = b STABLE = UNSTABLE } }
						shadowgate_c = { activate_shadowgate_cooldown = { SHADOWGATE = c STABLE = UNSTABLE } }
						shadowgate_d = { activate_shadowgate_cooldown = { SHADOWGATE = d STABLE = UNSTABLE } }
						shadowgate_e = { activate_shadowgate_cooldown = { SHADOWGATE = e STABLE = UNSTABLE } }
					}
				}
				switch = {
					trigger = has_planet_flag
					shadowgate_a = { remove_active_shadowrift = { SHADOWGATE = a } }
					shadowgate_b = { remove_active_shadowrift = { SHADOWGATE = b } }
					shadowgate_c = { remove_active_shadowrift = { SHADOWGATE = c } }
					shadowgate_d = { remove_active_shadowrift = { SHADOWGATE = d } }
					shadowgate_e = { remove_active_shadowrift = { SHADOWGATE = e } }
				}
			}
		}
	}
}

country_event = {
	id = shadowgate_galactic.231
	hide_window = yes
	is_triggered_only = yes

	trigger = { fromfrom = { has_fleet_flag = shadowrift solar_system = { NOT = { has_star_flag = has_shadowrift_vc } } } }

	immediate = {
		fromfrom = {
			solar_system = {
				save_event_target_as = shadowrift_vd_rift_system
				switch = {
					trigger = has_star_flag
					has_shadowrift_a = { event_target:shadowgate_planet_a = { planet_event = { id = shadowgate_galactic.230 } } }
					has_shadowrift_b = { event_target:shadowgate_planet_b = { planet_event = { id = shadowgate_galactic.230 } } }
					has_shadowrift_c = { event_target:shadowgate_planet_c = { planet_event = { id = shadowgate_galactic.230 } } }
					has_shadowrift_d = { event_target:shadowgate_planet_d = { planet_event = { id = shadowgate_galactic.230 } } }
					has_shadowrift_e = { event_target:shadowgate_planet_e = { planet_event = { id = shadowgate_galactic.230 } } }
				}
			}
		}
	}
}

# Vestigial rift is destroyed.
country_event = {
	id = shadowgate_galactic.232
	hide_window = yes
	is_triggered_only = yes

	trigger = { fromfrom = { has_fleet_flag = shadowrift solar_system = { has_star_flag = has_shadowrift_vc } } }

	immediate = {
		fromfrom = {
			solar_system = {
				every_country = { limit = { intel_level = { system = prev level > low } OR = { has_technology = tech_labyrinthine_cartography any_owned_planet = { has_planet_flag = shadowgate_vc_effect is_colonized_shadowgate = yes } } }
					create_message = {
						type = MESSAGE_TYPE_SHADOWRIFT_DESTROYED
						localization = MESSAGE_SHADOWRIFT_VC_DESTROYED
						days = 90
						target = prev
						variable = {
							type = name
							localization = SYSTEM
							scope = prev
						}	
					}
				}
				random_system_planet = { limit = { has_planet_flag = shadowgate_shadow_remnant }
					create_ambient_object = {
						type = "umbral_remnant"
						location = this
						use_3d_location = yes
						scale = @shadowgate_umbral_remnant_system_scale
						entity_offset_height = @shadowgate_umbral_remnant_system_offset
					}
				}
				last_created_ambient_object = { set_ambient_object_flag = shadowgate_shadow_remnant }
				remove_system_shadowrift = yes
				random_country = { limit = { check_variable = { which = ShadowgateVCCountry value = prev } }
					every_country = { limit = { is_hostile = prev } prev = { set_faction_hostility = { target = prev set_hostile = no set_neutral = yes set_friendly = no } } }
				}
			}
		}
		event_target:global_event_country = { subtract_variable = { which = ShadowgateSTBonus value = 1 } }
	}
}

# Vestigial rifts passively grow in power.
event = {
	id = shadowgate_galactic.233
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_system = { limit = { has_star_flag = has_shadowrift_vc }
			every_fleet_in_system = { limit = { has_fleet_flag = shadowrift_vc }
				change_variable = { which = ShadowriftVCPower value = 1 }
				remove_modifier = shadowrift_vc_boost
				add_modifier = { modifier = shadowrift_vc_boost days = -1 multiplier = ShadowriftVCPower }
				if = { limit = { OR = { NOT = { exists = owner } NOT = { is_in_combat = yes } } }
					random_country = { limit = { check_variable = { which = ShadowgateVCCountry value = prevprev } }
						prev = { set_owner = prev }
						if = { limit = { NOT = { any_owned_fleet = { is_in_combat = yes } } }
							every_country = { limit = { is_hostile = prev } prev = { set_faction_hostility = { target = prev set_hostile = no set_neutral = yes set_friendly = no } } }
						}
					}
				}
			}
		}
	}
}

# The ruinous potency and ether for each shadowgate are adjusted every year through this event.
event = {
	id = shadowgate_galactic.235
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { exists = event_target:shadowgate_planet_a } update_shadowgate_yearly_change = { SHADOWGATE = a } }
		if = { limit = { exists = event_target:shadowgate_planet_b } update_shadowgate_yearly_change = { SHADOWGATE = b } }
		if = { limit = { exists = event_target:shadowgate_planet_c } update_shadowgate_yearly_change = { SHADOWGATE = c } }
		if = { limit = { exists = event_target:shadowgate_planet_d } update_shadowgate_yearly_change = { SHADOWGATE = d } }
		if = { limit = { exists = event_target:shadowgate_planet_e } update_shadowgate_yearly_change = { SHADOWGATE = e } }
	}
}

# A shadowgate is wiped clean of pops.
country_event = {
	id = shadowgate_galactic.236
	title = shadowgate.vd.colony.destroyed.title
	desc = shadowgate.vd.colony.destroyed.desc
	picture = GFX_evt_shadowgate
	location = from.prev
	show_sound = event_wind_ruins
	is_triggered_only = yes

	option = {
		name = UNFORTUNATE
	}
}

# A shadowgate recovers, and the administrative authority speaks with the owner/new owner.
planet_event = {
	id = shadowgate_galactic.240
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { NOR = { if = { limit = { exists = owner } planet_devastation > 25 } solar_system = { shadowgate_antiresonant_void_check = yes } } }
			remove_modifier = pm_shadowgate_disabled
			remove_planet_flag = shadowgate_in_limbo
			solar_system = { every_system_ambient_object = { limit = { has_ambient_object_flag = shadowgate_vd } destroy_ambient_object = this } }
			create_message = {
				type = MESSAGE_TYPE_SHADOWGATE_RECOVERED
				localization = MESSAGE_SHADOWGATE_RECOVERED
				days = 30
				target = this
				variable = {
					type = name
					localization = SHADOWGATE
					scope = this
				}
			}
			if = { limit = { exists = owner }
				if = { limit = { NOR = { has_planet_flag = shadowgate_transferred_disabled owner = { has_country_flag = shadowgate_seen_disabled } } } planet_event = { id = shadowgate_galactic.241 days = 1 } }
				else = { remove_planet_flag = shadowgate_transferred_disabled owner = { set_country_flag = shadowgate_transferred }
					switch = {
						trigger = has_planet_flag
						shadowgate_a = { planet_event = { id = shadowgate_a.3 days = 1 } }
						shadowgate_b = { planet_event = { id = shadowgate_b.3 days = 1 } }
						shadowgate_c = { planet_event = { id = shadowgate_c.3 days = 1 } }
						shadowgate_d = { planet_event = { id = shadowgate_d.3 days = 1 } }
						shadowgate_e = { planet_event = { id = shadowgate_e.3 days = 1 } }
					}
				}
			}
		}
		else = { if = { limit = { NOT = { has_planet_flag = shadowgate_in_limbo } } set_planet_flag = shadowgate_in_limbo add_modifier = { modifier = pm_shadowgate_disabled days = -1 } } planet_event = { id = shadowgate_galactic.240 days = 180 } }
	}
}

# The administrative authority explains catastrophic destabilizations to the owner after recovering from one.
planet_event = {
	id = shadowgate_galactic.241
	title = shadowgate.main.title
	desc = {
		trigger = { owner = { NOT = { has_country_flag = shadowgate_seen_disabled } } }
		text = shadowgate.recovered.desc
	}
	desc = {
		trigger = { owner = { has_country_flag = shadowgate_seen_disabled } }
		text = shadowgate.recovered.final.desc
	}
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes

	trigger = { NOT = { owner = { has_country_flag = shadowgate_tutorial_bypass } } }

	option = {
		name = shadowgate.recovered.answer
		trigger = { NOT = { owner = { has_country_flag = shadowgate_seen_disabled } } }
		hidden_effect = { owner = { set_country_flag = shadowgate_seen_disabled } planet_event = { id = shadowgate_galactic.241 } }
	}

	option = {
		name = shadowgate.recovered.final.answer
		trigger = { owner = { has_country_flag = shadowgate_seen_disabled } }
		hidden_effect = { owner = { set_country_flag = shadowgate_seen_disabled } }
	}
}

# A fleet traverses a shadowrift bypass, executing various effects.
fleet_event = {
	id = shadowgate_galactic.245
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { has_fleet_flag = shadowgate_ftl_event } }

	immediate = {
		set_timed_fleet_flag = { flag = shadowgate_ftl_event days = 1 }
		if = { limit = { from = { has_star_flag = has_shadowrift } }
			from = { save_event_target_as = shadowrift_jump_system }
		}
		else = { fromfrom = { save_event_target_as = shadowrift_jump_system } }
		event_target:shadowrift_jump_system = {
			switch = {
				trigger = has_star_flag
				has_shadowrift_a = { event_target:shadowgate_planet_a = { save_event_target_as = shadowgate_bypass_planet } }
				has_shadowrift_b = { event_target:shadowgate_planet_b = { save_event_target_as = shadowgate_bypass_planet } }
				has_shadowrift_c = { event_target:shadowgate_planet_c = { save_event_target_as = shadowgate_bypass_planet } }
				has_shadowrift_d = { event_target:shadowgate_planet_d = { save_event_target_as = shadowgate_bypass_planet } }
				has_shadowrift_e = { event_target:shadowgate_planet_e = { save_event_target_as = shadowgate_bypass_planet } }
			}
		}
		if = { limit = { exists = event_target:shadowgate_bypass_planet }
			while = { count = 5 remove_modifier = shadowrift_sublight_boost remove_modifier = shadowrift_ftl_boost }
			if = { limit = { event_target:shadowgate_bypass_planet = { num_districts = { type = district_spectral_projection_array value = 1 } } }
				add_modifier = { modifier = shadowrift_sublight_boost days = 30 }
			}
			else_if = { limit = { event_target:shadowgate_bypass_planet = { num_districts = { type = district_spectral_projection_array value = 2 } } }
				while = { count = 2 add_modifier = { modifier = shadowrift_sublight_boost days = 60 } }
			}
			else_if = { limit = { event_target:shadowgate_bypass_planet = { num_districts = { type = district_spectral_projection_array value = 3 } } }
				while = { count = 3 add_modifier = { modifier = shadowrift_sublight_boost days = 90 } }
			}
			if = { limit = { event_target:shadowgate_bypass_planet = { num_districts = { type = district_harmonic_subspace_resonator value = 1 } } }
				add_modifier = { modifier = shadowrift_ftl_boost days = 30 }
			}
			else_if = { limit = { event_target:shadowgate_bypass_planet = { num_districts = { type = district_harmonic_subspace_resonator value = 2 } } }
				while = { count = 2 add_modifier = { modifier = shadowrift_ftl_boost days = 60 } }
			}
			else_if = { limit = { event_target:shadowgate_bypass_planet = { num_districts = { type = district_harmonic_subspace_resonator value = 3 } } }
				while = { count = 3 add_modifier = { modifier = shadowrift_ftl_boost days = 90 } }
			}
			from = {
				every_fleet_in_system = { limit = { exists = owner owner = { is_ai = yes } any_owned_ship = { is_ship_class = shipclass_military } }
					fleet_event = { id = shadowgate_galactic.120 }
				}
			}
			fromfrom = {
				every_fleet_in_system = { limit = { exists = owner owner = { is_ai = yes } any_owned_ship = { is_ship_class = shipclass_military } }
					fleet_event = { id = shadowgate_galactic.120 }
				}
			}
		}
		if = { limit = { owner = { has_country_flag = shadowgate_st_active } }
			set_variable = { which = ShadowgateSTBonus value = event_target:global_event_country }
			remove_modifier = shadowgate_st_bonus
			add_modifier = { modifier = shadowgate_st_bonus days = 120 multiplier = ShadowgateSTBonus }
			clear_variable = ShadowgateSTBonus
		}
		if = { limit = { has_global_flag = shadowgate_swarm_notified NOT = { has_global_flag = prethoryn_invasion_defeated } exists = owner owner = { NOT = { is_country_type = swarm } } }
			from = {
				every_system_ambient_object = { limit = { has_ambient_object_flag = shadowrift_prethoryn } destroy_ambient_object = this }
				random_system_planet = { limit = { OR = { has_planet_flag = has_shadowrift has_planet_flag = shadowgate_shadow_remnant } }
					create_ambient_object = { type = shadowrift_prethoryn_disabler location = this scale = @shadowgate_prethoryn_effect_scale entity_offset_height = @shadowgate_prethoryn_effect_offset use_3d_location = yes duration = 180 }
					last_created_ambient_object = { set_ambient_object_flag = shadowrift_prethoryn }
				}
			}
			fromfrom = { if = { limit = { NOT = { any_fleet_in_system = { has_fleet_flag = shadowrift_prethoryn_disabler } } } every_system_ambient_object = { limit = { has_ambient_object_flag = shadowrift_prethoryn } destroy_ambient_object = this } } }
			set_timed_fleet_flag = { flag = shadowrift_prethoryn_disabler days = 180 }
			set_formation_scale = 0.1
			remove_modifier = shadowrift_prethoryn_disabler
			add_modifier = { modifier = shadowrift_prethoryn_disabler days = 180 }
			fleet_event = { id = shadowgate_galactic.711 days = 180 }
		}
	}
}

# Removes a shadow mooring rift if a system loses its owner.
country_event = {
	id = shadowgate_galactic.250
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { NOT = { exists = space_owner } has_star_flag = has_shadow_mooring_rift } }

	immediate = { from = { remove_system_shadowrift = yes } }
}

# Above, but when a starbase transfers between owners.
ship_event = {
	id = shadowgate_galactic.251
	hide_window = yes
	is_triggered_only = yes

	trigger = { exists = solar_system solar_system = { has_star_flag = has_shadow_mooring_rift } }

	immediate = { solar_system = { remove_system_shadowrift = yes } }
}

# Spawns a shadow mooring rift when a country gains a system with an active anchor.
country_event = {
	id = shadowgate_galactic.255
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { has_star_flag = active_shadow_anchor NOR = { has_any_shadowrift = yes shadowgate_antiresonant_void_check = yes } } any_owned_planet = { is_colonized_shadowgate = yes has_planet_flag = shadowgate_sm_effect } }

	immediate = {
		from = { save_event_target_as = shadow_mooring_candidate }
		country_event = { id = shadowgate_galactic.260 days = 1 }
	}
}

country_event = {
	id = shadowgate_galactic.260
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { NOT = { has_global_flag = shadowgate_opening } }
			every_owned_planet = { limit = { is_colonized_shadowgate = yes has_planet_flag = shadowrift_active has_planet_flag = shadowgate_sm_effect }
				if = { limit = { shadowgate_is_currently_mooring = yes owner = { NOT = { has_country_flag = shadow_mooring_on_demand } } }
					save_event_target_as = shadowgate_planet
					set_timed_global_flag = { flag = shadowgate_opening days = 1 }
					owner = { set_timed_country_flag = { flag = shadow_mooring_on_demand days = 1 } }
					planet_event = { id = shadowgate_galactic.261 }
				}
			}
		}
		else = { country_event = { id = shadowgate_galactic.260 days = 1 } }
	}
}

planet_event = {
	id = shadowgate_galactic.261
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		switch = {
			trigger = has_planet_flag
			shadowgate_a = { event_target:shadow_mooring_candidate = { spawn_shadow_mooring_rift_with_cost = { SHADOWGATE = a } } }
			shadowgate_b = { event_target:shadow_mooring_candidate = { spawn_shadow_mooring_rift_with_cost = { SHADOWGATE = b } } }
			shadowgate_c = { event_target:shadow_mooring_candidate = { spawn_shadow_mooring_rift_with_cost = { SHADOWGATE = c } } }
			shadowgate_d = { event_target:shadow_mooring_candidate = { spawn_shadow_mooring_rift_with_cost = { SHADOWGATE = d } } }
			shadowgate_e = { event_target:shadow_mooring_candidate = { spawn_shadow_mooring_rift_with_cost = { SHADOWGATE = e } } }
		}
	}
}

# Clicking on a shadowrift terminus opens its shadowgate interface (if an interface isn't already open).
country_event = {
	id = shadowgate_galactic.265
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { is_country_type = shadowrift } is_ai = no NOR = { has_global_flag = shadowgate_opening has_country_flag = shadowgate_accessed has_country_flag = shadowgate_d_compass_open } }

	immediate = {
		from = {
			switch = {
				trigger = has_country_flag
				shadowrift_vc = {
					random_owned_fleet = {
						switch = {
							trigger = has_fleet_flag
							default = { }
							shadowrift_a = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = a } }
							shadowrift_b = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = b } }
							shadowrift_c = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = c } }
							shadowrift_d = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = d } }
							shadowrift_e = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = e } }
						}
					}
				}
				shadowrift_a = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = a } }
				shadowrift_b = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = b } }
				shadowrift_c = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = c } }
				shadowrift_d = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = d } }
				shadowrift_e = { open_shadowgate_interface_from_diplomacy = { SHADOWGATE = e } }
			}
		}
	}
}

# Upon reaching 100% devastation through orbital bombardment, shadowgates undergo a violent destabilization.
planet_event = {
	id = shadowgate_galactic.270
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_planet_flag = shadowgate_planet planet_devastation = 100 NOT = { shadowgate_is_disabled = yes } }

	immediate = {
		solar_system = { save_event_target_as = shadowrift_vd_rift_system }
		planet_event = { id = shadowgate_galactic.230 }
	}
}

# Send a ruinous potency level warning to a shadowgate's owner when orbital bombardment is in progress.
planet_event = {
	id = shadowgate_galactic.271
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { has_planet_flag = shadowgate_rp_bombardment_alert } is_colonized_shadowgate = yes has_planet_flag = shadowgate_rp_notifications }

	immediate = { set_timed_planet_flag = { flag = shadowgate_rp_bombardment_alert days = 180 } remove_planet_flag = shadowgate_rp_notified send_shadowgate_ruinous_potency_message = yes }
}

# Construction ships are marked when entering a shadowgate or remnant system, eventually clearing their orders if they begin constructing a megastructure.
ship_event = {
	id = shadowgate_galactic.275
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_ship_class = shipclass_constructor from = { OR = { has_star_flag = shadowgate_solar_system has_star_flag = shadowgate_shadow_remnant } } }

	immediate = { ship_event = { id = shadowgate_galactic.276 days = 180 } }
}

ship_event = {
	id = shadowgate_galactic.276
	hide_window = yes
	is_triggered_only = yes

	trigger = { exists = solar_system solar_system = { OR = { has_star_flag = shadowgate_solar_system has_star_flag = shadowgate_shadow_remnant } } }

	immediate = {
		if = { limit = { is_constructing = megastructure NOT = { shadowgate_megastructure_build_inclusion = yes } } fleet = { clear_orders = yes } }
		ship_event = { id = shadowgate_galactic.276 days = 180 }
	}
}

ship_event = {
	id = shadowgate_galactic.277
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_ship_class = shipclass_constructor from = { solar_system = { OR = { has_star_flag = shadowgate_solar_system has_star_flag = shadowgate_shadow_remnant } } } }

	immediate = { ship_event = { id = shadowgate_galactic.276 days = 180 } }
}

# Shadow anchors deactivate when ownerless or if an owner doesn't know how to maintain them. They also pack up if an anchor's assigned planet happens to disappear.
country_event = {
	id = shadowgate_galactic.280
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { has_star_flag = shadow_anchor OR = { NOT = { exists = space_owner } AND = { exists = space_owner space_owner = { NOR = { has_country_flag = has_shadow_anchors any_country = { has_communications = prev has_country_flag = has_shadow_anchors } } } } NOT = { any_system_planet = { has_planet_flag = has_shadow_anchor } } } } }

	immediate = {
		from = {
			if = { limit = { NOT = { any_system_planet = { has_planet_flag = has_shadow_anchor } } }
				if = { limit = { exists = space_owner space_owner = { any_owned_planet = { is_colonized_shadowgate = yes } } }
					space_owner = {
						random_owned_planet = { limit = { is_colonized_shadowgate = yes }
							change_variable = { which = ShadowgateBerthedAnchors value = 1 }
						}
					}
				}
				random_system_megastructure = { limit = { OR = { is_megastructure_type = shadow_anchor is_megastructure_type = shadow_anchor_toggle } } remove_megastructure = this }
				remove_star_flag = shadow_anchor
				remove_star_flag = active_shadow_anchor
				remove_star_flag = inactive_shadow_anchor
			}
			else_if = { limit = { has_star_flag = active_shadow_anchor OR = { NOT = { exists = space_owner } AND = { exists = space_owner space_owner = { NOT = { has_country_flag = has_shadow_anchors } } } } }
				random_system_megastructure = { limit = { is_megastructure_type = shadow_anchor } upgrade_megastructure_to = shadow_anchor_toggle }
			}
		}
	}
}

# Reclaims a shadow anchor and removes any shadowrifts if a ringworld is built, since the planet the anchor is orbiting is removed.
country_event = {
	id = shadowgate_galactic.285
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { is_megastructure_type = ring_world_2_intermediate } fromfrom = { OR = { has_star_flag = shadow_anchor has_star_flag = has_shadowrift } } }

	immediate = {
		fromfrom = {
			if = { limit = { has_star_flag = has_shadowrift NOT = { has_star_flag = has_shadow_mooring_rift } }
				switch = {
					trigger = has_star_flag
					has_shadowrift_a = { remove_active_shadowrift = { SHADOWGATE = a } }
					has_shadowrift_b = { remove_active_shadowrift = { SHADOWGATE = b } }
					has_shadowrift_c = { remove_active_shadowrift = { SHADOWGATE = c } }
					has_shadowrift_d = { remove_active_shadowrift = { SHADOWGATE = d } }
					has_shadowrift_e = { remove_active_shadowrift = { SHADOWGATE = e } }
				}
			}
			else_if = { limit = { has_star_flag = has_shadow_mooring_rift } remove_system_shadowrift = yes }
			random_system_megastructure = { limit = { OR = { is_megastructure_type = shadow_anchor is_megastructure_type = shadow_anchor_toggle } }
				remove_megastructure = this
				if = { limit = { exists = prev.space_owner prev.space_owner = { any_owned_planet = { is_colonized_shadowgate = yes } } }
					prev.space_owner = {
						random_owned_planet = { limit = { is_colonized_shadowgate = yes }
							change_variable = { which = ShadowgateBerthedAnchors value = 1 }
						}
					}
				}
			}
			remove_star_flag = shadow_anchor
			remove_star_flag = active_shadow_anchor
			remove_star_flag = inactive_shadow_anchor
		}
	}
}

# Cargo drone reclaims or drops off a shadow anchor.
country_event = {
	id = shadowgate_galactic.290
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_country_type = shadowgate }

	immediate = {
		from = {
			switch = {
				trigger = has_fleet_flag
				shadowgate_a = { fleet_event = { id = shadowgate_a.124 } }
				shadowgate_b = { fleet_event = { id = shadowgate_b.124 } }
				shadowgate_c = { fleet_event = { id = shadowgate_c.124 } }
				shadowgate_d = { fleet_event = { id = shadowgate_d.124 } }
				shadowgate_e = { fleet_event = { id = shadowgate_e.124 } }
			}
		}
	}
}

# Cargo drone picks up a shadow anchor once the deactivation sequence finishes.
country_event = {
	id = shadowgate_galactic.291
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { is_megastructure_type = shadow_anchor_toggle } fromfrom = { any_ship_in_system = { fleet = { has_fleet_flag = shadowgate_reclaiming_anchor_delayed } } } }

	immediate = {
		fromfrom = {
			random_fleet_in_system = { limit = { has_fleet_flag = shadowgate_reclaiming_anchor_delayed }
				remove_fleet_flag = shadowgate_reclaiming_anchor_delayed
				switch = {
					trigger = has_fleet_flag
					shadowgate_a = { fleet_event = { id = shadowgate_a.124 } }
					shadowgate_b = { fleet_event = { id = shadowgate_b.124 } }
					shadowgate_c = { fleet_event = { id = shadowgate_c.124 } }
					shadowgate_d = { fleet_event = { id = shadowgate_d.124 } }
					shadowgate_e = { fleet_event = { id = shadowgate_e.124 } }
				}
			}
		}
	}
}

# A shadow anchor finishes toggling between active/inactive.
country_event = {
	id = shadowgate_galactic.295
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { is_megastructure_type = shadow_anchor_toggle } }

	immediate = {
		event_target:global_event_country = { country_event = { id = shadowgate_galactic.215 } }
		fromfrom = {
			remove_star_flag = shadowrift_queued
			if = { limit = { has_star_flag = active_shadow_anchor }
				event_target:global_event_country = {
					change_variable = { which = ShadowgateActiveShadowAnchors value = 1 }
					set_variable = { which = ShadowgateSMAnchorReduction value = @shadowgate_sm_rift_reduction }
					multiply_variable = { which = ShadowgateSMAnchorReduction value = ShadowgateActiveShadowAnchors }
					change_variable = { which = ShadowgateSMAnchorReduction value = 1 }
				}
				if = { limit = { exists = space_owner }
					space_owner = {
						create_message = {
							type = MESSAGE_TYPE_SHADOWANCHOR_ACTIVATED
							localization = MESSAGE_SHADOWANCHOR_ACTIVATED
							days = 30
							target = prev
							variable = {
								type = name
								localization = SYSTEM
								scope = prev
							}
						}
						if = { limit = { any_owned_planet = { is_colonized_shadowgate = yes has_planet_flag = shadowgate_sm_effect } prev = { NOR = { has_any_shadowrift = yes shadowgate_antiresonant_void_check = yes } } }
							prev = { save_event_target_as = shadow_mooring_candidate }
							country_event = { id = shadowgate_galactic.260 days = 1 }
						}
					}
				}
				if = { limit = { has_star_flag = has_shadowrift }
					if = { limit = { any_system_planet = { has_planet_flag = has_shadowrift NOT = { has_planet_flag = has_shadow_anchor } } }
						random_system_planet = { limit = { has_planet_flag = has_shadowrift } create_ambient_object = { type = red_sun_grow_particle_object location = this scale = @shadowgate_remove_shadowrift_scale entity_offset_height = @shadowgate_remove_shadowrift_offset use_3d_location = yes duration = 10 } remove_planet_flag = has_shadowrift }
						every_system_ambient_object = { limit = { has_ambient_object_flag = shadowrift_priming } destroy_ambient_object = this }
						random_system_planet = { limit = { has_planet_flag = has_shadow_anchor } set_planet_flag = has_shadowrift save_event_target_as = shadowrift_terminus_planet }
						every_system_megastructure = { limit = { has_megastructure_flag = shadowrift } create_ambient_object = { type = red_sun_grow_particle_object scale = @shadowgate_remove_shadowrift_scale location = this use_3d_location = yes duration = 10 } remove_megastructure = this }
						random_fleet_in_system = { limit = { has_fleet_flag = shadowrift } set_location = { target = event_target:shadowrift_terminus_planet distance = 0 angle = random } }
						switch = {
							trigger = has_star_flag
							has_shadowrift_a = { event_target:shadowgate_planet_a = { save_event_target_as = shadowgate_planet } }
							has_shadowrift_b = { event_target:shadowgate_planet_b = { save_event_target_as = shadowgate_planet } }
							has_shadowrift_c = { event_target:shadowgate_planet_c = { save_event_target_as = shadowgate_planet } }
							has_shadowrift_d = { event_target:shadowgate_planet_d = { save_event_target_as = shadowgate_planet } }
							has_shadowrift_e = { event_target:shadowgate_planet_e = { save_event_target_as = shadowgate_planet } }
						}
						save_event_target_as = activated_shadow_anchor_system
						event_target:shadowgate_planet = { planet_event = { id = shadowgate_galactic.296 } }
					}
					if = { limit = { NOT = { has_star_flag = has_shadow_mooring_rift } }
						switch = {
							trigger = has_star_flag
							has_shadowrift_a = { event_target:shadowgate_planet_a = { remove_planet_flag = shadowgate_dup_on } }
							has_shadowrift_b = { event_target:shadowgate_planet_b = { remove_planet_flag = shadowgate_dup_on } }
							has_shadowrift_c = { event_target:shadowgate_planet_c = { remove_planet_flag = shadowgate_dup_on } }
							has_shadowrift_d = { event_target:shadowgate_planet_d = { remove_planet_flag = shadowgate_dup_on } }
							has_shadowrift_e = { event_target:shadowgate_planet_e = { remove_planet_flag = shadowgate_dup_on } }
						}
					}
				}
			}
			else_if = { limit = { OR = { NOT = { has_star_flag = shadow_anchor } has_star_flag = inactive_shadow_anchor } }
				event_target:global_event_country = {
					subtract_variable = { which = ShadowgateActiveShadowAnchors value = 1 }
					set_variable = { which = ShadowgateSMAnchorReduction value = @shadowgate_sm_rift_reduction }
					multiply_variable = { which = ShadowgateSMAnchorReduction value = ShadowgateActiveShadowAnchors }
					change_variable = { which = ShadowgateSMAnchorReduction value = 1 }
				}
				if = { limit = { exists = space_owner }
					space_owner = {
						create_message = {
							type = MESSAGE_TYPE_SHADOWANCHOR_DEACTIVATED
							localization = MESSAGE_SHADOWANCHOR_DEACTIVATED
							days = 30
							target = prev
							variable = {
								type = name
								localization = SYSTEM
								scope = prev
							}
						}
					}
				}
				if = { limit = { has_star_flag = has_shadow_mooring_rift } remove_system_shadowrift = yes }
			}
		}
	}
}

planet_event = {
	id = shadowgate_galactic.296
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		switch = {
			trigger = has_planet_flag
			shadowgate_a = { event_target:activated_shadow_anchor_system = { spawn_shadowrift = { SHADOWGATE = a } } }
			shadowgate_b = { event_target:activated_shadow_anchor_system = { spawn_shadowrift = { SHADOWGATE = b } } }
			shadowgate_c = { event_target:activated_shadow_anchor_system = { spawn_shadowrift = { SHADOWGATE = c } } }
			shadowgate_d = { event_target:activated_shadow_anchor_system = { spawn_shadowrift = { SHADOWGATE = d } } }
			shadowgate_e = { event_target:activated_shadow_anchor_system = { spawn_shadowrift = { SHADOWGATE = e } } }
		}
	}
}

# Technology is researched and eligibility for the dimensional shifting shadowgate function is checked.
country_event = {
	id = shadowgate_galactic.300
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOR = { is_country_type = shadowgate_ap has_country_flag = shadowgate_ita_unlocked has_country_flag = has_dimensional_shift } }

	immediate = {
		change_variable = { which = shadowgate_ita_num value = 1 }
		if = { limit = { any_owned_planet = { is_colonized_shadowgate = yes } check_variable = { which = shadowgate_ita_num value >= 150 } }
			if = { limit = { NOR = { is_ai = yes has_country_flag = shadowgate_tutorial_bypass } }
				set_country_flag = shadowgate_ita_unlocked
				set_country_flag = shadowgate_dimensional_shift_unlocked
			}
			random_owned_planet = { limit = { is_colonized_shadowgate = yes NOT = { shadowgate_is_disabled = yes } }
				planet_event = { id = shadowgate_galactic.301 days = 5 }
			}
		}
	}
}

# Dimensional shifting is awarded.
planet_event = {
	id = shadowgate_galactic.301
	title = shadowgate.main.title
	desc = {
		text = shadowgate.ita.notification
		trigger = { owner = { NOT = { has_country_flag = shadowgate_tutorial_bypass } } }
	}
	desc = {
		text = shadowgate.ita.notification.bypass
		trigger = { owner = { has_country_flag = shadowgate_tutorial_bypass } }
	}
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes

	trigger = { NOT = { shadowgate_is_disabled = yes } }

	immediate = {
		owner = {
			if = { limit = { OR = { is_ai = yes has_country_flag = shadowgate_tutorial_bypass } }
				set_country_flag = has_dimensional_shift 
			}
		}
	}

	option = {
		name = shadowgate.ita.answer
		trigger = { owner = { OR = { is_ai = yes NOT = { has_country_flag = shadowgate_tutorial_bypass } } } }
		custom_tooltip = shadowgate.ita.answer.tooltip
		ai_chance = {
			factor = 100
		}
	}

	option = {
		name = shadowgate.ita.answer2
		custom_tooltip = shadowgate.ita.answer2.tooltip
		trigger = { owner = { NOR = { is_ai = yes has_country_flag = shadowgate_tutorial_bypass has_country_flag = shadowgate_accessed } } }
		allow = {
			custom_tooltip = { fail_text = shadowgate.error.all NOT = { shadowgate_is_disabled = yes } }
		}
		hidden_effect = {
			set_shadowgate_accessed = yes
			switch = {
				trigger = has_planet_flag
				shadowgate_a = { update_shadowgate_origin_system = { SHADOWGATE = a } planet_event = { id = shadowgate_a.400 } }
				shadowgate_b = { update_shadowgate_origin_system = { SHADOWGATE = b } planet_event = { id = shadowgate_b.400 } }
				shadowgate_c = { update_shadowgate_origin_system = { SHADOWGATE = c } planet_event = { id = shadowgate_c.400 } }
				shadowgate_d = { update_shadowgate_origin_system = { SHADOWGATE = d } planet_event = { id = shadowgate_d.400 } }
				shadowgate_e = { update_shadowgate_origin_system = { SHADOWGATE = e } planet_event = { id = shadowgate_e.400 } }
			}
		}
		ai_chance = {
			factor = 0
		}
	}

	option = {
		name = shadowgate.ita.answer3
		custom_tooltip = shadowgate.ita.answer3.tooltip
		trigger = { owner = { OR = { is_ai = yes has_country_flag = shadowgate_tutorial_bypass } } }
		ai_chance = {
			factor = 100
		}
	}
}

# Checks to see if a shadowgate has been fully restored when colonized or after completing a district.
planet_event = {
	id = shadowgate_galactic.305
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_colonized_shadowgate = yes OR = { has_planet_flag = shadowgate_dl_unlocked_pending last_district_changed = district_harmonic_subspace_resonator last_district_changed = district_shadow_pulse_condenser last_district_changed = district_spectral_projection_array } }

	immediate = {
		if = { limit = { NOT = { shadowgate_is_disabled = yes } }
			remove_planet_flag = shadowgate_dl_unlocked_pending
			if = { limit = { num_districts = { type = district_harmonic_subspace_resonator value = 3 } num_districts = { type = district_shadow_pulse_condenser value = 3 } num_districts = { type = district_spectral_projection_array value = 3 } }
				planet_event = { id = shadowgate_galactic.306 days = 3 }
			}
		}
		else = { set_planet_flag = shadowgate_dl_unlocked_pending planet_event = { id = shadowgate_galactic.305 days = 90 } }
	}
}

# Shadowgate is fully restored.
planet_event = {
	id = shadowgate_galactic.306
	title = shadowgate.main.title
	desc = shadowgate.fully.restored.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes

	trigger = { NOR = { owner = { has_country_flag = shadowgate_fully_restored } has_planet_flag = shadowgate_fully_restored } }

	immediate = { set_planet_flag = shadowgate_fully_restored }

	option = {
		name = shadowgate.fully.restored.answer
		owner = {
			hidden_effect = { set_country_flag = shadowgate_fully_restored }
			add_resource = { influence = 300 }
		}
	}
}

# Special district is built and its effects are applied.
planet_event = {
	id = shadowgate_galactic.310
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_planet_flag = shadowgate_planet OR = { last_district_changed = district_harmonic_subspace_resonator last_district_changed = district_shadow_pulse_condenser last_district_changed = district_spectral_projection_array } }

	immediate = {
		switch = {
			trigger = last_district_changed
			district_harmonic_subspace_resonator = { shadowgate_district_was_built = { DISTRICT = district_harmonic_subspace_resonator } }
			district_shadow_pulse_condenser = { shadowgate_district_was_built = { DISTRICT = district_shadow_pulse_condenser } }
			district_spectral_projection_array = { shadowgate_district_was_built = { DISTRICT = district_spectral_projection_array } }
		}
		if = { limit = { NOT = { has_planet_flag = shadowgate_d_compass_unlocked } }
			planet_event = { id = shadowgate_galactic.311 }
		}
	}
}

planet_event = {
	id = shadowgate_galactic.311
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { NOT = { shadowgate_is_disabled = yes } }
			if = { limit = { exists = owner owner = { NOT = { has_country_flag = shadowgate_district_restored } } }
				owner = { set_country_flag = shadowgate_district_restored }
				if = { limit = { OR = { owner = { has_country_flag = shadowgate_tutorial_bypass } has_planet_flag = shadowgate_d_compass_unlocked } }
					switch = {
						trigger = has_planet_flag
						shadowgate_a = { planet_event = { id = shadowgate_a.1065 days = 1 } }
						shadowgate_b = { planet_event = { id = shadowgate_b.1065 days = 1 } }
						shadowgate_c = { planet_event = { id = shadowgate_c.1065 days = 1 } }
						shadowgate_d = { planet_event = { id = shadowgate_d.1065 days = 1 } }
						shadowgate_e = { planet_event = { id = shadowgate_e.1065 days = 1 } }
					}
				}
				else = {
					switch = {
						trigger = has_planet_flag
						shadowgate_a = { planet_event = { id = shadowgate_a.1060 days = 1 } }
						shadowgate_b = { planet_event = { id = shadowgate_b.1060 days = 1 } }
						shadowgate_c = { planet_event = { id = shadowgate_c.1060 days = 1 } }
						shadowgate_d = { planet_event = { id = shadowgate_d.1060 days = 1 } }
						shadowgate_e = { planet_event = { id = shadowgate_e.1060 days = 1 } }
					}
				}
			}
			set_planet_flag = shadowgate_d_compass_unlocked
		}
		else = { planet_event = { id = shadowgate_galactic.311 days = 120 } }
	}
}

# Shadow anchor reclaimed message.
planet_event = {
	id = shadowgate_galactic.315
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_message = {
			type = MESSAGE_TYPE_SHADOWANCHOR_RECLAIMED
			localization = MESSAGE_SHADOWANCHOR_RECLAIMED
			days = 15
			target = this
			variable = {
				type = name
				localization = SHADOWGATE
				scope = this
			}
		}
	}
}

planet_event = {
	id = shadowgate_galactic.320
	title = shadowgate.main.title
	desc = shadowgate.shadowrift.first.summoning.1.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes
	location = this

	trigger = { NOT = { owner = { has_country_flag = shadowgate_tutorial_bypass } } }

	option = {
		name = shadowgate.shadowrift.first.summoning.1.answer
		hidden_effect = { planet_event = { id = shadowgate_galactic.321 } }
	}
}

planet_event = {
	id = shadowgate_galactic.321
	title = shadowgate.main.title
	desc = shadowgate.shadowrift.first.summoning.2.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes
	location = this

	option = {
		name = shadowgate.shadowrift.first.summoning.2.answer
		hidden_effect = { planet_event = { id = shadowgate_galactic.322 } }
	}
}

planet_event = {
	id = shadowgate_galactic.322
	title = shadowgate.main.title
	desc = shadowgate.shadowrift.first.summoning.3.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes
	location = this

	option = {
		name = shadowgate.shadowrift.first.summoning.3.answer
	}
}

planet_event = {
	id = shadowgate_galactic.323
	title = shadowgate.main.title
	desc = shadowgate.shadowrift.under.assault.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes

	trigger = { NOT = { owner = { has_country_flag = shadowgate_tutorial_bypass } } has_planet_flag = shadowgate_rp_assaulted }

	option = {
		name = shadowgate.shadowrift.under.assault.answer
	}
}

# Reset shadowrift country hostilities after a battle ends.
country_event = {
	id = shadowgate_galactic.325
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_country_type = shadowrift }

	immediate = { country_event = { id = shadowgate_galactic.330 days = 1 } }
}

# Reset shadowrift country hostilities when a combatant ship is disabled by a terminus (starbase, etc)
ship_event = {
	id = shadowgate_galactic.326
	hide_window = yes
	is_triggered_only = yes

	trigger = { exists = from from = { is_ship_size = shadowgate_shadowrift } }

	immediate = { from = { owner = { country_event = { id = shadowgate_galactic.330 days = 1 } } } }
}

# Check to see if any terminus fleets are in combat for a single shadowrift country. If not, reset hostilities.
country_event = {
	id = shadowgate_galactic.330
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		if = { limit = { any_owned_fleet = { is_in_combat = yes } }
			NOT = { any_owned_fleet = { any_combatant_fleet = { is_civilian = no is_mobile = yes } } }
		}
		else = { always = yes }
	}

	immediate = { every_country = { limit = { is_hostile = prev } root = { set_faction_hostility = { target = prev set_hostile = no set_neutral = yes set_friendly = no } } } every_owned_fleet = { every_combatant_fleet = { limit = { any_owned_ship = { NOT = { shadowgate_is_civilian_ship = yes } } } clear_orders = yes } } }
}

# When a fleet joins an attack on a shadowrift, set the shadowrift as hostile toward the fleet's owner. This prevents a rare instance where the shadowrift turns neutral while still in combat with ships that outrange it (titans, starbases, etc.).
fleet_event = {
	id = shadowgate_galactic.331
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_fleet_flag = shadowrift }

	immediate = {
		owner = { set_faction_hostility = { target = from.owner set_hostile = yes set_neutral = no set_friendly = no } }
	}
}

##################################################################
# Dark Lodestones
##################################################################

# Periodically discovers a dark lodestone location in the galaxy.
event = {
	id = shadowgate_galactic.400
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { has_global_flag = shadowgate_lodestone_discovered } }

	immediate = {
		set_global_flag = shadowgate_lodestone_discovered
		event_target:global_event_country = { country_event = { id = shadowgate_galactic.401 days = 1800 random = 900 } }
	}
}

# Finds an eligible shadowgate administrator to receive coordinates to an appropriate dark lodestone location.
country_event = {
	id = shadowgate_galactic.401
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_global_flag = shadowgate_lodestone_discovered }

	immediate = {
		save_event_target_as = shadowgate_dl_owner
		random_list = {
			1 = { modifier = { factor = 0 shadowgate_is_valid_lodestone_recipient = { SHADOWGATE = a } } event_target:shadowgate_planet_a = { save_event_target_as = shadowgate_dl_owner_planet owner = { save_event_target_as = shadowgate_dl_owner } } }
			1 = { modifier = { factor = 0 shadowgate_is_valid_lodestone_recipient = { SHADOWGATE = b } } event_target:shadowgate_planet_b = { save_event_target_as = shadowgate_dl_owner_planet owner = { save_event_target_as = shadowgate_dl_owner } } }
			1 = { modifier = { factor = 0 shadowgate_is_valid_lodestone_recipient = { SHADOWGATE = c } } event_target:shadowgate_planet_c = { save_event_target_as = shadowgate_dl_owner_planet owner = { save_event_target_as = shadowgate_dl_owner } } }
			1 = { modifier = { factor = 0 shadowgate_is_valid_lodestone_recipient = { SHADOWGATE = d } } event_target:shadowgate_planet_d = { save_event_target_as = shadowgate_dl_owner_planet owner = { save_event_target_as = shadowgate_dl_owner } } }
			1 = { modifier = { factor = 0 shadowgate_is_valid_lodestone_recipient = { SHADOWGATE = e } } event_target:shadowgate_planet_e = { save_event_target_as = shadowgate_dl_owner_planet owner = { save_event_target_as = shadowgate_dl_owner } } }
		}
		if = { limit = { event_target:shadowgate_dl_owner = { NOT = { is_same_value = event_target:global_event_country } } }
			event_target:shadowgate_dl_owner_planet = {
				if = { limit = { OR = { AND = { exists = event_target:shadowgate_dl_system_global event_target:shadowgate_dl_owner = { intel_level = { level < medium system = event_target:shadowgate_dl_system_global } } } NOT = { exists = event_target:shadowgate_dl_system_global } } }
					random_list = {
						1 = { modifier = { factor = 3 owner = { OR = { has_ethic = ethic_fanatic_pacifist has_ethic = ethic_pacifist } } }
							random_galaxy_planet = { limit = { uninhabitable_regular_planet = yes shadowgate_dl_excluded = yes solar_system = { has_access_fleet = event_target:shadowgate_dl_owner event_target:shadowgate_dl_owner = { intel_level = { level > low system = prev } } } }
								if = { limit = { exists = event_target:shadowgate_dl_planet_global } clear_global_event_target = shadowgate_dl_planet_global }
								save_global_event_target_as = shadowgate_dl_planet_global
								if = { limit = { exists = event_target:shadowgate_dl_system_global } clear_global_event_target = shadowgate_dl_system_global }
								solar_system = { save_global_event_target_as = shadowgate_dl_system_global }
							}
						}
						2 = { modifier = { factor = 0.5 owner = { OR = { has_ethic = ethic_fanatic_pacifist has_ethic = ethic_pacifist } } }
							random_galaxy_planet = { limit = { uninhabitable_regular_planet = yes shadowgate_dl_excluded = yes solar_system = { event_target:shadowgate_dl_owner = { intel_level = { level > low system = prev } } } }
								if = { limit = { exists = event_target:shadowgate_dl_planet_global } clear_global_event_target = shadowgate_dl_planet_global }
								save_global_event_target_as = shadowgate_dl_planet_global
								if = { limit = { exists = event_target:shadowgate_dl_system_global } clear_global_event_target = shadowgate_dl_system_global }
								solar_system = { save_global_event_target_as = shadowgate_dl_system_global }
							}
						}
					}
				}
				if = { limit = { exists = event_target:shadowgate_dl_system_global exists = event_target:shadowgate_dl_planet_global }
					switch = {
						trigger = has_planet_flag
						shadowgate_a = { planet_event = { id = shadowgate_a.3015 days = 60 random = 30 } }
						shadowgate_b = { planet_event = { id = shadowgate_b.3015 days = 60 random = 30 } }
						shadowgate_c = { planet_event = { id = shadowgate_c.3015 days = 60 random = 30 } }
						shadowgate_d = { planet_event = { id = shadowgate_d.3015 days = 60 random = 30 } }
						shadowgate_e = { planet_event = { id = shadowgate_e.3015 days = 60 random = 30 } }
					
					}
				}
			}
		}
		else = { remove_global_flag = shadowgate_lodestone_discovered }
	}
}

# A science vessel finishes the special project to recover a dark lodestone.
ship_event = {
	id = shadowgate_galactic.405
	title = shadowgate.lodestone.recovered.title
	desc = {
		trigger = { always = yes }
		text = shadowgate.lodestone.recovered.default.1.desc
	}
	desc = {
		trigger = { always = yes }
		text = shadowgate.lodestone.recovered.default.2.desc
	}
	desc = {
		trigger = { always = yes }
		text = shadowgate.lodestone.recovered.default.3.desc
	}
	desc = {
		trigger = { NOT = { owner = { has_country_flag = shadowgate_dl_molten } } event_target:shadowgate_dl_planet = { is_planet_class = pc_molten } }
		text = shadowgate.lodestone.recovered.molten.desc
	}
	desc = {
		trigger = { NOT = { owner = { has_country_flag = shadowgate_dl_barren } } event_target:shadowgate_dl_system = { star = { NOT = { is_planet_class = pc_black_hole } } } event_target:shadowgate_dl_planet = { OR = { is_planet_class = pc_barren is_planet_class = pc_barren_cold } } }
		text = shadowgate.lodestone.recovered.barren.desc
	}
	desc = {
		trigger = { NOT = { owner = { has_country_flag = shadowgate_dl_toxic } } event_target:shadowgate_dl_planet = { is_planet_class = pc_toxic } }
		text = shadowgate.lodestone.recovered.toxic.desc
	}
	desc = {
		trigger = { NOT = { owner = { has_country_flag = shadowgate_dl_frozen } } event_target:shadowgate_dl_planet = { is_planet_class = pc_frozen } }
		text = shadowgate.lodestone.recovered.frozen.desc
	}
	picture = GFX_evt_baol_datacrystals
	is_triggered_only = yes
	show_sound = event_finding_loot
	location = event_target:shadowgate_dl_planet

	option = {
		name = INTERESTING
		custom_tooltip = shadowgate.lodestone.gained.tooltip
		hidden_effect = {
			owner = { change_variable = { which = ShadowgateLodestonesOwned value = 1 } }
		}
	}
	after = {
		hidden_effect = {
			event_target:shadowgate_dl_planet = {
				switch = {
					trigger = is_planet_class
					default = {  }
					pc_molten = { root.owner = { set_country_flag = shadowgate_dl_molten } }
					pc_barren = { root.owner = { set_country_flag = shadowgate_dl_barren } }
					pc_barren_cold = { root.owner = { set_country_flag = shadowgate_dl_barren } }
					pc_toxic = { root.owner = { set_country_flag = shadowgate_dl_toxic } }
					pc_frozen = { root.owner = { set_country_flag = shadowgate_dl_frozen } }
				}
			}
		}
	}
}

# Lodestone socket unlocked.
planet_event = {
	id = shadowgate_galactic.410
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_message = {
			type = MESSAGE_TYPE_SHADOWGATE_DL_UNLOCKED
			localization = MESSAGE_SHADOWGATE_DL_UNLOCKED
			days = 30
			target = this
			variable = {
				type = name
				localization = SHADOWGATE
				scope = this
			}
		}
	}
}

event = {
	id = shadowgate_galactic.415
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { has_global_flag = shadowgate_dl_remnant_cooldown } }

	immediate = {
		random_list = {
			250 = { }
			1 = {
				random_system = { limit = { has_star_flag = shadowgate_shadow_remnant NOT = { has_star_flag = shadowgate_dl_remnant_found } exists = space_owner space_owner = { NOT = { has_country_flag = shadowgate_dl_remnant_found } } }
					set_timed_global_flag = { flag = shadowgate_dl_remnant_cooldown days = 3600 }
					set_star_flag = shadowgate_dl_remnant_found
					save_event_target_as = shadowgate_remnant_dl_system
					space_owner = {
						set_country_flag = shadowgate_dl_remnant_found
						country_event = { id = shadowgate_galactic.420 days = 180 random = 90 }
					}
				}
			}
		}
	}
}

country_event = {
	id = shadowgate_galactic.420
	title = shadow.remnant.dl.found.title
	desc = {
		trigger = { NOT = { has_country_flag = shadowgate_dl_knowledge } }
		text = shadowgate.remnant.dl.found.no.knowledge.desc
	}
	desc = {
		trigger = { has_country_flag = shadowgate_dl_knowledge }
		text = shadowgate.remnant.dl.found.knowledge.desc
	}
	picture = GFX_evt_baol_datacrystals
	show_sound = shadowgate_d_lodestone_unlocked
	is_triggered_only = yes
	location = event_target:shadowgate_remnant_dl_system

	option = {
		name = EXCELLENT
		custom_tooltip = shadowgate.lodestone.gained.tooltip
		hidden_effect = { change_variable = { which = ShadowgateLodestonesOwned value = 1 } }
	}
}

##################################################################
# Random Shadowgate Events
##################################################################

# Potentially triggers a random expedition event for every shadowgate.
event = {
	id = shadowgate_galactic.500
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { exists = event_target:shadowgate_planet_a event_target:shadowgate_planet_a = { exists = owner } } event_target:shadowgate_planet_a = { planet_event = { id = shadowgate_galactic.501 } planet_event = { id = shadowgate_galactic.530 } } }
		if = { limit = { exists = event_target:shadowgate_planet_b event_target:shadowgate_planet_b = { exists = owner } } event_target:shadowgate_planet_b = { planet_event = { id = shadowgate_galactic.501 } planet_event = { id = shadowgate_galactic.530 } } }
		if = { limit = { exists = event_target:shadowgate_planet_c event_target:shadowgate_planet_c = { exists = owner } } event_target:shadowgate_planet_c = { planet_event = { id = shadowgate_galactic.501 } planet_event = { id = shadowgate_galactic.530 } } }
		if = { limit = { exists = event_target:shadowgate_planet_d event_target:shadowgate_planet_d = { exists = owner } } event_target:shadowgate_planet_d = { planet_event = { id = shadowgate_galactic.501 } planet_event = { id = shadowgate_galactic.530 } } }
		if = { limit = { exists = event_target:shadowgate_planet_e event_target:shadowgate_planet_e = { exists = owner } } event_target:shadowgate_planet_e = { planet_event = { id = shadowgate_galactic.501 } planet_event = { id = shadowgate_galactic.530 } } }
	}
}


planet_event = {
	id = shadowgate_galactic.501
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { has_planet_flag = shadowgate_ashen_pilgrimage } num_assigned_jobs = { job = shadowgate_researcher value > 0 } is_colony = yes colony_age >= 180 owner = { NOT = { has_country_flag = shadowgate_random_event_happened } } }

	immediate = {
		random_list = {
			2 = { }
			2 = { modifier = { factor = 0 num_assigned_jobs = { job = shadowgate_researcher value >= 20 } } }
			2 = { modifier = { factor = 0 num_assigned_jobs = { job = shadowgate_researcher value >= 15 } } }
			2 = { modifier = { factor = 0 num_assigned_jobs = { job = shadowgate_researcher value >= 10 } } }
			2 = { modifier = { factor = 0 num_assigned_jobs = { job = shadowgate_researcher value >= 5 } } }
			1 = {
				owner = { set_timed_country_flag = { flag = shadowgate_random_event_happened days = 2520 } }
				random_list = {
					1 = { modifier = { factor = 0 OR = { shadowgate_is_disabled = yes owner = { has_country_flag = shadowgate_random_event_shadow_anchor } } } if = { limit = { owner = { has_country_flag = has_shadow_anchors } } planet_event = { id = shadowgate_galactic.505 days = 180 random = 90 } } else = { planet_event = { id = shadowgate_galactic.525 days = 180 random = 90 } } }
					1 = { modifier = { factor = 0 OR = { shadowgate_is_disabled = yes owner = { has_country_flag = shadowgate_random_event_dark_lodestone } } } if = { limit = { owner = { has_country_flag = has_shadow_anchors } } planet_event = { id = shadowgate_galactic.515 days = 180 random = 90 } } else = { planet_event = { id = shadowgate_galactic.525 days = 180 random = 90 } } }
					5 = { modifier = { factor = 0 OR = { shadowgate_is_disabled = yes owner = { has_country_flag = shadowgate_random_event_dark_matter } } } planet_event = { id = shadowgate_galactic.520 days = 180 random = 90 } }
					5 = { modifier = { factor = 0 OR = { shadowgate_is_disabled = yes owner = { has_country_flag = shadowgate_random_event_zro } } } modifier = { add = 2 owner = { has_ethic = ethic_gestalt_consciousness } } planet_event = { id = shadowgate_galactic.521 days = 180 random = 90 } }
					10 = { planet_event = { id = shadowgate_galactic.525 days = 180 random = 90 } }
				}
			}
		}
	}
}

# Forgotten Anchor discovered.
planet_event = {
	id = shadowgate_galactic.505
	title = shadowgate.random.event.anchor.title
	desc = shadowgate.random.event.anchor.desc
	picture = GFX_evt_derelict_interior
	show_sound = event_metal_fatigue
	location = this
	is_triggered_only = yes

	immediate = { owner = { set_country_flag = shadowgate_random_event_shadow_anchor } }

	option = {
		name = OK
		enable_special_project = {
			name = "SHADOWGATE_FORGOTTEN_ANCHOR_PROJECT"
			location = this
			owner = root
		}
	}
}

# Forgotten Anchor special project finished.
planet_event = {
	id = shadowgate_galactic.510
	title = shadowgate.main.title
	desc = shadowgate.random.event.anchor.end.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	show_sound = shadowgate_anchor_fabricate
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	location = this
	is_triggered_only = yes

	option = {
		name = shadowgate.random.event.anchor.answer
		custom_tooltip = shadowgate.random.event.anchor.answer.tooltip
		hidden_effect = { change_variable = { which = ShadowgateBerthedAnchors value = 1 } }
	}
}

# Dark Lodestone inside shadowgate discovered.
planet_event = {
	id = shadowgate_galactic.515
	title = shadowgate.random.event.dl.title
	desc = shadowgate.random.event.dl.desc
	picture = GFX_evt_ship_offloading_cargo
	show_sound = event_metal_fatigue
	location = this
	is_triggered_only = yes

	immediate = { owner = { set_country_flag = shadowgate_random_event_dark_lodestone } }

	option = {
		name = INTRIGUING
		custom_tooltip = shadowgate.lodestone.gained.tooltip
		hidden_effect = { owner = { change_variable = { which = ShadowgateLodestonesOwned value = 1 } } }
	}
}

# Dark Matter inside shadowgate discovered.
planet_event = {
	id = shadowgate_galactic.520
	title = shadowgate.random.event.darkmatter.title
	desc = shadowgate.random.event.darkmatter.desc
	picture = GFX_evt_smugglers_in_bar
	show_sound = event_whispering
	location = this
	is_triggered_only = yes

	immediate = { owner = { set_country_flag = shadowgate_random_event_dark_matter } }

	option = {
		name = EXCELLENT
		owner = {
			add_resource = { sr_dark_matter = 200 }
			if = { limit = { hidden_trigger = { NOR = { has_tech_option = tech_mine_dark_matter has_technology = tech_mine_dark_matter } } }
				add_research_option = tech_mine_dark_matter
			}
		}
	}
}

# Zro inside shadowgate discovered.
planet_event = {
	id = shadowgate_galactic.521
	title = shadowgate.random.event.zro.title
	desc = shadowgate.random.event.zro.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_whispering
	location = this
	is_triggered_only = yes

	immediate = { owner = { set_country_flag = shadowgate_random_event_zro } }

	option = {
		name = EXCELLENT
		owner = {
			add_resource = { sr_zro = 200 }
			if = { limit = { hidden_trigger = { NOR = { has_tech_option = tech_mine_zro has_technology = tech_mine_zro } } }
				add_research_option = tech_mine_zro
			}
		}
	}
}

# Random expedition concludes on a shadowgate.
planet_event = {
	id = shadowgate_galactic.525
	title = shadowgate.random.event.expedition.title
	desc = shadowgate.random.event.expedition.desc
	picture = GFX_evt_engineering_research
	show_sound = event_mystic_reveal
	location = this
	is_triggered_only = yes

	immediate = {
		random_list = {
			1 = { set_variable = { which = ShadowgateExpeditionType value = 1 } }
			1 = { set_variable = { which = ShadowgateExpeditionType value = 2 } }
			1 = { set_variable = { which = ShadowgateExpeditionType value = 3 } }
		}
		owner = { set_variable = { which = ShadowgateExpeditionCount value = 0 } }
		every_owned_pop = { limit = { has_job = shadowgate_researcher }
			random_list = {
				1 = { }
				2 = { prev.owner = { change_variable = { which = ShadowgateExpeditionCount value = 1 } } }
			}
		}
		owner = {
			multiply_variable = { which = ShadowgateExpeditionCount value = 0.5 }
			floor_variable = ShadowgateExpeditionCount
			if = { limit = { check_variable = { which = ShadowgateExpeditionCount value < 1 } } set_variable = { which = ShadowgateExpeditionCount value = 1 } }
		}
	}

	option = {
		name = EXCELLENT
		owner = {
			if = { limit = { hidden_trigger = { NOT = { has_relic = r_shadowgate_es } } }
				locked_random_list = {
					150 = { modifier = { factor = 0.5 OR = { has_global_flag = shadowgate_prevent_ap_spawn NOT = { exists = event_target:shadowgate_ap_country } } } hidden_effect = { } }
					1 = { add_relic = r_shadowgate_es }
				}
			}
			add_resource = { minor_artifacts = 1 mult = ShadowgateExpeditionCount }
			if = { limit = { hidden_trigger = { check_variable = { which = ShadowgateExpeditionType value = 1 } } }
				add_resource = { engineering_research = 150 mult = ShadowgateExpeditionCount }
				add_resource = { physics_research = 50 mult = ShadowgateExpeditionCount }
			}
			else_if = { limit = { hidden_trigger = { check_variable = { which = ShadowgateExpeditionType value = 2 } } }
				add_resource = { engineering_research = 100 mult = ShadowgateExpeditionCount }
				add_resource = { physics_research = 100 mult = ShadowgateExpeditionCount }
			}
			else = {
				add_resource = { physics_research = 150 mult = ShadowgateExpeditionCount }
				add_resource = { engineering_research = 50 mult = ShadowgateExpeditionCount }
			}
			custom_tooltip = shadowgate.scrap.tooltip
			add_resource = { sr_dark_matter = 25 mult = ShadowgateExpeditionCount }
			add_resource = { sr_living_metal = 50 mult = ShadowgateExpeditionCount }
			if = { limit = { hidden_trigger = { NOR = { has_tech_option = tech_mine_living_metal has_technology = tech_mine_living_metal } } } add_research_option = tech_mine_living_metal }
		}
		hidden_effect = { clear_variable = ShadowgateExpeditionType owner = { clear_variable = ShadowgateExpeditionCount } }
	}
}

# Triggers random deadly events on a shadowgate.
planet_event = {
	id = shadowgate_galactic.530
	hide_window = yes
	is_triggered_only = yes

	trigger = { owner = { NOR = { is_country_type = shadowgate_ap has_country_flag = shadowgate_deadly_event_happened } } NOT = { has_planet_flag = shadowgate_ashen_pilgrimage } num_pops >= 2 is_colony = yes colony_age >= 180 has_orbital_bombardment = no NOR = { shadowgate_is_disabled = yes has_modifier = pm_shadowgate_dimensional_shift } }

	immediate = {
		random_list = {
			6 = { }
			1 = { modifier = { factor = 0 num_assigned_jobs = { job = shadowgate_researcher value >= 20 } } }
			1 = { modifier = { factor = 0 num_assigned_jobs = { job = shadowgate_researcher value >= 15 } } }
			1 = { modifier = { factor = 0 num_assigned_jobs = { job = shadowgate_researcher value >= 10 } } }
			1 = { modifier = { factor = 0 num_assigned_jobs = { job = shadowgate_researcher value >= 5 } } }
			1 = {
				random_list = {
					3 = { modifier = { factor = 0 OR = { planet_devastation >= 80 owner = { OR = { has_country_flag = shadowgate_deadly_event_high AND = { has_country_flag = shadowgate_high_d1_happened has_country_flag = shadowgate_high_d2_happened has_country_flag = shadowgate_high_d3_happened } } } } }
						owner = { set_timed_country_flag = { flag = shadowgate_deadly_event_happened days = 10800 } set_timed_country_flag = { flag = shadowgate_deadly_event_high days = 36000 } }
						planet_event = { id = shadowgate_galactic.535 days = 180 random = 150 }
					}
					5 = { modifier = { factor = 0 OR = { planet_devastation >= 85 owner = { OR = { has_country_flag = shadowgate_deadly_event_medium AND = { has_country_flag = shadowgate_med_d1_happened has_country_flag = shadowgate_med_d2_happened has_country_flag = shadowgate_med_d3_happened } } } } }
						owner = { set_timed_country_flag = { flag = shadowgate_deadly_event_happened days = 10800 } set_timed_country_flag = { flag = shadowgate_deadly_event_medium days = 24000 } }
						planet_event = { id = shadowgate_galactic.540 days = 180 random = 150 }
					}
					7 = { modifier = { factor = 0 OR = { planet_devastation >= 90 owner = { OR = { has_country_flag = shadowgate_deadly_event_low AND = { has_country_flag = shadowgate_low_d1_happened has_country_flag = shadowgate_low_d2_happened has_country_flag = shadowgate_low_d3_happened } } } } }
						owner = { set_timed_country_flag = { flag = shadowgate_deadly_event_happened days = 10800 } set_timed_country_flag = { flag = shadowgate_deadly_event_low days = 18000 } }
						planet_event = { id = shadowgate_galactic.545 days = 180 random = 150 }
					}
				}
			}
		}
	}
}
# Deadly Event Trigger - High
planet_event = {
	id = shadowgate_galactic.535
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = ShadowgateCasualtyCount value = 2 }
		while = { count = 2
			random_list = {
				1 = { }
				1 = { change_variable = { which = ShadowgateCasualtyCount value = 1 } }
			}
		}
		set_variable = { which = ShadowgateRPMinEvent value = 5 }
		set_variable = { which = ShadowgateDevastationCount value = 10 }
		while = { count = 5
			random_list = {
				1 = { change_variable = { which = ShadowgateRPMinEvent value = 1 } }
				1 = { change_variable = { which = ShadowgateDevastationCount value = 1 } }
			}
		}
		while = { count = ShadowgateCasualtyCount if = { limit = { num_pops > 1 } random_owned_pop = { kill_pop = yes } } else = { subtract_variable = { which = ShadowgateCasualtyCount value = 1 } } }
		change_variable = { which = ShadowgateRPMinPotential value = ShadowgateRPMinEvent } 
		while = { count = ShadowgateDevastationCount add_planet_devastation = 1 }
		if = { limit = { check_variable = { which = ShadowgateRPMin value < ShadowgateRPMinPotential } } set_variable = { which = ShadowgateRPMin value = ShadowgateRPMinPotential } }
		if = { limit = { check_variable = { which = ShadowgateRP value < ShadowgateRPMin } } set_variable = { which = ShadowgateRP value = ShadowgateRPMin } }
		switch = {
			trigger = has_planet_flag
			shadowgate_a = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = a } }
			shadowgate_b = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = b } }
			shadowgate_c = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = c } }
			shadowgate_d = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = d } }
			shadowgate_e = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = e } }
		}
		random_list = {
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_high_d1_happened } } } planet_event = { id = shadowgate_galactic.536 } } }
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_high_d2_happened } } } planet_event = { id = shadowgate_galactic.537 } } }
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_high_d3_happened } } } planet_event = { id = shadowgate_galactic.538 } } }
		}
	}
}
# Deadly Event - High
planet_event = {
	id = shadowgate_galactic.536
	title = shadowgate.deadly.event.high.1.title
	desc = shadowgate.deadly.event.high.1.desc
	picture = GFX_evt_ruined_system
	show_sound = event_whispering
	is_triggered_only = yes
	location = this

	trigger = { NOT = { owner = { has_country_flag = shadowgate_high_d1_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_high_d1_happened } }

	option = {
		name = shadowgate.deadly.event.high.1.answer
		owner = {
			add_resource = { engineering_research = 150 }
			add_resource = { physics_research = 150 }
		}
		custom_tooltip = shadowgate.deadly.event.high.1.answer.tooltip
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount clear_variable = ShadowgateDevastationCount } }
}
# Deadly Event - High
planet_event = {
	id = shadowgate_galactic.537
	title = shadowgate.deadly.event.high.2.title
	desc = shadowgate.deadly.event.high.2.desc
	picture = GFX_evt_glitchy_matrix
	show_sound = event_screams
	is_triggered_only = yes
	location = this

	trigger = { NOT = { owner = { has_country_flag = shadowgate_high_d2_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_high_d2_happened } }

	option = {
		name = shadowgate.deadly.event.high.2.answer
		owner = {
			add_resource = { engineering_research = 200 }
			add_resource = { physics_research = 100 }
		}
		custom_tooltip = shadowgate.deadly.event.high.2.answer.tooltip
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount clear_variable = ShadowgateDevastationCount } }
}
# Deadly Event - High
planet_event = {
	id = shadowgate_galactic.538
	title = shadowgate.deadly.event.high.3.title
	desc = shadowgate.deadly.event.high.3.desc
	picture = GFX_evt_zro_5
	show_sound = event_wind_ruins
	is_triggered_only = yes
	location = this
	
	trigger = { NOT = { owner = { has_country_flag = shadowgate_high_d3_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_high_d3_happened } }

	option = {
		name = shadowgate.deadly.event.high.3.answer
		owner = {
			add_resource = { physics_research = 200 }
			add_resource = { engineering_research = 100 }
		}
		custom_tooltip = shadowgate.deadly.event.high.3.answer.tooltip
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount clear_variable = ShadowgateDevastationCount } }
}
# Deadly Event Trigger - Medium
planet_event = {
	id = shadowgate_galactic.540
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = ShadowgateCasualtyCount value = 1 }
		while = { count = 2
			random_list = {
				1 = { }
				1 = { change_variable = { which = ShadowgateCasualtyCount value = 1 } }
			}
		}
		set_variable = { which = ShadowgateRPMinEvent value = 1 }
		set_variable = { which = ShadowgateDevastationCount value = 5 }
		while = { count = 5
			random_list = {
				1 = { modifier = { factor = 0 check_variable = { which = ShadowgateRPMinEvent value >= 5 } } change_variable = { which = ShadowgateRPMinEvent value = 1 } }
				1 = { change_variable = { which = ShadowgateDevastationCount value = 1 } }
			}
		}
		while = { count = ShadowgateCasualtyCount if = { limit = { num_pops > 1 } random_owned_pop = { kill_pop = yes } } else = { subtract_variable = { which = ShadowgateCasualtyCount value = 1 } } }
		change_variable = { which = ShadowgateRPMinPotential value = ShadowgateRPMinEvent } 
		while = { count = ShadowgateDevastationCount add_planet_devastation = 1 }
		if = { limit = { check_variable = { which = ShadowgateRPMin value < ShadowgateRPMinPotential } } set_variable = { which = ShadowgateRPMin value = ShadowgateRPMinPotential } }
		if = { limit = { check_variable = { which = ShadowgateRP value < ShadowgateRPMin } } set_variable = { which = ShadowgateRP value = ShadowgateRPMin } }
		switch = {
			trigger = has_planet_flag
			shadowgate_a = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = a } }
			shadowgate_b = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = b } }
			shadowgate_c = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = c } }
			shadowgate_d = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = d } }
			shadowgate_e = { calculate_retrograde_counterpoint_harmonic_level = { SHADOWGATE = e } }
		}
		random_list = {
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_med_d1_happened } } } planet_event = { id = shadowgate_galactic.541 } } }
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_med_d2_happened } } } owner = { random_owned_leader = { limit = { OR = { is_researching_area = engineering is_researching_area = physics } } save_event_target_as = shadowgate_science_team_leader } } planet_event = { id = shadowgate_galactic.542 } } }
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_med_d3_happened } } } planet_event = { id = shadowgate_galactic.543 } } }
		}
	}
}
# Deadly Event - Medium
planet_event = {
	id = shadowgate_galactic.541
	title = shadowgate.deadly.event.med.1.title
	desc = shadowgate.deadly.event.med.1.desc
	picture = GFX_evt_archaeologists_escaping
	show_sound = event_energy_field
	is_triggered_only = yes
	location = this

	trigger = { NOT = { owner = { has_country_flag = shadowgate_med_d1_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_med_d1_happened } }

	option = {
		name = shadowgate.deadly.event.med.1.answer
		owner = {
			add_resource = { engineering_research = 100 }
			add_resource = { physics_research = 100 }
		}
		custom_tooltip = shadowgate.deadly.event.med.1.answer.tooltip
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount clear_variable = ShadowgateDevastationCount } }
}
# Deadly Event - Medium
planet_event = {
	id = shadowgate_galactic.542
	title = shadowgate.deadly.event.med.2.title
	desc = shadowgate.deadly.event.med.2.desc
	picture = GFX_evt_ancient_databank
	show_sound = event_power_down
	is_triggered_only = yes
	location = this

	trigger = { NOT = { owner = { has_country_flag = shadowgate_med_d2_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_med_d2_happened } }

	option = {
		name = shadowgate.deadly.event.med.2.answer
		owner = {
			add_resource = { engineering_research = 100 }
			add_resource = { physics_research = 100 }
		}
		custom_tooltip = shadowgate.deadly.event.med.2.answer.tooltip
	}
	option = {
		name = shadowgate.deadly.event.med.2.answer.fired
		owner = {
			add_resource = { engineering_research = 50 }
			add_resource = { physics_research = 50 }
		}
		custom_tooltip = shadowgate.deadly.event.med.2.answer.fired.tooltip
		hidden_effect = {
			event_target:shadowgate_science_team_leader = { kill_leader = { show_notification = no } }
			owner = { add_resource = { influence = 100 } }
		}
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount clear_variable = ShadowgateDevastationCount } }
}
# Deadly Event - Medium
planet_event = {
	id = shadowgate_galactic.543
	title = shadowgate.deadly.event.med.3.title
	desc = shadowgate.deadly.event.med.3.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_door_opening
	is_triggered_only = yes
	location = this
	
	trigger = { NOT = { owner = { has_country_flag = shadowgate_med_d3_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_med_d3_happened } }

	option = {
		name = shadowgate.deadly.event.med.3.answer
		owner = {
			add_resource = { engineering_research = 150 }
			add_resource = { physics_research = 50 }
		}
		custom_tooltip = shadowgate.deadly.event.med.3.answer.tooltip
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount clear_variable = ShadowgateDevastationCount } }
}
# Deadly Event Trigger - Low
planet_event = {
	id = shadowgate_galactic.545
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = ShadowgateCasualtyCount value = 1 }
		random_list = {
			1 = { }
			1 = { change_variable = { which = ShadowgateCasualtyCount value = 1 } }
		}
		while = { count = ShadowgateCasualtyCount if = { limit = { num_pops > 1 } random_owned_pop = { kill_pop = yes } } else = { subtract_variable = { which = ShadowgateCasualtyCount value = 1 } } }
		random_list = {
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_low_d1_happened } } } planet_event = { id = shadowgate_galactic.546 } } }
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_low_d2_happened } } } planet_event = { id = shadowgate_galactic.547 } } }
			1 = { if = { limit = { NOT = { owner = { has_country_flag = shadowgate_low_d3_happened } } } planet_event = { id = shadowgate_galactic.548 } } }
		}
	}
}
# Deadly Event - Low
planet_event = {
	id = shadowgate_galactic.546
	title = shadowgate.deadly.event.low.1.title
	desc = shadowgate.deadly.event.low.1.desc
	picture = GFX_evt_archaeology_trap
	show_sound = event_metal_fatigue
	is_triggered_only = yes
	location = this

	trigger = { NOT = { owner = { has_country_flag = shadowgate_low_d1_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_low_d1_happened } }

	option = {
		name = shadowgate.deadly.event.low.1.answer
		owner = {
			add_resource = { engineering_research = 100 }
		}
		custom_tooltip = shadowgate.deadly.event.low.1.answer.tooltip
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount } }
}
# Deadly Event - Low
planet_event = {
	id = shadowgate_galactic.547
	title = shadowgate.deadly.event.low.2.title
	desc = shadowgate.deadly.event.low.2.desc
	picture = GFX_evt_archaeology_camp
	show_sound = event_energy_field
	is_triggered_only = yes
	location = this

	trigger = { NOT = { owner = { has_country_flag = shadowgate_low_d2_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_low_d2_happened } }

	option = {
		name = shadowgate.deadly.event.low.2.answer
		owner = {
			add_resource = { physics_research = 100 }
		}
		custom_tooltip = shadowgate.deadly.event.low.2.answer.tooltip
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount } }
}
# Deadly Event - Low
planet_event = {
	id = shadowgate_galactic.548
	title = shadowgate.deadly.event.low.3.title
	desc = shadowgate.deadly.event.low.3.desc
	picture = GFX_evt_space_walk
	show_sound = event_structural_collapse
	is_triggered_only = yes
	location = this
	
	trigger = { NOT = { owner = { has_country_flag = shadowgate_low_d3_happened } } }

	immediate = { owner = { set_country_flag = shadowgate_low_d3_happened } }

	option = {
		name = shadowgate.deadly.event.low.3.answer
		owner = {
			add_resource = { physics_research = 100 }
		}
		custom_tooltip = shadowgate.deadly.event.low.3.answer.tooltip
	}

	after = { hidden_effect = { clear_variable = ShadowgateCasualtyCount } }
}

##################################################################
# Relics
##################################################################
# Shadowforge relic is found.
ship_event = {
	id = shadowgate_galactic.600
	title = shadowgate.shadowforge.recovered.title
	desc = shadowgate.shadowforge.recovered.1.desc
	picture = GFX_evt_archaeology_camp
	show_sound = event_mystic_reveal_light
	is_triggered_only = yes
	location = from

	option = {
		name = shadowgate.shadowforge.recovered.answer.1
		hidden_effect = {
			owner = {
				random_owned_planet = { limit = { is_colonized_shadowgate = yes }
					planet_event = { id = shadowgate_galactic.601 }
				}
			}
		}
	}
}
# Shadowforge...
planet_event = {
	id = shadowgate_galactic.601
	title = shadowgate.shadowforge.recovered.title
	desc = shadowgate.shadowforge.recovered.2.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes
	location = this

	option = {
		name = shadowgate.shadowforge.recovered.answer.2
		hidden_effect = { planet_event = { id = shadowgate_galactic.602 } }
	}
}
# Shadowforge...
planet_event = {
	id = shadowgate_galactic.602
	title = shadowgate.shadowforge.recovered.title
	desc = shadowgate.shadowforge.recovered.3.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes
	location = this

	option = {
		name = shadowgate.shadowforge.recovered.answer.3
		hidden_effect = { planet_event = { id = shadowgate_galactic.603 } }
	}
}
# Shadowforge...
planet_event = {
	id = shadowgate_galactic.603
	title = shadowgate.shadowforge.recovered.title
	desc = shadowgate.shadowforge.recovered.4.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes
	location = this

	option = {
		name = shadowgate.shadowforge.recovered.answer.4
		hidden_effect = { planet_event = { id = shadowgate_galactic.604 } }
	}
}
# Shadowforge is awarded.
planet_event = {
	id = shadowgate_galactic.604
	title = shadowgate.shadowforge.recovered.title
	desc = shadowgate.shadowforge.recovered.5.desc
	picture = GFX_evt_shadowgate_relic
	is_triggered_only = yes
	show_sound = event_finding_loot
	location = fromfromfromfrom.from

	option = {
		name = shadowgate.shadowforge.recovered.5.answer
		owner = { add_relic = r_shadowgate_shadowforge }
	}
}

# Catalytic Pulse Converter Menu
country_event = {
	id = shadowgate_galactic.605
	title = shadowgate.general.title
	desc = {
		trigger = { NOT = { has_country_flag = shadowgate_cpc_used } }
		text = shadowgate.cpc.event.first.desc
	}
	desc = {
		trigger = { has_country_flag = shadowgate_cpc_used }
		text = shadowgate.cpc.event.general.desc
	}
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option_cpc"
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes

	immediate = {
		if = { limit = { NOR = { is_variable_set = ShadowgateCPCStored is_variable_set = ShadowgateCPCConverted } }
			set_variable = { which = ShadowgateCPCStored value = 0 }
			set_variable = { which = ShadowgateCPCConverted value = 0 }
		}
		shadowgate_cpc_menu = { SHADOWGATE = a VAR = A }
		shadowgate_cpc_menu = { SHADOWGATE = b VAR = B }
		shadowgate_cpc_menu = { SHADOWGATE = c VAR = C }
		shadowgate_cpc_menu = { SHADOWGATE = d VAR = D }
		shadowgate_cpc_menu = { SHADOWGATE = e VAR = E }
		clear_variable = ShadowgateRP
        clear_variable = ShadowgateRPMin
	}

	option = {
		name = shadowgate.cpc.a
		custom_tooltip = shadowgate.cpc.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_a event_target:shadowgate_planet_a = { check_variable = { which = ShadowgateRP value > ShadowgateRPMin } exists = owner owner = { NOT = { is_hostile = root } OR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } } }
		hidden_effect = { shadowgate_cpc_effect = { SHADOWGATE = a VAR = A } }
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_a }
					event_target:shadowgate_planet_a = {
						OR = {
							check_variable = { which = ShadowgateRP value < 150 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.cpc.b
		custom_tooltip = shadowgate.cpc.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_b event_target:shadowgate_planet_b = { check_variable = { which = ShadowgateRP value > ShadowgateRPMin } exists = owner owner = { NOT = { is_hostile = root } OR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } } }
		hidden_effect = { shadowgate_cpc_effect = { SHADOWGATE = b VAR = B } }
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_b }
					event_target:shadowgate_planet_b = {
						OR = {
							check_variable = { which = ShadowgateRP value < 150 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.cpc.c
		custom_tooltip = shadowgate.cpc.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_c event_target:shadowgate_planet_c = { check_variable = { which = ShadowgateRP value > ShadowgateRPMin } exists = owner owner = { NOT = { is_hostile = root } OR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } } }
		hidden_effect = { shadowgate_cpc_effect = { SHADOWGATE = c VAR = C } }
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_c }
					event_target:shadowgate_planet_c = {
						OR = {
							check_variable = { which = ShadowgateRP value < 150 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.cpc.d
		custom_tooltip = shadowgate.cpc.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_d event_target:shadowgate_planet_d = { check_variable = { which = ShadowgateRP value > ShadowgateRPMin } exists = owner owner = { NOT = { is_hostile = root } OR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } } }
		hidden_effect = { shadowgate_cpc_effect = { SHADOWGATE = d VAR = D } }
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_d }
					event_target:shadowgate_planet_d = {
						OR = {
							check_variable = { which = ShadowgateRP value < 150 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.cpc.e
		custom_tooltip = shadowgate.cpc.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_e event_target:shadowgate_planet_e = { check_variable = { which = ShadowgateRP value > ShadowgateRPMin } exists = owner owner = { NOT = { is_hostile = root } OR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } } }
		hidden_effect = { shadowgate_cpc_effect = { SHADOWGATE = e VAR = E } }
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_e }
					event_target:shadowgate_planet_e = {
						OR = {
							check_variable = { which = ShadowgateRP value < 150 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root is_country_type = shadowgate_ap } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.exit
		custom_gui = "shadowgate_option_back"
		custom_tooltip = shadowgate.cpc.exit.tooltip
		hidden_effect = { remove_modifier = relic_activation_cooldown add_resource = { influence = 150 } }
		ai_chance = { factor = 1 }
	}

	after = {
		hidden_effect = {
			set_global_flag = shadowgate_cpc_activated
			if = { limit = { is_variable_set = ShadowgateCPCStoredA } clear_variable = ShadowgateCPCStoredA }
			if = { limit = { is_variable_set = ShadowgateCPCStoredB } clear_variable = ShadowgateCPCStoredB }
			if = { limit = { is_variable_set = ShadowgateCPCStoredC } clear_variable = ShadowgateCPCStoredC }
			if = { limit = { is_variable_set = ShadowgateCPCStoredD } clear_variable = ShadowgateCPCStoredD }
			if = { limit = { is_variable_set = ShadowgateCPCStoredE } clear_variable = ShadowgateCPCStoredE }
		}
	}
}

# Catalytic Pulse Converter pulse event.
event = {
	id = shadowgate_galactic.606
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { has_global_flag = shadowgate_cpc_activated }

	immediate = {
		every_country = { limit = { has_relic = r_shadowgate_cpc check_variable = { which = ShadowgateCPCStored value > 0 } NOT = { has_relic = r_shadowgate_crwt_active } }
			country_event = { id = shadowgate_galactic.607 }
		}
	}
}

# Catalytic Pulse Converter conversion event.
country_event = {
	id = shadowgate_galactic.607
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_galaxy_planet = { limit = { is_colonized_shadowgate = yes check_variable = { which = ShadowgateEther value < ShadowgateEtherMax } owner = { OR = { is_same_value = root is_in_federation_with = root } is_same_value = prev.controller } }
			root = {
				set_variable = { which = ShadowgateCPCPending value = ShadowgateCPCStored }
				multiply_variable = { which = ShadowgateCPCStored value = @shadowgate_cpc_conversion }
				floor_variable = ShadowgateCPCStored
				subtract_variable = { which = ShadowgateCPCPending value = ShadowgateCPCStored }
				change_variable = { which = ShadowgateCPCConverted value = ShadowgateCPCPending }
			}
			change_variable = { which = ShadowgateEther value = { scope = root variable = ShadowgateCPCPending } }
		}
		if = { limit = { is_variable_set = ShadowgateCPCPending } clear_variable = ShadowgateCPCPending }
	}
}

# Ethereal Songstone Menu
country_event = {
	id = shadowgate_galactic.610
	title = shadowgate.es.relic.title
	desc = shadowgate.es.relic.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option_es"
	picture_event_data = {
		portrait = shroud1
		room = shroud_room
	}
	show_sound = shadowgate_eth
	is_triggered_only = yes

	option = {
		name = shadowgate.es.a
		custom_tooltip = shadowgate.es.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_a event_target:shadowgate_planet_a = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_a = {
				set_variable = { which = ShadowgateESStored value = prev }
				if = { limit = { is_variable_set = ShadowgateESStored } # spawns an error without it
					change_variable = { which = ShadowgateEther value = ShadowgateESStored }
					clear_variable = ShadowgateESStored
				}
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_a }
					event_target:shadowgate_planet_a = {
						OR = {
							check_variable = { which = ShadowgateEther value > 20 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.es.b
		custom_tooltip = shadowgate.es.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_b event_target:shadowgate_planet_b = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_b = {
				set_variable = { which = ShadowgateESStored value = prev }
				if = { limit = { is_variable_set = ShadowgateESStored }
					change_variable = { which = ShadowgateEther value = ShadowgateESStored }
					clear_variable = ShadowgateESStored
				}
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_b }
					event_target:shadowgate_planet_b = {
						OR = {
							check_variable = { which = ShadowgateEther value > 20 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.es.c
		custom_tooltip = shadowgate.es.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_c event_target:shadowgate_planet_c = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_c = {
				set_variable = { which = ShadowgateESStored value = prev }
				if = { limit = { is_variable_set = ShadowgateESStored }
					change_variable = { which = ShadowgateEther value = ShadowgateESStored }
					clear_variable = ShadowgateESStored
				}
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_c }
					event_target:shadowgate_planet_c = {
						OR = {
							check_variable = { which = ShadowgateEther value > 20 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.es.d
		custom_tooltip = shadowgate.es.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_d event_target:shadowgate_planet_d = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_d = {
				set_variable = { which = ShadowgateESStored value = prev }
				if = { limit = { is_variable_set = ShadowgateESStored }
					change_variable = { which = ShadowgateEther value = ShadowgateESStored }
					clear_variable = ShadowgateESStored
				}
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_d }
					event_target:shadowgate_planet_d = {
						OR = {
							check_variable = { which = ShadowgateEther value > 20 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.es.e
		custom_tooltip = shadowgate.es.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_e event_target:shadowgate_planet_e = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_e = {
				set_variable = { which = ShadowgateESStored value = prev }
				if = { limit = { is_variable_set = ShadowgateESStored }
					change_variable = { which = ShadowgateEther value = ShadowgateESStored }
					clear_variable = ShadowgateESStored
				}
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_e }
					event_target:shadowgate_planet_e = {
						OR = {
							check_variable = { which = ShadowgateEther value > 20 }
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.exit
		custom_gui = "shadowgate_option_back"
		custom_tooltip = shadowgate.es.exit.tooltip
		hidden_effect = { remove_modifier = relic_activation_cooldown }
		ai_chance = { factor = 1 }
	}

	after = {
		hidden_effect = {
			if = { limit = { has_modifier = relic_activation_cooldown }
				set_variable = { which = ShadowgateESStored value = 0 }
				remove_modifier = relic_activation_cooldown
				add_modifier = {
					modifier = "relic_activation_cooldown"
					days = 1800
				}
			}
			else = { add_resource = { influence = 75 } }
		}
	}
}

ship_event = {
	id = shadowgate_galactic.611
	title = shadowgate.es.recovered.title
	desc = shadowgate.es.recovered.desc
	picture = GFX_evt_excavation_team
	show_sound = shadowgate_eth
	is_triggered_only = yes
	location = from

	option = {
		name = INTERESTING
		custom_tooltip = shadowgate.lodestone.gained.tooltip
		owner = {
			hidden_effect = { change_variable = { which = ShadowgateLodestonesOwned value = 1 } }
			add_relic = r_shadowgate_es
		}
	}
}

# Staff of Umbral Sight Menu
country_event = {
	id = shadowgate_galactic.615
	title = shadowgate.sous.relic.title
	desc = shadowgate.sous.relic.desc
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option_sous"
	picture_event_data = {
		portrait = shroud1
		room = shroud_room
	}
	show_sound = shadowgate_eth
	is_triggered_only = yes

	option = {
		name = shadowgate.sous.a
		custom_tooltip = shadowgate.sous.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_a event_target:shadowgate_planet_a = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_a = {
				change_variable = { which = ShadowgateSOUSBlessings value = 1 }
				change_variable = { which = ShadowgateEtherMax value = @shadowgate_ether_sous_amount }
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_a }
					event_target:shadowgate_planet_a = {
						OR = {
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.sous.b
		custom_tooltip = shadowgate.sous.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_b event_target:shadowgate_planet_b = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_b = {
				change_variable = { which = ShadowgateSOUSBlessings value = 1 }
				change_variable = { which = ShadowgateEtherMax value = @shadowgate_ether_sous_amount }
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_b }
					event_target:shadowgate_planet_b = {
						OR = {
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.sous.c
		custom_tooltip = shadowgate.sous.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_c event_target:shadowgate_planet_c = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_c = {
				change_variable = { which = ShadowgateSOUSBlessings value = 1 }
				change_variable = { which = ShadowgateEtherMax value = @shadowgate_ether_sous_amount }
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_c }
					event_target:shadowgate_planet_c = {
						OR = {
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.sous.d
		custom_tooltip = shadowgate.sous.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_d event_target:shadowgate_planet_d = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_d = {
				change_variable = { which = ShadowgateSOUSBlessings value = 1 }
				change_variable = { which = ShadowgateEtherMax value = @shadowgate_ether_sous_amount }
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_d }
					event_target:shadowgate_planet_d = {
						OR = {
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.sous.e
		custom_tooltip = shadowgate.sous.select.tooltip
		trigger = { exists = event_target:shadowgate_planet_e event_target:shadowgate_planet_e = { exists = owner owner = { NOR = { is_hostile = root is_country_type = shadowgate_ap } OR = { is_same_value = root has_communications = root } } } }
		hidden_effect = {
			event_target:shadowgate_planet_e = {
				change_variable = { which = ShadowgateSOUSBlessings value = 1 }
				change_variable = { which = ShadowgateEtherMax value = @shadowgate_ether_sous_amount }
			}
		}
		ai_chance = {
			factor = 10000
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:shadowgate_planet_e }
					event_target:shadowgate_planet_e = {
						OR = {
							NOT = { exists = owner }
							AND = { exists = owner owner = { NOR = { is_same_value = root is_in_federation_with = root } } }
						}
					}
				}
			}
		}
	}

	option = {
		name = shadowgate.exit
		custom_gui = "shadowgate_option_back"
		custom_tooltip = shadowgate.sous.exit.tooltip
		hidden_effect = { remove_modifier = relic_activation_cooldown }
		ai_chance = { factor = 1 }
	}

	after = {
		hidden_effect = {
			if = { limit = { has_modifier = relic_activation_cooldown }
				remove_modifier = relic_activation_cooldown
				add_modifier = {
					modifier = "relic_activation_cooldown"
					days = 3600
				}
			}
			else = { add_resource = { influence = 150 } }
		}
	}
}

# Soujourner's Talisman additional passive from digsite updates its modifier through this event.
country_event = {
	id = shadowgate_galactic.620
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { NOT = { has_global_flag = shadowgate_st_upgraded_effect } }
			set_timed_global_flag = { flag = shadowgate_st_upgraded_effect days = 1 }
			shadowgate_st_upgraded_effect = yes
		}
	}
}

##################################################################
# Relic Digsites
##################################################################
# Counter-Resonant Warding Transmitter
fleet_event = {
	id = shadowgate_galactic.650
	title = shadowgate.crwt.title
	desc = shadowgate.crwt.desc.1
	picture = GFX_evt_alien_city
	show_sound = event_wind_ruins
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = shadowgate.crwt.answer.1
		small_artifact_reward = yes
	}
}

fleet_event = {
	id = shadowgate_galactic.651
	title = shadowgate.crwt.title
	desc = shadowgate.crwt.desc.2
	picture = GFX_evt_collapsing_roof
	show_sound = event_metal_fatigue
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = shadowgate.crwt.answer.2
		medium_artifact_reward = yes
	}
}

fleet_event = {
	id = shadowgate_galactic.652
	title = shadowgate.crwt.title
	desc = shadowgate.crwt.desc.3
	picture = GFX_evt_ancient_artifact
	show_sound = event_finding_loot
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = shadowgate.crwt.answer.3
		owner = { add_relic = r_shadowgate_crwt }
		hidden_effect = {
			from.planet = { set_planet_flag = shadowgate_crwt_removed }
		}
	}
}

# Apocryphal Edict
fleet_event = {
	id = shadowgate_galactic.655
	title = shadowgate.ae.title
	desc = shadowgate.ae.desc.1
	picture = GFX_evt_space_walk
	show_sound = event_mystic_reveal_light
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = shadowgate.ae.answer.1
		medium_artifact_reward = yes
	}
}

fleet_event = {
	id = shadowgate_galactic.656
	title = shadowgate.ae.title
	desc = shadowgate.ae.desc.2
	picture = GFX_evt_surreal_visions
	show_sound = event_finding_loot
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = shadowgate.ae.answer.2
		owner = { add_relic = r_shadowgate_ae }
	}
}

# Catalytic Pulse Converter
fleet_event = {
	id = shadowgate_galactic.660
	title = shadowgate.cpc.title
	desc = {
		text = shadowgate.cpc.desc.1
		trigger = { NOT = { has_global_flag = shadowgate_prevent_ap_spawn } }
	}
	desc = {
		text = shadowgate.cpc.noap.desc.1
		trigger = { has_global_flag = shadowgate_prevent_ap_spawn }
	}
	picture = GFX_evt_glitchy_matrix
	show_sound = event_whispering
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = shadowgate.cpc.answer.1
		trigger = { NOT = { has_global_flag = shadowgate_prevent_ap_spawn } }
	}

	option = {
		name = shadowgate.cpc.noap.answer.1
		trigger = { has_global_flag = shadowgate_prevent_ap_spawn }
	}

	after = {
		owner = { add_monthly_resource_mult = { resource = society_research value = 2.5 } }
	}
}

fleet_event = {
	id = shadowgate_galactic.661
	title = shadowgate.cpc.title
	desc = {
		text = shadowgate.cpc.desc.2
		trigger = { NOT = { has_global_flag = shadowgate_prevent_ap_spawn } }
	}
	desc = {
		text = shadowgate.cpc.noap.desc.2
		trigger = { has_global_flag = shadowgate_prevent_ap_spawn }
	}
	picture = GFX_evt_discovered_hidden_door
	show_sound = event_big_door_opening
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = shadowgate.cpc.answer.2
		medium_artifact_reward = yes
	}

	option = {
		name = shadowgate.cpc.talisman.answer.2
		trigger = { owner = { has_relic = r_shadowgate_st } }
		hidden_effect = { set_global_flag = shadowgate_cpc_digsite_st_used }
		from = { finish_current_stage = yes }
	}
}

fleet_event = {
	id = shadowgate_galactic.662
	title = shadowgate.cpc.title
	desc = {
		text = shadowgate.cpc.desc.3
		trigger = { NOT = { has_global_flag = shadowgate_cpc_digsite_st_used } }
	}
	desc = {
		text = shadowgate.cpc.talisman.desc.3
		trigger = { has_global_flag = shadowgate_cpc_digsite_st_used }
	}
	picture = GFX_evt_ancient_artifact
	show_sound = event_finding_loot
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = shadowgate.cpc.answer.3.a
		owner = {
			hidden_effect = {
				set_variable = { which = ShadowgateSTBonus value = event_target:global_event_country }
				save_global_event_target_as = shadowgate_st_cpc_upgraded_country
				add_modifier = { modifier = shadowgate_cpc_unspoiled days = -1 multiplier = ShadowgateSTBonus } # This gets visually registered (see country modifiers ingame), but the multiplier that's set here isn't applied correctly.
				clear_variable = ShadowgateSTBonus
			}
			add_monthly_resource_mult = { resource = unity value = 5 }
			custom_tooltip = shadowgate_cpc_unspoiled_tooltip
			custom_tooltip = shadowgate_st_cpc_bugged
		}
	}

	option = {
		name = shadowgate.cpc.answer.3.b
		owner = { add_relic = r_shadowgate_cpc }
	}
}

##################################################################
# General Crisis Events
##################################################################
country_event = {
	id = shadowgate_galactic.700
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = shadowgate_disable_crisis }
		OR = {
			AND = { is_country_type = extradimensional NOR = { has_global_flag = shadowgate_exd_notified has_global_flag = shadowgate_disable_exd_crisis } }
			AND = { is_country_type = ai_empire NOR = { has_global_flag = shadowgate_ai_notified has_global_flag = shadowgate_disable_ai_crisis } }
			AND = { is_country_type = swarm NOR = { has_global_flag = shadowgate_swarm_notified has_global_flag = shadowgate_disable_swarm_crisis } }
		}
	}

	immediate = {
		switch = {
			trigger = is_country_type
			extradimensional = { set_global_flag = shadowgate_exd_notified every_galaxy_planet = { limit = { is_colonized_shadowgate = yes } planet_event = { id = shadowgate_galactic.701 days = 35 } } event_target:global_event_country = { country_event = { id = shadowgate_galactic.721 days = 36 } } }
			ai_empire = { set_global_flag = shadowgate_ai_notified every_galaxy_planet = { limit = { is_colonized_shadowgate = yes } planet_event = { id = shadowgate_galactic.702 days = 3 random = 2 } } }
			swarm = { set_global_flag = shadowgate_swarm_notified every_galaxy_planet = { limit = { is_colonized_shadowgate = yes } planet_event = { id = shadowgate_galactic.703 days = 3 random = 2 } } }
		}
		if = { limit = { exists = event_target:shadowgate_ap_country }
			event_target:shadowgate_ap_country = { set_faction_hostility = { target = root set_hostile = yes set_neutral = no set_friendly = no } }
		}
	}
}

planet_event = {
	id = shadowgate_galactic.701
	title = "TRANSMISSION"
	desc = shadowgate.exd.crisis.desc
	picture_event_data = {
		portrait = exd1
		room = "extradimensional_room"
	}
	is_triggered_only = yes

	diplomatic = yes

	trigger = { owner = { NOT = { has_country_flag = shadowgate_exd_message } } }

	immediate = { owner = { set_country_flag = shadowgate_exd_message } }

	option = {
		name = shadowgate.exd.answer
		custom_tooltip = shadowgate.crisis.effect
	}
	option = {
		name = shadowgate.crisis.answer.generic
		custom_tooltip = shadowgate.crisis.effect
	}

	after = { hidden_effect = { planet_event = { id = shadowgate_galactic.704 days = 20 random = 10 } } }
}

planet_event = {
	id = shadowgate_galactic.702
	title = "TRANSMISSION"
	desc = shadowgate.ai.crisis.desc
	picture_event_data = {
		portrait = ai_crisis_1
	}
	is_triggered_only = yes

	diplomatic = yes

	trigger = { owner = { NOT = { has_country_flag = shadowgate_ai_message } } }

	immediate = { owner = { set_country_flag = shadowgate_ai_message } }

	option = {
		name = shadowgate.ai.answer
		custom_tooltip = shadowgate.crisis.effect
	}
	option = {
		name = shadowgate.crisis.answer.generic
		custom_tooltip = shadowgate.crisis.effect
	}

	after = { hidden_effect = { planet_event = { id = shadowgate_galactic.705 days = 20 random = 10 } } }
}

planet_event = {
	id = shadowgate_galactic.703
	title = "TRANSMISSION"
	desc = {
		text = shadowgate.swarm.crisis.desc
		trigger = { owner_species = { NOR = { has_trait = trait_psionic has_trait = trait_hive_mind } } }
	}
	desc = {
		text = shadowgate.swarm.crisis.psionic.desc
		trigger = { owner_species = { OR = { has_trait = trait_psionic has_trait = trait_hive_mind } } }
	}
	picture_event_data = {
		portrait = swarm1
		room = "swarm_room"
	}
	is_triggered_only = yes

	diplomatic = yes

	trigger = { owner = { NOT = { has_country_flag = shadowgate_swarm_message } } }

	immediate = { owner = { set_country_flag = shadowgate_swarm_message } }

	option = {
		name = shadowgate.swarm.answer
		trigger = { owner_species = { NOR = { has_trait = trait_psionic has_trait = trait_hive_mind } } }
		custom_tooltip = shadowgate.crisis.effect
	}
	option = {
		name = shadowgate.swarm.answer.psionic
		trigger = { owner_species = { OR = { has_trait = trait_psionic has_trait = trait_hive_mind } } }
		custom_tooltip = shadowgate.crisis.effect
	}
	option = {
		name = shadowgate.crisis.answer.generic
		custom_tooltip = shadowgate.crisis.effect
	}

	after = { hidden_effect = { planet_event = { id = shadowgate_galactic.706 days = 20 random = 10 } } }
}

planet_event = {
	id = shadowgate_galactic.704
	title = shadowgate.general.title
	desc = shadowgate.exd.crisis.message
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	show_sound = event_red_alert
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes

	option = {
		name = shadowgate.crisis.aa.answer
	}
}

planet_event = {
	id = shadowgate_galactic.705
	title = shadowgate.general.title
	desc = shadowgate.ai.crisis.message
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	show_sound = event_red_alert
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes

	option = {
		name = shadowgate.crisis.aa.answer
	}
}

planet_event = {
	id = shadowgate_galactic.706
	title = shadowgate.general.title
	desc = shadowgate.swarm.crisis.message
	diplomatic = yes
	custom_gui = "shadowgate_event_window"
	custom_gui_option = "shadowgate_option"
	show_sound = event_red_alert
	picture_event_data = {
		portrait = shadowgate_ai
		room = "shadowgate_room"
	}
	is_triggered_only = yes

	option = {
		name = shadowgate.crisis.aa.answer
	}
}

# Prethoryn Scourge - Psionically impedes fleets exiting shadowrift terminuses.
# Destroys Prethoryn colonies on shadowgates to prevent transformation into infested planet class.
planet_event = {
	id = shadowgate_galactic.710
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_planet_flag = shadowgate_planet owner = { is_ai = yes is_country_type = swarm } }

	immediate = {
		destroy_colony = yes
	}
}

fleet_event = {
	id = shadowgate_galactic.711
	hide_window = yes
	is_triggered_only = yes

	trigger = { NOT = { has_fleet_flag = shadowrift_prethoryn_disabler } }

	immediate = { set_formation_scale = 1 create_ambient_object = { type = horror_spawn_object location = this use_3d_location = yes duration = 5 } }
}

# Extradimensionals - Invades where the veil is weakest.
# Prevents the planet from changing into a different world type if extradimensionals are bombarding it.
planet_event = {
	id = shadowgate_galactic.720
	hide_window = yes
	is_triggered_only = yes

	trigger = { planet_devastation >= 99 from = { OR = { is_country_type = extradimensional is_country_type = extradimensional_2 is_country_type = extradimensional_3 } } }

	immediate = {
		add_planet_devastation = 1
		solar_system = { save_event_target_as = shadowrift_vd_rift_system }
		planet_event = { id = shadowgate_galactic.230 }
		every_owned_pop = { kill_pop = yes }
	}
}

country_event = {
	id = shadowgate_galactic.721
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = shadowgate_exd_notified
		has_global_flag = extradimensional_invasion_happened
		NOT = { has_global_flag = extradimensional_invasion_defeated }
	}

	immediate = {
		random_system = { limit = { NOT = { has_star_flag = shadowgate_exd_spawned } OR = { has_star_flag = shadowgate_shadow_remnant has_star_flag = has_shadowrift } }
			set_timed_star_flag = { flag = shadowgate_exd_spawned days = 720 }
			closest_system = { limit = { exists = space_owner space_owner = { OR = { is_country_type = extradimensional is_country_type = extradimensional_2 is_country_type = extradimensional_3 } } }
				space_owner = { save_event_target_as = shadowgate_exd_country owner_species = { save_event_target_as = extradimensional_species } }
			}
			if = { limit = { exists = event_target:shadowgate_exd_country }
				random_system_planet = { limit = { OR = { has_planet_flag = has_shadowrift has_planet_flag = shadowgate_shadow_remnant } }
					planet_event = { id = shadowgate_galactic.723 }
				}
			}
		}
		country_event = { id = shadowgate_galactic.721 days = 240 random = 120 }
	}
}

fleet_event = {
	id = shadowgate_galactic.722
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = shadowgate_exd_notified
		has_global_flag = extradimensional_invasion_happened
		NOT = { has_global_flag = extradimensional_invasion_defeated }
		NOR = { has_fleet_flag = shadowgate_exd_fleet from = { has_star_flag = shadowgate_exd_spawned } fromfrom = { has_star_flag = shadowgate_exd_spawned } }
	}

	immediate = {
		fromfrom = { set_timed_star_flag = { flag = shadowgate_exd_spawned days = 360 } }
		from = {
			set_timed_star_flag = { flag = shadowgate_exd_spawned days = 360 }
			closest_system = { limit = { exists = space_owner space_owner = { OR = { is_country_type = extradimensional is_country_type = extradimensional_2 is_country_type = extradimensional_3 } } }
				space_owner = { save_event_target_as = shadowgate_exd_country owner_species = { save_event_target_as = extradimensional_species } }
			}
			if = { limit = { exists = event_target:shadowgate_exd_country }
				random_system_planet = { limit = { OR = { has_planet_flag = has_shadowrift has_planet_flag = shadowgate_shadow_remnant } }
					planet_event = { id = shadowgate_galactic.723 }
				}
			}
		}
	}
}

# Copied from crisis.1265 in events/crisis_events_2.txt and altered slightly - credit and thanks to Henrik Thyrwall.
planet_event = {
	id = shadowgate_galactic.723
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = extradimensional_invasion_defeated }
		OR = {
			has_planet_flag = shadowgate_shadow_remnant
			has_planet_flag = has_shadowrift
		}
	}

	immediate = {
		event_target:shadowgate_exd_country = {
			random_list = {
				25 = {
					create_leader = {
						class = admiral
						species = event_target:extradimensional_species
						name = random
						skill = 3
						traits = {
							trait = leader_trait_ethereal
						}
					}
				}
				25 = {
					create_leader = {
						class = admiral
						species = event_target:extradimensional_species
						name = random
						skill = 3
						traits = {
							trait = leader_trait_dimensional_stutter
						}
					}
				}
				50 = {
					create_leader = {
						class = admiral
						species = event_target:extradimensional_species
						name = random
						skill = 3
					}
				}
			}
			if = { limit = { is_country_type = extradimensional }
				create_fleet = {
					effect = {
						set_owner = event_target:shadowgate_exd_country
						create_ship = {
							name = random
							design = "NAME_Revenant"
							graphical_culture = "extra_dimensional_01"
						}
						assign_leader = last_created_leader
						while = {
							count = 2
							create_ship = {
								name = random
								design = "NAME_Phantom"
								graphical_culture = "extra_dimensional_01"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = random
								design = "NAME_Wraith"
								graphical_culture = "extra_dimensional_01"
							}
						}
						set_location = {
							target = root
							distance = 5
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range = 500
						set_aggro_range_measure_from = self
					}
				}
			}
			else_if = { limit = { is_country_type = extradimensional_2 }
				create_fleet = {
					effect = {
						set_owner = event_target:shadowgate_exd_country
						create_ship = {
							name = random
							design = "NAME_Huntress"
							graphical_culture = "extra_dimensional_02"
						}
						assign_leader = last_created_leader
						while = {
							count = 2
							create_ship = {
								name = random
								design = "NAME_Assassin"
								graphical_culture = "extra_dimensional_02"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = random
								design = "NAME_Predator"
								graphical_culture = "extra_dimensional_02"
							}
						}
						set_location = {
							target = root
							distance = 5
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range = 500
						set_aggro_range_measure_from = self
					}
				}
			}
			else_if = { limit = { is_country_type = extradimensional_3 }
				create_fleet = {
					effect = {
						set_owner = event_target:shadowgate_exd_country
						create_ship = {
							name = random
							design = "NAME_Eradicator"
							graphical_culture = "extra_dimensional_03"
						}
						assign_leader = last_created_leader
						while = {
							count = 2
							create_ship = {
								name = random
								design = "NAME_Annihilator"
								graphical_culture = "extra_dimensional_03"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = random
								design = "NAME_Obliterator"
								graphical_culture = "extra_dimensional_03"
							}
						}
						set_location = {
							target = root
							distance = 5
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range = 500
						set_aggro_range_measure_from = self
					}
				}
			}
		}
		last_created_fleet = { set_fleet_flag = shadowgate_exd_fleet }
	}
}

# Contingency - Disrupts resonance-based technology (shadowgates).
# AI Hub activates, disrupting everything within 5 hyperlane jumps.
country_event = {
	id = shadowgate_galactic.730
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_country_type = ai_empire from = { OR = { has_star_flag = AI_hub has_star_flag = AI_lair } } }

	immediate = {
		if = { limit = { NOT = { has_global_flag = ai_invasion_happened } } play_sound = sfx_relic_activation_shadowgate_crwt }
		set_global_flag = ai_invasion_happened # crisis.2000 testing event doesn't set this flag.
		from = {
			random_system_planet = { limit = { exists = archaeological_site archaeological_site = { is_site_type = shadowgate_crwt_digsite } } archaeological_site = { save_event_target_as = shadowgate_site } destroy_archaeological_site = event_target:shadowgate_site }
			every_system = { limit = { distance = { source = prev max_jumps <= 5 } OR = { has_star_flag = shadowgate_solar_system has_star_flag = has_shadowrift } }
				if = { limit = { has_star_flag = shadowgate_solar_system NOT = { any_system_planet = { has_modifier = pm_shadowgate_disabled } } }
					save_event_target_as = shadowrift_vd_rift_system
					random_system_planet = { limit = { has_planet_flag = shadowgate_planet } planet_event = { id = shadowgate_galactic.230 } }
				}
				else_if = { limit = { NOT = { has_star_flag = has_shadow_mooring_rift } }
					save_event_target_as = shadowrift_vd_rift_system
					switch = {
						trigger = has_star_flag
						has_shadowrift_a = { event_target:shadowgate_planet_a = { planet_event = { id = shadowgate_galactic.230 } } }
						has_shadowrift_b = { event_target:shadowgate_planet_b = { planet_event = { id = shadowgate_galactic.230 } } }
						has_shadowrift_c = { event_target:shadowgate_planet_c = { planet_event = { id = shadowgate_galactic.230 } } }
						has_shadowrift_d = { event_target:shadowgate_planet_d = { planet_event = { id = shadowgate_galactic.230 } } }
						has_shadowrift_e = { event_target:shadowgate_planet_e = { planet_event = { id = shadowgate_galactic.230 } } }
					}
				}
				else = { remove_system_shadowrift = yes }
			}
		}
	}
}

# Contingency (or CRWT user) gains a system containing a shadowgate or shadowrift.
country_event = {
	id = shadowgate_galactic.731
	hide_window = yes
	is_triggered_only = yes

	trigger = { OR = { is_country_type = ai_empire has_relic = r_shadowgate_crwt_active } from = { OR = { has_star_flag = has_shadowrift has_star_flag = shadowgate_solar_system } NOR = { has_star_flag = AI_hub has_star_flag = AI_lair } } }

	immediate = {
		from = {
			if = { limit = { has_star_flag = shadowgate_solar_system NOT = { any_system_planet = { has_modifier = pm_shadowgate_disabled } } }
				save_event_target_as = shadowrift_vd_rift_system
				random_system_planet = { limit = { has_planet_flag = shadowgate_planet } planet_event = { id = shadowgate_galactic.230 } }
			}
			else_if = { limit = { NOT = { has_star_flag = has_shadow_mooring_rift } }
				save_event_target_as = shadowrift_vd_rift_system
				switch = {
					trigger = has_star_flag
					has_shadowrift_a = { event_target:shadowgate_planet_a = { planet_event = { id = shadowgate_galactic.230 } } }
					has_shadowrift_b = { event_target:shadowgate_planet_b = { planet_event = { id = shadowgate_galactic.230 } } }
					has_shadowrift_c = { event_target:shadowgate_planet_c = { planet_event = { id = shadowgate_galactic.230 } } }
					has_shadowrift_d = { event_target:shadowgate_planet_d = { planet_event = { id = shadowgate_galactic.230 } } }
					has_shadowrift_e = { event_target:shadowgate_planet_e = { planet_event = { id = shadowgate_galactic.230 } } }
				}
			}
			else = { remove_system_shadowrift = yes }
		}
	}
}

event = {
	id = shadowgate_galactic.10000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = { limit = { has_star_flag = AI_system_2 }
			remove_star_flag = AI_hub
			remove_star_flag = AI_system_2
			random_system_planet = { limit = { has_planet_flag = machine_world_2 }
				remove_planet_flag = AI_hub
				remove_planet_flag = machine_world_2
			}
		}
		random_system = { limit = { any_neighbor_system = { has_star_flag = shadowgate_solar_system } }
			set_star_flag = AI_hub
			set_star_flag = AI_system_2
			random_system_planet = { limit = { NOT = { is_star = yes } }
				change_pc = pc_molten
				set_planet_flag = AI_hub
				set_planet_flag = machine_world_2
			}
		}
	}
}