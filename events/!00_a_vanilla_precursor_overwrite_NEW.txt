namespace = precursor
##########################
# Precursor home systems #
##########################

############
### The Vultaum Star Assembly
############

############
### The Vultaum Star Assembly
############
# Vultaum Home System Discovered
country_event = {
	id = precursor.100
	title = "precursor.100.name"
	desc = "precursor.100.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:vultaumar
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = vultaumar }
			save_event_target_as = vultaumar
			random_system_planet = {
				limit = { has_planet_flag = vultaum_homeworld }
				# Start -guilli
				# broken planet thus we give it a guaranteed shipyards and a deposit bonus
				random_moon = {
					if = {
						limit = {
							NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
						}
						add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
						solar_system = {
							set_star_flag = gpm_precursor_shipyards_star
						}
						gpm_set_shipyards_objects = yes
						set_planet_flag = "gpm_is_precursor_world"
					}
				}
			}

			# End -guilli
		}
		observer_event = { id = observer.56 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "vultaum_chain"
		begin_event_chain = {
			event_chain = "vultaum_homeworld_chain"
			target = ROOT
		}
		create_point_of_interest = {
			id = vultaum.1
			name = "vultaum_1_poi"
			desc = "vultaum_1_poi_desc"
			event_chain = vultaum_homeworld_chain
			location = event_target:vultaumar
		}
	}
}

############
### The Yuht Empire
############
# Yuht Home System Discovered 
country_event = {
	id = precursor.600
	title = "precursor.600.name"
	desc = "precursor.600.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:yuhtaan
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = yuhtaan }
			save_event_target_as = yuhtaan
			random_system_planet = {
				limit = { has_planet_flag = yuht_homeworld }
				# Start -guilli
				# broken planet thus we give it a guaranteed shipyards and a deposit bonus
				random_moon = {
					if = {
						limit = {
							NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
						}
						add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
						solar_system = {
							set_star_flag = gpm_precursor_shipyards_star
						}
						gpm_set_shipyards_objects = yes
						set_planet_flag = "gpm_is_precursor_world"
					}
				}
			}
			# End -guilli
		}
		observer_event = { id = observer.57 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "yuht_chain"
		begin_event_chain = {
			event_chain = "yuht_homeworld_chain"
			target = ROOT
		}
		create_point_of_interest = {
			id = yuht.1
			name = "yuht_1_poi"
			desc = "yuht_1_poi_desc"
			event_chain = yuht_homeworld_chain
			location = event_target:yuhtaan
		}
	}
}

############
### The First League
############
# First League Home System Discovered
country_event = {
	id = precursor.1100
	title = "precursor.1100.name"
	desc = "precursor.1100.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:fen_habbanis
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = fen_habbanis }
			save_event_target_as = fen_habbanis
			# Start -guilli
			random_system_planet = {
				limit = { has_planet_flag = first_league_homeworld }
				set_planet_flag = "gpm_is_precursor_world"
				# ecumopolis world.
				if = {
					limit = {
						NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
					}
					add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
					solar_system = {
						set_star_flag = gpm_precursor_shipyards_star
					}
				}
				gpm_set_shipyards_objects = yes
			}
			# End -guilli
		}
		observer_event = { id = observer.58 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "first_league_chain"
		begin_event_chain = {
			event_chain = "first_league_homeworld_chain"
			target = ROOT
		}
		create_point_of_interest = {
			id = first_league.1
			name = "first_league_1_poi"
			desc = "first_league_1_poi_desc"
			event_chain = first_league_homeworld_chain
			location = event_target:fen_habbanis
		}
	}
}

############
### The Irassian Concordat
############
# Irassian Home System Discovered
country_event = {
	id = precursor.1600
	title = "precursor.1600.name"
	desc = "precursor.1600.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:irass
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = irass }
			save_event_target_as = irass
			# Start -guilli
			random_system_planet = {
				limit = { has_planet_flag = irassian_homeworld }
				set_planet_flag = "gpm_is_precursor_world"
				# normal planet thus we give it a guaranteed shipyards and two random precursor modifiers.
				if = {
					limit = {
						NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
					}
					add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
					solar_system = {
						set_star_flag = gpm_precursor_shipyards_star
					}
				}
				gpm_set_shipyards_objects = yes
			}
			# End -guilli
		}
		observer_event = { id = observer.59 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "irassian_chain"
		begin_event_chain = {
			event_chain = "irassian_homeworld_chain"
			target = ROOT
		}
		hidden_effect = {
			create_point_of_interest = {
				id = irassian.1
				name = "irassian_1_poi"
				desc = "irassian_1_poi_desc"
				event_chain = irassian_homeworld_chain
				location = event_target:irass
			}
		}
	}
}

############
### Cybrex
############
# Cybrex Home System Discovered
country_event = {
	id = precursor.2100
	title = "precursor.2100.name"
	desc = "precursor.2100.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:cybrex
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = cybrex }
			save_event_target_as = cybrex
			# Start -guilli
			random_system_planet = {
				limit = { is_star = yes }
				save_event_target_as = gpm_cybrex_shipyards
				add_modifier = { modifier = Singing_Star days = -1 }
				add_modifier = { modifier = Precursor_Star_Filter days = -1 }
				clear_deposits = yes
				if = {
					limit = {
						NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
					}
					add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
					solar_system = {
						set_star_flag = gpm_precursor_shipyards_star
					}
					
					if = { 
						limit = { 
							AND = {
								has_global_flag = "has_real_space_mod"
								NOT = { has_global_flag = "has_real_space_mc_mod" }
							}
						}
						create_ambient_object = {
							type = gpm_precursor_shipyards_star_rs
							location = this
						}
					}
					if = {
						limit = { NOT = { has_global_flag = has_real_space_mod } }
						create_ambient_object = {
							type = gpm_precursor_shipyards_star
							location = this
						}
					}
					
					last_created_ambient_object = {
						set_location = {
							target = event_target:gpm_cybrex_shipyards
						}
						set_ambient_object_flag = gpm_precursor_shipyard_flag
					}
					
					set_planet_flag = "gpm_is_precursor_world"
				}
			}
			# End -guilli
		}
		observer_event = { id = observer.60 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "cybrex_chain"
		begin_event_chain = {
			event_chain = "cybrex_homeworld_chain"
			target = ROOT
		}
		create_point_of_interest = {
			id = cybrex.1
			name = "cybrex_1_poi"
			desc = "cybrex_1_poi_desc"
			event_chain = cybrex_homeworld_chain
			location = event_target:cybrex
		}
	}
}

# country_event = {
	# id = precursor.99999
	# hide_window = yes
	# is_triggered_only = yes

	# immediate = {
		# random_system = {
			# limit = { has_star_flag = cybrex }
			# gpm_cybrex_ringworld_switch = yes
			# gpm_cybrex_ringworld_switch = yes
			# gpm_cybrex_ringworld_switch = yes
			# gpm_cybrex_ringworld_switch = yes

			# random_system_planet = {
				# limit = { 
					# is_planet_class = pc_ringworld_habitable
					# NOT = { has_planet_flag = gpm_cybrex_habitable_set }
				# }
				# add_modifier = { days = -1 modifier = Precursor_Capital_Complex }
				# set_planet_flag = gpm_cybrex_habitable_set
				# set_planet_flag = gpm_cybrex_habitable_1
				# set_name = "Cybrex Alpha"
			# }
			# random_system_planet = {
				# limit = { 
					# is_planet_class = pc_ringworld_habitable
					# NOT = { has_planet_flag = gpm_cybrex_habitable_set }
				# }
				# add_modifier = { days = -1 modifier = Precursor_Communication_Hub }
				# set_planet_flag = gpm_cybrex_habitable_set
				# set_planet_flag = gpm_cybrex_habitable_2
				# set_name = "Cybrex Beta"
			# }
			# random_system_planet = {
				# limit = { 
					# is_planet_class = pc_ringworld_habitable
					# NOT = { has_planet_flag = gpm_cybrex_habitable_set }
				# }
				# add_modifier = { days = -1 modifier = Precursor_Singularity_Drive }
				# set_planet_flag = gpm_cybrex_habitable_set
				# set_planet_flag = gpm_cybrex_habitable_3
				# set_name = "Cybrex Omega"
			# }
			# random_system_planet = {
				# limit = { 
					# is_planet_class = pc_ringworld_habitable
					# NOT = { has_planet_flag = gpm_cybrex_habitable_set }
				# }
				# add_modifier = { days = -1 modifier = Precursor_Mechs }
				# set_planet_flag = gpm_cybrex_habitable_set
				# set_planet_flag = gpm_cybrex_habitable_4
				# set_name = "Cybrex Gamma"
			# }
			# random_system_planet = {
				# limit = { has_deposit = no is_planet_class = pc_ringworld_seam NOT = { has_global_flag = gpm_modifiers_precursor_disabled } }
				# add_deposit = gpm_arcane_technology_deposit
			# }
			# random_system_planet = {
				# limit = { has_deposit = no is_planet_class = pc_ringworld_seam NOT = { has_global_flag = gpm_modifiers_precursor_disabled } }
				# add_deposit = gpm_arcane_technology_deposit
			# }
			# random_system_planet = {
				# limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				# add_deposit = d_engineering_5
			# }
			# random_system_planet = {
				# limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				# add_deposit = d_physics_5
			# }
			# random_system_planet = {
				# limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				# add_deposit = d_society_5
			# }
			# random_system_planet = {
				# limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				# add_deposit = d_alloys_3
			# }
			# random_system_planet = {
				# limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				# add_deposit = d_alloys_3
			# }
			# random_system_planet = {
				# limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				# add_deposit = d_living_metal_deposit
			# }
			# random_system_planet = {
				# limit = { is_star = yes }
				# add_deposit = d_energy_5
			# }
		# }
	# }
# }




##############################
# Precursor discovery events #
##############################
# Prison Complex
ship_event = {
	id = precursor.1055
	title = "precursor.1055.name"
	desc = "precursor.1055.desc"
	picture = GFX_evt_outpost
	location = FROM
	trackable = yes
	
	is_triggered_only = yes 
	
	immediate = {
		hidden_effect = {
			owner = { set_country_flag = first_league_11 }
		}
	}
	
	option = {
		name = INTERESTING
		from = {
			add_modifier = { days = -1 modifier = "Precursor_Prison_Planet" }
			enable_special_project = {
				name = "FIRST_LEAGUE_ARCHEOLOGY_11"
				location = this
				owner = root.owner
			}
			hidden_effect = {
				set_planet_flag = "gpm_is_precursor_world"
				if = {
					limit = { gpm_is_planet_uninhabitable = yes }
					every_deposit = {
						remove_deposit = yes
					}
					add_modifier = { modifier = terraforming_candidate_precursor days = -1 }
					set_planet_flag = terraforming_candidate_precursor
					add_deposit = gpm_precursor_unity_deposit
				}
				if = {
					limit = { 
						gpm_is_planet_habitable = yes
						gpm_has_precursor_modifiers = yes
						NOT = { has_planet_flag = gpm_has_precursor_ruins_feature }
					}
					gpm_spawn_precursor_feature = yes
					set_planet_flag = gpm_has_precursor_ruins_feature
				}
				gpm_colour_planet_name = yes
			}
		}
		hidden_effect = { ship_event = { id = gpm_survey_precursors.150 } }
	}
}

##############################
# Precursor AI Enablers #
##############################


