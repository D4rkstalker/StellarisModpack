namespace = rune_holders

## check if anybody has a rune and add a triait to their leader
event = {
	id = rune_holders.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
	
	every_playable_country = {
		every_owned_leader = {
			limit = { 
				 OR = {
				has_ruler_trait = leader_trait_ruler_arcane_holder
				has_ruler_trait = leader_trait_ruler_illusion_holder
				has_ruler_trait = leader_trait_ruler_mighty_holder
				has_ruler_trait = leader_trait_ruler_invisibility_holder
				has_ruler_trait = leader_trait_ruler_regeneration_holder
				has_ruler_trait = leader_trait_ruler_haste_holder
				 
				 }			
			}
				remove_ruler_trait = leader_trait_ruler_arcane_holder
				remove_ruler_trait = leader_trait_ruler_illusion_holder
				remove_ruler_trait = leader_trait_ruler_mighty_holder
				remove_ruler_trait = leader_trait_ruler_invisibility_holder
				remove_ruler_trait = leader_trait_ruler_regeneration_holder
				remove_ruler_trait = leader_trait_ruler_haste_holder
			}
 
		if = { limit = { has_relic = r_haste_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_haste_holder }
		} 
		if = { limit = { has_relic = r_regeneration_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_regeneration_holder }
		} 
		if = { limit = { has_relic = r_invisibility_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_invisibility_holder }
		} 
		if = { limit = { has_relic = r_damage_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_mighty_holder }
		} 
		if = { limit = { has_relic = r_illusion_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_illusion_holder }
		} 
		if = { limit = { has_relic = r_arcane_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_arcane_holder }
		}
	
	
	}
	
		event_target:target_collectors = {
		every_owned_leader = {
			limit = { 
				 OR = {
				has_ruler_trait = leader_trait_ruler_arcane_holder
				has_ruler_trait = leader_trait_ruler_illusion_holder
				has_ruler_trait = leader_trait_ruler_mighty_holder
				has_ruler_trait = leader_trait_ruler_invisibility_holder
				has_ruler_trait = leader_trait_ruler_regeneration_holder
				has_ruler_trait = leader_trait_ruler_haste_holder
				 
				 }			
			}
				remove_ruler_trait = leader_trait_ruler_arcane_holder
				remove_ruler_trait = leader_trait_ruler_illusion_holder
				remove_ruler_trait = leader_trait_ruler_mighty_holder
				remove_ruler_trait = leader_trait_ruler_invisibility_holder
				remove_ruler_trait = leader_trait_ruler_regeneration_holder
				remove_ruler_trait = leader_trait_ruler_haste_holder
			}
			
		if = { limit = { has_global_flag = r_haste_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_haste_holder }
		} 
		if = { limit = { has_global_flag = r_regeneration_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_regeneration_holder }
		} 
		if = { limit = { has_global_flag = r_invisibility_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_invisibility_holder }
		} 
		if = { limit = { has_global_flag = r_damage_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_mighty_holder }
		} 
		if = { limit = { has_global_flag = r_illusion_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_illusion_holder }
		} 
		if = { limit = { has_global_flag = r_arcane_rune  } 
		ruler = { add_ruler_trait = leader_trait_ruler_arcane_holder }
		}		
			
		
		}

	
	
	}
}