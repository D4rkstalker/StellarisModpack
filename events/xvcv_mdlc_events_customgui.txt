namespace = xvcv_mdlc_customgui

#leader making
country_event = {
	id = xvcv_mdlc_customgui.1
	title = "xvcv_mdlc_customgui.1.name"
	desc = "xvcv_mdlc_customgui.1.desc"
	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = { portrait = root.ruler } #to remove "[06:59:30][portraitobject.cpp:493]: Failed to find portrait selector" error log

	immediate = {
		xvcv_mdlc_leader_making_clear_traits_variables_effect = yes
		set_variable = { which = xvcv_mdlc_leader_making_start_number value = 1 } #one-time only
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_2_granted } any_owned_leader = { has_skill >= 2 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_2_granted
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_3_granted } any_owned_leader = { has_skill >= 3 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_3_granted
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_4_granted } any_owned_leader = { has_skill >= 4 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_4_granted
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_5_granted } any_owned_leader = { has_skill >= 5 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_5_granted
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_6_granted } any_owned_leader = { has_skill >= 6 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_6_granted
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_7_granted } any_owned_leader = { has_skill >= 7 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_7_granted
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_8_granted } any_owned_leader = { has_skill >= 8 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_8_granted
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_9_granted } any_owned_leader = { has_skill >= 9 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_9_granted
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_set_skill_level_10_granted } any_owned_leader = { has_skill >= 10 } }
			set_country_flag = xvcv_mdlc_leader_making_set_skill_level_10_granted
		}
	}
	custom_gui = xvcv_mdlc_leader_making

	option = {
		name = xvcv_mdlc_customgui.1.a
	}
}
#'xvcv_mdlc_tech_leader_making_improvement' techs effect event
country_event = {
	id = xvcv_mdlc_customgui.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			last_increased_tech = xvcv_mdlc_tech_leader_making_improvement
			last_increased_tech = xvcv_mdlc_tech_leader_making_improvement_2
		}
	}

	immediate = {
		change_variable = { which = xvcv_mdlc_leader_making_trait_points value = 1 }
		change_variable = { which = xvcv_mdlc_leader_making_max_traits_number value = 1 }
	}
}
#core modifying
country_event = {
	id = xvcv_mdlc_customgui.3
	title = "xvcv_mdlc_customgui.1.name"
	desc = "xvcv_mdlc_customgui.1.desc"
	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = { portrait = root.ruler }

	immediate = {
		#check the ruler's leader class every time the player opens this customgui #because it could be changed in between
		#clear the previous flag
		switch = {
			trigger = has_country_flag
			xvcv_mdlc_core_modifying_ruler_leader_class_governor = { remove_country_flag = xvcv_mdlc_core_modifying_ruler_leader_class_governor }
			xvcv_mdlc_core_modifying_ruler_leader_class_scientist = { remove_country_flag = xvcv_mdlc_core_modifying_ruler_leader_class_scientist }
			xvcv_mdlc_core_modifying_ruler_leader_class_admiral = { remove_country_flag = xvcv_mdlc_core_modifying_ruler_leader_class_admiral }
			xvcv_mdlc_core_modifying_ruler_leader_class_general = { remove_country_flag = xvcv_mdlc_core_modifying_ruler_leader_class_general }
		}
		#and check the leader class again
		ruler = {
			switch = {
				trigger = leader_class
				#sadly, this won't support modded leader classes
				governor = { prev = { set_country_flag = xvcv_mdlc_core_modifying_ruler_leader_class_governor } }
				scientist = { prev = { set_country_flag = xvcv_mdlc_core_modifying_ruler_leader_class_scientist } }
				admiral = { prev = { set_country_flag = xvcv_mdlc_core_modifying_ruler_leader_class_admiral } }
				general = { prev = { set_country_flag = xvcv_mdlc_core_modifying_ruler_leader_class_general } }
			}
		}
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_core_modifying_trait_points_set } }
			set_country_flag = xvcv_mdlc_core_modifying_trait_points_set #one-time only
			xvcv_mdlc_core_modifying_clear_trait_variables_effect = yes
		}
	}
	custom_gui = xvcv_mdlc_core_modifying

	option = {
		name = xvcv_mdlc_customgui.1.a
	}
}
#'xvcv_mdlc_tech_core_modifying_improvement' techs effect event
country_event = {
	id = xvcv_mdlc_customgui.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			last_increased_tech = xvcv_mdlc_tech_core_modifying_improvement
			last_increased_tech = xvcv_mdlc_tech_core_modifying_improvement_2
		}
	}

	immediate = {
		change_variable = { which = xvcv_mdlc_core_modifying_trait_points value = 1 }
		change_variable = { which = xvcv_mdlc_core_modifying_max_traits_number value = 1 }
	}
}
#reset core modifying variables when a new ruler drone is set
country_event = {
	id = xvcv_mdlc_customgui.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = xvcv_mdlc_core_modifying_trait_points_set
	}

	immediate = {
		xvcv_mdlc_core_modifying_clear_trait_variables_effect = yes
	}
}