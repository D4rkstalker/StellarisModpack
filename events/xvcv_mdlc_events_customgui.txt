namespace = xvcv_mdlc_customgui

#leader making
country_event = {
	id = xvcv_mdlc_customgui.1
	title = "xvcv_mdlc_customgui.1.name"
	desc = "xvcv_mdlc_customgui.1.desc"
	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		portrait = ruler #to remove "[06:59:30][portraitobject.cpp:493]: Failed to find portrait selector" error log
	}

	immediate = {
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_trait_points_set } }
			set_country_flag = xvcv_mdlc_leader_making_trait_points_set
			set_variable = {
				which = xvcv_mdlc_leader_making_trait_points
				value = 3 #max traits number
			}
			if = {
				limit = { has_technology = xvcv_mdlc_tech_leader_making_improvement }
				change_variable = {
					which = xvcv_mdlc_leader_making_trait_points
					value = 1 #increase max traits number by 1
				}
			}
		}
		xvcv_mdlc_leader_making_set_skill_level_granted_effect = yes
	}
	custom_gui = xvcv_mdlc_leader_making

	option = {
		name = xvcv_mdlc_customgui.1.a
	}
}
country_event = {
	id = xvcv_mdlc_customgui.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		last_increased_tech = xvcv_mdlc_tech_leader_making_improvement
	}

	immediate = {
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_leader_making_window_opened } }
			set_variable = {
				which = xvcv_mdlc_leader_making_trait_points
				value = 4
			}
			else = { #if the leader making gui is opened and the research is finished #rare case but possible
				change_variable = {
					which = xvcv_mdlc_leader_making_trait_points
					value = 1
				}
			}
		}
	}
}
#core modifying
country_event = {
	id = xvcv_mdlc_customgui.3
	title = "xvcv_mdlc_customgui.1.name"
	desc = "xvcv_mdlc_customgui.1.desc"
	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		portrait = ruler #to remove "[06:59:30][portraitobject.cpp:493]: Failed to find portrait selector" error log
	}

	immediate = {
		if = {
			limit = { NOT = { has_country_flag = xvcv_mdlc_core_modifying_trait_points_set } }
			set_country_flag = xvcv_mdlc_core_modifying_trait_points_set
			change_variable = { which = xvcv_mdlc_core_modifying_trait_points value = 4 } #traits points
			change_variable = { which = xvcv_mdlc_core_modifying_max_traits_number value = 3 } #max traits number
		}
	}
	custom_gui = xvcv_mdlc_core_modifying

	option = {
		name = xvcv_mdlc_customgui.1.a
	}
}
country_event = {
	id = xvcv_mdlc_customgui.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		last_increased_tech = xvcv_mdlc_tech_core_modifying_improvement
	}

	immediate = {
		change_variable = { which = xvcv_mdlc_core_modifying_trait_points value = 1 }
		change_variable = { which = xvcv_mdlc_core_modifying_max_traits_number value = 1 }
	}
}
#'xvcv_mdlc_ruler_trait_memory_backup' trait effect event
country_event = {
	id = xvcv_mdlc_customgui.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = { has_trait = xvcv_mdlc_ruler_trait_memory_backup }
	}

	immediate = {
		clone_leader = { target = from }
		assign_leader = last_created_leader
	}
}
#when a new ruler drone is set
country_event = {
	id = xvcv_mdlc_customgui.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = xvcv_mdlc_core_modifying_trait_points_set
	}

	immediate = {
		set_variable = { which = xvcv_mdlc_core_modifying_trait_points value = 4 }
		set_variable = { which = xvcv_mdlc_core_modifying_max_traits_number value = 3 }
		if = {
			limit = { has_technology = xvcv_mdlc_tech_core_modifying_improvement }
			change_variable = { which = xvcv_mdlc_core_modifying_trait_points value = 1 }
			change_variable = { which = xvcv_mdlc_core_modifying_max_traits_number value = 1 }
		}
	}
}