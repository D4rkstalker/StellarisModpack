
namespace = ver

### New subject empire

# ver.10: Triggered by on_war_ended
country_event = {
	id = ver.10
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				is_country_type = default
				is_overlord = yes
				any_subject = {
					OR = {
						is_subject_type = vassal
						is_subject_type = subsidiary
					}
				}
			}
			every_subject = {
				limit = {
					OR = {
						is_subject_type = vassal
						is_subject_type = subsidiary
					}
				}
				country_event = { id = ver.11 days = 1 }
			}
		}
	}
}

# ver.11: Call event for overlord. Triggered by ver.10
country_event = {
	id = ver.11
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		overlord = {
			is_country_type = default
		}
	}

	immediate = {
		overlord = {
			if = {
				limit = { NOT = { has_authority = auth_corporate } }
				country_event = { id = ver.100 }
			}
			else_if = {
				limit = { has_authority = auth_corporate }
				country_event = { id = ver.101 }
			}
		}
	}
}

# ver.100: Decide which kind of subject empire the new vassal will become. Triggered by ver.11
country_event = {
	id = ver.100
	title = ver.100.name
	desc = ver.100.desc
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation
	location = from

	is_triggered_only = yes

	# Transform into Puppet State (Authoritarian)
	option = {
		name = ver.100.puppet
		custom_tooltip = ver.100.puppet.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_authoritarian
				has_ethic = ethic_fanatic_authoritarian
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_authoritarian = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_authoritarian
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_shadow_council
			}
			modifier = {
				factor = 0.5
				is_xenophile = yes
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verpuppet
				}
				add_modifier = { modifier = ver_puppet_state days = -1}
			}
		}
	}

	# Transform into Sister Republic (Egalitarian)
	option = {
		name = ver.100.sister
		custom_tooltip = ver.100.sister.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_egalitarian
				has_ethic = ethic_fanatic_egalitarian
				has_valid_civic = civic_feudal_realm
			}
			from = {
				NOT = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_egalitarian = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_egalitarian
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_beacon_of_liberty
			}
			modifier = {
				factor = 10
				has_ai_personality = democratic_crusaders
			}
			modifier = {
				factor = 0.5
				is_xenophobe = yes
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = versister
				}
				if = {
					limit = {	has_ethic = ethic_fanatic_authoritarian }
					change_government = {
						authority = auth_dictatorial
						civics = {
							civic = civic_staged_elections
							civic = civic_police_state
						}
					}
				}
				else_if = {
					limit = {	has_ethic = ethic_authoritarian	}
					change_government = {
						authority = auth_oligarchic
						civics = {
							civic = civic_staged_elections
							civic = random
						}
					}
				}
				else_if = {
					limit = {
						is_authoritarian = no
						NOT = { has_authority = auth_democratic }
					}
					change_government = {
						authority = auth_democratic
					}
				}
			}
		}
	}

	# Transform into Jr. Partner (Materialist)
	option = {
		name = ver.100.jrpartner
		custom_tooltip = ver.100.jrpartner.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_materialist = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_materialist
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_technocracy
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verjrpartner
				}
			}
		}
	}

	# Transform into Foederatus (Militarist)
	option = {
		name = ver.100.foederatus
		custom_tooltip = ver.100.foederatus.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
				has_valid_civic = civic_feudal_realm
			}
			from = {
				is_pacifist = no
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_militarist = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_militarist
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_warrior_culture
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verfoederatus
				}
				add_modifier = { modifier = ver_military_subsidies days = -1 }
			}
		}
	}

	# Transform into Autonomous Region (Pacifist)
	option = {
		name = ver.100.autonomous
		custom_tooltip = ver.100.autonomous.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_pacifist
				has_valid_civic = civic_machine_servitor
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = {
					is_pacifist = yes
					has_valid_civic = civic_machine_servitor
				}
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_pacifist
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_agrarian_idyll
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verautonomous
				}
				add_modifier = { modifier = ver_demilitarized days = -1 }
			}
		}
	}

	# Transform into Disciple (Spiritualist)
	option = {
		name = ver.100.disciple
		custom_tooltip = ver.100.disciple.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_spiritualist = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_spiritualist
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_exalted_priesthood
			}
			modifier = {
				factor = 10
				has_ai_personality = evangelising_zealots
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verdisciple
				}
				add_modifier = { modifier = ver_overlord_indoctrination days = -1}
			}
		}
	}

	# Transform into Beneficiary (Xenophile)
	option = {
		name = ver.100.beneficiary
		custom_tooltip = ver.100.beneficiary.tooltip
		trigger = {
			OR = {
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
				has_valid_civic = civic_feudal_realm
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_xenophile = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophile
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_free_haven
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verbeneficiary
				}
			}
		}
	}

	# Transform into Serf (Xenophobe)
	option = {
		name = ver.100.serf
		custom_tooltip = ver.100.serf.tooltip
		trigger = {
			has_ethic = ethic_xenophobe
			has_ethic = ethic_fanatic_xenophobe
			has_valid_civic = civic_feudal_realm
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				is_xenophobe = no
			}
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophobe
			}
			modifier = {
				factor = 3
				has_valid_civic = civic_slaver_guilds
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verserf
				}
			}
		}
	}

	# Transform into Appendage (Hive Mind)
	option = {
		name = ver.100.appendage
		custom_tooltip = ver.100.appendage.tooltip
		trigger = { has_authority = auth_hive_mind }
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_authority = auth_hive_mind }
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verappendage
				}
			}
		}
	}

	# Transform into Organic Auxiliary (Machine Intelligence)
	option = {
		name = ver.100.organic
		custom_tooltip = ver.100.organic.tooltip
		trigger = {
			has_authority = auth_machine_intelligence
			NOT = { has_valid_civic = civic_machine_servitor }
			from = { NOT = { has_authority = auth_machine_intelligence } }
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = {
					has_authority = auth_machine_intelligence
					NOT = { has_valid_civic = civic_machine_servitor }
				}
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verorganic
				}
			}
		}
	}

	# Transform into Parallel Processor (Machine Intelligence)
	option = {
		name = ver.100.parallel
		custom_tooltip = ver.100.parallel.tooltip
		trigger = {
			has_authority = auth_machine_intelligence
			from = { has_authority = auth_machine_intelligence }
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = {
					has_authority = auth_machine_intelligence
					from = {has_authority = auth_machine_intelligence }
				}
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verparallel
				}
			}
			country_event = { id = vermain.13 }
		}
	}

	# Transform into Blood Tributary (Slaver or Barbaric)
	option = {
		name = ver.100.blood
		custom_tooltip = ver.100.blood.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_barbaric_despoilers
				has_valid_civic = civic_slaver_guilds
			}
			NOT = { any_subject = { is_subject_type = verblood } }
			From = { NOT = { has_authority = auth_machine_intelligence } }
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = {
					has_valid_civic = civic_barbaric_despoilers
					has_valid_civic = civic_slaver_guilds
				}
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = ROOT
					subject_type = verblood
				}
			}
			country_event = { id = ver.40 }
		}
	}
}

# ver.101: Decide which kind of subject empire the new subsidiary will become. Triggered by ver.11
country_event = {
	id = ver.101
	title = ver.100.name
	desc = ver.100.desc
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation
	location = From

	is_triggered_only = yes

	# Keep it as a subsidiary
	option = {
		name = ver.101.subsidiary
		custom_tooltip = ver.101.subsidiary.tooltip
		ai_chance = {
			factor = 100
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = versubsidiary
				}
			}
		}
	}

	# Transform into Devotee (Brand Loyalty)
	option = {
		name = ver.101.devotee
		custom_tooltip = ver.101.devotee.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_brand_loyalty
				has_valid_civic = civic_franchising
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_valid_civic = civic_brand_loyalty }
			}
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = verdevotee
				}
			}
		}
	}

	# Transform into Kobun (Criminal Heritage)
	option = {
		name = ver.101.kobun
		custom_tooltip = ver.101.kobun.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_criminal_heritage
				has_valid_civic = civic_franchising
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_valid_civic = civic_criminal_heritage }
			}
		}
		hidden_effect = {
			from = {
				set_subject_of = {
					who = Root
					subject_type = verkobun
				}
			}
			add_modifier = { modifier = ver_kobun_malus days = -1 }
		}
	}

	# Transform into Supplier (Free Traders)
	option = {
		name = ver.101.supplier
		custom_tooltip = ver.101.supplier.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_free_traders
				has_valid_civic = civic_franchising
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_valid_civic = civic_free_traders }
			}
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = versupplier
				}
			}
		}
	}

	# Transform into Worshipper (Gospel of the Masses)
	option = {
		name = ver.101.worshipper
		custom_tooltip = ver.101.worshipper.tooltip
		trigger = { has_valid_civic = civic_gospel_of_the_masses }
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_valid_civic = civic_gospel_of_the_masses }
			}
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = verworshipper
				}
				add_modifier = { modifier = ver_overlord_indoctrination days = -1 }
			}
		}
	}

	# Transform into Debtor (Indentured Assets)
	option = {
		name = ver.101.debtor
		custom_tooltip = ver.101.debtor.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_indentured_assets
				AND = {
					has_valid_civic = civic_franchising
					has_policy_flag = slavery_allowed
				}
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_valid_civic = civic_indentured_assets }
			}
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = verdebtor
				}
			}
			country_event = { id = ver.40 }
		}
	}

	# Transform into subscriber (Media Conglomerate)
	option = {
		name = ver.101.subscriber
		custom_tooltip = ver.101.subscriber.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_media_conglomerate
				has_valid_civic = civic_franchising
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_valid_civic = civic_media_conglomerate }
			}
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = versubscriber
				}
			}
		}
	}

	# Transform into Arms Dealer (Private Military Companies or Naval Contractors)
	option = {
		name = ver.101.armsdealer
		custom_tooltip = ver.101.armsdealer.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_private_military_companies
				has_valid_civic = civic_naval_contractors
				has_valid_civic = civic_franchising
			}
			From = {
				is_pacifist = no
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = {
					has_valid_civic = civic_private_military_companies
					has_valid_civic = civic_naval_contractors
				}
			}
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = verarmsdealer
				}
				add_modifier = { modifier = ver_military_subsidies days = -1 }
			}
		}
	}

	# Transform into Subcontractor (Private Prospectors)
	option = {
		name = ver.101.subcontractor
		custom_tooltip = ver.101.subcontractor.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_private_prospectors
				has_valid_civic = civic_franchising
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { has_valid_civic = civic_private_prospectors }
			}
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = versubcontractor
				}
			}
		}
	}

	# Transform into Dependency (Trading Posts or Ruthless Competition)
	option = {
		name = ver.101.dependency
		custom_tooltip = ver.101.dependency.tooltip
		trigger = {
			OR = {
				has_valid_civic = civic_trading_posts
				has_valid_civic = civic_ruthless_competition
				has_valid_civic = civic_franchising
			}
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = {
					has_valid_civic = civic_trading_posts
					has_valid_civic = civic_ruthless_competition
				}
			}
		}
		hidden_effect = {
			From = {
				set_subject_of = {
					who = Root
					subject_type = verdependency
				}
			}
		}
	}
}

### Subjects taxation

# ver.20: Remove all taxes. Called by policy change.
country_event = {
	id = ver.20
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_subject = {
			ver_remove_overlord_taxes = yes
		}
		ver_remove_taxes_bonuses = yes
	}
}

# ver.21: Apply light taxes. Called by policy change.
country_event = {
	id = ver.21
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_subject = {
			limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
			ver_remove_overlord_taxes = yes
			add_modifier = { modifier = ver_light_overlord_taxes days = -1 }
		}
		country_event = { id = vermain.20 }
	}
}

# ver.22: Apply moderate taxes. Called by policy change.
country_event = {
	id = ver.22
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_subject = {
			limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
			ver_remove_overlord_taxes = yes
			add_modifier = { modifier = ver_moderate_overlord_taxes days = -1 }
		}
		country_event = { id = vermain.20 }
	}
}

# ver.23: Apply heavy overlord taxes. Called by policy change.
country_event = {
	id = ver.23
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_subject = {
			limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
			ver_remove_overlord_taxes = yes
			add_modifier = { modifier = ver_heavy_overlord_taxes days = -1 }
		}
		country_event = { id = vermain.20 }
	}
}

# ver.24: Apply burdensome overlord taxes. Called by policy change.
country_event = {
	id = ver.24
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_subject = {
			limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
			ver_remove_overlord_taxes = yes
			add_modifier = { modifier = ver_burdensome_overlord_taxes days = -1 }
		}
		country_event = { id = vermain.20 }
	}
}

### Proxy Wars

# ver.30: Save Puppet States as event targets
country_event = {
	id = ver.30
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		save_event_target_as = ver_puppeteer # For use later
		set_variable = { which = ver_total_puppet_states value = 0 }

		# Count how many valid Puppet States there are
		every_subject = {
			limit = {
				OR = {
					is_subject_type = verpuppet
					is_subject_type = verkobun
				}
				is_at_war = no
				any_neighbor_country = {
					is_country_type = default
					NOR = {
						is_same_value = event_target:ver_puppeteer
						has_defensive_pact = event_target:ver_puppeteer
						is_in_federation_with = event_target:ver_puppeteer
						has_association_status = event_target:ver_puppeteer
						AND = {
							is_subject = yes
							OR = {
								overlord = { is_same_value = event_target:ver_puppeteer }
								overlord = { has_defensive_pact = event_target:ver_puppeteer }
								overlord = { is_in_federation_with = event_target:ver_puppeteer }
								overlord = { has_association_status = event_target:ver_puppeteer }
							}
						}
					}
				}
			}
			set_country_flag = ver_puppet_counted
			overlord = { change_variable = { which = ver_total_puppet_states value = 1 } }
		}

		# Next, we save each puppet as an Event Target
		# As the scripting language doesn't have proper loops, we use a lot of ifs and hope no one ever has more than 10 puppets.
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 1 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_1
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 2 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_2
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 3 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_3
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 4 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_4
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 5 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_5
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 6 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_6
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 7 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_7
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 8 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_8
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 9 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_9
			}
		}
		if = {
			limit = { check_variable = { which = ver_total_puppet_states value >= 10 } }
			random_subject = {
				limit = { has_country_flag = ver_puppet_counted }
				remove_country_flag = ver_puppet_counted
				save_event_target_as = puppet_10
			}
		}

		country_event = { id = ver.31 }
	}
}

# ver.31: List Puppet States
country_event = {
	id = ver.31
	title = ver.31.name
	desc = {
		trigger = { check_variable = { which = ver_total_puppet_states value > 0 } }
		text = ver.31.desc
	}
	desc = {
		trigger = { check_variable = { which = ver_total_puppet_states value = 0 } }
		text = ver.31.desc.fail
	}
	picture = GFX_evt_board_meeting
	show_sound = event_laboratory_sound
	location = ROOT

	is_triggered_only = yes

	# No valid target
	option = {
		name = ver.31.fail
		trigger = { check_variable = { which = ver_total_puppet_states value = 0 } }
		add_resource = { influence = 300 }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
	}

	# Now we show a list of the puppet states to the player
	option = {
		name = ver.31.puppet_1
		custom_tooltip = ver.31.puppet_1.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 1 } }
		hidden_effect = {
			event_target:puppet_1 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_2
		custom_tooltip = ver.31.puppet_2.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 2 } }
		hidden_effect = {
			event_target:puppet_2 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_3
		custom_tooltip = ver.31.puppet_3.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 3 } }
		hidden_effect = {
			event_target:puppet_3 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_4
		custom_tooltip = ver.31.puppet_4.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 4 } }
		hidden_effect = {
			event_target:puppet_4 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_5
		custom_tooltip = ver.31.puppet_5.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 5 } }
		hidden_effect = {
			event_target:puppet_5 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_6
		custom_tooltip = ver.31.puppet_6.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 6 } }
		hidden_effect = {
			event_target:puppet_6 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_7
		custom_tooltip = ver.31.puppet_7.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 7 } }
		hidden_effect = {
			event_target:puppet_7 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_8
		custom_tooltip = ver.31.puppet_8.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 8 } }
		hidden_effect = {
			event_target:puppet_8 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_9
		custom_tooltip = ver.31.puppet_9.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 9 } }
		hidden_effect = {
			event_target:puppet_9 = {
				country_event = { id = ver.32 }
			}
		}
	}
	option = {
		name = ver.31.puppet_10
		custom_tooltip = ver.31.puppet_10.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value >= 10 } }
		hidden_effect = {
			event_target:puppet_10 = {
				country_event = { id = ver.32 }
			}
		}
	}

	option = {
		name = ver.31.back
		custom_tooltip = ver.31.back.tooltip
		trigger = { check_variable = { which = ver_total_puppet_states value > 0 } }
	}
}

# ver.32: Save valid targets as event targets
country_event = {
	id = ver.32
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = ver_puppet_neighbors value = 0 }

		every_neighbor_country = {
			limit = {
				is_country_type = default
				NOR = {
					is_same_value = event_target:ver_puppeteer
					has_defensive_pact = event_target:ver_puppeteer
					is_in_federation_with = event_target:ver_puppeteer
					has_association_status = event_target:ver_puppeteer
					AND = {
						is_subject = yes
						OR = {
							overlord = { is_same_value = event_target:ver_puppeteer }
							overlord = { has_defensive_pact = event_target:ver_puppeteer }
							overlord = { is_in_federation_with = event_target:ver_puppeteer }
							overlord = { has_association_status = event_target:ver_puppeteer }
						}
					}
				}
			}
			PREV = { change_variable = { which = ver_puppet_neighbors value = 1 } }
			set_country_flag = puppet_neighbor_counted
		}

		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 1 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_1
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 2 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_2
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 3 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_3
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 4 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_4
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 5 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_5
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 6 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_6
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 7 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_7
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 8 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_8
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 9 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_9
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 10 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_10
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 11 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_11
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 12 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_12
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 13 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_13
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 14 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_14
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 15 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_15
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 16 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_16
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 17 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_17
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 18 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_18
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 19 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_19
			}
		}
		if = {
			limit = { check_variable = { which = ver_puppet_neighbors value >= 20 } }
			random_neighbor_country = {
				limit = { has_country_flag = puppet_neighbor_counted }
				remove_country_flag = puppet_neighbor_counted
				save_event_target_as = puppet_neighbor_20
			}
		}

		event_target:ver_puppeteer = { country_event = { id = ver.33 } }
	}
}

# ver.33: Now let the player choose who to attack!
country_event = {
	id = ver.33
	title = ver.33.name
	desc = ver.33.desc
	picture = GFX_evt_federation_fleet
	location = from

	is_triggered_only = yes

	option = {
		name = ver.33.puppet_neighbor_1
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 1 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_1 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_2
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 2 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_2 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_3
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 3 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_3 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_4
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 4 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_4 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_5
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 5 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_5 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_6
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 6 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_6 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_7
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 7 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_7 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_8
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 8 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_8 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_9
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 9 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_9 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_10
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 10 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_10 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_11
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 11 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_11 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_12
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 12 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_12 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_13
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 13 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_13 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_14
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 14 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_14 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_15
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 15 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_15 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_16
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 16 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_16 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_17
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 17 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_17 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_18
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 18 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_18 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_19
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 19 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_19 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.puppet_neighbor_20
		trigger = { from = { check_variable = { which = ver_puppet_neighbors value >= 20 } } }
		set_timed_country_flag = { flag = ver_called_proxy_war days = 1800 }
		FROM = { declare_war = { target = event_target:puppet_neighbor_20 attacker_war_goal = wg_humiliation } }
	}
	option = {
		name = ver.33.back
		custom_tooltip = ver.33.back.tooltip
		hidden_effect = { country_event = { id = ver.31 } }
	}
}

### Blood tax

# ver.40: the Blood Tax
country_event = {
	id = ver.40
	title = ver.40.name
	desc = ver.40.desc
	picture = GFX_evt_burning_settlement
	location = ROOT

	is_triggered_only = yes

	trigger = {
		is_overlord = yes
		any_subject = {
			OR = {
				is_subject_type = verblood
				is_subject_type = verdebtor
			}
			NOT = { is_at_war_with = overlord }
		}
	}

	immediate = {
		set_variable = { which = ver_blood_tributary_total_population value = 0 }
		every_subject = {
			limit = {
				OR = {
					is_subject_type = verblood
					is_subject_type = verdebtor
				}
				NOT = { is_at_war_with = overlord }
			}
			set_country_flag = ver_blood_tributary
			every_owned_pop = {
				Root = {
					change_variable = { which = ver_blood_tributary_total_population value = 1 }
				}
			}
		}

		if = {
			limit = { NOT = { has_authority = auth_corporate } }
			divide_variable = { which = ver_blood_tributary_total_population value = 10 }
		}
		else_if = {
			limit = { has_authority = auth_corporate }
			divide_variable = { which = ver_blood_tributary_total_population value = 20 }
		}
	}

	# Distribute them among our worlds
	option = {
		name = ver.40.distribute
		custom_tooltip = ver.40.distribute.tooltip

		hidden_effect = {
			set_variable = { which = ver_blood_tributary_total_population value = 0 }
			every_subject = {
				limit = { has_country_flag = ver_blood_tributary }
				every_owned_pop = {
					Root = {
						change_variable = { which = ver_blood_tributary_total_population value = 1 }
					}
				}
				Root = {
					if = {
						limit = { NOT = { has_authority = auth_corporate } }
						divide_variable = { which = ver_blood_tributary_total_population value = 10 }
					}
					else_if = {
						limit = { has_authority = auth_corporate }
						divide_variable = { which = ver_blood_tributary_total_population value = 20 }
					}

					while = {
						count = ver_blood_tributary_total_population

						Prev = {
							random_owned_planet = {
								limit = {
									num_pops > 1
								}
								random_pop = {
									species = { save_event_target_as = blood_tribute_species }
									kill_pop = yes
								}
							}
						}

						if = {
							limit = { any_owned_planet = { free_housing > 0 } }
							random_owned_planet = {
								limit = { free_housing > 0 }
								create_pop = {
									species = event_target:blood_tribute_species
								}
							}
						}
						else = {
							random_owned_planet = {
								create_pop = {
									species = event_target:blood_tribute_species
								}
							}
						}
					}
				}

			}
		}
	}

	# Distribute them among our worlds
	option = {
		name = ver.40.distribute
		custom_tooltip = ver.40.distribute.tooltip
		trigger = { any_owned_planet = { has_modifier = slave_colony } }

		hidden_effect = {
			set_variable = { which = ver_blood_tributary_total_population value = 0 }
			every_subject = {
				limit = { has_country_flag = ver_blood_tributary }
				every_owned_pop = {
					Root = {
						change_variable = { which = ver_blood_tributary_total_population value = 1 }
					}
				}
				Root = {
					if = {
						limit = { NOT = { has_authority = auth_corporate } }
						divide_variable = { which = ver_blood_tributary_total_population value = 10 }
					}
					else_if = {
						limit = { has_authority = auth_corporate }
						divide_variable = { which = ver_blood_tributary_total_population value = 20 }
					}

					while = {
						count = ver_blood_tributary_total_population

						Prev = {
							random_owned_planet = {
								limit = {
									num_pops > 1
								}
								random_pop = {
									species = { save_event_target_as = blood_tribute_species }
									kill_pop = yes
								}
							}
						}
						random_owned_planet = {
							limit = { has_modifier = slave_colony }
							create_pop = {
								species = event_target:blood_tribute_species
							}
						}
					}
				}
			}
		}
	}

	after = {
		hidden_effect = {
			set_timed_country_flag = { flag = ver_recent_blood_tribute days = 5400 }
			set_variable = { which = ver_blood_tributary_total_population value = 0 }
			every_subject = {
				limit = { has_country_flag = ver_blood_tributary }
				remove_country_flag = ver_blood_tributary
			}
		}
	}
}
