namespace = ag_side

# Starlight-II (ag_side.11 - ag_side.46)
# Tachyon Blind area (ag_side.101 - ag_side.123)
# Beacon of Prosperity (ag_size.201 - ag_side.244)
# Advanced Colonizer (ag_size.251 - ag_side.274)
# Anomalies (ag_side.301 - )

# Starlight-II
# Gatekeeper, spawn ancient ship within border
event = {
	id = ag_side.11
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = ag_lost_ancient_ship_spawned }
		has_global_flag = ag_5524_preserved_world_spawned
		any_country = {
			is_ai = no
			any_planet_within_border = {
				is_planet_class = pc_gas_giant
				OR = {
					has_mining_station = yes
					has_research_station = yes
				}
				solar_system = { NOT = { has_star_flag = guardian } }
			}
		}
	}
	
	immediate = {
		random_list = {
			499 = {
			}
			1 = {
				set_global_flag = ag_lost_ancient_ship_spawned
				random_country = {
					limit = {
						is_ai = no
						any_planet_within_border = {
							is_planet_class = pc_gas_giant
							OR = {
								has_mining_station = yes
								has_research_station = yes
							}
							solar_system = {
								NOT = {
									has_star_flag = guardian
								}
							}
						}
					}
					random_planet_within_border = {
						limit = {
							is_planet_class = pc_gas_giant
							OR = {
								has_mining_station = yes
								has_research_station = yes
							}
							solar_system = {
								NOT = {
									has_star_flag = guardian
								}
							}
						}
						save_global_event_target_as = ag_lost_ancient_ship_target_gas_giant
					}
					country_event = { id = ag_side.12 }
				}
				ag_create_ancient_guardian = {
					ag_country_name = "NAME_ag_lost_ancient_ship_country_1"
					ag_country_type = ag_ancient_guardian_passive
				}
				last_created_country = {
					save_global_event_target_as = ag_lost_ancient_ship_country
					set_country_flag = ag_lost_ancient_ship_country
					ag_ancient_country_friendly_to_each_other = yes
					create_fleet = {
						name = "NAME_ag_lost_ancient_ship_fleet"
						settings = {
							spawn_debris = no
							can_upgrade = no
							uses_naval_capacity = no
						}
						effect = {
							set_owner = event_target:ag_lost_ancient_ship_country
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form"
								prefix = no
								
								effect = {
									set_ship_flag = ag_lost_ancient_ship
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
									if = {
										limit = { exists = event_target:ag_starlight_2_ship }
										clear_global_event_target = ag_starlight_2_ship
									}
									save_global_event_target_as = ag_starlight_2_ship
								}
							}
							set_location = {
								target = event_target:ag_lost_ancient_ship_target_gas_giant
								distance = 200
								angle = random
							}
							auto_move_to_planet = {
								target = event_target:ag_lost_ancient_ship_target_gas_giant
								clear_auto_move_on_arrival = yes
							}
						}
					}
				}
			}
		}
	}
}

# Notification for ancient ship entering border
country_event = {
	id = ag_side.12
	title = "ag_side.12.name"
	desc = "ag_side.12.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unknown_ships_room }
	show_sound = event_yellow_alert
	location = event_target:ag_lost_ancient_ship_target_gas_giant

	is_triggered_only = yes
	
	option = {
		name = "ag_side.12.a"
		trigger = {
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_terminator
			}
		}
	}
	option = {
		name = "ag_side.12.b"
		trigger = {
			NOT = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
		hidden_effect = {
			set_faction_hostility = {
				target = event_target:ag_lost_ancient_ship_country
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
	}
	option = {
		name = "ag_side.12.c"
		trigger = {
			has_ethic = ethic_gestalt_consciousness
		}
		hidden_effect = {
			set_faction_hostility = {
				target = event_target:ag_lost_ancient_ship_country
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
	}
}

# on_fleet_destroyed_perp, Destroy ancient ship
country_event = {
	id = ag_side.13
	title = "ag_side.13.name"
	desc = "ag_side.13.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_s_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	location = fromfrom

	is_triggered_only = yes
	
	trigger = {
		from = {
			has_country_flag = ag_lost_ancient_ship_country
		}
	}
	
	immediate = {
		from = {
			destroy_country = yes
		}
	}
	
	option = {
		name = "ag_side.13.a"
		trigger = {
			NOR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_ethic = ethic_gestalt_consciousness
			}
		}
		add_resource = {
			influence = 50
		}
	}
	option = {
		name = "ag_side.13.b"
		trigger = {
			has_ethic = ethic_gestalt_consciousness
			NOR = {
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_terminator
			}
		}
		add_resource = {
			influence = 50
		}
	}
	option = {
		name = "ag_side.13.c"
		trigger = {
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
			}
			NOT = {
				has_valid_civic = civic_fanatic_purifiers
			}
		}
		add_resource = {
			influence = 50
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 3
			min = 50
			max = 1500
		}
	}
	option = {
		name = "ag_side.13.d"
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
			NOT = {
				has_valid_civic = civic_fanatic_purifiers
			}
		}
		add_resource = {
			influence = 50
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 3
			min = 50
			max = 1500
		}
	}
	option = {
		name = "ag_side.13.e"
		trigger = {
			has_valid_civic = civic_fanatic_purifiers
		}
		add_resource = {
			influence = 80
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 6
			min = 100
			max = 3000
		}
	}
	option = {
		name = "ag_side.13.f"
		trigger = {
			OR = {
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_terminator
			}
		}
		add_resource = {
			influence = 80
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 6
			min = 100
			max = 3000
		}
	}
}

# on_fleet_destroyed_victim, Lost space battle, remove ancient ship
country_event = {
	id = ag_side.14
	title = "ag_side.14.name"
	desc = "ag_side.14.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_s_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	location = fromfrom.solar_system

	is_triggered_only = yes
	
	trigger = {
		from = {
			has_country_flag = ag_lost_ancient_ship_country
		}
		fromfrom = {
			any_owned_ship = {
				is_ship_class = shipclass_military
			}
		}
	}
	
	immediate = {
		fromfromfrom = {
			ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
			destroy_fleet = this
		}
		from = {
			destroy_country = yes
		}
	}
	
	option = {
		name = "ag_side.14.a"
		trigger = {
			NOR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
				has_ethic = ethic_gestalt_consciousness
			}
		}
		add_resource = {
			influence = 50
		}
	}
	option = {
		name = "ag_side.14.b"
		trigger = {
			has_ethic = ethic_gestalt_consciousness
			NOR = {
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_terminator
			}
		}
		add_resource = {
			influence = 50
		}
	}
	option = {
		name = "ag_side.14.c"
		trigger = {
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
			}
			NOT = {
				has_valid_civic = civic_fanatic_purifiers
			}
		}
		add_resource = {
			influence = 50
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 3
			min = 50
			max = 1500
		}
	}
	option = {
		name = "ag_side.14.d"
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
			NOT = {
				has_valid_civic = civic_fanatic_purifiers
			}
		}
		add_resource = {
			influence = 50
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 3
			min = 50
			max = 1500
		}
	}
	option = {
		name = "ag_side.14.e"
		trigger = {
			has_valid_civic = civic_fanatic_purifiers
		}
		add_resource = {
			influence = 80
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 6
			min = 100
			max = 3000
		}
	}
	option = {
		name = "ag_side.14.f"
		trigger = {
			OR = {
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_terminator
			}
		}
		add_resource = {
			influence = 80
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 6
			min = 100
			max = 3000
		}
	}
}

# on_fleet_auto_move_arrival, Ancient ship entering a gas giant's orbit
country_event = {
	id = ag_side.15
	hide_window = yes
	
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		has_country_flag = ag_lost_ancient_ship_country
	}
	
	immediate = {
		from = {
			clear_orders = yes
			clear_fleet_actions = this
			solar_system = {
				if = {
					limit = {
						exists = space_owner
					}
					space_owner = {
						country_event = { id = ag_side.16 }
						country_event = { id = ag_side.17 days = 10 }
					}
				}
				else = {
					event_target:ag_lost_ancient_ship_country = {
						country_event = { id = ag_side.20 days = 30 }
					}
				}
			}
		}
	}
}

# Notification, Ancient ship entering a gas giant's orbit
country_event = {
	id = ag_side.16
	title = "ag_side.16.name"
	desc = "ag_side.16.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_s_option"
	picture_event_data = { room = ag_event_unknown_ships_room }
	show_sound = event_yellow_alert
	location = event_target:ag_lost_ancient_ship_target_gas_giant

	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	option = {
		name = "ag_side.16.a"
	}
	option = {
		name = "ag_side.16.b"
		hidden_effect = {
			set_faction_hostility = {
				target = event_target:ag_lost_ancient_ship_country
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
	}
}

# Incoming transmission from the ancient ship
country_event = {
	id = ag_side.17
	title = "ag_side.17.name"
	desc = "ag_side.17.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_m_option"
	picture_event_data = { room = ag_event_star_chart_room }
	show_sound = event_radio_chatter
	location = event_target:ag_lost_ancient_ship_target_gas_giant

	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	option = {
		name = "ag_side.17.a"
		hidden_effect = {
			country_event = { id = ag_side.21 }
		}
	}
	option = {
		name = "ag_side.17.b"
		hidden_effect = {
			country_event = { id = ag_side.18 days = 30 }
			event_target:ag_lost_ancient_ship_country = {
				country_event = { id = ag_side.20 days = 30 }
			}
		}
	}
}

# Notification, ancient ship left
country_event = {
	id = ag_side.18
	title = "ag_side.18.name"
	desc = "ag_side.18.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_m_option"
	picture_event_data = { room = ag_event_unknown_ships_room }
	show_sound = event_sensor_ping

	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
	}
	
	option = {
		name = "ag_side.18.a"
	}
}
country_event = {
	id = ag_side.19
	title = "ag_side.19.name"
	desc = "ag_side.19.desc"
	picture = GFX_evt_unknown_ships
	show_sound = event_sensor_ping

	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
	}
	
	option = {
		name = "ag_side.19.a"
	}
}

# Remove ancient ship
country_event = {
	id = ag_side.20
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		is_same_value = event_target:ag_lost_ancient_ship_country
	}
	
	after = {
		random_owned_ship = {
			create_ambient_object = {
				type = horror_spawn_object
				location = this

				use_3d_location = yes
				
				entity_offset = { min = 0 max = 0 }
				entity_offset_angle = { min = 0 max = 0 }
				entity_offset_height = { min = 0 max = 0 }
				
				entity_scale_to_size = yes
				scale = @ag_jumpdrive_effect_scale
			}
			delete_ship = this
		}
		destroy_country = yes
	}
}

# COmmunication with ancient ship
country_event = {
	id = ag_side.21
	title = "ag_side.21.name"
	desc = "ag_side.21.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = "ag_lost_ancient_ship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	immediate = {
		establish_communications_no_message = event_target:ag_lost_ancient_ship_country
	}
	
	option = {
		name = "ag_side.21.a"
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						has_country_flag = worm_events_available
					}
				}
				country_event = { id = ag_side.22 }
				
			}
			else = {
				country_event = { id = ag_side.41 }
			}
		}
	}
	option = {
		name = "ag_side.21.b"
		trigger = {
			OR = {
				has_ethic = ethic_militarist
				has_ethic = ethic_fanatic_militarist
			}
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						has_country_flag = worm_events_available
					}
				}
				country_event = { id = ag_side.22 }
				
			}
			else = {
				country_event = { id = ag_side.41 }
			}
		}
	}
	option = {
		name = "ag_side.21.c"
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						has_country_flag = worm_events_available
					}
				}
				country_event = { id = ag_side.22 }
				
			}
			else = {
				country_event = { id = ag_side.41 }
			}
		}
	}
}
country_event = {
	id = ag_side.22
	title = "ag_side.22.name"
	desc = "ag_side.22.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = "ag_lost_ancient_ship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	option = {
		name = "ag_side.22.a"
		is_dialog_only = yes
		response_text = "ag_side.22.a.response"
	}
	option = {
		name = "ag_side.22.b"
		is_dialog_only = yes
		response_text = "ag_side.22.b.response"
	}
	option = {
		name = "ag_side.22.c"
		hidden_effect = {
			country_event = { id = ag_side.23 }
		}
	}
	option = {
		name = "ag_side.22.d"
		response_text = "ag_side.22.d.response"
		hidden_effect = {
			country_event = { id = ag_side.19 days = 30 }
			event_target:ag_lost_ancient_ship_country = {
				country_event = { id = ag_side.20 days = 30 }
			}
		}
	}
}
country_event = {
	id = ag_side.23
	title = "ag_side.23.name"
	desc = "ag_side.23.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = "ag_lost_ancient_ship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	immediate = {
		event_target:ag_lost_ancient_ship_country = {
			random_owned_ship = {
				save_event_target_as = ag_target_ship
			}
		}
	}
	
	option = {
		name = "ag_side.23.a"
		response_text = "ag_side.23.a.response"
		enable_special_project = {
			name = "ag_repair_lost_ancient_ship"
			location = event_target:ag_target_ship
			owner = root
		}
	}
	option = {
		name = "ag_side.23.b"
		response_text = "ag_side.23.b.response"
		hidden_effect = {
			country_event = { id = ag_side.19 days = 30 }
			event_target:ag_lost_ancient_ship_country = {
				country_event = { id = ag_side.20 days = 30 }
			}
		}
	}
	option = {
		name = "ag_side.23.c"
		response_text = "ag_side.23.c.response"
		enable_special_project = {
			name = "ag_hack_lost_ancient_ship"
			location = event_target:ag_target_ship
			owner = root
		}
	}
}
country_event = {
	id = ag_side.24
	title = "ag_side.24.name"
	desc = "ag_side.24.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = "ag_lost_ancient_ship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	option = {
		name = "ag_side.24.a"
		hidden_effect = {
			country_event = { id = ag_side.25 }
		}
	}
	option = {
		name = "ag_side.24.b"
		response_text = "ag_side.24.b.response"
		hidden_effect = {
			country_event = { id = ag_side.19 days = 30 }
			event_target:ag_lost_ancient_ship_country = {
				country_event = { id = ag_side.20 days = 30 }
			}
		}
	}
}
country_event = {
	id = ag_side.25
	title = "ag_side.25.name"
	desc = "ag_side.25.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = "ag_lost_ancient_ship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	option = {
		name = "ag_side.25.a"
		hidden_effect = {
			country_event = { id = ag_side.26 }
		}
	}
}
country_event = {
	id = ag_side.26
	title = "ag_side.26.name"
	desc = "ag_side.26.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = "ag_lost_ancient_ship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = { is_hostile = event_target:ag_lost_ancient_ship_country }
	}
	
	option = {
		name = "ag_side.26.a"
		response_text = "ag_side.26.a.response"
		hidden_effect = {
			event_target:ag_lost_ancient_ship_country = {
				random_owned_fleet = { set_owner = root }
				destroy_country = yes
			}
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_lost_ancient_ship_country_2"
				ag_country_type = ag_lost_ancient_ship_country
			}
			last_created_country = {
				establish_communications_no_message = root
				ag_ancient_country_friendly_to_each_other = yes
			}
			save_global_event_target_as = ag_lost_ancient_ship_owner
			set_country_flag = ag_lost_ancient_ship_battleship_form_active
			set_country_flag = ag_lost_ancient_ship_target_guardian_sphere_protected
		}
	}
}

# Hack in ancient ship's system, succeed
country_event = {
	id = ag_side.27
	title = "ag_side.27.name"
	desc = "ag_side.27.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_m_option"
	picture_event_data = { room = ag_event_lost_ancient_battleship_room }
	show_sound = event_ai_started
	location = event_target:ag_target_fleet
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}

	immediate = {
		event_target:ag_lost_ancient_ship_country = {
			random_owned_fleet = {
				save_event_target_as = ag_target_fleet
			}
		}
	}
	
	option = {
		name = "ag_side.27.a"
		hidden_effect = {
			event_target:ag_target_fleet = {
				set_owner = root
				root = {
					if = {
						limit = {
							NOR = {
								has_technology = tech_hyper_drive_2
								has_technology = tech_hyper_drive_3
								has_technology = tech_jump_drive_1
								has_technology = tech_psi_jump_drive_1
							}
						}
						prev = {
							random_owned_ship = {
								save_event_target_as = ag_target_ship
							}
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_1"
								prefix = no
								
								effect = {
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
								}
							}
							event_target:ag_target_ship = {
								delete_ship = this
							}
						}
					}
					else_if = {
						limit = {
							has_technology = tech_psi_jump_drive_1
						}
						prev = {
							random_owned_ship = {
								save_event_target_as = ag_target_ship
							}
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_psi_jumpdrive_1"
								prefix = no
								
								effect = {
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
								}
							}
							event_target:ag_target_ship = {
								delete_ship = this
							}
						}
					}
					else_if = {
						limit = {
							has_technology = tech_jump_drive_1
						}
						prev = {
							random_owned_ship = {
								save_event_target_as = ag_target_ship
							}
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_jumpdrive_1"
								prefix = no
								
								effect = {
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
								}
							}
							event_target:ag_target_ship = {
								delete_ship = this
							}
						}
					}
					else_if = {
						limit = {
							has_technology = tech_hyper_drive_3
						}
						prev = {
							random_owned_ship = {
								save_event_target_as = ag_target_ship
							}
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_3"
								prefix = no
								
								effect = {
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
								}
							}
							event_target:ag_target_ship = {
								delete_ship = this
							}
						}
					}
					else_if = {
						limit = {
							has_technology = tech_hyper_drive_2
						}
						prev = {
							random_owned_ship = {
								save_event_target_as = ag_target_ship
							}
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_2"
								prefix = no
								
								effect = {
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
								}
							}
							event_target:ag_target_ship = {
								delete_ship = this
							}
						}
					}
				}
			}
			event_target:ag_lost_ancient_ship_country = {
				destroy_country = yes
			}
		}
	}
}

# Failed to hack in ancient ship's system
country_event = {
	id = ag_side.28
	title = "ag_side.28.name"
	desc = "ag_side.28.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = "ag_lost_ancient_ship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	option = {
		name = "ag_side.28.a"
		response_text = "ag_side.28.a.response"
		hidden_effect = {
			country_event = { id = ag_side.29 days = 1 }
			country_event = { id = ag_side.19 days = 30 }
			event_target:ag_lost_ancient_ship_country = {
				country_event = { id = ag_side.20 days = 30 }
			}
		}
	}
}
country_event = {
	id = ag_side.29
	title = "ag_side.29.name"
	desc = "ag_side.29.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_m_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_default
	
	is_triggered_only = yes
	
	option = {
		name = "ag_side.29.a"
		if = {
			limit = { NOT = { has_technology = tech_self_aware_logic } }
			add_resource = { engineering_research = 1000 }
		}
		else_if = {
			limit = { NOT = { has_technology = tech_sapient_ai } }
			give_technology = { tech = tech_sapient_ai }
		}
		else_if = {
			limit = { NOT = { has_technology = tech_synthetic_workers } }
			give_technology = { tech = tech_synthetic_workers }
		}
		else_if = {
			limit = { NOT = { has_technology = tech_synthetic_leaders } }
			give_technology = { tech = tech_synthetic_leaders }
		}
		else_if = {
			limit = { always = yes }
			add_monthly_resource_mult = {
				resource = engineering_research
				value = 12
				min = 1000
				max = 5000
			}
		}
	}
}

# on_custom_diplomacy, Communication with Starlight-II, battleship form
country_event = {
	id = ag_side.31
	title = "ag_side.31.name"
	desc = {
		trigger = { always = yes }
		text = "ag_side.31.a.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.31.b.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.31.c.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.31.d.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.31.e.desc"
	}
	desc = {
		trigger = { has_country_flag = ag_lost_ancient_ship_restored }
		text = "ag_side.31.f.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = no
				NAND = {
					exists = fleet.orbit
					fleet.orbit = {
						exists = controller
						controller = {
							is_hostile = root
						}
						has_orbital_bombardment = yes
					}
				}
			}
		}
		text = "ag_side.31.g.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = no
				NAND = {
					exists = fleet.orbit
					fleet.orbit = {
						exists = controller
						controller = {
							is_hostile = root
						}
						has_orbital_bombardment = yes
					}
				}
			}
		}
		text = "ag_side.31.h.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = no
				NAND = {
					exists = fleet.orbit
					fleet.orbit = {
						exists = controller
						controller = {
							is_hostile = root
						}
						has_orbital_bombardment = yes
					}
				}
			}
			NOT = {
				has_country_flag = ag_lost_ancient_ship_restored
			}
		}
		text = "ag_side.31.i.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = no
				NAND = {
					exists = fleet.orbit
					fleet.orbit = {
						exists = controller
						controller = {
							is_hostile = root
						}
						has_orbital_bombardment = yes
					}
				}
			}
			has_country_flag = ag_lost_ancient_ship_restored
		}
		text = "ag_side.31.j.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = yes
			}
		}
		text = "ag_side.31.k.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = yes
			}
		}
		text = "ag_side.31.l.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = yes
			}
		}
		text = "ag_side.31.m.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = yes
			}
		}
		text = "ag_side.31.n.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = no
				exists = fleet.orbit
				fleet.orbit = {
					exists = controller
					controller = {
						is_hostile = root
					}
					has_orbital_bombardment = yes
				}
			}
		}
		text = "ag_side.31.o.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship = {
				is_in_combat = no
				exists = fleet.orbit
				fleet.orbit = {
					exists = controller
					controller = {
						is_hostile = root
					}
					has_orbital_bombardment = yes
				}
			}
		}
		text = "ag_side.31.p.desc"
	}
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes

	trigger = {
		OR = {
			from = { is_same_value = root }
			AND = {
				NOT = { has_country_flag = ag_lost_ancient_ship_diplomacy_engaged }
				from = { is_country_type = ag_lost_ancient_ship_country }
			}
		}
		is_same_value = event_target:ag_lost_ancient_ship_owner
		has_country_flag = ag_lost_ancient_ship_battleship_form_active
		any_owned_ship = { has_ship_flag = ag_lost_ancient_ship }
	}

	immediate = { set_country_flag = ag_lost_ancient_ship_diplomacy_engaged }
	after = { hidden_effect = { remove_country_flag = ag_lost_ancient_ship_diplomacy_engaged } }

	option = {
		name = "ag_side.31.a"
		response_text = "ag_side.31.a.response"
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = { ag_lost_ancient_ship_to_science_ship = yes }
	}
	option = {
		name = "ag_side.31.b"
		trigger = {
			OR = {
				has_technology = tech_hyper_drive_1
				has_technology = tech_hyper_drive_2
				has_technology = tech_hyper_drive_3
				has_technology = tech_jump_drive_1
				has_technology = tech_psi_jump_drive_1
				has_country_flag = ag_lost_ancient_ship_restored
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = { country_event = { id = ag_side.37 } }
	}
	option = {
		name = "ag_side.31.d"
		response_text = "ag_side.31.d.response"
		trigger = {
			any_country = {
				has_communications = prev.owner
				OR = {
					is_country_type = guardian_dragon
					is_country_type = guardian_fortress
					is_country_type = guardian_stellarite
					is_country_type = guardian_horror
					is_country_type = guardian_hiver
					is_country_type = guardian_sphere
					is_country_type = guardian_dreadnought
					is_country_type = guardian_wraith
					is_country_type = guardian_hatchling
					is_country_type = guardian_scavenger_bot
					is_country_type = guardian_elderly_tiyanki
				}
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = {
			ag_lost_ancient_ship_clear_failed_flags = yes
			event_target:ag_starlight_2_ship = {
				set_ship_flag = ag_lost_ancient_ship_targeting_guardians
				ship_event = { id = ag_side.38 days = 2 random = 3 }
			}
		}
	}
	option = {
		name = "ag_side.31.d_target"
		trigger = { event_target:ag_starlight_2_ship = {
			has_ship_flag = ag_lost_ancient_ship_targeting_guardians
		} }
		hidden_effect = {
			ag_lost_ancient_ship_clear_guardians_flags = yes
			ag_lost_ancient_ship_set_guardians_flag = yes
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.31.d_alt"
		response_text = "ag_side.31.d_alt.response"
		trigger = { event_target:ag_starlight_2_ship = {
			has_ship_flag = ag_lost_ancient_ship_targeting_guardians
		} }
		hidden_effect = {
			event_target:ag_starlight_2_ship = {
				remove_ship_flag = ag_lost_ancient_ship_targeting_guardians
				fleet = {
					clear_orders = yes
					clear_fleet_actions = this
				}
				auto_move_to_planet = { target = root.capital_scope clear_auto_move_on_arrival = yes }
			}
		}
	}
	option = {
		name = "ag_side.31.c"
		default_hide_option = yes
	}
}

# on_custom_diplomacy, Communication with Starlight-II, Science ship form
country_event = {
	id = ag_side.32
	title = "ag_side.32.name"
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.a.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.b.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.c.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.d.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.e.desc"
	}
	desc = {
		trigger = { has_country_flag = ag_lost_ancient_ship_restored }
		text = "ag_side.32.f.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.g.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.h.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.i.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_side.32.j.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship.fleet = {
				has_fleet_order = auto_explore_order
			}
		}
		text = "ag_side.32.k.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship.fleet = {
				has_fleet_order = auto_explore_order
			}
		}
		text = "ag_side.32.l.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship.fleet = {
				has_fleet_order = assist_research_order
			}
		}
		text = "ag_side.32.m.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship.fleet = {
				has_fleet_order = assist_research_order
			}
		}
		text = "ag_side.32.n.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship.fleet = {
				has_fleet_order = assist_research_order
			}
		}
		text = "ag_side.32.o.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship.fleet = {
				has_fleet_order = research_anomaly_order
			}
		}
		text = "ag_side.32.p.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship.fleet = {
				has_fleet_order = research_anomaly_order
			}
		}
		text = "ag_side.32.q.desc"
	}
	desc = {
		trigger = {
			event_target:ag_starlight_2_ship.fleet = {
				has_fleet_order = research_anomaly_order
			}
		}
		text = "ag_side.32.r.desc"
	}
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes

	trigger = {
		OR = {
			from = { is_same_value = root }
			AND = {
				NOT = { has_country_flag = ag_lost_ancient_ship_diplomacy_engaged }
				from = { is_country_type = ag_lost_ancient_ship_country }
			}
		}
		is_same_value = event_target:ag_lost_ancient_ship_owner
		has_country_flag = ag_lost_ancient_ship_science_ship_form_active
		any_owned_ship = {
			has_ship_flag = ag_lost_ancient_ship
		}
	}

	immediate = { set_country_flag = ag_lost_ancient_ship_diplomacy_engaged }
	after = { hidden_effect = { remove_country_flag = ag_lost_ancient_ship_diplomacy_engaged } }

	option = {
		name = "ag_side.32.a"
		response_text = "ag_side.32.a.response"
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = { ag_lost_ancient_ship_to_battleship = yes }
	}
	option = {
		name = "ag_side.32.b"
		trigger = {
			OR = {
				has_technology = tech_hyper_drive_1
				has_technology = tech_hyper_drive_2
				has_technology = tech_hyper_drive_3
				has_technology = tech_jump_drive_1
				has_technology = tech_psi_jump_drive_1
				has_country_flag = ag_lost_ancient_ship_restored
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = { country_event = { id = ag_side.37 } }
	}
	option = {
		name = "ag_side.32.c"
		default_hide_option = yes
	}
}

# on_entering_system_fleet, Change ftl drive after ftl action if didn't be repaired
fleet_event = {
	id = ag_side.33
	title = "ag_side.33.name"
	desc = "ag_side.33.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_m_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_yellow_alert
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		any_owned_ship = { has_ship_flag = ag_lost_ancient_ship }
		exists = owner
		owner = {
			is_same_value = event_target:ag_lost_ancient_ship_owner
			NOR = {
				has_country_flag = ag_lost_ancient_ship_ftl_unusable
				has_country_flag = ag_lost_ancient_ship_restored
			}
		}
	}
	
	immediate = {
		owner = { set_country_flag = ag_lost_ancient_ship_ftl_unusable }
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
		random_owned_ship = {
			limit = { has_ship_flag = ag_lost_ancient_ship }
			fleet = {
				if = {
					limit = { exists = leader }
					leader = {
						save_event_target_as = ag_target_leader
						unassign_leader = this
					}
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
					if = {
						limit = { has_technology = tech_psi_jump_drive_1 }
						prev.fleet = {
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_psi_jumpdrive_1"
								prefix = no
								
								effect = {
									set_ship_flag = ag_lost_ancient_ship
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
									if = {
										limit = { exists = event_target:ag_starlight_2_ship }
										clear_global_event_target = ag_starlight_2_ship
									}
									save_global_event_target_as = ag_starlight_2_ship
								}
							}
						}
					}
					else_if = {
						limit = { has_technology = tech_jump_drive_1 }
						prev.fleet = {
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_jumpdrive_1"
								prefix = no
								
								effect = {
									set_ship_flag = ag_lost_ancient_ship
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
									if = {
										limit = { exists = event_target:ag_starlight_2_ship }
										clear_global_event_target = ag_starlight_2_ship
									}
									save_global_event_target_as = ag_starlight_2_ship
								}
							}
						}
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_3 }
						prev.fleet = {
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_3"
								prefix = no
								
								effect = {
									set_ship_flag = ag_lost_ancient_ship
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
									if = {
										limit = { exists = event_target:ag_starlight_2_ship }
										clear_global_event_target = ag_starlight_2_ship
									}
									save_global_event_target_as = ag_starlight_2_ship
								}
							}
						}
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_2 }
						prev.fleet = {
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_2"
								prefix = no
								
								effect = {
									set_ship_flag = ag_lost_ancient_ship
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
									if = {
										limit = { exists = event_target:ag_starlight_2_ship }
										clear_global_event_target = ag_starlight_2_ship
									}
									save_global_event_target_as = ag_starlight_2_ship
								}
							}
						}
					}
					else_if = {
						limit = { always = yes }
						prev.fleet = {
							create_ship = {
								name = "NAME_ag_lost_ancient_ship"
								design = "NAME_ag_lost_ancient_ship_battleship_form_hyperdrive_1"
								prefix = no
								
								effect = {
									set_ship_flag = ag_lost_ancient_ship
									ag_difficulty_bonus = yes
									ag_lost_ancient_ship_debuff = yes
									if = {
										limit = { exists = event_target:ag_starlight_2_ship }
										clear_global_event_target = ag_starlight_2_ship
									}
									save_global_event_target_as = ag_starlight_2_ship
								}
							}
						}
					}
				}
				else = {
					prev.fleet = { save_event_target_as = ag_lost_ancient_ship_loc }
					if = {
						limit = { has_technology = tech_psi_jump_drive_1 }
						create_fleet = {
							name = event_target:ag_lost_ancient_ship_loc
							settings = {
								spawn_debris = no
								can_upgrade = no
								uses_naval_capacity = no
							}
							effect = {
								set_owner = event_target:ag_lost_ancient_ship_loc.owner
								create_ship = {
									name = "NAME_ag_lost_ancient_ship"
									design = "NAME_ag_lost_ancient_ship_science_ship_form_psi_jumpdrive_1"
									prefix = no
									
									effect = {
										set_ship_flag = ag_lost_ancient_ship
										ag_difficulty_bonus = yes
										ag_lost_ancient_ship_debuff = yes
										if = {
											limit = { exists = event_target:ag_starlight_2_ship }
											clear_global_event_target = ag_starlight_2_ship
										}
										save_global_event_target_as = ag_starlight_2_ship
									}
								}
								set_location = {
									target = event_target:ag_lost_ancient_ship_loc
									distance = -1
									angle = 0
								}
								if = {
									limit = {
										exists = event_target:ag_target_leader
									}
									fleet = {
										assign_leader = event_target:ag_target_leader
									}
								}
							}
						}
					}
					else_if = {
						limit = { has_technology = tech_jump_drive_1 }
						create_fleet = {
							name = event_target:ag_lost_ancient_ship_loc
							settings = {
								spawn_debris = no
								can_upgrade = no
								uses_naval_capacity = no
							}
							effect = {
								set_owner = event_target:ag_lost_ancient_ship_loc.owner
								create_ship = {
									name = "NAME_ag_lost_ancient_ship"
									design = "NAME_ag_lost_ancient_ship_science_ship_form_jumpdrive_1"
									prefix = no
									
									effect = {
										set_ship_flag = ag_lost_ancient_ship
										ag_difficulty_bonus = yes
										ag_lost_ancient_ship_debuff = yes
										if = {
											limit = { exists = event_target:ag_starlight_2_ship }
											clear_global_event_target = ag_starlight_2_ship
										}
										save_global_event_target_as = ag_starlight_2_ship
									}
								}
								set_location = {
									target = event_target:ag_lost_ancient_ship_loc
									distance = -1
									angle = 0
								}
								if = {
									limit = {
										exists = event_target:ag_target_leader
									}
									fleet = {
										assign_leader = event_target:ag_target_leader
									}
								}
							}
						}
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_3 }
						create_fleet = {
							name = event_target:ag_lost_ancient_ship_loc
							settings = {
								spawn_debris = no
								can_upgrade = no
								uses_naval_capacity = no
							}
							effect = {
								set_owner = event_target:ag_lost_ancient_ship_loc.owner
								create_ship = {
									name = "NAME_ag_lost_ancient_ship"
									design = "NAME_ag_lost_ancient_ship_science_ship_form_hyperdrive_3"
									prefix = no
									
									effect = {
										set_ship_flag = ag_lost_ancient_ship
										ag_difficulty_bonus = yes
										ag_lost_ancient_ship_debuff = yes
										if = {
											limit = { exists = event_target:ag_starlight_2_ship }
											clear_global_event_target = ag_starlight_2_ship
										}
										save_global_event_target_as = ag_starlight_2_ship
									}
								}
								set_location = {
									target = event_target:ag_lost_ancient_ship_loc
									distance = -1
									angle = 0
								}
								if = {
									limit = {
										exists = event_target:ag_target_leader
									}
									fleet = {
										assign_leader = event_target:ag_target_leader
									}
								}
							}
						}
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_2 }
						create_fleet = {
							name = event_target:ag_lost_ancient_ship_loc
							settings = {
								spawn_debris = no
								can_upgrade = no
								uses_naval_capacity = no
							}
							effect = {
								set_owner = event_target:ag_lost_ancient_ship_loc.owner
								create_ship = {
									name = "NAME_ag_lost_ancient_ship"
									design = "NAME_ag_lost_ancient_ship_science_ship_form_hyperdrive_2"
									prefix = no
									
									effect = {
										set_ship_flag = ag_lost_ancient_ship
										ag_difficulty_bonus = yes
										ag_lost_ancient_ship_debuff = yes
										if = {
											limit = { exists = event_target:ag_starlight_2_ship }
											clear_global_event_target = ag_starlight_2_ship
										}
										save_global_event_target_as = ag_starlight_2_ship
									}
								}
								set_location = {
									target = event_target:ag_lost_ancient_ship_loc
									distance = -1
									angle = 0
								}
								if = {
									limit = {
										exists = event_target:ag_target_leader
									}
									fleet = {
										assign_leader = event_target:ag_target_leader
									}
								}
							}
						}
					}
					else_if = {
						limit = { always = yes }
						create_fleet = {
							name = event_target:ag_lost_ancient_ship_loc
							settings = {
								spawn_debris = no
								can_upgrade = no
								uses_naval_capacity = no
							}
							effect = {
								set_owner = event_target:ag_lost_ancient_ship_loc.owner
								create_ship = {
									name = "NAME_ag_lost_ancient_ship"
									design = "NAME_ag_lost_ancient_ship_science_ship_form_hyperdrive_1"
									prefix = no
									
									effect = {
										set_ship_flag = ag_lost_ancient_ship
										ag_difficulty_bonus = yes
										ag_lost_ancient_ship_debuff = yes
										if = {
											limit = { exists = event_target:ag_starlight_2_ship }
											clear_global_event_target = ag_starlight_2_ship
										}
										save_global_event_target_as = ag_starlight_2_ship
									}
								}
								set_location = {
									target = event_target:ag_lost_ancient_ship_loc
									distance = -1
									angle = 0
								}
								if = {
									limit = {
										exists = event_target:ag_target_leader
									}
									fleet = {
										assign_leader = event_target:ag_target_leader
									}
								}
							}
						}
					}
				}
			}
			delete_ship = this
			if = {
				limit = {
					exists = event_target:ag_target_leader
					fleet = {
						any_owned_ship = {
							NOT = {
								is_same_value = prevprev
							}
						}
					}
				}
				fleet = {
					assign_leader = event_target:ag_target_leader
				}
			}
		}
	}
	
	option = {
		name = "ag_side.33.a"
	}
}

# Repair action aviliable when researched enough technologies
country_event = {
	id = ag_side.34
	title = "ag_side.34.name"
	desc = "ag_side.34.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_s_option"
	picture_event_data = { room = ag_event_lost_ancient_battleship_room }
	show_sound = event_mystic_reveal
	
	fire_only_once = yes
	mean_time_to_happen = {
		years = 5
	}
	
	trigger = {
		has_technology = "tech_global_research_initiative"
		has_technology = "tech_basic_science_lab_3"
		has_technology = "tech_space_science_5"
		has_technology = "tech_physics_3"
		has_technology = "tech_titans"
		has_technology = "tech_ag_advanced_gravity_theory"
		is_same_value = event_target:ag_lost_ancient_ship_owner
		any_owned_ship = {
			has_ship_flag = ag_lost_ancient_ship
			OR = {
				has_modifier = "ag_lost_ancient_ship_debuff_1x"
				has_modifier = "ag_lost_ancient_ship_debuff_2x"
			}
		}
	}
	
	option = {
		name = "ag_side.34.a"
		custom_tooltip = "ag_side.34.a.tooltip"
		hidden_effect = {
			random_list = {
				10 = { ag_give_research_project = { ag_project_id = @ag_repair_starlight_2_project_id ag_progress = 2.5 } }
				10 = { ag_give_research_project = { ag_project_id = @ag_repair_starlight_2_project_id ag_progress = 5 } }
				10 = { ag_give_research_project = { ag_project_id = @ag_repair_starlight_2_project_id ag_progress = 7.5 } }
				10 = { ag_give_research_project = { ag_project_id = @ag_repair_starlight_2_project_id ag_progress = 10 } }
				10 = { ag_give_research_project = { ag_project_id = @ag_repair_starlight_2_project_id ag_progress = 12.5 } }
				10 = { ag_give_research_project = { ag_project_id = @ag_repair_starlight_2_project_id ag_progress = 15 } }
			}
			if = {
				limit = { is_ai = yes }
				country_event = { id = ag_side.35 days = 1800 }
			}
		}
	}
	option = {
		name = "ag_side.34.b"
	}
}

# Repair completed
country_event = {
	id = ag_side.35
	title = "ag_side.35.name"
	desc = "ag_side.35.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_s_option"
	picture_event_data = { room = ag_event_lost_ancient_battleship_room }
	show_sound = event_dyson_sphere_build_complete
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_owned_ship = {
					OR = {
						is_ship_size = ag_lost_ancient_ship_battleship_form
						is_ship_size = ag_lost_ancient_ship_science_ship_form
					}
				}
			}
			set_country_flag = ag_lost_ancient_ship_restored
			random_owned_ship = {
				limit = {
					has_ship_flag = ag_lost_ancient_ship
				}
				if = {
					limit = { has_component = ag_ancient_ftl_drive_1 }
					remove_modifier = "ag_lost_ancient_ship_debuff_1x"
					remove_modifier = "ag_lost_ancient_ship_debuff_2x"
				}
				else = {
					fleet = {
						if = {
							limit = {
								exists = leader
							}
							leader = {
								save_event_target_as = ag_target_leader
								unassign_leader = this
							}
						}
						prevprev = {
							if = {
								limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
								prev = {
									create_ship = {
										name = "NAME_ag_lost_ancient_ship"
										design = "NAME_ag_lost_ancient_ship_battleship_form"
										prefix = no
										
										effect = {
											set_ship_flag = ag_lost_ancient_ship
											ag_difficulty_bonus = yes
											if = {
												limit = { exists = event_target:ag_starlight_2_ship }
												clear_global_event_target = ag_starlight_2_ship
											}
											save_global_event_target_as = ag_starlight_2_ship
										}
									}
								}
							}
							else = {
								create_fleet = {
									name = prev
									settings = {
										spawn_debris = no
										can_upgrade = no
										uses_naval_capacity = no
									}
									effect = {
										set_owner = prev
										create_ship = {
											name = "NAME_ag_lost_ancient_ship"
											design = "NAME_ag_lost_ancient_ship_science_ship_form"
											prefix = no
											
											effect = {
												set_ship_flag = ag_lost_ancient_ship
												ag_difficulty_bonus = yes
												if = {
													limit = { exists = event_target:ag_starlight_2_ship }
													clear_global_event_target = ag_starlight_2_ship
												}
												save_global_event_target_as = ag_starlight_2_ship
											}
										}
										set_location = {
											target = prevprev
											distance = -1
											angle = 0
										}
									}
								}
							}
						}
					}
					delete_ship = this
					if = {
						limit = { exists = event_target:ag_target_leader }
						fleet = { assign_leader = event_target:ag_target_leader }
					}
				}
			}
		}
	}
	
	option = {
		name = "ag_side.35.a"
	}
}

# Change ftl drives manually
country_event = {
	id = ag_side.37
	title = "ag_side.37.name"
	desc = "ag_side.37.a.desc"
	desc = "ag_side.37.b.desc"
	desc = "ag_side.37.c.desc"
	desc = "ag_side.37.d.desc"
	desc = "ag_side.37.e.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes

	trigger = {
		from = { is_same_value = root }
		is_same_value = event_target:ag_lost_ancient_ship_owner
		any_owned_ship = { has_ship_flag = ag_lost_ancient_ship }
		any_country = { is_country_type = ag_lost_ancient_ship_country }
	}

	immediate = { set_country_flag = ag_lost_ancient_ship_diplomacy_engaged }
	after = { hidden_effect = { remove_country_flag = ag_lost_ancient_ship_diplomacy_engaged } }

	option = {
		name = "ag_side.37.a"
		response_text = "ag_side.37.a.response"
		trigger = {
			has_technology = tech_hyper_drive_1
			NOT = {
				any_owned_ship = {
					has_ship_flag = ag_lost_ancient_ship
					has_component = HYPER_DRIVE_1
				}
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = {
			if = {
				limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
				ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_1 }
			}
			else = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_1 } }
		}
	}
	option = {
		name = "ag_side.37.b"
		response_text = "ag_side.37.b.response"
		trigger = {
			has_technology = tech_hyper_drive_2
			NOT = {
				any_owned_ship = {
					has_ship_flag = ag_lost_ancient_ship
					has_component = HYPER_DRIVE_2
				}
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = {
			if = {
				limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
				ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_2 }
			}
			else = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_2 } }
		}
	}
	option = {
		name = "ag_side.37.c"
		response_text = "ag_side.37.c.response"
		trigger = {
			has_technology = tech_hyper_drive_3
			NOT = {
				any_owned_ship = {
					has_ship_flag = ag_lost_ancient_ship
					has_component = HYPER_DRIVE_3
				}
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = {
			if = {
				limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
				ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_3 }
			}
			else = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_3 } }
		}
	}
	option = {
		name = "ag_side.37.d"
		response_text = "ag_side.37.d.response"
		trigger = {
			has_technology = tech_jump_drive_1
			NOT = {
				any_owned_ship = {
					has_ship_flag = ag_lost_ancient_ship
					has_component = JUMP_DRIVE_1
				}
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = {
			if = {
				limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
				ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _jumpdrive_1 }
			}
			else = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _jumpdrive_1 } }
		}
	}
	option = {
		name = "ag_side.37.e"
		response_text = "ag_side.37.e.response"
		trigger = {
			has_technology = tech_psi_jump_drive_1
			NOT = {
				any_owned_ship = {
					has_ship_flag = ag_lost_ancient_ship
					has_component = PSI_JUMP_DRIVE_1
				}
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = {
			if = {
				limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
				ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _psi_jumpdrive_1 }
			}
			else = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _psi_jumpdrive_1 } }
		}
	}
	option = {
		name = "ag_side.37.origin"
		response_text = "ag_side.37.origin.response"
		trigger = {
			has_country_flag = ag_lost_ancient_ship_restored
			NOT = {
				any_owned_ship = {
					has_ship_flag = ag_lost_ancient_ship
					has_component = ag_ancient_ftl_drive_1
				}
			}
		}
		allow = { ag_lost_ancient_ship_action_basic_check = yes }
		hidden_effect = {
			if = {
				limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
				ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes }
			}
			else = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no } }
		}
	}
	option = {
		name = "ag_side.37.return"
		hidden_effect = {
			if = {
				limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
				country_event = { id = ag_side.31 }
			}
			else = { country_event = { id = ag_side.32 } }
		}
	}
	option = {
		name = "ag_side.37.exit"
		default_hide_option = yes
	}
}

# Find Guradians
ship_event = {
	id = ag_side.38
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_same_value = event_target:ag_starlight_2_ship
		has_ship_flag = ag_lost_ancient_ship_targeting_guardians
	}
	immediate = {
		owner = { ag_lost_ancient_ship_clear_guardians_flags = yes }
		ag_lost_ancient_ship_set_guardians_flag = yes
	}
	after = {
		ag_lost_ancient_ship_find_guardians = yes
		ship_event = { id = ag_side.382 days = 30 }
	}
}
# Attack Guradians
country_event = {
	id = ag_side.381
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_same_value = event_target:ag_lost_ancient_ship_owner
		from = { is_same_value = event_target:ag_starlight_2_ship.fleet }
		event_target:ag_starlight_2_ship = { has_ship_flag = ag_lost_ancient_ship_targeting_guardians }
	}
	
	immediate = {
		from.solar_system = {
			random_fleet_in_system = {
				limit = {
					exists = owner
					owner = {
						OR = {
							is_country_type = guardian_dragon
							is_country_type = guardian_fortress
							is_country_type = guardian_stellarite
							is_country_type = guardian_horror
							is_country_type = guardian_hiver
							is_country_type = guardian_sphere
							is_country_type = guardian_dreadnought
							is_country_type = guardian_wraith
							is_country_type = guardian_hatchling
							is_country_type = guardian_scavenger_bot
							is_country_type = guardian_elderly_tiyanki
						}
					}
				}
				save_event_target_as = ag_lost_ancient_ship_target
			}
		}
		if = {
			limit = { exists = event_target:ag_lost_ancient_ship_target }
			from = { auto_follow_fleet = { target = event_target:ag_lost_ancient_ship_target attack_fleet = yes } }
		}
		else = { event_target:ag_starlight_2_ship = { ship_event = { id = ag_side.38 days = 5 random = 5 } } }
	}
}
# Check to prevent idle state
ship_event = {
	id = ag_side.382
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_same_value = event_target:ag_starlight_2_ship
		has_ship_flag = ag_lost_ancient_ship_targeting_guardians
	}
	immediate = {
		fleet = {
			if = {
				limit = { is_fleet_idle = yes }
				clear_orders = yes
				clear_fleet_actions = this
				owner = { ag_lost_ancient_ship_clear_failed_flags = yes }
				root = { ship_event = { id = ag_side.38 days = 5 random = 5 } }
			}
			else = { root = { ship_event = { id = ag_side.382 days = 30 } } }
		}
	}
}
country_event = {
	id = ag_side.383
	title = "ag_side.383.name"
	desc = "ag_side.383.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes

	trigger = {
		from = { is_same_value = root }
		is_same_value = event_target:ag_lost_ancient_ship_owner
		any_owned_ship = { has_ship_flag = ag_lost_ancient_ship }
		any_country = { is_country_type = ag_lost_ancient_ship_country }
	}

	immediate = { set_country_flag = ag_lost_ancient_ship_diplomacy_engaged }
	after = { hidden_effect = { remove_country_flag = ag_lost_ancient_ship_diplomacy_engaged } }

	option = {
		name = "ag_side.383.guardian_dragon"
		trigger = { has_country_flag = ag_exists_guardian_dragon }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_dragon }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_fortress"
		trigger = { has_country_flag = ag_exists_guardian_fortress }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_fortress }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_stellarite"
		trigger = { has_country_flag = ag_exists_guardian_stellarite }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_stellarite }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_horror"
		trigger = { has_country_flag = ag_exists_guardian_horror }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_horror }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_hiver"
		trigger = { has_country_flag = ag_exists_guardian_hiver }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_hiver }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_sphere"
		trigger = { has_country_flag = ag_exists_guardian_sphere }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_sphere }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_dreadnought"
		trigger = { has_country_flag = ag_exists_guardian_dreadnought }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_dreadnought }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_wraith"
		trigger = { has_country_flag = ag_exists_guardian_wraith }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_wraith }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_hatchling"
		trigger = { has_country_flag = ag_exists_guardian_hatchling }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_hatchling }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_scavenger_bot"
		trigger = { has_country_flag = ag_exists_guardian_scavenger_bot }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_scavenger_bot }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.guardian_elderly_tiyanki"
		trigger = { has_country_flag = ag_exists_guardian_elderly_tiyanki }
		hidden_effect = {
			ag_lost_ancient_ship_change_guardians_protection = { ag_target_guardian = guardian_elderly_tiyanki }
			country_event = { id = ag_side.383 }
		}
	}
	option = {
		name = "ag_side.383.return"
		hidden_effect = {
			if = {
				limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
				country_event = { id = ag_side.31 }
			}
			else = { country_event = { id = ag_side.32 } }
		}
	}
	option = {
		name = "ag_side.383.exit"
		default_hide_option = yes
	}
}

# Starlight destroyed.
country_event = {
	id = ag_side.39
	title = "ag_side.39.name"
	desc = "ag_side.39.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_s_option"
	picture_event_data = { room = no_video_feed_room }
	is_triggered_only = yes
	trigger = { has_country_flag = ag_lost_ancient_ship_locked }
	option = { name = "ag_side.39.a" }
}

# Communication with ancient ship, worm events available
country_event = {
	id = ag_side.41
	title = "ag_side.41.name"
	desc = "ag_side.41.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = "ag_lost_ancient_ship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_country
		NOT = {
			is_hostile = event_target:ag_lost_ancient_ship_country
		}
	}
	
	option = {
		name = "ag_side.41.a"
		is_dialog_only = yes
		response_text = "ag_side.41.a.response"
	}
	option = {
		name = "ag_side.41.b"
		is_dialog_only = yes
		response_text = "ag_side.41.b.response"
	}
	option = {
		name = "ag_side.41.c"
		is_dialog_only = yes
		response_text = "ag_side.41.c.response"
	}
	option = {
		name = "ag_side.41.d"
		response_text = "ag_side.41.d.response"
		hidden_effect = {
			set_variable = {
				which = ag_num_spiral_towers
				value = 1
			}
		}
	}
	option = {
		name = "ag_side.41.e"
		response_text = "ag_side.41.e.response"
		hidden_effect = {
			country_event = { id = ag_side.19 days = 30 }
			event_target:ag_lost_ancient_ship_country = {
				country_event = { id = ag_side.20 days = 30 }
			}
		}
	}
}

# on_building_complete, on_building_replaced, Notification, ancient ship disappeared when building finished
planet_event = {
	id = ag_side.42
	title = "ag_side.42.name"
	desc = "ag_side.42.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unknown_ships_room }
	show_sound = event_sensor_ping

	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		has_building = ag_spiral_tower
	}
	
	immediate = {
		owner = {
			set_country_flag = ag_lost_ancient_ship_worm_event
		}
		event_target:ag_lost_ancient_ship_country = {
			every_owned_fleet = {
				delete_fleet = this
			}
			destroy_country = yes
		}
	}
	
	option = {
		name = "ag_side.42.a"
	}
	option = {
		name = "ag_side.42.b"
	}
}

# on_yearly_pulse_country, Remove Starlight-II country if ship doesn't exists
country_event = {
	id = ag_side.45
	hide_window = yes
	
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		exists = event_target:ag_lost_ancient_ship_owner
		is_same_value = event_target:ag_lost_ancient_ship_owner
		NOR = {
			has_country_flag = ag_lost_ancient_ship_locked
			any_owned_ship = { has_ship_flag = ag_lost_ancient_ship }
		}
		any_country = { is_country_type = ag_lost_ancient_ship_country }
	}
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = ag_lost_ancient_ship_country
			}
			destroy_country = yes
		}
	}
}

# Give Starlight-II after worm event
country_event = {
	id = ag_side.46
	title = "ag_side.46.name"
	desc = "ag_side.46.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ship_in_orbit_room }
	show_sound = event_sensor_ping

	mean_time_to_happen = {
		years = 5
	}

	fire_only_once = yes

	trigger = {
		has_country_flag = ag_lost_ancient_ship_worm_event
		has_country_flag = worm_tomb_ending
	}
	
	option = {
		name = "ag_side.46.a"
		custom_tooltip = "ag_side.46.a.tooltip"
		hidden_effect = {
			capital_scope = {
				create_fleet = {
					name = "NAME_ag_lost_ancient_ship_fleet"
					settings = {
						spawn_debris = no
						can_upgrade = no
						uses_naval_capacity = no
					}
					effect = {
						set_owner = root
						create_ship = {
							name = "NAME_ag_lost_ancient_ship"
							design = "NAME_ag_lost_ancient_ship_battleship_form"
							prefix = no
							
							effect = {
								set_ship_flag = ag_lost_ancient_ship
								ag_difficulty_bonus = yes
							}
						}
						set_location = {
							target = prev
							distance = 20
							angle = 0
						}
					}
				}
			}
		}
	}
	option = {
		name = "ag_side.46.b"
		add_resource = {
			alloys = 5000
			sr_living_metal = 1500
			nanites = 1000
			sr_dark_matter = 800
		}
	}
}

# Tachyon Blind area
# on_yearly_pulse, Gatekeeper, spawn archaeological site
event = {
	id = ag_side.101
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = ag_aura_battleship_site_spawned }
		has_global_flag = ag_system_spawn_1
		any_country = {
			is_ai = no
			any_planet_within_border = {
				exists = owner
				owner = { is_same_value = prevprev }
				exists = controller
				controller = { is_same_value = prevprev }
				is_colony = yes
				is_capital = no
				num_pops > 5
				has_ground_combat = no
				has_moon = yes
				any_moon = {
					NOT = {
						exists = archaeological_site
					}
					OR = {
						is_planet_class = pc_barren
						is_planet_class = pc_barren_cold
					}
				}
			}
		}
	}
	
	immediate = {
		random_list = {
			98 = { }
			2 = {
				set_global_flag = ag_aura_battleship_site_spawned
				random_country = {
					limit = {
						is_ai = no
						any_planet_within_border = {
							exists = owner
							owner = { is_same_value = prevprev }
							exists = controller
							controller = { is_same_value = prevprev }
							is_colony = yes
							is_capital = no
							num_pops > 5
							has_ground_combat = no
							has_moon = yes
							any_moon = {
								NOT = {
									exists = archaeological_site
								}
								OR = {
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
								}
							}
						}
					}
					random_planet_within_border = {
						limit = {
							exists = owner
							owner = { is_same_value = prevprev }
							exists = controller
							controller = { is_same_value = prevprev }
							is_colony = yes
							is_capital = no
							num_pops > 5
							has_ground_combat = no
							has_moon = yes
							any_moon = {
								NOT = {
									exists = archaeological_site
								}
								OR = {
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
								}
							}
						}
						planet_event = { id = ag_side.102 days = 3 random = 3 }
					}
				}
			}
		}
	}
}

# Notification, archaeological site spawned
planet_event = {
	id = ag_side.102
	title = "ag_side.102.name"
	desc = "ag_side.102.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_cold_barren_planet_room }
	show_sound = event_sensor_ping
	location = root

	is_triggered_only = yes
	immediate = {
		random_moon = {
			limit = {
				NOT = {
					exists = archaeological_site
				}
				OR = {
					is_planet_class = pc_barren
					is_planet_class = pc_barren_cold
				}
			}
			save_event_target_as = ag_target_moon
		}
	}
	
	option = {
		name = "ag_side.102.a"
		event_target:ag_target_moon = { create_archaeological_site = ag_precursor_research_facility_site }
		hidden_effect = { owner = { set_country_flag = ag_precursor_research_facility_site_discovered } }
	}
	option = {
		name = "ag_side.102.b"
		owner = {
			add_resource = {
				influence = 50
			}
		}
	}
}

# Archaeological site
# Stage 1
fleet_event = {
	id = ag_side.111
	title = "ag_side.111.name"
	desc = "ag_side.111.desc"
	picture = GFX_evt_barren_dig_site
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.111.a"
	}
}
# Stage 2
fleet_event = {
	id = ag_side.112
	title = "ag_side.112.name"
	desc = "ag_side.112.desc"
	picture = GFX_evt_in_the_dark
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.112.a"
	}
}
# Stage 3
fleet_event = {
	id = ag_side.113
	title = "ag_side.113.name"
	desc = "ag_side.113.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_finding_loot
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.113.a"
		small_artifact_reward = yes
	}
}
# Stage 4
fleet_event = {
	id = ag_side.114
	title = "ag_side.114.name"
	desc = "ag_side.114.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.114.a"
		hidden_effect = { owner = { set_country_flag = ag_precursor_databank_site_discovered } }
		small_artifact_reward = yes
		ag_create_precursor_databank_site = yes
	}
}

# Archaeological site
# Stage 1
fleet_event = {
	id = ag_side.121
	title = "ag_side.121.name"
	desc = "ag_side.121.desc"
	picture = GFX_evt_barren_dig_site
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.121.a"
	}
}
# Stage 2
fleet_event = {
	id = ag_side.122
	title = "ag_side.122.name"
	desc = "ag_side.122.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.122.a"
		small_artifact_reward = yes
	}
}
# Stage 3
fleet_event = {
	id = ag_side.123
	title = "ag_side.123.name"
	desc = "ag_side.123.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.123.a"
		owner = {
			add_research_option = tech_ag_aura_battleship
			add_tech_progress = {
				tech = tech_ag_aura_battleship
				progress = 0.10
			}
		}
	}
	option = {
		name = "ag_side.123.b"
		owner = { add_resource = { influence = @ag_end_event_influence_small } }
	}
}


# 4662 Preserved World
# on_yearly_pulse, Gatekeeper, spawn 4662 Preserved World's system
event = {
	id = ag_side.201
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = ag_4662_preserve_area_spawned }
		has_global_flag = ag_primitive_136_fired
		any_country = {
			is_ai = no
			check_variable = { which = ag_ancient_preserved_world_events_counter value > 0 }
			any_system_within_border = {
				OR = {
					has_star_flag = ag_primitive_system
					has_star_flag = ag_primitive_system_2
					has_star_flag = ag_primitive_system_3
				}
			}
		}
	}

	immediate = {
		random_list = {
			98 = { }
			2 = {
				set_global_flag = ag_4662_preserve_area_spawned
				random_country = {
					limit = {
						is_ai = no
						check_variable = { which = ag_ancient_preserved_world_events_counter value > 0 }
						any_system_within_border = {
							OR = {
								has_star_flag = ag_primitive_system
								has_star_flag = ag_primitive_system_2
								has_star_flag = ag_primitive_system_3
							}
						}
					}
					country_event = { id = ag_side.202 }
				}
			}
		}
	}
}

# Notification for 4662 Preserved World events, give special project
country_event = {
	id = ag_side.202
	title = "ag_side.202.name"
	desc = "ag_side.202.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_archaeological_dig_room }
	show_sound = event_sensor_ping
	location = capital_scope

	is_triggered_only = yes
	
	option = {
		name = "ag_side.202.a"
		enable_special_project = {
			name = "ag_located_primitive_system_4"
			location = capital_scope
		}
	}
	option = {
		name = "ag_side.202.b"
		add_resource = { influence = @ag_end_event_influence_small }
	}
}

# Spawn 4662 Preserved World, hidden events
country_event = {
    id = ag_side.203
    hide_window = yes
	is_triggered_only = yes
	
    immediate = {
		save_event_target_as = ag_system_discover_country
		ag_spawn_ancient_system = { ag_system_to_spawn = "ag_primitive_system_4" }
		ag_spawned_system_effect = yes
		create_point_of_interest = {
			id = ag_primitive_system_4_poi
			name = "ag_primitive_system_4_poi"
			desc = "ag_primitive_system_4_desc"
			event_chain = ag_hidden_system_chain
			location = event_target:ag_primitive_world_4.solar_system
		}
    }
	
	after = {
		every_country = {
			limit = {
				has_special_project = ag_located_primitive_system_4
			}
			abort_special_project = {
				type = "ag_located_primitive_system_4"
				location = capital_scope
			}
		}
	}
}

# on_entering_system_fleet, Notification for entering system, ancient fleet in system
fleet_event = {
	id = ag_side.211
	title = "ag_side.211.name"
	desc = "ag_side.211.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_s_option"
	picture_event_data = { room = ag_event_ruined_system_room }
	show_sound = event_mystic_reveal
	location = root
	
	is_triggered_only = yes
	
	trigger = {
		from = { has_star_flag = ag_primitive_system_4 }
		NOT = { owner = { has_country_flag = ag_primitive_system_4_entered } }
		exists = event_target:ag_primitive_4_guardian_country
	}
	
    immediate = {
		owner = {
			establish_communications_no_message = event_target:ag_primitive_4_guardian_country
			set_country_flag = ag_primitive_system_4_entered
		}
	}
	
	option = {
		name = "ag_side.211.a"
	}
}

# on_survey, surveyed planet, add archaeological site
ship_event = {
	id = ag_side.221
	title = "ag_side.221.name"
	desc = "ag_side.221.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_m_option"
	picture_event_data = { room = ag_event_relic_world_room }
	show_sound = event_default
	location = event_target:ag_primitive_world_4
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			has_planet_flag = ag_primitive_world_4
			is_planet_class = pc_relic
		}
		owner = {
			is_ai = no
			NOT = { has_country_flag = ag_side_221_fired }
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = ag_side_221_fired
			remove_point_of_interest = ag_primitive_system_4_poi
		}
	}
	
	option = {
		name = "ag_side.221.a"
		from = {
			create_archaeological_site = ag_primitive_relic_planet_site
		}
		hidden_effect = { owner = { set_country_flag = ag_primitive_relic_planet_site_discovered } }
	}
}
ship_event = {
	id = ag_side.222
	title = "ag_side.222.name"
	desc = "ag_side.222.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_m_option"
	picture_event_data = { room = ag_event_warm_barren_planet_room }
	show_sound = event_default
	location = event_target:ag_primitive_world_4
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			has_planet_flag = ag_primitive_world_4
			is_planet_class = pc_barren
		}
		owner = {
			is_ai = no
			NOT = { has_country_flag = ag_side_222_fired }
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = ag_side_222_fired
			remove_point_of_interest = ag_primitive_system_4_poi
		}
	}
	
	option = {
		name = "ag_side.221.a"
		from = {
			create_archaeological_site = ag_primitive_tomb_planet_site
		}
		hidden_effect = { owner = { set_country_flag = ag_primitive_tomb_planet_site_discovered } }
	}
}

# Archaeological site - Forgotten World
fleet_event = {
	id = ag_side.231
	title = "ag_side.231.name"
	desc = "ag_side.231.desc"
	picture = GFX_evt_relic_world
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.231.a"
	}
}
fleet_event = {
	id = ag_side.232
	title = "ag_side.232.name"
	desc = "ag_side.232.desc"
	picture = GFX_evt_excavation_team
	show_sound = event_finding_loot
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.232.a"
		small_artifact_reward = yes
	}
}
fleet_event = {
	id = ag_side.233
	title = "ag_side.233.name"
	desc = "ag_side.233.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.233.a"
		small_artifact_reward = yes
	}
	option = {
		name = "ag_side.233.a"
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}
			}
		}
		small_artifact_reward = yes
	}
}
fleet_event = {
	id = ag_side.234
	title = "ag_side.234.name"
	desc = "ag_side.234.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.234.a"
		medium_artifact_reward = yes
		owner = {
			add_research_option = tech_ag_ancient_lab
			add_tech_progress = {
				tech = tech_ag_ancient_lab
				progress = 0.1
			}
		}
	}
}

# Archaeological site - Destroyed World
fleet_event = {
	id = ag_side.241
	title = "ag_side.241.name"
	desc = "ag_side.241.desc"
	picture = GFX_evt_habitable_dig_site
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.241.a"
	}
}
fleet_event = {
	id = ag_side.242
	title = "ag_side.242.name"
	desc = "ag_side.242.desc"
	picture = GFX_evt_in_the_dark
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.242.a"
		small_artifact_reward = yes
	}
}
fleet_event = {
	id = ag_side.243
	title = "ag_side.243.name"
	desc = "ag_side.243.desc"
	picture = GFX_evt_underground_city
	show_sound = event_finding_loot
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.243.a"
		small_artifact_reward = yes
	}
}
fleet_event = {
	id = ag_side.244
	title = "ag_side.244.name"
	desc = "ag_side.244.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.244.a"
		trigger = {
			exists = owner
			owner = {
				NOR = {
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_xenophile
				}
			}
		}
		large_artifact_reward = yes
		owner = {
			add_research_option = tech_ag_ancient_lab
			add_tech_progress = {
				tech = tech_ag_ancient_lab
				progress = 0.1
			}
		}
	}
	option = {
		name = "ag_side.244.b"
		trigger = {
			exists = owner
			owner = {
				OR = {
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_xenophile
				}
			}
		}
		large_artifact_reward = yes
		owner = {
			add_research_option = tech_ag_ancient_lab
			add_tech_progress = {
				tech = tech_ag_ancient_lab
				progress = 0.1
			}
		}
	}
	option = {
		name = "ag_side.244.c"
		trigger = {
			exists = owner
			owner = {
				OR = {
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			}
		}
		large_artifact_reward = yes
		owner = {
			add_research_option = tech_ag_ancient_lab
			add_tech_progress = {
				tech = tech_ag_ancient_lab
				progress = 0.1
			}
		}
	}
}


# Advanced Colonizer
# on_yearly_pulse, Gatekeeper, spawn archaeological site
event = {
	id = ag_side.251
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = ag_adv_col_spawned }
		has_global_flag = ag_primitive_136_fired
		any_country = {
			is_ai = no
			check_variable = { which = ag_ancient_preserved_world_events_counter value > 0 }
			any_owned_planet = {
				is_planet_class = pc_desert
				is_capital = no
				has_ground_combat = no
				num_pops > 5
				exists = controller
				controller = { is_same_value = prev.owner }
			}
		}
	}

	immediate = {
		random_list = {
			98 = { }
			2 = {
				set_global_flag = ag_adv_col_spawned
				random_country = {
					limit = {
						is_ai = no
						check_variable = { which = ag_ancient_preserved_world_events_counter value > 0 }
						any_owned_planet = {
							is_planet_class = pc_desert
							is_capital = no
							has_ground_combat = no
							num_pops > 5
							exists = controller
							controller = { is_same_value = prev.owner }
						}
					}
					random_owned_planet = {
						limit = {
							is_planet_class = pc_desert
							is_capital = no
							has_ground_combat = no
							num_pops > 5
							exists = controller
							controller = { is_same_value = prev.owner }
						}
						planet_event = { id = ag_side.252 days = 30 random = 30 }
					}
				}
			}
		}
	}
}
planet_event = {
	id = ag_side.252
	title = "ag_side.252.name"
	desc = "ag_side.252.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_relic_world_street_room }
	show_sound = event_sensor_ping
	location = root

	is_triggered_only = yes

	option = {
		name = "ag_side.252.a"
		create_archaeological_site = ag_buried_city_site
		hidden_effect = { owner = { set_country_flag = ag_buried_city_site_discovered } }
	}
	option = {
		name = "ag_side.252.b"
		add_resource = { influence = @ag_end_event_influence_small }
	}
}

# Archaeological site1
fleet_event = {
	id = ag_side.261
	title = "ag_side.261.name"
	desc = "ag_side.261.desc"
	picture = GFX_evt_desert
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.261.a"
	}
}
fleet_event = {
	id = ag_side.262
	title = "ag_side.262.name"
	desc = "ag_side.262.desc"
	picture = GFX_evt_relic_world_street
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.262.a"
	}
}
fleet_event = {
	id = ag_side.263
	title = "ag_side.263.name"
	desc = "ag_side.263.desc"
	picture = GFX_evt_relic_world
	show_sound = event_finding_loot
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.263.a"
	}
}
fleet_event = {
	id = ag_side.264
	title = "ag_side.264.name"
	desc = "ag_side.264.desc"
	picture = GFX_evt_relic_world_street
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.264.a"
	}
}
fleet_event = {
	id = ag_side.265
	title = "ag_side.265.name"
	desc = "ag_side.265.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = {
		from = { set_site_progress_locked = yes }
		owner = {
			random_planet_within_border = {
				limit = {
					is_asteroid = yes
					NOT = { exists = archaeological_site }
				}
				save_event_target_as = ag_target_planet
			}
			if = {
				limit = { NOT = { exists = event_target:ag_target_planet } }
				random_planet_within_border = {
					limit = { is_asteroid = yes }
					save_event_target_as = ag_target_planet
				}
				if = {
					limit = { NOT = { exists = event_target:ag_target_planet } }
					random_galaxy_planet = {
						limit = { is_asteroid = yes }
						save_event_target_as = ag_target_planet
					}
				}
			}
		}
	}
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.265.a"
		trigger = { exists = event_target:ag_target_planet }
		event_target:ag_target_planet = { create_archaeological_site = ag_asteroid_habitat_site }
		hidden_effect = { owner = { set_country_flag = ag_asteroid_habitat_site_discovered } }
	}
	option = {
		name = "ag_side.265.b"
		owner = { add_resource = { influence = @ag_end_event_influence_small } }
	}
}

# Archaeological site2
fleet_event = {
	id = ag_side.271
	title = "ag_side.271.name"
	desc = "ag_side.271.desc"
	picture = GFX_evt_space_station
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.271.a"
	}
}
fleet_event = {
	id = ag_side.272
	title = "ag_side.272.name"
	desc = "ag_side.272.desc"
	picture = GFX_evt_space_hangar
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.272.a"
	}
}
fleet_event = {
	id = ag_side.273
	title = "ag_side.273.name"
	desc = "ag_side.273.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_finding_loot
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.273.a"
	}
}
fleet_event = {
	id = ag_side.274
	title = "ag_side.274.name"
	desc = "ag_side.274.desc"
	picture = GFX_evt_archaeological_dig
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no }  }
	option = {
		name = "ag_side.274.a"
		owner = {
			add_research_option = tech_ag_advanced_colonizer
			add_tech_progress = {
				tech = tech_ag_advanced_colonizer
				progress = 0.08
			}
		}
	}
	option = {
		name = "ag_side.274.b"
		owner = { add_resource = { influence = @ag_end_event_influence_small } }
	}
}

# Anomalies
# Collapsed Ground
ship_event = {
	id = ag_side.301
	title = "ag_side.301.name"
	desc = "ag_side.301.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_warm_barren_planet_room }
	show_sound = event_default
	location = root

	is_triggered_only = yes

	option = {
		name = "ag_side.301.a"
		owner = {
			if = {
				limit = {
					NOR = {
						has_technology = tech_mine_dark_matter
						has_tech_option = tech_mine_dark_matter
					}
				}
				add_research_option = tech_mine_dark_matter
				add_tech_progress = {
					tech = tech_mine_dark_matter
					progress = 0.05
				}
			}
			else_if = {
				limit = { has_tech_option = tech_mine_dark_matter }
				add_tech_progress = {
					tech = tech_mine_dark_matter
					progress = 0.50
				}
			}
			else_if = {
				limit = { has_technology = tech_mine_dark_matter }
				locked_random_list = {
					30 = { add_resource = { sr_dark_matter = 10 } }
					20 = { add_resource = { sr_dark_matter = 20 } }
					10 = { add_resource = { sr_dark_matter = 30 } }
				}
			}
		}
		locked_random_list = {
			9 = { from = { add_deposit = d_dark_matter_deposit_1 } }
			4 = { from = { add_deposit = d_dark_matter_deposit_2 } }
			1 = { from = { add_deposit = d_dark_matter_deposit_3 } }
		}
	}
}
# Active Asteroid
ship_event = {
	id = ag_side.302
	title = "ag_side.302.name"
	desc = "ag_side.302.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_mining_station_room }
	show_sound = event_airlock
	location = root

	is_triggered_only = yes

	option = {
		name = "ag_side.302.a"
		owner = {
			locked_random_list = {
				30 = { add_resource = { nanites = 50 } }
				20 = { add_resource = { nanites = 75 } }
				10 = { add_resource = { nanites = 100 } }
			}
		}
		locked_random_list = {
			9 = { from = { add_deposit = d_nanites_deposit } }
			4 = { from = { while = { count = 2 add_deposit = d_nanites_deposit } } }
			1 = { from = { while = { count = 3 add_deposit = d_nanites_deposit } } }
		}
	}
}
# Strange Hill
ship_event = {
	id = ag_side.303
	title = "ag_side.303.name"
	desc = "ag_side.303.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_relic_shipyard_room }
	show_sound = event_default
	location = root

	is_triggered_only = yes

	option = {
		name = "ag_side.303.a"
		owner = {
			if = {
				limit = {
					NOR = {
						has_technology = tech_mine_living_metal
						has_tech_option = tech_mine_living_metal
					}
				}
				add_research_option = tech_mine_living_metal
				add_tech_progress = {
					tech = tech_mine_living_metal
					progress = 0.05
				}
			}
			else_if = {
				limit = { has_tech_option = tech_mine_living_metal }
				add_tech_progress = {
					tech = tech_mine_living_metal
					progress = 0.50
				}
			}
			else_if = {
				limit = { has_technology = tech_mine_living_metal }
				locked_random_list = {
					30 = { add_resource = { sr_living_metal = 10 } }
					20 = { add_resource = { sr_living_metal = 20 } }
					10 = { add_resource = { sr_living_metal = 30 } }
				}
			}
		}
		locked_random_list = {
			9 = { from = { add_deposit = d_living_metal_deposit } }
			4 = { from = { while = { count = 2 add_deposit = d_living_metal_deposit } } }
			1 = { from = { while = { count = 3 add_deposit = d_living_metal_deposit } } }
		}
	}
}
