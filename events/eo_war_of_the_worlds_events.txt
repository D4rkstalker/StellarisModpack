namespace = eo_war_of_the_worlds

country_event = {
	id = eo_war_of_the_worlds.1
	title = eo_war_of_the_worlds.1.name
	desc = { # Non-genocidal regular
		trigger = {
			event_target:invader_empire = {
				is_regular_empire = yes
				is_homicidal = no
			}
		}
		text = eo_war_of_the_worlds.1.desc.a
	}
	desc = { # Genocidal regular
		trigger = {
			event_target:invader_empire = {
				is_regular_empire = yes
				is_homicidal = yes 
			}
		}
		text = eo_war_of_the_worlds.1.desc.b
	}
	desc = { # Non-genocidal hive
		trigger = {
			event_target:invader_empire = {
				is_hive_empire = yes
				is_homicidal = no 
			}
		}
		text = eo_war_of_the_worlds.1.desc.c
	}
	desc = { # Genocidal hive
		trigger = {
			event_target:invader_empire = {
				is_hive_empire = yes
				is_homicidal = yes 
			}
		}
		text = eo_war_of_the_worlds.1.desc.d
	}
	desc = { # Non-genocidal machine
		trigger = {
			event_target:invader_empire = {
				is_machine_empire = yes
				is_homicidal = no
				NOR = {
					has_valid_civic = civic_machine_assimilator
					has_valid_civic = civic_machine_servitor
				}
			}
		}
		text = eo_war_of_the_worlds.1.desc.e
	}
	desc = { # Genocidal machine
		trigger = {
			event_target:invader_empire = {
				is_machine_empire = yes
				is_homicidal = yes 
			}
		}
		text = eo_war_of_the_worlds.1.desc.f
	}
	desc = { # Assimilator
		trigger = {
			event_target:invader_empire = {
				is_machine_empire = yes
				has_valid_civic = civic_machine_assimilator 
			}
		}
		text = eo_war_of_the_worlds.1.desc.g
	}
	desc = { # Assimilator
		trigger = {
			event_target:invader_empire = {
				is_machine_empire = yes
				has_valid_civic = civic_machine_servitor
			}
		}
		text = eo_war_of_the_worlds.1.desc.h
	}
	show_sound = event_conversation
	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:invader_empire
		planet_background = event_target:invader_empire
		graphical_culture = event_target:invader_empire
		city_level = event_target:invader_empire
		room = event_target:invader_empire.ruler
	}

	option = {
		name = eo_war_of_the_worlds.1.a
		icon = {
			icon = GFX_option_icon_hostile
			text = war_of_the_worlds_first_contact_tt
		}
	}
}

planet_event = {
	id = eo_war_of_the_worlds.2
	title = eo_war_of_the_worlds.2.name
	desc = {
		text = eo_war_of_the_worlds.2.desc
		trigger = {
			event_target:victorious_empire = {
				is_gestalt = no
			}
		}
	}
	desc = {
		text = eo_war_of_the_worlds.2.desc.gestalt
		trigger = {
			event_target:victorious_empire = {
				is_gestalt = yes
			}
		}
	}
	picture = GFX_evt_victorious_army
	location = this
	show_sound = event_celebration

	is_triggered_only = yes

	option = {
		name = eo_war_of_the_worlds.2.a
		from = {
			add_monthly_resource_mult = {
				resource = unity
				value = @tier3unityreward
				min = @tier3unitymin
				max = @tier3unitymax
			}
		}
	}
}

country_event = {
	id = eo_war_of_the_worlds.3
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = {
			NOT = { has_country_flag = forgave_invader }
			has_origin = origin_war_of_the_worlds
		}
		this = {
			has_country_flag = invader_of_@from
		}
	}

	immediate = {
		this = {
			save_event_target_as = invader_empire
			capital_scope = {
				save_event_target_as = conquered_capital
			}
		}
		from = {
			country_event = { id = eo_war_of_the_worlds.4 }
		}
	}
}

country_event = {
	id = eo_war_of_the_worlds.4
	title = eo_war_of_the_worlds.4.name
	desc = {
		text = eo_war_of_the_worlds.4.desc
		trigger = {
			is_gestalt = no
		}
	}
	desc = {
		text = eo_war_of_the_worlds.4.desc.gestalt
		trigger = {
			is_gestalt = yes
		}
	}
	picture = GFX_evt_crisis_defeated
	location = event_target:conquered_capital
	show_sound = event_celebration

	is_triggered_only = yes

	option = {
		name = eo_war_of_the_worlds.4.a
		add_monthly_resource_mult = {
			resource = unity
			value = @tier5unityreward
			min = @tier5unitymin
			max = @tier5unitymax
		}
	}
}

planet_event = {
	id = eo_war_of_the_worlds.5
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = {
			NOT = { has_country_flag = forgave_invader }
			has_origin = origin_war_of_the_worlds
		}
		this = {
			has_planet_flag = invaders_homeworld_of_@from
		}
		any_country = {
			exists = this
			has_country_flag = invader_of_@from
		}
	}

	immediate = {
		random_country = {
			limit = {
				has_country_flag = invader_of_@from
			}
			save_event_target_as = invader_empire
		}
		from = {
			save_event_target_as = victorious_empire
		}
		planet_event = { id = eo_war_of_the_worlds.2 days = 3 }
	}
}

country_event = {
	id = eo_war_of_the_worlds.6
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_origin = origin_war_of_the_worlds
		NOT = { has_country_flag = forgave_invader }
		any_country = {
			has_country_flag = invader_of_@root
			OR = {
				is_cordial_to = root
				is_friendly_to = root
				is_protective_to = root
				is_loyal_to = root
			}
		}
	}

	immediate = {
		random_country = {
			limit = {
				has_country_flag = invader_of_@root
			}
			save_event_target_as = friendly_invader
		}
		country_event = { id = eo_war_of_the_worlds.7 }
	}
}

country_event = {
	id = eo_war_of_the_worlds.7
	title = eo_war_of_the_worlds.1.name
	desc = eo_war_of_the_worlds.7.desc
	show_sound = event_conversation
	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:friendly_invader
		planet_background = event_target:friendly_invader
		graphical_culture = event_target:friendly_invader
		city_level = event_target:friendly_invader
		room = event_target:friendly_invader.ruler
	}

	option = {
		name = eo_war_of_the_worlds.7.a
		icon = {
			icon = GFX_option_icon_friendly
			text = time_to_move_on_tt
		}
		set_country_flag = forgave_invader
		remove_opinion_modifier = { modifier = opinion_extraterrestrial_invaders who = event_target:friendly_invader }
		event_target:friendly_invader = {
			remove_opinion_modifier = { modifier = opinion_primitive_upstarts who = root }
		}
		if = {
			limit = {
				owner_species.home_planet = {
					is_same_value = root.capital_scope
				}
			}
			capital_scope.solar_system = {
				remove_claims = { who = event_target:friendly_invader num_of_claims = 10 }
			}
		}
	}
	option = {
		name = eo_war_of_the_worlds.7.b
		icon = {
			icon = GFX_option_icon_hostile
			text = no_forgiveness_tt
		}
		add_monthly_resource_mult = {
			resource = unity
			value = @tier4unityreward
			min = @tier4unitymin
			max = @tier4unitymax
		}
		event_target:friendly_invader = {
			add_resource = { influence = -40 }
			add_opinion_modifier = { modifier = opinion_renewed_hostilities who = root }
		}
		add_opinion_modifier = { modifier = opinion_renewed_hostilities who = event_target:friendly_invader }
	}
}

country_event = {
	id = eo_war_of_the_worlds.8
	title = eo_war_of_the_worlds.8.name
	desc = {
		text = eo_war_of_the_worlds.8.desc.a
		trigger = {
			has_modifier = newly_subjugated_loyalty
		}
	}
	desc = {
		text = eo_war_of_the_worlds.8.desc.b
		trigger = {
			NOT = { has_modifier = newly_subjugated_loyalty }
		}
	}
	picture = {
		trigger = {
			from = {
				is_machine_empire = yes
			}
		}
		picture = GFX_evt_organic_oppression
	}
	picture = {
		trigger = {
			from = {
				is_machine_empire = no
			}
			NOT = { has_modifier = newly_subjugated_loyalty }
		}
		picture = GFX_evt_one_sided_deal
	}
	location = capital_scope
	show_sound = event_planetary_riot

	is_triggered_only = yes

	trigger = {
		has_origin = origin_war_of_the_worlds
		from = {
			has_country_flag = invader_of_@root
		}
	}

	option = {
		name = eo_war_of_the_worlds.8.a
	}
}