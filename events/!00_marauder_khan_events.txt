namespace = marauder

############################################
############################################
#####             Marauder             #####
#####    Khan (Horde Crisis) Events    #####
#####    Vanilla by Henrik Thyrwall    #####
#####    Replaced by Crisis Manager    #####
#####                                  #####
############################################
############################################
#
# Check all events: has_country_flag = marauder_x (x = 1 - 3)
#

###################
###  Constants  ###
###################

### Critical (Lifespan of Khan, debug code)
@CmtConstKhanLifespan_1a =     1		### Minimun Lifespan / day
@CmtConstKhanLifespan_1b =  0.025		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_1c =    35		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_1d =     5		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_1e =     8		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_1f =     4		### Time-Lag of Post-Death Process (random = 1f)

### Fleeting (Lifespan of Khan)
@CmtConstKhanLifespan_2a =  4320		### Minimun Lifespan / day
@CmtConstKhanLifespan_2b =  0.75		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_2c =  7200		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_2d =  2880		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_2e =    90		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_2f =    60		### Time-Lag of Post-Death Process (random = 1f)

### Standard (Lifespan of Khan)
@CmtConstKhanLifespan_3a =  7200		### Minimun Lifespan / day
@CmtConstKhanLifespan_3b =  1.00		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_3c = 10800		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_3d =  5000		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_3e =   200		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_3f =   100		### Time-Lag of Post-Death Process (random = 1f)

### Enduring (Lifespan of Khan)
@CmtConstKhanLifespan_4a = 10800		### Minimun Lifespan / day
@CmtConstKhanLifespan_4b =  3.00		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_4c = 16200		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_4d =  5400		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_4e =   270		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_4f =   180		### Time-Lag of Post-Death Process (random = 1f)

### Venerable (Lifespan of Khan)
@CmtConstKhanLifespan_5a = 18000		### Minimun Lifespan / day
@CmtConstKhanLifespan_5b =  5.00		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_5c = 27000		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_5d =  9000		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_5e =   360		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_5f =   360		### Time-Lag of Post-Death Process (random = 1f)

### Immortality (Lifespan of Khan): Directly Written in Event/Effect
@CmtConstKhanLifespan_6e =   360		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_6f =   360		### Time-Lag of Post-Death Process (random = 1f)


### Marauders Destroyed (HIDDEN) on_ship_destroyed_victim
# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
country_event = {
	id = marauder.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_country_type = dormant_marauders
		OR = {
			AND = { # Last ship is Void Dwelling
				FROMFROM = { is_ship_size = marauder_void_dwelling }
				count_owned_ship = {
					limit = { is_ship_size = marauder_void_dwelling }
					count = 0
				}
				num_starbases = 0
			}
			AND = { # Last ship is Starbase
				FROMFROM = { is_ship_size = starbase_marauder }
				count_owned_ship = {
					limit = { is_ship_size = marauder_void_dwelling }
					count = 0
				}
				num_starbases = 1 # Last one still counts as alive when this fires
			}
		}
	}

	immediate = {
		from = { save_event_target_as = marauder_killer }
		owner_species = { save_event_target_as = marauder_species }
		every_playable_country = {
			limit = {
				is_ai = no
				has_communications = root
			}
			country_event = { id = marauder.5 } # Notify
		}
		random_relation = {
			limit = {
				CmtTriggerIsPlayableEmpire = yes
				has_policy_flag = refugees_allowed
				has_communications = root
			}
			country_event = { id = marauder.9 days = 10 random = 10 } # Refugees
		}

		# Vengeance if Mercenaries hired
		if = {
			limit = {
				from = { CmtTriggerIsPlayableEmpire = yes }
				OR = {
					has_country_flag = merc_fleet_1_hired
					has_country_flag = merc_fleet_2_hired
					has_country_flag = merc_fleet_3_hired
				}
			}
			from = {
				country_event = { id = marauder.6 days = 100 random = 50 }
			}


			if = {
				limit = { exists = fromfromfrom exists = fromfromfrom.solar_system }
				fromfromfrom.solar_system = {
					random_system_planet = {
						limit = { is_star = no }
						weights = {
							base = 1
							modifier = { add = 3 has_planet_flag = raid_source }
							modifier = { add = 2 is_colony = yes }
						}
						save_global_event_target_as = CmtTargetMarauderRallyPoint
					}
				}
			}

			# Mercenary Desertions (Marauder 1)
			if = {
				limit = { has_country_flag = marauder_1 }
				every_playable_country = {
					limit = { any_owned_fleet = { CmtTriggerHiredMarauderFleet1 = yes } }
					set_country_flag = CmtFlagHiringMarauder1
					country_event = { id = marauder.76 days = 20 random = 20 }
				}
				if = {
					limit = { NOT = { exists = event_target:CmtTargetMarauderRallyPoint } }
					random_system = {
						limit = {
							has_star_flag = marauder_system
							OR = {
								has_owner = no
								is_owned_by = ROOT
							}
						}
						weights = {
							base = 1
							modifier = { add = 3 has_star_flag = marauder_capital_1 }
						}
						random_system_planet = {
							limit = { is_star = no }
							weights = {
								base = 1
								modifier = { add = 3 has_planet_flag = raid_source }
								modifier = { add = 2 is_colony = yes }
							}
							save_global_event_target_as = CmtTargetMarauderRallyPoint
						}
					}
				}
			}
			# Mercenary Desertions (Marauder 2)
			else_if = {
				limit = { has_country_flag = marauder_2 }
				every_playable_country = {
					limit = { any_owned_fleet = { CmtTriggerHiredMarauderFleet2 = yes } }
					country_event = { id = marauder.76 days = 20 random = 20 }
				}
				if = {
					limit = { NOT = { exists = event_target:CmtTargetMarauderRallyPoint } }
					random_system = {
						limit = {
							has_star_flag = marauder_system
							OR = {
								has_owner = no
								is_owned_by = ROOT
							}
						}
						weights = {
							base = 1
							modifier = { add = 3 has_star_flag = marauder_capital_2 }
						}
						random_system_planet = {
							limit = { is_star = no }
							weights = {
								base = 1
								modifier = { add = 3 has_planet_flag = raid_source }
								modifier = { add = 2 is_colony = yes }
							}
							save_global_event_target_as = CmtTargetMarauderRallyPoint
						}
					}
				}
			}
			# Mercenary Desertions (Marauder 3)
			else_if = {
				limit = { has_country_flag = marauder_3 }
				every_playable_country = {
					limit = { any_owned_fleet = { CmtTriggerHiredMarauderFleet3 = yes } }
					country_event = { id = marauder.76 days = 20 random = 20 }
				}
				if = {
					limit = { NOT = { exists = event_target:CmtTargetMarauderRallyPoint } }
					random_system = {
						limit = {
							has_star_flag = marauder_system
							OR = {
								has_owner = no
								is_owned_by = ROOT
							}
						}
						weights = {
							base = 1
							modifier = { add = 3 has_star_flag = marauder_capital_3 }
						}
						random_system_planet = {
							limit = { is_star = no }
							weights = {
								base = 1
								modifier = { add = 3 has_planet_flag = raid_source }
								modifier = { add = 2 is_colony = yes }
							}
							save_global_event_target_as = CmtTargetMarauderRallyPoint
						}
					}
				}
			}

			set_country_type = ruined_marauders # Kill diplomacy
			# superfluous?
			set_faction_hostility = {
				target = from
				set_hostile = yes
			}

		}
		else = { destroy_country = yes }
	}
}

# Marauder Vengeance
country_event = {
	id = marauder.8
	title = "marauder.6.name"
	desc = "marauder.8.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = event_target:attacked_system
	is_triggered_only = yes
	option = {
		name = DISCONCERTING
	}
	after = {
		hidden_effect = {
			if = { limit = { exists = event_target:CmtTargetMarauderRallyPoint }
				clear_global_event_target = CmtTargetMarauderRallyPoint
			}
		}
	}
}

### Mercenaries Leave (Home Systems Destroyed)
# This = Hiring country
# From = Destroyed Marauders
country_event = {
	id = marauder.76
	title = "marauder.76.name"
	desc = "marauder.76.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter
	location = this
	is_triggered_only = yes
	immediate = {
		# Marauder 1
		if = {
			limit = {
				has_country_flag = CmtFlagHiringMarauder1
				# from = { has_country_flag = marauder_1 } not always exists
			}
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet1 = yes }
				if = {
					limit = {
						exists = from exists = event_target:CmtTargetMarauderRallyPoint
					}
					set_owner = from
					if = { limit = { exists = leader }
						leader = {
							remove_leader_flag = marauder_merc_leader
							set_owner = from
						}
					}
					auto_move_to_planet = {
						target = event_target:CmtTargetMarauderRallyPoint
						clear_auto_move_on_arrival = no
					}

				} else = {
					if = { limit = { exists = leader }
						leader = {
							kill_leader = { show_notification = no }
						}
					}
					delete_fleet = this
				}
			}
			remove_country_flag = CmtFlagHiringMarauder1
			break = yes
		}
		# Marauder 2
		else_if = {
			limit = {
				has_country_flag = CmtFlagHiringMarauder2
				# from = { has_country_flag = marauder_2 } not always exists
			}
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet2 = yes }
				if = {
					limit = {
						exists = from exists = event_target:CmtTargetMarauderRallyPoint
					}
					set_owner = from
					if = { limit = { exists = leader }
						leader = {
							remove_leader_flag = marauder_merc_leader
							set_owner = from
						}
					}
					auto_move_to_planet = {
						target = event_target:CmtTargetMarauderRallyPoint
						clear_auto_move_on_arrival = no
					}

				} else = {
					if = { limit = { exists = leader }
						leader = {
							kill_leader = { show_notification = no }
						}
					}
					delete_fleet = this
				}
			}
			remove_country_flag = CmtFlagHiringMarauder2
			break = yes
		}
		# Marauder 3
		else_if = {
			limit = {
				has_country_flag = CmtFlagHiringMarauder3
				# from = { has_country_flag = marauder_3 } not always exists
			}
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet3 = yes }
				if = {
					limit = {
						exists = from exists = event_target:CmtTargetMarauderRallyPoint
					}
					set_owner = from
					if = { limit = { exists = leader }
						leader = {
							remove_leader_flag = marauder_merc_leader
							set_owner = from
						}
					}
					auto_move_to_planet = {
						target = event_target:CmtTargetMarauderRallyPoint
						clear_auto_move_on_arrival = no
					}

				} else = {
					if = { limit = { exists = leader }
						leader = {
							kill_leader = { show_notification = no }
						}
					}
					delete_fleet = this
				}
			}
			remove_country_flag = CmtFlagHiringMarauder3
		}
	}

	option = {
		name = marauder.76.a
	}
}

### Mercenaries Leave (join the Great Khan)
# Scope = Recruiter
country_event = {
	id = marauder.77
	title = "marauder.77.name"
	desc = "marauder.77.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter

	is_triggered_only = yes

	immediate = {
		# Marauder 1
		if = {
			limit = { has_country_flag = CmtFlagHiringMarauder1 }
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet1 = yes }
				leader = {
					remove_leader_flag = marauder_merc_leader
					# kill_leader = { show_notification = no }
					set_owner = event_target:raider_khanate
				}
				# delete_fleet = this
				set_owner = event_target:raider_khanate
				fleet_event = { id = khan.611 days = -1 }
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_1 }
				# kill_leader = { show_notification = no }
				set_owner = event_target:raider_khanate
			}
			remove_country_flag = CmtFlagHiringMarauder1
			if = { # All Marauders unified
				limit = {
					event_target:CmtGlobalVar = {
						check_variable = { which = CmtVarKhanMultiple value < 5 }
					}
				}
				break = yes
			}
		}
		# Marauder 2
		if = {
			limit = { has_country_flag = CmtFlagHiringMarauder2 }
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet2 = yes }
				leader = {
					remove_leader_flag = marauder_merc_leader
					# kill_leader = { show_notification = no }
					set_owner = event_target:raider_khanate
				}
				# delete_fleet = this
				set_owner = event_target:raider_khanate
				fleet_event = { id = khan.611 days = -1 }
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_2 }
				# kill_leader = { show_notification = no }
				set_owner = event_target:raider_khanate
			}
			remove_country_flag = CmtFlagHiringMarauder2
			if = { # All Marauders unified
				limit = {
					event_target:CmtGlobalVar = {
						check_variable = { which = CmtVarKhanMultiple value < 5 }
					}
				}
				break = yes
			}
		}
		# Marauder 3
		if = {
			limit = { has_country_flag = CmtFlagHiringMarauder3 }
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet3 = yes }
				leader = {
					remove_leader_flag = marauder_merc_leader
					# kill_leader = { show_notification = no }
					set_owner = event_target:raider_khanate
				}
				# delete_fleet = this
				set_owner = event_target:raider_khanate
				fleet_event = { id = khan.611 days = -1 }
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_3 }
				# kill_leader = { show_notification = no }
				set_owner = event_target:raider_khanate
			}
			remove_country_flag = CmtFlagHiringMarauder3
		}
	}

	option = { name = marauder.76.a }
}

########################
###  Reinforcements  ###
########################

### Mercenaries Join Great Khan (HIDDEN)
country_event = {
	id = marauder.78
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } } }
			every_planet_within_border = {
				limit = { has_planet_flag = CmtFlagMarauderExpRallyPoint }
				switch = {
					trigger = is_same_value
					event_target:CmtTargetMarauderRallyPoint1 = { CmtEffectCreateAdmiralty_KhanMercenaries1 = yes }
					event_target:CmtTargetMarauderRallyPoint2 = { CmtEffectCreateAdmiralty_KhanMercenaries2 = yes }
					event_target:CmtTargetMarauderRallyPoint3 = { CmtEffectCreateAdmiralty_KhanMercenaries3 = yes }
				}
			}
		} else = {
			switch = {
				trigger = has_country_flag
				marauder_1 = { event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanMercenaries1 = yes } }
				marauder_2 = { event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanMercenaries2 = yes } }
				marauder_3 = { event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanMercenaries3 = yes } }
			}
		}
		event_target:marauder_rally_point = {
			solar_system = { system_event = { id = khan.301 } }
		}
	}

	after = {
		hidden_effect = {
			if = { limit = { exists = event_target:CmtTargetMarauderRallyPoint1 }
				clear_global_event_target = CmtTargetMarauderRallyPoint1
			}
			if = { limit = { exists = event_target:CmtTargetMarauderRallyPoint2 }
				clear_global_event_target = CmtTargetMarauderRallyPoint2
			}
			if = { limit = { exists = event_target:CmtTargetMarauderRallyPoint3 }
				clear_global_event_target = CmtTargetMarauderRallyPoint3
			}
		}
	}
}

### Start Marauder pirate01 -> madd_01 Gfxculture Override
event = {
	id = marauder.99
	hide_window = yes
	is_triggered_only = yes
	# potential = {
	immediate = {
		every_country = {
			limit = {
				CmtTriggerIsMarauder = yes
				NOT = { graphical_culture = madd_01 }
			}
			set_graphical_culture = madd_01
		}
	}
}

# Raiders Hit Planet (Slaves)
planet_event = {
	id = marauder.105
	title = "marauder.104.name"
	desc = "marauder.105.desc"
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot
	location = root
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = { is_colony = yes }
	immediate = {
		# if = { limit = { exists = from exists = from.species }
		# 	log="Marauder From.species exists [From.GetName]"
		# } else = { log="No Marauder From [From.GetName]" }
		while = {
			count = 5
			limit = { num_pops > 1 }
			random_owned_pop = {
				limit = {
					is_robot_pop = no
					is_sapient = yes
				}
				weights = {
					base = 3
					modifier = { add = 1 OR = { is_pop_category = slave is_pop_category = purge } }
					modifier = { add = 1 is_unemployed = yes }
					# modifier = { add = -2 exists = fromfrom exists = fromfrom.species is_same_species = fromfrom.species }
					# modifier = { add = 1 prev = { count_owned_pop = { limit = { is_same_species = prevprev } count > 5 } } }
					# modifier = { add = 1 NOT = { ideal_planet_class = prev } }
					# modifier = { add = 2 species_can_be_necrophaged = no }
				}
				kill_pop = yes
			}
		}
	}
	option = { name = marauder.105.a }
}

# Raiders Hit Planet (Servitor Machines)
planet_event = {
	id = marauder.107
	title = "marauder.104.name"
	desc = "marauder.107.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = root
	is_triggered_only = yes
	option = {
		name = marauder.107.a
		while = {
			count = 5
			limit = { num_pops > 1 }
			random_owned_pop = {
				limit = {
					is_robot_pop = no
					is_sapient = yes
				}
				weights = {
					base = 3
					modifier = { add = 1 OR = { is_pop_category = slave is_pop_category = purge } }
					modifier = { add = 1 is_unemployed = yes }
					# modifier = { add = -2 is_same_species = fromfrom }
				}
				kill_pop = yes
			}
		}
	}
}

#######################################
###  Main Effect of Khan Awakening  ###
#######################################

### CRISIS BEGINS
country_event = {
	id = marauder.500
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		CmtTriggerHasPotentialKhanAwaking = yes
		CmtTriggerNowInKhanCrisis = no
	}
	# trigger = {
	# 	OR = {
	# 		AND = {
	# 			mid_game_years_passed >= 1
	# 			end_game_years_passed < 0
	# 		}
	# 		has_global_flag = horde_triggered
	# 	}
	# 	is_country_type = dormant_marauders
	# 	NOT = { has_global_flag = marauder_crisis_started }
	# 	OR = {
	# 		AND = {
	# 			has_country_flag = marauder_1
	# 			any_system_within_border = { has_star_flag = marauder_capital_1 }
	# 		}
	# 		AND = {
	# 			has_country_flag = marauder_2
	# 			any_system_within_border = { has_star_flag = marauder_capital_2 }
	# 		}
	# 		AND = {
	# 			has_country_flag = marauder_3
	# 			any_system_within_border = { has_star_flag = marauder_capital_3 }
	# 		}
	# 	}
	# }
	# mean_time_to_happen = {
	# 	years = 100
	# 	modifier = {
	# 		factor = 0.66
	# 		mid_game_years_passed >= 50
	# 	}
	# 	modifier = {
	# 		factor = 0.01
	# 		mid_game_years_passed >= 0
	# 		has_global_flag = force_khan
	# 	}
	# 	modifier = {
	# 		factor = 1.5
	# 		count_country = {
	# 			limit = { is_country_type = dormant_marauders }
	# 			count > 1
	# 		}
	# 		count_country = {
	# 			limit = { is_country_type = dormant_marauders }
	# 			count < 3
	# 		}
	# 	}
	# 	modifier = {
	# 		factor = 2
	# 		count_country = {
	# 			limit = { is_country_type = dormant_marauders }
	# 			count > 2
	# 		}
	# 	}
	# }
	immediate = {
		if = {
			limit = {
				OR = {
					exists = event_target:raider_khanate
					has_global_flag = marauder_crisis_started
				}
			}
			clear_global_event_target = raider_khanate
			every_playable_country = {
				limit = { has_country_flag = rebelling_satrapy }
				remove_country_flag = rebelling_satrapy
			}
		}
		if = { limit = { exists = event_target:marauder_rally_point }
			clear_global_event_target = marauder_rally_point
		}

		set_global_flag = marauder_crisis_started
		set_global_flag = marauder_crisis_ongoing
		save_global_event_target_as = raider_khanate

		if = { limit = { NOT = { exists = event_target:marauder_country_1 } }
			random_country = { limit = { has_country_flag = marauder_1 }
				save_global_event_target_as = marauder_country_1
			}
		}
		if = { limit = { NOT = { exists = event_target:marauder_country_2 } }
			random_country = { limit = { has_country_flag = marauder_2 }
				save_global_event_target_as = marauder_country_2
			}
		}
		if = { limit = { NOT = { exists = event_target:marauder_country_3 } }
			random_country = { limit = { has_country_flag = marauder_3 }
				save_global_event_target_as = marauder_country_3
			}
		}

		### Rally Point of Fleets 1/3: Set Event Targets; Set Owner Species to Target
		if = { limit = { exists = event_target:marauder_country_1 }
			event_target:marauder_country_1 = {
				owner_species = { save_global_event_target_as = CmtTargetSpecies_Marauder1 }
				if = {
					limit = { any_system_within_border = { has_star_flag = marauder_capital_1 } }
					random_system_within_border = {
						limit = { has_star_flag = marauder_capital_1 }
						if = {
							limit = { any_system_planet = { has_planet_flag = raid_source } }
							random_system_planet = {
								limit = { has_planet_flag = raid_source }
								save_global_event_target_as = CmtTargetMarauderRallyPoint1
							}
						}
						else = {
							## Backup Code: raid_source NOT Found in Capital System
							random_system_planet = {
								limit = { is_star = no is_colony = yes }
								save_global_event_target_as = CmtTargetMarauderRallyPoint1
							}
							log = "Backup Code for CmtTargetMarauderRallyPoint1 - 1 Processed"
						}
					}
				}
				else = {
					## Backup Code: Capital System NOT Found
					random_planet_within_border = {
						limit = { is_star = no is_colony = yes }
						save_global_event_target_as = CmtTargetMarauderRallyPoint1
					}
					log = "Backup Code for CmtTargetMarauderRallyPoint1 - 2 Processed"
					# Recover former capital
					if = {
						limit = {
							any_system_within_border = {
								any_neighbor_system = {
									has_owner = no
									has_star_flag = marauder_capital_1
								}
							}
						}
						random_system_within_border = {
							random_neighbor_system = {
								limit = {
									has_owner = no
									has_star_flag = marauder_capital_1
								}
								event_target:marauder_country_1 = { save_event_target_as = marauder_starbase_owner }
								create_marauder_starbase = yes
							}
						}
					}
				}
			}
		}
		if = { limit = { exists = event_target:marauder_country_2 }
			event_target:marauder_country_2 = {
				owner_species = { save_global_event_target_as = CmtTargetSpecies_Marauder2 }
				if = {
					limit = { any_system_within_border = { has_star_flag = marauder_capital_2 } }
					random_system_within_border = {
						limit = { has_star_flag = marauder_capital_2 }
						if = {
							limit = { any_system_planet = { has_planet_flag = raid_source } }
							random_system_planet = {
								limit = { has_planet_flag = raid_source }
								save_global_event_target_as = CmtTargetMarauderRallyPoint2
							}
						}
						else = {
							## Backup Code: raid_source NOT found in Capital System
							random_system_planet = {
								limit = { is_star = no is_colony = yes }
								save_global_event_target_as = CmtTargetMarauderRallyPoint2
							}
							log = "Backup Code for CmtTargetMarauderRallyPoint2 - 1 Processed"
						}
					}
				}
				else = {
					## Backup Code: Capital System NOT Found
					random_planet_within_border = {
						limit = { is_star = no is_colony = yes }
						save_global_event_target_as = CmtTargetMarauderRallyPoint2
					}
					log = "Backup Code for CmtTargetMarauderRallyPoint2 - 2 Processed"
					# Recover former capital
					if = {
						limit = {
							any_system_within_border = {
								any_neighbor_system = {
									has_owner = no
									has_star_flag = marauder_capital_2
								}
							}
						}
						random_system_within_border = {
							random_neighbor_system = {
								limit = {
									has_owner = no
									has_star_flag = marauder_capital_2
								}
								event_target:marauder_country_2 = { save_event_target_as = marauder_starbase_owner }
								create_marauder_starbase = yes
							}
						}
					}
				}
			}
		}
		if = { limit = { exists = event_target:marauder_country_3 }
			event_target:marauder_country_3 = {
				owner_species = { save_global_event_target_as = CmtTargetSpecies_Marauder3 }
				if = {
					limit = { any_system_within_border = { has_star_flag = marauder_capital_3 } }
					random_system_within_border = {
						limit = { has_star_flag = marauder_capital_3 }
						if = {
							limit = { any_system_planet = { has_planet_flag = raid_source } }
							random_system_planet = {
								limit = { has_planet_flag = raid_source }
								save_global_event_target_as = CmtTargetMarauderRallyPoint3
							}
						}
						else = {
							## Backup Code: raid_source NOT Found in Capital System
							random_system_planet = {
								limit = { is_star = no is_colony = yes }
								save_global_event_target_as = CmtTargetMarauderRallyPoint3
							}
							log = "Backup Code for CmtTargetMarauderRallyPoint3 - 1 Processed"
						}
					}
				}
				else = {
					## Backup Code: Capital System NOT Found
					random_planet_within_border = {
						limit = { is_star = no is_colony = yes }
						save_global_event_target_as = CmtTargetMarauderRallyPoint3
					}
					log = "Backup Code for CmtTargetMarauderRallyPoint3 - 2 Processed"
					# Recover former capital
					if = {
						limit = {
							any_system_within_border = {
								any_neighbor_system = {
									has_owner = no
									has_star_flag = marauder_capital_3
								}
							}
						}
						random_system_within_border = {
							random_neighbor_system = {
								limit = {
									has_owner = no
									has_star_flag = marauder_capital_3
								}
								event_target:marauder_country_3 = { save_event_target_as = marauder_starbase_owner }
								create_marauder_starbase = yes
							}
						}
					}
				}
			}
		}
		### Rally Point of Fleets 2/3: Set Event Targets, Flags
		if = {
			limit = { exists = event_target:CmtTargetMarauderRallyPoint1 }
			event_target:CmtTargetMarauderRallyPoint1 = {
				set_planet_flag = CmtFlagMarauderExpRallyPoint
				if = {
					limit = {
						has_owner = yes
						solar_system = { is_owned_by = ROOT }
					}
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		if = {
			limit = { exists = event_target:CmtTargetMarauderRallyPoint2 }
			event_target:CmtTargetMarauderRallyPoint2 = {
				set_planet_flag = CmtFlagMarauderExpRallyPoint
				if = {
					limit = {
						has_owner = yes
						solar_system = { is_owned_by = ROOT }
					}
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		if = {
			limit = { exists = event_target:CmtTargetMarauderRallyPoint3 }
			event_target:CmtTargetMarauderRallyPoint3 = {
				set_planet_flag = CmtFlagMarauderExpRallyPoint
				if = {
					limit = {
						has_owner = yes
						solar_system = { is_owned_by = ROOT }
					}
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		### Unify All Marauders if Great Khan
		if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanMultiple value = 5 }
				}
			}
			save_event_target_as = new_khanate
			every_country = {
				limit = {
					is_country_type = dormant_marauders
					NOT = { is_same_empire = ROOT }
				}
				country_event = { id = marauder.609 }
				destroy_country = yes
			}
		} else = {
			every_country = {
				limit = {
					is_country_type = dormant_marauders
					NOT = { is_same_empire = ROOT }
				}
				establish_communications_no_message = ROOT
				set_faction_hostility = {
					target = PREV
					# set_hostile = no
					set_neutral = yes
					# set_friendly = yes
				}
				PREV = {
					set_faction_hostility = {
						target = PREV
						# set_hostile = no
						set_neutral = yes
						# set_friendly = yes
					}
				}
			}
		}

		### Rally Point of Fleets 3/3: Backup Code
		if = {
			limit = { NOT = { exists = event_target:marauder_rally_point } }
			random_planet_within_border = {
				limit = { is_star = no }
				save_global_event_target_as = marauder_rally_point
				set_planet_flag = marauder_rally_point
				log = "Backup Code for marauder_rally_point Processed"
			}
		}
		### Modify Country
		set_country_type = awakened_marauders
		set_name = random
		change_country_flag = {
			icon = {
				category = "pirate"
				file = "flag_pirate_11.dds"
			}
			background = {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors = { "red" "red" "null" "null" }
		}
		change_government = {
			authority = auth_dictatorial
			civics = { civic = civic_great_khans_vision }
			remove_invalid_civics = yes
		}
		force_add_civic = civic_barbaric_despoilers
		force_add_civic = civic_fanatic_purifiers
		if = {
			limit = { has_ethic = "ethic_xenophobe" }
			country_remove_ethic = "ethic_xenophobe"
		}
		if = {
			limit = { NOT = { has_ethic = "ethic_fanatic_militarist" } }
			country_remove_ethic = "ethic_militarist"
			country_add_ethic = "ethic_fanatic_militarist"
		}
		if = {
			limit = { NOR = { has_ethic = "ethic_fanatic_spiritualist" has_ethic = "ethic_spiritualist" } }
			country_add_ethic = "ethic_spiritualist"
		}

		set_ai_personality = hegemonic_imperialists

		create_ship_design = { design = "NAME_Pirate_Transport" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_Clan_Builder" }
		add_ship_design = last_created_design
		### Ruler Khan
		create_leader = {
			class = ruler
			species = owner_species
			name = random
			skill = 10
			leader_age_min = 22
			leader_age_max = 40
			traits = { trait = leader_trait_ruler_great_khan }
		}
		last_created_leader = {
			set_leader_flag = great_khan
			save_global_event_target_as = great_khan_ruler
		}
		assign_leader = last_created_leader
		### Lifespan, Remaining Live of Khan
		if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 1 }
				}
			}
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_1a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_1a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_1c
				random = @CmtConstKhanLifespan_1d
			}
		}
		else_if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 2 }
				}
			}
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_2a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_2a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_2c
				random = @CmtConstKhanLifespan_2d
			}
		}
		else_if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 4 }
				}
			}
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_4a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_4a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_4c
				random = @CmtConstKhanLifespan_4d
			}
		}
		else_if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 5 }
				}
			}
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_5a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_5a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_5c
				random = @CmtConstKhanLifespan_5d
			}
		}
		else_if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 6 }
				}
			}
			set_global_flag = khan_no_die
			set_country_flag = CmtFlagKhanNoDieCountry
		}
		else = {
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_3a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_3a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_3c
				random = @CmtConstKhanLifespan_3d
			}
		}
		CmtEffectTransferKhanRemainingLive = yes
		### Admiral Khan
		clone_leader = {
			target = event_target:great_khan_ruler
			class = admiral
			skill = 10
			traits = {
				trait = leader_trait_great_khan
				trait = leader_trait_eager
				trait = leader_trait_fleet_logistician
			}
			effect = {
				set_leader_flag = great_khan
				save_global_event_target_as = great_khan
			}
		}

		### Create Fleets
		event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_Khan1stFleet = yes }
		if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanMultiple value = 5 }
				}
			}
			every_planet_within_border = {
				limit = { has_planet_flag = CmtFlagMarauderExpRallyPoint }
				CmtEffectCreateAdmiralty_KhanStarterPack = yes
			}
		}
		else = {
			event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanStarterPack = yes }
		}
		### Compat. replace hack for CM
		event_target:great_khan.fleet = {
			create_ship = {
				design = "NAME_JuukTidir"
				graphical_culture = "npf_01_dirty"
				prefix = no
				upgradable = yes
			}
			random_owned_ship = {
				limit = { is_ship_size = marauder_galleon }
				delete_ship = this
			}
		}
		country_event = { id = marauder.78 days = 20 }		## Mercenaries Join the Great Khan
		country_event = { id = marauder.520 days = 180 }	## Reinforcement cycle

		event_target:CmtGlobalVar = { set_variable = { which = CmtVarKhanReinforcementCounter value = 10 } }
		### Should not attack: the Khan is not that bad!
		every_country = {
			limit = {
				CmtTriggerIsPlayableEmpire = no
				OR = {
					is_fallen_empire = yes
					is_country_type = enclave
					is_country_type = caravaneer_home
					is_country_type = caravaneer_fleet
					is_country_type = guardian_sphere
					is_country_type = marauder_raiders
					is_country_type = ratlings
					is_country_type = ldragon_country
					is_tiyanki_country_type = yes
					is_amoeba_country_type = yes
					is_crystal_country_type = yes
					is_drone_country_type = yes
					is_country_type = vluur
					is_primitive = yes
				}
				OR = {
					is_hostile = prev
					prev = { is_hostile = prev }
					prev = { NOT = { is_neutral_to = prev } }
				}
				prev = { NOT = { is_friendly_to = prev } }
			}
			establish_communications_no_message = ROOT
			PREV = {
				set_faction_hostility = {
					target = PREV
					# set_hostile = no
					# set_neutral = no
					set_friendly = yes
				}
			}
		}
		### Notifications
		if = {
			limit = { has_country_flag = CmtFlagKhanVengeanceCountry }
			every_playable_country = {
				limit = { CmtTriggerIsPlayableEmpire = yes }
				establish_communications_no_message = ROOT
				country_event = { id = marauder.526 }
				observer_event = { id = observer.18 }
			}
		} else = {
			every_playable_country = {
				limit = { CmtTriggerIsPlayableEmpire = yes }
				establish_communications_no_message = ROOT
				country_event = { id = marauder.501 }
				observer_event = { id = observer.13 }
			}
		}
		# every_country = {
		# 	limit = {
		# 		is_ai = yes
		# 		CmtTriggerIsPlayableEmpire = yes # is_country_type_with_subjects = yes
		# 	}
		# 	establish_communications_no_message = ROOT
		# }
		### Mercenaries Defect
		if = {
			limit = {
				OR = {
					has_country_flag = marauder_1
					AND = {
						exists = event_target:CmtTargetMarauderRallyPoint1.solar_system.owner
						event_target:CmtTargetMarauderRallyPoint1.solar_system = { is_owned_by = ROOT }
					}
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } }
				}
			}
			every_playable_country = {
				limit = { CmtTriggerCountryHiringMarauder1 = yes }
				set_country_flag = CmtFlagHiringMarauder1
			}
		}
		if = {
			limit = {
				OR = {
					has_country_flag = marauder_2
					AND = {
						exists = event_target:CmtTargetMarauderRallyPoint2.solar_system.owner
						event_target:CmtTargetMarauderRallyPoint2.solar_system = { is_owned_by = ROOT }
					}
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } }
				}
			}
			every_playable_country = {
				limit = { CmtTriggerCountryHiringMarauder2 = yes }
				set_country_flag = CmtFlagHiringMarauder2
			}
		}
		if = {
			limit = {
				OR = {
					has_country_flag = marauder_3
					AND = {
						exists = event_target:CmtTargetMarauderRallyPoint3.solar_system.owner
						event_target:CmtTargetMarauderRallyPoint3.solar_system = { is_owned_by = ROOT }
					}
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } }
				}
			}
			every_playable_country = {
				limit = { CmtTriggerCountryHiringMarauder3 = yes }
				set_country_flag = CmtFlagHiringMarauder3
			}
		}
		every_playable_country = {
			limit = {
				OR = {
					has_country_flag = CmtFlagHiringMarauder1
					has_country_flag = CmtFlagHiringMarauder2
					has_country_flag = CmtFlagHiringMarauder3
				}
			}
			country_event = { id = marauder.77 days = 20 }
		}

		# random_neighbor_country = {
		# 	limit = {
		# 		CmtTriggerIsPlayableEmpire = yes
		# 		NOR = {
		# 			is_at_war_with = PREV # is needed for some kind of alliance
		# 			is_same_empire = PREV
		# 		}
		# 	}
		# 	# set_faction_hostility = {
		# 	# 	target = ROOT
		# 	# 	set_hostile = yes
		# 	# }
		# 	ROOT = {
		# 		declare_war = {
		# 			target = PREV
		# 			name = "NAME_Expansion"
		# 			attacker_war_goal = "wg_great_expansion"
		# 		}
		# 		# set_faction_hostility = {
		# 		# 	target = PREV
		# 		# 	set_hostile = yes
		# 		# }
		# 		add_opinion_modifier = {
		# 			modifier = opinion_first_contact_war
		# 			who = PREV
		# 		}
		# 	}
		# 	if = {
		# 		limit = { has_origin = "origin_khan_successor" }
		# 		change_variable = { which = "planets_lost_to_marauder" value = 3 }
		# 	}
		# }
		# country_event = { id = khan.529 days = 360 } # Drums of War init
	}
}

##############################
###  Standard War Process  ###
##############################

### Horde Conquers Planet
# From = country, planet owner
# FromFrom = planet
country_event = {
	id = marauder.503
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = marauder_crisis_ongoing
		exists = event_target:raider_khanate
		OR = {
			AND = {
				exists = from
				is_subject = yes
				from = { is_overlord_to = event_target:raider_khanate }
				NOT = { has_country_flag = rebellion_cooldown }
			}
			CmtTriggerIsKhanCountry = yes
			#is_same_empire = event_target:raider_khanate # is_country_type = awakened_marauders
		}
	}

	immediate = {
		fromfrom = {
			if = {
				limit = { num_pops > 20 }
				prev.from = { change_variable = { which = "planets_lost_to_marauder" value = 1 } }
				while = {
					count = 6
					limit = { num_pops > 20 }
					random_owned_pop = {
						limit = {
							is_robot_pop = no
							is_sapient = yes
						}
						weights = {
							base = 3
							modifier = { add = 1 OR = { is_pop_category = slave is_pop_category = purge } }
							modifier = { add = 1 is_unemployed = yes }
							modifier = { add = -1 ideal_planet_class = prev }
							modifier = { add = -2 is_same_species = root.species }
							# modifier = { add = 1 prev = { count_owned_pop = { limit = { is_same_species = prevprev.species } count < 4 } } }
						}
						kill_pop = yes
					}
				}
			}

			### Create Marauder Pops
			save_event_target_as = conquered_planet
			planet_event = { id = marauder.105 } # (Slaves)
			set_owner = ROOT
			set_variable = { which = CmtVarTemp value = 4 }
			if = {
				limit = { free_housing < 2 }
				change_variable = { which = CmtVarTemp value = 4 }
			} else_if = {
				limit = { free_housing < 6 free_housing > 1 }
				change_variable = { which = CmtVarTemp value = 8 }
			} else_if = {
				limit = { free_housing > 5 }
				change_variable = { which = CmtVarTemp value = 12 }
			}

			set_variable = { which = CmtVarTemp4 value = CmtVarTemp }
			divide_variable = { which = CmtVarTemp4 value = 4 }
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder1 }
				while = {
					limit = { check_variable = { which = CmtVarTemp4 value > 0.5 } }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder1 }
					change_variable = { which = CmtVarTemp4 value = -1 }
					change_variable = { which = CmtVarTemp value = -1 }
				}
			}
			set_variable = { which = CmtVarTemp4 value = CmtVarTemp }
			divide_variable = { which = CmtVarTemp4 value = 3 }
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder2 }
				while = {
					limit = { check_variable = { which = CmtVarTemp4 value > 0.5 } }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder2 }
					change_variable = { which = CmtVarTemp4 value = -1 }
					change_variable = { which = CmtVarTemp value = -1 }
				}
			}
			set_variable = { which = CmtVarTemp4 value = CmtVarTemp }
			divide_variable = { which = CmtVarTemp4 value = 2 }
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder3 }
				while = {
					limit = { check_variable = { which = CmtVarTemp4 value > 0.5 } }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder3 }
					change_variable = { which = CmtVarTemp4 value = -1 }
					change_variable = { which = CmtVarTemp value = -1 }
				}
			}
			while = { # rest
				limit = { check_variable = { which = CmtVarTemp value > 0.5 } }
				create_pop = { species =  ROOT }
				change_variable = { which = CmtVarTemp value = -1 }
			}

			# Flip Starbase ownership or create a new one
			solar_system = {
				if = {
					limit = {
						exists = starbase
						starbase = { fleet = { NOT = { is_owned_by = ROOT } } }
					}
					starbase = { set_owner = ROOT }
					# FIXME: needs possible workaround? As starbase from horde gets not conquered? See Fix id = khan.304-305
				} else = {
					create_starbase = {
						size = "starbase_marauder"
						owner = ROOT
					}
				}
			}
		}
		from = {
			change_variable = { which = "planets_lost_to_marauder" value = 1 }
			if = { limit = { prev = { can_copy_random_tech_from = { who = prev } } }
				prev = { copy_random_tech_from = { who = prev } }
			}
			if = {
				limit = { fromfrom.solar_system = { is_capital_system = yes } }
				change_variable = { which = "planets_lost_to_marauder" value = 1 }
				if = { limit = { prev = { can_copy_random_tech_from = { who = prev } } }
					prev = { copy_random_tech_from = { who = prev } }
				}
				if = {
					limit = { fromfrom = { is_capital = yes } }
					change_variable = { which = "planets_lost_to_marauder" value = 3 }
					if = { limit = { prev = { can_copy_random_tech_from = { who = prev } } }
						prev = { copy_random_tech_from = { who = prev } }
					}
				}
			}
			country_event = { id = marauder.504 } # Notify
			set_country_flag = former_owner@fromfrom
		}
		fromfrom = {
			### Create Defense Armies (for some reason they get deleted sometimes)
			set_variable = { which = CmtVarTemp value = 8 }
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder1 }
				while = {
					count = 2
					create_army = {
						name = random
						owner = ROOT
						species = event_target:CmtTargetSpecies_Marauder1
						type = "defense_army"
					}
					change_variable = { which = CmtVarTemp value = -1 }
				}
			}
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder2 }
				while = {
					count = 2
					create_army = {
						name = random
						owner = ROOT
						species = event_target:CmtTargetSpecies_Marauder2
						type = "defense_army"
					}
					change_variable = { which = CmtVarTemp value = -1 }
				}
			}
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder3 }
				while = {
					count = 2
					create_army = {
						name = random
						owner = ROOT
						species = event_target:CmtTargetSpecies_Marauder3
						type = "defense_army"
					}
					change_variable = { which = CmtVarTemp value = -1 }
				}
			}
			while = { # rest
				limit = { check_variable = { which = CmtVarTemp value > 0.5 } }
				create_army = {
					name = random
					owner = ROOT
					species = ROOT.species
					type = "defense_army"
				}
				change_variable = { which = CmtVarTemp value = -1 }
			}

			clear_variable = CmtVarTemp
			clear_variable = CmtVarTemp4
		}
	}
}

#######################
###  Death of Khan  ###
#######################

### Khan Defeated in Combat but NOT Die
country_event = {
	id = marauder.505
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		CmtTriggerIsKhanCountry = yes
		fromfrom = {
			exists = leader
			fleet = { num_ships = 0 }
			leader = { has_leader_flag = great_khan }
		}
		check_variable = { which = CmtVarKhanRemainingLive value > -0.5 }		## Not CmtGlobalVar
		OR = {
			NOT = { has_country_flag = great_khan_defeated_once }
			check_variable = { which = CmtVarKhanRemainingLive value > 0.5 }	## Not CmtGlobalVar
		}
	}

	immediate = {
		set_country_flag = great_khan_defeated_once # set_global_flag
		change_variable = { which = CmtVarKhanRemainingLive value = -1 }		## Not CmtGlobalVar

		from = { save_event_target_as = khan_destroyer }
		fromfrom = {
			solar_system = { save_event_target_as = khan_death_system }
			leader = {
				save_event_target_as = great_khan
				exile_leader_as = exiled_khan
			}
		}
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.506 } # Notify
		}
		observer_event = { id = observer.14 }

		if = {
			limit = { has_global_flag = CmtFlagDebugMode }
			country_event = { id = marauder.523 days = 5 }
		} else = {
			if = { limit = { exists = event_target:global_event_country }
				event_target:global_event_country = {
					country_event = { id = marauder.523 days = 180 random = 160 }
				}
			} else = {
				random_country = {
					limit = { is_country_type = global_event }
					country_event = { id = marauder.523 days = 180 random = 160 }
				}
			}
		}
		# Back to the fold
		every_owned_fleet = {
			limit = {
				exists = solar_system
				# NOR = { is_ship_class = shipclass_starbase is_ship_class = shipclass_military_station is_ship_class = shipclass_transport }
				# is_civilian = no
				is_mobile = yes
				any_owned_ship = {
					OR = {
						is_ship_class = shipclass_military
						is_ship_class = shipclass_transport
					}
				}
				NOT = { is_within_borders_of = ROOT.owner }
			}
			fleet_event = { id = khan.611 days = -1 }
		}
	}
}

# Great Khan Defeated First Time
country_event = {
	id = marauder.506
	title = "marauder.506.name"
	desc = "marauder.506.desc"
	picture = GFX_evt_sabotaged_ship
	show_sound = event_ship_explosion
	is_triggered_only = yes
	location = event_target:khan_death_system
	option = { name = marauder.506.a }
}

### Return of Khan
country_event = {
	id = marauder.507
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_Khan2ndFleetSet = yes }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.508 }
		}
		### Compat. hack for CM
		event_target:great_khan.fleet = {
			create_ship = {
				# name = "NAME_Glorious_Might"
				design = "NAME_Glorious_Might"
				graphical_culture = "npf_01_dirty"
				prefix = no
				upgradable = yes
			}
		}
		observer_event = { id = observer.15 }
	}
}

# Return of the Great Khan
country_event = {
	id = marauder.508
	title = "greatkhan_diplo_header"
	desc = {
		trigger = {
			OR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
			}
		}
		text = "marauder.508.desc.1"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.508.desc.2"
	}
	desc = {
		trigger = { is_homicidal = yes }
		text = "marauder.508.desc.3"
	}
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = "ethic_spaceship_room"
	}
	location = event_target:marauder_rally_point
	is_triggered_only = yes
	option = { name = marauder.508.a }
}

### Khan Defeated in Combat and die
country_event = {
	id = marauder.509
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		CmtTriggerIsKhanCountry = yes
		fromfrom = {
			exists = leader
			fleet = { num_ships = 0 }
			leader = { has_leader_flag = great_khan }
		}
		OR = {
			check_variable = { which = CmtVarKhanRemainingLive value < -0.5 }		## Not CmtGlobalVar
			AND = {
				has_country_flag = great_khan_defeated_once # CmtFlagKhanDefeatCountry
				check_variable = { which = CmtVarKhanRemainingLive value < 0.5 }	## Not CmtGlobalVar
			}
		}
	}

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		set_variable = { which = CmtVarKhanRemainingLive value = 0 }		## Not CmtGlobalVar

		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = { kill_leader = { show_notification = no } }
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = { kill_leader = { show_notification = no } }
		}

		from = {
			save_event_target_as = khan_destroyer
			set_country_flag = no_khan_do
			if = { limit = { CmtTriggerIsPlayableEmpire = yes } # is_ai = no
				country_event = { id = marauder.710 days = 10 random = 8 }
			}
			if = {
				limit = { can_copy_random_tech_from = { who = ROOT } }
				copy_random_tech_from = { who = ROOT }
			}
			if = {
				limit = { ROOT = { num_owned_relics > 0 } }
				steal_relic = { target = ROOT relic = random }
			}
		}
		fromfrom = { solar_system = { save_event_target_as = khan_death_system } }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.510 }
		}
		observer_event = { id = observer.16 }

		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 1 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_1e random = @CmtConstKhanLifespan_1f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 2 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_2e random = @CmtConstKhanLifespan_2f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 4 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_4e random = @CmtConstKhanLifespan_4f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 5 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_5f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 6 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_6e random = @CmtConstKhanLifespan_6f }
		} else = { country_event = { id = marauder.600 days = @CmtConstKhanLifespan_3e random = @CmtConstKhanLifespan_3f } }
	}
}

# Great Khan Dies (Notify)
country_event = {
	id = marauder.510
	title = "marauder.510.name"
	desc = "marauder.510.desc"
	picture = GFX_evt_space_funeral
	show_sound = event_airlock
	is_triggered_only = yes
	location = event_target:khan_death_system
	option = { name = marauder.510.a }
}

### Sudden Death of Khan (on_monthly_pulse)
# Great Khan dies for other reasons
event = {
	id = marauder.511
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_started
		any_country = {
			CmtTriggerIsKhanCountry = yes
			NOT = { has_country_flag = CmtFlagKhanNoDieCountry }
		}
	}

	immediate = {
		every_country = {
			limit = {
				CmtTriggerIsKhanCountry = yes
				NOT = { has_country_flag = CmtFlagKhanNoDieCountry }
			}
			random_list = {
				2 = {
					event_target:raider_khanate = { country_event = { id = marauder.512 } }
					modifier = {
						factor = 0
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 6 } }
					}
				}
				98 = {
					modifier = {
						factor = @CmtConstKhanLifespan_1b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 1 } }
					}
					modifier = {
						factor = @CmtConstKhanLifespan_2b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 2 } }
					}
					modifier = {
						factor = @CmtConstKhanLifespan_3b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 3 } }
					}
					modifier = {
						factor = @CmtConstKhanLifespan_4b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 4 } }
					}
					modifier = {
						factor = @CmtConstKhanLifespan_5b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 5 } }
					}
				}
			}
		}
	}
}

### Great Khan Dies for Other Reasons
country_event = {
	id = marauder.512
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		random_list = {
			10 = { set_country_flag = khan_dead_poison }
			10 = { set_country_flag = khan_dead_disease }
			10 = { set_country_flag = khan_dead_assassin }
			10 = { set_country_flag = khan_dead_concubine }
		}

		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = { kill_leader = { show_notification = no } }
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = { kill_leader = { show_notification = no } }
		}

		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.513 }
		}
		observer_event = { id = observer.17 }

		add_relic = r_khans_throne
		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 1 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_1e random = @CmtConstKhanLifespan_1f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 2 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_2e random = @CmtConstKhanLifespan_2f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 4 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_4e random = @CmtConstKhanLifespan_4f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 5 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_5f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 6 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_6e random = @CmtConstKhanLifespan_6f }
		} else = { country_event = { id = marauder.600 days = @CmtConstKhanLifespan_3e random = @CmtConstKhanLifespan_3f } }
	}
}

### Great Khan Dies (Notify)
country_event = {
	id = marauder.513
	title = "marauder.510.name"
	desc = {
		text = marauder.513.a.desc
		trigger = { from = { has_country_flag = khan_dead_poison } }
	}
	desc = {
		text = marauder.513.b.desc
		trigger = { from = { has_country_flag = khan_dead_disease } }
	}
	desc = {
		text = marauder.513.c.desc
		trigger = { from = { has_country_flag = khan_dead_assassin } }
	}
	desc = {
		text = marauder.513.d.desc
		trigger = { from = { has_country_flag = khan_dead_concubine } }
	}
	desc = {
		text = marauder.513.e.desc
		trigger = { from = { has_country_flag = khan_dead_age } }
	}
	picture = GFX_evt_space_funeral
	show_sound = event_life_support_fail

	is_triggered_only = yes

	option = {
		name = marauder.510.a
	}
}

### Great Khan Dies of Old Ages
country_event = {
	id = marauder.514
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		CmtTriggerIsKhanCountry = yes
		NOT = { has_country_flag = khan_dead_age }
	}

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		set_country_flag = khan_dead_age

		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = { kill_leader = { show_notification = no } }
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = { kill_leader = { show_notification = no } }
		}

		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.513 }
		}
		observer_event = { id = observer.17 }

		add_relic = r_khans_throne
		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 1 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_1e random = @CmtConstKhanLifespan_1f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 2 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_2e random = @CmtConstKhanLifespan_2f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 4 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_4e random = @CmtConstKhanLifespan_4f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 5 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_5f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 6 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_6e random = @CmtConstKhanLifespan_6f }
		} else = { country_event = { id = marauder.600 days = @CmtConstKhanLifespan_3e random = @CmtConstKhanLifespan_3f } }
	}
}

### Marauder Reinforcement Cycle at Capital (Regular)
# Need a flag to determine if the Horde has a Machinesmith (Improved)
# This = Marauder
country_event = {
	id = marauder.520
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		CmtTriggerIsKhanCountry = yes
		NOT = { has_global_flag = great_khan_wins }
		#NOT = { has_country_flag = has_machinesmith }
	}
	immediate = {
		country_event = { id = khan.306 } # Create fallback rally_point
		if = {
			limit = { exists = event_target:marauder_rally_point }
			### Khan Expanded
			country_event = { id = khan.299 } # end check
			create_marauder_constructors = yes
			if = {
				limit = { num_armies < 40 }
				create_marauder_armies = yes
			}
			if = {
				limit = { fleet_power < 250000 has_country_flag = has_machinesmith }
				event_target:marauder_rally_point = {
					create_fleet = {
						effect = {
							set_owner = ROOT
							while = {
								count = 2
								while = {
									count = 10
									create_ship = {
										name = random
										design = "NAME_Outrider_4"
										# graphical_culture = ROOT
									}
								}
								while = {
									count = 5
									create_ship = {
										name = random
										design = "NAME_Lancer_4"
										# graphical_culture = ROOT
									}
								}
								while = {
									count = 3
									create_ship = {
										name = random
										design = "NAME_Void_Champion_4"
										# graphical_culture = ROOT
									}
								}
								while = {
									count = 1
									create_ship = {
										name = random
										design = "NAME_Ancestral_Glory_4"
										# graphical_culture = ROOT
									}
								}
							}
							set_location = {
								target = PREV
								distance = 20
								angle = random
							}
							set_aggro_range = 500
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
						}
					}
				}

				random_subject = {
					limit = {
						is_subject_type = machinesmith
						NOT = { has_country_flag = rebelling_satrapy }
					}
					ROOT = {
						if = {
							limit = { can_copy_random_tech_from = { who = PREV } }
							copy_random_tech_from = { who = PREV }
						}
					}
					log = "machinesmith sold"
					country_event = { id = marauder.520 days = 180 } # Improved cycle
					break = yes
				}
				remove_country_flag = has_machinesmith # Regular cycle
				country_event = { id = marauder.520 days = 220 }
			}
			else = {
				event_target:CmtGlobalVar = {
					if = {
						limit = {
							OR = {
								check_variable = { which = CmtVarReinforceCycle_Khan value < 2 }
								check_variable = { which = CmtVarReinforceCycle_Khan value > 4 }
							}
						}
						CmtEffectKhanReinforceOnCapital = yes
						ROOT = {
							country_event = { id = marauder.520 days = 340 }
						}
					} else = {
						if = {
							limit = {
								check_variable = { which = CmtVarKhanReinforcementCounter value > 9.5 }
							}
							CmtEffectKhanReinforceOnCapital = yes
							change_variable = { which = CmtVarKhanReinforcementCounter value = -10 }
						}
						CmtEffectKhanIncreasementReinforcementCycle = yes				## required: PREV = ROOT
						# TODO: days somehow dyn.
						ROOT = {
							country_event = { id = marauder.520 days = 96 }
						}
					}
				}
				# Legacy
				# create_marauder_constructors = yes
				# if = { limit = { num_armies < 40 }
				# 	create_marauder_armies = yes
				# }
				# if = { limit = { fleet_power < 200000 }
				# 	create_marauder_fleet = yes
				# }
				# country_event = { id = marauder.520 days = 340 }

				# Try to expand the war?
				# TODO?
				# country_event = { id = khan.529 }
			}
		} else = {
			country_event = { id = marauder.520 days = 180 }
		}
	}
}

# Return of the Great Khan (HIDDEN)
country_event = {
	id = marauder.523
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { exists = from }
			from = {
				country_event = { id = marauder.507 }
			}
		}
		else = {
			every_playable_country = {
				limit = { CmtTriggerIsPlayableEmpire = yes }
				country_event = { id = marauder.524 }
			}
		}
	}
}

###########################################################
###  Awakening for Vengeance: on_ship_destroyed_victim  ###
###########################################################

# Horde Triggered Through Destruction of Stations
country_event = {
	id = marauder.525
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = marauder_crisis_ongoing }
		is_country_type = dormant_marauders
		fromfrom = { is_ship_size = marauder_void_dwelling }
		from = { CmtTriggerIsPlayableEmpire = yes } # there are some unpredictable possiblities
		NOT = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 1 } } }
		OR = {
			count_owned_ship = {
				limit = { is_ship_size = marauder_void_dwelling }
				count > 1
			}
			AND = {
				event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 5 } }
				count_owned_ship = {
					limit = { is_ship_size = marauder_void_dwelling }
					count > 0
				}
			}
		}
		CmtTriggerKhanAwakingMultipleCheck = yes
	}

	immediate = {
		from = { save_event_target_as = awakened_horde }
		random_list = {
			2 = {
				modifier = {		## 9.9%
					factor = 5.5
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 3 } }
				}
				modifier = {		## 28.6%
					factor = 20
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 4 } }
				}
				set_global_flag = horde_triggered
				set_country_flag = CmtFlagKhanVengeanceCountry
				country_event = { id = marauder.500 }
			}
			100 = {
				modifier = {
					factor = 0
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 5 } }
				}
			}
		}
	}
}

##################
##	Great Khan	##
##	Diplomacy	##
##################
country_event = {
	id = marauder.550
	title = "greatkhan_diplo_header"
	desc = {
		trigger = { is_subject_type = fabricator_satrapy }
		text = "marauder_fabricator_greeting1"
	}
	desc = {
		trigger = { is_subject_type = fabricator_satrapy }
		text = "marauder_fabricator_greeting2"
	}
	desc = {
		trigger = { is_subject_type = fabricator_satrapy }
		text = "marauder_fabricator_greeting3"
	}
	# desc = {
	# 	trigger = { is_subject_type = machinesmith }
	# 	text = "khan.899.g.desc"
	# }
	# desc = {
	# 	trigger = { is_subject_type = machinesmith }
	# 	text = "khan.898.g.desc"
	# }
	# desc = {
	# 	trigger = { is_subject_type = machinesmith }
	# 	text = "khan.897.g.desc"
	# }
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.a.desc"
	}
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.b.desc"
	}
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.c.desc"
	}
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.d.desc"
	}
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.e.desc"
	}
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.f.desc"
	}
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.g.desc"
	}
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.h.desc"
	}
	desc = {
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.i.desc"
	}
	desc = {
		trigger = { is_subject_type = satrapy }
		text = "marauder.550.j.desc"
	}
	desc = {
		trigger = { is_subject_type = satrapy }
		text = "marauder.550.k.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_machine_intelligence
		}
		text = "marauder.550.l.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_machine_intelligence
		}
		text = "marauder.550.m.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_hive_mind
		}
		text = "marauder.550.n.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_hive_mind
		}
		text = "marauder.550.o.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		text = "marauder.550.p.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		text = "marauder.550.q.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.r.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.s.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.t.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.u.desc"
	}
	desc = {
		trigger = { is_homicidal = yes }
		text = "marauder.550.v.desc"
	}
	desc = {
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		text = "marauder.550.w.desc"
	}
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	trigger = {
		OR = {
			NOT = { exists = FROM }
			FROM = { CmtTriggerIsKhanCountry = yes }
		}
		NOT = { has_country_flag = marauder_diplomacy_engaged }
		# NOR = {
		# 	has_country_flag = marauder_diplomacy_engaged
		# 	has_global_flag = great_khan_dead
		# }
	}
	immediate = {
		if = {
			limit = { NOT = { exists = from } }
			log_error="Not exists From Scope on marauder.550"
		}
		set_country_flag = marauder_diplomacy_engaged
	}
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	# Submit? Extended subject offer
	option = {
		name = marauder_deal_start
		sound = advisor_clicking_respons_13
		trigger = {
			NOR = {
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
			OR = {
				AND = {
					has_technology = tech_mass_drivers_4
					has_technology = tech_lasers_4
					has_technology = tech_ship_armor_4
					has_technology = tech_shields_4
				}
				has_monthly_income = {
					resource = alloys
					value > 100
				}
			}
		}
		hidden_effect = {
			country_event = { id = khan.998 }
		}
		ai_chance = { factor = 50 }
	}
	option = {
		# Submit? Already rebelled
		name = marauder_deal_start
		sound = no_tut_advior_05
		trigger = {
			has_country_flag = rebelling_satrapy
			has_technology = tech_mass_drivers_4
			has_technology = tech_lasers_4
			has_technology = tech_ship_armor_4
			has_technology = tech_shields_4
		}
		response_text = marauder.550.a.2.response
		is_dialog_only = yes
	}
	option = {
		# Submit?
		name = marauder.550.a
		sound = advisor_clicking_respons_13
		trigger = {
			NOR = {
				has_been_declared_crisis = yes
				from = { is_overlord_to = prev }
				# is_subject_type = machinesmith
				# is_subject_type = satrapy
				# is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		hidden_effect = {
			country_event = { id = marauder.551 }
		}
		ai_chance = { factor = 5 }
	}
	option = {
		# Submit? Already rebelled
		name = marauder.550.a
		sound = no_tut_advior_05
		trigger = { has_country_flag = rebelling_satrapy }
		response_text = marauder.550.a.2.response
		is_dialog_only = yes
	}
	option = {
		name = marauder.550.b
		trigger = {
			from = { has_country_flag = marauder_2 }
			NOR = {
				has_country_flag = asked_about_language
				is_homicidal = yes
			}
		}
		response_text = marauder.550.b.response
		is_dialog_only = yes
		hidden_effect = { set_country_flag = asked_about_language }
		ai_chance = { factor = 0 }
	}
	option = {
		name = marauder.550.c
		trigger = {
			from = { has_country_flag = marauder_3 }
			NOR = {
				has_country_flag = asked_about_religion
				is_homicidal = yes
			}
		}
		response_text = marauder.550.c.response
		is_dialog_only = yes
		hidden_effect = { set_country_flag = asked_about_religion }
		ai_chance = { factor = 0 }
	}
	option = {
		# Rebel?
		name = marauder_fabricator_rebel
		sound = no_tut_advior_01
		trigger = { is_subject_type = fabricator_satrapy }
		hidden_effect = {
			country_event = { id = khan.751 }
		}
		ai_chance = { factor = 2 }
	}
	option = {
		# Rebel?
		name = marauder.550.d
		sound = no_tut_advior_01
		trigger = {
			OR = {
				is_subject_type = machinesmith
				is_subject_type = satrapy
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = marauder.550.d_fail
				NOT = { has_country_flag = rebellion_cooldown }
			}
		}
		hidden_effect = {
			country_event = { id = marauder.554 }
		}
		ai_chance = { factor = 2 }
	}
	# option = { TODO copy of 554??
	# 	name = khan.896.g.desc # Uprising machinesmith
	# 	trigger = { is_subject_type = machinesmith }
	# 	hidden_effect = {
	# 		country_event = { id = khan.801 }
	# 	}
	# }

	# Satrapy: Extended subject offer?
	option = {
		name = marauder_deal_start
		sound = advisor_clicking_respons_13
		trigger = {
			from = { is_overlord_to = prev }
			NOR = {
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebellion_cooldown
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
			OR = {
				AND = {
					has_technology = tech_mass_drivers_4
					has_technology = tech_lasers_4
					has_technology = tech_ship_armor_4
					has_technology = tech_shields_4
				}
				has_monthly_income = {
					resource = alloys
					value > 100
				}
			}
		}
		hidden_effect = {
			country_event = { id = khan.998 }
		}
		ai_chance = { factor = 5 }
	}

	option = {
		name = marauder.20.e
		default_hide_option = yes
		ai_chance = { factor = 0 }
	}
}

# Submit?
country_event = {
	id = marauder.551
	title = "greatkhan_diplo_header"
	desc = marauder.551.a.desc
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	trigger = { has_been_declared_crisis = no }
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder.551.a
		sound = advisor_clicking_respons_01
		trigger = { has_been_declared_crisis = no }
		response_text = marauder.551.a.response
		country_event = { id = marauder.559 } # Pre-Submit to Khan
		hidden_effect = {
			set_subject_of = {
				who = event_target:raider_khanate
				subject_type = satrapy
			}
		}
	}
	option = {
		name = marauder.551.a
		sound = full_tut_advisor_01
		trigger = {
			has_been_declared_crisis = no
			OR = {
				is_militarist = yes
				has_militarist_government = yes
				# 	has_spiritualist_government = yes
				# 	has_militarist_government = yes
				# 	is_spiritualist = yes
			}
			OR = {
				relative_power = {
					who = event_target:raider_khanate
					category = all
					value > pathetic
				}
				has_origin = "origin_khan_successor"
			}
			tech_unlocked_ratio = { who = from ratio < 0.7 }
		}
		response_text = marauder.551.a.response
		country_event = { id = marauder.559 } # Pre-Submit to Khan
		hidden_effect = {
			set_subject_of = {
				who = event_target:raider_khanate
				subject_type = war_satrapy
			}
		}
		ai_chance = { factor = 5 }
	}
	option = {
		name = marauder.551.b
		# sound = no_tut_advior_07
		response_text = marauder.551.b.response
		default_hide_option = yes
		ai_chance = { factor = 0 }
	}
}

### Initial Reinforcement for Encouraging Satrap
### Marauder Establishes Base in Capital System
country_event = {
	id = marauder.553
	title = "marauder.553.name"
	desc = "marauder.553.desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_conversation
	location = event_target:garrison_base

	is_triggered_only = yes

	immediate = {
		save_global_event_target_as = satrapy_empire
		capital_scope = {
			save_event_target_as = capital_planet
			solar_system = { save_event_target_as = capital_system }
		}
		CmtEffectCreateEncouragingBase = yes		## event_target:garrison_base
		event_target:garrison_base = { CmtEffectCreateAdmiralty_KhanEncourager = yes }
	}
	option = { name = marauder.553.a }
	after = {
		hidden_effect = {
			event_target:raider_khanate = {
				copy_random_tech_from = { who = PREV area = physics }
			}
		}
	}
}

# Rebel?
country_event = {
	id = marauder.554
	title = "greatkhan_diplo_header"
	desc = marauder.554.a.desc
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder.554.a
		sound = no_tut_advior_02
		response_text = marauder.554.a.response
		set_subject_of = { who = none }
		hidden_effect = {
			set_country_flag = rebelling_satrapy
			remove_modifier = "satrapy_of_horde"
			set_variable = { which = "planets_lost_to_marauder" value = 1 }
			set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }

			if = {
				limit = { is_ai = yes }
				event_target:raider_khanate = {
					random_owned_fleet = {
						limit = {
							has_fleet_flag = satrapy_garrison
							solar_system = { is_owned_by = ROOT }
						}
						destroy_fleet = this
					}
					random_owned_fleet = {
						limit = {
							has_fleet_flag = satrapy_garrison_fleet
							solar_system = { is_owned_by = ROOT }
						}
						set_owner = ROOT
						if = {
							limit = { exists = leader }
							leader = { set_owner = ROOT }
						}
					}
				}
			}

			declare_war = {
				target = event_target:raider_khanate
				name = "NAME_Rebellion"
				attacker_war_goal = "wg_independence"
			}
			set_faction_hostility = {
				target = event_target:raider_khanate
				set_hostile = yes
			}
			event_target:raider_khanate = {
				add_opinion_modifier = {
					modifier = opinion_traitor_to_empire
					who = prev
				}
				set_faction_hostility = {
					target = ROOT
					set_hostile = yes
				}
			}
		}
		ai_chance = { factor = 2 }
	}
	option = {
		name = marauder.554.b
		# sound = no_tut_advior_07
		response_text = marauder.554.b.response
		ai_chance = { factor = 0 }
	}
}

#############################
###  While Khan Reigning  ###
#############################

### NPC (AI Empire) Submits to Marauder
country_event = {
	id = marauder.555
	hide_window = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		NOT = { has_global_flag = great_khan_dead }
		has_been_declared_crisis = no
		NOT = { has_country_flag = rebellion_cooldown }
		CmtTriggerExistKhanCountry = yes # exists = event_target:raider_khanate
		CmtTriggerIsPlayableEmpire = yes # is_country_type = default
		is_subject = no
		is_ai = yes
		check_variable = { which = "planets_lost_to_marauder" value > 2 }
		is_homicidal = no
		relative_power = {
			who = event_target:raider_khanate
			category = fleet
			value < equivalent
		}
	}
	mean_time_to_happen = {
		years = 5
		modifier = {
			factor = 0.1
			num_owned_planets < 3
		}
		modifier = {
			factor = 0.5
			check_variable = { which = "planets_lost_to_marauder" value > 10 }
		}
		modifier = {
			factor = 0.1
			check_variable = { which = "planets_lost_to_marauder" value > 20 }
		}
		modifier = {
			factor = 3
			OR = {
				has_ai_personality = honorbound_warriors
				is_galactic_emperor = yes
				# has_ai_personality = technological_warriors ?
			}
		}
		modifier = {
			factor = 2
			OR = {
				has_ai_personality = xenophobic_isolationists
				has_country_flag = rebelling_satrapy
				has_federation = yes
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				has_ai_personality = peaceful_traders
				has_origin = "origin_khan_successor"
			}
		}
		modifier = {
			factor = 0.1
			OR = {
				has_ai_personality = fanatic_befrienders
				relative_power = {
					who = event_target:raider_khanate
					category = fleet
					value < inferior
				}
			}
		}
	}
	immediate = {
		# country_event = { id = marauder.550 } # Submit to Khan
		country_event = { id = marauder.559 } # Pre-Submit to Khan
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = satrapy
		}
	}
}

# Submit to Khan (Pre-Helper)
# used also for marauder.555 and marauder.551
# This = new subject
country_event = {
	id = marauder.559
	is_triggered_only = yes
	hide_window = yes
	# trigger = {}
	immediate = {
		## If has_federation give Horde malus back
		set_variable = { which = "inc_lost_to_marauder" value = 1 }
		if = { limit = { has_federation = yes }
			change_variable = { which = "inc_lost_to_marauder" value = 1 }
			if = { limit = { is_federation_leader = yes }
				change_variable = { which = "inc_lost_to_marauder" value = 1 }
			}
			federation = {
				every_member = {
					change_variable = { which = "planets_lost_to_marauder" value = { scope = prev variable = "inc_lost_to_marauder" } }
				}
			}
		}

		if = { limit = { num_defensive_pacts > 0 }
			# TODO: use export_trigger_value_to_variable  (currently not possible 3.0.3)
			every_playable_country = {
				limit = { has_defensive_pact = prev }
				change_variable = { which = "planets_lost_to_marauder" value = 1 }
				change_variable = { which = "planets_lost_to_marauder" value = { scope = prev variable = "inc_lost_to_marauder" } }
			}
		}

		if = { limit = { is_overlord = yes }
			every_subject = {
				country_event = { id = marauder.553 days = 10 }
				country_event = { id = marauder.551 }
				# set_subject_of = {
				# 	who = event_target:raider_khanate
				# 	subject_type = satrapy
				# }
				add_modifier = { modifier = "satrapy_of_horde" days = -1 }
				change_variable = { which = "planets_lost_to_marauder" value = 1 }
				event_target:raider_khanate = {
					set_faction_hostility = {
						target = PREV
						set_friendly = yes
					}
					copy_random_tech_from = { who = PREV area = engineering }
					add_resource = { influence = 20 }
				}
			}
		} else_if = { limit = { is_subject = yes exists = overlord }
			overlord = { # much less likely
				change_variable = { which = "planets_lost_to_marauder" value = 2 }
			}
		}

		# Can't rebel for a year after submitting.
		set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }
		save_event_target_as = new_satrapy
		observer_event = { id = observer.19 }
		every_playable_country = {
			limit = {
				is_ai = no
				has_communications = ROOT
				NOT = { is_same_empire = ROOT }
			}
			country_event = { id = marauder.552 }
		}
		country_event = { id = marauder.553 days = 10 }
		add_modifier = { modifier = "satrapy_of_horde" days = -1 }
		if = { limit = { check_variable = { which = "planets_lost_to_marauder" value < 6 } }
			set_variable = { which = "planets_lost_to_marauder" value = 6 }
		}
		divide_variable = { which = "planets_lost_to_marauder" value = 2 }
		event_target:raider_khanate = {
			set_faction_hostility = {
				target = ROOT
				set_friendly = yes
			}
			copy_random_tech_from = { who = PREV area = physics }
			add_resource = { influence = 100 }
		}
		clear_variable = "inc_lost_to_marauder"
	}
}

### Regular Reinforcements at Capital of Satrap
fleet_event = {
	id = marauder.560
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		CmtTriggerExistKhanCountry = yes
		owner = { is_same_empire = event_target:raider_khanate }
	}

	immediate = {
		if = {
			limit = {
				NOT = { exists = event_target:satrapy_empire }
				# exists = from
				# from = { is_scope_type = country }
			}
			log_error="DEBUG saved new satrapy_empire[From.GetName]!?"
			space_owner = { save_global_event_target_as = satrapy_empire }
		}
		event_target:satrapy_empire = { owner_species = { save_event_target_as = satrapy_species } }
		if = {
			limit = {
				event_target:CmtGlobalVar = {
					NOR = {
						check_variable = { which = CmtVarReinforceCycle_Khan value = 2 }
						check_variable = { which = CmtVarReinforceCycle_Khan value = 3 }
						check_variable = { which = CmtVarReinforceCycle_Khan value = 4 }
					}
				}
			}
			fleet_event = { id = marauder.560 days = 400 random = 400 }
			CmtEffectCreateAdmiralty_KhanSubReinforcement = yes
		} else = {
			fleet_event = { id = marauder.560 days = 40 random = 40 }
			if = {
				limit = { check_variable = { which = CmtVarKhanReinforcementCounter value > 9.5 } }
				CmtEffectCreateAdmiralty_KhanSubReinforcement = yes
				change_variable = { which = CmtVarKhanReinforcementCounter value = -10 }
			}
			ROOT.owner = { ROOT = { CmtEffectKhanIncreasementReinforcementCycle = yes } }
		}
	}
}

### The Future of the Horde (HIDDEN)
country_event = {
	id = marauder.600
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_marauders
		# NOT = { has_country_flag = marauder600_happened }
	}

	immediate = {
		# set_country_flag = marauder600_happened
		remove_global_flag = marauder_crisis_ongoing
		remove_global_flag = khan_no_die
		if = {
			limit = { has_global_flag = great_khan_wins }
			remove_global_flag = sleepers_awake_rival_waking
			remove_global_flag = sleepers_awake_happened
			remove_global_flag = war_in_heaven_started
			remove_global_flag = war_in_heaven_ongoing
			remove_global_flag = war_in_heaven_debug
			clear_global_event_target = FirstSleeper
			clear_global_event_target = great_khan
			clear_global_event_target = great_khan_ruler
			# clear_global_event_target = raider_khanate
		}

		if = { # Khan Extended
			limit = {
				is_at_war = yes
				is_war_leader = yes
				# any_war = { is_war_participant = ROOT }
			}
			every_war = { # End Expansion War
				limit = { is_war_participant = ROOT }
				end_war_effect = yes
			}
		} # End Khan Extended

		if = {
			limit = { num_owned_planets < 1 }
			country_event = { id = marauder.604 } # Reverts to old ways
		} else = {
			if = {
				limit = {
					OR = {
						NOR = {
							num_owned_planets < 6
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathSplinter value = 1 } }
						}
						NOT = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathKhanate value = 1 } } }
						NOR = {
							count_country = { limit = { is_subject_type = satrapy } count < 2 }
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathDemocratic value = 1 } }
						}
					}
				}
				random_list = {
					60 = {
						modifier = {
							factor = 0
							OR = {
								num_owned_planets < 6
								event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathSplinter value = 1 } }
							}
						}
						modifier = {
							factor = 0.167
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathSplinter value = 2 } }
						}
						modifier = {
							factor = 0.334
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathSplinter value = 3 } }
						}
						# Fractures into Diadochi
						country_event = { id = marauder.601 }
					}
					10 = {
						modifier = {
							factor = 0
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathKhanate value = 1 } }
						}
						modifier = {
							factor = 2
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathKhanate value = 3 } }
						}
						modifier = {
							factor = 6
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathKhanate value = 4 } }
						}
						# Stays united in New Khanate
						country_event = { id = marauder.602 }
						modifier = {
							factor = 0 # Can only happens if Horde owns planets
							num_owned_planets < 1
						}
					}
					10 = {
						modifier = {
							factor = 0
							OR = {
								count_country = { limit = { is_subject_type = satrapy } count < 2 }
								event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathDemocratic value = 1 } }
							}
						}
						modifier = {
							factor = 2
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathDemocratic value = 3 } }
						}
						modifier = {
							factor = 6
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathDemocratic value = 4 } }
						}
						country_event = { id = marauder.603 }
					}
				}
			} else = {
				random_list = {
					60 = {
						modifier = {
							factor = 0
							num_owned_planets < 6
						}
						country_event = { id = marauder.601 }
					}
					10 = {
						country_event = { id = marauder.602 }
						modifier = {
							factor = 0 # Can only happens if Horde owns planets
							num_owned_planets < 1
						}
					}
					10 = {
						# Turns into Democratic Federation
						modifier = {
							factor = 0 # Can only happen if there are enough Satrapies
							count_country = {
								limit = { is_subject_type = satrapy }
								count < 2
							}
						}
						modifier = {
							factor = 0 # Can only happens if Horde owns planets
							num_owned_planets < 1
						}
						country_event = { id = marauder.603 }
					}
				}
			}
		}
		clear_global_event_target = marauder_rally_point
		event_target:CmtGlobalVar = {
			if = {
				limit = { check_variable = { which = CmtVarKhanMultiple value = 3 } }
				remove_global_flag = CmtFlagNowInKhanInterval
				if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T1 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D1 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T2 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D2 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T3 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D3 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T4 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D4 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T5 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D5 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value >= @CmtConstKhanInterval_T0 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstTUnq_ConstKhanInterval }
				} ### Do nothing on < @CmtConstKhanInterval_T0
			}
		}
	}
}

# The Diadochi (HIDDEN)
country_event = {
	id = marauder.601
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		# every_owned_fleet = { # delete everything except starbase_marauder
		# 	limit = {
		# 		count_owned_ship = {
		# 			count < 1
		# 			limit = { is_ship_size = starbase_marauder }
		# 		}
		# 	}
		# 	delete_fleet = this
		# }
		every_subject = {
			set_subject_of = { who = none }
			if = {
				limit = { has_modifier = "satrapy_of_horde" }
				remove_modifier = "satrapy_of_horde"
			}
			country_event = { id = marauder.670 days = 2 } # Notify
		}
		every_country = {
			limit = { has_modifier = "satrapy_of_horde" }
			country_event = { id = marauder.670 days = 4 } # Notify
			remove_modifier = "satrapy_of_horde"
		}
		if = {
			limit = {
				OR = {
					num_owned_planets > 9
					count_system_within_border = {
						count > 3
						limit = {
							any_system_planet = {
								has_owner = yes
								is_owned_by = ROOT
							}
							is_potential_diadochi_system = yes
						}
					}
				}
			}
			# Four Diadochi
			assign_first_diadochi_planets = yes
			assign_second_diadochi_planets = yes
			assign_third_diadochi_planets = yes
			assign_fourth_diadochi_planets = yes
			assign_diadochi_systems = yes
			create_first_diadochi = yes
			create_second_diadochi = yes
			create_third_diadochi = yes
			create_fourth_diadochi = yes
		}
		# Two Diadochi (Marauder small)
		else = {
			assign_third_diadochi_planets = yes
			assign_fourth_diadochi_planets = yes
			assign_diadochi_systems = yes
			create_third_diadochi = yes
			create_fourth_diadochi = yes
		}
		set_diadochi_claims = yes
		observer_event = { id = observer.20 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.620 }
		}
		destroy_country = yes
		# Cleanup temp vars
		every_playable_country = {
			limit = { is_variable_set = "successor_fleet_power" }
			clear_variable = "successor_fleet_power"
		}
	}
}

# The New Khanate (HIDDEN)
country_event = {
	id = marauder.602
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		country_event = { id = khan.303 } # get marauder_species
		create_country = {
			name_list = random
			name = random
			species = event_target:marauder_species
			type = default
			authority = auth_imperial
			civics = { civic = civic_great_khans_legacy civic = random civic = random }
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
			}
			ignore_initial_colony_error = yes
			effect = {
				set_country_flag = new_khanate_flag
				set_country_flag = first_alien_life
				set_country_flag = has_encountered_other_empire
				save_event_target_as = new_khanate
			}
		}
		country_event = { id = marauder.609 }
		every_subject = {
			set_subject_of = { who = none }
			if = {
				limit = { has_modifier = "satrapy_of_horde" }
				remove_modifier = "satrapy_of_horde"
			}
			country_event = { id = marauder.670 days = 2 } # Notify
			country_event = { id = marauder.671 days = 8 }
		}
		every_country = {
			limit = { has_modifier = "satrapy_of_horde" }
			country_event = { id = marauder.670 days = 4 } # Notify
			remove_modifier = "satrapy_of_horde"
		}
		observer_event = { id = observer.22 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.640 } # Notify
		}
		destroy_country = yes
	}
}

# Democratic Federation (HIDDEN)
# This = awakened_marauders
country_event = {
	id = marauder.603
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		country_event = { id = khan.303 } # get marauder_species
		create_country = {
			name_list = random
			name = random
			species = event_target:marauder_species
			type = default
			authority = auth_democratic
			civics = random
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_egalitarian
				ethic = ethic_xenophile
			}
			ignore_initial_colony_error = yes
			effect = {
				set_country_flag = democratic_khanate_flag
				save_event_target_as = new_khanate
			}
		}
		country_event = { id = marauder.609 }
		every_subject = {
			set_subject_of = { who = none }
			if = {
				limit = { has_modifier = "satrapy_of_horde" }
				remove_modifier = "satrapy_of_horde"
			}
			country_event = { id = marauder.660 }
		}
		every_country = {
			limit = { has_modifier = "satrapy_of_horde" }
			country_event = { id = marauder.660 days = 2 }
			remove_modifier = "satrapy_of_horde"
		}

		observer_event = { id = observer.23 }
		every_playable_country = {
			limit = {
				is_ai = no
				NOT = { is_subject_type = satrapy }
			}
			country_event = { id = marauder.661 }
		}
		destroy_country = yes
	}
}

# The Old Ways (HIDDEN)
country_event = {
	id = marauder.604
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		create_country = {
			name_list = random
			name = random
			species = event_target:marauder_species
			type = dormant_marauders
			civics = { civic = civic_anarcho_tribalism civic = random }
			origin = "origin_khan_successor"
			flag = {
				icon = {
					category = "pirate"
					file = "flag_pirate_5.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = { "black" "black" "null" "null" }
			}
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
			}
			ignore_initial_colony_error = yes
			effect = {
				save_event_target_as = restored_marauders
				set_country_flag = restored_marauders_flag
				# set_name = random
				ROOT = {
					switch = {
						trigger = has_country_flag
						marauder_1 = {
							prev = { set_country_flag = marauder_1 save_global_event_target_as = marauder_country_1 }
						}
						marauder_2 = {
							prev = { set_country_flag = marauder_2 save_global_event_target_as = marauder_country_2 }
						}
						marauder_3 = {
							prev = { set_country_flag = marauder_3 save_global_event_target_as = marauder_country_3 }
						}
					}
					every_owned_leader = {
						# limit = { leader_class = ruler }
						set_owner = prev
					}
				}
			}
		}

		every_owned_fleet = {
			limit = {
				OR = {
					has_fleet_flag = satrapy_garrison
					has_fleet_flag = satrapy_garrison_fleet
					has_fleet_flag = horde_auxuliaries
				}
			}
			destroy_fleet = this
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = { set_owner = event_target:restored_marauders }
		}
		every_owned_fleet = {
			set_owner = event_target:restored_marauders
			if = {
				limit = { exists = leader }
				leader = { set_owner = event_target:restored_marauders }
				if = {
					limit = { NOT = { is_ship_class = shipclass_transport } }
					assign_leader = leader
				}
				fleet_event = { id = khan.611 days = -1 }
			}
		}
		event_target:restored_marauders = {
			copy_techs_from = { target = ROOT }
			if = {
				limit = { ROOT = { num_owned_relics > 0 } }
				steal_relic = { target = ROOT relic = all }
			}
			# create_marauder_successor_fleet = yes
			event_target:marauder_rally_point = {
				prev = { CmtEffectCreateFleet_KhanStandard = yes }
			}
		}

		# Establish Communications
		every_country = {
			limit = { has_communications = ROOT }
			establish_communications_no_message = event_target:restored_marauders
		}

		every_subject = {
			set_subject_of = { who = none }
			if = {
				limit = { has_modifier = "satrapy_of_horde" }
				remove_modifier = "satrapy_of_horde"
			}
			country_event = { id = marauder.670 days = 3 } # Notify
			country_event = { id = marauder.671 days = 10 }
		}
		every_country = {
			limit = { has_modifier = "satrapy_of_horde" }
			country_event = { id = marauder.670 days = 8 } # Notify
			remove_modifier = "satrapy_of_horde"
		}
		observer_event = { id = observer.21 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.630 } # Notify
		}
		destroy_country = yes
		clear_global_event_target = marauder_rally_point
	}
}

# Fully handover marauder country (HIDDEN)
# From marauder.602 and marauder.603
# This = be destroyed country
country_event = {
	id = marauder.609
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = event_target:new_khanate
		# NOT = { has_global_flag = great_khan_wins }
	}
	immediate = {
		# if = {
		# 	limit = { NOT = { exists = event_target:new_khanate } }
		# 	last_created_country = {
		# 		save_event_target_as = new_khanate
		# 	}
		# }
		if = {
			limit = { NOT = { has_global_flag = marauder_crisis_ongoing } }
			# Drag military fleets except for one (or two)
			random_owned_fleet = {
				limit = {
					is_mobile = yes
					exists = leader
					is_civilian = no any_owned_ship = { is_ship_class = shipclass_military }
				}
				weights = {
					base = 1
					# modifier = { add = 1 num_ships > 5 }
					# modifier = { add = 2 num_ships > 10 }
					# modifier = { add = 3 num_ships > 20 }
					modifier = { add = 1 fleet_power > 5500 }
					modifier = { add = 2 fleet_power > 11000 }
					modifier = { add = 3 fleet_power > 22000 }
				}
				set_owner = event_target:new_khanate
				leader = { set_owner = event_target:new_khanate }
			}
			random_owned_fleet = {
				limit = { is_mobile = yes exists = leader }
				set_owner = ROOT
				leader = { set_owner = ROOT } # recruit leader
				if = {
					limit = { NOT = { is_ship_class = shipclass_transport } }
					assign_leader = leader
				}
				fleet_event = { id = khan.611 days = -1 }
			}
			every_owned_fleet = {
				limit = {
					is_civilian = no any_owned_ship = { is_ship_class = shipclass_military }
				}
				delete_fleet = this
			}
		}
		# Normalize Starbases
		if = {
			limit = {
				OR = {
					NOT = { has_global_flag = marauder_crisis_ongoing }
					event_target:new_khanate = { CmtTriggerIsMarauder = no }
				}
			}
			every_owned_starbase = {
				limit = { has_starbase_size = starbase_marauder }
				set_owner = event_target:new_khanate
				set_starbase_size = starbase_outpost
			}
			event_target:new_khanate = {
				add_100_unity_per_year_passed = yes
				random_system_within_border = {
					limit = { CmtTriggerMarauderCapitalSystem = yes }
					system_event = { id = khan.301 }
				}
			}
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = { set_owner = event_target:new_khanate }
		}
		every_owned_fleet = {
			set_owner = event_target:new_khanate
			# recruit leader
			if = {
				limit = { exists = leader }
				leader = { set_owner = event_target:new_khanate }
				if = {
					limit = { NOT = { is_ship_class = shipclass_transport } }
					assign_leader = leader
				}
				fleet_event = { id = khan.611 days = -1 }
			}
		}

		# needs to be last (as the country gets destroyed without planet)
		every_owned_planet = {
			set_controller = event_target:new_khanate
			set_owner = event_target:new_khanate
		}
		event_target:new_khanate = {
			add_resource = {
				minerals = 20000
				energy = 20000
				alloys = 20000
				consumer_goods = 20000
				food = 20000
				influence = 1000
			}
			copy_techs_from = { target = ROOT }
			if = {
				limit = { ROOT = { num_owned_relics > 0 } }
				steal_relic = { target = ROOT relic = all }
			}
			if = {
				limit = {
					any_owned_starbase = { has_starbase_size < starbase_starhold }
				}
				random_owned_starbase = {
					limit = { has_starbase_size < starbase_starhold }
					set_starbase_size = starbase_starhold
					starbase_event = { id = khan.302 days = 1 }
					# set_starbase_module = { slot = 1 module = shipyard }
					# set_starbase_module = { slot = 2 module = shipyard }
					# set_starbase_module = { slot = 3 module = shipyard }
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size < starbase_starhold }
					}
					random_owned_starbase = {
						limit = { has_starbase_size < starbase_starhold }
						set_starbase_size = starbase_starhold
						starbase_event = { id = khan.302 days = 1 }
					}
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size < starbase_starhold }
					}
					random_owned_starbase = {
						limit = { has_starbase_size < starbase_starhold }
						set_starbase_size = starbase_starhold
						starbase_event = { id = khan.302 days = 1 }
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = event_target:new_khanate
				}
			}
			# Survey Rest of Horde's Space
			ROOT = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = { owner = event_target:new_khanate }
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = { owner = event_target:new_khanate }
			}
			# Take all old leaders!?
			every_owned_leader = {
				# limit = { leader_class = ruler }
				set_owner = event_target:new_khanate
			}

			if = { limit = { CmtTriggerIsMarauder = no }
				add_100_unity_per_year_passed = yes
				country_event = { id = game_start.6 days = 6 random = 4 }	# advanced_empire
				country_event = { id = game_start.9 days = 12 random = 8 }	# empire_init_create_ships civil
				create_fleet_from_naval_cap = 0.2 # base
				### Units
				create_ship_design = { design = "NAME_Pirate_Transport" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_Clan_Builder" }
				add_ship_design = last_created_design
				create_ship_design = { design = "NAME_Outrider" }
				add_ship_design = last_created_design
				### Dynamic Empire fleet_power
				ROOT = { set_variable = { which = "successor_fleet_power" value = 40000 } }
				# Store each fleet_power to var
				every_playable_country = {
					limit = {
						NOT = { is_variable_set = "successor_fleet_power" }
						fleet_power > 40000
					}
					if = {
						limit = {
							any_owned_planet = { has_planet_flag = fallen_empire_world }
						}
						set_variable = { which = "successor_fleet_power" value = 220000 }
					} else = {
						export_trigger_value_to_variable = {
							trigger = fleet_power variable = "successor_fleet_power"
						}
					}
				}
				random_owned_planet = {
					limit = { solar_system = { exists = starbase } }
					weights = {
						base = 1
						modifier = { add = 1 is_colony = yes }
						modifier = { add = 2 is_capital = yes }
					}
					prev = {
						CmtEffectCreateFleet_KhanStandard = yes # create_marauder_successor_fleet = yes
						CmtEffectCreateFleet_KhanArmy = yes
						CmtEffectCreateFleet_KhanConstructor = yes
					}
					while = {
						count = 4
						limit = {
							any_playable_country = {
								is_variable_set = "successor_fleet_power"
								check_variable = {
									which = "successor_fleet_power"
									value = { scope = ROOT variable > "successor_fleet_power" }
								}
							}
						}
						ROOT = {
							change_variable = { which = "successor_fleet_power" value = 20000 }
							# own old to get the right design!?
							CmtEffectCreateFleet_KhanStandard = { DIADOCHI = yes } # create_marauder_successor_fleet = yes
						}
						last_created_leader = { set_owner = prev }
						last_created_fleet = { set_owner = prev assign_leader = last_created_leader }
					}
				}
			}
		}
		# Establish Communications
		every_country = {
			limit = { has_communications = ROOT }
			establish_communications_no_message = event_target:new_khanate
		}
	}
}

# The New Galactic Horde (Satrapy)
country_event = {
	id = marauder.660
	title = "marauder.660.name"
	desc = "marauder.660.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = marauder_diplomacy_engaged }
	}
	immediate = {
		if = {
			limit = { is_subject = yes }
			set_subject_of = { who = none }
		}
		if = {
			limit = { is_variable_set = "planets_lost_to_marauder" }
			clear_variable = "planets_lost_to_marauder"
		}
	}
	option = {
		name = marauder.660.a
		ai_chance = { factor = 100 }
		join_alliance = {
			who = event_target:new_khanate
			name = NAME_Galactic_Horde
			override_requirements = yes
		}
	}
	option = { name = marauder.660.b }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
}

# Satrapy No Longer
country_event = {
	id = marauder.670
	title = "marauder.670.name"
	desc = "marauder.670.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = marauder_diplomacy_engaged }
	}
	immediate = {
		if = {
			limit = { is_subject = yes }
			set_subject_of = { who = none }
		}
		if = {
			limit = { is_variable_set = "planets_lost_to_marauder" }
			clear_variable = "planets_lost_to_marauder"
		}
	}
	option = { name = marauder.670.a }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
}

# on_leader_death - make extra sure that flag is set
country_event = {
	id = marauder.711
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		from = { has_leader_flag = great_khan }
		NOT = { has_global_flag = great_khan_wins }
	}
	immediate = {
		set_global_flag = great_khan_dead
		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = {
				kill_leader = { show_notification = no }
			}
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = {
				kill_leader = { show_notification = no }
			}
		}
		country_event = { id = marauder.712 days = 10 }
	}
}

namespace = khan

############################
###  Non-aligned League  ###
############################

### Find Leader for League
country_event = {
	id = khan.12 # war_in_heaven.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		CmtTriggerIsKhanCountry = yes
		has_global_flag = war_in_heaven_ongoing
		NOR = {
			has_global_flag = war_in_heaven_nonaligned_league
			has_global_flag = war_in_heaven_seeking_league_leader
		}
		has_galactic_emperor = no # Galactic Empire serves this purpose
	}
	# mean_time_to_happen = { months = 1 }
	immediate = {
		# Custodian is asked first, if one exists
		if = {
			limit = {
				has_galactic_custodian = yes
				any_playable_country = {
					is_galactic_custodian = yes
					NOR = {
						has_country_flag = war_in_heaven_league_leader_declined
						any_country = {
							is_country_type = awakened_fallen_empire
							is_at_war_with = prev
						}
					}
				}
			}
			random_playable_country = {
				limit = {
					is_galactic_custodian = yes
					NOR = {
						has_country_flag = war_in_heaven_league_leader_declined
						any_country = {
							is_country_type = awakened_fallen_empire
							is_at_war_with = prev
						}
					}
				}
				set_global_flag = war_in_heaven_seeking_league_leader
				country_event = { id = war_in_heaven.13 }
			}
		}
		### Search for federation leaders; offer leadership to strongest one that hasn't declined (if any)
		# Find strongest neutral power and offer them to become league leader
		# First federation leaders are asked, then simply the strongest country
		else_if = {
			limit = {
				# NOT = { has_global_flag = war_in_heaven_seeking_league_leader }
				any_federation = {
					any_member = {
						is_federation_leader = yes
						is_homicidal = no
						NOR = {
							has_country_flag = war_in_heaven_league_leader_declined
							any_country = {
								is_country_type = awakened_fallen_empire
								is_at_war_with = prev
							}
						}
					}
					NOT = {
						any_federation = {
							NOT = { is_same_value = prev }
							relative_power = {
								who = prev
								value > equivalent
								category = fleet
							}
							any_member = {
								is_federation_leader = yes
								is_homicidal = no
								NOR = {
									has_country_flag = war_in_heaven_league_leader_declined
									any_country = {
										is_country_type = awakened_fallen_empire
										is_at_war_with = prev
									}
								}
							}
						}
					}
				}
			}
			random_federation = {
				limit = {
					any_member = {
						is_federation_leader = yes
						is_homicidal = no
						NOR = {
							has_country_flag = war_in_heaven_league_leader_declined
							any_country = {
								is_country_type = awakened_fallen_empire
								is_at_war_with = prev
							}
						}
					}
					NOT = {
						any_federation = {
							NOT = { is_same_value = prev }
							relative_power = {
								who = prev
								value > equivalent
								category = fleet
							}
							any_member = {
								is_federation_leader = yes
								is_homicidal = no
								NOR = {
									has_country_flag = war_in_heaven_league_leader_declined
									any_country = {
										is_country_type = awakened_fallen_empire
										is_at_war_with = prev
									}
								}
							}
						}
					}
				}
				random_member = {
					limit = {
						is_federation_leader = yes
						is_homicidal = no
						NOR = {
							has_country_flag = war_in_heaven_league_leader_declined
							any_country = {
								is_country_type = awakened_fallen_empire
								is_at_war_with = prev
							}
						}
					}
					set_global_flag = war_in_heaven_seeking_league_leader
					country_event = { id = war_in_heaven.13 }
				}
			}
		}
		# Otherwise, make a list of neutral powers and search for strongest member to offer leadership
		else = {
			random_playable_country = {
				limit = {
					# CmtTriggerIsPlayableEmpire = yes
					is_subject = no
					is_homicidal = no
					NOR = {
						# has_global_flag = war_in_heaven_seeking_league_leader
						has_country_flag = war_in_heaven_league_leader_declined
						any_country = {
							is_country_type = awakened_fallen_empire
							is_at_war_with = prev
						}
						# any_playable_country = {
						# 	is_subject = no
						# 	# is_country_type = default
						# 	relative_power = {
						# 		who = prev
						# 		value > equivalent
						# 	}
						# 	NOR = {
						# 		has_country_flag = war_in_heaven_league_leader_declined
						# 		is_homicidal = yes
						# 		any_country = {
						# 			is_country_type = awakened_fallen_empire
						# 			is_at_war_with = prev
						# 		}
						# 	}
						# }
					}
				}
				prev = { change_variable = { which = CmtFlagNominatedLeader value = 1 } }
				set_timed_country_flag = { flag = CmtFlagNominatedLeader days = 3 }
			}

			## If there are fewer than 2 nominees, give up on forming league.
			if = {
				limit = {
					NOR = {
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarHeavenNpcLeague value = 1 } }
						check_variable = { which = CmtFlagNominatedLeader value < 2 }
						# count_country = {
						# 	limit = { has_country_flag = CmtFlagNominatedLeader }
						# 	count < 2
						# }
					}
				}
				### Pick most powerful nominee & offer leadership.
				random_playable_country = {
					limit = {
						has_country_flag = CmtFlagNominatedLeader
						NOT = {
							any_playable_country = {
								has_country_flag = CmtFlagNominatedLeader
								relative_power = {
									who = prev
									value > equivalent
								}
							}
						}
					}
					set_global_flag = war_in_heaven_seeking_league_leader
					country_event = { id = war_in_heaven.13 }
				}
			} else = {
				event_target:CmtGlobalVar = { set_variable = { which = CmtVarHeavenPreludeSpeed value = 1 } }
			}
			clear_variable = CmtFlagNominatedLeader
		}
	}
}

country_event = {
	id = khan.16 # war_in_heaven.16
	title = war_in_heaven.20.a
	desc = war_in_heaven.22.name # war_in_heaven.16.desc
	picture = GFX_evt_small_space_battle
	show_sound = event_alien_signal
	location = root
	is_triggered_only = yes
	trigger = {
		has_global_flag = war_in_heaven_nonaligned_league
		has_federation = yes
		federation = { has_federation_flag = non_aligned_league }
		# OR = {
		# 	is_federation_leader = yes
		# 	has_country_flag = war_in_heaven_league_leader
		# }
		NOR = {
			has_global_flag = war_in_heaven_nonaligned_league_war
			has_global_flag = war_in_heaven_seeking_league_leader
		}
		# NOT = { has_country_flag = war_in_heaven_nonaligned_league_timer }
		exists = event_target:raider_khanate
	}

	# mean_time_to_happen = { months = 3 }

	immediate = {
		set_global_flag = war_in_heaven_nonaligned_league_war
	}

	option = {
		name = war_in_heaven.16.a
		federation = {
			random_member = {
				limit = {
					is_federation_leader = yes
					NOT = { is_at_war_with = event_target:raider_khanate }
				}
				declare_war = {
					target = event_target:raider_khanate
					name = "NAME_The_Civil_War" # "The Great Uprising"
					attacker_war_goal = "wg_independence"
				}
			}
		}

		event_target:raider_khanate = {
			# limit = { CmtTriggerIsKhanCountry = yes }
			# declare_war = {
			# 	target = root
			# 	name = "NAME_The_War_in_Heaven"
			# 	attacker_war_goal = "wg_war_in_heaven"
			# }
			hidden_effect = {
				every_subject = { join_war = prev }
			}
		}
	}
}


# The numerical order is upside down in relation to the events happen (Because of the logic of the initial author Kinneyj47)
# Final Uprising (290-299)
# Without FE Awakening
country_event = {
	id = khan.290
	title = "war_goal_wg_marauder_uprising" # "emperor.101.name" # "The Uprising"
	desc = great_khan_integrate_choice
	picture = GFX_evt_khan_throne_room
	is_triggered_only = yes
	force_open = yes
	trigger = {
		exists = event_target:raider_khanate
	}
	immediate = {
		remove_global_flag = war_in_heaven_nonaligned_league
		remove_global_flag = war_in_heaven_seeking_league_leader
		event_target:raider_khanate = {
			random_subject = {
				limit = {
					CmtTriggerIsPlayableEmpire = yes
					opinion_level = { who = PREV level >= neutral }
					is_ai = yes
					OR = {
						relative_power = {
							who = PREV
							category = all
							value > inferior
						}
						relative_power = {
							who = PREV
							category = fleet
							value > equivalent
						}
					}
				}
				PREV = { save_event_target_as = new_khanate }
				country_event = { id = marauder.609 }
				destroy_country = yes
			}
		}
	}
	option = {
		name = marauder_uprising_now
		event_target:raider_khanate = {
			every_subject = {
				set_subject_of = { who = none }
				remove_modifier = "satrapy_of_horde"
				clear_variable = "planets_lost_to_marauder"
				# if = {
				# 	limit = { NOT = { is_at_war_with = PREV } }
				# 	declare_war = {
				# 		target = PREV
				# 		name = "NAME_Rebellion" # "The Great Uprising"
				# 		attacker_war_goal = "wg_independence"
				# 	}
				# }
				set_country_flag = rebelling_satrapy
				add_opinion_modifier = {
					modifier = opinion_traitor_to_empire
					who = PREV
				}
				set_faction_hostility = {
					target = PREV
					set_hostile = yes
				}
				PREV = {
					set_faction_hostility = {
						target = PREV
						set_hostile = yes
					}
				}
				country_event = { id = khan.16 days = 64 random = 16 }
			}
		}
		country_event = { id = khan.12 days = 12 }
		ai_chance = { factor = 2 }
	}
	option = {
		name = marauder_uprising_stall
		hidden_effect = {
			country_event = { id = khan.290 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
		}
		ai_chance = { factor = 0 }
	}
	# after = {}
}

# TODO: SOME BROKEN ASS SHIT GOING ON HERE (by Kinneyj47)
# This = EVERY default empire choose your side
# From = Marauder
country_event = {
	id = khan.291 # Similar id = war_in_heaven.4
	force_open = yes
	title = "FE_war_choice"
	desc = "FE_war_choice_desc"
	picture = GFX_evt_fallen_empire_awakes
	show_sound = event_alien_signal
	location = from
	is_triggered_only = yes
	immediate = {
		if = { limit = { is_variable_set = "planets_lost_to_marauder" }
			clear_variable = "planets_lost_to_marauder" # or reduce only?
		}
		if = {
			limit = {
				is_subject = yes
				OR = {
					from = { is_overlord_to = prev }
					has_modifier = "satrapy_of_horde"
				}
			}
			set_subject_of = { who = none }
			set_country_flag = rebelling_satrapy # if choosen Horde gets removed
		}
		if = { limit = { has_modifier = "satrapy_of_horde" }
			remove_modifier = "satrapy_of_horde"
		}
	}
	# Horde
	option = {
		name = pick_great_khan
		trigger = {
			CmtTriggerIsPlayableEmpire = yes
			is_subject = no
			has_been_declared_crisis = no
			is_zofe_fe = no
			is_galactic_emperor = no
			# opinion_level = { who = event_target:raider_khanate level >= neutral }
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				opinion_level = { who = event_target:raider_khanate level <= poor }
			}
		}
		join_war = event_target:raider_khanate
		join_alliance = {
			who = event_target:raider_khanate
			name = "NAME_Galactic_Horde"
			override_requirements = yes
		}
		hidden_effect = {
			if = { limit = { has_country_flag = rebelling_satrapy }
				remove_country_flag = rebelling_satrapy
			}
			set_country_flag = war_in_heaven_picked_side
			set_country_flag = war_in_heaven_league_leader_declined
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_ally }
			add_opinion_modifier = { who = event_target:FirstSleeper modifier = opinion_war_in_heaven_enemy }
			event_target:FirstSleeper = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
			from = {
				add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_ally }
				copy_random_tech_from = { who = PREV }
				PREV = { copy_random_tech_from = { who = PREV } }
			}
		}
	}
	# Fallen Empire
	option = {
		name = pick_fe
		trigger = {
			CmtTriggerIsPlayableEmpire = yes
			is_subject = no
			has_been_declared_crisis = no
			exists = event_target:FirstSleeper
			is_zofe_fe = no
			is_galactic_emperor = no
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:FirstSleeper }
					opinion_level = { who = event_target:FirstSleeper level <= poor }
					is_homicidal = yes
				}
			}
		}
		# if = { limit = { NOT = { is_at_war_with = event_target:raider_khanate } }
		join_war = event_target:FirstSleeper
		if = {
			limit = { is_zofe_ae = yes }		## For ZoFE
			every_subject = {
				limit = { CmtTriggerIsPlayableEmpire = yes }
				join_war = root
			}
		} else = {
			event_target:FirstSleeper = {
				switch = {
					trigger = has_ethic
					ethic_fanatic_xenophobe = { prev = { set_subject_of = { who = prev subject_type = thrall } } }
					ethic_fanatic_xenophile = { prev = { set_subject_of = { who = prev subject_type = signatory } } }
					ethic_fanatic_spiritualist = { prev = { set_subject_of = { who = prev subject_type = dominion } } }
					ethic_fanatic_materialist = { prev = { set_subject_of = { who = prev subject_type = satellite } } }
				}
			}
		}
		hidden_effect = {
			set_country_flag = war_in_heaven_picked_side
			set_country_flag = war_in_heaven_league_leader_declined
			add_opinion_modifier = { who = event_target:FirstSleeper modifier = opinion_war_in_heaven_ally }
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_enemy }
			from = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
			event_target:FirstSleeper = {
				add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_ally }
				copy_random_tech_from = { who = PREV }
				PREV = { copy_random_tech_from = { who = PREV } }
			}
		}
	}
	# Non-Aligned League
	option = {
		name = pick_indep # war_in_heaven.4.c "We will not take sides in this conflict."
		trigger = {
			is_subject = no
			has_been_declared_crisis = no
		}
		ai_chance = {
			factor = 10
			# TODO: could be more dynamic value
			modifier = {
				factor = 0.5
				fleet_power < 25000
			}
			modifier = {
				factor = 0.5
				fleet_power < 50000
			}
			modifier = {
				factor = 2
				fleet_power > 80000
			}
			modifier = {
				factor = 2
				fleet_power > 100000
			}
			modifier = {
				factor = 2
				fleet_power > 125000
			}
			modifier = {
				factor = 5
				fleet_power > 200000
			}
			modifier = {
				factor = 5
				has_federation = yes
			}
			modifier = {
				factor = 3
				any_country = {
					is_in_federation_with = root
					fleet_power > 100000
				}
			}
			modifier = {
				factor = 2
				any_playable_country = {
					is_ai = no is_in_federation_with = root
				}
			}
		}
		hidden_effect = {
			# set_country_flag = war_in_heaven_picked_side
			set_country_flag = war_in_heaven_nonaligned_league_check
			set_faction_hostility = { target = from set_hostile = yes }
			from = {
				if = { limit = { root = { has_country_flag = rebelling_satrapy } }
					add_opinion_modifier = { who = root modifier = opinion_traitor_to_empire }
				}
				add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy }
				set_faction_hostility = { target = root set_hostile = yes }
			}
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_enemy }
			add_opinion_modifier = { who = event_target:FirstSleeper modifier = opinion_war_in_heaven_enemy }
			event_target:FirstSleeper = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
		}

		## Vanilla war_in_heaven.xx short docu
		# .3 => .7 Galactic Emperor
		# MTTH = .12 Find a leader (special if not .7)
		# 	.12 => .13 set_global_flag = war_in_heaven_seeking_league_leader
		# 	.13 => .19
		# MTTH = .14 AI will try to join the League
		# .14/.19 => .15 join_alliance (create)
		# MTTH = .16 declar war
		# .22 nofify declined
		# FE via MTTH war_in_heaven.12
		if = {
			limit = {
				NOR = {
					has_global_flag = war_in_heaven_seeking_league_leader
					has_country_flag = war_in_heaven_league_leader_declined
				}
			}
			declare_war = {
				target = from
				name = "NAME_The_War_in_Heaven"
				attacker_war_goal = "wg_war_in_heaven"
			}
			# if = {
			# 	limit = { exists = event_target:FirstSleeper }
			# 	declare_war = {
			# 		target = event_target:FirstSleeper
			# 		name = "NAME_The_War_in_Heaven"
			# 		attacker_war_goal = "wg_war_in_heaven"
			# 	}
			# }
			# from = {
			# 	declare_war = {
			# 		target = root
			# 		name = "NAME_The_War_in_Heaven"
			# 		attacker_war_goal = "wg_war_in_heaven"
			# 	}
			# }
		}
	}
	option = {
		name = war_in_heaven.4.c.2
		trigger = { is_subject = no }
		ai_chance = { factor = 0 }
	}
	option = {
		name = war_in_heaven.4.d
		trigger = { is_subject = yes }
		if = {
			limit = { overlord = { is_same_value = event_target:FirstSleeper } }
			join_war = event_target:FirstSleeper
		}
		else_if = {
			limit = { overlord = { is_same_value = from } }
			join_war = from
		}
	}
	option = {		## For ZoFE
		name = war_in_heaven.4.e
		trigger = { is_zofe_ae = yes }
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.5
				fleet_power < 25000
			}
			modifier = {
				factor = 0.5
				fleet_power < 50000
			}
			modifier = {
				factor = 2
				fleet_power > 80000
			}
			modifier = {
				factor = 2
				fleet_power > 100000
			}
			modifier = {
				factor = 2
				fleet_power > 125000
			}
		}
		hidden_effect = {
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_enemy }
			from = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
			add_opinion_modifier = { who = event_target:FirstSleeper modifier = opinion_war_in_heaven_enemy }
			event_target:FirstSleeper = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
		}
		declare_war = {
			target = event_target:FirstSleeper
			name = "NAME_The_War_in_Heaven"
			attacker_war_goal = "wg_war_in_heaven"
		}
		declare_war = {
			target = from
			name = "NAME_The_War_in_Heaven"
			attacker_war_goal = "wg_war_in_heaven"
		}
		every_subject = {
			limit = { CmtTriggerIsPlayableEmpire = yes }
			join_war = root
		}
	}
	option = {
		name = war_in_heaven.4.f
		trigger = { is_zofe_fe = yes }
		ai_chance = { factor = 500 }
	}
	# after = {}
}

# FE Awakening
# Assume at this point that the Great Khan is neutral to the empires
# This = Marauder
country_event = {
	id = khan.292 # Similar id = war_in_heaven.3 (MTTH)
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_country = {
			limit = {
				is_fallen_empire = yes
				NOR = {
					is_at_war_with = ROOT
					has_ethic = ethic_gestalt_consciousness
				}
			}
			weights = { base = 1 modifier = { mult = 2 is_country_type = fallen_empire } }

			set_global_flag = sleepers_awake_happened
			remove_global_flag = sleepers_awake_rival_waking

			save_global_event_target_as = FirstSleeper
			set_country_flag = sleepers_awake_ancient_rival # 2nd FE Hack?
			set_country_flag = sleepers_awake_first
			set_country_flag = sleepers_awake_first_sleeper

			country_event = { id = war_in_heaven.1 }
			country_event = { id = fallen_empires_awakening.3 days = 3 }
			set_faction_hostility = {
				target = ROOT
				set_hostile = yes
			}
			ROOT = {
				declare_war = {
					target = PREV
					name = "NAME_The_War_in_Heaven" # "The Great Khan's Gamble"
					attacker_war_goal = "wg_war_in_heaven"
				}
				remove_country_flag = ai_no_wars
			}
			remove_country_flag = ai_no_wars
		}
		# Clear for MTTH war_in_heaven.12
		remove_global_flag = war_in_heaven_nonaligned_league
		remove_global_flag = war_in_heaven_seeking_league_leader
		every_playable_country = {
			limit = { CmtTriggerIsPlayableEmpire = yes }
			country_event = { id = khan.291  days = @CmtConstKhanLifespan_1f }
		}
		set_global_flag = war_in_heaven_debug
		set_global_flag = war_in_heaven_started
		set_global_flag = war_in_heaven_ongoing
		set_timed_global_flag = { flag = war_in_heaven_recently_started days = 5400 }
		if = {
			limit = { has_galactic_emperor = no }
			every_playable_country = {
				limit = { CmtTriggerIsPlayableEmpire = yes }
				country_event = { id = war_in_heaven.4 }
			}
		}
		else = {
			every_playable_country = {
				limit = {
					CmtTriggerIsPlayableEmpire = yes
					is_galactic_community_member = yes
				}
				country_event = { id = war_in_heaven.7 }
			}
			every_playable_country = {
				limit = {
					CmtTriggerIsPlayableEmpire = yes
					is_galactic_community_member = no
				}
				country_event = { id = war_in_heaven.4 }
			}
		}
		observer_event = { id = observer.76 }
	}
}

# Notify only
# This = subject (is_ai = no)
country_event = {
	id = khan.293
	force_open = yes
	is_triggered_only = yes
	diplomatic = yes
	title = "greatkhan_diplo_header"
	desc = "great_khan_fe_war"
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = { name = great_khan_fe_war_response }
}

# Final event (Notify) khan.290
country_event = {
	id = khan.294
	title = "greatkhan_diplo_header"
	desc = great_khan_integrate_announcement
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	trigger = { exists = event_target:raider_khanate }
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
			country_event = { id = khan.290 }
		}
	}
	option = {
		name = great_khan_integrate_response
	}
}

# Great Khan lets his subjects know what is coming khan.292
# This = Marauder
country_event = {
	id = khan.295
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		remove_global_flag = sleepers_awake_happened
		remove_global_flag = war_in_heaven_started
		set_global_flag = sleepers_awake_rival_waking

		every_subject = {
			limit = { is_ai = no }
			country_event = { id = khan.293 } # Notify only
		}
		country_event = { id = khan.292 days = @CmtConstKhanLifespan_4f random = @CmtConstKhanLifespan_2f }
		set_global_flag = war_in_heaven_debug
	}
}

# This = Marauder
country_event = {
	id = khan.296
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = great_khan_wins
		exists = event_target:raider_khanate
	}
	immediate = {
		if = { # Give new Life for longer War
			limit = { check_variable = { which = CmtVarKhanRemainingLive value < 3 } }
			set_variable = { which = CmtVarKhanRemainingLive value = 3 }
		}
		### Unify All Marauders (Final War)
		event_target:CmtGlobalVar = { set_variable = { which = CmtVarKhanMultiple value = 5 } }
		every_country = {
			limit = { is_country_type = dormant_marauders }
			switch = {
				trigger = has_country_flag
				marauder_1 = { every_playable_country = {
					limit = { CmtTriggerCountryHiringMarauder1 = yes }
					set_country_flag = CmtFlagHiringMarauder1
				} }
				marauder_2 = { every_playable_country = {
					limit = { CmtTriggerCountryHiringMarauder2 = yes }
					set_country_flag = CmtFlagHiringMarauder2
				} }
				marauder_3 = { every_playable_country = {
					limit = { CmtTriggerCountryHiringMarauder3 = yes }
					set_country_flag = CmtFlagHiringMarauder3
				} }
			}
		}
		every_playable_country = {
			limit = {
				OR = {
					has_country_flag = CmtFlagHiringMarauder1
					has_country_flag = CmtFlagHiringMarauder2
					has_country_flag = CmtFlagHiringMarauder3
				}
			}
			country_event = { id = marauder.77 days = 18 }
		}
		country_event = { id = marauder.78 days = 21 }	## Mercenaries Join the Great Khan

		locked_random_list = {
			50 = { # Final immediately
				country_event = { id = khan.294 }
				modifier = {
					factor = 0.05
					any_country = { is_fallen_empire = yes }
				}
			}
			50 = { # FE Awakening
				event_target:raider_khanate = {
					country_event = { id = khan.295 }
				}
				modifier = {
					factor = 0
					NOR = {
						host_has_dlc = "Leviathans Story Pack"
						any_country = { is_fallen_empire = yes }
					}
				}
			}
		}
	}
}

# Great Khan has won + Reinforcement (+Notify)
country_event = {
	id = khan.297
	force_open = yes
	is_triggered_only = yes
	diplomatic = yes
	title = "greatkhan_diplo_header"
	desc = "great_khan_wins_announcement"
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		# For every non AI!?
		event_target:raider_khanate = {
			country_event = { id = khan.870 }
			# if = {
			# 	limit = { has_country_flag = has_machinesmith }
			# 	country_event = { id = khan.870 } # Improved Reinforcement
			# } else = {
			# 	country_event = { id = khan.869 } # Regular Reinforcement
			# }
		}
	}
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}

	option = {
		name = great_khan_wins_announcement_response
	}
}

# Notify only (is_ai = no) great_khan has won
country_event = {
	id = khan.298
	force_open = yes
	is_triggered_only = yes
	title = "great_khan_wins"
	desc = "great_khan_wins_desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_radio_chatter
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		NOT = { has_country_flag = marauder_diplomacy_engaged }
	}
	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}
	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
			country_event = { id = khan.297 }
		}
	}
	option = {
		name = great_khan_wins_response
	}
}

# Check for great_khan_wins
# This = Marauder
country_event = {
	id = khan.299
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		NOT = { has_global_flag = great_khan_wins }
		is_overlord = yes
	}
	immediate = {
		if = {
			limit = { count_federation = { count = 1 } }
			# random_federation = { save_event_target_as = exists_federation
			set_variable = { which = exists_federation value = 1 }
			# log="only one federation"
		} else = { set_variable = { which = exists_federation value = 0 } }

		set_variable = { which = inc_fleet_power value = 0 }
		every_playable_country = {
			limit = { is_subject = no fleet_power > 20000 }
			export_trigger_value_to_variable = { trigger = fleet_power variable = inc_fleet_power }
			prev = { change_variable = { which = inc_fleet_power value = prev } }
			clear_variable = inc_fleet_power
		}
		change_variable = { which = inc_fleet_power value = -40000 }
		# log="Check inc_fleet_power [This.inc_fleet_power]"
		export_trigger_value_to_variable = { trigger = fleet_power variable = khan_fleet_power }

		if = {
			limit = {
				OR = {
					check_variable = { which = khan_fleet_power value > inc_fleet_power }
					count_playable_country = {
						limit = {
							# CmtTriggerIsPlayableEmpire = yes
							has_been_declared_crisis = no
							is_subject = no
							fleet_power > 20000
							OR = {
								check_variable = { which = exists_federation value = 0 }
								AND = {
									check_variable = { which = exists_federation value = 1 }
									OR = {
										has_federation = no
										is_federation_leader = yes
									}
								}
							}
						}
						count < 3
					}
				}
			}
			# has_defensive_pact = root
			every_playable_country = {
				if = { limit = { is_ai = no }
					country_event = { id = khan.298 }
				}
			}
			set_global_flag = great_khan_wins
			country_event = {
				id = khan.296
				days = @CmtConstKhanLifespan_2d
				random = @CmtConstKhanLifespan_5f
				# days = @CmtConstKhanLifespan_5d
				# random = @CmtConstKhanLifespan_2d
			}
		}
		clear_variable = exists_federation
		# TODO something like id = origin.50

		# Subject hostile fallback (if possible something is going wrong)
		random_subject = {
			limit = {
				NOT = { has_country_flag = rebelling_satrapy }
				PREV = { is_hostile = PREV }
			}
			weights = { base = 1 modifier = { add = 2 is_ai = no } }
			PREV = {
				set_faction_hostility = {
					target = PREV
					set_friendly = yes
				}
			}
		}
	}
}

# Set Mod Flag
event = {
	id = khan.300
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = gf_great_khan_active
		if = {
			limit = { has_global_flag = expanded_spaceborne_installed }
			event_target:CmtGlobalVar = {
				# set_variable = { which = CmtVarFleetPower_Khan value = 2 }
				set_variable = { which = CmtVarCrisisPower_Midgame value = 4 }
				CmtEffectDifficulty_MidgameVeryHard = yes
			}
		}
	}
}

# Create Citadel
system_event = {
	id = khan.301
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				NAND = {
					exists = starbase
					starbase = { has_starbase_size = starbase_citadel }
				}
			}
			# space_owner = {
			# 	if = {
			# 		limit = { graphical_culture = pirate_01 }
			# 		set_graphical_culture = "reptilian_01"
			# 		log="set_graphical_culture reptilian_01"
			# 		set_variable = { which = has_pirate_01 value = 1 }
			# 	}
			# }
			# log="create starbase_citadel"
			create_starbase = {
				size = "starbase_citadel"
				# module = "shipyard"
				# module = "shipyard"
				# module = "shipyard"
				# module = "gun_battery"
				# module = "missile_battery"
				# building = "crew_quarters"
				# building = "target_uplink_computer"
				# building = "defense_grid"
				owner = event_target:raider_khanate
				effect = {
					starbase_event = { id = khan.302 days = 2 } # workaround
					while = {
						count = 6
						create_ship = {
							name = random
							design = "NAME_Warrior_Freehold"
						}
					}
				}
			}
			# starbase = {
			# 	set_starbase_size = starbase_citadel
			# 	starbase_event = { id = khan.302 days = 2 } # workaround
			# }
		}
		closest_system = {
			limit = {
				has_star_flag = marauder_system
				exists = starbase
				starbase = {
					OR = {
						has_starbase_size < starbase_starfortress
						NOR = { has_starbase_size = starbase_citadel has_starbase_size = starbase_marauder }
					}
				}
			}
			max_steps = 4
			create_starbase = {
				size = starbase_starfortress
				owner = event_target:raider_khanate
				# module = shipyard
				# module = missile_battery
				# building = defense_grid
				effect = {
					starbase_event = { id = khan.302 days = 2 } # workaround
				}
			}
		}
	}
}

# Upgrate starbase
starbase_event = {
	id = khan.302
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_starbase_module = {	slot = 0 module = "shipyard" }
		set_starbase_module = {	slot = 1 module = "shipyard" }
		set_starbase_module = {	slot = 2 module = "shipyard" }
		set_starbase_module = {	slot = 3 module = "gun_battery" }
		set_starbase_module = {	slot = 4 module = "gun_battery" }
		set_starbase_module = {	slot = 5 module = "missile_battery" }
		set_starbase_building = { slot = 0 building = "crew_quarters" }
		set_starbase_building = { slot = 1 building = "resource_silo" }
		set_starbase_building = { slot = 2 building = "listening_post" }
		set_starbase_building = { slot = 3 building = "target_uplink_computer" }
		while = {
			count = 4
			create_ship = {
				name = random
				design = "NAME_Warrior_Freehold"
			}
		}
		fleet = {
			every_owned_ship = { reduce_hp_percent = 98 }
		}
		# fleet = {
		# 	every_owned_ship = { set_disable_at_health = -1 } # needed as they get not conquered
		# }
		# owner = {
		# 	if = {
		# 		limit = { check_variable = { which = has_pirate_01 value = 1 } }
		# 		set_graphical_culture = "pirate_01"
		# 		clear_variable = has_pirate_01
		# 	} else = { set_graphical_culture = "madd_01" }
		# }
	}
}

# Get marauder_species
country_event = {
	id = khan.303
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_owned_species = {
			limit = {
				species_can_be_necrophaged = yes
				NOT = { is_archetype = LITHOID }
			}
			weights = {
				base = 1
				modifier = { add = 1 prev = { count_owned_pop = { count > 5 limit = { is_same_species = prevprev } } } }
				modifier = { add = 2 prev = { count_owned_pop = { count > 10 limit = { is_same_species = prevprev } } } }
				modifier = { add = 3 prev = { count_owned_pop = { count > 17 limit = { is_same_species = prevprev } } } }
				modifier = { add = 3 is_same_species = root.owner_species }
				modifier = { add = 2 prev = { capital_scope = { habitability = { who = PREV value > 0.6 } } } }
				modifier = {
					add = 4
					root = { any_owned_planet = {
						is_homeworld = yes
						is_same_value = prevprev.home_planet
					} }
				}
			}
			save_event_target_as = marauder_species
		}
		if = { # legacy
			limit = { NOT = { exists = event_target:marauder_species } }
			owner_species = { save_event_target_as = marauder_species }
		}
	}
}

# This = Ship
# From = Disabler Ship
# on_disabled Marauder starbase (HIDDEN)
ship_event = {
	id = khan.304
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ship_class = shipclass_starbase
		exists = owner
		owner = { is_country_type = awakened_marauders }
		NOT = {
			is_ship_size = starbase_marauder
			# solar_system = {
			# 	any_fleet_in_system = {
			# 		NOT = { is_owned_by = root.owner }
			# 		is_ship_class = shipclass_starbase
			# 	}
			# }
		}
	}
	immediate = {
		fleet = { every_owned_ship = { set_disable_at_health = -1 destroy_ship = this } }
		destroy_fleet = fleet

		# if = {
		# 	limit = {
		# 		NOT = {
		# 			solar_system = {
		# 				any_fleet_in_system = {
		# 					owner = { is_hostile = event_target:marauder_starbase_owner }
		# 				}
		# 			}
		# 		}
		# 	}
		# owner = { save_event_target_as = marauder_starbase_owner }
		# solar_system = {
		#	create_marauder_starbase = yes
		# last_created_fleet = {
		# 	random_owned_ship = { reduce_hp_percent = 98 set_disabled = no }
		# }
	}
}

# on_enabled Marauder station - destroy (HIDDEN)
ship_event = {
	id = khan.305
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ship_class = shipclass_starbase
		exists = owner
		owner = { is_country_type = awakened_marauders }
		NOT = {
			is_ship_size = starbase_marauder
			# solar_system = {
			# 	any_fleet_in_system = {
			# 		NOT = { is_owned_by = root.owner }
			# 		is_ship_class = shipclass_starbase
			# 	}
			# }
		}
	}
	immediate = {
		# fleet = { every_owned_ship = { set_disable_at_health = -1 set_disabled = no } }
		if = {
			limit = {
				solar_system = {
					NOT = {
						any_fleet_in_system = {
							NOT = { is_same_value = root.fleet }
							is_owned_by = root.owner
						}
					}
					any_fleet_in_system = {
						NOT = { is_owned_by = root.owner }
						owner = { is_hostile = root.owner }
					}
				}
			}
			fleet = { every_owned_ship = { destroy_ship = this } }
			destroy_fleet = fleet
		}
	}
}

### Check / Create (fallback) marauder_rally_point
country_event = {
	id = khan.306
	hide_window = yes
	is_triggered_only = yes
	# trigger = {}
	immediate = {
		if = {
			limit = {
				exists = event_target:marauder_rally_point
				event_target:marauder_rally_point = {
					OR = { has_owner = no is_owned_by = ROOT is_controlled_by = ROOT }
					solar_system = {
						OR = { has_owner = no is_owned_by = ROOT }
						NAND = {
							exists = starbase
							starbase = { has_starbase_size = starbase_citadel }
						}
						NOT = { any_fleet_in_system = {
							OR = {
								is_in_combat = yes
								owner = { is_hostile = root }
							}
						} }
					}
				}
			}
			event_target:marauder_rally_point = {
				solar_system = { system_event = { id = khan.301 } }
			}
		} else_if = {
			limit = {
				NOR = {
					exists = event_target:marauder_rally_point
					exists = event_target:marauder_rally_point.solar_system.owner
					event_target:marauder_rally_point.solar_system = { is_owned_by = ROOT }
				}
			}
			random_system_within_border = {
				limit = {
					exists = starbase
					any_system_planet = { is_star = no }
				}
				weights = {
					base = 1
					modifier = { add = 1 starbase = { has_starbase_size >= starbase_starhold } }
					modifier = { add = 1 any_system_planet = { is_colony = yes is_owned_by = ROOT } }
					modifier = { add = 1 any_system_planet = { has_planet_flag = marauder_rally_point } }
					modifier = { add = 1 any_system_planet = { has_planet_flag = CmtFlagMarauderExpRallyPoint } }
					modifier = { add = 1 CmtTriggerMarauderCapitalSystem = yes }
					modifier = { add = 1 is_capital_system = yes }
				}
				random_system_planet = {
					limit = { is_star = no }
					weights = {
						base = 1
						modifier = { add = 1 has_planet_flag = raid_source }
						modifier = { add = 1 is_colony = yes }
						modifier = { add = 1 is_capital = yes }
					}
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
				system_event = { id = khan.301 }
			}
		}
	}
}

### Drums of War - Khan Expanding War (Cycle) on_action yearly/on_becoming_subject MTTH 360
# This = Khan / subject
country_event = {
	id = khan.529
	hide_window = yes
	is_triggered_only = yes
	# From = subject's overlord (on_becoming_subject)
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		exists = event_target:raider_khanate # CmtTriggerExistKhanCountry = yes
		OR = {
			AND = {
				exists = FROM
				is_subject = yes
				FROM = { is_overlord_to = ROOT }
				NOT = { has_country_flag = rebellion_cooldown }
			}
			is_same_empire = event_target:raider_khanate # CmtTriggerIsKhanCountry = yes
		}
	}

	immediate = {
		if = {
			limit = {
				is_subject = yes
				# is_same_empire = event_target:new_satrapy
				overlord = {
					any_subject = {
						has_country_flag = rebellion_cooldown
					}
				}
			}
			break = yes
		}

		event_target:raider_khanate = {
			if = {
				limit = {
					any_playable_country = {
						has_communications = PREV
						CmtTriggerIsPlayableEmpire = yes
						NOR = {
							has_truce = PREV
							PREV = { is_overlord_to = PREV }
							is_at_war_with = PREV
							is_same_empire = PREV
						}
					}
				}
				random_neighbor_country = {
					limit = {
						CmtTriggerIsPlayableEmpire = yes
						NOR = {
							has_truce = PREV
							PREV = { is_overlord_to = PREV }
							is_at_war_with = PREV
							is_same_empire = PREV
						}
					}
					weights = {
						base = 1
						modifier = { add = 3 relative_power = { who = PREV category = fleet value < equivalent } }
						modifier = { add = 1 relative_power = { who = PREV category = fleet value = equivalent } }
						modifier = { add = 3 opinion_level = { who = PREV level < neutral } }
						modifier = { add = 1 opinion_level = { who = PREV level = neutral } }
						modifier = { add = 2 has_federation = no }
					}
					# set_faction_hostility = {
					# 	target = PREV
					# 	set_hostile = yes
					# }
					PREV = {
						declare_war = {
							target = PREV
							name = "NAME_Expansion"
							attacker_war_goal = "wg_great_expansion"
						}
						# set_faction_hostility = {
						# 	target = PREV
						# 	set_hostile = yes
						# }
					}
					if = {
						limit = { has_origin = "origin_khan_successor" }
						change_variable = { which = "planets_lost_to_marauder" value = 3 }
					}
				}
				# expand over the border?
				# if = {
				# 	limit = {
				# 		count_war = { count < 6 }
				# 		# every_war = {
				# 		# 	limit = { count_war_participants = { limit = { <triggers> } side = defender count < 4
				# 		# }
				# 	}
				# 	random_country = {
				# 		limit = {
				# 			has_communications = PREV
				# 			CmtTriggerIsPlayableEmpire = yes
				# 			NOR = {
				# 				PREV = { is_overlord_to = PREV }
				# 				is_at_war_with = PREV
				# 				is_same_empire = PREV
				# 			}
				# 		}
				# 		weights = {
				# 			base = 1
				# 			modifier = { add = 3 relative_power = { who = PREV category = fleet value < equivalent } }
				# 			modifier = { add = 1 relative_power = { who = PREV category = fleet value = equivalent } }
				# 			modifier = { add = 3 opinion_level = { who = PREV level < neutral } }
				# 			modifier = { add = 1 opinion_level = { who = PREV level = neutral } }
				# 			modifier = { add = 2 has_federation = no }
				# 		}
				# 		set_faction_hostility = {
				# 			target = PREV
				# 			set_hostile = yes
				# 		}
				# 		PREV = {
				# 			declare_war = {
				# 				target = PREV
				# 				name = "NAME_Expansion"
				# 				attacker_war_goal = "wg_great_expansion"
				# 			}
				# 			set_faction_hostility = {
				# 				target = PREV
				# 				set_hostile = yes
				# 			}
				# 		}
				# 		if = {
				# 			limit = { has_origin = "origin_khan_successor" }
				# 			change_variable = { which = "planets_lost_to_marauder" value = 3 }
				# 		}
				# 	}
				# }
			}
			# country_event = { id = khan.529 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_4e } still on_action for temp savegame
		}
		# else = { country_event = { id = khan.529 days = 400 } }
	}
}

# Handover parts of marauder country for Diadochi (HIDDEN)
# via marauder.601 and marauder.609
# This = Diadochi
# From = raider_khanate
country_event = {
	id = khan.610
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		# NOR = { has_global_flag = great_khan_wins }
	}
	immediate = {
		event_target:raider_khanate = {
			if = {
				limit = { NOT = { has_global_flag = marauder_crisis_ongoing } }
				random_owned_fleet = {
					limit = {
						is_mobile = yes
						exists = leader
						exists = solar_system
						solar_system = { is_owned_by = ROOT }
						is_civilian = no any_owned_ship = { is_ship_class = shipclass_military }
					}
					weights = {
						base = 1
						# modifier = { add = 1 num_ships > 5 }
						# modifier = { add = 2 num_ships > 10 }
						# modifier = { add = 3 num_ships > 20 }
						modifier = { add = 1 fleet_power > 5500 }
						modifier = { add = 2 fleet_power > 11000 }
						modifier = { add = 3 fleet_power > 22000 }
					}
					set_owner = ROOT
					leader = { set_owner = ROOT }
				}
			}
			random_owned_fleet = {
				limit = { is_mobile = yes exists = leader }
				set_owner = ROOT
				leader = { set_owner = ROOT } # recruit leader
				if = {
					limit = { NOT = { is_ship_class = shipclass_transport } }
					assign_leader = leader
				}
				fleet_event = { id = khan.611 days = -1 }
			}
			PREV = {
				add_resource = {
					minerals = 20000
					energy = 20000
					alloys = 20000
					consumer_goods = 20000
					food = 20000
					influence = 1000
				}
				copy_techs_from = { target = PREV }
				if = {
					limit = { PREV = { num_owned_relics > 0 } }
					steal_relic = { target = PREV relic = random }
				}
				add_100_unity_per_year_passed = yes

				# Normalize Starbases
				every_owned_starbase = {
					limit = { has_starbase_size = starbase_marauder } # maybe all?
					set_starbase_size = starbase_outpost
				}
				random_system_within_border = {
					limit = { CmtTriggerMarauderCapitalSystem = yes }
					system_event = { id = khan.301 }
				}
				while = {
					limit = {
						any_owned_starbase = { has_starbase_size < starbase_starhold }
					}
					count = 2
					random_owned_starbase = {
						limit = { has_starbase_size < starbase_starhold }
						set_starbase_size = starbase_starhold
						starbase_event = { id = khan.302 days = 2 }
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = ROOT
				}
			}
			# Survey Rest of Horde's Space
			ROOT = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = ROOT
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = { owner = ROOT }
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = { owner = ROOT }
			}
			# Take all old leaders!?
			random_owned_leader = {
				limit = { leader_class = scientist }
				set_owner = ROOT
			}
			country_event = { id = game_start.6 days = 6 random = 4 } # advanced_empire
			country_event = { id = game_start.9 days = 12 random = 8 } # empire_init_create_ships civil
			create_fleet_from_naval_cap = 0.2
			### Units
			create_ship_design = { design = "NAME_Pirate_Transport" }
			add_ship_design = last_created_design
			create_ship_design = { design = "NAME_Clan_Builder" }
			add_ship_design = last_created_design
			create_ship_design = { design = "NAME_Outrider" }
			add_ship_design = last_created_design
			### Dynamic Empire fleet_power
			set_variable = { which = "successor_fleet_power" value = 40000 }
			# Store each fleet_power to var
			every_playable_country = {
				limit = {
					NOT = { is_variable_set = "successor_fleet_power" }
					fleet_power > 40000
				}
				if = {
					limit = {
						any_owned_planet = { has_planet_flag = fallen_empire_world }
					}
					set_variable = { which = "successor_fleet_power" value = 220000 }
				} else = {
					export_trigger_value_to_variable = {
						trigger = fleet_power variable = "successor_fleet_power"
					}
				}
			}
			random_owned_planet = {
				limit = { solar_system = { exists = starbase } }
				weights = {
					base = 1
					modifier = { add = 1 is_colony = yes }
					modifier = { add = 2 is_capital = yes }
					modifier = { add = 3 solar_system = { is_potential_diadochi_system = no } }
				}
				prev = {
					# CmtEffectCreateFleet_KhanStandard = yes
					while = {
						count = 2
						CmtEffectCreateFleet_KhanArmy = yes
						CmtEffectCreateFleet_KhanConstructor = yes
					}
				}
				# save_event_target_as = unit_spawn_point
				# event_target:unit_spawn_point = {
				while = {
					count = 5
					limit = {
						any_playable_country = {
							is_variable_set = "successor_fleet_power"
							check_variable = {
								which = "successor_fleet_power"
								value = { scope = prevprev variable > "successor_fleet_power" }
							}
						}
					}
					# own old to get the right design!?
					prev = {
						change_variable = { which = "successor_fleet_power" value = 20000 }
						CmtEffectCreateFleet_KhanStandard = { DIADOCHI = yes }
					}
					last_created_leader = { set_owner = ROOT }
					last_created_fleet = { set_owner = ROOT assign_leader = last_created_leader }
				}
			}
			# Establish Communications
			every_country = {
				limit = {
					OR = {
						has_communications = PREV
						has_government = gov_diadochi
					}
				}
				establish_communications_no_message = ROOT
			}
		}

		# # event_target:second_diadochi_origin
		# random_owned_planet = {
		# 	prev = { CmtEffectCreateAdmiral_MarauderStandard = yes }
		# 	create_fleet = {
		# 		effect = {
		# 			set_owner = event_target:raider_khanate
		# 			if = {
		# 				limit = { has_global_flag = expanded_spaceborne_installed }
		# 				create_dyn_marauder_fleet = { OUTRIDER = 32 LANCER = 16 CHAMPION = 12 }
		# 			} else = {
		# 				create_dyn_marauder_fleet = { OUTRIDER = 16 LANCER = 8 }
		# 			}
		# 			set_location = {
		# 				target = prev
		# 				distance = 45
		# 				angle = random
		# 			}
		# 		}
		# 		settings = {
		# 			uses_naval_capacity = no
		# 		}
		# 	}
		# }
		# # last_created_leader = { set_owner = prev }
		# last_created_fleet = { set_owner = prev assign_leader = last_created_leader }
	}
}

# Back to the fold
# via marauder.610, 609, 604, 505, 77
fleet_event = {
	id = khan.611
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = solar_system
		# is_civilian = no
		is_mobile = yes
		any_owned_ship = {
			OR = {
				is_ship_class = shipclass_military
				is_ship_class = shipclass_transport
			}
		}
		# NOT = { is_within_borders_of = ROOT.owner }
	}
	immediate = {
		solar_system = {
			if = {
				limit = {
					NAND = {
						has_owner = yes # exists = space_owner
						exists = starbase
						is_owned_by = ROOT.owner # space_owner = { is_same_empire = ROOT.owner }
					}
				}
				prev = {
					if = { limit = { exists = event_target:marauder_rally_point }
						if = {
							limit = {
								OR = {
									is_in_combat = yes
									has_fleet_order = merge_fleet_order
									has_fleet_order = land_armies_order
								}
							}
							log="auto_move_to_planet [This.GetName]"
							auto_move_to_planet = { target = event_target:marauder_rally_point clear_auto_move_on_arrival = yes }
						} else = {
							remove_auto_move_target = yes
							clear_fleet_actions = this
							log="set_mia [This.GetName]"
							set_mia = yes
						}
					} else = {
						log="order_forced_return [This.GetName]"
						order_forced_return = yes
					}
				}
			}
		}
	}
}

# # The New Galactic Horde (Satrapy)
# country_event = {
# 	id = khan.660
# 	title = "marauder.660.name"
# 	desc = "marauder.660.desc"
# 	picture = GFX_evt_arguing_senate
# 	show_sound = event_conversation
# 	is_triggered_only = yes
# 	option = {
# 		name = marauder.660.a
# 		ai_chance = { factor = 100 }
# 		join_alliance = {
# 			who = event_target:new_khanate
# 			name = NAME_Galactic_Horde
# 			override_requirements = yes
# 		}
# 	}
# 	option = { name = marauder.660.b }
# }

# Uprising fabricator_satrapy
country_event = {
	id = khan.751
	title = "greatkhan_diplo_header"
	desc = marauder_fabricator_threat
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_fabricator_disloyal
		sound = no_tut_advior_02
		response_text = khan.751.a.response
		set_subject_of = { who = none }
		hidden_effect = {
			set_country_flag = rebelling_satrapy
			remove_modifier = "satrapy_of_horde"
			set_variable = { which = "planets_lost_to_marauder" value = 1 }
			set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }

			if = {
				limit = { is_ai = yes }
				event_target:raider_khanate = {
					random_owned_fleet = {
						limit = {
							has_fleet_flag = satrapy_garrison
							solar_system = { is_owned_by = ROOT }
						}
						destroy_fleet = this
					}
					random_owned_fleet = {
						limit = {
							has_fleet_flag = satrapy_garrison_fleet
							solar_system = { is_owned_by = ROOT }
						}
						set_owner = ROOT
						if = {
							limit = { exists = leader }
							leader = { set_owner = ROOT }
						}
					}
				}
			}

			declare_war = {
				target = event_target:raider_khanate
				name = "NAME_Rebellion"
				attacker_war_goal = "wg_independence"
			}
			set_faction_hostility = {
				target = event_target:raider_khanate
				set_hostile = yes
			}
			event_target:raider_khanate = {
				add_opinion_modifier = {
					modifier = opinion_traitor_to_empire
					who = prev
				}
				set_faction_hostility = {
					target = ROOT
					set_hostile = yes
				}
			}
		}
		ai_chance = { factor = 2 }
	}
	option = {
		name = marauder_fabricator_loyal
		# sound = no_tut_advior_07
		response_text = marauder.554.b.response
		ai_chance = { factor = 0 }
	}
}

# fabricator_satrapy (Reinforcement Cycle)
country_event = {
	id = khan.798
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = rebelling_satrapy }
		is_subject = yes
		is_subject_type = fabricator_satrapy
	}
	immediate = {
		create_fleet = {
			name = "NAME_Thalassocracy_fleet"
			effect = {
				set_owner = event_target:raider_khanate
				while = {
					count = 2
					while = {
						count = 11
						CmtEffectCreateShip_Outrider = yes
					}
					while = {
						count = 7
						CmtEffectCreateShip_Lancer = yes
					}
					while = {
						count = 4
						CmtEffectCreateShip_VoidChampion = yes
					}
				}
				set_formation_scale = 2
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 250
				set_location = {
					target = ROOT.capital_scope
					distance = 20
					angle = random
				}
			}
		}
		capital_scope = {
			create_fleet = {
				effect = {
					set_owner = prev
					random_list = {
						99 = {
							while = { count = 2 CmtEffectCreateShip_KhanArmy = { TYPE = "machine_assault_3" } }
							modifier = {
								factor = 0
								prev = {
									NOR = {
										has_authority = auth_machine_intelligence
										has_technology = tech_biomechanics
									}
								}
							}
						}
						80 = {
							while = { count = 2 CmtEffectCreateShip_KhanArmy = { TYPE = "gene_warrior_army" } }
							modifier = {
								factor = 0
								prev = {
									OR = {
										has_authority = auth_machine_intelligence
										NOT = { has_technology = tech_gene_seed_purification }
									}
								}
							}
						}
						60 = {
							while = { count = 3 CmtEffectCreateShip_KhanArmy = { TYPE = "psionic_army" } }
							modifier = {
								factor = 0
								prev = {
									OR = {
										has_authority = auth_machine_intelligence
										NOT = { has_technology = tech_telepathy }
									}
								}
							}
						}
						50 = {
							while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "machine_assault_2" } }
							modifier = {
								factor = 0
								prev = {
									NOR = {
										has_authority = auth_machine_intelligence
										has_technology = tech_adaptive_combat_algorithms
									}
								}
							}
						}
						30 = {
							while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "clone_army" } }
							modifier = {
								factor = 0
								prev = {
									OR = {
										has_authority = auth_machine_intelligence
										NOT = { has_technology = tech_gene_banks }
									}
								}
							}
						}
						# 2 = {
						# 	while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "slave_army" } }
						# 	modifier = {
						# 		factor = 0
						# 		prev = {
						# 			OR = {
						# 				has_authority = auth_machine_intelligence
						# 				NOT = { has_policy_flag = slavery_allowed }
						# 				NOT = { has_technology = tech_neural_implants }
						# 			}
						# 		}
						# 	}
						# }
						# 1 = { while = { count = 5 CmtEffectCreateShip_KhanArmy = yes } }
					}
					set_fleet_stance = evasive
					set_location = {
						target = PREV
						distance = 20
						angle = random
					}
				}
			}
		}
		# This is a crazy workaround (as scope ship/fleet to army is not working - as documented?)
		last_created_fleet = {
			if = {
				limit = {
					last_created_army = {
						exists = fleet
						fleet = { is_same_value = PREVPREV }
					}
				}
				ROOT = {
					every_owned_army = {
						limit = {
							exists = fleet
							fleet = { is_same_value = PREVPREVPREV }
						}
						set_owner = event_target:raider_khanate
					}
				}
				set_owner = event_target:raider_khanate
			}
		}
		country_event = { id = khan.798 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
	}
}

# Submit as fabricator_satrapy
country_event = {
	id = khan.799
	title = "greatkhan_diplo_header"
	desc = marauder_fabricator_offer
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_fabricator_deal_accept
		custom_tooltip = "SUBJECT_DESC_fabricator_satrapy"
		sound = placeholder_sfx
		response_text = marauder_fabricator_good
		country_event = { id = marauder.559 } # Pre-Submit to Khan
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = fabricator_satrapy
		}
		hidden_effect = {
			country_event = { id = khan.798 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
		}
		ai_chance = { factor = 5 }
	}
	option = {
		name = marauder_fabricator_deal_refuse
		# sound = no_tut_advior_07
		response_text = marauder_deal_refuse
		ai_chance = { factor = 0 }
	}
}

# DEPRECATED now marauder.520
# Reinforcement Cycle: Need a flag to determine if the horde has a machinesmith, and if, then set this as the new
# This = Marauder
country_event = {
	id = khan.868
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		CmtTriggerIsKhanCountry = yes
		# has_country_flag = has_machinesmith
	}
	immediate = {
		country_event = { id = khan.306 } # Create fallback rally_point
		create_marauder_constructors = yes
		if = {
			limit = { num_armies < 40 }
			create_marauder_armies = yes
		}
		if = {
			limit = {
				OR = {
					NOT = { exists = event_target:marauder_rally_point }
					fleet_power > 300000
				}
			}
			country_event = { id = khan.868 days = 180 }
			break = yes
		}
		country_event = { id = khan.299 } # end check
		if = {
			limit = { has_country_flag = has_machinesmith }
			event_target:marauder_rally_point = {
				create_fleet = {
					effect = {
						set_owner = ROOT
						while = {
							count = 2
							while = {
								count = 10
								create_ship = {
									name = random
									design = "NAME_Outrider_4"
									# graphical_culture = ROOT
								}
							}
							while = {
								count = 5
								create_ship = {
									name = random
									design = "NAME_Lancer_4"
									# graphical_culture = ROOT
								}
							}
							while = {
								count = 3
								create_ship = {
									name = random
									design = "NAME_Void_Champion_4"
									# graphical_culture = ROOT
								}
							}
							while = {
								count = 1
								create_ship = {
									name = random
									design = "NAME_Ancestral_Glory_4"
									# graphical_culture = ROOT
								}
							}
						}
						set_location = {
							target = PREV
							distance = 20
							angle = random
						}
						set_aggro_range = 500
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
					}
				}
			}
			random_subject = {
				limit = {
					is_subject_type = machinesmith
					NOT = { has_country_flag = rebelling_satrapy }
				}
				ROOT = {
					if = {
						limit = { can_copy_random_tech_from = { who = PREV } }
						copy_random_tech_from = { who = PREV }
					}
				}
				log = "machinesmith sold"
				country_event = { id = khan.868 days = 180 } # Improved cycle
				break = yes
			}
			remove_country_flag = has_machinesmith # Regular cycle
			country_event = { id = marauder.520 days = 220 }
		} else = {
			country_event = { id = marauder.520 days = 96 }
		}
	}
}

# DEPRECATED (now khan.870)
# Don't start a second cycle as this could lead to uncontrollable loops!?
# great_khan has won (End-Game Regular Reinforcement Cycle)
# This = Marauder
country_event = {
	id = khan.869
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		has_global_flag = great_khan_wins
	}
	immediate = {
		if = {
			limit = { has_country_flag = has_machinesmith }
			country_event = { id = khan.870 } # Improved Reinforcement
		} else = {
			if = {
				limit = { # Make sure home system still owned
					any_planet_within_border = { has_planet_flag = marauder_rally_point }
				}
				create_marauder_constructors = yes
				if = {
					limit = { num_armies < 50 }
					create_marauder_armies = yes
				}
				# If at fleet cap, check again later
				if = {
					limit = { fleet_power < 450000 }
					# create_marauder_fleet = yes
					event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanReinforcement = yes }
				}
			}
			# country_event = { id = khan.869 days = 340 }
			country_event = { id = khan.870 days = 180 }
		}
	}
}

### Great Khan has won (End-Game - Improved Reinforcement Cycle)
# This = Marauder
country_event = {
	id = khan.870
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		CmtTriggerIsKhanCountry = yes
		OR = {
			has_country_flag = has_machinesmith
			has_global_flag = great_khan_wins
		}
	}
	immediate = {
		country_event = { id = khan.306 } # Create fallback rally_point
		# log="khan.870 Cycle"
		if = {
			limit = {
				OR = {
					NOT = { exists = event_target:marauder_rally_point }
					fleet_power > 550000
				}
			}
			country_event = { id = khan.870 days = 180 }
			break = yes
		}
		create_marauder_constructors = yes
		if = { limit = { num_armies < 50 }
			create_marauder_armies = yes
		}
		if = {
			limit = { fleet_power < 400000 }
			if = { # at fleet cap, check again later
				limit = {  has_country_flag = has_machinesmith }
				event_target:marauder_rally_point = {
					create_fleet = {
						effect = {
							set_owner = ROOT
							while = {
								count = 20
								create_ship = {
									name = random
									design = "NAME_Outrider_4"
									# graphical_culture = ROOT
								}
							}
							while = {
								count = 10
								create_ship = {
									name = random
									design = "NAME_Lancer_4"
									# graphical_culture = ROOT
								}
							}
							while = {
								count = 5
								create_ship = {
									name = random
									design = "NAME_Void_Champion_4"
									# graphical_culture = ROOT
								}
							}
							while = {
								count = 2
								create_ship = {
									name = random
									design = "NAME_Ancestral_Glory_4"
									# graphical_culture = ROOT
								}
							}
							set_location = {
								target = PREV
								distance = 20
								angle = random
							}
							set_aggro_range = 500
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
						}
					}
				}
				### Share knowledge with Horde;
				every_subject = {
					limit = {
						NOR = {
							has_country_flag = rebellion_cooldown
							has_country_flag = rebelling_satrapy
						}
						can_copy_random_tech_from = { who = PREV }
					}
					copy_random_tech_from = { who = PREV }
					ROOT = {
						if = {
							limit = { can_copy_random_tech_from = { who = PREV } }
							copy_random_tech_from = { who = PREV }
						}
					}
				}
			} else = { # _if = { limit = { fleet_power < 400000 }
				CmtEffectKhanReinforceOnCapital = yes
			}
		} else = { # _if = { limit = { fleet_power < 550000 }
			CmtEffectKhanReinforceOnCapital = yes
		}
		# Force to war
		if = {
			limit = {
				has_global_flag = war_in_heaven_ongoing
 				root = { is_at_war = yes }
			}
			random_subject = {
				limit = {
					NOR = {
						# is_subject_type = machinesmith
						# is_subject_type = fabricator_satrapy
						has_country_flag = rebellion_cooldown
						has_country_flag = rebelling_satrapy
						is_at_war = yes
					}
				}
				join_war = root
			}
		}

		### Check machinesmith;
		random_subject = {
			limit = {
				is_subject_type = machinesmith
				NOR = {
					has_country_flag = rebellion_cooldown
					has_country_flag = rebelling_satrapy
				}
			}
			ROOT = {
				if = {
					limit = { can_copy_random_tech_from = { who = PREV } }
					copy_random_tech_from = { who = PREV }
				}
			}
			log = "Improved Machinesmith sold"
			country_event = { id = khan.870 days = 180 } # Improved cycle
			break = yes
		}
		remove_country_flag = has_machinesmith # Regular cycle
		country_event = { id = khan.870 days = 180 }
	}
}

# Submit as machinesmith (vanilla = marauder.551)
country_event = {
	id = khan.997
	title = "greatkhan_diplo_header"
	desc = marauder_deal_offer
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	diplomatic = yes
	force_open = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_deal_response
		custom_tooltip = "SUBJECT_DESC_machinesmith"
		# sound = placeholder_sfx
		trigger = { has_been_declared_crisis = no }
		response_text = marauder_deal_accept
		country_event = { id = marauder.559 } # Pre-Submit to Khan
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = machinesmith
		}
		hidden_effect = {
			event_target:raider_khanate = {
				set_country_flag = has_machinesmith
				# country_event = { id = khan.868 } # (New Reinforcement Cycle)
			}
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_mass_drivers_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_lasers_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_ship_armor_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_shields_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_starbase_5 } # Citadel
		}
		ai_chance = { factor = 5 }
	}
	option = {
		name = marauder_deal_bad_response
		# sound = no_tut_advior_07
		response_text = marauder_deal_refuse
		ai_chance = { factor = 0 }
	}
}

# Special Submit?
country_event = {
	id = khan.998
	title = "greatkhan_diplo_header"
	desc = marauder_deal
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	diplomatic = yes
	force_open = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_deal_reason
		custom_tooltip = "SUBJECT_DESC_machinesmith"
		# sound = placeholder_sfx
		trigger = {
			has_technology = tech_mass_drivers_4
			has_technology = tech_lasers_4
			has_technology = tech_ship_armor_4
			has_technology = tech_shields_4
		}
		hidden_effect = {
			country_event = { id = khan.997 }
		}
		ai_chance = { factor = 5 }
	}
	option = {
		name = marauder_fabricator_deal_reason
		custom_tooltip = "SUBJECT_DESC_fabricator_satrapy"
		# sound = placeholder_sfx
		trigger = {
			has_monthly_income = {
				resource = alloys
				value > 100
			}
		}
		hidden_effect = {
			country_event = { id = khan.799 }
		}
	}
}

### Great Khan Spawn Settings
# country_event = {
# 	id = khan.999
# 	is_triggered_only = yes
# 	title = "khan.999.name"
# 	desc = "khan.999.desc"
# 	picture = GFX_evt_khan_throne_room
# 	option = {
# 		name = force_khan_option
# 		exclusive_trigger = {
# 			# NOT = { has_global_flag = force_khan }
# 			event_target:CmtGlobalVar = {
# 				check_variable = { which = CmtVarKhanTriggerProbability value < 5 }
# 			}
# 		}
# 		hidden_effect = {
# 			# set_global_flag = force_khan
# 			event_target:CmtGlobalVar = {
# 				set_variable = { which = CmtVarKhanTriggerProbability value = 5 }
# 			}
# 		}
# 	}
# 	option = {
# 		name = normal_khan
# 		exclusive_trigger = {
# 			# has_global_flag = force_khan
# 			event_target:CmtGlobalVar = {
# 				check_variable = { which = CmtVarKhanTriggerProbability value = 5 }
# 			}
# 		}
# 		hidden_effect = {
# 			# remove_global_flag = force_khan
# 			event_target:CmtGlobalVar = {
# 				set_variable = { which = CmtVarKhanTriggerProbability value = 2 }
# 			}
# 		}
# 	}
# }
