namespace = marauder

############################################
############################################
#####             Marauder             #####
#####    Khan (Horde Crisis) Events    #####
#####    Vanilla by Henrik Thyrwall    #####
#####    Replaced by Crisis Manager    #####
#####                                  #####
############################################
############################################
#
# Check all events: has_country_flag = marauder_x (x = 1 - 3)
#

###################
###  Constants  ###
###################

### Critical (Lifespan of Khan, debug code)
@CmtConstKhanLifespan_1a =     1		### Minimun Lifespan / day
@CmtConstKhanLifespan_1b =  0.025		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_1c =    35		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_1d =     5		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_1e =     8		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_1f =     4		### Time-Lag of Post-Death Process (random = 1f)

### Fleeting (Lifespan of Khan)
@CmtConstKhanLifespan_2a =  4320		### Minimun Lifespan / day
@CmtConstKhanLifespan_2b =  0.75		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_2c =  7200		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_2d =  2880		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_2e =    90		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_2f =    60		### Time-Lag of Post-Death Process (random = 1f)

### Standard (Lifespan of Khan)
@CmtConstKhanLifespan_3a =  7200		### Minimun Lifespan / day
@CmtConstKhanLifespan_3b =  1.00		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_3c = 10800		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_3d =  5000		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_3e =   200		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_3f =   100		### Time-Lag of Post-Death Process (random = 1f)

### Enduring (Lifespan of Khan)
@CmtConstKhanLifespan_4a = 10800		### Minimun Lifespan / day
@CmtConstKhanLifespan_4b =  3.00		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_4c = 16200		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_4d =  5400		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_4e =   270		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_4f =   180		### Time-Lag of Post-Death Process (random = 1f)

### Venerable (Lifespan of Khan)
@CmtConstKhanLifespan_5a = 18000		### Minimun Lifespan / day
@CmtConstKhanLifespan_5b =  5.00		### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_5c = 27000		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_5d =  9000		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_5e =   360		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_5f =   360		### Time-Lag of Post-Death Process (random = 1f)

### Immortality (Lifespan of Khan): Directly Written in Event/Effect
@CmtConstKhanLifespan_6e =   360		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_6f =   360		### Time-Lag of Post-Death Process (random = 1f)


### Mercenaries Leave (join the Great Khan)
# Scope = recruiter
country_event = {
	id = marauder.77
	title = "marauder.77.name"
	desc = "marauder.77.desc"
	picture = GFX_evt_pirate_armada
	show_sound = event_radio_chatter

	is_triggered_only = yes

	immediate = {
		# Marauder 1
		if = {
			limit = { has_country_flag = CmtFlagHiringMarauder1 }
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet1 = yes }
				leader = {
					remove_leader_flag = marauder_merc_leader
					# kill_leader = { show_notification = no }
					set_owner = event_target:raider_khanate
				}
				set_mia = yes
				# delete_fleet = this
				set_owner = event_target:raider_khanate
				set_mia = yes
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_1 }
				# kill_leader = { show_notification = no }
				set_owner = event_target:raider_khanate
			}
			remove_country_flag = CmtFlagHiringMarauder1
			if = { # All Marauders unified
				limit = {
					event_target:CmtGlobalVar = {
						check_variable = { which = CmtVarKhanMultiple value < 5 }
					}
				}
				break = yes
			}
		}
		# Marauder 2
		if = {
			limit = { has_country_flag = CmtFlagHiringMarauder2 }
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet2 = yes }
				leader = {
					remove_leader_flag = marauder_merc_leader
					# kill_leader = { show_notification = no }
					set_owner = event_target:raider_khanate
				}
				# delete_fleet = this
				set_mia = yes
				set_owner = event_target:raider_khanate
				set_mia = yes
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_2 }
				# kill_leader = { show_notification = no }
				set_owner = event_target:raider_khanate
			}
			remove_country_flag = CmtFlagHiringMarauder2
			if = { # All Marauders unified
				limit = {
					event_target:CmtGlobalVar = {
						check_variable = { which = CmtVarKhanMultiple value < 5 }
					}
				}
				break = yes
			}
		}
		# Marauder 3
		if = {
			limit = { has_country_flag = CmtFlagHiringMarauder3 }
			every_owned_fleet = {
				limit = { CmtTriggerHiredMarauderFleet3 = yes }
				leader = {
					remove_leader_flag = marauder_merc_leader
					# kill_leader = { show_notification = no }
					set_owner = event_target:raider_khanate
				}
				# delete_fleet = this
				set_mia = yes
				set_owner = event_target:raider_khanate
				set_mia = yes
			}
			every_owned_leader = {
				limit = { has_leader_flag = hired_merc_leader_3 }
				# kill_leader = { show_notification = no }
				set_owner = event_target:raider_khanate
			}
			remove_country_flag = CmtFlagHiringMarauder3
		}
	}

	option = { name = marauder.76.a }
}

########################
###  Reinforcements  ###
########################

### Mercenaries Join Great Khan (HIDDEN)
country_event = {
	id = marauder.78
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } } }
			every_planet_within_border = {
				limit = { has_planet_flag = CmtFlagMarauderExpRallyPoint }
				if = {
					limit = { is_same_value = event_target:CmtTargetMarauderRallyPoint1 }
					CmtEffectCreateAdmiralty_KhanMercenaries1 = yes
				} else_if = {
					limit = { is_same_value = event_target:CmtTargetMarauderRallyPoint2 }
					CmtEffectCreateAdmiralty_KhanMercenaries2 = yes
				} else_if = {
					limit = { is_same_value = event_target:CmtTargetMarauderRallyPoint3 }
					CmtEffectCreateAdmiralty_KhanMercenaries3 = yes
				}
			}
		} else = {
			switch = {
				trigger = has_country_flag
				marauder_1 = { event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanMercenaries1 = yes } }
				marauder_2 = { event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanMercenaries2 = yes } }
				marauder_3 = { event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanMercenaries3 = yes } }
			}
		}
	}

	after = {
		clear_global_event_target = CmtTargetMarauderRallyPoint1
		clear_global_event_target = CmtTargetMarauderRallyPoint2
		clear_global_event_target = CmtTargetMarauderRallyPoint3
	}
}

### Start Marauder pirate01 -> madd_01 Gfxculture Override
event = {
	id = marauder.99
	hide_window = yes
	is_triggered_only = yes
	# potential = {
	immediate = {
		every_country = {
			limit = {
				OR = {
					is_country_type = dormant_marauders
					is_country_type = awakened_marauders
				}
				NOT = { graphical_culture = madd_01 }
			}
			set_graphical_culture = madd_01
			## if is_designable
			# if = {
			# 	limit = { NOT = { has_existing_ship_design = "NAME_Outrider" } }
			# 	create_ship_design = { design = "NAME_Outrider" }
			# 	add_ship_design = last_created_design
			# }
			# if = {
			# 	limit = { NOT = { has_existing_ship_design = "NAME_Lancer" } }
			# 	create_ship_design = { design = "NAME_Lancer" }
			# 	add_ship_design = last_created_design
			# }
			# if = {
			# 	limit = { NOT = { has_existing_ship_design = "NAME_Void_Champion" } }
			# 	create_ship_design = { design = "NAME_Void_Champion" }
			# 	add_ship_design = last_created_design
			# }
			# if = {
			# 	limit = { NOT = { has_existing_ship_design = "NAME_Ancestral_Glory" } }
			# 	create_ship_design = { design = "NAME_Ancestral_Glory" }
			# 	add_ship_design = last_created_design
			# }
		}
	}
}

#######################################
###  Main Effect of Khan Awakening  ###
#######################################

### CRISIS BEGINS
country_event = {
	id = marauder.500
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		CmtTriggerHasPotentialKhanAwaking = yes
		CmtTriggerNowInKhanCrisis = no
	}
	# trigger = {
	# 	OR = {
	# 		AND = {
	# 			mid_game_years_passed >= 1
	# 			end_game_years_passed < 0
	# 		}
	# 		has_global_flag = horde_triggered
	# 	}
	# 	is_country_type = dormant_marauders
	# 	NOT = { has_global_flag = marauder_crisis_started }
	# 	OR = {
	# 		AND = {
	# 			has_country_flag = marauder_1
	# 			any_system_within_border = { has_star_flag = marauder_capital_1 }
	# 		}
	# 		AND = {
	# 			has_country_flag = marauder_2
	# 			any_system_within_border = { has_star_flag = marauder_capital_2 }
	# 		}
	# 		AND = {
	# 			has_country_flag = marauder_3
	# 			any_system_within_border = { has_star_flag = marauder_capital_3 }
	# 		}
	# 	}
	# }
	# mean_time_to_happen = {
	# 	years = 100
	# 	modifier = {
	# 		factor = 0.66
	# 		mid_game_years_passed >= 50
	# 	}
	# 	modifier = {
	# 		factor = 0.01
	# 		mid_game_years_passed >= 0
	# 		has_global_flag = force_khan
	# 	}
	# 	modifier = {
	# 		factor = 1.5
	# 		count_country = {
	# 			limit = { is_country_type = dormant_marauders }
	# 			count > 1
	# 		}
	# 		count_country = {
	# 			limit = { is_country_type = dormant_marauders }
	# 			count < 3
	# 		}
	# 	}
	# 	modifier = {
	# 		factor = 2
	# 		count_country = {
	# 			limit = { is_country_type = dormant_marauders }
	# 			count > 2
	# 		}
	# 	}
	# }
	immediate = {
		if = {
			limit = {
				OR = {
					exists = event_target:raider_khanate
					has_global_flag = marauder_crisis_started
				}
			}
			clear_global_event_target = raider_khanate
			clear_global_event_target = marauder_rally_point
			every_playable_country = {
				limit = { has_country_flag = rebelling_satrapy }
				remove_country_flag = rebelling_satrapy
			}
		}
		set_global_flag = marauder_crisis_started
		set_global_flag = marauder_crisis_ongoing
		save_global_event_target_as = raider_khanate
		### Rally Point of Fleets 1/3: Set Event Targets; Set Owner Species to Target
		random_country = {
			limit = { has_country_flag = marauder_1 }
			owner_species = { save_global_event_target_as = CmtTargetSpecies_Marauder1 }
			if = {
				limit = {
					any_system_within_border = { has_star_flag = marauder_capital_1 }
				}
				random_system_within_border = {
					limit = { has_star_flag = marauder_capital_1 }
					if = {
						limit = {
							any_system_planet = { has_planet_flag = raid_source }
						}
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_global_event_target_as = CmtTargetMarauderRallyPoint1
						}
					}
					else = {
						## Backup Code: raid_source NOT Found in Capital System
						random_system_planet = {
							limit = { is_star = no is_colony = yes }
							save_global_event_target_as = CmtTargetMarauderRallyPoint1
						}
						log = "Backup Code for CmtTargetMarauderRallyPoint1 - 1 Processed"
					}
					# create_starbase = {
					# 	size = starbase_citadel
					# 	module = gun_battery
					# 	module = missile_battery
					# 	building = target_uplink_computer
					# 	building = defense_grid
					# 	owner = event_target:raider_khanate
					# 	effect = {
					# 		while = {
					# 			count = 4
					# 			create_ship = {
					# 				# name = random
					# 				design = "NAME_Warrior_Freehold"
					# 			}
					# 		}
					# 	}
					# }
					starbase = {
						if = {
							limit = { has_starbase_size <= starbase_citadel }
							set_starbase_size = starbase_citadel
							set_starbase_module = { slot = 5 module = "gun_battery" }
							set_starbase_module = { slot = 6 module = "missile_battery" }
							set_starbase_building = { slot = 3 building = "target_uplink_computer" }
							set_starbase_building = { slot = 4 building = "defense_grid" }
							set_owner = event_target:raider_khanate
							while = {
								count = 4
								create_ship = {
									design = "NAME_Warrior_Freehold"
								}
							}
						}
					}
					closest_system = {
						limit = {
							has_star_flag = marauder_system
							exists = starbase
							# starbase = { has_starbase_size < starbase_starfortress }
						}
						max_steps = 5
						create_starbase = {
							size = starbase_starfortress
							module = missile_battery
							building = defense_grid
							owner = event_target:raider_khanate
						}
					}
				}
			}
			else = {
				## Backup Code: Capital System NOT Found
				random_planet_within_border = {
					limit = { is_star = no is_colony = yes }
					save_global_event_target_as = CmtTargetMarauderRallyPoint1
				}
				log = "Backup Code for CmtTargetMarauderRallyPoint1 - 2 Processed"
			}
		}
		random_country = {
			limit = { has_country_flag = marauder_2 }
			owner_species = { save_global_event_target_as = CmtTargetSpecies_Marauder2 }
			if = {
				limit = {
					any_system_within_border = { has_star_flag = marauder_capital_2 }
				}
				random_system_within_border = {
					limit = { has_star_flag = marauder_capital_2 }
					if = {
						limit = {
							any_system_planet = { has_planet_flag = raid_source }
						}
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_global_event_target_as = CmtTargetMarauderRallyPoint2
						}
					}
					else = {
						## Backup Code: raid_source NOT found in Capital System
						random_system_planet = {
							limit = { is_star = no is_colony = yes }
							save_global_event_target_as = CmtTargetMarauderRallyPoint2
						}
						log = "Backup Code for CmtTargetMarauderRallyPoint2 - 1 Processed"
					}
					starbase = {
						if = {
							limit = { has_starbase_size < starbase_citadel }
							set_starbase_size = starbase_citadel
							set_starbase_module = { slot = 5 module = "gun_battery" }
							set_starbase_module = { slot = 6 module = "missile_battery" }
							set_starbase_building = { slot = 3 building = "target_uplink_computer" }
							set_starbase_building = { slot = 4 building = "defense_grid" }
							set_owner = event_target:raider_khanate
						}
					}
					closest_system = {
						limit = {
							has_star_flag = marauder_system
							exists = starbase
							starbase = { has_starbase_size < starbase_starfortress }
						}
						max_steps = 5
						create_starbase = {
							size = starbase_starfortress
							module = missile_battery
							building = defense_grid
							owner = event_target:raider_khanate
						}
					}
				}
			}
			else = {
				## Backup Code: Capital System NOT Found
				random_planet_within_border = {
					limit = { is_star = no is_colony = yes }
					save_global_event_target_as = CmtTargetMarauderRallyPoint2
				}
				log = "Backup Code for CmtTargetMarauderRallyPoint2 - 2 Processed"
			}
		}
		random_country = {
			limit = { has_country_flag = marauder_3 }
			owner_species = { save_global_event_target_as = CmtTargetSpecies_Marauder3 }
			if = {
				limit = {
					any_system_within_border = { has_star_flag = marauder_capital_3 }
				}
				random_system_within_border = {
					limit = { has_star_flag = marauder_capital_3 }
					if = {
						limit = {
							any_system_planet = { has_planet_flag = raid_source }
						}
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_global_event_target_as = CmtTargetMarauderRallyPoint3
						}
					}
					else = {
						## Backup Code: raid_source NOT Found in Capital System
						random_system_planet = {
							limit = { is_star = no is_colony = yes }
							save_global_event_target_as = CmtTargetMarauderRallyPoint3
						}
						log = "Backup Code for CmtTargetMarauderRallyPoint3 - 1 Processed"
					}
					# create_starbase = {
					# 	size = starbase_citadel
					# 	module = gun_battery
					# 	module = missile_battery
					# 	building = target_uplink_computer
					# 	building = defense_grid
					# 	owner = event_target:raider_khanate
					# 	effect = {
					# 		while = {
					# 			count = 4
					# 			create_ship = {
					# 				# name = random
					# 				design = "NAME_Warrior_Freehold"
					# 			}
					# 		}
					# 	}
					# }
					starbase = {
						if = {
							limit = { has_starbase_size < starbase_citadel }
							set_starbase_size = starbase_citadel
							set_starbase_module = { slot = 5 module = "gun_battery" }
							set_starbase_module = { slot = 6 module = "missile_battery" }
							set_starbase_building = { slot = 3 building = "target_uplink_computer" }
							set_starbase_building = { slot = 4 building = "defense_grid" }
							set_owner = event_target:raider_khanate
						}
					}
					closest_system = {
						limit = {
							has_star_flag = marauder_system
							exists = starbase
							starbase = { has_starbase_size < starbase_starfortress }
						}
						max_steps = 5
						create_starbase = {
							size = starbase_starfortress
							module = missile_battery
							building = defense_grid
							owner = event_target:raider_khanate
						}
					}
				}
			}
			else = {
				## Backup Code: Capital System NOT Found
				random_planet_within_border = {
					limit = { is_star = no is_colony = yes }
					save_global_event_target_as = CmtTargetMarauderRallyPoint3
				}
				log = "Backup Code for CmtTargetMarauderRallyPoint3 - 2 Processed"
			}
		}
		### Rally Point of Fleets 2/3: Set Event Targets, Flags
		if = {
			limit = { exists = event_target:CmtTargetMarauderRallyPoint1 }
			event_target:CmtTargetMarauderRallyPoint1 = {
				set_planet_flag = CmtFlagMarauderExpRallyPoint
				if = {
					limit = {
						has_owner = yes
						solar_system = { is_owned_by = ROOT }
					}
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		if = {
			limit = { exists = event_target:CmtTargetMarauderRallyPoint2 }
			event_target:CmtTargetMarauderRallyPoint2 = {
				set_planet_flag = CmtFlagMarauderExpRallyPoint
				if = {
					limit = {
						has_owner = yes
						solar_system = { is_owned_by = ROOT }
					}
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		if = {
			limit = { exists = event_target:CmtTargetMarauderRallyPoint3 }
			event_target:CmtTargetMarauderRallyPoint3 = {
				set_planet_flag = CmtFlagMarauderExpRallyPoint
				if = {
					limit = {
						has_owner = yes
						solar_system = { is_owned_by = ROOT }
					}
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		### Unify All Marauders if Great Khan
		if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanMultiple value = 5 }
				}
			}
			save_event_target_as = new_khanate
			every_country = {
				limit = {
					is_country_type = dormant_marauders
					NOT = { is_same_empire = ROOT }
				}
				country_event = { id = marauder.609 }
				destroy_country = yes
			}
		} else = {
			every_country = {
				limit = {
					is_country_type = dormant_marauders
					NOT = { is_same_empire = ROOT }
				}
				establish_communications_no_message = ROOT
				set_faction_hostility = {
					target = PREV
					set_hostile = no
					set_neutral = yes
					# set_friendly = yes
				}
				PREV = {
					set_faction_hostility = {
						target = PREV
						set_hostile = no
						set_neutral = yes
						# set_friendly = yes
					}
				}
			}
		}

		### Rally Point of Fleets 3/3: Backup Code
		if = {
			limit = {
				NOT = { exists = event_target:marauder_rally_point }
			}
			random_planet_within_border = {
				limit = { is_star = no }
				save_global_event_target_as = marauder_rally_point
				set_planet_flag = marauder_rally_point
				log = "Backup Code for marauder_rally_point Processed"
			}
		}
		### Modify Country
		set_country_type = awakened_marauders
		set_name = random
		change_country_flag = {
			icon = {
				category = "pirate"
				file = "flag_pirate_11.dds"
			}
			background = {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={ "red" "red" "null" "null" }
		}
		change_government = {
			authority = auth_imperial
			civics = { civic = civic_great_khans_vision }
			remove_invalid_civics = yes
		}
		force_add_civic = civic_barbaric_despoilers
		force_add_civic = civic_fanatic_purifiers
		if = {
			limit = { has_ethic = "ethic_xenophobe" }
			country_remove_ethic = "ethic_xenophobe"
		}
		if = {
			limit = { NOT = { has_ethic = "ethic_fanatic_militarist" } }
			country_remove_ethic = "ethic_militarist"
			country_add_ethic = "ethic_fanatic_militarist"
		}
		if = {
			limit = { NOR = { has_ethic = "ethic_fanatic_spiritualist" has_ethic = "ethic_spiritualist" } }
			country_add_ethic = "ethic_spiritualist"
		}

		set_ai_personality = hegemonic_imperialists

		create_ship_design = { design = "NAME_Pirate_Transport" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_Clan_Builder" }
		add_ship_design = last_created_design
		### Ruler Khan
		create_leader = {
			class = ruler
			species = owner_main_species
			name = random
			skill = 10
			leader_age_min = 22
			leader_age_max = 40
			traits = { trait = leader_trait_ruler_great_khan }
		}
		last_created_leader = {
			set_leader_flag = great_khan
			save_global_event_target_as = great_khan_ruler
		}
		assign_leader = last_created_leader
		### Lifespan, Remaining Live of Khan
		if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 1 }
				}
			}
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_1a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_1a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_1c
				random = @CmtConstKhanLifespan_1d
			}
		}
		else_if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 2 }
				}
			}
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_2a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_2a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_2c
				random = @CmtConstKhanLifespan_2d
			}
		}
		else_if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 4 }
				}
			}
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_4a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_4a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_4c
				random = @CmtConstKhanLifespan_4d
			}
		}
		else_if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 5 }
				}
			}
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_5a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_5a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_5c
				random = @CmtConstKhanLifespan_5d
			}
		}
		else_if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanLifespan value = 6 }
				}
			}
			set_global_flag = khan_no_die
			set_country_flag = CmtFlagKhanNoDieCountry
		}
		else = {
			set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_3a }
			set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_3a }
			country_event = {
				id = marauder.514
				days = @CmtConstKhanLifespan_3c
				random = @CmtConstKhanLifespan_3d
			}
		}
		CmtEffectTransferKhanRemainingLive = yes
		### Admiral Khan
		clone_leader = {
			target = event_target:great_khan_ruler
			class = admiral
			skill = 10
			traits = {
				trait = leader_trait_great_khan
				trait = leader_trait_eager
				trait = leader_trait_fleet_logistician
			}
			effect = {
				set_leader_flag = great_khan
				save_global_event_target_as = great_khan
			}
		}

		### Create Fleets
		event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_Khan1stFleet = yes }
		if = {
			limit = {
				event_target:CmtGlobalVar = {
					check_variable = { which = CmtVarKhanMultiple value = 5 }
				}
			}
			every_planet_within_border = {
				limit = { has_planet_flag = CmtFlagMarauderExpRallyPoint }
				CmtEffectCreateAdmiralty_KhanStarterPack = yes
			}
		}
		else = {
			event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_KhanStarterPack = yes }
		}
		country_event = { id = marauder.78 days = 20 }		## Mercenaries Join the Great Khan
		country_event = { id = marauder.520 days = 180 }	## Reinforcement Cycle

		event_target:CmtGlobalVar = { set_variable = { which = CmtVarKhanReinforcementCounter value = 10 } }
		### Should not attack: the Khan is not that bad!
		every_country = {
			limit = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					is_country_type = enclave
					is_country_type = caravaneer_home
					is_country_type = caravaneer_fleet
					is_country_type = ldragon_country
					is_country_type = ratlings
					is_country_type = guardian_sphere
					is_country_type = marauder_raiders
					is_country_type = tiyanki_garrison
					is_country_type = tiyanki
					is_country_type = vluur
				}
			}
			establish_communications_no_message = ROOT
			PREV = {
				set_faction_hostility = {
					target = PREV
					set_hostile = no
					set_neutral = yes
					# set_friendly = yes
				}
			}
		}
		### Notifications
		if = {
			limit = { has_country_flag = CmtFlagKhanVengeanceCountry }
			every_country = {
				limit = { CmtTriggerIsPlayableEmpire = yes }
				establish_communications_no_message = ROOT
				country_event = { id = marauder.526 }
				observer_event = { id = observer.18 }
			}
		} else = {
			every_country = {
				limit = { CmtTriggerIsPlayableEmpire = yes }
				establish_communications_no_message = ROOT
				country_event = { id = marauder.501 }
				observer_event = { id = observer.13 }
			}
		}
		# every_country = {
		# 	limit = {
		# 		is_ai = yes
		# 		CmtTriggerIsPlayableEmpire = yes # is_country_type_with_subjects = yes
		# 	}
		# 	establish_communications_no_message = ROOT
		# }
		### Mercenaries Defect
		if = {
			limit = {
				OR = {
					has_country_flag = marauder_1
					AND = {
						exists = event_target:CmtTargetMarauderRallyPoint1.solar_system.owner
						event_target:CmtTargetMarauderRallyPoint1.solar_system = { is_owned_by = ROOT }
					}
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } }
				}
			}
			every_country = {
				limit = { CmtTriggerCountryHiringMarauder1 = yes }
				set_country_flag = CmtFlagHiringMarauder1
			}
		}
		if = {
			limit = {
				OR = {
					has_country_flag = marauder_2
					AND = {
						exists = event_target:CmtTargetMarauderRallyPoint2.solar_system.owner
						event_target:CmtTargetMarauderRallyPoint2.solar_system = { is_owned_by = ROOT }
					}
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } }
				}
			}
			every_country = {
				limit = { CmtTriggerCountryHiringMarauder2 = yes }
				set_country_flag = CmtFlagHiringMarauder2
			}
		}
		if = {
			limit = {
				OR = {
					has_country_flag = marauder_3
					AND = {
						exists = event_target:CmtTargetMarauderRallyPoint3.solar_system.owner
						event_target:CmtTargetMarauderRallyPoint3.solar_system = { is_owned_by = ROOT }
					}
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } }
				}
			}
			every_country = {
				limit = { CmtTriggerCountryHiringMarauder3 = yes }
				set_country_flag = CmtFlagHiringMarauder3
			}
		}
		every_country = {
			limit = {
				OR = {
					has_country_flag = CmtFlagHiringMarauder1
					has_country_flag = CmtFlagHiringMarauder2
					has_country_flag = CmtFlagHiringMarauder3
				}
			}
			country_event = { id = marauder.77 days = 20 }
		}

		every_neighbor_country = {
			limit = { CmtTriggerIsPlayableEmpire = yes }
			ROOT = {
				declare_war = {
					target = PREV
					name = "The Expansion"
					attacker_war_goal = "wg_war_in_heaven"
				}
				set_faction_hostility = {
					target = PREV
					set_hostile = yes
				}
				add_opinion_modifier = {
					modifier = opinion_first_contact_war
					who = PREV
				}
			}
		}
		country_event = { id = khan.529 days = 360 } # Drums of War
	}
}

##############################
###  Standard War Process  ###
##############################

### Horde Conquers Planet
country_event = {
	id = marauder.503
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_marauders
	}

	immediate = {
		fromfrom = {
			save_event_target_as = conquered_planet
			set_owner = ROOT
		}
		from = {
			country_event = { id = marauder.504 }
			change_variable = { which = "planets_lost_to_marauder" value = 1 }
			set_country_flag = former_owner@fromfrom
		}
		fromfrom = {
			event_target:CmtGlobalVar = { set_variable = { which = CmtVarTemp value = 6 } }
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder1 }
				while = {
					count = 2
					create_army = {
						owner = ROOT
						species = event_target:CmtTargetSpecies_Marauder1
						type = "defense_army"
					}
					event_target:CmtGlobalVar = { change_variable = { which = CmtVarTemp value = -1 } }
				}
			}
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder2 }
				while = {
					count = 2
					create_army = {
						owner = ROOT
						species = event_target:CmtTargetSpecies_Marauder2
						type = "defense_army"
					}
					event_target:CmtGlobalVar = { change_variable = { which = CmtVarTemp value = -1 } }
				}
			}
			if = {
				limit = { exists = event_target:CmtTargetSpecies_Marauder3 }
				while = {
					count = 2
					create_army = {
						owner = ROOT
						species = event_target:CmtTargetSpecies_Marauder3
						type = "defense_army"
					}
					event_target:CmtGlobalVar = { change_variable = { which = CmtVarTemp value = -1 } }
				}
			}
			while = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarTemp value > 0.5 } } }
				create_army = {
					owner = ROOT
					species = ROOT.species
					type = "defense_army"
				}
				event_target:CmtGlobalVar = { change_variable = { which = CmtVarTemp value = -1 } }
			}

			if = {
				limit = { free_housing < 1 }
				random_owned_pop = { kill_pop = yes }
			}
			if = {
				limit = { free_housing < 2 }
				while = { count = 4 random_owned_pop = { kill_pop = yes } }
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder1 }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder1 }
				}
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder2 }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder2 }
				}
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder3 }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder3 }
				}
			} else_if = {
				limit = { free_housing < 6 }
				while = { count = 3 random_owned_pop = { kill_pop = yes } }
				create_pop = { species = ROOT.species }
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder1 }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder1 }
				}
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder2 }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder2 }
				}
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder3 }
					create_pop = { species = event_target:CmtTargetSpecies_Marauder3 }
				}
			} else = {
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder1 }
					while = { count = 2 create_pop = { species = event_target:CmtTargetSpecies_Marauder1 } }
				} else = { while = { count = 2 create_pop = { species = ROOT.species } } }
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder2 }
					while = { count = 2 create_pop = { species = event_target:CmtTargetSpecies_Marauder2 } }
				} else = { while = { count = 2 create_pop = { species = ROOT.species } } }
				if = {
					limit = { exists = event_target:CmtTargetSpecies_Marauder3 }
					while = { count = 2 create_pop = { species = event_target:CmtTargetSpecies_Marauder3 } }
				} else = { while = { count = 2 create_pop = { species = ROOT.species } } }
			}

			solar_system = {
				if = {
					limit = {
						exists = starbase
						starbase = { fleet = { owner = { NOT = { is_same_empire = ROOT } } } }
					}
					starbase = { set_owner = ROOT }
				} else = {
					create_starbase = {
						size = starbase_marauder
						owner = ROOT
					}
				}
			}
		}
	}
}

#######################
###  Death of Khan  ###
#######################

### Khan Defeated in Combat But NOT Die
country_event = {
	id = marauder.505
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		CmtTriggerIsKhanCountry = yes
		fromfrom = {
			exists = leader
			fleet = { num_ships = 0 }
			leader = { has_leader_flag = great_khan }
		}
		check_variable = { which = CmtVarKhanRemainingLive value > -0.5 }		## Not CmtGlobalVar
		OR = {
			NOT = { has_country_flag = CmtFlagKhanDefeatCountry }
			check_variable = { which = CmtVarKhanRemainingLive value > 0.5 }	## Not CmtGlobalVar
		}
	}

	immediate = {
		set_global_flag = great_khan_defeated_once
		set_country_flag = CmtFlagKhanDefeatCountry
		change_variable = { which = CmtVarKhanRemainingLive value = -1 }		## Not CmtGlobalVar

		from = { save_event_target_as = khan_destroyer }
		fromfrom = {
			solar_system = { save_event_target_as = khan_death_system }
			leader = {
				save_event_target_as = great_khan
				exile_leader_as = exiled_khan
			}
		}
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.506 }
		}
		observer_event = { id = observer.14 }

		if = {
			limit = { has_global_flag = CmtFlagDebugMode }
			country_event = { id = marauder.523 days = 5 }
		} else = {
			if = { limit = { exists = event_target:global_event_country }
				event_target:global_event_country = {
					country_event = { id = marauder.523 days = 180 random = 160 }
				}
			} else = {
				random_country = {
					limit = { is_country_type = global_event }
					country_event = { id = marauder.523 days = 180 random = 160 }
				}
			}
		}
	}
}

### Return of Khan
country_event = {
	id = marauder.507
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_Khan2ndFleetSet = yes }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.508 }
		}
		observer_event = { id = observer.15 }
	}
}

### Khan Defeated in Combat And Die
country_event = {
	id = marauder.509
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		CmtTriggerIsKhanCountry = yes
		fromfrom = {
			exists = leader
			fleet = { num_ships = 0 }
			leader = { has_leader_flag = great_khan }
		}
		OR = {
			check_variable = { which = CmtVarKhanRemainingLive value < -0.5 }		## Not CmtGlobalVar
			AND = {
				has_country_flag = CmtFlagKhanDefeatCountry
				check_variable = { which = CmtVarKhanRemainingLive value < 0.5 }	## Not CmtGlobalVar
			}
		}
	}

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		set_variable = { which = CmtVarKhanRemainingLive value = 0 }		## Not CmtGlobalVar

		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = { kill_leader = { show_notification = no } }
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = { kill_leader = { show_notification = no } }
		}

		from = {
			save_event_target_as = khan_destroyer
			set_country_flag = no_khan_do
			# if = { limit = { is_ai = no }
			country_event = { id = marauder.710 days = 10 random = 8 }
			copy_random_tech_from = { who = ROOT }
			if = {
				limit = { ROOT = { num_owned_relics > 0 } }
				steal_relic = { target = ROOT relic = random }
			}
		}
		fromfrom = { solar_system = { save_event_target_as = khan_death_system } }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.510 }
		}
		observer_event = { id = observer.16 }

		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 1 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_1e random = @CmtConstKhanLifespan_1f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 2 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_2e random = @CmtConstKhanLifespan_2f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 4 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_4e random = @CmtConstKhanLifespan_4f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 5 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_5f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 6 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_6e random = @CmtConstKhanLifespan_6f }
		} else = { country_event = { id = marauder.600 days = @CmtConstKhanLifespan_3e random = @CmtConstKhanLifespan_3f } }
	}
}

### Sudden Death of Khan (on_monthly_pulse)
event = {
	id = marauder.511
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			CmtTriggerIsKhanCountry = yes
			NOT = { has_country_flag = CmtFlagKhanNoDieCountry }
		}
	}

	immediate = {
		every_country = {
			limit = {
				CmtTriggerIsKhanCountry = yes
				NOT = { has_country_flag = CmtFlagKhanNoDieCountry }
			}
			random_list = {
				2 = {
					event_target:raider_khanate = { country_event = { id = marauder.512 } }
					modifier = {
						factor = 0
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 6 } }
					}
				}
				98 = {
					modifier = {
						factor = @CmtConstKhanLifespan_1b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 1 } }
					}
					modifier = {
						factor = @CmtConstKhanLifespan_2b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 2 } }
					}
					modifier = {
						factor = @CmtConstKhanLifespan_3b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 3 } }
					}
					modifier = {
						factor = @CmtConstKhanLifespan_4b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 4 } }
					}
					modifier = {
						factor = @CmtConstKhanLifespan_5b
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 5 } }
					}
				}
			}
		}
	}
}

### Great Khan Dies for Other Reasons
country_event = {
	id = marauder.512
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		random_list = {
			10 = { set_country_flag = khan_dead_poison }
			10 = { set_country_flag = khan_dead_disease }
			10 = { set_country_flag = khan_dead_assassin }
			10 = { set_country_flag = khan_dead_concubine }
		}

		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = { kill_leader = { show_notification = no } }
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = { kill_leader = { show_notification = no } }
		}

		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.513 }
		}
		observer_event = { id = observer.17 }

		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 1 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_1e random = @CmtConstKhanLifespan_1f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 2 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_2e random = @CmtConstKhanLifespan_2f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 4 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_4e random = @CmtConstKhanLifespan_4f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 5 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_5f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 6 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_6e random = @CmtConstKhanLifespan_6f }
		} else = { country_event = { id = marauder.600 days = @CmtConstKhanLifespan_3e random = @CmtConstKhanLifespan_3f } }
	}
}

### Great Khan Dies
country_event = {
	id = marauder.513
	title = "marauder.510.name"
	desc = {
		text = marauder.513.a.desc
		trigger = { from = { has_country_flag = khan_dead_poison } }
	}
	desc = {
		text = marauder.513.b.desc
		trigger = { from = { has_country_flag = khan_dead_disease } }
	}
	desc = {
		text = marauder.513.c.desc
		trigger = { from = { has_country_flag = khan_dead_assassin } }
	}
	desc = {
		text = marauder.513.d.desc
		trigger = { from = { has_country_flag = khan_dead_concubine } }
	}
	desc = {
		text = marauder.513.e.desc
		trigger = { from = { has_country_flag = khan_dead_age } }
	}
	picture = GFX_evt_space_funeral
	show_sound = event_life_support_fail

	is_triggered_only = yes

	option = {
		name = marauder.510.a
	}
}

### Great Khan Dies of Old Ages
country_event = {
	id = marauder.514
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		CmtTriggerIsKhanCountry = yes
		NOT = { has_country_flag = khan_dead_age }
	}

	immediate = {
		set_global_flag = great_khan_dead
		set_country_flag = khan_dead_event_fine
		set_country_flag = khan_dead_age

		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = { kill_leader = { show_notification = no } }
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = { kill_leader = { show_notification = no } }
		}

		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.513 }
		}
		observer_event = { id = observer.17 }

		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 1 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_1e random = @CmtConstKhanLifespan_1f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 2 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_2e random = @CmtConstKhanLifespan_2f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 4 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_4e random = @CmtConstKhanLifespan_4f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 5 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_5f }
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanLifespan value = 6 } } }
			country_event = { id = marauder.600 days = @CmtConstKhanLifespan_6e random = @CmtConstKhanLifespan_6f }
		} else = { country_event = { id = marauder.600 days = @CmtConstKhanLifespan_3e random = @CmtConstKhanLifespan_3f } }
	}
}

### Regular Marauder Reinforcements (Cycle) at Capital
country_event = {
	id = marauder.520
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		CmtTriggerIsKhanCountry = yes
		NOR = {
			has_country_flag = has_machinesmith
			has_global_flag = great_khan_wins
		}
	}
	immediate = {
		event_target:CmtGlobalVar = {
			if = {
				limit = {
					NOR = {
						check_variable = { which = CmtVarReinforceCycle_Khan value = 2 }
						check_variable = { which = CmtVarReinforceCycle_Khan value = 3 }
						check_variable = { which = CmtVarReinforceCycle_Khan value = 4 }
					}
				}
				CmtEffectKhanReinforceOnCapital = yes
				ROOT = {
					country_event = { id = marauder.520 days = 340 }
					country_event = { id = khan.299 }
				}
			} else = {
				if = {
					limit = {
						check_variable = { which = CmtVarKhanReinforcementCounter value > 9.5 }
					}
					CmtEffectKhanReinforceOnCapital = yes
					change_variable = { which = CmtVarKhanReinforcementCounter value = -10 }
				}
				CmtEffectKhanIncreasementReinforcementCycle = yes				## required: PREV = ROOT
				ROOT = {
					country_event = { id = marauder.520 days = 34 }
				}
			}
		}
		random_neighbor_country = {
			limit = {
				CmtTriggerIsPlayableEmpire = yes
				NOR = {
					PREV = { is_overlord_to = PREV }
					is_at_war_with = PREV
					is_same_empire = PREV
				}
			}
			PREV = {
				declare_war = {
					target = PREV
					name = "The Expansion"
					attacker_war_goal = "wg_war_in_heaven"
				}
			}
		}

		# Obsolete?
		create_marauder_constructors = yes
		if = {
			limit = { num_armies < 40 }
			create_marauder_armies = yes
		}
		# If at fleet cap
		if = { limit = { fleet_power < 100000 }
			create_marauder_fleet = yes
		}

		# country_event = { id = marauder.520 days = 340 }
	}
}

###########################################################
###  Awakening for Vengeance: on_ship_destroyed_victim  ###
###########################################################

country_event = {
	id = marauder.525
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = dormant_marauders
		fromfrom = { is_ship_size = marauder_void_dwelling }
		from = { CmtTriggerIsPlayableEmpire = yes }

		NOT = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 1 } } }
		OR = {
			count_owned_ship = {
				limit = { is_ship_size = marauder_void_dwelling }
				count >= 3
			}
			AND = {
				event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 5 } }
				count_owned_ship = {
					limit = { is_ship_size = marauder_void_dwelling }
					count >= 1
				}
			}
		}
		CmtTriggerKhanAwakingMultipleCheck = yes
	}

	immediate = {
		from = { save_event_target_as = awakened_horde }
		random_list = {
			5 = {
				modifier = {		## 9.9%
					factor = 5.5
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 3 } }
				}
				modifier = {		## 28.6%
					factor = 20
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 4 } }
				}
				set_global_flag = horde_triggered
				set_country_flag = CmtFlagKhanVengeanceCountry
				country_event = { id = marauder.500 }
			}
			100 = {
				modifier = {
					factor = 0
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanVengeance value = 5 } }
				}
			}
		}
	}
}

##################
##	Great Khan	##
##	Diplomacy	##
##################
country_event = {
	id = marauder.550
	title = "greatkhan_diplo_header"
	desc = {
		trigger = { is_subject_type = fabricator_satrapy }
		text = "marauder_fabricator_greeting1"
	}
	desc = {
		trigger = { is_subject_type = fabricator_satrapy }
		text = "marauder_fabricator_greeting2"
	}
	desc = {
		trigger = { is_subject_type = fabricator_satrapy }
		text = "marauder_fabricator_greeting3"
	}
	# desc = {
	# 	trigger = { is_subject_type = machinesmith }
	# 	text = "khan.899.g.desc"
	# }
	# desc = {
	# 	trigger = { is_subject_type = machinesmith }
	# 	text = "khan.898.g.desc"
	# }
	# desc = {
	# 	trigger = { is_subject_type = machinesmith }
	# 	text = "khan.897.g.desc"
	# }
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.a.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.b.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.c.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.d.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.e.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.f.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.g.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.h.desc"
	}
	desc = {
		trigger = {
			NOR = {
				is_subject_type = satrapy
				is_subject_type = machinesmith
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		text = "marauder.550.i.desc"
	}
	desc = {
		trigger = { is_subject_type = satrapy }
		text = "marauder.550.j.desc"
	}
	desc = {
		trigger = { is_subject_type = satrapy }
		text = "marauder.550.k.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_machine_intelligence
		}
		text = "marauder.550.l.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_machine_intelligence
		}
		text = "marauder.550.m.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_hive_mind
		}
		text = "marauder.550.n.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			has_authority = auth_hive_mind
		}
		text = "marauder.550.o.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		text = "marauder.550.p.desc"
	}
	desc = {
		trigger = {
			is_subject_type = satrapy
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		text = "marauder.550.q.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.r.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.s.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.t.desc"
	}
	desc = {
		trigger = { has_country_flag = rebelling_satrapy }
		text = "marauder.550.u.desc"
	}
	desc = {
		trigger = { is_homicidal = yes }
		text = "marauder.550.v.desc"
	}
	desc = {
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		text = "marauder.550.w.desc"
	}
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	trigger = {
		from = { CmtTriggerIsKhanCountry = yes }
		NOT = { has_country_flag = marauder_diplomacy_engaged }
		# NOT = { has_global_flag = great_khan_dead }
	}
	immediate = {
		set_country_flag = marauder_diplomacy_engaged
	}
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	# Extended subject offer
	option = {
		name = marauder_deal_start
		trigger = {
			NOR = {
				is_subject_type = machinesmith
				is_subject_type = satrapy
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
			OR = {
				AND = {
					has_technology = tech_mass_drivers_4
					has_technology = tech_lasers_4
					has_technology = tech_ship_armor_4
					has_technology = tech_shields_4
				}
				has_monthly_income = {
					resource = alloys
					value > 100
				}
			}
		}
		hidden_effect = {
			country_event = { id = khan.998 }
		}
		ai_chance = { factor = 50 }
	}
	option = {
		# Submit? Already rebelled
		name = marauder_deal_start
		trigger = {
			has_country_flag = rebelling_satrapy
			has_technology = tech_mass_drivers_4
			has_technology = tech_lasers_4
			has_technology = tech_ship_armor_4
			has_technology = tech_shields_4
		}
		response_text = marauder.550.a.2.response
		is_dialog_only = yes
	}
	option = {
		# Submit?
		name = marauder.550.a
		trigger = {
			NOR = {
				is_subject_type = machinesmith
				is_subject_type = satrapy
				is_subject_type = fabricator_satrapy
				has_country_flag = rebelling_satrapy
				is_homicidal = yes
			}
		}
		hidden_effect = {
			country_event = { id = marauder.551 }
		}
	}
	option = {
		# Submit? Already rebelled
		name = marauder.550.a
		trigger = { has_country_flag = rebelling_satrapy }
		response_text = marauder.550.a.2.response
		is_dialog_only = yes
	}
	option = {
		name = marauder.550.b
		trigger = {
			from = { has_country_flag = marauder_2 }
			NOR = {
				has_country_flag = asked_about_language
				is_homicidal = yes
			}
		}
		response_text = marauder.550.b.response
		is_dialog_only = yes
		hidden_effect = { set_country_flag = asked_about_language }
	}
	option = {
		name = marauder.550.c
		trigger = {
			from = { has_country_flag = marauder_3 }
			NOR = {
				has_country_flag = asked_about_religion
				is_homicidal = yes
			}
		}
		response_text = marauder.550.c.response
		is_dialog_only = yes
		hidden_effect = { set_country_flag = asked_about_religion }
	}
	option = {
		# Rebel?
		name = marauder_fabricator_rebel
		trigger = { is_subject_type = fabricator_satrapy }
		hidden_effect = {
			country_event = { id = khan.751 }
		}
	}
	option = {
		# Rebel?
		name = marauder.550.d
		trigger = {
			OR = {
				is_subject_type = machinesmith
				is_subject_type = satrapy
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = marauder.550.d_fail
				NOT = { has_country_flag = rebellion_cooldown }
			}
		}
		hidden_effect = {
			country_event = { id = marauder.554 }
		}
	}
	# option = { TODO copy of 554??
	# 	name = khan.896.g.desc # Uprising machinesmith
	# 	trigger = { is_subject_type = machinesmith }
	# 	hidden_effect = {
	# 		country_event = { id = khan.801 }
	# 	}
	# }
	option = {
		name = marauder.20.e
		default_hide_option = yes
	}
}

# Submit?
country_event = {
	id = marauder.551
	title = "greatkhan_diplo_header"
	desc = marauder.551.a.desc
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder.551.a
		trigger = { has_been_declared_crisis = no }
		response_text = marauder.551.a.response
		country_event = { id = marauder.559 } # Submit to Khan
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = satrapy
		}
	}
	option = {
		name = marauder.551.b
		response_text = marauder.551.b.response
		default_hide_option = yes
	}
}

### Initial Reinforcement for Encouraging Satrap
### Marauder Establishes Base in Capital System
country_event = {
	id = marauder.553
	title = "marauder.553.name"
	desc = "marauder.553.desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_conversation
	location = event_target:garrison_base

	is_triggered_only = yes

	immediate = {
		save_global_event_target_as = satrapy_empire
		capital_scope = {
			save_event_target_as = capital_planet
			solar_system = { save_event_target_as = capital_system }
		}
		CmtEffectCreateEncouragingBase = yes		## event_target:garrison_base
		event_target:garrison_base = { CmtEffectCreateAdmiralty_KhanEncourager = yes }
	}
	option = { name = marauder.553.a }
	after = {
		hidden_effect = {
			event_target:raider_khanate = {
				copy_random_tech_from = { who = PREV area = physics }
			}
		}
	}
}

# Rebel?
country_event = {
	id = marauder.554
	title = "greatkhan_diplo_header"
	desc = marauder.554.a.desc
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder.554.a
		response_text = marauder.554.a.response
		set_subject_of = { who = none }
		hidden_effect = {
			set_country_flag = rebelling_satrapy
			remove_modifier = "satrapy_of_horde"
			declare_war = {
				target = event_target:raider_khanate
				name = "Rebellion"
				attacker_war_goal = "wg_war_in_heaven"
			}
			event_target:raider_khanate = {
				set_faction_hostility = {
					target = ROOT
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
			}
		}
	}
	option = {
		name = marauder.554.b
		response_text = marauder.554.b.response
		# default_hide_option = yes
	}
}

#############################
###  While Khan Reigning  ###
#############################

### NPC (AI Empire) Submits to Marauder
country_event = {
	id = marauder.555
	hide_window = yes
	trigger = {
		has_been_declared_crisis = no
		has_global_flag = marauder_crisis_started
		# NOT = { has_global_flag = great_khan_dead }
		CmtTriggerExistKhanCountry = yes # exists = event_target:raider_khanate
		CmtTriggerIsPlayableEmpire = yes # is_country_type = default
		is_subject = no
		is_ai = yes
		is_homicidal = no
		check_variable = { which = "planets_lost_to_marauder" value > 2 }
		relative_power = {
			who = event_target:raider_khanate
			category = fleet
			value < equivalent
		}
	}
	mean_time_to_happen = {
		years = 5
		modifier = {
			factor = 0.1
			num_owned_planets < 3
		}
		modifier = {
			factor = 0.5
			check_variable = { which = "planets_lost_to_marauder" value > 10 }
		}
		modifier = {
			factor = 0.1
			check_variable = { which = "planets_lost_to_marauder" value > 20 }
		}
		modifier = {
			factor = 3
			has_country_flag = rebelling_satrapy
		}
		modifier = {
			factor = 3
			has_ai_personality = honorbound_warriors
			# has_ai_personality = technological_warriors ?
		}
		modifier = {
			factor = 2
			has_ai_personality = xenophobic_isolationists
		}
		modifier = {
			factor = 0.5
			has_ai_personality = peaceful_traders
		}
		modifier = {
			factor = 0.1
			has_ai_personality = fanatic_befrienders
		}
	}
	immediate = {
		country_event = { id = marauder.559 } # Submit to Khan
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = satrapy
		}
	}
}

# Submit to Khan
# used also for marauder.555 and marauder.551
# This = new subject
country_event = {
	id = marauder.559
	is_triggered_only = yes
	hide_window = yes
	# trigger = {}
	immediate = {
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				country_event = { id = marauder.553 days = 10 }
				set_subject_of = {
					who = event_target:raider_khanate
					subject_type = satrapy
				}
				add_modifier = { modifier = "satrapy_of_horde" days = -1 }
				event_target:raider_khanate = {
					set_faction_hostility = {
						target = PREV
						set_hostile = no
						set_neutral = no
						set_friendly = yes
					}
					copy_random_tech_from = { who = PREV area = engineering }
					add_resource = { influence = 20 }
				}
			}
		}
		# Can't rebel for a year after submitting.
		set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }
		save_event_target_as = new_satrapy
		observer_event = { id = observer.19 }
		every_country = {
			limit = {
				is_ai = no
				has_communications = ROOT
				NOT = { is_same_empire = ROOT }
			}
			country_event = { id = marauder.552 }
		}
		country_event = { id = marauder.553 days = 10 }
		add_modifier = { modifier = "satrapy_of_horde" days = -1 }
		set_variable = { which = "planets_lost_to_marauder" value = 1 }
		event_target:raider_khanate = {
			set_faction_hostility = {
				target = ROOT
				set_hostile = no
				# set_neutral = no
				set_friendly = yes
			}
			copy_random_tech_from = { who = PREV area = physics }
			add_resource = { influence = 100 }
		}
	}
}

### Regular Reinforcements at Capital of Satrap
fleet_event = {
	id = marauder.560
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		CmtTriggerExistKhanCountry = yes
		owner = { is_same_empire = event_target:raider_khanate }
	}

	immediate = {
		if = {
			limit = {
				event_target:CmtGlobalVar = {
					NOR = {
						check_variable = { which = CmtVarReinforceCycle_Khan value = 2 }
						check_variable = { which = CmtVarReinforceCycle_Khan value = 3 }
						check_variable = { which = CmtVarReinforceCycle_Khan value = 4 }
					}
				}
			}
			fleet_event = { id = marauder.560 days = 400 random = 400 }
			event_target:satrapy_empire = { owner_species = { save_event_target_as = satrapy_species } }
			CmtEffectCreateAdmiralty_KhanSubReinforcement = yes
		} else = {
			fleet_event = { id = marauder.560 days = 40 random = 40 }
			if = {
				limit = { check_variable = { which = CmtVarKhanReinforcementCounter value > 9.5 } }
				event_target:satrapy_empire = { owner_species = { save_event_target_as = satrapy_species } }
				CmtEffectCreateAdmiralty_KhanSubReinforcement = yes
				change_variable = { which = CmtVarKhanReinforcementCounter value = -10 }
			}
			ROOT.owner = { ROOT = { CmtEffectKhanIncreasementReinforcementCycle = yes } }
		}
	}
}

### The Future of the Horde (HIDDEN)
country_event = {
	id = marauder.600
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_marauders
		# NOT = { has_country_flag = marauder600_happened }
	}

	immediate = {
		# set_country_flag = marauder600_happened
		remove_global_flag = marauder_crisis_ongoing

		if = { # Khan Extended
			limit = {
				any_war = {
					any_war_participant = {
						prev = {
							using_war_goal = {
								type = wg_war_in_heaven
								owner = prev
							}
						}
					}
				}
			}
			every_war = { #End War in Heaven
				limit = {
					any_war_participant = {
						prev = {
							using_war_goal = {
								type = wg_war_in_heaven
								owner = prev
							}
						}
					}
				}
				end_war_effect = yes
			}
		} # End Khan Extended

		if = {
			limit = { num_owned_planets < 1 }
			country_event = { id = marauder.604 } # Reverts to old ways
		} else = {
			if = {
				limit = {
					OR = {
						NOR = {
							num_owned_planets < 6
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathSplinter value = 1 } }
						}
						NOT = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathKhanate value = 1 } } }
						NOR = {
							count_country = { limit = { is_subject_type = satrapy } count < 2 }
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathDemocratic value = 1 } }
						}
					}
				}
				random_list = {
					60 = {
						modifier = {
							factor = 0
							OR = {
								num_owned_planets < 6
								event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathSplinter value = 1 } }
							}
						}
						modifier = {
							factor = 0.167
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathSplinter value = 2 } }
						}
						modifier = {
							factor = 0.334
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathSplinter value = 3 } }
						}
						# Fractures into Diadochi
						country_event = { id = marauder.601 }
					}
					10 = {
						modifier = {
							factor = 0
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathKhanate value = 1 } }
						}
						modifier = {
							factor = 2
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathKhanate value = 3 } }
						}
						modifier = {
							factor = 6
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathKhanate value = 4 } }
						}
						# Stays united in New Khanate
						country_event = { id = marauder.602 }
						modifier = {
							factor = 0 # Can only happens if Horde owns planets
							num_owned_planets < 1
						}
					}
					10 = {
						modifier = {
							factor = 0
							OR = {
								count_country = { limit = { is_subject_type = satrapy } count < 2 }
								event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathDemocratic value = 1 } }
							}
						}
						modifier = {
							factor = 2
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathDemocratic value = 3 } }
						}
						modifier = {
							factor = 6
							event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanPostDeathDemocratic value = 4 } }
						}
						country_event = { id = marauder.603 }
					}
				}
			} else = {
				random_list = {
					60 = {
						modifier = {
							factor = 0
							num_owned_planets < 6
						}
						country_event = { id = marauder.601 }
					}
					10 = {
						country_event = { id = marauder.602 }
						modifier = {
							factor = 0 # Can only happens if Horde owns planets
							num_owned_planets < 1
						}
					}
					10 = {
						# Turns into Democratic Federation
						modifier = {
							factor = 0 # Can only happen if there are enough Satrapies
							count_country = {
								limit = { is_subject_type = satrapy }
								count < 2
							}
						}
						modifier = {
							factor = 0 # Can only happens if Horde owns planets
							num_owned_planets < 1
						}
						country_event = { id = marauder.603 }
					}
				}
			}
		}
		clear_global_event_target = marauder_rally_point
		event_target:CmtGlobalVar = {
			if = {
				limit = { check_variable = { which = CmtVarKhanMultiple value = 3 } }
				remove_global_flag = CmtFlagNowInKhanInterval
				if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T1 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D1 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T2 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D2 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T3 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D3 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T4 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D4 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value < @CmtConstKhanInterval_T5 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstKhanInterval_D5 }
				} else_if = {
					limit = { check_variable = { which = CmtVarKhanInterval value >= @CmtConstKhanInterval_T0 } }
					set_timed_global_flag = { flag = CmtFlagNowInKhanInterval days = @CmtConstTUnq_ConstKhanInterval }
				} ### Do nothing on < @CmtConstKhanInterval_T0
			}
		}
	}
}

# The Diadochi (HIDDEN)
country_event = {
	id = marauder.601
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_owned_fleet = {
			limit = {
				count_owned_ship = {
					count < 1
					limit = { is_ship_size = starbase_marauder }
				}
			}
			delete_fleet = this
		}
		every_subject = {
			country_event = { id = marauder.670 days = 2 } # notify
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			country_event = { id = marauder.670 days = 4 } # notify
		}
		if = {
			limit = {
				OR = {
					num_owned_planets > 9
					count_system_within_border = {
						count > 3
						limit = {
							any_system_planet = {
								has_owner = yes
								is_owned_by = ROOT
							}
							is_potential_diadochi_system = yes
						}
					}
				}
			}
			# Four Diadochi
			assign_first_diadochi_planets = yes
			assign_second_diadochi_planets = yes
			create_first_diadochi = yes
			create_second_diadochi = yes
		} # else # Two Diadochi (Marauder small)
		assign_third_diadochi_planets = yes
		assign_fourth_diadochi_planets = yes
		assign_diadochi_systems = yes
		create_third_diadochi = yes
		create_fourth_diadochi = yes
		set_diadochi_claims = yes
		observer_event = { id = observer.20 }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.620 }
		}
		destroy_country = yes
	}
}

# The New Khanate (HIDDEN)
country_event = {
	id = marauder.602
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_subject = {
			country_event = { id = marauder.671 days = 10 }
		}
		create_country = {
			name_list = random
			name = random
			species = event_target:marauder_species
			type = default
			authority = auth_imperial
			civics = { civic = civic_great_khans_legacy }
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
			}
			ignore_initial_colony_error = yes
			effect = {
				set_country_flag = new_khanate_flag
				set_country_flag = first_alien_life
				set_country_flag = has_encountered_other_empire
				save_event_target_as = new_khanate
			}
		}
		country_event = { id = marauder.609 }
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			remove_modifier = "satrapy_of_horde"
		}
		observer_event = { id = observer.22 }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.640 } # Notify
		}
		destroy_country = yes
	}
}

# Democratic Federation (HIDDEN)
# This = awakened_marauders
country_event = {
	id = marauder.603
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		create_country = {
			name_list = random
			name = random
			species = event_target:marauder_species
			type = default
			authority = auth_democratic
			civics = random
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_egalitarian
				ethic = ethic_xenophile
			}
			ignore_initial_colony_error = yes
			effect = {
				set_country_flag = democratic_khanate_flag
				save_event_target_as = new_khanate
			}
		}
		country_event = { id = marauder.609 }
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			country_event = { id = marauder.660 }
			remove_modifier = "satrapy_of_horde"
			set_subject_of = { who = none }
		}
		every_subject = {
			set_subject_of = { who = none }
			country_event = { id = marauder.660 }
		}
		observer_event = { id = observer.23 }
		every_country = {
			limit = {
				NOT = { is_subject_type = satrapy }
				is_ai = no
			}
			country_event = { id = marauder.661 }
		}
		destroy_country = yes
	}
}


# The Old Ways (HIDDEN)
country_event = {
	id = marauder.604
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		create_country = {
			name_list = random
			name = random
			species = event_target:marauder_species
			type = dormant_marauders
			civics = { civic = civic_anarcho_tribalism }
			origin = "origin_khan_successor"
			flag = {
				icon = {
					category = "pirate"
					file = "flag_pirate_5.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = { "black" "black" "null" "null" }
			}
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
			}
			ignore_initial_colony_error = yes
			effect = {
				save_event_target_as = restored_marauders
				set_country_flag = restored_marauders_flag
				# set_name = random
				ROOT = {
					switch = {
						trigger = has_country_flag
						marauder_1 = {
							prev = { set_country_flag = marauder_1 save_global_event_target_as = marauder_country_1 }
						}
						marauder_2 = {
							prev = { set_country_flag = marauder_2 save_global_event_target_as = marauder_country_2 }
						}
						marauder_3 = {
							prev = { set_country_flag = marauder_3 save_global_event_target_as = marauder_country_3 }
						}
					}
					every_owned_leader = {
						# limit = { leader_class = ruler }
						set_owner = prev
					}
				}
			}
		}

		every_owned_fleet = {
			limit = {
				OR = {
					has_fleet_flag = satrapy_garrison
					has_fleet_flag = satrapy_garrison_fleet
					has_fleet_flag = horde_auxuliaries
				}
			}
			destroy_fleet = this
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = { set_owner = event_target:restored_marauders }
		}
		every_owned_fleet = {
			set_owner = event_target:restored_marauders
			if = {
				limit = { exists = leader }
				leader = { set_owner = event_target:restored_marauders }
				if = {
					limit = { NOT = { is_ship_class = shipclass_transport } }
					assign_leader = leader
				}
			}
			if = {
				limit = {
					exists = solar_system
					any_owned_ship = { is_ship_class = shipclass_military }
				}
				solar_system = {
					if = {
						limit = {
							has_owner = yes
							NOR = { is_owned_by = ROOT is_owned_by = event_target:restored_marauders }
						}
						prev = { set_mia = yes }
					}
				}
			}
		}
		event_target:restored_marauders = {
			copy_techs_from = { target = ROOT }
			if = {
				limit = { ROOT = { num_owned_relics > 0 } }
				steal_relic = { target = ROOT relic = all }
			}
			# create_marauder_successor_fleet = yes
			event_target:marauder_rally_point = { CmtEffectCreateFleet_KhanStandard = yes }
		}

		# Establish Communications
		every_country = {
			limit = { has_communications = ROOT }
			establish_communications_no_message = event_target:restored_marauders
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			country_event = { id = marauder.670 days = 10 } # Notify
		}
		observer_event = { id = observer.21 }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.630 } # Notify
		}
		destroy_country = yes
		clear_global_event_target = marauder_rally_point
	}
}

# Fully handover marauder country (HIDDEN)
# From marauder.602 and marauder.603
country_event = {
	id = marauder.609
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = event_target:new_khanate
		NOT = { has_global_flag = great_khan_wins }
	}
	immediate = {
		# if = {
		# 	limit = { NOT = { exists = event_target:new_khanate } }
		# 	last_created_country = {
		# 		save_event_target_as = new_khanate
		# 	}
		# }
		if = {
			limit = { NOT = { has_global_flag = marauder_crisis_ongoing } }
			# Drag military fleets except for one
			random_owned_fleet = {
				limit = {
					exists = leader
					any_owned_ship = { is_ship_class = shipclass_military }
				}
				weights = {
					base = 1
					modifier = { add = 1 num_ships > 5 }
					modifier = { add = 2 num_ships > 10 }
					modifier = { add = 3 num_ships > 20 }
				}
				set_owner = event_target:new_khanate
				leader = { set_owner = event_target:new_khanate }
			}
			every_owned_fleet = {
				limit = {
					any_owned_ship = { is_ship_class = shipclass_military }
				}
				delete_fleet = this
			}
		}

		# Normalize Starbases
		if = {
			limit = {
				OR = {
					NOT = { has_global_flag = marauder_crisis_ongoing }
					event_target:new_khanate = { CmtTriggerIsMarauder = no }
				}
			}
			every_owned_starbase = {
				limit = { has_starbase_size = starbase_marauder }
				set_owner = event_target:new_khanate
				set_starbase_size = starbase_outpost
			}
			event_target:new_khanate = {
				add_100_unity_per_year_passed = yes
				random_system_within_border = {
					limit = { CmtTriggerMarauderCapitalSystem = yes }
					create_starbase = {
						size = starbase_citadel
						module = gun_battery
						module = missile_battery
						building = target_uplink_computer
						building = defense_grid
						owner = event_target:raider_khanate
						effect = {
							while = {
								count = 4
								create_ship = {
									design = "NAME_Warrior_Freehold"
								}
							}
						}
					}
					closest_system = {
						limit = {
							has_star_flag = marauder_system
							exists = starbase
							starbase = { has_starbase_size < starbase_starfortress }
						}
						max_steps = 5
						create_starbase = {
							size = starbase_starfortress
							module = missile_battery
							building = defense_grid
							owner = event_target:raider_khanate
						}
					}
				}
			}
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = { set_owner = event_target:new_khanate }
		}
		every_owned_fleet = {
			set_owner = event_target:new_khanate
			# recruit leader
			if = {
				limit = { exists = leader }
				leader = { set_owner = event_target:new_khanate }
				if = {
					limit = { NOT = { is_ship_class = shipclass_transport } }
					assign_leader = leader
				}
			}
			if = {
				limit = {
					exists = solar_system
					any_owned_ship = { is_ship_class = shipclass_military }
				}
				solar_system = {
					if = {
						limit = {
							has_owner = yes
							NOR = { is_owned_by = ROOT is_owned_by = event_target:new_khanate }
						}
						prev = { set_mia = yes }
					}
				}
			}
		}

		# needs to be last (as the country gets destroyed without planet)
		every_owned_planet = {
			set_owner = event_target:new_khanate
			set_controller = event_target:new_khanate
		}
		event_target:new_khanate = {
			add_resource = {
				minerals = 20000
				energy = 20000
				alloys = 20000
				consumer_goods = 20000
				food = 20000
				influence = 1000
			}
			copy_techs_from = { target = ROOT }
			if = {
				limit = { ROOT = { num_owned_relics > 0 } }
				steal_relic = { target = ROOT relic = all }
			}
			if = {
				limit = {
					any_owned_starbase = { has_starbase_size = starbase_outpost }
				}
				random_owned_starbase = {
					limit = { has_starbase_size = starbase_outpost }
					set_starbase_size = starbase_starhold
					set_starbase_module = { slot = 1 module = shipyard }
					set_starbase_module = { slot = 2 module = shipyard }
					set_starbase_module = { slot = 3 module = shipyard }
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						set_starbase_size = starbase_starhold
					}
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						set_starbase_size = starbase_starhold
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = event_target:new_khanate
				}
			}
			# Survey Rest of Horde's Space
			ROOT = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = { owner = event_target:new_khanate }
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = { owner = event_target:new_khanate }
			}
			# Take all old leaders!?
			every_owned_leader = {
				# limit = { leader_class = ruler }
				set_owner = event_target:new_khanate
			}
			country_event = { id = game_start.6 days = 6 random = 4 } # advanced_empire
			country_event = { id = game_start.9 days = 12 random = 8 } # empire_init_create_ships
			create_fleet_from_naval_cap = 0.4

			random_owned_planet = {
				limit = { solar_system = { exists = starbase } }
				weights = {
					base = 1
					modifier = { add = 1 is_colony = yes }
					modifier = { add = 2 is_capital = yes }
				}
				# CmtEffectCreateAdmiralty_KhanStarterPack = yes
				prev = {
				# 	while = {
				# 		count = 2
				# 		# create_marauder_successor_fleet = yes
				#		CmtEffectCreateFleet_KhanStandard = yes
					CmtEffectCreateFleet_KhanArmy = yes
					CmtEffectCreateFleet_KhanConstructor = yes
				# 	}
				}
			}

		}
		# Establish Communications
		every_country = {
			limit = { has_communications = ROOT }
			establish_communications_no_message = event_target:new_khanate
		}
	}
}

# Satrapy No Longer
country_event = {
	id = marauder.670
	title = "marauder.670.name"
	desc = "marauder.670.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation
	is_triggered_only = yes
	immediate = {
		remove_modifier = "satrapy_of_horde"
		if = {
			limit = { is_subject = yes }
			set_subject_of = { who = none }
		}
	}
	option = { name = marauder.670.a }
}

# on_leader_death - make extra sure that flag is set
country_event = {
	id = marauder.711
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		from = { has_leader_flag = great_khan }
		NOT = { has_global_flag = great_khan_wins }
	}
	immediate = {
		set_global_flag = great_khan_dead
		if = {
			limit = { exists = event_target:great_khan_ruler }
			event_target:great_khan_ruler = {
				kill_leader = { show_notification = no }
			}
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = {
				kill_leader = { show_notification = no }
			}
		}
		country_event = { id = marauder.712 days = 10 }
	}
}

namespace = khan

# Because of the logic of the original author Kinneyj47,
# the numerical order is upside down in relation to the events
# Final Uprising (290-299)
country_event = {
	id = khan.290
	title = "The Uprising"
	desc = great_khan_integrate_choice
	picture = GFX_evt_khan_throne_room
	is_triggered_only = yes
	force_open = yes
	trigger = { exists = event_target:raider_khanate }
	immediate = {
		event_target:raider_khanate = {
			random_subject = {
				limit = {
					CmtTriggerIsPlayableEmpire = yes
					is_ai = yes
					OR = {
						relative_power = {
							who = PREV
							category = all
							value > inferior
						}
						relative_power = {
							who = PREV
							category = fleet
							value > equivalent
						}
					}
				}
				PREV = { save_event_target_as = new_khanate }
				country_event = { id = marauder.609 }
			}
		}
	}
	option = {
		name = marauder_uprising_now
		event_target:raider_khanate = {
			every_subject = {
				set_subject_of = { who = none }
				declare_war = {
					target = event_target:raider_khanate
					name = "The Great Uprising"
					attacker_war_goal = "wg_independence"
				}
				set_country_flag = rebelling_satrapy
				add_opinion_modifier = {
					modifier = opinion_traitor_to_empire
					who = PREV
				}
				set_faction_hostility = {
					target = PREV
					set_hostile = yes
				}
				PREV = {
					set_faction_hostility = {
						target = PREV
						set_hostile = yes
					}
				}
			}
		}
	}
	option = {
		name = marauder_uprising_stall
		hidden_effect = {
			country_event = { id = khan.290 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
		}
	}
}

#TODO: SOME BROKEN ASS SHIT GOING ON HERE
# Scope = every default empire
country_event = {
	id = khan.291
	is_triggered_only = yes
	force_open = yes
	title = "FE_war_choice"
	desc = "FE_war_choice_desc"
	picture = GFX_evt_fallen_empire_awakes
	immediate = {
		if = {
			limit = { is_subject = yes }
			set_subject_of = { who = none }
		}
	}
	option = {
		name = pick_great_khan
		ai_chance = { factor = 50 }
		join_war = event_target:raider_khanate
	}
	option = {
		name = pick_fe
		trigger = { exists = event_target:fe_target }
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				NOT = { exists = event_target:fe_target }
			}
		}
		if = {
			limit = {
				event_target:fe_target = { has_ethic = ethic_fanatic_xenophile }
			}
			set_subject_of = {
				who = event_target:fe_target
				subject_type = signatory
			}
		}
		if = {
			limit = {
				event_target:fe_target = { has_ethic = ethic_fanatic_xenophobe }
			}
			set_subject_of = {
				who = event_target:fe_target
				subject_type = thrall
			}
		}
		if = {
			limit = {
				event_target:fe_target = { has_ethic = ethic_fanatic_spiritualist }
			}
			set_subject_of = {
				who = event_target:fe_target
				subject_type = dominion
			}
		}
		if = {
			limit = {
				event_target:fe_target = { has_ethic = ethic_fanatic_materialist }
			}
			set_subject_of = {
				who = event_target:fe_target
				subject_type = satellite
			}
		}
		join_war = event_target:fe_target
		remove_modifier = "satrapy_of_horde"
	}

	option = {
		name = pick_indep
		ai_chance = {
			factor = 10
			# TODO: could be more dynamic value
			modifier = {
				factor = 100
				fleet_power > 200000
			}
		}
		hidden_effect = {
			set_country_flag = rebelling_satrapy
			remove_modifier = "satrapy_of_horde"
		}
		if = {
			limit = { exists = event_target:fe_target }
			declare_war = {
				target = event_target:fe_target
				name = "The Great Uprising"
				attacker_war_goal = "wg_ae_uprising"
			}
		}
		declare_war = {
			target = event_target:raider_khanate
			name = "The Great Uprising"
			attacker_war_goal = "wg_independence"
		}
	}

	after = {
		event_target:fe_target = {
			copy_random_tech_from = { who = PREV }
			PREV = { copy_random_tech_from = { who = PREV } }
			# every_subject = { join_war = event_target:fe_target }
		}
		event_target:raider_khanate = {
			copy_random_tech_from = { who = PREV }
			PREV = { copy_random_tech_from = { who = PREV } }
			# every_subject = { join_war = event_target:raider_khanate }
		}
	}
}

# FE awakening
# Assume at this point that the great khan is neutral to the empires
# This = marauder
country_event = {
	id = khan.292
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_country = {
			limit = {
				is_country_type = fallen_empire
				NOT = { has_ethic = ethic_gestalt_consciousness }
			}
			save_global_event_target_as = fe_target
			country_event = { id = fallen_empires_awakening.3 }
			ROOT = {
				declare_war = {
					target = PREV
					name = "The Great Khan's Gamble"
					attacker_war_goal = "wg_war_in_heaven"
				}
			}
		}
	}
	after = {
		every_playable_country = {
			limit = { CmtTriggerIsPlayableEmpire = yes }
			country_event = { id = khan.291  days = @CmtConstKhanLifespan_1f }
		}
	}
}

# Notify only
# This = subject (is_ai = no)
country_event = {
	id = khan.293
	force_open = yes
	is_triggered_only = yes
	diplomatic = yes
	title = "greatkhan_diplo_header"
	desc = "great_khan_fe_war"
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = { name = great_khan_fe_war_response }
}

# Final event (Notify) khan.290
country_event = {
	id = khan.294
	title = "greatkhan_diplo_header"
	desc = great_khan_integrate_announcement
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	trigger = { exists = event_target:raider_khanate }
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = great_khan_integrate_response
		hidden_effect = {
			country_event = { id = khan.290 }
		}
	}
}

#Great Khan lets his subjects know what is coming
# This = Marauder
country_event = {
	id = khan.295
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_subject = {
			if = {
				limit = { is_ai = no }
				country_event = { id = khan.293 } # Notify only
			}
		}
		country_event = { id = khan.292 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
	}
}

# This = (is_ai = no)
country_event = {
	id = khan.296
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		# has_global_flag = great_khan_wins
		exists = event_target:raider_khanate
	}
	immediate = {
		random_list = {
			5 = {
				country_event = { id = khan.294 }
			}
			5 = {
				event_target:raider_khanate = {
					country_event = { id = khan.295 }
				}
			}
		}
	}
}

# great_khan has won
# Notify (is_ai = no)
country_event = {
	id = khan.297
	force_open = yes
	is_triggered_only = yes
	diplomatic = yes
	title = "greatkhan_diplo_header"
	desc = "great_khan_wins_announcement"
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}

	option = {
		name = great_khan_wins_announcement_response
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = great_khan_wins } }
				set_global_flag = great_khan_wins
				country_event = {
					id = khan.296
					days = @CmtConstKhanLifespan_5d
					random = @CmtConstKhanLifespan_2d
				}
			}
		}
	}
}

# great_khan has won
# Notify + Reinforcement (is_ai = no)
country_event = {
	id = khan.298
	force_open = yes
	is_triggered_only = yes
	title = "great_khan_wins"
	desc = "great_khan_wins_desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_radio_chatter
	immediate = {
		# set_global_flag = great_khan_wins
		event_target:raider_khanate = {
			if = {
				limit = { has_country_flag = has_machinesmith }
				country_event = { id = khan.870 } # Reinforcement
				break = yes
			} else = {
				country_event = { id = khan.869 } # Reinforcement
			}
		}
	}
	option = {
		name = great_khan_wins_response
		hidden_effect = {
			country_event = { id = khan.297 }
		}
	}
}

# check great_khan_wins
# This = Marauder
country_event = {
	id = khan.299
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		has_global_flag = marauder_crisis_started
		NOT = { has_global_flag = great_khan_wins }
	}
	immediate = {
		if = {
			limit = {
				any_country = {
					CmtTriggerIsPlayableEmpire = yes
					NOR = {
						is_subject_type = satrapy
						is_subject_type = fabricator_satrapy
						is_subject_type = machinesmith
					}
				}
			}
			break = yes
		}
		every_country = {
			if = {
				limit = { is_ai = no }
				country_event = { id = khan.298 }
			}
		}
	}
}

# Set Mod Flag
event = {
	id = khan.300
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = gf_great_khan_active
	}
}

### Drums of War - Khan Expanding (Cycle)
# Scope = Khan / subject
country_event = {
	id = khan.529
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = marauder_crisis_ongoing
		exists = event_target:raider_khanate
		# CmtTriggerExistKhanCountry = yes
		OR = {
			AND = {
				exists = from
				is_subject = yes
				from = { is_overlord_to = event_target:raider_khanate }
				NOT = { has_country_flag = rebellion_cooldown }
			}
			is_same_empire = event_target:raider_khanate
			# CmtTriggerIsKhanCountry = yes
		}
	}

	immediate = {
		if = {
			limit = {
				is_subject = yes
				# is_same_empire = event_target:new_satrapy
				overlord = {
					any_subject = {
						has_country_flag = rebellion_cooldown
					}
				}
			}
			break = yes
		}

		event_target:raider_khanate = {
			if = {
				limit = {
					any_country = {
						has_communications = PREV
						CmtTriggerIsPlayableEmpire = yes
						NOR = {
							PREV = { is_overlord_to = PREV }
							is_at_war_with = PREV
							is_same_empire = PREV
						}
					}
				}
				every_neighbor_country = {
					limit = {
						CmtTriggerIsPlayableEmpire = yes
						NOR = {
							PREV = { is_overlord_to = PREV }
							is_at_war_with = PREV
							is_same_empire = PREV
						}
					}
					PREV = {
						declare_war = {
							target = PREV
							name = "The Expansion"
							attacker_war_goal = "wg_war_in_heaven"
						}
					}
				}
				random_country = {
					limit = {
						has_communications = PREV
						CmtTriggerIsPlayableEmpire = yes
						NOR = {
							PREV = { is_overlord_to = PREV }
							is_at_war_with = PREV
							is_same_empire = PREV
						}
					}
					PREV = {
						declare_war = {
							target = PREV
							name = "The Expansion"
							attacker_war_goal = "wg_war_in_heaven"
						}
					}
				}
			}
			# country_event = { id = khan.529 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_4e } still on_action for temp savegame
		}
		# else = { country_event = { id = khan.529 days = 400 } }
	}
}

# Uprising fabricator_satrapy
country_event = {
	id = khan.751
	title = "greatkhan_diplo_header"
	desc = marauder_fabricator_threat
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	diplomatic = yes
	force_open = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_fabricator_disloyal
		response_text = khan.751.a.response
		set_subject_of = { who = none }
		hidden_effect = {
			set_country_flag = rebelling_satrapy
			remove_modifier = "satrapy_of_horde"
			declare_war = {
				target = event_target:raider_khanate
				name = "Rebellion"
				attacker_war_goal = "wg_war_in_heaven"
			}
			event_target:raider_khanate = {
				add_opinion_modifier = {
					modifier = opinion_traitor_to_empire
					who = prev
				}
			}
		}
	}
	option = {
		name = marauder_fabricator_loyal
		response_text = marauder.554.b.response
	}
}

# fabricator_satrapy (Reinforcement Cycle)
country_event = {
	id = khan.798
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = rebelling_satrapy }
		is_subject = yes
		is_subject_type = fabricator_satrapy
	}
	immediate = {
		create_fleet = {
			name = "NAME_Thalassocracy_fleet"
			effect = {
				set_owner = event_target:raider_khanate
				while = {
					count = 2
					while = {
						count = 11
						CmtEffectCreateShip_Outrider = yes
					}
					while = {
						count = 7
						CmtEffectCreateShip_Lancer = yes
					}
					while = {
						count = 4
						CmtEffectCreateShip_VoidChampion = yes
					}
				}
				set_formation_scale = 2
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 250
				set_location = {
					target = ROOT.capital_scope
					distance = 20
					angle = random
				}
			}
		}
		capital_scope = {
			create_fleet = {
				effect = {
					set_owner = prev
					random_list = {
						99 = {
							while = { count = 2 CmtEffectCreateShip_KhanArmy = { TYPE = "machine_assault_3" } }
							modifier = {
								factor = 0
								prev = {
									NOR = {
										has_authority = auth_machine_intelligence
										has_technology = tech_biomechanics
									}
								}
							}
						}
						80 = {
							while = { count = 2 CmtEffectCreateShip_KhanArmy = { TYPE = "gene_warrior_army" } }
							modifier = {
								factor = 0
								prev = {
									OR = {
										has_authority = auth_machine_intelligence
										NOT = { has_technology = tech_gene_seed_purification }
									}
								}
							}
						}
						60 = {
							while = { count = 3 CmtEffectCreateShip_KhanArmy = { TYPE = "psionic_army" } }
							modifier = {
								factor = 0
								prev = {
									OR = {
										has_authority = auth_machine_intelligence
										NOT = { has_technology = tech_telepathy }
									}
								}
							}
						}
						50 = {
							while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "machine_assault_2" } }
							modifier = {
								factor = 0
								prev = {
									NOR = {
										has_authority = auth_machine_intelligence
										has_technology = tech_adaptive_combat_algorithms
									}
								}
							}
						}
						30 = {
							while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "clone_army" } }
							modifier = {
								factor = 0
								prev = {
									OR = {
										has_authority = auth_machine_intelligence
										NOT = { has_technology = tech_gene_banks }
									}
								}
							}
						}
						# 2 = {
						# 	while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "slave_army" } }
						# 	modifier = {
						# 		factor = 0
						# 		prev = {
						# 			OR = {
						# 				has_authority = auth_machine_intelligence
						# 				NOT = { has_policy_flag = slavery_allowed }
						# 				NOT = { has_technology = tech_neural_implants }
						# 			}
						# 		}
						# 	}
						# }
						# 1 = { while = { count = 5 CmtEffectCreateShip_KhanArmy = yes } }
					}
					set_fleet_stance = evasive
					set_location = {
						target = PREV
						distance = 20
						angle = random
					}
				}
			}
		}
		last_created_fleet = {
			set_owner = event_target:raider_khanate
		}
		country_event = { id = khan.798 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
	}
}

# Submit as fabricator_satrapy
country_event = {
	id = khan.799
	title = "greatkhan_diplo_header"
	desc = marauder_fabricator_offer
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_fabricator_deal_accept
		response_text = marauder_fabricator_good
		country_event = { id = marauder.559 } # Submit to Khan
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = fabricator_satrapy
		}
		hidden_effect = {
			country_event = { id = khan.798 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
		}
	}
	option = {
		name = marauder_fabricator_deal_refuse
		response_text = marauder_deal_refuse
	}
}

# Need a flag to determine if the horde has a machinesmith, and if it is, then set this as the new reinforcement cycle
country_event = {
	id = khan.868
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		CmtTriggerIsKhanCountry = yes
		has_country_flag = has_machinesmith
	}
	immediate = {
		country_event = { id = khan.299 }
		create_marauder_constructors = yes
		if = {
			limit = { fleet_power > 300000 }
			country_event = { id = khan.868 days = 180 }
			break = yes
		}
		if = {
			limit = { num_armies < 40 }
			create_marauder_armies = yes
		}
		log = "1"
		random_planet_within_border = {
			log = "2"
			create_fleet = {
				effect = {
					log = "4"
					set_owner = ROOT
					while = {
						count = 2
						while = {
							count = 10
							create_ship = {
								name = random
								design = "NAME_Outrider_4"
								# graphical_culture = ROOT
							}
						}
						while = {
							count = 5
							create_ship = {
								name = random
								design = "NAME_Lancer_4"
								# graphical_culture = ROOT
							}
						}
						while = {
							count = 3
							create_ship = {
								name = random
								design = "NAME_Void_Champion_4"
								# graphical_culture = ROOT
							}
						}
						while = {
							count = 1
							create_ship = {
								name = random
								design = "NAME_Ancestral_Glory_4"
								# graphical_culture = ROOT
							}
						}
					}
					set_location = {
						target = PREV
						distance = 20
						angle = random
					}
					set_aggro_range = 500
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
				}
			}
		}
		random_subject = {
			limit = { is_subject_type = machinesmith }
			ROOT = { copy_random_tech_from = { who = PREV } }
			log = "machinesmith sold"
			country_event = { id = khan.868 days = 180 }
			break = yes
		}
		remove_country_flag = has_machinesmith
	}
}

# This = Marauder (machinesmith Reinforcement Cycle)
country_event = {
	id = khan.870
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		CmtTriggerIsKhanCountry = yes
		has_country_flag = has_machinesmith
		has_global_flag = great_khan_wins
	}
	immediate = {
		create_marauder_constructors = yes
		if = {
			limit = { num_armies < 40 }
			create_marauder_armies = yes
		}
		if = {
			limit = { fleet_power > 550000 }
			country_event = { id = khan.870 days = 180 }
			break = yes
		}
		log = "1"
		random_planet_within_border = {
			log = "2"
			create_fleet = {
				effect = {
					log = "4"
					set_owner = ROOT
					while = {
						log = "5"
						count = 20
						create_ship = {
							name = random
							design = "NAME_Outrider_4"
							# graphical_culture = ROOT
						}
					}
					while = {
						count = 10
						create_ship = {
							name = random
							design = "NAME_Lancer_4"
							# graphical_culture = ROOT
						}
					}
					while = {
						count = 5
						create_ship = {
							name = random
							design = "NAME_Void_Champion_4"
							# graphical_culture = ROOT
						}
					}
					while = {
						count = 2
						create_ship = {
							name = random
							design = "NAME_Ancestral_Glory_4"
							# graphical_culture = ROOT
						}
					}
					set_location = {
						target = PREV
						distance = 20
						angle = random
					}
					set_aggro_range = 500
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
				}
			}
		}
		log = "99"
		country_event = { id = khan.870 days = 180 }
	}
}

# great_khan has won
# This = Marauder (Reinforcement Cycle)
country_event = {
	id = khan.869
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_started
		has_global_flag = great_khan_wins
		NOT = { has_country_flag = has_machinesmith }
	}
	immediate = {
		if = {
			limit = { # Make sure home system still owned
				any_planet_within_border = { has_planet_flag = marauder_rally_point }
			}
			country_event = { id = khan.299 }
			create_marauder_constructors = yes
			if = {
				limit = { num_armies < 40 }
				create_marauder_armies = yes
			}
			# If at fleet cap, check again later
			if = {
				limit = { fleet_power < 450000 }
				# create_marauder_fleet = yes
				event_target:marauder_rally_point = { CmtEffectCreateAdmiralty_Khan2ndFleetSet = yes }
			}
		}
		country_event = { id = khan.869 days = 340 }
	}
}

# Submit as machinesmith (vanilla = marauder.551)
country_event = {
	id = khan.997
	title = "greatkhan_diplo_header"
	desc = marauder_deal_offer
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	diplomatic = yes
	force_open = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_deal_response
		trigger = { has_been_declared_crisis = no }
		response_text = marauder_deal_accept
		country_event = { id = marauder.559 } # Submit to Khan
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = machinesmith
		}
		hidden_effect = {
			event_target:raider_khanate = {
				set_country_flag = has_machinesmith
				country_event = { id = khan.868 } # (Reinforcement Cycle)
			}
		}
		give_tech_no_error_effect = { MESSAGE = no TECH = tech_mass_drivers_4 }
		give_tech_no_error_effect = { MESSAGE = no TECH = tech_lasers_4 }
		give_tech_no_error_effect = { MESSAGE = no TECH = tech_ship_armor_4 }
		give_tech_no_error_effect = { MESSAGE = no TECH = tech_shields_4 }
		give_tech_no_error_effect = { MESSAGE = no TECH = tech_starbase_5 } # Citadel
	}
	option = {
		name = marauder_deal_bad_response
		response_text = marauder_deal_refuse
	}
}

# Special Submit?
country_event = {
	id = khan.998
	title = "greatkhan_diplo_header"
	desc = marauder_deal
	picture_event_data = {
		portrait = event_target:raider_khanate
		room = ethic_spaceship_room
	}
	is_triggered_only = yes
	diplomatic = yes
	force_open = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_deal_reason
		trigger = {
			has_technology = tech_mass_drivers_4
			has_technology = tech_lasers_4
			has_technology = tech_ship_armor_4
			has_technology = tech_shields_4
		}
		hidden_effect = {
			country_event = { id = khan.997 }
		}
		ai_chance = { factor = 50 }
	}
	option = {
		name = marauder_fabricator_deal_reason
		trigger = {
			has_monthly_income = {
				resource = alloys
				value > 100
			}
		}
		hidden_effect = {
			country_event = { id = khan.799 }
		}
	}
}

### Great Khan Spawn Settings
country_event = {
	id = khan.999
	is_triggered_only = yes
	title = "khan.999.name"
	desc = "khan.999.desc"
	picture = GFX_evt_khan_throne_room
	option = {
		name = force_khan_option
		exclusive_trigger = {
			NOT = { has_global_flag = force_khan }
		}
		hidden_effect = { set_global_flag = force_khan }
	}
	option = {
		name = normal_khan
		exclusive_trigger = { has_global_flag = force_khan }
		hidden_effect = { remove_global_flag = force_khan }
	}
}
