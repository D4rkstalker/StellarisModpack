namespace = ag_delta

# Spawn Delta Area(Hidden)
country_event = {
    id = ag_delta.1
    hide_window = yes
	is_triggered_only = yes
	
    immediate = {
		ag_spawn_ancient_system = { ag_system_to_spawn = "ag_ancient_delta_init" ag_hyperlane = no }
		ag_spawned_system_effect = yes
		create_point_of_interest = {
			id = ag_delta_area
			name = "ag_delta_area"
			desc = "ag_delta_area_desc"
			event_chain = ag_hidden_system_chain
			location = event_target:ag_ancient_delta_star
		}
		random_system = {
			limit = { has_star_flag = ag_ancient_delta_system }
			isolate_system = yes
		}
    }
	
	after = {
		every_country = {
			limit = {
				has_special_project = ag_located_delta_area
			}
			abort_special_project = {
				type = "ag_located_delta_area"
				location = capital_scope
			}
		}
	}
}

# on_entering_system_fleet, notification for entering the Delta Area first time
fleet_event = {
	id = ag_delta.2
	title = "ag_delta.2.name"
	desc = "ag_delta.2.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ruined_system_room }
	show_sound = event_mystic_reveal_light
	location = root
	is_triggered_only = yes
	
	trigger = {
		from = {
			has_star_flag = ag_ancient_delta_system
		}
		owner = {
			is_ai = no
			NOT = {
				has_country_flag = ag_delta_area_entered
			}
		}
		NOT = {
			has_global_flag = ag_ancient_delta_guardian_awakened
		}
		NOT = {
			any_country = {
				has_special_project = ag_delta_platform_explore
			}
		}
	}
	
    immediate = {
		from = {
			save_event_target_as = ag_delta_area_system
			random_system_ambient_object = {
				limit = { has_ambient_object_flag = ag_ancient_delta_platform }
				save_event_target_as = ag_ancient_delta_platform
				set_ambient_object_flag = ag_ancient_delta_platform_1
			}
		}
		owner = {
			set_country_flag = ag_delta_area_entered
			ag_refresh_ancient_system_poi = { ag_system_id = ag_delta_area }
		}
	}
	
	option = {
		name = "ag_delta.2.a"
		owner = {
			enable_special_project = {
				name = "ag_delta_platform_explore"
				location = event_target:ag_ancient_delta_platform
				owner = root.owner
			}
		}
	}
	option = {
		name = "ag_delta.2.b"
		custom_tooltip = "ag_delta.2.b.tooltip"
		owner = {
			add_resource = { influence = @ag_end_event_influence_large }
		}
	}
}

# Finished special project
ship_event = {
	id = ag_delta.3
	title = "ag_delta.3.name"
	desc = "ag_delta.3.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_mystic_reveal
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_delta.3.a"
		custom_tooltip = "ag_delta.3.a.tooltip"
		hidden_effect = {
			fleet = { set_event_locked = yes }
			random_list = {
				90 = { ship_event = { id = ag_delta.4 days = 10 } }
				10 = { ship_event = { id = ag_delta.10 days = 25 } }
			}
			set_global_flag = ag_ancient_delta_guardian_awakened
		}
	}
	
	option = {
		name = "ag_delta.3.b"
		custom_tooltip = "ag_delta.2.b.tooltip"
		owner = {
			add_resource = { influence = @ag_end_event_influence_large }
		}
	}
}

# Ancient Turret actived
ship_event = {
	id = ag_delta.4
	title = "ag_delta.4.name"
	desc = "ag_delta.4.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_activating_unknown_technology
	location = root
	is_triggered_only = yes
	
	immediate = {
		set_ship_flag = ag_delta_4_ship
		fleet = { set_event_locked = no }
		event_target:ag_ancient_delta_star.solar_system = {
			random_system_ambient_object = {
				limit = { has_ambient_object_flag = ag_ancient_delta_platform_1 }
				save_event_target_as = ag_ancient_delta_platform_1
			}
		}
		event_target:global_event_country = {
			ag_create_ancient_guardian = {
				ag_country_name = "NAME_ag_ancient_delta_guardian"
				ag_country_type = ag_ancient_delta_guardian_passive
			}
			last_created_country = {
				save_global_event_target_as = ag_ancient_delta_guardian_country
				set_country_flag = ag_ancient_delta_guardian_country
				ag_ancient_country_friendly_to_each_other = yes
				create_fleet = {
					name = "NAME_ag_delta_platform_fleet"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						ag_spawn_explosion_effect = { ag_scale = l ag_color = red }
						set_owner = prev
						save_global_event_target_as = ag_ancient_delta_platform_1_active
						create_ship = {
							name = "NAME_ag_delta_platform_ship"
							design = "NAME_ag_delta_platform_hostile"
							prefix = no
							effect = {
								ag_difficulty_bonus = yes
							}
						}
						set_location = {
							target = event_target:ag_ancient_delta_platform_1
							distance = 0
							angle = random
						}
					}
				}
			}
		}
		every_country = { establish_communications_no_message = event_target:ag_ancient_delta_guardian_country }
		event_target:ag_ancient_delta_platform_1 = { destroy_ambient_object = this }
		owner = { country_event = { id = ag_delta.5 days = 45 random = 30 } }
	}
	
	option = { name = "ag_delta.4.a" }
	option = { name = "ag_delta.4.b" }
}

# Ancient Turret communication with each other
country_event = {
	id = ag_delta.5
	title = "ag_delta.5.name"
	desc = "ag_delta.5.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_yellow_alert
	location = event_target:ag_ancient_delta_platform_1_active
	is_triggered_only = yes
	
	option = {
		name = "ag_delta.5.a"
		enable_special_project = {
			name = "ag_delta_stop_communication"
			location = event_target:ag_ancient_delta_platform_1_active
			owner = root
		}
	}
	option = {
		name = "ag_delta.5.b"
		hidden_effect = {
			country_event = { id = ag_delta.12 days = 90 random = 90 }
		}
	}
	option = {
		name = "ag_delta.5.c"
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_militarist
				has_ethic = ethic_militarist
			}
			OR = {
				has_ethic = ethic_fanatic_xenophobe
				has_ethic = ethic_xenophobe
			}
		}
		enable_special_project = {
			name = "ag_delta_destroy_platform"
			location = event_target:ag_ancient_delta_platform_1_active
			owner = root
		}
	}
}

# Failed to active ancient turret, turrets turn into histile
ship_event = {
	id = ag_delta.10
	title = "ag_delta.10.name"
	desc = "ag_delta.10.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_red_alert
	location = event_target:ag_ancient_delta_star
	is_triggered_only = yes
	
	immediate = { owner = { country_event = { id = ag_delta.20 } } }
	
	option = {
		name = "ag_delta.10.a"
		hidden_effect = { fleet = { set_event_locked = no } }
	}
}

# Special project: Stop communication
ship_event = {
	id = ag_delta.11
	title = "ag_delta.11.name"
	desc = "ag_delta.11.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_red_alert
	location = event_target:ag_ancient_delta_star
	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_ship_in_system = {
				limit = { is_ship_class = shipclass_science_ship NOT = { has_ship_flag = ag_delta_4_ship } }
				save_event_target_as = ag_delta_target_ship
			}
			if = {
				limit = { NOT = { exists = event_target:ag_delta_target_ship } }
				root = { save_event_target_as = ag_delta_target_ship }
			}
		}
		owner = { country_event = { id = ag_delta.20 } }
	}
	
	option = {
		name = "ag_delta.11.a"
	}
}
# Do nothing
country_event = {
	id = ag_delta.12
	title = "ag_delta.12.name"
	desc = "ag_delta.12.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_red_alert
	location = event_target:ag_ancient_delta_star
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = ag_delta.20 }
	}
	
	option = {
		name = "ag_delta.12.a"
	}
}
# Successfully destroy a turret, other turret turn into hostile
ship_event = {
	id = ag_delta.13
	title = "ag_delta.13.name"
	desc = "ag_delta.13.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_red_alert
	location = event_target:ag_ancient_delta_star
	is_triggered_only = yes
	
	immediate = {
		owner = {
			country_event = { id = ag_delta.20 }
		}
		random_system = {
			limit = {
				has_star_flag = ag_ancient_delta_system
			}
			random_fleet_in_system = {
				limit = {
					any_controlled_ship = {
						is_ship_size = ag_delta_platform_hostile
					}
				}
				destroy_fleet = this
			}
		}
	}
	
	option = {
		name = "ag_delta.13.a"
	}
}

# Failed to destroy a turret, other turret turn into hostile
ship_event = {
	id = ag_delta.14
	title = "ag_delta.14.name"
	desc = "ag_delta.14.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_red_alert
	location = event_target:ag_ancient_delta_star
	is_triggered_only = yes
	
	immediate = {
		owner = {
			country_event = { id = ag_delta.20 }
		}
	}
	
	option = {
		name = "ag_delta.14.a"
	}
}

# Attacked Ancient Turret
country_event = {
	id = ag_delta.15
	title = "ag_delta.15.name"
	desc = "ag_delta.15.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ship_in_orbit_room }
	show_sound = event_red_alert
	location = event_target:ag_ancient_delta_star
	is_triggered_only = yes
	
	trigger = {
		from = { is_country_type = ag_ancient_delta_guardian_passive }
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_global_flag = ag_delta_platform_aggressive
				}
			}
			set_global_flag = ag_delta_platform_aggressive
		}
		country_event = { id = ag_delta.20 }
	}
	
	option = {
		name = "ag_delta.15.a"
	}
}

# All turret actived(Hidden)
country_event = {
	id = ag_delta.20
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { NOT = { has_global_flag = ag_delta_platform_aggressive } }
			set_global_flag = ag_delta_platform_aggressive
		}
		every_country = {
			limit = {
				has_country_flag = ag_ancient_delta_guardian_country
				is_same_value = event_target:ag_ancient_delta_guardian_country
				is_country_type = ag_ancient_delta_guardian_passive
			}
			set_country_type = ag_ancient_delta_guardian
			ag_ancient_country_friendly_to_each_other = yes
		}
		random_system = {
			limit = { has_star_flag = ag_ancient_delta_system }
			ag_clear_ship_cloaking_effect = yes
			every_system_ambient_object = {
				limit = { has_ambient_object_flag = ag_ancient_delta_platform }
				create_fleet = {
					name = "NAME_ag_delta_platform_fleet"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						ag_spawn_explosion_effect = { ag_scale = l ag_color = red }
						set_owner = event_target:ag_ancient_delta_guardian_country
						save_global_event_target_as = ag_ancient_delta_platform_1
						create_ship = {
							name = "NAME_ag_delta_platform_ship"
							design = "NAME_ag_delta_platform_hostile"
							prefix = no
							effect = { ag_difficulty_bonus = yes }
						}
						set_location = { target = prev distance = 0 angle = random }
					}
				}
				destroy_ambient_object = this
			}
			every_fleet_in_system = {
				limit = { exists = controller controller = { NOT = { is_same_value = event_target:ag_ancient_delta_guardian_country } } }
				every_controlled_ship = { ag_reduce_hp_percent = { ag_value = 75 } }
				controller = { if = { limit = { NOT = { has_country_flag = ag_ancient_1052_mutex } } set_timed_country_flag = { flag = ag_ancient_1052_mutex days = 2 } country_event = { id = ag_ancient.1052 } } }
			}
		}
	}
}

# on_entering_system_fleet, Notification for entering the Delta Area first time(Actived turrets in system)
fleet_event = {
	id = ag_delta.21
	title = "ag_delta.21.name"
	desc = "ag_delta.21.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_debris_room }
	show_sound = event_yellow_alert
	location = root
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = ag_delta_titan_destroyed }
		owner = { NOT = { has_country_flag = ag_delta_21_fired } }
		has_global_flag = ag_delta_platform_aggressive
		from = { any_ship_in_system = { is_ship_size = ag_delta_platform_hostile } }
	}
	
	immediate = { owner = { set_country_flag = ag_delta_21_fired } }
	
	option = {
		name = "ag_delta.21.a"
	}
}

# on_ship_destroyed_victim, All turrets destroyed(Hidden)
country_event = {
	id = ag_delta.22
	hide_window = yes
	
	fire_only_once = yes
	is_triggered_only = yes
	
	trigger = {
		is_country_type = ag_ancient_delta_guardian
		is_same_value = event_target:ag_ancient_delta_guardian_country
		has_country_flag = ag_ancient_delta_guardian_country
		fromfrom = {
			is_ship_size = ag_delta_platform_hostile
			NOT = { has_ship_flag = ag_set_disable_at_health }
		}
		count_controlled_ship = {
			limit = { is_ship_size = ag_delta_platform_hostile }
			count < 1
		}
	}
	
	immediate = {
		event_target:ag_ancient_delta_shielded_world = { planet_event = { id = ag_delta.25 } }
		from = { country_event = { id = ag_delta.23 } }
	}
}

# Notification for ancient ship spawned
country_event = {
	id = ag_delta.23
	title = "ag_delta.23.name"
	desc = "ag_delta.23.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unknown_ships_room }
	show_sound = event_red_alert
	is_triggered_only = yes
	
	option = {
		name = "ag_delta.23.a"
	}
}

# ancient ship spawned(Hidden)
planet_event = {
	id = ag_delta.25
	hide_window = yes
	
	fire_only_once = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_planet_flag = ag_delta_ringworld_unlock }
	}
	
	immediate = {
		set_planet_flag = ag_delta_ringworld_unlock
		ag_change_pc = { ag_planet_class = pc_ag_ringworld_ocean }
		ag_set_ancient_ringworld = {
			ag_picture = pc_ag_ringworld_ocean
			ag_color = red
			ag_type = habitable
			ag_surface_type = ocean_04
			ag_generate_ruins = yes
		}
		event_target:ag_ancient_delta_guardian_country = { set_timed_country_flag = { flag = ag_delta_titan_cooldown days = 15 } }
		create_fleet = {
			name = "NAME_ag_delta_titan_fleet"
			settings = {
		        spawn_debris = no
			    is_boss = yes
		    }
			effect = {
				ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
				set_owner = event_target:ag_ancient_delta_guardian_country
				create_ship = {
					name = "NAME_ag_delta_titan_ship"
					design = "NAME_ag_delta_titan_hostile"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						ag_set_disable_at_health = { ag_disable_type = event }
						random_list = {
							10 = {
								modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
								ag_set_ship_invincible = { ag_days = 1 }
							}
							10 = { ag_set_ship_invincible = { ag_days = 2 } }
							10 = {
								modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
								ag_set_ship_invincible = { ag_days = 3 }
							}
						}
					}
				}
				set_location = {
					target = event_target:ag_ancient_delta_shielded_world
					distance = 0
					angle = random
				}
				set_fleet_stance = aggressive
			    set_aggro_range = 500
				ag_delta_titan_action = yes
		    }
		}
		if = {
			limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 1 } } }
			event_target:ag_ancient_delta_star.solar_system = { every_ship_in_system = {
				limit = { exists = owner owner = { NOT = { is_same_value = event_target:ag_ancient_delta_guardian_country } } }
				random_list = {
					60 = {
						modifier = { factor = 0.9 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
						modifier = { factor = 0.75 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } }
					}
					40 = { solar_system = { every_fleet_in_system = {
						limit = { exists = owner owner = { is_hostile = root } }
						every_controlled_ship = {
							limit = { NOT = { has_ship_flag = ag_ancient_delta_titan_debuffed } }
							set_timed_ship_flag = { flag = ag_ancient_delta_titan_debuffed days = 2 }
							ag_spawn_buff_effect = { ag_type = 3 ag_scale = s ag_color = red }
							ag_reduce_hp_percent = { ag_value = 10 }
							set_timed_ship_flag = { flag = ag_delta_titan_ability_effect days = 8 }
							ship_event = { id = ag_delta.72 }
						}
					} } }
				}
			} }
		}
		ag_clear_ship_cloaking_effect = yes
	}
}

# on_ship_disabled, Ancient ship heals itself
ship_event = {
	id = ag_delta.26
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = { is_ship_size = ag_delta_titan_hostile }
	
	immediate = {
		if = {
			limit = { NOT = { has_ship_flag = ag_delta_titan_self_repaired } }
			repair_ship = yes
			ag_spawn_extra_lives_effect = yes
			set_disabled = no
			add_modifier = { modifier = "ag_delta_titan_power" days = 30 }
			set_ship_flag = ag_delta_titan_self_repaired
		}
		else = {
			random_list = {
				10 = {
					modifier = {
						factor = 0
						fleet = { check_variable = { which = ag_delta_titan_repair_counter value > 5 } }
					}
					fleet = { change_variable = { which = ag_delta_titan_repair_counter value = 1 } }
					random_list = {
						50 = { repair_ship = yes ag_spawn_extra_lives_effect = yes }
						25 = { repair_percentage = 0.8 }
						25 = { repair_percentage = 0.5 }
					}
					set_disabled = no
					ag_spawn_extra_lives_effect = yes
					remove_modifier = "ag_delta_titan_power"
					add_modifier = { modifier = "ag_delta_titan_power" days = 30 }
				}
				10 = {
					modifier = { factor = 4 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
					modifier = {
						factor = 0.25
						fleet = { check_variable = { which = ag_delta_titan_repair_counter value < 1 } }
					}
					modifier = {
						factor = 2.0
						fleet = { check_variable = { which = ag_delta_titan_repair_counter value > 2 } }
					}
					from.owner = {
						country_event = { id = ag_delta.31 }
						save_event_target_as = ag_ancient_delta_guardian_killer
						add_threat = { who = this amount = 50 }
					}
					every_country = {
						limit = { NOT = { is_same_value = root.from.owner } }
						country_event = { id = ag_delta.32 }
					}
					every_country = {
						if = {
							limit = { has_modifier = ag_ancient_delta_weakness }
							remove_modifier = "ag_ancient_delta_weakness"
						}
						if = {
							limit = { has_country_flag = ag_has_ancient_delta_weakness }
							remove_country_flag = ag_has_ancient_delta_weakness
						}
						if = {
							limit = { has_special_project = ag_find_ancient_delta_weakness }
							abort_special_project = {
								type = "ag_find_ancient_delta_weakness"
								location = capital_scope
							}
						}
					}
					set_global_flag = ag_delta_titan_destroyed
					destroy_ship = this
				}
			}
		}
	}
}

# Notification: Amcient Ship Destroyed, for killer
country_event = {
	id = ag_delta.31
	title = "ag_delta.31.name"
	desc = "ag_delta.31.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	location = event_target:ag_ancient_delta_star
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = ag_delta_31_fired
		}
	}
	
	immediate = {
		set_country_flag = ag_delta_31_fired
	}
	
	option = {
		name = "ag_delta.31.a"
	}
}
# Notification: Amcient Ship Destroyed, for other
country_event = {
	id = ag_delta.32
	title = "ag_delta.32.name"
	desc = "ag_delta.32.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_ancient_delta_star
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = ag_delta_32_fired
		}
	}
	
	immediate = {
		set_country_flag = ag_delta_32_fired
	}
	
	option = {
		name = "ag_delta.32.a"
	}
}

# on_ship_destroyed_victim, Give Delta Installation Defensive System's weakness research project if player lost too many ships
country_event = {
	id = ag_delta.35
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			OR = {
				is_country_type = ag_ancient_delta_guardian_passive
				is_country_type = ag_ancient_delta_guardian
			}
			has_country_flag = ag_ancient_delta_guardian_country
			is_same_value = event_target:ag_ancient_delta_guardian_country
		}
		is_ai = no
		NOR = {
			has_global_flag = ag_delta_titan_destroyed
			has_country_flag = ag_has_ancient_delta_weakness
		}
	}
	
	immediate = {
		if = {
			limit = {
				check_variable = {
					which = ag_ancient_delta_guardian_killcount
					value < 1
				}
			}
			set_variable = {
				which = ag_ancient_delta_guardian_killcount
				value = 1
			}
		}
		fromfrom = {
			root = {
				ag_hostile_kill_counter = {
					ag_variable_name = ag_ancient_delta_guardian_killcount
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ag_ancient_delta_guardian_killcount
					value > 512
				}
				NOR = {
					has_global_flag = ag_delta_titan_destroyed
					has_country_flag = ag_has_ancient_delta_weakness
				}
			}
			set_variable = {
				which = ag_ancient_delta_guardian_killcount
				value = 512
			}
			random_list = {
				75 = { }
				25 = {
					country_event = { id = ag_delta.36 days = 30 random = 30 }
					set_country_flag = ag_has_ancient_delta_weakness
				}
			}
		}
	}
}
country_event = {
	id = ag_delta.36
	title = "ag_delta.36.name"
	desc = "ag_delta.36.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_sabotaged_ship_room }
	show_sound = event_yellow_alert
	
	is_triggered_only = yes

	trigger = { NOT = { has_global_flag = ag_delta_titan_destroyed } }
	
	option = {
		name = "ag_delta.36.a"
		enable_special_project = {
			name = "ag_find_ancient_delta_weakness"
			location = capital_scope
			owner = root
		}
	}
	option = {
		name = "ag_delta.36.b"
		add_resource = { influence = @ag_end_event_influence_large }
	}
}
country_event = {
	id = ag_delta.37
	title = "ag_delta.37.name"
	desc = "ag_delta.37.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	
	is_triggered_only = yes

	option = {
		name = "ag_delta.37.a"
		if = {
			limit = { NOT = { has_modifier = ag_ancient_delta_weakness } }
			add_modifier = { modifier = ag_ancient_delta_weakness days = -1 }
		}
	}
}

# on_colonized, Colonized Delta Area's ringworld
planet_event = {
	id = ag_delta.40
	title = "ag_delta.40.name"
	desc = "ag_delta.40.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_ringworld_habitable_ocean_room }
	location = event_target:ag_ancient_delta_shielded_world
	is_triggered_only = yes
	trigger = {
		is_same_value = event_target:ag_ancient_delta_shielded_world
		NOT = { has_planet_flag = ag_delta_40_fired }
	}
	immediate = {
		set_planet_flag = ag_delta_40_fired
		if = { limit = { NOT = { has_building = ag_ancient_delta_archive } } add_building = ag_ancient_delta_archive }
	}
	option = { name = "ag_delta.40.a" }
}

# Active Ancient Databank
country_event = {
	id = ag_delta.41
	title = "ag_delta.41.name"
	desc = "ag_delta.41.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_excavation_team_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_ancient_delta_shielded_world
	is_triggered_only = yes
	immediate = {
		random_list = {
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.25 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.75 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2 } }
		}
		reroll_random = yes
		random_list = {
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { }
		}
		reroll_random = yes
	}
	after = { hidden_effect = { set_variable = { which = ag_ancient_knowledge_common_var value = 0 } } }
	option = {
		name = "ag_delta.41.a"
		ag_add_ancient_knowledge = {
			ag_value = ag_ancient_knowledge_common_var
			ag_notification_desc = ""
		}
	}
}

# Reward: Ancient Turrets
country_event = {
	id = ag_delta.42
	title = "ag_delta.42.name"
	desc = "ag_delta.42.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_finding_loot
	location = event_target:ag_ancient_delta_shielded_world
	is_triggered_only = yes
	
	option = {
		name = "ag_delta.42.a"
		ag_add_research_option = { ag_tech = tech_ag_delta_platform }
	}
}
country_event = {
	id = ag_delta.420
	hide_window = yes
	is_triggered_only = yes
	trigger = { last_increased_tech = tech_ag_delta_platform }
	immediate = {
		if = {
			limit = { has_country_flag = ag_delta_62_fired }
			ag_add_ship_design = { ag_design = ag_delta_platform_10 }
		}
		else = { ag_add_ship_design = { ag_design = ag_delta_platform_00 } }
	}
}

# Reward: Ancient Ship
country_event = {
	id = ag_delta.43
	title = "ag_delta.43.name"
	desc = "ag_delta.43.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_finding_loot
	location = event_target:ag_ancient_delta_shielded_world
	is_triggered_only = yes
	
	option = {
		name = "ag_delta.43.a"
		ag_add_research_option = { ag_tech = tech_ag_delta_titan }
	}
}

# Construction Sections
country_event = {
	id = ag_delta.44
	title = "ag_delta.44.name"
	desc = {
		trigger = { NOT = { has_country_flag = ag_known_construction_section } }
		text = "ag_delta.44.a.desc"
	}
	desc = {
		trigger = { has_country_flag = ag_known_construction_section }
		text = "ag_delta.44.b.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ringworld_room }
	show_sound = event_finding_loot
	location = event_target:ag_ancient_delta_shielded_world
	is_triggered_only = yes
	
	immediate = {
		event_target:ag_ancient_delta_shielded_world = { solar_system = { random_system_planet = {
			limit = { has_planet_flag = ag_ancient_construction_section_0 }
			save_event_target_as = ag_ancient_construction_section_loc
		} } }
	}
	
	option = {
		name = "ag_delta.44.a"
		enable_special_project = {
			name = "ag_delta_construction_section_1"
			location = event_target:ag_ancient_construction_section_loc
			owner = root
		}
		ai_chance = { factor = 1000 }
	}
	option = {
		name = "ag_delta.44.b"
		add_resource = { influence = @ag_end_event_influence_medium }
		ai_chance = { factor = 0 }
	}
}
# Successfully unlocked Construction Sections
country_event = {
	id = ag_delta.45
	title = "ag_delta.45.name"
	desc = "ag_delta.45.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ringworld_room }
	show_sound = event_think_tank_build_complete
	location = from
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = ag_delta_construction_section_unlocked
		set_country_flag = ag_known_construction_section
		event_target:ag_ancient_delta_shielded_world = { solar_system = { ag_spawn_ancient_construction_section = yes } }
		event_target:ag_ancient_delta_guardian_country = { destroy_country = yes }
	}
	
	option = { name = "ag_delta.45.a" }
}
# Failed unlocked Construction Sections, spawn ancient drones
country_event = {
	id = ag_delta.46
	title = "ag_delta.46.name"
	desc = "ag_delta.46.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_fleet_evil_room }
	show_sound = event_red_alert
	location = from
	is_triggered_only = yes
	immediate = { event_target:ag_ancient_delta_guardian_country = { ag_delta_area_drones_spawn = yes } }
	option = { name = "ag_delta.46.a" }
}
# on_ship_destroyed_victim, Ancient Drones destroyed
country_event = {
	id = ag_delta.47
	hide_window = yes
	
	fire_only_once = yes
	is_triggered_only = yes
	
	trigger = {
		is_country_type = ag_ancient_delta_guardian
		is_same_value = event_target:ag_ancient_delta_guardian_country
		has_country_flag = ag_ancient_delta_guardian_country
		fromfrom = {
			NOT = { has_ship_flag = ag_set_disable_at_health }
			is_ship_size = ag_delta_drone_hostile
		}
		count_controlled_ship = {
			limit = { is_ship_size = ag_delta_drone_hostile }
			count < 1
		}
	}
	
	immediate = {
		from = { country_event = { id = ag_delta.48 } }
		destroy_country = yes
		every_country = {
			if = {
				limit = { has_modifier = ag_ancient_delta_weakness }
				remove_modifier = "ag_ancient_delta_weakness"
			}
			if = {
				limit = { has_country_flag = ag_has_ancient_delta_weakness }
				remove_country_flag = ag_has_ancient_delta_weakness
			}
			if = {
				limit = { has_special_project = ag_find_ancient_delta_weakness }
				abort_special_project = { type = "ag_find_ancient_delta_weakness" location = capital_scope }
			}
		}
	}
}

# Notification: Ancient Drones Destroyed
country_event = {
	id = ag_delta.48
	title = "ag_delta.48.name"
	desc = "ag_delta.48.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_space_battle
	location = event_target:ag_ancient_delta_star
	
	is_triggered_only = yes
	
	trigger = { NOT = { has_country_flag = ag_delta_48_fired } }
	
	immediate = {
		set_country_flag = ag_delta_48_fired
		event_target:ag_ancient_delta_shielded_world = { solar_system = { random_system_planet = {
			limit = { has_planet_flag = ag_ancient_construction_section_0 }
			save_event_target_as = ag_ancient_construction_section_loc
		} } }
	}
	
	option = {
		name = "ag_delta.48.a"
		add_resource = { influence = @ag_end_event_influence_medium }
		ai_chance = { factor = 0 }
	}
	option = {
		name = "ag_delta.48.b"
		enable_special_project = {
			name = "ag_delta_construction_section_2"
			location = event_target:ag_ancient_construction_section_loc
			owner = root
		}
		ai_chance = { factor = 1000 }
	}
}

# Construction Section unlocked
country_event = {
	id = ag_delta.49
	title = "ag_delta.49.name"
	desc = "ag_delta.49.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ringworld_room }
	show_sound = event_think_tank_build_complete
	location = from
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = ag_delta_construction_section_unlocked
		set_country_flag = ag_known_construction_section
		event_target:ag_ancient_delta_shielded_world = { solar_system = { ag_spawn_ancient_construction_section = yes } }
	}
	
	option = { name = "ag_delta.49.a" }
}

# Built Ancient Turret first time
country_event = {
	id = ag_delta.50
	title = "ag_delta.50.name"
	desc = "ag_delta.50.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	option = { name = "ag_delta.50.a" custom_tooltip = "ag_use_actions" }
}

# Ancient Titan, stage 1/3
country_event = {
	id = ag_delta.51
	title = "ag_delta.51.name"
	desc = "ag_delta.51.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_ringworld_build_start
	location = fromfromfrom
	
	is_triggered_only = yes
	
	option = { name = "ag_delta.51.a" }
	option = {
		name = "ag_auto_upgrade"
		trigger = { fromfromfrom = { NOT = { has_megastructure_flag = ag_auto_upgrade_megastructure } } }
		ag_set_auto_upgrade_megastructure = yes
	}
}
# Ancient Titan, stage 2/3
country_event = {
	id = ag_delta.52
	title = "ag_delta.52.name"
	desc = "ag_delta.52.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_dyson_sphere_build_upgrade_frame
	location = fromfromfrom
	
	is_triggered_only = yes
	
	option = { name = "ag_delta.52.a" }
	option = {
		name = "ag_auto_upgrade"
		trigger = { fromfromfrom = { NOT = { has_megastructure_flag = ag_auto_upgrade_megastructure } } }
		ag_set_auto_upgrade_megastructure = yes
	}
}
# Ancient Titan, stage 3/3
country_event = {
	id = ag_delta.53
	title = "ag_delta.53.name"
	desc = "ag_delta.53.desc"
	inline_script = "events/ag_ancient_titan_built_options"
}
# Ancient Titan, stage 1/3 (others)
country_event = {
	id = ag_delta.54
	title = "ag_delta.54.name"
	desc = "ag_delta.54.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_megastructure_construction_room }
	show_sound = event_mega_structure_other_empire_build_complete
	location = fromfromfrom
	
	is_triggered_only = yes
	
	option = { name = "ag_delta.54.a" }
}
# Ancient Titan, stage 3/3 (others)
country_event = {
	id = ag_delta.55
	title = "ag_delta.55.name"
	desc = "ag_delta.55.desc"
	inline_script = "events/ag_ancient_titan_built_other_options"
}

# Bypass ancient security system
# country_event = {
	# id = ag_delta.60
	# title = "ag_delta.60.name"
	# desc = "ag_delta.60.desc"
	# diplomatic = yes
	# custom_gui = "ag_ancient_event_window"
	# custom_gui_option = "ag_ancient_event_option"
	# picture_event_data = { room = ag_event_ancient_AI_room }
	# show_sound = event_mystic_reveal
	
	# mean_time_to_happen = {
		# years = 5
		# modifier = { factor = 0.5 has_country_flag = ag_has_ancient_code }
	# }
	
	# trigger = {
		# NOR = {
			# has_country_flag = ag_delta_ships_unlocked
			# has_country_flag = ag_delta_60_fired
		# }
		# any_controlled_ship = { OR = {
			# is_ship_size = ag_delta_titan_0
			# is_ship_size = ag_delta_platform_0
			# is_ship_size = ag_delta_platform_00
		# } }
		# any_owned_planet = {
			# has_building = ag_ancient_delta_archive
			# is_same_value = event_target:ag_ancient_delta_shielded_world
		# }
	# }
	
	# immediate = { set_country_flag = ag_delta_60_fired }
	
	# option = {
		# name = "ag_delta.60.a"
		# custom_tooltip = "ag_delta.60.a.tooltip"
		# hidden_effect = {
			# ag_give_research_project = { ag_project_id = @ag_delta_ship_unlock_project_id }
			# if = { limit = { is_ai = yes } country_event = { id = ag_delta.61 days = 1800 } }
		# }
		# ai_chance = { factor = 1000 }
	# }
	# option = {
		# name = "ag_delta.60.b"
		# add_resource = { influence = @ag_end_event_influence_medium }
		# ai_chance = { factor = 0 }
	# }
# }
country_event = {
	id = ag_delta.61
	title = "ag_delta.61.name"
	desc = "ag_delta.61.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ancient_AI_room }
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	immediate = {
		set_country_flag = ag_has_ancient_code
		country_event = { id = ag_delta.62 days = 5 random = 55 }
	}
	
	option = { name = "ag_delta.61.a" }
}

# Upgrade ships(Hidden)
country_event = {
    id = ag_delta.62
    hide_window = yes
	is_triggered_only = yes
	
	trigger = { has_country_flag = ag_delta_ships_unlocked }
	
	immediate = {
		set_country_flag = ag_delta_62_fired
		if = {
			limit = { ag_has_ship_design = { ag_design = ag_delta_platform_00 } }
			ag_add_ship_design = { ag_design = ag_delta_platform_10 }
		}
		ag_remove_ship_design = { ag_design = ag_delta_platform_00 }
		if = {
			limit = { any_controlled_ship = { is_ship_size = ag_delta_titan_0 } }
			while = {
				limit = { any_controlled_ship = { is_ship_size = ag_delta_titan_0 } }
				random_controlled_ship = {
					limit = { is_ship_size = ag_delta_titan_0 }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
					fleet = {
						if = {
							limit = { exists = leader }
							leader = {
								save_global_event_target_as = ag_target_leader_on_fleet
								prev = { save_global_event_target_as = ag_target_fleet_swap }
								unassign_leader = this
							}
						}
						ag_create_delta_titan_player = { ag_unlock_ship = yes ag_owner = root ag_clone_disable_info = yes }
					}
					delete_ship = this
					if = {
						limit = { exists = event_target:ag_target_fleet_swap }
						event_target:ag_target_fleet_swap = {
							assign_leader = event_target:ag_target_leader_on_fleet
						}
						clear_global_event_target = ag_target_fleet_swap
						clear_global_event_target = ag_target_leader_on_fleet
					}
				}
			}
		}
		if = {
			limit = { any_controlled_ship = { is_ship_size = ag_delta_platform_0 } }
			while = {
				limit = { any_controlled_ship = { is_ship_size = ag_delta_platform_0 } }
				random_controlled_ship = {
					limit = { is_ship_size = ag_delta_platform_0 }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
					fleet = {
						create_ship = {
							name = "NAME_ag_delta_platform_ship"
							design = "NAME_ag_delta_platform_1"
							prefix = no
							effect = {
								copy_flags_and_variables_from = prevprev
								ag_difficulty_bonus = yes
							}
						}
					}
					delete_ship = this
				}
			}
		}
		if = {
			limit = { any_controlled_ship = { is_ship_size = ag_delta_platform_00 } }
			while = {
				limit = { any_controlled_ship = { is_ship_size = ag_delta_platform_00 } }
				random_controlled_ship = {
					limit = { is_ship_size = ag_delta_platform_00 }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = red }
					create_fleet = {
						name = "NAME_ag_delta_platform_fleet"
						settings = {
							can_upgrade = no 
							can_change_composition = no 
							can_change_leader = no 
							spawn_debris = no 
						}
						effect = {
							set_fleet_flag = ag_delta_platform_player
							set_owner = from
							create_ship = {
								name = "NAME_ag_delta_platform_ship"
								design = "NAME_ag_delta_platform_10"
								prefix = no
								effect = {
									copy_flags_and_variables_from = prevprev
									ag_difficulty_bonus = yes
								}
							}
							set_location = { target = prev distance = -1 angle = 0 }
						}
					}
					delete_ship = this
				}
			}
		}
	}
}

# Deploy Ancient Turrets
fleet_event = {
	id = ag_delta.70
	hide_window = yes
	is_triggered_only = yes
	immediate = { ag_deploy_ancient_turret_effect = yes }
}

# Ancient Titan's ability
country_event = {
	id = ag_delta.71
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = { fromfrom = {
		NOT = { has_ship_flag = ag_delta_titan_cooldown }
		is_ship_size = ag_delta_titan_hostile
	} }
	
	immediate = {
		fromfrom = {
			set_timed_ship_flag = { flag = ag_delta_titan_cooldown days = 30 }
			if = { limit = { has_hp_percentage > 0.25 } repair_ship = yes }
			else = { random_list = { 75 = { } 25 = { repair_ship = yes ag_spawn_extra_lives_effect = yes } } }
			random_list = {
				60 = {
					modifier = { factor = 0.9 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
					modifier = { factor = 0.75 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } }
				}
				40 = {
					modifier = { factor = 0.25 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
					modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 0 } } }
					solar_system = { every_fleet_in_system = {
						limit = { exists = owner owner = { is_hostile = root } }
						every_controlled_ship = {
							limit = { NOT = { has_ship_flag = ag_ancient_delta_titan_debuffed } }
							set_timed_ship_flag = { flag = ag_ancient_delta_titan_debuffed days = 2 }
							ag_spawn_buff_effect = { ag_type = 3 ag_scale = s ag_color = red }
							ag_reduce_hp_percent = { ag_value = 10 }
							set_timed_ship_flag = { flag = ag_delta_titan_ability_effect days = 8 }
							ship_event = { id = ag_delta.72 }
						}
					} }
				}
			}
		}
	}
}
ship_event = {
	id = ag_delta.72
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { is_in_combat = yes has_ship_flag = ag_delta_titan_ability_effect }
			if = {
				limit = { check_modifier_value = { modifier = ship_shield_damage_mult value > 0.05 } }
				set_variable = { which = ag_delta_titan_shield_damage_var value = 0 }
				export_modifier_to_variable = { modifier = ship_shield_damage_mult variable = ag_delta_titan_shield_damage_var }
				multiply_variable = { which = ag_delta_titan_shield_damage_var value = -1 }
				change_variable = { which = ag_delta_titan_shield_damage_var value = 0.05 }
				add_modifier = { modifier = "ag_delta_titan_shield_damage_debuff" multiplier = ag_delta_titan_shield_damage_var days = -1 }
				clear_variable = ag_delta_titan_shield_damage_var
			}
			if = {
				limit = { check_modifier_value = { modifier = ship_armor_damage_mult value > 0.05 } }
				set_variable = { which = ag_delta_titan_armor_damage_var value = 0 }
				export_modifier_to_variable = { modifier = ship_armor_damage_mult variable = ag_delta_titan_armor_damage_var }
				multiply_variable = { which = ag_delta_titan_armor_damage_var value = -1 }
				change_variable = { which = ag_delta_titan_armor_damage_var value = 0.05 }
				add_modifier = { modifier = "ag_delta_titan_armor_damage_debuff" multiplier = ag_delta_titan_armor_damage_var days = -1 }
				clear_variable = ag_delta_titan_armor_damage_var
			}
			if = {
				limit = { check_modifier_value = { modifier = ship_hull_damage_mult value > 0.05 } }
				set_variable = { which = ag_delta_titan_hull_damage_var value = 0 }
				export_modifier_to_variable = { modifier = ship_hull_damage_mult variable = ag_delta_titan_hull_damage_var }
				multiply_variable = { which = ag_delta_titan_hull_damage_var value = -1 }
				change_variable = { which = ag_delta_titan_hull_damage_var value = 0.05 }
				add_modifier = { modifier = "ag_delta_titan_hull_damage_debuff" multiplier = ag_delta_titan_hull_damage_var days = -1 }
				clear_variable = ag_delta_titan_hull_damage_var
			}
			ship_event = { id = ag_delta.72 days = 1 }
		}
		else = {
			while = { limit = { has_modifier = "ag_delta_titan_shield_damage_debuff" } remove_modifier = "ag_delta_titan_shield_damage_debuff" }
			while = { limit = { has_modifier = "ag_delta_titan_armor_damage_debuff" } remove_modifier = "ag_delta_titan_armor_damage_debuff" }
			while = { limit = { has_modifier = "ag_delta_titan_hull_damage_debuff" } remove_modifier = "ag_delta_titan_hull_damage_debuff" }
		}
	}
}

ship_event = {
	id = ag_delta.77
	hide_window = yes
	is_triggered_only = yes
	trigger = { OR = {
		is_ship_size = ag_delta_platform_00
		is_ship_size = ag_delta_platform_10
	} }
	immediate = { fleet = { set_fleet_flag = ag_delta_platform_player } }
}

# Situation events.
country_event = {
	id = ag_delta.80
	title = "ag_delta.80.name"
	desc = "ag_delta.80.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = root
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = ag_delta_situation_started }
		has_global_flag = ag_delta_titan_destroyed
		exists = event_target:ag_ancient_delta_shielded_world
		event_target:ag_ancient_delta_shielded_world = {
			exists = owner
			owner = { is_same_value = root }
			has_building = ag_ancient_delta_archive
			has_ground_combat = no
			ag_has_researcher = yes
		}
	}
	immediate = { set_country_flag = ag_delta_situation_started }
	option = {
		name = "ag_delta.80.a"
		start_situation = { type = "ag_delta_situation" target = event_target:ag_ancient_delta_shielded_world }
	}
}
country_event = {
	id = ag_delta.81
	title = "ag_delta.81.name"
	desc = "ag_delta.81.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = root
	is_triggered_only = yes
	immediate = {
		random_list = {
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2.5 } }
			10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 3 } }
		}
		reroll_random = yes
		random_list = {
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
			10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
			10 = { }
		}
		reroll_random = yes
	}
	after = { hidden_effect = {
		# clear_variable = ag_ancient_knowledge_common_var
		destroy_situation = from
	} }
	option = { name = "ag_delta.81.a" ag_add_ancient_knowledge = { ag_value = ag_ancient_knowledge_common_var ag_notification_desc = "" } }
}
