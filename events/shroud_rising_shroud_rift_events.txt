#####################################################

# Shroud Rising Eye of Terror
# Written by LastLeviathan

#####################################################

namespace = shroud_rising_shroud_rift

#####################################################
# shroud_rising_shroud_rift.0 | (HIDDEN) Triggers the rifts
# shroud_rising_shroud_rift.99 | (HIDDEN) Spawn energy disturbance
# shroud_rising_shroud_rift.991 | Nightmares for system owner
# shroud_rising_shroud_rift.999 | (HIDDEN) Incease size of disturbance
# shroud_rising_shroud_rift.9991 | Nightmares worsen for system owner
# shroud_rising_shroud_rift.9992 | System entry event with small tear
# shroud_rising_shroud_rift.1 | (HIDDEN) Spawn Rift #1
# shroud_rising_shroud_rift.2 | Announce to owner (if there is one) of rift
# shroud_rising_shroud_rift.3 | Announce to all other countries rift
# shroud_rising_shroud_rift.4 | (HIDDEN) Rift Collapses
# shroud_rising_shroud_rift.5 | Rift Collapse Announce 
# shroud_rising_shroud_rift.6 | (HIDDEN) Spawn Rift #2
# shroud_rising_shroud_rift.7 | Announce to owner (if there is one) of rift
# shroud_rising_shroud_rift.8 | Announce to all other countries rift
# shroud_rising_shroud_rift.81 | (HIDDEN) Collapse of rift
# shroud_rising_shroud_rift.82 | Announce to all other countries collapse of rift
# shroud_rising_shroud_rift.9 | (HIDDEN) Rift #2 Closed
# shroud_rising_shroud_rift.10 | Rift #2 Closed Announce
# shroud_rising_shroud_rift.11 | (HIDDEN) Spawn Rift #3
# shroud_rising_shroud_rift.12 | Announce to owner (if there is one) of rift
# shroud_rising_shroud_rift.13 | Announce to all other countries rift
# shroud_rising_shroud_rift.14 | (HIDDEN) Rift Collapses
# shroud_rising_shroud_rift.15 | Rift Collapse Announce 
# shroud_rising_shroud_rift.16 | (HIDDEN) Rift Closed
# shroud_rising_shroud_rift.17 | Rift #3 Closed Announce
# shroud_rising_shroud_rift.18 | (HIDDEN) Spawn Rift #4
# shroud_rising_shroud_rift.19 | Announce to owner (if there is one) of rift
# shroud_rising_shroud_rift.20 | Announce to all other countries rift
# shroud_rising_shroud_rift.201 | (HIDDEN) Collapse of rift
# shroud_rising_shroud_rift.202 | Announce to all other countries collapse of rift
# shroud_rising_shroud_rift.21 | (HIDDEN) Rift Closed
# shroud_rising_shroud_rift.22 | Rift #4 Closed Announce
# shroud_rising_shroud_rift.23 | (HIDDEN) On_action global event country unstable Rift 
# shroud_rising_shroud_rift.24 | (HIDDEN)  Spawn random temporary/unstable Rift 
# shroud_rising_shroud_rift.25 | Announce to owner (if there is one) of rift
# shroud_rising_shroud_rift.26 | Announce to all other countries rift
# shroud_rising_shroud_rift.27 | (HIDDEN) Rift Collapses
# shroud_rising_shroud_rift.28 | Rift Collapse Announce 
# shroud_rising_shroud_rift.29 | (HIDDEN) Rift Closed
# shroud_rising_shroud_rift.30 | Unstable Rift Closed Announce
# shroud_rising_shroud_rift.100 | (HIDDEN) Shroud army Spawn chance on rift influence worlds
# shroud_rising_shroud_rift.101 | (HIDDEN) Spawn of Armies
# shroud_rising_shroud_rift.102 | Announce to owner of invasion
# shroud_rising_shroud_rift.103 | (HIDDEN) Shroud army Spawn chance on eye of terror influence worlds
# shroud_rising_shroud_rift.104 | (HIDDEN) Spawn of Armies
# shroud_rising_shroud_rift.105 | Announce to owner of invasion
# shroud_rising_shroud_rift.106 | Entry of Shroud Rift system for the first time
# shroud_rising_shroud_rift.9000 | Announce that all 3 rifts are closed
#####################################################

#####################################################
#### SHROUD RIFTS #########################
#####################################################

#####  Initial Setup (HIDDEN EVENT) ############################
country_event = {
	id = shroud_rising_shroud_rift.0
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = shroud_rising_shroud_rift.99 days = 36 random = 45 } #spawns the small disturbance	 3600 (10 years)
		
	}
}

# Tiny Tear appears quietly, causing solar system effects
country_event = {
	id = shroud_rising_shroud_rift.99
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	immediate = {
		
		random_system = {
			limit = { 				
				is_capital_system = no				
				NOT = {
					has_megastructure = lgate_base					
				}
				#has_owner = yes #for testing
				#owner = { is_ai = no } #for testing
				NOT = {
					any_system_planet = { has_planet_flag = has_shroud_monolith }
				}
				any_system_planet = {
						AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
						OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah	
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken	
							is_planet_class = pc_toxic
						}
				}
					
				
			}
			#set_name = "RIFT ONE SYSTEM" ####################FOR TESTING ONLY
			set_star_flag = shroud_rift_system_1
			set_star_flag = shroud_nightmares_1
			save_event_target_as = shroud_rift_system_1	
			every_system_planet = {
				limit = { is_star = no }
				add_modifier = { modifier = shroud_tear_effect }								
			}
			random_system_planet = {
				limit = {
					AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
					OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken
							is_planet_class = pc_toxic
					}	
				}			
				set_planet_flag = shroud_rift_planet				
				set_planet_flag = shroud_rift_1_planet				
				create_ambient_object = {
					type = "eye_of_terror_1"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = eye_of_terror_system_effect_1
					set_location = {
						target = prev
						distance = 0
						angle = 90
					}
				}		
			}
		}
		# triggers next stage (bigger disturbance)
		every_country = {
			limit = { is_country_type = global_event }
			country_event = { id = shroud_rising_shroud_rift.999 days = 1800 random = 30 } 		
		}
	}	
	
}

# System event shroud nightmares (System owner only)
country_event = {
	id = shroud_rising_shroud_rift.991
	hide_window = no 
	title = "shroud_rising_shroud_rift.991.name"
	desc = "shroud_rising_shroud_rift.991.desc"
	picture = GFX_evt_zro_2
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	fire_only_once = yes	
	location = event_target:shroud_nightmare_system_1
	
	trigger = {
			# is_ai = no
			owner = {				
				any_system_within_border = {					
					has_star_flag = shroud_rift_system_1
					has_star_flag = shroud_nightmares_1
				}
			}
		
	}

	immediate = {		
		set_country_flag = eye_of_terror_country #set for the Strange Readings Chain
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_1
				}
			save_event_target_as = shroud_nightmare_system_1
		}		
	}
	
	option = {
		name = shroud_rising_shroud_rift.991.a
		
		
	}	
	
	option = {
		name = shroud_rising_shroud_rift.991.b	
		 trigger = {
				owner = { OR = { has_ethic = ethic_materialist has_ethic = ethic_fanatic_materialist  } }
		 }
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.991.c
		 trigger = {
				owner = { OR = { has_ethic = ethic_spiritualist has_ethic = ethic_fanatic_spiritualist  } }
		 }
		
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.991.d
		 trigger = {
				owner = {
					has_civic = civic_shroud_worship
				}
		 }
		
		
	}
	
}


# Tear gets larger, turns into Small Tear and triggers rift
country_event = {
	id = shroud_rising_shroud_rift.999
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
 
	immediate = {	
		set_global_flag = small_tear_active
		random_system = {
			limit = { has_star_flag = shroud_rift_system_1 }
			remove_star_flag = shroud_nightmares_1
			set_star_flag = shroud_nightmares_2
			random_system_ambient_object = {
				limit = { has_ambient_object_flag = eye_of_terror_system_effect_1 }
				destroy_ambient_object = this
			} 
			every_system_planet = {
				limit = { is_star = no }							
					add_modifier = { modifier = shroud_tear_effect_2  }			
					remove_modifier = shroud_tear_effect 							
			}			
			random_system_planet = {
				limit = {
					has_planet_flag = shroud_rift_1_planet
				}			
						
				create_ambient_object = {
					type = "eye_of_terror_2"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = eye_of_terror_system_effect_2
					set_location = {
						target = prev
						distance = 0
						angle = 90
					}
				}		
			}
		
		
		}
		# investigate the readings		
		every_country = {
			limit = { is_country_type = default }
			country_event = { id = shroud_rising_sidequests.1 days = 60 random = 20 }		
		}
		# galactic news story		
		every_country = {
			limit = { is_country_type = default }
			country_event = { id = shroud_rising_eye_of_terror.1 days = 1800 random = 30 }	#1800	
		}
		# triggers rifts
		every_country = {
			limit = { is_country_type = global_event }
			country_event = { id = shroud_rising_shroud_rift.1 days = 3600 random = 60 } 		#3600
		}
		
	}
	
}

# System event shroud nightmares (System owner only)
country_event = {
	id = shroud_rising_shroud_rift.9991
	hide_window = no 
	title = "shroud_rising_shroud_rift.9991.name"
	desc = "shroud_rising_shroud_rift.9991.desc"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	fire_only_once = yes
	location = event_target:shroud_nightmare_system_2
	
	trigger = {
			# is_ai = no
			owner = {				
				any_system_within_border = {					
					has_star_flag = shroud_rift_system_1
					has_star_flag = shroud_nightmares_2
				}
			}
		
	}

	immediate = {		
		set_country_flag = shroud_rift_1_country #set for the Strange Readings Chain
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_1
				}
		save_event_target_as = shroud_nightmare_system_2
		}
	}

	option = {
		name = shroud_rising_shroud_rift.9991.a
		
		
	}	
	
	option = {
		name = shroud_rising_shroud_rift.9991.b	
		 trigger = {
				owner = { OR = { has_ethic = ethic_materialist has_ethic = ethic_fanatic_materialist  } }
		 }
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.9991.c
		 trigger = {
				owner = { OR = { has_ethic = ethic_spiritualist has_ethic = ethic_fanatic_spiritualist  } }
		 }
		
	}
	
	
	option = {
		name = shroud_rising_shroud_rift.9991.d
		 trigger = {
				owner_species = { has_trait = trait_psionic  }
		 }
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.9991.e
		 trigger = {
				owner = {
					has_civic = civic_shroud_worship
				}
		 }
		
		
	}
}


########################################
# System Entry Event ######################
########################################

# System with tear first entry
fleet_event = {
	id = shroud_rising_shroud_rift.9992
	title = "shroud_rising_shroud_rift.9992.name"
	desc = "shroud_rising_shroud_rift.9992.desc"
	picture = GFX_evt_ship_travel
	show_sound = event_psionic
	is_triggered_only = yes
	location = FROM
		
	trigger = {
		solar_system = { has_star_flag = shroud_rift_system_1 }		
		has_global_flag = small_tear_active
		owner = {			
			NOT = { has_country_flag = shroud_small_tear_sighted }
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = shroud_small_tear_sighted
			remove_point_of_interest = shroud_rising_eye_of_terror_poi.1
			create_point_of_interest = {
					id = shroud_rising_poi.0
					name = "shroud_rising_0_poi"
					desc = "shroud_rising_0_poi_desc"
					event_chain = "shroud_rising_chain"
					location = from
				}
		}
				
	}

	option = {
		name = shroud_rising_shroud_rift.9992.a
		custom_tooltip = shroud_rising_shroud_rift.9992.a.tooltip					
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.9992.b
		custom_tooltip = shroud_rising_shroud_rift.9992.b.tooltip							
			
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.9992.c
		custom_tooltip = shroud_rising_shroud_rift.9992.c.tooltip							
		trigger = {
				owner_species = { OR = { has_trait = trait_psionic has_trait = trait_hive_mind } }
			}		
			
	}
	
}


#####   1st RIFT (HIDDEN EVENT) ############################
# 1st Rift, global event
country_event = {
	id = shroud_rising_shroud_rift.1
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	immediate = {
		set_timed_global_flag = {
								flag = rifts_basic_active
								days = 3800 
		}
		remove_global_flag = small_tear_active
		country_event = { id = shroud_rising_shroud_rift.4 days = 4300 random = 45 } #collapse of rift #4300
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_1				
			}
			#set_name = "1st RIFT" ####################FOR TESTING ONLY			
			set_star_flag = shroud_invasion_system_basic #for spawning
			set_star_flag = corrupt_system
			remove_star_flag = shroud_nightmares_2
			save_event_target_as = shroud_rift_system_1			
			# add_modifier = { modifier = eye_of_terror_system_1 } ###REDO MODIFIERS FOR RIFTS AND EOT	
			set_star_class = sc_great_rift
			random_system_planet = {
				limit = {
					is_star = yes
				}
				random_list = {
							10 = { change_pc = pc_b_star }
							10 = { change_pc = pc_a_star }
							10 = { change_pc = pc_f_star }
							10 = { change_pc = pc_g_star }
							10 = { change_pc = pc_k_star }
							10 = { change_pc = pc_m_star }
							10 = { change_pc = pc_m_giant_star }
				}					
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = eye_of_terror_system_effect_2 }
					destroy_ambient_object = this
				} 
			random_system_planet = {
				limit = {
					has_planet_flag = shroud_rift_planet	
				}				
				save_event_target_as = shroud_rift_1_planet
				set_planet_flag = shroud_rift_planet				
				set_deposit = d_zro_deposit_1						
				create_ambient_object = {
						type = "shroud_rift_2"
						location = this
					}
				last_created_ambient_object = {
					set_ambient_object_flag = shroud_rift_object
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
			
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				set_planet_flag = shroud_rift_influence
				remove_modifier = shroud_tear_effect_2
				add_modifier = { modifier = shroud_rift_influence }
			}
			
			IF = {
				limit = { 
					has_owner = yes
				}
				owner = {
					set_country_flag = shroud_rift_1_country
					country_event = { id = shroud_rising_shroud_rift.2 } #ANNOUNCE to owner if there is one
				}
			}	
			every_country = {
				limit = {
					is_country_type = default
					NOT = { 
						has_country_flag = shroud_rift_1_country
					}
				}
				country_event = { id = shroud_rising_shroud_rift.3 } #ANNOUNCE rift to all
			}
			every_country = {
				limit = {
					is_country_type = default					
				}
				country_event = { id = shroud_rising_invasion.0 days = 240 random = 12 } #ANNOUNCE invasions to all
			}
		}
		country_event = { id = shroud_rising_shroud_rift.11 days = 4900 random = 60 } #3rd rift 4900
	}
	
	
}

# announce for owner 
country_event = {
	id = shroud_rising_shroud_rift.2
	title = "shroud_rising_shroud_rift.2.name"
	desc = "shroud_rising_shroud_rift.2.desc"
	picture = GFX_evt_shroud_rift_1
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_1
	
	immediate = {
		end_event_chain = "shroud_rising_chain"
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.2.a
		custom_tooltip = shroud_rising_shroud_rift.2.a.tooltip		
		create_point_of_interest = {
				id = shroud_rising_rift_1_poi.1
				name = "shroud_rising_rift_1_poi"
				desc = "shroud_rising_rift_1_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_1
			}
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.2.b
		custom_tooltip = shroud_rising_shroud_rift.2.b.tooltip		
		create_point_of_interest = {
				id = shroud_rising_rift_1_poi.1
				name = "shroud_rising_rift_1_poi"
				desc = "shroud_rising_rift_1_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_1
			}
	}
}

# announce for all 
country_event = {
	id = shroud_rising_shroud_rift.3
	title = "shroud_rising_shroud_rift.3.name"
	desc = "shroud_rising_shroud_rift.3.desc"
	picture = GFX_evt_shroud_rift_1
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_1
	
	immediate = {
		end_event_chain = "shroud_rising_chain"
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.3.a
		custom_tooltip = shroud_rising_shroud_rift.3.a.tooltip	
		
		create_point_of_interest = {
				id = shroud_rising_rift_1_poi.1
				name = "shroud_rising_rift_1_poi"
				desc = "shroud_rising_rift_1_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_1
			}
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.3.b
		custom_tooltip = shroud_rising_shroud_rift.3.b.tooltip	
		create_point_of_interest = {
				id = shroud_rising_rift_1_poi.1
				name = "shroud_rising_rift_1_poi"
				desc = "shroud_rising_rift_1_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_1
			}
	}
}


# Shroud Rift collapses
country_event = {
	id = shroud_rising_shroud_rift.4	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_1
			
			}
			remove_star_flag = shroud_invasion_system_basic
			save_event_target_as = shroud_rift_system_1	
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = shroud_rift_object }
					destroy_ambient_object = this
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			random_system_megastructure = {
				
					limit = { 
						OR = {
							is_megastructure_type = rift_inhibitor_0	
							is_megastructure_type = rift_inhibitor_1
							is_megastructure_type = rift_inhibitor_2
						
						}
					}						
					prev = {
						spawn_megastructure = {
							type = rift_inhibitor_permanently_ruined							
							coords_from = prev						
						}
						
					}
					create_ambient_object = {
						type = "large_debris_object"
						location = prev
					}
					last_created_ambient_object = {
						set_ambient_object_flag = debris_object
						set_location = {
							target = prev
							distance = 15
							angle = random
						}
					}
					remove_megastructure = this
				
			}
			random_system_planet = {
				limit = {
					has_planet_flag = shroud_rift_planet	
				}				
				change_pc = pc_shattered
				remove_planet_flag = shroud_rift_planet
			}
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence 

			}
		}
		every_country = {
				limit = { is_country_type = default }
				country_event = { id = shroud_rising_shroud_rift.5 } #ANNOUNCE it has collapsed
			}
		
	}

}	


# announce collapse of rift 
country_event = {
	id = shroud_rising_shroud_rift.5
	title = "shroud_rising_shroud_rift.5.name"
	desc = "shroud_rising_shroud_rift.5.desc"
	picture = GFX_evt_eye_of_terror_explosion
	show_sound = event_super_explosion
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_1
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_1
			}
			save_event_target_as = shroud_rift_system_1
		}
		remove_point_of_interest = shroud_rising_rift_1_poi.1
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.5.a
		
	}	
}
#####  2nd RIFT (HIDDEN EVENT) ############################

# 2nd Rift, global event actually 3rd
country_event = {
	id = shroud_rising_shroud_rift.6
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes	
	
	immediate = {
		set_global_flag =  rift_2_active	
		random_system = {			
			limit = { 
				is_capital_system = no		
				NOT = {
					has_star_flag = corrupt_system
				}
				#has_owner = yes #for testing
				#owner = { is_ai = no } #for testing
				NOT = {
					any_system_planet = { has_planet_flag = has_shroud_monolith }
				}
				any_system_planet = {
						AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
						OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah	
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken
							is_planet_class = pc_toxic
						}
				}
			}	
			#set_name = "2nd SHROUD RIFT" #FOR TESTING
			set_star_flag = corrupt_system
			set_star_flag = shroud_rift_system_2A
			set_star_flag = shroud_invasion_system_greater
			set_star_class = sc_great_rift
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				set_planet_flag = shroud_rift_influence
				add_modifier = { modifier = shroud_rift_influence }
			}
			every_system_planet = {
					limit = {
						is_star = yes
					}
					random_list = {
						10 = { change_pc = pc_b_star }
						10 = { change_pc = pc_a_star }
						10 = { change_pc = pc_f_star }
						10 = { change_pc = pc_g_star }
						10 = { change_pc = pc_k_star }
						10 = { change_pc = pc_m_star }
						10 = { change_pc = pc_m_giant_star }
						
						1 = { change_pc = pc_black_hole }
						1 = { change_pc = pc_neutron_star }
						1 = { change_pc = pc_pulsar }						
					
					}
				}
			save_event_target_as = shroud_rift_system_2 			
			random_system_planet = {
				limit = {
					is_colony = no
					AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
					OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah	
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken
							is_planet_class = pc_toxic
								
							}	
				}
				set_planet_flag = shroud_rift_planet
				set_planet_flag = shroud_rift_2_planet
				save_event_target_as = shroud_rift_2_planet
				create_ambient_object = {
					type = "eye_of_terror_3"
					location = this
				}
				
				last_created_ambient_object = {
					set_ambient_object_flag = eye_of_terror_system_effect_3
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
				set_deposit = d_zro_deposit_1
				create_ambient_object = {
						type = "shroud_rift_2"
						location = this
					}
				last_created_ambient_object = {
					set_ambient_object_flag = shroud_rift_object
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
			random_neighbor_system = { 
				limit = {
					NOT = {
						has_star_flag = corrupt_system
					}
				}
				create_ambient_object = {
					type = "eye_of_terror_3"
					location = this
				}
				
				last_created_ambient_object = {
					set_ambient_object_flag = eye_of_terror_system_effect_3
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
				set_star_flag = corrupt_system
				set_star_flag = shroud_invasion_system_basic
				set_star_flag = shroud_rift_system_2B
				set_star_class = sc_great_rift_3
				# set flag for army spawns
				every_system_planet = {
					limit = { is_star = no }
					set_planet_flag = shroud_rift_influence
					add_modifier = { modifier = shroud_rift_influence }
				}
				every_system_planet = {
					limit = {
						is_star = yes
					}
					random_list = {
						10 = { change_pc = pc_b_star }
						10 = { change_pc = pc_a_star }
						10 = { change_pc = pc_f_star }
						10 = { change_pc = pc_g_star }
						10 = { change_pc = pc_k_star }
						10 = { change_pc = pc_m_star }
						10 = { change_pc = pc_m_giant_star }
						
						1 = { change_pc = pc_black_hole }
						1 = { change_pc = pc_neutron_star }
						1 = { change_pc = pc_pulsar }						
					
					}
				}
			}
			random_neighbor_system = { 
				limit = {
					NOT = {
						has_star_flag = corrupt_system
					}
				}
				create_ambient_object = {
					type = "eye_of_terror_3"
					location = this
				}
				
				last_created_ambient_object = {
					set_ambient_object_flag = eye_of_terror_system_effect_3
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
				set_star_flag = corrupt_system
				set_star_flag = shroud_rift_system_2C
				set_star_flag = shroud_invasion_system_basic
				set_star_class = sc_great_rift_2
				# set flag for army spawns
				every_system_planet = {
					limit = { is_star = no }
					set_planet_flag = shroud_rift_influence
					add_modifier = { modifier = shroud_rift_influence }
				}
				every_system_planet = {
					limit = {
						is_star = yes
					}
					random_list = {
						10 = { change_pc = pc_b_star }
						10 = { change_pc = pc_a_star }
						10 = { change_pc = pc_f_star }
						10 = { change_pc = pc_g_star }
						10 = { change_pc = pc_k_star }
						10 = { change_pc = pc_m_star }
						10 = { change_pc = pc_m_giant_star }
						
						1 = { change_pc = pc_black_hole }
						1 = { change_pc = pc_neutron_star }
						1 = { change_pc = pc_pulsar }						
					
					}
				}
			}
			IF = {
					limit = { 
						has_owner = yes
					}
					owner = {
						set_country_flag = shroud_rift_2_country
						country_event = { id = shroud_rising_shroud_rift.7 } #ANNOUNCE to owner if there is one
					}
				}	
			
			every_country = {
					limit = {
						is_country_type = default
						NOT = { 
							has_country_flag = shroud_rift_2_country
						}
					}
					country_event = { id = shroud_rising_shroud_rift.8 } #ANNOUNCE rift to all
			}
			
		
		}
		country_event = { id = shroud_rising_shroud_rift.18 days = 1800 random = 45 } #spawn 4th rift  1800			
		every_country = {
				limit = { is_country_type = default }			
				country_event = { id = shroud_rising_sidequests.7 days = 500 random = 30 } #Sealing the Rifts 
			}
	}
		
}

# announce for owner 
country_event = {
	id = shroud_rising_shroud_rift.7
	title = "shroud_rising_shroud_rift.7.name"
	desc = "shroud_rising_shroud_rift.7.desc"
	picture = GFX_evt_shroud_rift_3
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_2
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.7.a
		custom_tooltip = shroud_rising_shroud_rift.7.a.tooltip
		create_point_of_interest = {
				id = shroud_rising_rift_2_poi.1
				name = "shroud_rising_rift_2_poi"
				desc = "shroud_rising_rift_2_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_2
			}	
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.7.b
		custom_tooltip = shroud_rising_shroud_rift.7.b.tooltip
		create_point_of_interest = {
				id = shroud_rising_rift_2_poi.1
				name = "shroud_rising_rift_2_poi"
				desc = "shroud_rising_rift_2_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_2
			}
	}
}

# announce for all 
country_event = {
	id = shroud_rising_shroud_rift.8
	title = "shroud_rising_shroud_rift.8.name"
	desc = "shroud_rising_shroud_rift.8.desc"
	picture = GFX_evt_shroud_rift_3
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_2
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.8.a			
		create_point_of_interest = {
				id = shroud_rising_rift_2_poi.1
				name = "shroud_rising_rift_2_poi"
				desc = "shroud_rising_rift_2_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_2
			}
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.8.b		
		create_point_of_interest = {
				id = shroud_rising_rift_2_poi.1
				name = "shroud_rising_rift_2_poi"
				desc = "shroud_rising_rift_2_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_2
			}
	}
}

# Shroud Rift 2 collapses
country_event = {
	id = shroud_rising_shroud_rift.81	
	is_triggered_only = yes
	hide_window = yes
	fire_only_once = yes
	
	immediate = {		
		remove_global_flag = rift_2_active
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_2A
			
			}
			remove_star_flag = shroud_invasion_system_greater		
			save_event_target_as = shroud_rift_2_system
			# remove flag for army spawns
			random_system_planet = {
				limit = {
					has_planet_flag = shroud_rift_planet	
				}				
				change_pc = pc_shattered
				remove_planet_flag = shroud_rift_planet
			}
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence 

			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = shroud_rift_object }
					destroy_ambient_object = this
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = eye_of_terror_system_effect_3 }
					destroy_ambient_object = this
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			random_system_megastructure = {				
				limit = { 
					OR = {
						is_megastructure_type = rift_inhibitor_0	
						is_megastructure_type = rift_inhibitor_1
						is_megastructure_type = rift_inhibitor_2
					
					}
				}						
				prev = {
					spawn_megastructure = {
						type = rift_inhibitor_permanently_ruined							
						coords_from = prev						
					}
				}
				create_ambient_object = {
					type = "large_debris_object"
					location = prev
				}
				last_created_ambient_object = {
					set_ambient_object_flag = debris_object
					set_location = {
						target = prev
						distance = 15
						angle = random
					}
				}
				remove_megastructure = this
								
			}
			random_system_planet = {
				limit = {
					has_planet_flag = shroud_rift_planet	
				}				
				change_pc = pc_shattered
				remove_planet_flag = shroud_rift_planet
			}
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence 

			}
			
		}
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_2B
			
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = eye_of_terror_system_effect_3 }
					destroy_ambient_object = this
			}
		}
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_2C
			
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = eye_of_terror_system_effect_3 }
					destroy_ambient_object = this
			}
		}
		every_country = {	
			limit = { is_country_type = default }
				country_event = { id = shroud_rising_shroud_rift.82 } #ANNOUNCE it has collapsed
		}
		
	}

}

# announce collapse of rift  2
country_event = {
	id = shroud_rising_shroud_rift.82
	title = "shroud_rising_shroud_rift.82.name"
	desc = "shroud_rising_shroud_rift.82.desc"
	picture = GFX_evt_eye_of_terror_explosion
	show_sound = event_super_explosion
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_2
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_2A
			}
			save_event_target_as = shroud_rift_system_2
		}
		remove_point_of_interest = shroud_rising_rift_22_poi.1
		remove_point_of_interest = shroud_rising_rift_2_poi.1
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.82.a		
		
		IF = { 
			limit = { NOT = { has_global_flag = rift_2_sealed } }		
			owner  = {					
				add_event_chain_counter = {
					event_chain = "eye_of_terror_chain"
					counter = "active_rifts"
					amount = -1
				}	
			}
		}
	}
	
	# HM 
	option = {
		name = shroud_rising_shroud_rift.82.b				
		IF = { 
			limit = { NOT = { has_global_flag = rift_2_sealed } }		
			owner  = {					
				add_event_chain_counter = {
					event_chain = "eye_of_terror_chain"
					counter = "active_rifts"
					amount = -1
				}	
			}
		}
	}
}

# 2nd Rift Closed, removes and resets the system appearance
country_event = {
	id = shroud_rising_shroud_rift.9
	hide_window = yes
	is_triggered_only = yes		
	
	trigger = {
		has_global_flag = rift_2_active
	}
	
	immediate = {		
		remove_global_flag = rift_2_active
		set_global_flag = rift_2_sealed
		random_system = {			
			limit = {
				has_star_flag = shroud_rift_system_2A					
				has_megastructure = rift_inhibitor_2					
			}
			save_event_target_as = shroud_rift_system_2
			owner = {
				save_event_target_as = shroud_rift_sealed_country
			}
			remove_star_flag = shroud_invasion_system_greater
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }	
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence 				
				remove_planet_flag = shroud_rift_planet
			
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = eye_of_terror_system_effect_3 }
					destroy_ambient_object = this
			}				
		}
		random_system = {			
			limit = {
				has_star_flag = shroud_rift_system_2B								
			}
			remove_star_flag = shroud_invasion_system_basic
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			# remove flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence				
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = eye_of_terror_system_effect_3 }
					destroy_ambient_object = this
			}	
		}
		random_system = {			
			limit = {
				has_star_flag = shroud_rift_system_2C				
								
			}
			remove_star_flag = shroud_invasion_system_basic
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			# remove flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence 
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = eye_of_terror_system_effect_3 }
					destroy_ambient_object = this
			}			
		}
		
		every_country = {	
			limit = { is_country_type = default }
				country_event = { id = shroud_rising_shroud_rift.10 } #ANNOUNCE rift closed to all
		}

		every_country = {
			limit = { 
				is_country_type = default
				AND = {
					has_global_flag = rift_2_sealed
					has_global_flag = rift_3_sealed
					has_global_flag = rift_4_sealed
				}
			}
				country_event = { id = shroud_rising_shroud_rift.9000 days = 8 } #ANNOUNCE if 3 rifts closed to all
		}
				
	}
	
}

# 2nd Rift Closed Announce
country_event = {
	id = shroud_rising_shroud_rift.10
	title = "shroud_rising_shroud_rift.10.name"
	desc = "shroud_rising_shroud_rift.10.desc"
	picture = GFX_evt_dyson_sphere
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_2
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_2
			}
			save_event_target_as = shroud_rift_system_2
		}
		remove_point_of_interest = shroud_rising_rift_2_poi.1
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.10.a		
		create_point_of_interest = {
				id = shroud_rising_rift_22_poi.1
				name = "shroud_rising_rift_22_poi"
				desc = "shroud_rising_rift_22_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_2
			}								
		add_event_chain_counter = {
			event_chain = "eye_of_terror_chain"
			counter = "active_rifts"
			amount = -1
		}	
			
		
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.10.b		
		create_point_of_interest = {
				id = shroud_rising_rift_22_poi.1
				name = "shroud_rising_rift_22_poi"
				desc = "shroud_rising_rift_22_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_2
			}
		add_event_chain_counter = {
			event_chain = "eye_of_terror_chain"
			counter = "active_rifts"
			amount = -1
		}	

		
	}
}

##### 3rd RIFT  (HIDDEN EVENT) ############################

country_event = {
	id = shroud_rising_shroud_rift.11
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = rifts_basic_active #makes spawns happen again
		set_global_flag = rift_3_active		 
		random_system = {
			limit = { 				
				is_capital_system = no				
				NOT = {
					has_megastructure = lgate_base
					has_star_flag = corrupt_system
				}
				#has_owner = yes #for testing
				#owner = { is_ai = no } #for testing
				NOT = {
					any_system_planet = { has_planet_flag = has_shroud_monolith }
				}
				any_system_planet = {
						AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
						OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah	
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken
							is_planet_class = pc_toxic
						}
				}
					
				
			}
			#set_name = "3rd RIFT" ####################FOR TESTING ONLY
			set_star_flag = shroud_rift_system_3 #for tracking
			set_star_flag = shroud_invasion_system_basic #for spawning
			set_star_flag = corrupt_system
			save_event_target_as = shroud_rift_system_3						
			set_star_class = sc_great_rift
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				set_planet_flag = shroud_rift_influence
				add_modifier = { modifier = shroud_rift_influence }
			}
			random_system_planet = {
				limit = {
					is_star = yes
				}
				random_list = {
							10 = { change_pc = pc_b_star }
							10 = { change_pc = pc_a_star }
							10 = { change_pc = pc_f_star }
							10 = { change_pc = pc_g_star }
							10 = { change_pc = pc_k_star }
							10 = { change_pc = pc_m_star }
							10 = { change_pc = pc_m_giant_star }
				}					
			}
			random_system_planet = {
				limit = {
					AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
					OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken
							is_planet_class = pc_toxic
					}	
				}
				save_event_target_as = shroud_rift_3_planet
				set_planet_flag = shroud_rift_planet
				set_planet_flag = shroud_rift_3_planet	
				set_deposit = d_zro_deposit_1						
				create_ambient_object = {
						type = "shroud_rift_2"
						location = this
					}
				last_created_ambient_object = {
					set_ambient_object_flag = shroud_rift_object
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
			
			IF = {
				limit = { 
					has_owner = yes
				}
				owner = {
					set_country_flag = shroud_rift_3_country
					country_event = { id = shroud_rising_shroud_rift.12 } #ANNOUNCE to owner if there is one
				}
			}	
			every_country = {
				limit = {
					 is_country_type = default 
					NOT = { 
						has_country_flag = shroud_rift_3_country
					}
				}
				country_event = { id = shroud_rising_shroud_rift.13 } #ANNOUNCE rift to all
			}
			
		}
		country_event = { id = shroud_rising_shroud_rift.6 days = 2550 random = 120 } #2nd Large rift	spawns		
		# country_event = { id = shroud_rising_shroud_rift.14 days = 20 random = 20 } #collapse code
	}
	
	
}

# announce for owner 
country_event = {
	id = shroud_rising_shroud_rift.12
	title = "shroud_rising_shroud_rift.12.name"
	desc = "shroud_rising_shroud_rift.12.desc"
	picture = GFX_evt_shroud_rift_2
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_3
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.12.a
		# custom_tooltip = shroud_rising_shroud_rift.12.a.tooltip
		create_point_of_interest = {
				id = shroud_rising_rift_3_poi.1
				name = "shroud_rising_rift_3_poi"
				desc = "shroud_rising_rift_3_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_3
			}		
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.12.b
		# custom_tooltip = shroud_rising_shroud_rift.12.b.tooltip
		create_point_of_interest = {
				id = shroud_rising_rift_3_poi.1
				name = "shroud_rising_rift_3_poi"
				desc = "shroud_rising_rift_3_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_3
			}
	}
}

# announce for all 
country_event = {
	id = shroud_rising_shroud_rift.13
	title = "shroud_rising_shroud_rift.13.name"
	desc = "shroud_rising_shroud_rift.13.desc"
	picture = GFX_evt_shroud_rift_2
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_3
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.13.a
		# custom_tooltip = shroud_rising_shroud_rift.13.a.tooltip		
		create_point_of_interest = {
				id = shroud_rising_rift_3_poi.1
				name = "shroud_rising_rift_3_poi"
				desc = "shroud_rising_rift_3_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_3
			}
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.13.b
		# custom_tooltip = shroud_rising_shroud_rift.13.b.tooltip
		create_point_of_interest = {
				id = shroud_rising_rift_3_poi.1
				name = "shroud_rising_rift_3_poi"
				desc = "shroud_rising_rift_3_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_3
			}
	}
}


# Shroud Rift collapses
country_event = {
	id = shroud_rising_shroud_rift.14	
	is_triggered_only = yes
	hide_window = yes
	fire_only_once = yes
	
	immediate = {		
		remove_global_flag = rift_3_active
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_3
			
			}
			remove_star_flag = shroud_invasion_system_basic			
			save_event_target_as = shroud_rift_3_system
			# remove flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence 
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = shroud_rift_object }
					destroy_ambient_object = this
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			random_system_megastructure = {
				
					limit = { 
						OR = {
							is_megastructure_type = rift_inhibitor_0	
							is_megastructure_type = rift_inhibitor_1
							is_megastructure_type = rift_inhibitor_2
						
						}
					}						
					prev = {
						spawn_megastructure = {
							type = rift_inhibitor_permanently_ruined							
							coords_from = prev						
						}
					}
					
					create_ambient_object = {
						type = "large_debris_object"
						location = prev
					}
					last_created_ambient_object = {
						set_ambient_object_flag = debris_object
						set_location = {
							target = prev
							distance = 15
							angle = random
						}
					}
					remove_megastructure = this
								
			}
			random_system_planet = {
				limit = {
					has_planet_flag = shroud_rift_planet	
				}				
				change_pc = pc_shattered 
				remove_planet_flag = shroud_rift_planet
			}
		}
		every_country = {	
			limit = { is_country_type = default }
				country_event = { id = shroud_rising_shroud_rift.15 } #ANNOUNCE it has collapsed
		}
		
	}

}	


# announce collapse of rift 
country_event = {
	id = shroud_rising_shroud_rift.15
	title = "shroud_rising_shroud_rift.15.name"
	desc = "shroud_rising_shroud_rift.15.desc"
	picture = GFX_evt_eye_of_terror_explosion
	show_sound = event_super_explosion
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_3
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_3
			}
			save_event_target_as = shroud_rift_system_3
		}
		remove_point_of_interest = shroud_rising_rift_33_poi.1
		remove_point_of_interest = shroud_rising_rift_3_poi.1
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.15.a		
		
		IF = { 
			limit = { NOT = { has_global_flag = rift_3_sealed } }		
			owner  = {					
				add_event_chain_counter = {
					event_chain = "eye_of_terror_chain"
					counter = "active_rifts"
					amount = -1
				}	
			}
		}
	}
	
	# HM 
	option = {
		name = shroud_rising_shroud_rift.15.b				
		IF = { 
			limit = { NOT = { has_global_flag = rift_3_sealed } }		
			owner  = {					
				add_event_chain_counter = {
					event_chain = "eye_of_terror_chain"
					counter = "active_rifts"
					amount = -1
				}	
			}
		}
	}
}

# 3rd Rift Closed, removes and resets the system appearance
country_event = {
	id = shroud_rising_shroud_rift.16
	hide_window = yes
	is_triggered_only = yes		
	
	trigger = {
		has_global_flag = rift_3_active
	}
	
	immediate = {
		
		remove_global_flag = rift_3_active
		set_global_flag = rift_3_sealed
		random_system = {			
			limit = {
				has_star_flag = shroud_rift_system_3					
				has_megastructure = rift_inhibitor_2					
			}
			save_event_target_as = shroud_rift_system_3
			remove_star_flag = shroud_invasion_system_basic
			owner = {
				save_event_target_as = shroud_rift_sealed_country
			}
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_planet_flag = shroud_rift_planet
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}		
			
		}		
		every_country = {
			limit = { is_country_type = default }
				country_event = { id = shroud_rising_shroud_rift.17 } #ANNOUNCE rift closed to all
		}
		
		every_country = {
			limit = { 
				is_country_type = default
				AND = {
					has_global_flag = rift_2_sealed
					has_global_flag = rift_3_sealed
					has_global_flag = rift_4_sealed
				}
			}
				country_event = { id = shroud_rising_shroud_rift.9000 days = 8 } #ANNOUNCE if 3 rifts closed to all
		}
		
				
	}
	
}

# 3rd Rift Closed Announce
country_event = {
	id = shroud_rising_shroud_rift.17
	title = "shroud_rising_shroud_rift.17.name"
	desc = "shroud_rising_shroud_rift.17.desc"
	picture = GFX_evt_dyson_sphere
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_3
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_3
			}
			save_event_target_as = shroud_rift_system_3
		}
		remove_point_of_interest = shroud_rising_rift_3_poi.1
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.17.a
		
		create_point_of_interest = {
				id = shroud_rising_rift_33_poi.1
				name = "shroud_rising_rift_33_poi"
				desc = "shroud_rising_rift_33_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_3
			}									
		add_event_chain_counter = {
			event_chain = "eye_of_terror_chain"
			counter = "active_rifts"
			amount = -1
		}	
		
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.17.b	
		create_point_of_interest = {
				id = shroud_rising_rift_33_poi.1
				name = "shroud_rising_rift_33_poi"
				desc = "shroud_rising_rift_33_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_3
			}
		add_event_chain_counter = {
			event_chain = "eye_of_terror_chain"
			counter = "active_rifts"
			amount = -1
		}	
		
	}
}

##### 4th RIFT (HIDDEN EVENT) ############################

country_event = {
	id = shroud_rising_shroud_rift.18
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = rift_4_active
		random_system = {
			limit = { 				
				is_capital_system = no				
				NOT = {
					has_megastructure = lgate_base 
					has_star_flag = corrupt_system
				}
				#has_owner = yes #for testing
				#owner = { is_ai = no } #for testing
				NOT = {
					any_system_planet = { has_planet_flag = has_shroud_monolith }
				}
				any_system_planet = {
						AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
						OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah	
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken
							is_planet_class = pc_toxic
						}
				}
					
				
			}
			#set_name = "4st RIFT" ####################FOR TESTING ONLY
			set_star_flag = shroud_rift_system_4 #for tracking
			set_star_flag = shroud_invasion_system_greater #for spawning
			set_star_flag = corrupt_system
			save_event_target_as = shroud_rift_system_4				
			set_star_class = sc_great_rift
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				set_planet_flag = shroud_rift_influence
				add_modifier = { modifier = shroud_rift_influence }
			}
			random_system_planet = {
				limit = {
					is_star = yes
				}
				random_list = {
							10 = { change_pc = pc_b_star }
							10 = { change_pc = pc_a_star }
							10 = { change_pc = pc_f_star }
							10 = { change_pc = pc_g_star }
							10 = { change_pc = pc_k_star }
							10 = { change_pc = pc_m_star }
							10 = { change_pc = pc_m_giant_star }
				}					
			}
			random_system_planet = {
				limit = {
					AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
					OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken
							is_planet_class = pc_toxic
					}	
				}
				save_event_target_as = shroud_rift_4_planet
				set_planet_flag = shroud_rift_4_planet	
				set_planet_flag = shroud_rift_planet				
				set_deposit = d_zro_deposit_1						
				create_ambient_object = {
						type = "shroud_rift_2"
						location = this
					}
				last_created_ambient_object = {
					set_ambient_object_flag = shroud_rift_object
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
			
			IF = {
				limit = { 
					has_owner = yes
				}
				owner = {
					set_country_flag = shroud_rift_4_country
					country_event = { id = shroud_rising_shroud_rift.19 } #ANNOUNCE to owner if there is one
				}
			}	
			every_country = {
				limit = {
					is_country_type = default
					NOT = { 
						has_country_flag = shroud_rift_4_country
					}
				}
				country_event = { id = shroud_rising_shroud_rift.20 } #ANNOUNCE rift to all
			}			
			
			every_country = {
				limit = { is_country_type = default }			
				country_event = { id = shroud_rising_eye_of_terror.2 days = 1850 random = 60 } #Uneasy Feeling 
			}
			
		}
		country_event = { id = shroud_rising_shroud_rift.24 days = 1000 random = 90  } #spawns random unstable rift 1500
		country_event = { id = shroud_rising_shroud_rift.24 days = 1360 random = 10  } #spawns another unstable rift 1360
		country_event = { id = shroud_rising_eye_of_terror.3 days = 2500 random = 120  } #spawns the eye of terror in the galaxy 2500
	}
	
	
}

# announce for owner 
country_event = {
	id = shroud_rising_shroud_rift.19
	title = "shroud_rising_shroud_rift.19.name"
	desc = "shroud_rising_shroud_rift.19.desc"
	picture = GFX_evt_shroud_rift_4
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_4
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.19.a		
		create_point_of_interest = {
				id = shroud_rising_rift_4_poi.1
				name = "shroud_rising_rift_4_poi"
				desc = "shroud_rising_rift_4_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_4
			}
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.19.b		
		create_point_of_interest = {
				id = shroud_rising_rift_4_poi.1
				name = "shroud_rising_rift_4_poi"
				desc = "shroud_rising_rift_4_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_4
			}
	}
}

# announce for all 
country_event = {
	id = shroud_rising_shroud_rift.20
	title = "shroud_rising_shroud_rift.20.name"
	desc = "shroud_rising_shroud_rift.20.desc"
	picture = GFX_evt_shroud_rift_4
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_4
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.20.a			
		create_point_of_interest = {
				id = shroud_rising_rift_4_poi.1
				name = "shroud_rising_rift_4_poi"
				desc = "shroud_rising_rift_4_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_4
			}
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.20.b		
		create_point_of_interest = {
				id = shroud_rising_rift_4_poi.1
				name = "shroud_rising_rift_4_poi"
				desc = "shroud_rising_rift_4_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_4
			}
	}
}

# Shroud Rift 4 collapses
country_event = {
	id = shroud_rising_shroud_rift.201	
	is_triggered_only = yes
	hide_window = yes
	fire_only_once = yes
	
	immediate = {		
		remove_global_flag = rift_4_active
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_4
			
			}
			remove_star_flag = shroud_invasion_system_basic			
			save_event_target_as = shroud_rift_4_system
			# remove flag for army spawns
			random_system_planet = {
				limit = {
					has_planet_flag = shroud_rift_planet	
				}				
				change_pc = pc_shattered 
				remove_planet_flag = shroud_rift_planet
			}
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence 

			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = shroud_rift_object }
					destroy_ambient_object = this
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			random_system_megastructure = {
				
					limit = { 
						OR = {
							is_megastructure_type = rift_inhibitor_0	
							is_megastructure_type = rift_inhibitor_1
							is_megastructure_type = rift_inhibitor_2
						
						}
					}						
					prev = {
						spawn_megastructure = {
							type = rift_inhibitor_permanently_ruined							
							coords_from = prev						
						}
					}
					create_ambient_object = {
						type = "large_debris_object"
						location = prev
					}
					last_created_ambient_object = {
						set_ambient_object_flag = debris_object
						set_location = {
							target = prev
							distance = 15
							angle = random
						}
					}
					remove_megastructure = this
								
			}
			
		}
		every_country = {	
			limit = { is_country_type = default }
				country_event = { id = shroud_rising_shroud_rift.202 } #ANNOUNCE it has collapsed
		}
		
	}
}

# announce collapse of rift  4
country_event = {
	id = shroud_rising_shroud_rift.202
	title = "shroud_rising_shroud_rift.202.name"
	desc = "shroud_rising_shroud_rift.202.desc"
	picture = GFX_evt_eye_of_terror_explosion
	show_sound = event_super_explosion
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_4
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_4
			}
			save_event_target_as = shroud_rift_system_4
		}
		remove_point_of_interest = shroud_rising_rift_44_poi.1
		remove_point_of_interest = shroud_rising_rift_4_poi.1
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.202.a		
		
		IF = { 
			limit = { NOT = { has_global_flag = rift_4_sealed } }		
			owner  = {					
				add_event_chain_counter = {
					event_chain = "eye_of_terror_chain"
					counter = "active_rifts"
					amount = -1
				}	
			}
		}
	}
	
	# HM 
	option = {
		name = shroud_rising_shroud_rift.202.b				
		IF = { 
			limit = { NOT = { has_global_flag = rift_4_sealed } }		
			owner  = {					
				add_event_chain_counter = {
					event_chain = "eye_of_terror_chain"
					counter = "active_rifts"
					amount = -1
				}	
			}
		}
	}
}

# 4th Rift Closed, removes and resets the system appearance
country_event = {
	id = shroud_rising_shroud_rift.21
	hide_window = yes
	is_triggered_only = yes		
	
	trigger = {
		has_global_flag = rift_4_active
	}
	
	immediate = {
		remove_global_flag = rift_4_active
		set_global_flag = rift_4_sealed
		random_system = {			
			limit = {
				has_star_flag = shroud_rift_system_4					
				has_megastructure = rift_inhibitor_2					
			}
			save_event_target_as = shroud_rift_system_4
			remove_star_flag = shroud_invasion_system_basic
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			owner = {
				save_event_target_as = shroud_rift_sealed_country
			}
			# remove flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence 
			}	
		}		
		every_country = {	
			limit = { is_country_type = default }
				country_event = { id = shroud_rising_shroud_rift.22 } #ANNOUNCE rift closed to all				
		}
		
		every_country = {
			limit = { 
				is_country_type = default
				AND = {
					has_global_flag = rift_2_sealed
					has_global_flag = rift_3_sealed
					has_global_flag = rift_4_sealed
				}
			}
				country_event = { id = shroud_rising_shroud_rift.9000 days = 8 } #ANNOUNCE if 3 rifts closed to all
		}
		
	}
	
}

# 4th Rift Closed Announce
country_event = {
	id = shroud_rising_shroud_rift.22
	title = "shroud_rising_shroud_rift.22.name"
	desc = "shroud_rising_shroud_rift.22.desc"
	picture = GFX_evt_dyson_sphere
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_4
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_4
			}
			save_event_target_as = shroud_rift_system_4
		}
		remove_point_of_interest = shroud_rising_rift_4_poi.1
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.22.a
		
		create_point_of_interest = {
				id = shroud_rising_rift_44_poi.1
				name = "shroud_rising_rift_44_poi"
				desc = "shroud_rising_rift_44_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_4
			}
		owner  = {			
			add_event_chain_counter = {
				event_chain = "eye_of_terror_chain"
				counter = "active_rifts"
				amount = -1
			}	
		}
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.22.b
		
		create_point_of_interest = {
				id = shroud_rising_rift_44_poi.1
				name = "shroud_rising_rift_44_poi"
				desc = "shroud_rising_rift_44_poi_desc"
				event_chain = "eye_of_terror_chain"
				location = event_target:shroud_rift_system_4
		}
		owner  = {			
			add_event_chain_counter = {
				event_chain = "eye_of_terror_chain"
				counter = "active_rifts"
				amount = -1
			}	
		}
		
	}
}


##### ON ACTION RANDOM UNSTABLE RIFTS (HIDDEN EVENT) ############################

# fires it for global event country
event = {
	id = shroud_rising_shroud_rift.23
	hide_window = yes	
	is_triggered_only = yes	
	trigger = {
		has_global_flag = eye_of_terror_open
		NOT = {
			has_global_flag = eye_of_terror_sealed
		}		
	}	
	
	immediate = {
		random_list = {					
					75 = {
						every_country = {
							limit = { is_country_type = global_event }
							country_event = { id = shroud_rising_shroud_rift.24 days = 45 random = 15 }
						}
					}
					25 = {	 }					
						
		}
		
	}
}

# spawn random unstable rift
country_event = {
	id = shroud_rising_shroud_rift.24
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = rift_unstable_active		 
		random_system = {
			limit = { 				
				is_capital_system = no	 #unlike others, can spawn in capital if you're unlucky since threat is low		
				NOT = {
					has_megastructure = lgate_base
					has_star_flag = corrupt_system
				}
				# has_owner = yes #for testing
				# owner = { is_ai = no } #for testing
				NOT = {
					any_system_planet = { has_planet_flag = has_shroud_monolith }
				}
				any_system_planet = {
						AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
						OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah	
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten							
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken	
							is_planet_class = pc_toxic
						}
				}
					
				
			}
			#set_name = "RANDOM RIFT" ####################FOR TESTING ONLY
			set_star_flag = shroud_rift_system_unstable #for tracking
			set_star_flag = shroud_rift_unstable_active
			set_star_flag = shroud_invasion_system_basic #for spawning
			set_star_flag = corrupt_system
			save_event_target_as = shroud_rift_system_unstable						
			set_star_class = sc_great_rift
			#timer for collapse			
			random_list = {
					# short ~2 years 600
					25 = {
						set_timed_star_flag = {
								flag = unstable_rift_timer
								days = 600 
						}
					}
					# medium ~5 years 1800
					25 = {
						set_timed_star_flag = {
								flag = unstable_rift_timer
								days = 1800
						}
					}
					# long ~10 years 3600
					25 = {
						set_timed_star_flag = {
								flag = unstable_rift_timer
								days = 3600
						}
					}
					# years ~25 years 9000
					25 = {
						set_timed_star_flag = {
								flag = unstable_rift_timer
								days = 9000
						}
					}
				}
			
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				set_planet_flag = shroud_rift_influence
				add_modifier = { modifier = shroud_rift_influence }
			}
			random_system_planet = {
				limit = {
					is_star = yes
				}
				random_list = {
							10 = { change_pc = pc_b_star }
							10 = { change_pc = pc_a_star }
							10 = { change_pc = pc_f_star }
							10 = { change_pc = pc_g_star }
							10 = { change_pc = pc_k_star }
							10 = { change_pc = pc_m_star }
							10 = { change_pc = pc_m_giant_star }
				}					
			}
			random_system_planet = {
				limit = {
					AND = {
							planet_size > 17
							is_moon = no
							is_colony = no
						}
					OR = { 	
							is_planet_class = pc_continental 
							is_planet_class = pc_desert
							is_planet_class = pc_tropical
							is_planet_class = pc_arid
							is_planet_class = pc_ocean
							is_planet_class = pc_tundra 
							is_planet_class = pc_arctic 
							is_planet_class = pc_alpine 
							is_planet_class = pc_savannah
							is_planet_class = pc_barren 
							is_planet_class = pc_barren_cold 
							is_planet_class = pc_frozen 
							is_planet_class = pc_nuked 						
							is_planet_class = pc_gaia
							is_planet_class = pc_gas_giant
							is_planet_class = pc_molten
							is_planet_class = pc_shrouded
							is_planet_class = pc_broken
							is_planet_class = pc_toxic
					}	
				}
				save_event_target_as = shroud_rift_unstable_planet
				set_planet_flag = shroud_rift_planet
				set_planet_flag = shroud_rift_unstable_planet	
				set_deposit = d_zro_deposit_1						
				create_ambient_object = {
						type = "shroud_rift_2"
						location = this
					}
				last_created_ambient_object = {
					set_ambient_object_flag = shroud_rift_object
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
			
			IF = {
				limit = { 
					has_owner = yes
				}
				owner = {
					set_country_flag = shroud_rift_unstable_country
					country_event = { id = shroud_rising_shroud_rift.25 } #ANNOUNCE to owner if there is one
				}
			}	
			every_country = {
				limit = {
					is_country_type = default
					NOT = { 
						has_country_flag = shroud_rift_unstable_country
					}
				}
				country_event = { id = shroud_rising_shroud_rift.26 } #ANNOUNCE rift to all
			}
			
		}
		
			
	}
	
	
}

# announce for owner 
country_event = {
	id = shroud_rising_shroud_rift.25
	title = "shroud_rising_shroud_rift.25.name"
	desc = "shroud_rising_shroud_rift.25.desc"
	picture = GFX_evt_shroud_rift_unstable
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_unstable
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.25.a
		# custom_tooltip = shroud_rising_shroud_rift.12.a.tooltip			
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.25.b
		# custom_tooltip = shroud_rising_shroud_rift.12.b.tooltip		
	}
}

# announce for all 
country_event = {
	id = shroud_rising_shroud_rift.26
	title = "shroud_rising_shroud_rift.26.name"
	desc = "shroud_rising_shroud_rift.26.desc"
	picture = GFX_evt_shroud_rift_unstable
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_unstable
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.26.a
		# custom_tooltip = shroud_rising_shroud_rift.13.a.tooltip	
	}
	# HM 
	option = {
		name = shroud_rising_shroud_rift.26.b
		# custom_tooltip = shroud_rising_shroud_rift.13.b.tooltip		
	}
}

#checks to see if timer for collapse is done
event = {
	id = shroud_rising_shroud_rift.270
	hide_window = yes	
	is_triggered_only = yes
	
	trigger = {
		any_system = {
			has_star_flag = shroud_rift_system_unstable
			NOT = { has_star_flag = unstable_rift_timer }
		}
	}
	
	immediate = {	
		random_country = {
			limit = {
				is_country_type = global_event
			}
		country_event = { id = shroud_rising_shroud_rift.271 days = 1  } #triggers collapse
		}
	}
}

#collapses rift
country_event = {
	id = shroud_rising_shroud_rift.271
	hide_window = yes	
	is_triggered_only = yes
	
	trigger = {		
		
	}
	
	immediate = {
		country_event = { id = shroud_rising_shroud_rift.27 days = 3  } #triggers collapse
		
	}
}


# Unstable Shroud Rift collapses called by on_action when timer runs out
country_event = {
	id = shroud_rising_shroud_rift.27	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {		
		random_system = {
			limit = {
				has_star_flag = shroud_rift_system_unstable
				NOT = { has_star_flag = unstable_rift_timer }				
			
			}
			remove_star_flag = corrupt_system
			remove_star_flag = shroud_invasion_system_basic
			remove_star_flag = shroud_rift_system_unstable
			remove_star_flag = shroud_rift_unstable_active
			save_event_target_as = shroud_rift_system_unstable
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
				remove_modifier = shroud_rift_influence
				
			}
			random_system_ambient_object = {
					limit = { has_ambient_object_flag = shroud_rift_object }
					destroy_ambient_object = this
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}
			random_system_megastructure = {
				
					limit = { 
						OR = {
							is_megastructure_type = rift_inhibitor_0	
							is_megastructure_type = rift_inhibitor_1
							is_megastructure_type = rift_inhibitor_2
						
						}
					}						
					prev = {
						spawn_megastructure = {
							type = rift_inhibitor_permanently_ruined							
							coords_from = prev						
						}
					}
					create_ambient_object = {
						type = "large_debris_object"
						location = prev
					}
					last_created_ambient_object = {
						set_ambient_object_flag = debris_object
						set_location = {
							target = prev
							distance = 15
							angle = random
						}
					}
					remove_megastructure = this
				
				
			}
			random_system_planet = {
				limit = {
					has_planet_flag = shroud_rift_unstable_planet	
				}				
				change_pc = pc_shattered 
				remove_planet_flag = shroud_rift_planet
			}
			
		}
		
		every_country = {
			limit = { is_country_type = default }
			country_event = { id = shroud_rising_shroud_rift.28  } #triggers collapse	
		}	
		
	}
}	




# announce collapse of rift 
country_event = {
	id = shroud_rising_shroud_rift.28
	title = "shroud_rising_shroud_rift.28.name"
	desc = "shroud_rising_shroud_rift.28.desc"
	picture = GFX_evt_eye_of_terror_explosion
	show_sound = event_super_explosion
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_unstable
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.28.a		
		
	}
	
}

# Unstable Rift Closed, removes and resets the system appearance
country_event = {
	id = shroud_rising_shroud_rift.29
	hide_window = yes
	is_triggered_only = yes		
	
	trigger = {
		
	}
	
	immediate = {
		
		random_system = {			
			limit = {
				has_star_flag = shroud_rift_system_unstable					
				has_megastructure = rift_inhibitor_2	
				has_star_flag = shroud_rift_unstable_active 
			}
			save_event_target_as = shroud_rift_system_unstable
			remove_star_flag = shroud_invasion_system_basic
			remove_star_flag = corrupt_system
			owner = {
				save_event_target_as = shroud_rift_sealed_country
			}
			# set flag for army spawns
			every_system_planet = {
				limit = { is_star = no }
				remove_planet_flag = shroud_rift_influence
			}
			random_list = {
						10 = { set_star_class = sc_a }
						10 = { set_star_class = sc_b }
						10 = { set_star_class = sc_f }
						10 = { set_star_class = sc_g }
						10 = { set_star_class = sc_k }
						10 = { set_star_class = sc_m }
						10 = { set_star_class = sc_m_giant  }
						5 = { set_star_class = sc_neutron_star  }					
						5 = { set_star_class = sc_pulsar  }									
					
			}		
			
		}		
		every_country = {
			limit = { is_country_type = default }
				country_event = { id = shroud_rising_shroud_rift.30 } #ANNOUNCE rift closed to all
			}
	}
	
}

# Unstable Rift Closed Announce
country_event = {
	id = shroud_rising_shroud_rift.30
	title = "shroud_rising_shroud_rift.30.name"
	desc = "shroud_rising_shroud_rift.30.desc"
	picture = GFX_evt_dyson_sphere
	show_sound = event_the_great_awakening
	is_triggered_only = yes	
	location = event_target:shroud_rift_system_unstable
	
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.30.a
		
	}
	
}














# Yearly event for shroud incursion on shroud rift worlds
event = {
	id = shroud_rising_shroud_rift.100
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		 has_global_flag = eye_of_terror_open
	}
	immediate = {
		every_country = {
			limit = {
				any_owned_planet = {
					has_planet_flag = shroud_rift_influence
				}
			
			}
			every_owned_planet = {					
				random_list = {	
					66 = { }
					33 = { planet_event = { id = shroud_rising_shroud_rift.101 days = 65 random = 200 } 
					}
				}
			}		
		}
	}
}
	
	
# spawn of shroud armies	
planet_event = {
	id = shroud_rising_shroud_rift.101
	hide_window = yes
	is_triggered_only = yes
	
		
	trigger = {		
		has_owner = yes 
		# owner = { is_ai = no } #for testing							
		is_colony = yes						
		NOT = { 			
			has_planet_flag = has_shroud_monolith 	
		}
		NOR = {
			has_modifier = eye_of_terror_influence_1
			has_modifier = eye_of_terror_influence_2
		}
		has_planet_flag = shroud_rift_influence	
		has_ground_combat = no
	}
	
	immediate = {														
			create_country = {
				name = "NAME_shroud_horror_country"
				type = shroud_horrors		
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"dark_purple"
						"black"
						"null"
						"null"
					}
				}								
			}
			last_created_country = {				
			save_global_event_target_as = shroud_world_horror
			}
			every_country = { establish_communications_no_message = event_target:shroud_world_horror }
			
			create_species = {
				name = "NAME_shroud_horrors"
				class = random_non_machine
				portrait = random
				traits = random
			}
			
			# Spawn horrors
			create_army = {
				name = "NAME_horror_army"
				owner = last_created_country
				species = last_created_species
				type = "shroud_horror_army_1"
			}
			create_army = {
				name = "NAME_horror_army"
				owner = last_created_country
				species = last_created_species
				type = "shroud_horror_army_2"
			}
			random_list = {	
				35 = { }
				50 = {
					create_army = {
						name = "NAME_horror_army"
						owner = last_created_country
						species = last_created_species
						type = "shroud_horror_army_1"
					}
				}
				10 = { 
					modifier = {
						factor = 0
						mid_game_years_passed <= 50						
					}
					create_army = {
						name = "NAME_horror_army"
						owner = last_created_country
						species = last_created_species
						type = "shroud_horror_army_2"
					}
					create_army = {
						name = "NAME_horror_army"
						owner = last_created_country
						species = last_created_species
						type = "shroud_horror_army_1"
					}
				}
				5 = {
					modifier = {
						factor = 0
						mid_game_years_passed <= 75						
					}
						create_army = {
					name = "NAME_horror_army"
					owner = last_created_country
					species = last_created_species
					type = "shroud_greater_horror_army"
					}
				}
			}
			random_list = {	
				80 = { }
				10 = {
					create_army = {
						name = "NAME_horror_army"
						owner = last_created_country
						species = last_created_species
						type = "shroud_horror_army_1"
					}
				}
				5 = { 
					modifier = {
						factor = 0
						mid_game_years_passed <= 50						
					}
					create_army = {
						name = "NAME_horror_army"
						owner = last_created_country
						species = last_created_species
						type = "shroud_horror_army_2"
					}
					create_army = {
						name = "NAME_horror_army"
						owner = last_created_country
						species = last_created_species
						type = "shroud_horror_army_1"
					}
				}
				5 = {
					modifier = {
						factor = 0
						mid_game_years_passed <= 75						
					}
						create_army = {
					name = "NAME_horror_army"
					owner = last_created_country
					species = last_created_species
					type = "shroud_greater_horror_army"
					}
				}
			}
		planet_event = { id = shroud_rising_shroud_rift.102 }	

	}
}

# Inform owner, that his planet is now fucked
planet_event = {
	id = shroud_rising_shroud_rift.102
	title = "shroud_rising_shroud_rift.102.name"
	#desc = "shroud_rising_shroud_rift.102.desc"
	picture = GFX_evt_monster_1
	show_sound = event_the_great_awakening	
	is_triggered_only = yes
	location = root
	
	desc = {
		text = shroud_rising_shroud_rift.102.1.desc
		trigger = {
			NOT = { has_planet_flag = has_had_shroud_incursion }
		}
	}
	
	desc = {
		text = shroud_rising_shroud_rift.102.2.desc
		trigger = {
			has_planet_flag = has_had_shroud_incursion
		}
	}
	
	trigger = {
		
	}
	
	immediate = {		
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.102.a
		custom_tooltip = shroud_rising_shroud_rift.102.a.tooltip
		add_planet_devastation = 20
		random_list = {	
			50 = { random_owned_pop = { kill_pop = yes } }
			50 = {}
		}
		hidden_effect = {
			set_planet_flag = has_had_shroud_incursion
		}
	}			
		
}

# Yearly event for shroud incursion on eye of terror influenced worlds
event = {
	id = shroud_rising_shroud_rift.103
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		 # has_global_flag = eye_of_terror_open
	}
	immediate = {
		every_country = {
			limit = {
				any_owned_planet = {
					OR = {
						has_modifier = eye_of_terror_influence_1
						has_modifier = eye_of_terror_influence_2
					}
				}
			
			}
			
			every_owned_planet = {					
				random_list = {	
					50 = { }
					50 = { planet_event = { id = shroud_rising_shroud_rift.104 days = 15 random = 200 } 
					}
				}
			}				
		}
	}
}
	
	
# spawn of shroud armies	
planet_event = {
	id = shroud_rising_shroud_rift.104
	hide_window = yes
	is_triggered_only = yes	
	
	trigger = {
				has_owner = yes 
				# owner = { is_ai = no } #for testing							
				is_colony = yes						
				NOT = { 					
					has_planet_flag = has_shroud_monolith					
				}															
				OR = {
					has_modifier = eye_of_terror_influence_1
					has_modifier = eye_of_terror_influence_2
				}
				has_ground_combat = no
	}
	
	immediate = {					
						
							
														
							create_country = {
								name = "NAME_shroud_horror_country"
								type = shroud_horrors		
								flag = {
									icon = {
										category = "special"
										file = "the_shroud.dds"
									}
									background= {
										category = "backgrounds"
										file = "00_solid.dds"
									}
									colors={
										"dark_purple"
										"black"
										"null"
										"null"
									}
								}								
							}
							last_created_country = {				
							save_global_event_target_as = shroud_world_horror
							}
							every_country = { establish_communications_no_message = event_target:shroud_world_horror }
							
							create_species = {
								name = "NAME_shroud_horrors"
								class = random_non_machine
								portrait = random
								traits = random
							}
							
							# Spawn horrors
							create_army = {
								name = "NAME_horror_army"
								owner = last_created_country
								species = last_created_species
								type = "shroud_horror_army_1"
							}
							create_army = {
								name = "NAME_horror_army"
								owner = last_created_country
								species = last_created_species
								type = "shroud_horror_army_2"
							}							
							random_list = {									
								33 = {
									modifier = {
										factor = 0
										has_modifier = eye_of_terror_influence_2						
									}
									create_army = {
										name = "NAME_horror_army"
										owner = last_created_country
										species = last_created_species
										type = "shroud_greater_horror_army"
									}
									create_army = {
										name = "NAME_horror_army"
										owner = last_created_country
										species = last_created_species
										type = "shroud_horror_army_2"
									}
								}
								33 = { 
									modifier = {
										factor = 0
										mid_game_years_passed <= 50						
									}
									create_army = {
										name = "NAME_horror_army"
										owner = last_created_country
										species = last_created_species
										type = "shroud_greater_horror_army"
									}
									create_army = {
										name = "NAME_horror_army"
										owner = last_created_country
										species = last_created_species
										type = "shroud_horror_army_1"
									}
								}
								32 = {
									modifier = {
										factor = 0
										has_modifier = eye_of_terror_influence_2						
									}
									create_army = {
										name = "NAME_horror_army"
										owner = last_created_country
										species = last_created_species
										type = "shroud_greater_horror_army"
									}
									create_army = {
										name = "NAME_horror_army"
										owner = last_created_country
										species = last_created_species
										type = "shroud_horror_army_1"
									}
								}
								1 = {}
							}
							
						planet_event = { id = shroud_rising_shroud_rift.105 }	
	}
	
}

# Inform owner, that his planet is now fucked
planet_event = {
	id = shroud_rising_shroud_rift.105
	title = "shroud_rising_shroud_rift.102.name"
	#desc = "shroud_rising_shroud_rift.102.desc"
	picture = GFX_evt_monster_1
	show_sound = event_the_great_awakening	
	is_triggered_only = yes
	location = root
	
	desc = {
		text = shroud_rising_shroud_rift.102.1.desc
		trigger = {
			NOT = { has_planet_flag = has_had_shroud_incursion }
		}
	}
	
	desc = {
		text = shroud_rising_shroud_rift.102.2.desc
		trigger = {
			has_planet_flag = has_had_shroud_incursion
		}
	}
	
	trigger = {
		
	}
	
	immediate = {		
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.102.a
		custom_tooltip = shroud_rising_shroud_rift.102.a.tooltip
		add_planet_devastation = 20
		random_list = {	
			50 = { random_owned_pop = { kill_pop = yes } }
			50 = {}
		}
		hidden_effect = {
			set_planet_flag = has_had_shroud_incursion
		}	
	}			
		
}

# Rift system enter
fleet_event = {
	id = shroud_rising_shroud_rift.106
	title = "shroud_rising_shroud_rift.106.name"
	desc = "shroud_rising_shroud_rift.106.desc"
	picture = GFX_evt_shroud_tunnel
	show_sound = event_psionic
	location = FROM

	is_triggered_only = yes
	
	trigger = {
		from = { 			
			any_system_ambient_object = {
				has_ambient_object_flag = shroud_rift_object
			}		
		}						
		owner = {			
			NOR = { 
				has_country_flag = shroud_rift_sighted 				
			}
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = shroud_rift_sighted
		}
		save_event_target_as = rift_entry_fleet		
	}
	
	option = {
		name = shroud_rising_shroud_rift.106.a
		
		
		
	}
	#run away!!
	option = {
		name = shroud_rising_shroud_rift.106.b
		custom_tooltip = shroud_rising_shroud_rift.106.b.tooltip
		event_target:rift_entry_fleet = {
			fleet = {			
				set_mia = mia_return_home
			}
		}		
		
	}
	
	option = {
		name = shroud_rising_shroud_rift.106.c
		trigger = {
				owner_species = { OR = { has_trait = trait_psionic has_trait = trait_hive_mind } }
			}
		
	}
	
}


# announce when all 3 are closed
country_event = {
	id = shroud_rising_shroud_rift.9000
	title = "shroud_rising_shroud_rift.9000.name"
	desc = "shroud_rising_shroud_rift.9000.desc"
	picture = GFX_evt_eye_of_terror_sky
	show_sound = event_construction
	is_triggered_only = yes		
				
	immediate = {
		
	}
	# OK
	option = {
		name = shroud_rising_shroud_rift.9000.a		
		custom_tooltip = shroud_rising_shroud_rift.9000.a.tooltip
		
	}
		
	option = {
		name = shroud_rising_shroud_rift.9000.b	
		trigger = {
				owner = {
					has_civic = civic_shroud_worship
				}
		 }		
	}
}