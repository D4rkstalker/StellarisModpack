namespace = sofe_setup

country_event = {
	id = sofe_setup.1
	hide_window = yes

	fire_only_once = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = outer_cluster_opened
		# spawn L-Cluster
		country_event = { id = sofe_setup.11000 }
		# enable L-Gate
		# outcome, to be determined at game start
		country_event = { id = sofe_crisis.1 }
		every_megastructure = {
			limit = {
				is_megastructure_type = sofe_outer_gate
			}
			activate_gateway = this
		}
		every_ambient_object = {
			limit = {
				has_ambient_object_flag = sofe_shield_full
			}
			destroy_ambient_object = this
		}
		every_ambient_object = {
			limit = {
				has_ambient_object_flag = sofe_shield_partial
			}
			destroy_ambient_object = this
		}
		# activated terminal egress l-gate
		#set_global_flag = outergates_activated_globally
	}
}

# Gamestart Setting
event = {
	id = sofe_setup.2
	hide_window = yes

	is_triggered_only = yes

	fire_only_once = yes

	immediate = {

		set_global_flag = sofe_activated

		random_system = {
			limit = {
				NOT = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
				}
			}
			save_global_event_target_as = outer_gate_1
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1				
					}
				}
			}
			save_global_event_target_as = outer_gate_2
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2		
					}
				}
			}
			save_global_event_target_as = outer_gate_3
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2
						is_same_value = event_target:outer_gate_3	
					}
				}
			}
			save_global_event_target_as = outer_gate_4
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2
						is_same_value = event_target:outer_gate_3
						is_same_value = event_target:outer_gate_4
					}
				}
			}
			save_global_event_target_as = outer_gate_5
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2
						is_same_value = event_target:outer_gate_3
						is_same_value = event_target:outer_gate_4
						is_same_value = event_target:outer_gate_5
					}
				}
			}
			save_global_event_target_as = outer_gate_6
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2
						is_same_value = event_target:outer_gate_3
						is_same_value = event_target:outer_gate_4
						is_same_value = event_target:outer_gate_5
						is_same_value = event_target:outer_gate_6
					}
				}
			}
			save_global_event_target_as = outer_gate_7
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2
						is_same_value = event_target:outer_gate_3
						is_same_value = event_target:outer_gate_4
						is_same_value = event_target:outer_gate_5
						is_same_value = event_target:outer_gate_6
						is_same_value = event_target:outer_gate_7	
					}
				}
			}
			save_global_event_target_as = outer_gate_8
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2
						is_same_value = event_target:outer_gate_3
						is_same_value = event_target:outer_gate_4
						is_same_value = event_target:outer_gate_5
						is_same_value = event_target:outer_gate_6
						is_same_value = event_target:outer_gate_7	
						is_same_value = event_target:outer_gate_8
					}
				}
			}
			save_global_event_target_as = outer_gate_9
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2
						is_same_value = event_target:outer_gate_3
						is_same_value = event_target:outer_gate_4
						is_same_value = event_target:outer_gate_5
						is_same_value = event_target:outer_gate_6
						is_same_value = event_target:outer_gate_7	
						is_same_value = event_target:outer_gate_8		
						is_same_value = event_target:outer_gate_9
					}
				}
			}
			save_global_event_target_as = outer_gate_10
		}
		random_system = {
			limit = {
				NOR = {
					has_star_flag = outercluster_gate
				}
				any_system_megastructure = {
					is_megastructure_type = sofe_outer_gate
					NOR = {
						is_same_value = event_target:outer_gate_1
						is_same_value = event_target:outer_gate_2
						is_same_value = event_target:outer_gate_3
						is_same_value = event_target:outer_gate_4
						is_same_value = event_target:outer_gate_5
						is_same_value = event_target:outer_gate_6
						is_same_value = event_target:outer_gate_7	
						is_same_value = event_target:outer_gate_8		
						is_same_value = event_target:outer_gate_9
						is_same_value = event_target:outer_gate_10
					}
				}
			}
			save_global_event_target_as = outer_gate_11
		}
		random_list = {
			60 = {
				set_global_flag = will_berserk_caretaker
			}
			40 = {
				set_global_flag = will_kill_caretaker				
			}
		}		

		random_list = {
			25 = {
				set_global_flag = spiritualist_riddle_randomed
			}
			25 = {
				set_global_flag = materialist_riddle_randomed
			}
			25 = {
				set_global_flag = xenophile_riddle_randomed
			}
			25 = {
				set_global_flag = xenophobe_riddle_randomed
			}
		}
		
		random_list = {
			25 = {
				set_global_flag = spiritualist_second_riddle_randomed
			}
			25 = {
				set_global_flag = materialist_second_riddle_randomed
			}
			25 = {
				set_global_flag = xenophile_second_riddle_randomed
			}
			25 = {
				set_global_flag = xenophobe_second_riddle_randomed
			}
		}		
	}
}



# spawn cluster
country_event = {
	id = sofe_setup.11000
	hide_window = yes


	is_triggered_only = yes

	immediate = {
		set_spawn_system_batch = begin
		# batch-processes the spawn_system effects between "begin" and "end",
		# so caches are recalculated only once rather than for every system spawned
		# can also be used when removing and adding hyperlanes
		no_scope = {
			# makes system positions originate from galactic core
			spawn_system = {
				min_distance >= 475
				max_distance <= 485
				min_orientation_angle = 155
				max_orientation_angle = 165
				initializer = sofe_throne_entrance
			}
			random_system = {
				limit = { has_star_flag = outercluster1 }
				save_global_event_target_as = outercluster1
				spawn_system = {
					min_distance >= 19
					max_distance <= 21
					min_orientation_angle = 60
					max_orientation_angle = 70
					initializer = sofe_outer_cluster_a
				}
				spawn_system = {
					min_distance >= 19
					max_distance <= 21
					min_orientation_angle = 120
					max_orientation_angle = 130
					initializer = sofe_outer_cluster_b
				}
				spawn_system = {
					min_distance >= 21
					max_distance <= 24
					min_orientation_angle = 70
					max_orientation_angle = 80
					initializer = sofe_outer_cluster_c
				}
				spawn_system = {
					min_distance >= 21
					max_distance <= 24
					min_orientation_angle = 130
					max_orientation_angle = 140
					initializer = sofe_outer_cluster_d
				}
				spawn_system = {
					min_distance >= 21
					max_distance <= 22
					min_orientation_angle = 100
					max_orientation_angle = 100
					initializer = sofe_outer_cluster_fortress
				}
			}
			event_target:outercluster1 = {
				random_system_megastructure = {
					limit = {
						is_megastructure_type = sofe_outer_gate
					}
					activate_gateway = this
				}
			}
	
		# clear all hyperlanes to and within the cluster
		every_system = {
			limit = { 
				has_star_flag = outercluster
			}
			isolate_system = yes
		}
	
		set_spawn_system_batch = end
		}
	}
}

