namespace = city_ringworlds

# Decide which model to apply to a terraformed ringworld
planet_event = {
	id = city_ringworlds.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		this = {
			if = {
				limit = {
					this = {
						is_planet_class = pc_ringworld_habitable
					}
				}
				set_planet_entity = {
					entity = "ringworld_habitable_entity_01_entity"
					graphical_culture = from
				}
				add_deposit = d_for_bad_ai
			}
			if = {
				limit = {
					this = {
						is_planet_class = pc_ringworld_city
					}
				}
				set_planet_entity = {
					entity = "ringworld_city_entity_01_entity"
					graphical_culture = from
				}
			}
			if = {
				limit = {
					this = {
						is_planet_class = pc_ringworld_machine
					}
				}
				set_planet_entity = {
					entity = "ringworld_machine_entity_01_entity"
					graphical_culture = from
				}
				add_deposit = d_for_bad_ai
			}
			if = {
				limit = {
					this = {
						is_planet_class = pc_ringworld_hive
					}
				}
				set_planet_entity = {
					entity = "ringworld_hive_entity_01_entity"
					graphical_culture = from
				}
				add_deposit = d_for_bad_ai
			}
			if = {
				limit = {
					this = {
						is_planet_class = pc_squareworld_habitable
					}
				}
				set_planet_entity = {
					entity = "ringworld_habitable_entity_01_entity"
					graphical_culture = from
				}
				add_deposit = d_for_bad_ai
			}
		}
	}
}

planet_event = {
	id = city_ringworlds.2
	title = city_ringworlds.2.name
	desc = city_ringworlds.2.desc
	picture = GFX_evt_city_planet
	show_sound = event_cityscape
	location = root

	is_triggered_only = yes

	trigger = {
		is_planet_class = pc_ringworld_city
	}

	option = {
		name = city_ringworlds.2.a
	}
}

namespace = city_ringworlds_districts

planet_event = {
    id = city_ringworlds_districts.1
	hide_window = yes
    is_triggered_only = yes
	
	trigger = { is_planet_class = pc_ringworld_city }
	
	immediate = {
		while = {
			limit = {
				num_districts = {
					type = district_city
					value > 0
				}
			}
			remove_district = district_city
		}
		add_district = district_arcology_ringworld_housing
		add_district = district_arcology_ringworld_housing
		add_deposit = d_for_bad_ai
	}
}

planet_event = {
    id = city_ringworlds_districts.2
	hide_window = yes
    is_triggered_only = yes
	
	trigger = {
		or = {
			is_planet_class = pc_ringworld_machine
		}
	}
	
	immediate = {
		while = {
			limit = {
				num_districts = {
					type = district_nexus
					value > 0
				}
			}
			remove_district = district_nexus
		}
	}
}

planet_event = {
    id = city_ringworlds_districts.3
	hide_window = yes
    is_triggered_only = yes
	
	trigger = {
		or = {
			is_planet_class = pc_ringworld_hive
		}
	}
	
	immediate = {
		while = {
			limit = {
				num_districts = {
					type = district_hive
					value > 0
				}
			}
			remove_district = district_hive
		}
	}
}


namespace = megadistrict

country_event = {
    id = megadistrict.1
	hide_window = yes
    is_triggered_only = yes
	
	trigger = {
		OR = {
			FROM = { is_megastructure_type = ring_world_3_intermediate }
			FROM = { is_megastructure_type = ring_world_large_3_I_intermediate_E }
			FROM = { is_megastructure_type = ring_world_large_3_I_intermediate_F }
			FROM = { is_megastructure_type = ring_world_large_3_I_intermediate }
			FROM = { is_megastructure_type = ring_world_large_3_II_intermediate }
			FROM = { is_megastructure_type = ring_world_large_3_III_intermediate_E }
			FROM = { is_megastructure_type = ring_world_large_3_III_intermediate_D }
			FROM = { is_megastructure_type = ring_world_large_3_III_intermediate_C }
			FROM = { is_megastructure_type = ring_world_large_3_III_intermediate_B }
			FROM = { is_megastructure_type = ring_world_large_3_III_intermediate }
			FROM = { is_megastructure_type = ringworld_upgrade_1 }
		}
	}
	
	immediate = {
		from.planet = {
			solar_system = {
				every_system_planet = {
					if = {
						limit = {
							is_planet_class = pc_ringworld_habitable 
							not = {
								has_deposit = d_for_bad_ai
							}
						}
						add_deposit = d_for_bad_ai
					}
				}
			}
		}
	}
}