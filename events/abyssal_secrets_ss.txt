####################
# Abyssal Secrets
# Solar Storm
####################

namespace = abyssalsecrets

### Setup

event = {
	id = abyssalsecrets.999
	hide_window = yes
	
	is_triggered_only = yes
	
	fire_only_once = yes

	trigger = {
		OR = {
			any_playable_country = {
				NOT = { has_ethic = ethic_gestalt_consciousness }
				NOT = { has_country_flag = abyssalsecrets_fired }
				NOT = { has_global_flag = abyssal_father_destroyed }
				NOT = { has_global_flag = ss_AS_enable_disable }
				is_ai = no
				any_owned_planet = {
					is_colony = yes
					has_building = building_quantanium_lab
				}
			}
			any_playable_country = {
				has_ethic = ethic_gestalt_consciousness
				has_global_flag = ss_AS_gestalt_enable
				NOT = { has_country_flag = abyssalsecrets_fired }
				NOT = { has_global_flag = abyssal_father_destroyed }
				NOT = { has_global_flag = ss_AS_enable_disable }
				is_ai = no
				any_owned_planet = {
					is_colony = yes
					has_building = building_quantanium_lab
				}
			}
		}
	}
	
	immediate = {
		set_global_flag = abyssalsecrets_fired
		random_country = {
			#I really only care about one of you (only one empire gets the main event)
			limit = {
				any_owned_planet = {
					is_colony = yes
					has_building = building_quantanium_lab
				}
			}
			country_event = { id = abyssalsecrets.1 }
			set_country_flag = abyssal_child
		}
		random_country = {
			limit = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { has_country_flag = fallen_empire_machine }
				OR = {
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_fanatic_materialist
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_fanatic_xenophile
				}
			}
			random_country = {
				limit = { has_country_flag = abyssal_child }
				if = {
					limit = { has_communications = prev	}
					establish_communications_no_message = prev
				}
			}
			save_global_event_target_as = ss_abyss_fallen_empire_comm
		}
	}
}

### Fallen Empire Contacts player urging them to destroy all quantanium labs
country_event = {
	id = abyssalsecrets.1
	title = TRANSMISSION
	diplomatic = yes
	force_open = yes
	
	desc = {
		text = abyssalsecrets.1.desc_01
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_spiritualist
			}
		}
	}
	desc = {
		text = abyssalsecrets.1.desc_02
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_materialist
			}
		}
	}
	desc = {
		text = abyssalsecrets.1.desc_03
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophobe
			}
		}
	}
	desc = {
		text = abyssalsecrets.1.desc_04
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}
	
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:ss_abyss_fallen_empire_comm
		planet_background = event_target:ss_abyss_fallen_empire_comm
		graphical_culture = event_target:ss_abyss_fallen_empire_comm
		city_level = event_target:ss_abyss_fallen_empire_comm
		room = event_target:ss_abyss_fallen_empire_comm.ruler
	}

	option = {
		name = "abyssalsecrets.1.a"
		hidden_effect = {
			random_owned_planet = {
				limit = {
					controller = { is_same_value = root }
					has_building = building_quantanium_lab
					NOR = {
						has_owner = yes
						has_ground_combat = no
						is_occupied_flag = no
					}
				}
				save_event_target_as = bombed_planet_1
			}
			country_event = { id = abyssalsecrets.2 days = 150 random = 50 }
		}
	}
}

# Checker event to make sure quantanium labs aren't running and terrorists are bombin stuff

country_event = {
	id = abyssalsecrets.2
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				any_owned_planet = {
					controller = { is_same_value = root }
					has_building = building_quantanium_lab
				}
			}
			random_owned_planet = {
				limit = {
					controller = { is_same_value = root }
					has_building = building_quantanium_lab
				}
				planet_event = { id = abyssalsecrets.3 days = 10 }
			}
		}
		else = {
			country_event = { id = abyssalsecrets.2 days = 100 } #Check again later
		}
	}
}


### A pop is destroyed by mysterious assailants on a world with a quantanium lab

planet_event = {
	id = abyssalsecrets.3
	title = "abyssalsecrets.3.name"
	desc = "abyssalsecrets.3.desc"
	picture = GFX_evt_night_raid
	show_sound = event_planetary_riot
	location = root

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.3.a
		owner = {
			if = {
				limit = {
					NOT = { has_modifier = abyssalsecrets_bombed_planet }
				}
				add_modifier = {
					modifier = abyssalsecrets_bombed_planet
					days = 1800
				}
			}
		}
		while = {
			count = 1
			random_owned_pop = { kill_pop = yes }
		}
		add_planet_devastation = 20
		hidden_effect = {
			owner = { country_event = { id = abyssalsecrets.5 days = 60 random = 40 } }
		}
	}
}

### (UNUSED) Authorities find prime suspect who has commited suicide.

country_event = {
	id = abyssalsecrets.4
	title = "abyssalsecrets.4.name"
	desc = "abyssalsecrets.4.desc"
	picture = GFX_evt_dark_alley
	show_sound = event_criminal_activity

	is_triggered_only = yes
	
	option = {
		name = "abyssalsecrets.4.a"
		default_hide_option = yes
		hidden_effect = {
			country_event = { id = abyssalsecrets.5 days = 50 random = 30 }
		}
	}
}

### Authorities find group of 4 behind the bombings. Their motive is still a mystery.

country_event = {
	id = abyssalsecrets.5
	title = "abyssalsecrets.5.name"
	desc = "abyssalsecrets.5.desc"
	picture = GFX_evt_dark_alley
	show_sound = event_criminal_activity

	is_triggered_only = yes
	
	#trigger = {
	#	any_owned_planet = {
	#		has_building = building_quantanium_lab
	#	}
	#}
	
	option = {
		name = "abyssalsecrets.5.a"
		default_hide_option = yes
		hidden_effect = {
			random_owned_planet = {
				limit = {
					controller = { is_same_value = root }
				}
				save_event_target_as = bombed_planet_2
				planet_event = { id = abyssalsecrets.10 days = 150 random = 50 }
			}
		}
	}
}

### A power relay on a planet is destroyed. Significant damage to multiple city blocks.

planet_event = {
	id = abyssalsecrets.10
	title = "abyssalsecrets.10.name"
	desc = "abyssalsecrets.10.desc"
	picture = GFX_evt_night_raid
	show_sound = event_air_raid_siren
	location = root

	is_triggered_only = yes
	
	pre_triggers = {
		has_owner = yes
		is_ai = no
		has_ground_combat = no
		is_occupied_flag = no
	}
	
	option = {
		name = abyssalsecrets.10.a
		owner = {
			if = {
				limit = {
					NOT = { has_modifier = abyssalsecrets_bombed_planet }
				}
				add_modifier = {
					modifier = abyssalsecrets_bombed_planet
					days = 1800
				}
			}
		}
		while = {
			count = 2
			random_owned_pop = { kill_pop = yes }
		}
		add_planet_devastation = 40
		hidden_effect = {
			owner = { country_event = { id = abyssalsecrets.11 days = 30 random = 20 } }
		}
	}
}

# Intelligence services identify the assailants. Will not divulge information. Asks players if they should interrogate further.

country_event = {
	id = abyssalsecrets.11
	title = "abyssalsecrets.11.name"
	desc = "abyssalsecrets.11.desc"
	picture = GFX_evt_surrender
	show_sound = event_default

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.11.a
		custom_tooltip = abyssalsecrets.11.a.tooltip
		owner = {
			add_resource = { influence = -20 }
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.12 days = 20 random = 10 }
		}
	}
	
	option = {
		name = abyssalsecrets.11.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.13 days = 140 random = 40 }
		}
	}

	option = {
		name = abyssalsecrets.11.c
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_authoritarian
					has_ethic = ethic_authoritarian
				}
			}
		}
		owner = {
			add_resource = { influence = 50 }
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.13 days = 140 random = 40 }
		}
	}
}

# Interrogation results; terrorists appear to be brainwashed.

country_event = {
	id = abyssalsecrets.12
	title = "abyssalsecrets.12.name"
	desc = "abyssalsecrets.12.desc"
	picture = GFX_evt_smugglers_in_bar
	show_sound = event_default

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.12.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.13 days = 150 random = 50 }
		}
	}
}

# Intelligence officials submit a letter of concern.

country_event = {
	id = abyssalsecrets.13
	title = "abyssalsecrets.14.name"
	desc = "abyssalsecrets.14.desc"
	picture = GFX_evt_intelligence_report
	show_sound = event_criminal_activity

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.14.a
		hidden_effect = {
			random_owned_planet = {
				limit = {
					controller = { is_same_value = root }
				}
				planet_event = { id = abyssalsecrets.20 days = 250 random = 100 }
			}
		}
	}
}

# (UNUSED) Setup event for following events.

country_event = {
	id = abyssalsecrets.15
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			25 = { # Some scientists go missing
				country_event = { id = abyssalsecrets.16 }
				random_owned_planet = {
					limit = {
						controller = { is_same_value = root }
					}
					planet_event = { id = abyssalsecrets.20 days = 250 random = 70 }
				}
			}
			25 = { # Player's notice a significant drop in crime rates...
				country_event = { id = abyssalsecrets.17 }
				random_owned_planet = {
					limit = {
						controller = { is_same_value = root }
					}
					planet_event = { id = abyssalsecrets.20 days = 250 random = 70 }
				}
			}
			50 = { # A number of patients are falling vicitm to psychosis...
				random_owned_planet = {
					limit = {
						controller = { is_same_value = root }
					}
					planet_event = { id = abyssalsecrets.18 }
					save_global_event_target_as = ss_planet_psychosis_1
				}
				random_owned_planet = {
					limit = {
						controller = { is_same_value = root }
					}
					planet_event = { id = abyssalsecrets.20 days = 250 random = 70 }
				}
			}
		}
	}
}

# (UNUSED) Some scientists go missing; spooky!

country_event = {
	id = abyssalsecrets.16
	title = "abyssalsecrets.16.name"
	desc = "abyssalsecrets.16.desc"
	picture = GFX_evt_physics_research
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.16.a
	}
}

# (UNUSED) There is reduced country-wide crime. That is good I guess?

country_event = {
	id = abyssalsecrets.17
	title = "abyssalsecrets.17.name"
	desc = "abyssalsecrets.17.desc"
	picture = GFX_evt_news_room
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.17.a
		owner = {
			if = {
				limit = {
					NOT = { has_modifier = abyssalsecrets_reduced_crime }
				}
				add_modifier = {
					modifier = abyssalsecrets_reduced_crime
					days = 1800
				}
			}
		}
	}
}

# (UNUSED) Sudden bout of psychosis takes over a planet. Can pay some resources to help alleviate it.

planet_event = {
	id = abyssalsecrets.18
	title = "abyssalsecrets.18.name"
	desc = "abyssalsecrets.18.desc"
	picture = GFX_evt_colony_settlement
	show_sound = event_mystic_reveal
	location = ROOT

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.18.a
		owner = {
			add_resource = { 
			  energy = -2500
			  consumer_goods = -250
			}
		}
		if = {
			limit = {
				NOT = { has_modifier = abyssalsecrets_psychosis }
			}
			add_modifier = {
				modifier = abyssalsecrets_psychosis
				days = 300
			}
		}
	}
	
	option = {
		name = abyssalsecrets.18.b
		if = {
			limit = {
				NOT = { has_modifier = abyssalsecrets_psychosis }
			}
			add_modifier = {
				modifier = abyssalsecrets_psychosis
				days = 1200
			}
		}
	}
	
	option = {
		name = abyssalsecrets.18.c
		owner = {
			set_country_flag = abyssalsecrets.18.investigated
			add_resource = { 
			  energy = -2500
			  consumer_goods = -250
			  influence = -75
			}
		}
		if = {
			limit = {
				NOT = { has_modifier = abyssalsecrets_psychosis }
			}
			add_modifier = {
				modifier = abyssalsecrets_psychosis
				days = 300
			}
		}
		enable_special_project = {
			name = "ABYSSALSECRETS_PSYCHOSIS_PROJ"
			location = root
			owner = root.owner
		}
	}
}

# (UNUSED) Investigation into psychosis complete, some information revealed.

country_event = {
	id = abyssalsecrets.19
	title = "abyssalsecrets.19.name"
	desc = "abyssalsecrets.19.desc"
	picture = GFX_evt_news_room
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.19.a
	}
}

# Shit starts to get real; a series of unpilotted drones take up orbit near a planet

planet_event = {
	id = abyssalsecrets.20
	title = "abyssalsecrets.20.name"
	desc = "abyssalsecrets.20.desc"
	picture = GFX_evt_fleet_from_surface
	show_sound = event_air_raid_siren

	is_triggered_only = yes
	
	immediate = {
		add_modifier = {
			modifier = "abyssalsecrets_blockade"
			days = -1
		}
		save_global_event_target_as = abyss_blockade_planet
	}
	
	option = {
		name = abyssalsecrets.20.a
		hidden_effect = {
			owner = { country_event = { id = abyssalsecrets.21 } }
		}
	}
}

# Dude opens comms with player; issues a weak warning and demands some non-sensical stuff

country_event = {
	id = abyssalsecrets.21
	title = "abyssalsecrets.21.name"
	desc = "abyssalsecrets.21.desc"
	trackable = yes
	
	diplomatic = yes
	
	is_triggered_only = yes

	immediate = {
		create_leader = {
			class = admiral
			species = root.owner_species
			name = random
			skill = 2
		}
		last_created_leader = {
			save_global_event_target_as = abyss_insane_leader
		}
	}
		
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.21.a
		response_text = abyssalsecrets.21.a.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.21.b
		response_text = abyssalsecrets.21.b.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.21.c
		response_text = abyssalsecrets.21.c.response
		is_dialog_only = yes
		trigger = {
			has_country_flag = abyssalsecrets.18.investigated
		}
	}
	option = {
		name = abyssalsecrets.21.d
		response_text = abyssalsecrets.21.d.response
		hidden_effect = {
			country_event = { id = abyssalsecrets.22 days = 10 }
		}
	}
	option = {
		name = abyssalsecrets.21.e
		response_text = abyssalsecrets.21.e.response
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_authoritarian
					has_ethic = ethic_authoritarian
				}
			}
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.22 days = 10 }
		}
	}
	option = {
		name = abyssalsecrets.21.f
		response_text = abyssalsecrets.21.f.response
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_pacifist
					has_ethic = ethic_pacifist
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_spiritualist
				}
			}
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.22 days = 10 }
		}
	}
}

# Player decides what to do.

country_event = {
	id = abyssalsecrets.22
	title = "abyssalsecrets.22.name"
	desc = "abyssalsecrets.22.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_ship_bridge

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.22.a
		enable_special_project = {
			name = "ABYSSALSECRETS_SECRETMISSION"
			location = FROMFROM
			owner = root.owner
		}
	}
	
	option = {
		name = abyssalsecrets.22.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.25 days = 10 }
		}
		
	}
	
	option = {
		name = abyssalsecrets.22.c
		hidden_effect = {
			country_event = { id = abyssalsecrets.27 days = 10 }
		}
	}
}

# After event decision on how to move forward after the blockade.

country_event = {
	id = abyssalsecrets.23
	title = "abyssalsecrets.23.name"
	desc = "abyssalsecrets.23.desc"
	picture = GFX_evt_interior_battle
	show_sound = event_default

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.23.a
		custom_tooltip = abyssalsecrets.23.a.tooltip
		hidden_effect = {
			country_event = { id = abyssalsecrets.152 days = 250 random = 75 }
		}
	}
	
	#option = {
	#	name = abyssalsecrets.23.b
	#	custom_tooltip = abyssalsecrets.23.b.tooltip
	#	hidden_effect = {
	#		set_country_flag = abyssalsecrets.20.police
	#		country_event = { id = abyssalsecrets.100 days = 250 random = 75 }
	#	}
	#}
	
	#option = {
	#	name = abyssalsecrets.23.c
	#	custom_tooltip = abyssalsecrets.23.c.tooltip
	#	trigger = {
	#		owner = {
	#			OR = {
	#				has_ethic = ethic_fanatic_authoritarian
	#				has_ethic = ethic_authoritarian
	#				has_ethic = ethic_fanatic_militarist
	#				has_ethic = ethic_militarist
	#				has_ethic = ethic_fanatic_spiritualist
	#				has_ethic = ethic_spiritualist
	#				has_ethic = ethic_fanatic_xenophobe
	#				has_ethic = ethic_xenophobe
	#			}
	#		}
	#	}
	#	hidden_effect = {
	#		set_country_flag = abyssalsecrets.20.arrest
	#		country_event = { id = abyssalsecrets.100 days = 350 random = 75 }
	#	}
	#}
	
	#option = {
	#	name = abyssalsecrets.23.d
	#	custom_tooltip = abyssalsecrets.23.d.tooltip
	#	trigger = {
	#		owner = {
	#			OR = {
	#				has_ethic = ethic_fanatic_materialist
	#				has_ethic = ethic_materialist
	#				has_ethic = ethic_fanatic_xenophile
	#				has_ethic = ethic_xenophile
	#				has_ethic = ethic_fanatic_pacifist
	#				has_ethic = ethic_pacifist
	#				has_ethic = ethic_fanatic_egalitarian
	#				has_ethic = ethic_egalitarian
	#			}
	#		}
	#	}
	#	hidden_effect = {
	#		set_country_flag = abyssalsecrets.20.aid
	#		country_event = { id = abyssalsecrets.100 days = 350 random = 75 }
	#	}
	#}
	
	option = {
		name = abyssalsecrets.23.e
		custom_tooltip = abyssalsecrets.23.e.tooltip
		hidden_effect = {
			set_country_flag = abyssalsecrets.20.investigate
			country_event = { id = abyssalsecrets.152 days = 350 random = 75 }
		}
	}
}

# Special forces disable drones, bad guy dies.

planet_event = {
	id = abyssalsecrets.24
	title = "abyssalsecrets.24.name"
	desc = "abyssalsecrets.24.desc"
	picture = GFX_evt_interior_battle
	show_sound = event_ground_battle

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.24.a
		remove_modifier = "abyssalsecrets_blockade"
		hidden_effect = {
			owner = { country_event = { id = abyssalsecrets.23 days = 15 } }
		}
	}
}

# Set-up event for drone fleet. Creates a fleet of 15 crappy drone vessels.

country_event = {
	id = abyssalsecrets.25
	title = "abyssalsecrets.25.name"
	desc = "abyssalsecrets.25.desc"
	picture = GFX_evt_ship_in_orbit
	show_sound = event_red_alert
	location = event_target:abyss_blockade_planet
	
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { NOT = { exists = event_target:blockade_drones_country } }
			create_country = {
				name = "NAME_blockade_drones"
				type = blockade_drone_type
				flag = {
					icon = {
						category = "blocky"
						file = "flag_blocky_23.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"grey"
						"red"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				establish_communications_no_message = root
				save_global_event_target_as = blockade_drones_country
			}
		}

		#event_target:abyss_blockade_planet = {
		#	save_event_target_as = blockade_drone_spawn_system
		#	random_system_planet = { save_event_target_as = shroud_spawn_planet }
		#}
 
		
 
		create_fleet = {
			name = "NAME_blockade_drones_name"
			settings = {
				spawn_debris = no
				is_boss = no
			}			
			effect = {
				set_owner = event_target:blockade_drones_country
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				create_ship = {
					name = "NAME_blockade_drones_name"
					design = "NAME_blockade_drones_class"
				}
				set_location = event_target:abyss_blockade_planet
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = return_point
				set_aggro_range = 200
				assign_leader = event_target:abyss_insane_leader
				set_fleet_flag = blockade_drone_fleet
			}
		}
	}
	
	option = {
		name = "abyssalsecrets.25.a"
	}
}

# Checked in on-actions for when the blockade fleet is destroyed.

country_event = {
	id = abyssalsecrets.26
	title = "abyssalsecrets.26.name"
	desc = "abyssalsecrets.26.desc"
	picture = GFX_evt_small_space_battle
	show_sound = event_space_battle

	is_triggered_only = yes
	
	trigger = {
		exists = From
		fromfromfrom = { has_fleet_flag = blockade_drone_fleet }
	}
	
	option = {
		name = abyssalsecrets.26.a
		event_target:abyss_blockade_planet = {
			remove_modifier = "abyssalsecrets_blockade"
		}
		hidden_effect = {
			owner = { country_event = { id = abyssalsecrets.23 days = 15 } }
			event_target:blockade_drones_country = { destroy_country = yes }
		}
	}
}

# Diplomatic option. Opens up dialog again. contains multiple chat options; correct one causes a stand down, otherwise have to resort to other options.
# NOTE Entries 27-35 are the diplo entries.

country_event = {
	id = abyssalsecrets.27
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.27.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.27.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.28 }
		}
	}
	option = {
		name = abyssalsecrets.27.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.29 }
		}
	}
}

country_event = {
	id = abyssalsecrets.28
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.28.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.28.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.30 }
		}
	}
	option = {
		name = abyssalsecrets.28.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.31 }
		}
	}
}

country_event = {
	id = abyssalsecrets.29
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.29.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.28.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.30 }
		}
	}
	option = {
		name = abyssalsecrets.28.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.31 }
		}
	}
}

country_event = {
	id = abyssalsecrets.30
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.30.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.30.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.32 }
		}
	}
	option = {
		name = abyssalsecrets.30.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.33 }
		}
	}
}

country_event = {
	id = abyssalsecrets.31
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.31.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.30.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.32 }
		}
	}
	option = {
		name = abyssalsecrets.30.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.33 }
		}
	}
}

country_event = {
	id = abyssalsecrets.32
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.32.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.32.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.34 }
		}
	}
	option = {
		name = abyssalsecrets.32.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.35 }
		}
	}
}

country_event = {
	id = abyssalsecrets.33
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.33.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.32.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.34 }
		}
	}
	option = {
		name = abyssalsecrets.32.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.35 }
		}
	}
}

country_event = {
	id = abyssalsecrets.34
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.34.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.34.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.25 }
		}
	}
}

country_event = {
	id = abyssalsecrets.35
	title = "abyssalsecrets.27.name"
	desc = "abyssalsecrets.35.desc"
	diplomatic = yes
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:abyss_insane_leader
		room = ethic_spaceship_room
	}
	
	option = {
		name = abyssalsecrets.35.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.36 days = 10 }
		}
	}
}

# Negotiations a success, but guy dies.

country_event = {
	id = abyssalsecrets.36
	title = "abyssalsecrets.36.name"
	desc = "abyssalsecrets.36.desc"
	picture = GFX_evt_news_room
	show_sound = event_default
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.36.a
		custom_tooltip = abyssalsecrets.36.a.tooltip
		hidden_effect = {
			event_target:abyss_blockade_planet = {
				remove_modifier = "abyssalsecrets_blockade"
			}
			country_event = { id = abyssalsecrets.23 days = 10 }
		}
	}
}





##############
# CHAPTER TWO
##############

# Checked Via on-actions; use quantanium labs long enough, progress to next stage regardless of the quantanium processor.

country_event = {
	id = abyssalsecrets.97
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssalsecrets_fired
		any_owned_planet = { has_building = building_quantanium_lab }
		has_country_flag = abyssal_child
		NOT = { has_country_flag = ss_incon_events_trig }
	}
	
	immediate = {
		if = {
			limit = {
				NOT = { is_variable_set = incon_events }
			}
			country_event = { id = abyssalsecrets.98 days = 350 }
			set_country_flag = ss_incon_events_trig
		}
		else_if = {
			limit = {
				AND = {
					is_variable_set = incon_events
					check_variable = { which = incon_events value = 0 }
				}
			}
			country_event = { id = abyssalsecrets.98 days = 350 }
			set_country_flag = ss_incon_events_trig
		}
	}
}

country_event = {
	id = abyssalsecrets.98
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		if = {
			limit = {
				AND = {
					NOT = {
						any_owned_planet = {
							has_building = building_quantanium_processer
						}
					}
					NOT = { is_variable_set = incon_events }
					any_owned_planet = {
						has_building = building_quantanium_lab
					}
				}
			}
			country_event = { id = abyssalsecrets.102 }
		}
		else = {
			country_event = { id = abyssalsecrets.98 days = 150 }
		}
	}
}

# A set of building plans are discovered in the archives, designed by the blockade leader...

country_event = {
	id = abyssalsecrets.100
	title = "abyssalsecrets.100.name"
	desc = "abyssalsecrets.100.desc"
	picture = GFX_evt_ancient_databank
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.100.a
		add_research_option = tech_quantanium_drawing
		add_tech_progress = {
			tech = tech_quantanium_drawing
			progress = 0.5
		}
	}
	option = {
		name = abyssalsecrets.100.b
	}
}

# Checked through on-actions; once the quantanium processor is constructed some scientists express their concerns about the quantanium processer.

planet_event = {
	id = abyssalsecrets.101
	title = "abyssalsecrets.101.name"
	desc = "abyssalsecrets.101.desc"
	picture = GFX_evt_civil_action
	show_sound = event_mystic_reveal
	location = this
	
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		has_global_flag = abyssalsecrets_fired
		has_building = building_quantanium_processer
		owner = { has_country_flag = abyssal_child }
		NOT = { has_global_flag = abyssal_secrets_chapter_3 }
	}
	
	immediate = {
		owner = {
			change_variable = { which = "incon_events" value = 1 }
			change_variable = { which = "incon_events" value = -1 }
		}
	}
	
	option = {
		name = abyssalsecrets.101.a
	}
	option = {
		name = abyssalsecrets.101.b
		custom_tooltip = abyssalsecrets.101.b.tooltip
		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_authoritarian
					has_ethic = ethic_authoritarian
				}
			}
		}
	}
	
	after = {
		hidden_effect = {
			if = {
				limit = {
					owner = { check_variable = { which = "incon_events" value = 0 } }
				}
				owner = { country_event = { id = abyssalsecrets.102 days = 75 } }
			}
		}
	}
}

# Set-up events. 3 planet/country inconveniance events, 1 event chain, followed by the fallen empire returning with a new warning.

country_event = {
	id = abyssalsecrets.102
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			AND = {
				OR = {
					any_owned_planet = {
						has_building = building_quantanium_processer
					}
					any_owned_planet = {
						has_building = building_quantanium_lab
					}
					NOT = { has_global_flag = abyssal_secrets_purge }
				}
				NOT = { has_global_flag = abyssal_secrets_chapter_3 }
			}
		}
	}
	
	immediate = {
		change_variable = { which = "incon_events" value = 1 }
		if = {
			limit = {
				OR = {
					root = { 
						check_variable = {
							which = "incon_events"
							value < 4
						}
					}
				}
			}
			random_list = {
				10 = { country_event = { id = abyssalsecrets.114 days = 10 } }	# Freighter fleet crashes into star <-
				10 = { country_event = { id = abyssalsecrets.116 days = 10 } }	# attempted assassinations on officials <-
				70 = { 
					random_owned_planet = {
						random_list = {
							10 = { planet_event = { id = abyssalsecrets.117 days = 10 } }	# Widespread apathy
							10 = { planet_event = { id = abyssalsecrets.118 days = 10 } }	# Police forces attacked
							10 = { planet_event = { id = abyssalsecrets.115 days = 10 } }	# People die in their sleep
							10 = { planet_event = { id = abyssalsecrets.110 days = 10 } }	# Terrorist Bombing
							10 = { planet_event = { id = abyssalsecrets.111 days = 10 } }	# Mass Hysteria
							10 = { planet_event = { id = abyssalsecrets.112 days = 10 } }	# Suburbia fighting
							10 = { planet_event = { id = abyssalsecrets.113 days = 10 } }	# Workers disappear
						}
					}
				}
			}
			country_event = { id = abyssalsecrets.102 days = 200 random = 50 }
		}
		else_if = {
			limit = {
				root = { 
					check_variable = {
						which = "incon_events"
						value = 4
					}
				}
			}
			if = {
				limit = {
					OR = {
						has_trait = trait_psionic
						has_trait = trait_latent_psionic 
						ruler = {
							has_trait = leader_trait_chosen
						}
					}
				}
				country_event = { id = abyssalsecrets.140 days = 10 } # PSIONIC ONLY: Father talks directly to player.
			}
			else = {
				random_list = {
					50 = { country_event = { id = abyssalsecrets.120 days = 10 } }	# The prophet
					50 = { country_event = { id = abyssalsecrets.124 days = 10 } }	# Tomb of the damned
				}
			}
			country_event = { id = abyssalsecrets.102 days = 350 random = 75 }
		}
		else_if = {
			limit = {
				root = { 
					check_variable = {
						which = "incon_events"
						value = 5
					}
				}
			}
			country_event = { id = abyssalsecrets.130 days = 10 }	# Upset FE contacts player and offers... THE PURGE
		}
	}
}

# Don't take the processers down? Terrorist activities begin again... 
# Events 110 -> 120 are various terrorist events that usually provide a significant, but manageable penalty to a specific planet, or
# a minor country wide penalty. These are only supposed to cause worry and be an inconveniance, not give away anything just yet.

# Terrorist Bombing

planet_event = {
	id = abyssalsecrets.110
	title = "abyssalsecrets.110.name"
	desc = "abyssalsecrets.110.desc_01"
	picture = GFX_evt_night_raid
	show_sound = event_air_raid_siren
	location = root
	
	#desc = {
	#	text = abyssalsecrets.110.desc_01
	#	trigger = { NOT = { owner = { has_country_flag = abyssalsecrets.20.police } } }
	#}
	#desc = {
	#	text = abyssalsecrets.110.desc_02
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.police } }
	#}

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.110.a
		owner = {
			if = {
				limit = {
					NOT = { has_modifier = abyssalsecrets_bombed_planet }
				}
				add_modifier = {
					modifier = abyssalsecrets_bombed_planet
					days = 1800
				}
			}
		}
		if = {
			limit = {
				NOT = { has_modifier = abyssalsecrets_affected_facilities }
			}
			add_modifier = {
				modifier = abyssalsecrets_affected_facilities
				days = 300
			}
		}
		add_planet_devastation = 30
	}
	
	#option = {
	#	name = abyssalsecrets.110.b
	#	trigger = {
	#		owner = { has_country_flag = abyssalsecrets.20.police }
	#	}
	#}
}

# Localised Mass Hysteria causes disruptions

planet_event = {
	id = abyssalsecrets.111
	title = "abyssalsecrets.111.name"
	desc = "abyssalsecrets.111.desc_01"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_planetary_riot
	location = root

	#desc = {
	#	text = abyssalsecrets.111.desc_01
	#	trigger = { owner = { NOT = { has_country_flag = abyssalsecrets.20.aid } } }
	#}
	#desc = {
	#	text = abyssalsecrets.111.desc_02
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.aid } }
	#}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.111.a
		if = {
			limit = {
				NOT = { has_modifier = abyssalsecrets_mass_hysteria }
			}
			add_modifier = {
				modifier = abyssalsecrets_mass_hysteria
				days = 900
			}
		}
	}
	
	#option = {
	#	name = abyssalsecrets.111.b
	#	trigger = {
	#		owner = { has_country_flag = abyssalsecrets.20.aid }
	#	}
	#}
}

# Residents of city suburbs begin to attack each other for no reason.

planet_event = {
	id = abyssalsecrets.112
	title = "abyssalsecrets.112.name"
	desc = "abyssalsecrets.112.desc_01"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = root
	
	#desc = {
	#	text = abyssalsecrets.112.desc_01
	#	trigger = { owner = { NOT = { has_country_flag = abyssalsecrets.20.police } } }
	#}
	#desc = {
	#	text = abyssalsecrets.112.desc_02
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.police } }
	#}

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.112.a
		if = {
			limit = {
				NOT = { has_modifier = abyssalsecrets_suburbia_fighting }
			}
			add_modifier = {
				modifier = abyssalsecrets_suburbia_fighting
				days = 900
			}
		}
	}
	
	#option = {
	#	name = abyssalsecrets.112.a
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.police } }
	#}
}

# Many shift workers fail to show to work.

planet_event = {
	id = abyssalsecrets.113
	title = "abyssalsecrets.113.name"
	desc = "abyssalsecrets.113.desc_01"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = root
	
	#desc = {
	#	text = abyssalsecrets.113.desc_01
	#	trigger = { owner = { NOT = { has_country_flag = abyssalsecrets.20.investigate } } }
	#}
	#desc = {
	#	text = abyssalsecrets.113.desc_02
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.investigate } }
	#}

	is_triggered_only = yes
	
	pre_triggers = {
		has_owner = yes
		is_ai = no
		has_ground_combat = no
		is_occupied_flag = no
	}
	
	option = {
		name = abyssalsecrets.113.a
		custom_tooltip = abyssalsecrets.113.a.tooltip
		hidden_effect = {
			while = {
				count = 2
				random_owned_pop = { kill_pop = yes }
			}
		}
	}
	
	#option = {
	#	name = abyssalsecrets.113.b
	#	custom_tooltip = abyssalsecrets.113.a.tooltip
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.investigate } }
	#	hidden_effect = {
	#		while = {
	#			count = 2
	#			random_owned_pop = { kill_pop = yes }
	#		}
	#	}
	#}
}

# A fleet of freighters deliberately crash into a star.

country_event = {
	id = abyssalsecrets.114
	title = "abyssalsecrets.114.name"
	desc = "abyssalsecrets.114.desc_01"
	picture = GFX_evt_star_pulsar
	show_sound = event_ship_explosion
	
	#desc = {
	#	text = abyssalsecrets.114.desc_01
	#	trigger = { NOT = { has_country_flag = abyssalsecrets.20.investigate } }
	#}
	#desc = {
	#	text = abyssalsecrets.114.desc_02
	#	trigger = { has_country_flag = abyssalsecrets.20.investigate }
	#}

	is_triggered_only = yes
	
	option = {
		name = "abyssalsecrets.114.a"
		owner = {
			if = {
				limit = {
					NOT = { has_modifier = abyssalsecrets_lost_resources }
				}
				add_modifier = {
					modifier = abyssalsecrets_lost_resources
					days = 300
				}
			}
		}
	}
	
	#option = {
	#	name = "abyssalsecrets.114.b"
	#	trigger = { has_country_flag = abyssalsecrets.20.investigate }
	#	owner = {
	#		if = {
	#			limit = {
	#				NOT = { has_modifier = abyssalsecrets_lost_resources }
	#			}
	#			add_modifier = {
	#				modifier = abyssalsecrets_lost_resources
	#				days = 300
	#			}
	#		}
	#	}
	#}
}

# Some people die in their sleep.

planet_event = {
	id = abyssalsecrets.115
	title = "abyssalsecrets.115.name"
	desc = "abyssalsecrets.115.desc_01"
	picture = GFX_evt_emergency_workers
	show_sound = event_life_support_fail

	is_triggered_only = yes
	
	#desc = {
	#	text = abyssalsecrets.115.desc_01
	#	trigger = { owner = { NOT = { has_country_flag = abyssalsecrets.20.aid } } }
	#}
	#desc = {
	#	text = abyssalsecrets.115.desc_02
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.aid } }
	#}
	
	option = {
		name = "abyssalsecrets.115.a"
		while = {
			count = 2
			random_owned_pop = { kill_pop = yes }
		}
		owner = {
			if = {
				limit = {
					NOT = { has_modifier = abyssalsecrets_mourning }
				}
				add_modifier = {
					modifier = abyssalsecrets_mourning
					days = 1500
				}
			}
		}
	}
	
	#option = {
	#	name = "abyssalsecrets.115.b"
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.aid } }
	#	while = {
	#		count = 1
	#		random_owned_pop = { kill_pop = yes }
	#	}
	#	owner = {
	#		if = {
	#			limit = {
	#				NOT = { has_modifier = abyssalsecrets_mourning }
	#			}
	#			add_modifier = {
	#				modifier = abyssalsecrets_mourning
	#				days = 600
	#			}
	#		}
	#	}
	#}
}

# Several government officials are targetted and murdered.

country_event = {
	id = abyssalsecrets.116
	title = "abyssalsecrets.116.name"
	desc = "abyssalsecrets.116.desc_01"
	picture = GFX_evt_dark_alley
	show_sound = event_criminal_activity

	is_triggered_only = yes
	
	#desc = {
	#	text = abyssalsecrets.116.desc_01
	#	trigger = { NOT = { has_country_flag = abyssalsecrets.20.arrest } }
	#}
	#desc = {
	#	text = abyssalsecrets.116.desc_02
	#	trigger = { has_country_flag = abyssalsecrets.20.arrest }
	#}
	
	option = {
		name = "abyssalsecrets.116.a"
		owner = {
			if = {
				limit = {
					NOT = { has_modifier = abyssalsecrets_murdered_officials }
				}
				add_modifier = {
					modifier = abyssalsecrets_murdered_officials
					days = 1500
				}
			}
			random_owned_leader = {
				kill_leader = { type = governor show_notification = no }
			}
		}
	}
	
	#option = {
	#	name = "abyssalsecrets.116.a"
	#	trigger = { has_country_flag = abyssalsecrets.20.arrest }
	#}
}

# Population is overcome with apathy and doesn't produce as much stuff.

planet_event = {
	id = abyssalsecrets.117
	title = "abyssalsecrets.117.name"
	desc = "abyssalsecrets.117.desc_01"
	picture = GFX_evt_alien_city
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	#desc = {
	#	text = abyssalsecrets.117.desc_01
	#	trigger = { owner = { NOT = { has_country_flag = abyssalsecrets.20.arrest } } }
	#}
	#desc = {
	#	text = abyssalsecrets.117.desc_02
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.arrest } }
	#}
	
	option = {
		name = "abyssalsecrets.117.a"
		owner = {
			if = {
				limit = {
					NOT = { has_modifier = abyssalsecrets_reduced_productivity }
				}
				add_modifier = {
					modifier = abyssalsecrets_reduced_productivity
					days = 1800
				}
			}
		}
	}
	
	#option = {
	#	name = "abyssalsecrets.117.b"
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.arrest } }
	#	owner = {
	#		if = {
	#			limit = {
	#				NOT = { has_modifier = abyssalsecrets_reduced_productivity }
	#			}
	#			add_modifier = {
	#				modifier = abyssalsecrets_reduced_productivity
	#				days = 150
	#			}
	#		}
	#	}
	#}
}

# Police stations are attacked, police forces are targetted.

planet_event = {
	id = abyssalsecrets.118
	title = "abyssalsecrets.118.name"
	desc = "abyssalsecrets.118.desc_01"
	picture = GFX_evt_night_raid
	show_sound = event_planetary_riot

	is_triggered_only = yes
	
	#desc = {
	#	text = abyssalsecrets.118.desc_01
	#	trigger = { owner = { NOT = { has_country_flag = abyssalsecrets.20.police } } }
	#}
	#desc = {
	#	text = abyssalsecrets.118.desc_02
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.police } }
	#}
	
	option = {
		name = "abyssalsecrets.118.a"
		if = {
			limit = {
				NOT = { has_modifier = abyssalsecrets_police_vandalism }
			}
			add_modifier = {
				modifier = abyssalsecrets_police_vandalism
				days = 1800
			}
		}
	}
	
	#option = {
	#	name = "abyssalsecrets.118.b"
	#	trigger = { owner = { has_country_flag = abyssalsecrets.20.police } }
	#}
}

# 2 mini event chains that provide a bit of a hint to what is happening here... They also forbode what is
# coming if the players is not ready to make sacrifices.
# The prophet of the abyss

# Intelligence identifies potential culprit, enables special project to raid them on uninhabitable planet.

country_event = {
	id = abyssalsecrets.120
	title = "abyssalsecrets.120.name"
	desc = "abyssalsecrets.120.desc"
	picture = GFX_evt_surreal_visions
	show_sound = event_scanner
	location = event_target:prophet_planet

	is_triggered_only = yes
	
	immediate = {
		random_planet_within_border = {
			limit = {
				OR = {
					is_planet_class = pc_asteroid
					is_planet_class = pc_molten
					is_planet_class = pc_barren
					is_planet_class = pc_barren_cold
					is_planet_class = pc_toxic
					is_planet_class = pc_frozen
				}
			}
			save_global_event_target_as = prophet_planet
		}
	}
	
	option = {
		name = "abyssalsecrets.120.a"
		custom_tooltip = abyssalsecrets.120.a.tooltip
	}
	
	after = {
		enable_special_project = {
			name = "ABYSSALSECRETS_PROPHET"
			location = event_target:prophet_planet
			owner = root
		}
	}
}

# Turns out it something much worse, away team destroyed.

ship_event = {
	id = abyssalsecrets.121
	title = abyssalsecrets.121.name
	desc = abyssalsecrets.121.desc
	picture = GFX_evt_atmospheric_entry
	show_sound = event_mystic_reveal
	location = fromfrom
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.121.a
		custom_tooltip = abyssalsecrets.121.a.tooltip
		hidden_effect = {
			fleet = { destroy_fleet = this }
			enable_special_project = {
				name = "ABYSSALSECRETS_PROPHET_RESEARCH"
				location = event_target:prophet_planet
				owner = root
			}
		}
	}
	
	option = {
		name = abyssalsecrets.121.b
		custom_tooltip = abyssalsecrets.121.b.tooltip
		hidden_effect = {
			fleet = { destroy_fleet = this }
			enable_special_project = {
				name = "ABYSSALSECRETS_PROPHET_RESCUE"
				location = event_target:prophet_planet
				owner = root
			}
		}
	}
	
	option = {
		name = abyssalsecrets.121.c
		hidden_effect = {
			fleet = { destroy_fleet = this }
		}
	}
}

# Research the planet, dimensional phasing field detected, subspace emnations, add physics deposit.

country_event = {
	id = abyssalsecrets.122
	title = abyssalsecrets.122.name
	desc = abyssalsecrets.122.desc
	picture = GFX_evt_physics_research
	show_sound = event_laboratory_sound
	location = this
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.122.a
		event_target:prophet_planet = {
			set_deposit = d_physics_6
		}
		hidden_effect = {
			event_target:prophet_planet = {
				add_modifier = {
					modifier = "ss_prophet_planet"
					days = -1
				}
				clear_global_event_target = prophet_planet
			}
		}
	}
}

# Rescue operation a success, away team incontinent, ceaselessly talks about the 'father of the abyss'.

country_event = {
	id = abyssalsecrets.123
	title = abyssalsecrets.123.name
	desc = abyssalsecrets.123.desc
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_ship_bridge
	location = this
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.123.a
		hidden_effect = {
			event_target:prophet_planet = {
				add_modifier = {
					modifier = "ss_prophet_planet"
					days = -1
				}
				clear_global_event_target = prophet_planet
			}
		}
	}
}

# The tomb of the damned

# An experiment involving quantanium creates a tunnel to an extra-dimensional tomb. Starts a dig site.

country_event = {
	id = abyssalsecrets.124
	title = abyssalsecrets.124.name
	desc = abyssalsecrets.124.desc
	picture = GFX_evt_in_the_dark
	show_sound = event_scanner
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.124.a
		custom_tooltip = abyssalsecrets.124.a.tooltip
		hidden_effect = {
			capital_scope = {
				create_archaeological_site = ss_tomb_of_the_damned
			}
		}
	}
}

# The following three are the dig site events.
# Begin decrypting the written text on the tomb walls. Appears to display a warning... Two extra unopened chambers.

fleet_event = { 
	id = abyssalsecrets.125
	title = abyssalsecrets.125.name
	desc = abyssalsecrets.125.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_door_opening
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = abyssalsecrets.125.a
		small_artifact_reward = yes
	}
}

# The writing is a warning against the father of the abyss.

fleet_event = { 
	id = abyssalsecrets.126
	title = abyssalsecrets.125.name
	desc = abyssalsecrets.126.desc
	picture = GFX_evt_ancient_records
	show_sound = event_door_opening
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = abyssalsecrets.126.a
		small_artifact_reward = yes
	}
}

# The two chambers are accessed... A dire warning is cast.

fleet_event = { 
	id = abyssalsecrets.127
	title = abyssalsecrets.125.name
	desc = abyssalsecrets.127.desc
	picture = GFX_evt_binary_stars
	show_sound = event_bad_omen
	location = from

	archaeology = yes

	is_triggered_only = yes

	option = {
		name = abyssalsecrets.127.a
		medium_artifact_reward = yes
	}
}

# Fallen empire contacts player, offers them an oust, kill many civilians or else events will get worse.

country_event = {
	id = abyssalsecrets.130
	title = TRANSMISSION
	diplomatic = yes
	force_open = yes
	
	desc = {
		text = abyssalsecrets.130.desc_01
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_spiritualist
			}
		}
	}
	desc = {
		text = abyssalsecrets.130.desc_02
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_materialist
			}
		}
	}
	desc = {
		text = abyssalsecrets.130.desc_03
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophobe
			}
		}
	}
	desc = {
		text = abyssalsecrets.130.desc_04
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		set_country_flag = final_fe_offer_given
	}
	
	picture_event_data = {
		portrait = event_target:ss_abyss_fallen_empire_comm
		planet_background = event_target:ss_abyss_fallen_empire_comm
		graphical_culture = event_target:ss_abyss_fallen_empire_comm
		city_level = event_target:ss_abyss_fallen_empire_comm
		room = event_target:ss_abyss_fallen_empire_comm.ruler
	}
	option = {
		name = abyssalsecrets.130.a
		response_text = abyssalsecrets.130.a.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.130.b
		response_text = abyssalsecrets.130.b.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.130.c
		response_text = abyssalsecrets.130.c.response
		is_dialog_only = yes
	}

	option = {
		name = "abyssalsecrets.130.d"
		response_text = abyssalsecrets.130.d.response
		hidden_effect = {
			country_event = { id = abyssalsecrets.200 days = 600 }
			owner.capital_scope = {
				enable_special_project = {
					name = "ABYSSALSECRETS_PURGE"
					location = this
					owner = root
				}
			}
		}
	}
	
	option = {
		name = abyssalsecrets.130.e
		hidden_effect = {
			country_event = { id = abyssalsecrets.200 days = 600 }
		}
	}
}

country_event = {
	id = abyssalsecrets.131
	title = abyssalsecrets.131.name
	desc = abyssalsecrets.131.desc
	picture = GFX_evt_city_ruins
	show_sound = event_activating_unknown_technology
	
	is_triggered_only = yes
	
	trigger = {}
	
	immediate = {
		set_country_flag = abyssal_secrets_purge
		every_owned_planet = {
			every_owned_pop = {
				root = { 
					change_variable = { 
						which = ss_num_pops
						value = 1 
					}
				}
			}
		}
		if = {
			limit = {
				root = { 
					check_variable = {
						which = ss_num_pops
						value < 40
					}
				}
			}
			while = {
				count = 3
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
		else_if = {
			limit = {
				root = { 
					check_variable = {
						which = ss_num_pops
						value < 100
					}
				}
			}
			while = {
				count = 8
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
		else_if = {
			limit = {
				root = { 
					check_variable = {
						which = ss_num_pops
						value < 300
					}
				}
			}
			while = {
				count = 20
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
		else_if = {
			limit = {
				root = { 
					check_variable = {
						which = ss_num_pops
						value < 1500
					}
				}
			}
			while = {
				count = 60
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
		else = {
			while = {
				count = 150
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
	}

	option = {
		name = abyssalsecrets.131.a
	}
}

# PSIONIC ONLY: the mind powers allow the player to communicate with the father directly.
country_event = {
	id = abyssalsecrets.140
	title = abyssalsecrets.140.name
	picture = GFX_evt_surreal_visions
	show_sound = event_sensor_ping
	location = event_target:ss_abyssal_secrets_telephone_loc
	
	desc = {
		text = abyssalsecrets.140.desc_01
		trigger = {
			AND = {
				ruler = {
					NOT = { has_trait = leader_trait_chosen }
				}
				OR = {
					has_trait = trait_psionic
					has_trait = trait_latent_psionic 
				}
			}
		}
	}
	
	desc = {
		text = abyssalsecrets.140.desc_02
		trigger = {
			ruler = {
				has_trait = leader_trait_chosen
			}
		}
	}
	
	is_triggered_only = yes
	
	trigger = {}
	
	immediate = {
		random_planet_within_border = {
			limit = {
				AND = {
					NOT = { is_star = yes }
					NOT = { has_owner = yes }
				}
			}
			save_event_target_as = ss_abyssal_secrets_telephone_loc
			create_ambient_object = {
				type = "ss_abyssal_secrets_telephone"
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:ss_abyssal_secrets_telephone_loc
					distance = 50
					angle = random
				}
				set_ambient_object_flag = ss_abyssal_secrets_telephone
				save_event_target_as = ss_abyssal_secrets_telephone_obj
			}
		}
	}

	option = {
		name = abyssalsecrets.140.a
		enable_special_project = {
			name = ss_abyssal_secrets_psionic
			owner = this
			location = event_target:ss_abyssal_secrets_telephone_obj
		}
	}
}

country_event = {
	id = abyssalsecrets.141
	title = abyssalsecrets.141.name
	picture = GFX_evt_surreal_visions
	show_sound = event_sensor_ping
	
	desc = {
		text = abyssalsecrets.141.desc_01
		trigger = {
			AND = {
				ruler = {
					NOT = { has_trait = leader_trait_chosen }
				}
				OR = {
					has_trait = trait_psionic
					has_trait = trait_latent_psionic 
				}
			}
		}
	}
	
	desc = {
		text = abyssalsecrets.141.desc_02
		trigger = {
			ruler = {
				has_trait = leader_trait_chosen
			}
		}
	}
	
	is_triggered_only = yes
	
	trigger = {}
	
	immediate = {
	}

	option = {
		name = abyssalsecrets.141.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.143 days = 15 }
		}
	}
	
	option = {
		name = abyssalsecrets.141.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.142 days = 15 }
		}
	}
}

country_event = {
	id = abyssalsecrets.142
	title = abyssalsecrets.142.name
	desc = abyssalsecrets.142.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	trigger = {}
	
	immediate = {
		every_ambient_object = {
			limit = {
				has_ambient_object_flag = ss_abyssal_secrets_telephone
			}
			destroy_ambient_object = this
		}
	}

	option = {
		name = abyssalsecrets.142.a
	}
}

country_event = {
	id = abyssalsecrets.143
	title = abyssalsecrets.143.name
	desc = abyssalsecrets.143.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	trigger = {}
	
	immediate = {
		set_country_flag = ss_abyss_truth_accepted
		every_ambient_object = {
			limit = {
				has_ambient_object_flag = ss_abyssal_secrets_telephone
			}
			destroy_ambient_object = this
		}
	}

	option = {
		name = abyssalsecrets.143.a
	}
}

country_event = {
	id = abyssalsecrets.150
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		random_list = {
			10 = { country_event = { id = abyssalsecrets.114 days = 10 } }	# Freighter fleet crashes into star <-
			10 = { country_event = { id = abyssalsecrets.116 days = 10 } }	# attempted assassinations on officials <-
			70 = { 
				random_owned_planet = {
					random_list = {
						10 = { planet_event = { id = abyssalsecrets.117 days = 10 } }	# Widespread apathy
						10 = { planet_event = { id = abyssalsecrets.118 days = 10 } }	# Police forces attacked
						10 = { planet_event = { id = abyssalsecrets.115 days = 10 } }	# People die in their sleep
						10 = { planet_event = { id = abyssalsecrets.110 days = 10 } }	# Terrorist Bombing
						10 = { planet_event = { id = abyssalsecrets.111 days = 10 } }	# Mass Hysteria
						10 = { planet_event = { id = abyssalsecrets.112 days = 10 } }	# Suburbia fighting
						10 = { planet_event = { id = abyssalsecrets.113 days = 10 } }	# Workers disappear
					}
				}
			}
		}
	}
}

country_event = {
	id = abyssalsecrets.151
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		if = {
			limit = {
				OR = {
					has_trait = trait_psionic
					has_trait = trait_latent_psionic 
					ruler = {
						has_trait = leader_trait_chosen
					}
				}
			}
			country_event = { id = abyssalsecrets.140 days = 10 } # PSIONIC ONLY: Father talks directly to player.
		}
		else = {
			random_list = {
				# 50 = { country_event = { id = abyssalsecrets.120 days = 10 } }	# The prophet
				50 = { country_event = { id = abyssalsecrets.124 days = 10 } }	# Tomb of the damned
			}
		}
	}
}

country_event = {
	id = abyssalsecrets.152
	title = abyssalsecrets.152.name
	desc = abyssalsecrets.152.desc
	picture = GFX_evt_physics_research
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	fire_only_once = yes

	location = root

	trigger = {
	}

	immediate = {
		owner = {
			start_situation = {
				type = abyssal_secrets_clearer_view
				target = root
				effect = {
					save_event_target_as = new_situation
				}
			}
		}
	}

	option = {
		name = abyssalsecrets.152.a #Encourage
		icon = {
			icon = GFX_situation_approach_research
			icon_background = GFX_situation_approach_bg_red
			text = set_situation_approach_icon_text
		}
		event_target:new_situation = {
			set_situation_approach = situation_clearer_view_encourage
		}
		allow = {
			any_owned_planet = {
				has_active_building = building_quantanium_lab
			}
		}
		custom_tooltip = abyssalsecrets.152.a.tooltip
	}
	
	option = {
		name = abyssalsecrets.152.b #Do Nothing
		icon = {
			icon = GFX_situation_approach_pop
			icon_background = GFX_situation_approach_bg_yellow
			text = set_situation_approach_icon_text
		}
		event_target:new_situation = {
			set_situation_approach = situation_clearer_view_do_nothing
		}
		custom_tooltip = abyssalsecrets.152.b.tooltip
	}
	
	option = {
		name = abyssalsecrets.152.c #Discourage
		icon = {
			icon = GFX_situation_approach_suspicious
			icon_background = GFX_situation_approach_bg_green
			text = set_situation_approach_icon_text
		}
		event_target:new_situation = {
			set_situation_approach = situation_clearer_view_discourage
		}
		custom_tooltip = abyssalsecrets.152.c.tooltip
		hidden_effect = {
			every_owned_planet = {
				limit = {
					has_active_building = building_quantanium_lab
				}
				disable_building = building_quantanium_lab
			}
		}
	}
}

# Massive sub-space fluctuations; a gravitational anomaly dumps some rare resources.

country_event = {
	id = abyssalsecrets.197
	title = "abyssalsecrets.13.name"
	desc = "abyssalsecrets.13.desc"
	picture = GFX_evt_black_hole
	show_sound = event_scanner

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.13.a
		owner = {
			add_resource = { 
			  sr_hypernuclear = 50
			  sr_quantanium = 50
			  sr_dark_matter = 250
			}
		}
	}
}


country_event = {
	id = abyssalsecrets.198
	title = "abyssalsecrets.198.name"
	desc = "abyssalsecrets.198.desc"
	picture = GFX_evt_civil_action
	show_sound = event_mystic_reveal
	location = this
	
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.198.a
	}
}

country_event = {
	id = abyssalsecrets.199
	title = abyssalsecrets.199.name
	desc = abyssalsecrets.199.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	trigger = {}
	
	immediate = {
	}

	option = {
		name = abyssalsecrets.199.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.200 days = 300 }
		}
	}
}



############
# CHAPTER 3
############

### Things get serious here. A star collapses into a blackhole and the main player gets spooky messages.
### Bad signs are foretold.
### Forms the precursor events to the main invasion.

# Checks that they haven't heeded the warning of the FE. Continually checks every 150 days, incase they sneakily rebuild a quantanium building.

country_event = {
	id = abyssalsecrets.200
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				AND = {
					OR = {
						any_owned_planet = {
							has_building = building_quantanium_processer
						}
						any_owned_planet = {
							has_building = building_quantanium_lab
						}
						NOT = { has_country_flag = abyssal_secrets_purge }
					}
					has_country_flag = final_fe_offer_given
				}
			}
			set_global_flag = abyssal_secrets_chapter_3
			country_event = { id = abyssalsecrets.201 days = 10 }
		}
		else = {
			country_event = { id = abyssalsecrets.200 days = 150 }
		}
	}
}

# Flying too close to the sun? Great, lets break stuff. Open a black hole!

country_event = {
	id = abyssalsecrets.201
	title = "abyssalsecrets.201.name"
	desc = "abyssalsecrets.201.desc"
	picture = GFX_evt_black_hole
	show_sound = event_activating_unknown_technology
	location = event_target:abyss_black_hole_1
	fire_only_once = yes
	
	is_triggered_only = yes
	
	immediate = {
		save_global_event_target_as = abyssal_host_enemy_country
		if = {
			limit = {
				any_system_within_border = {
					NOT = { any_system_planet = { has_owner = yes } }
				}
			}
			random_system_within_border = {
				limit = { NOT = { any_system_planet = { has_owner = yes } } }
				set_star_flag = abyssal_secrets_blackhole
				save_global_event_target_as = system_abyss_black_hole_1
				star = {
					save_global_event_target_as = abyss_black_hole_1
					set_name = "NAME_abyss_black_hole_1"
				}
				every_system_planet = {
					limit = { is_star = yes }
					change_pc = pc_ss_abyssal_black_hole
				}
				every_system_planet = {
					add_modifier = {
						modifier = abyssalsecrets_dark_world
						days = -1
					}
				}
				random_system_planet = {
					limit = { 
						OR = {
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
							is_planet_class = pc_toxic
							is_planet_class = pc_frozen
							is_planet_class = pc_molten
						}
					}
					planet_event = { id = abyssalsecrets.204 days = 60 }
				}
				set_star_class = sc_ss_abyss 
			}
		}
		else = {
			random_system_within_border = {
				set_star_flag = abyssal_secrets_blackhole
				save_global_event_target_as = system_abyss_black_hole_1
				star = {
					save_global_event_target_as = abyss_black_hole_1
					set_name = "NAME_abyss_black_hole_1"
				}
				every_system_planet = {
					limit = { is_star = yes }
					change_pc = pc_ss_abyssal_black_hole
				}
				every_system_planet = {
					add_modifier = {
						modifier = abyssalsecrets_dark_world
						days = -1
					}
				}
				random_system_planet = {
					limit = { 
						OR = {
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
							is_planet_class = pc_toxic
							is_planet_class = pc_frozen
							is_planet_class = pc_molten
						}
					}
					planet_event = { id = abyssalsecrets.204 days = 60 }
				}
				set_star_class = sc_ss_abyss 
			}
		}
		country_event = { id = abyssalsecrets.207 days = 120 }
	}
	
	
	option = {
		name = abyssalsecrets.201.a
	}
}

planet_event = {
	id = abyssalsecrets.204
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		destroy_colony = yes
		if = {
			limit = {
				NOR = {
					is_planet_class = pc_ringworld_habitable
					is_planet_class = pc_habitat
				}
			}
			add_modifier = {
				modifier = abyssalsecrets_abyss_world
				days = -1
			}
			change_pc = pc_abyss
		}
		else_if = {
			limit = { is_planet_class = pc_ringworld_habitable }
			change_pc = pc_ringworld_habitable_damaged
			reset_planet = yes
		}
		else_if = {
			limit = { is_planet_class = pc_habitat }
			remove_planet = yes
		}
		from = { country_event = { id = abyssalsecrets.206 } }
	}
}

### Orbitted planet is turned into an abyss planet.

country_event = {
	id = abyssalsecrets.206
	title = "abyssalsecrets.206.name"
	desc = "abyssalsecrets.206.desc"
	picture = GFX_evt_black_hole
	show_sound = event_ghost_town
	location = from
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.206.a
	}
}

### System is fugged over, adds bunch of debris and wierd stuff.

country_event = {
	id = abyssalsecrets.207
	title = "abyssalsecrets.207.name"
	desc = "abyssalsecrets.207.desc"
	picture = GFX_evt_black_hole
	show_sound = event_mystic_reveal
	location = event_target:abyss_black_hole_1
	
	is_triggered_only = yes
	
	immediate = {
		create_ambient_object = {
			type = "rare_nebula_1"
			location = event_target:abyss_black_hole_1
		}
		create_ambient_object = {
			type = "turbulent_nebula_1"
			location = event_target:abyss_black_hole_1
		}
		create_ambient_object = {
			type = "nebula_L3_entity"
			location = event_target:abyss_black_hole_1
		}
		country_event = { id = abyssalsecrets.208 days = 75 }
		country_event = { id = abyssalsecrets.300 days = 100 }
	}
	
	option = {
		name = abyssalsecrets.207.a
	}
}

### Shockwave is released when primary balckhole is preparing to spawn enemies, knocks out sensor vision and all vessels within.

country_event = {
	id = abyssalsecrets.208
	title = "abyssalsecrets.208.name"
	desc = "abyssalsecrets.208.desc"
	picture = GFX_evt_black_hole
	show_sound = event_sensor_ping
	
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		event_target:abyss_black_hole_1 = {
			# Blocks sensor vision (check game rules)
			solar_system = {
				set_timed_star_flag = { flag = ss_abyssal_shockwave days = 300 }
				if = {
					limit = { exists = starbase }
					starbase = { 
						starbase = { fleet = { destroy_fleet = this } }
					}
				}
				every_system_planet = {
					if = {
						limit = { has_mining_station = yes }
						mining_station = { dismantle = yes }
					}
					if = {
						limit = { has_research_station = yes }
						research_station = { dismantle = yes }
					}
				}
				every_fleet_in_system = {
					set_mia = mia_return_home
				}
				star = {
					create_ambient_object = {
						type = "ss_star_shockwave"
						play_animation_once = yes
						location = this
					}
				}
			}
		}
	}
	
	option = {
		name = abyssalsecrets.208.a
	}
}

############
# CHAPTER 4
############

### Initial comms with the abyssal Host.

country_event = {
	id = abyssalsecrets.300
	title = "abyssalsecrets.300.name"
	
	desc = {
		text = abyssalsecrets.300.desc_01
		trigger = {
			NOT = { has_country_flag = ss_abyss_truth_accepted }
		}
	}
	
	desc = {
		text = abyssalsecrets.300.desc_02
		trigger = {
			has_country_flag = ss_abyss_truth_accepted
		}
	}
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		portrait = abyssal_host_portrait
		room = "abyssal_host_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = abyssal_invasion_ongoing }
	}
	
	option = {
		name = abyssalsecrets.300.a
		response_text = abyssalsecrets.300.a.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.300.b
		is_dialog_only = yes
		response_text = abyssalsecrets.300.b.response
	}
	option = {
		name = abyssalsecrets.300.c
		response_text = abyssalsecrets.300.c.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.300.d
		response_text = abyssalsecrets.300.d.response
		is_dialog_only = yes
		trigger = {
			NOT = { has_country_flag = ss_abyss_truth_accepted }
		}
	}
	option = {
		name = abyssalsecrets.300.e
		hidden_effect = {
			country_event = { id = abyssalsecrets.302 days = 30 }
			country_event = { id = abyssalsecrets.311 days = 90 }
		}
	}
	option = {
		name = abyssalsecrets.300.f
		hidden_effect = {
			country_event = { id = abyssalsecrets.311 days = 90 }
			country_event = { id = abyssalsecrets.1000 days = 95 }
		}
		trigger = {
			has_country_flag = ss_abyss_truth_accepted
		}
	}
}

### You want an alliance? Government type changes, civic's change, get new leader (Father of the Abyss), you get some free stuff.

country_event = {
	id = abyssalsecrets.301
	title = abyssalsecrets.301.name
	picture = GFX_evt_alien_propaganda
	show_sound = event_mystic_reveal
	
	desc = {
		text = abyssalsecrets.301.desc_01
		trigger = { 
			NOT = { is_overlord = yes }
		}
	}
	
	desc = {
		text = abyssalsecrets.301.desc_02
		trigger = { 
			is_overlord = yes
		}
	}
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = default
		NOT = { has_country_flag = abyssal_secrets_leader_event }
	}
	
	immediate = {
		set_country_flag = abyssal_secrets_leader_event
		#shift_ethic = "ethic_militarist"
		if = {
			limit = {
				OR = {
					has_ethic = ethic_fanatic_egalitarian
					has_ethic = ethic_egalitarian
				}
			}
			shift_ethic = "ethic_fanatic_authoritarian"
		}
		else_if = {
			limit = {
				NOR = {
					has_ethic = ethic_fanatic_egalitarian
					has_ethic = ethic_egalitarian
				}
			}
			shift_ethic = "ethic_authoritarian"
		}
		change_government = {
			authority = auth_imperial
			cooldown = no
			remove_invalid_civics = yes
		}
		#event_target:abyssal_host_invader_country = {
		#	set_country_flag = host_rest_mode
		#}
		force_add_civic = civic_abyssal_children
		#change_country_flag = {
		#	icon = {
		#		category = "domination"
		#		file = "domination_9.dds"
		#	}
		#	background= {
		#		category = "backgrounds"
		#		file = "Circle.dds"
		#	}
		#	colors={
		#		"red_orange"
		#		"black"
		#		"null"
		#		"null"
		#	}
		#}
		room_name_override = abyssal_host_room
		create_species = {
			name = NAME_abyssal_father
			plural = NAME_abyssal_father
			class = ABYSSAL_HOST_CLASS
			portrait = abyssal_host_father_portrait
			namelist = abyssal_host_namelist 
			effect = {
				save_global_event_target_as = abyssal_father_leader_species
			}
		}
		create_leader = {
			class = governor
			species = event_target:abyssal_father_leader_species
			name = "NAME_abyssal_father"
			immortal = yes
			skill = 10
			traits = {
				trait = leader_trait_ss_ruler_the_eye
				trait = leader_trait_ss_ruler_the_maw
				trait = leader_trait_ss_ruler_the_hand
				trait = leader_trait_ss_ruler_the_eye_governor
			}
		}
		set_leader = last_created_leader
		create_leader = {
			class = governor
			name = random
			species = this.owner_main_species
			skill = 3
			set_age = 28
			traits = { 
				trait = leader_trait_intellectual
			}
		}
		set_heir = last_created_leader
		if = {
			limit = { has_special_project = ABYSSALSECRETS_ENDGAME_1 }
			abort_special_project = { type = ABYSSALSECRETS_ENDGAME_1 }
		}
	}
	
	option = {
		name = "abyssalsecrets.301.a"
	}
}

### Oh yeah, the fallen empire hates you now, chastises you once more.

country_event = {
	id = abyssalsecrets.302
	title = TRANSMISSION
	diplomatic = yes
	force_open = yes
	
	is_triggered_only = yes
	
	desc = {
		text = abyssalsecrets.302.desc_01
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_spiritualist
			}
		}
	}
	desc = {
		text = abyssalsecrets.302.desc_02
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_materialist
			}
		}
	}
	desc = {
		text = abyssalsecrets.302.desc_03
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophobe
			}
		}
	}
	desc = {
		text = abyssalsecrets.302.desc_04
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}
	
	picture_event_data = {
		portrait = event_target:ss_abyss_fallen_empire_comm
		planet_background = event_target:ss_abyss_fallen_empire_comm
		graphical_culture = event_target:ss_abyss_fallen_empire_comm
		city_level = event_target:ss_abyss_fallen_empire_comm
		room = event_target:ss_abyss_fallen_empire_comm.ruler
	}

	option = {
		name = "abyssalsecrets.302.a"
		is_dialog_only = yes
		response_text = abyssalsecrets.302.a.response
	}
	
	option = {
		name = "abyssalsecrets.302.b"
		is_dialog_only = yes
		response_text = abyssalsecrets.302.b.response
	}
	
	option = {
		name = "abyssalsecrets.302.c"
		is_dialog_only = yes
		response_text = abyssalsecrets.302.c.response
	}
	
	option = {
		name = "abyssalsecrets.302.d"
		is_dialog_only = yes
		response_text = abyssalsecrets.302.d.response
	}
	
	option = {
		name = "abyssalsecrets.302.e"
		event_target:ss_abyss_fallen_empire_comm = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_abyssal_fools
			}
		}
	}
}

### Did you accept the pact? Fallen Empire calls you an idiot, promises their swift death.

country_event = {
	id = abyssalsecrets.303
	title = TRANSMISSION
	diplomatic = yes
	force_open = yes
	
	desc = {
		text = abyssalsecrets.303.desc_01
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_spiritualist
			}
		}
	}
	desc = {
		text = abyssalsecrets.303.desc_02
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_materialist
			}
		}
	}
	desc = {
		text = abyssalsecrets.303.desc_03
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophobe
			}
		}
	}
	desc = {
		text = abyssalsecrets.303.desc_04
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}
	
	is_triggered_only = yes
	
	picture_event_data = {
		portrait = event_target:ss_abyss_fallen_empire_comm
		planet_background = event_target:ss_abyss_fallen_empire_comm
		graphical_culture = event_target:ss_abyss_fallen_empire_comm
		city_level = event_target:ss_abyss_fallen_empire_comm
		room = event_target:ss_abyss_fallen_empire_comm.ruler
	}

	option = {
		name = "abyssalsecrets.303.a"
		response_text = abyssalsecrets.303.a.response
		add_opinion_modifier = {
			who = event_target:ss_abyss_fallen_empire_comm
			modifier = opinion_abyssal_threats
		}
	}
	
	option = {
		name = "abyssalsecrets.303.b"
		response_text = abyssalsecrets.303.b.response
		add_opinion_modifier = {
			who = event_target:ss_abyss_fallen_empire_comm
			modifier = opinion_abyssal_threats
		}
	}
}

country_event = {
	id = abyssalsecrets.304
	title = abyssalsecrets.304.name
	desc = abyssalsecrets.304.desc
	picture = GFX_evt_alien_propaganda
	show_sound = event_radio_chatter
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	option = {
		name = "abyssalsecrets.304.a"
		hidden_effect = {
			country_event = { id = abyssalsecrets.305 }
		}
	}
}

country_event = {
	id = abyssalsecrets.305
	title = TRANSMISSION
	desc = "abyssalsecrets.305.desc"
	diplomatic = yes
	force_open = yes
	custom_gui = "ss_ab_diplo_window"
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	picture_event_data = {
		portrait = event_target:abyssal_child
		planet_background = event_target:abyssal_child
		graphical_culture = event_target:abyssal_child
		city_level = event_target:abyssal_child
		room = event_target:abyssal_child.ruler
	}
	
	option = {
		name = "abyssalsecrets.305.a"
		is_dialog_only = yes
		response_text = abyssalsecrets.305.a.response
	}
	
	option = {
		name = "abyssalsecrets.305.b"
		is_dialog_only = yes
		response_text = abyssalsecrets.305.b.response
	}
	
	option = {
		name = "abyssalsecrets.305.c"
	}
}




###########################
###						###
### The invasion starts ###
###						###
###########################


### IT goes like this:
### More blackhole systems open in random points around the galaxy. These systems spawn abyssal host fleets which simply rampage around the place.
### One initial powerful fleet spawns. As long as the Father is alive, smaller reinforcement fleets spawn.
### The central blackhole system (The Eye) spawns a few fleets which remain in place.
### Some Months later, the Father spawns from this system. Any remaining fleets accompany the Father, who then starts rampaging, but rather slowly.
### The Crisis is ended when the father is destroyed; fleets cease spawning.

### Observer event, things kickcing off.

observer_event = {
	id = abyssalsecrets.310
	title = abyssalsecrets.310.name
	desc = abyssalsecrets.310.desc
	picture = GFX_evt_black_hole
	show_sound = event_mystic_reveal
	location = from.capital_scope

	is_triggered_only = yes

	option = {
		name = OK
	}
}

### Setup event. Set up crisis flags. Choose 3 more blackholes as spawn points. Create Invader country. Spawn initial fleets at blackholes.


country_event = {
	id = abyssalsecrets.311
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = abyssal_invasion_ongoing }
	}

	immediate = {
		set_global_flag = abyssal_invasion_ongoing
		observer_event = { id = abyssalsecrets.310 }
		country_event = { id = abyssalsecrets.316 days = 365 }
		every_country = {
			limit = { is_country_type = default }
			country_event = { id = abyssalsecrets.312 }
		}
		if = {
			limit = { NOT = { exists = event_target:abyssal_host_invader_country } }
			create_species = {
				name = "NAME_abyssal_host"
				class = ABYSSAL_HOST_CLASS
				namelist = abyssal_host_namelist 
				portrait = abyssal_host_portrait
				traits = random
				immortal = yes
			}
			last_created_species = {
				save_global_event_target_as = abyssal_host_species
			}
			create_country = {
				name = "NAME_abyssal_host"
				type = "abyssal_host_invaders_type"
				name_list = "abyssal_host_namelist"
				species = event_target:abyssal_host_species
				flag = {
					icon= {
						category = "zoological"
						file = "flag_zoological_23.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"red"
						"dark_grey"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				save_global_event_target_as = abyssal_host_invader_country
			}
		}
		if = {
			limit = {
				event_target:abyssal_host_enemy_country = {
					has_country_flag = abyssal_secrets_leader_event
				}
			}
			event_target:abyssal_host_invader_country = {
				set_faction_hostility = {
					target = event_target:abyssal_host_enemy_country
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
			establish_communications_no_message = event_target:abyssal_host_invader_country
			add_opinion_modifier = {
				who = event_target:abyssal_host_invader_country
				modifier = opinion_swarm
			}
			event_target:abyssal_host_invader_country = {
				add_opinion_modifier = {
					who = PREV
					modifier = opinion_prey
				}
			}
		}
		event_target:abyssal_host_invader_country = {
			country_event = { id = abyssalsecrets.321 days = 100 }
			set_country_flag = host_main_invasion_mode
			country_event = { id = abyssalsecrets.314 days = 75 }
			create_fleet = {
				name = "NAME_abyssal_host_dreadnought_name"
				settings = {
					spawn_debris = no
					is_boss = no
				}			
				effect = {
					set_owner = event_target:abyssal_host_invader_country
					while = {
						count = 20
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_scourer_hardmode"
								design = "NAME_abyssal_host_scourer_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_scourer"
								design = "NAME_abyssal_host_scourer"
							}
						}
					}
					while = {
						count = 30
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_lance_hardmode"
								design = "NAME_abyssal_host_lance_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_lance"
								design = "NAME_abyssal_host_lance"
							}
						}
					}
					set_location = event_target:abyss_black_hole_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 500
					set_fleet_flag = abyssal_host_invader_fleet
					set_fleet_bombardment_stance = armageddon
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						add_modifier = {
							modifier = ss_crisis_abyss_hardmode_fleet
							days = -1
						}
					}
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
						add_modifier = {
							modifier = ss_crisis_abyss_X_multiplier
							days = -1
						}
					}
					add_modifier = {
						modifier = ss_crisis_abyss_diff_multiplier
						multiplier = event_target:global_event_country.ss_AS_strength
						days = -1
					}
				}
			}
			create_fleet = {
				name = "NAME_abyssal_host_reclaimer_name"
				settings = {
					spawn_debris = no
					is_boss = no
				}			
				effect = {
					set_owner = event_target:abyssal_host_invader_country
					while = {
						count = 10
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_scourer_hardmode"
								design = "NAME_abyssal_host_scourer_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_scourer"
								design = "NAME_abyssal_host_scourer"
							}
						}
					}
					while = {
						count = 15
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_lance_hardmode"
								design = "NAME_abyssal_host_lance_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_lance"
								design = "NAME_abyssal_host_lance"
							}
						}
					}
					set_location = event_target:abyss_black_hole_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 500
					set_fleet_flag = abyssal_host_invader_fleet
					set_fleet_bombardment_stance = armageddon
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						add_modifier = {
							modifier = ss_crisis_abyss_hardmode_fleet
							days = -1
						}
					}
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
						add_modifier = {
							modifier = ss_crisis_abyss_X_multiplier
							days = -1
						}
					}
					add_modifier = {
						modifier = ss_crisis_abyss_diff_multiplier
						multiplier = event_target:global_event_country.ss_AS_strength
						days = -1
					}
				}
			}
			create_fleet = {
				name = "NAME_abyssal_host_reclaimer_name"
				settings = {
					spawn_debris = no
					is_boss = no
				}			
				effect = {
					set_owner = event_target:abyssal_host_invader_country
					while = {
						count = 10
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_scourer_hardmode"
								design = "NAME_abyssal_host_scourer_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_scourer"
								design = "NAME_abyssal_host_scourer"
							}
						}
					}
					while = {
						count = 15
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_lance_hardmode"
								design = "NAME_abyssal_host_lance_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_lance"
								design = "NAME_abyssal_host_lance"
							}
						}
					}
					set_location = event_target:abyss_black_hole_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 500
					set_fleet_flag = abyssal_host_invader_fleet
					set_fleet_bombardment_stance = armageddon
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						add_modifier = {
							modifier = ss_crisis_abyss_hardmode_fleet
							days = -1
						}
					}
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
						add_modifier = {
							modifier = ss_crisis_abyss_X_multiplier
							days = -1
						}
					}
					add_modifier = {
						modifier = ss_crisis_abyss_diff_multiplier
						multiplier = event_target:global_event_country.ss_AS_strength
						days = -1
					}
				}
			}
		}
		random_system = {
			limit = {
				AND = {
					NOT = { has_star_flag = abyssal_secrets_blackhole } 
					NOT = { any_system_planet = { is_planet_class = pc_ss_abyssal_black_hole } }
					distance = { source = root.capital_scope min_jumps > 20 type = hyperlane }
					NOT = { is_owned_by = root }
				} 
			}
			set_star_flag = abyssal_secrets_blackhole
			save_global_event_target_as = system_abyss_black_hole_2
			set_star_class = sc_ss_abyss 
			random_system_planet = {
				limit = { is_star = yes }
				save_global_event_target_as = abyss_black_hole_2
				set_name = "NAME_abyss_black_hole_spawn"
				event_target:abyssal_host_invader_country = {
					create_fleet = {
						name = "NAME_abyssal_host_dreadnought_name"
						settings = {
							spawn_debris = no
							is_boss = no
						}			
						effect = {
							set_owner = event_target:abyssal_host_invader_country
							while = {
								count = 20
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_scourer_hardmode"
										design = "NAME_abyssal_host_scourer_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_scourer"
										design = "NAME_abyssal_host_scourer"
									}
								}
							}
							while = {
								count = 30
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_lance_hardmode"
										design = "NAME_abyssal_host_lance_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_lance"
										design = "NAME_abyssal_host_lance"
									}
								}
							}
							set_location = event_target:abyss_black_hole_2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 500
							set_fleet_flag = abyssal_host_invader_fleet
							set_fleet_bombardment_stance = armageddon
							if = {
								limit = { has_global_flag = ss_crisis_hardmode }
								add_modifier = {
									modifier = ss_crisis_abyss_hardmode_fleet
									days = -1
								}
							}
							if = {
								limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
								add_modifier = {
									modifier = ss_crisis_abyss_X_multiplier
									days = -1
								}
							}
							add_modifier = {
								modifier = ss_crisis_abyss_diff_multiplier
								multiplier = event_target:global_event_country.ss_AS_strength
								days = -1
							}
						}
					}
					create_fleet = {
						name = "NAME_abyssal_host_reclaimer_name"
						settings = {
							spawn_debris = no
							is_boss = no
						}			
						effect = {
							set_owner = event_target:abyssal_host_invader_country
							while = {
								count = 10
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_scourer_hardmode"
										design = "NAME_abyssal_host_scourer_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_scourer"
										design = "NAME_abyssal_host_scourer"
									}
								}
							}
							while = {
								count = 15
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_lance_hardmode"
										design = "NAME_abyssal_host_lance_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_lance"
										design = "NAME_abyssal_host_lance"
									}
								}
							}
							set_location = event_target:abyss_black_hole_2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 500
							set_fleet_flag = abyssal_host_invader_fleet
							set_fleet_bombardment_stance = armageddon
							if = {
								limit = { has_global_flag = ss_crisis_hardmode }
								add_modifier = {
									modifier = ss_crisis_abyss_hardmode_fleet
									days = -1
								}
							}
							if = {
								limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
								add_modifier = {
									modifier = ss_crisis_abyss_X_multiplier
									days = -1
								}
							}
							add_modifier = {
								modifier = ss_crisis_abyss_diff_multiplier
								multiplier = event_target:global_event_country.ss_AS_strength
								days = -1
							}
						}
					}
					create_fleet = {
						name = "NAME_abyssal_host_reclaimer_name"
						settings = {
							spawn_debris = no
							is_boss = no
						}			
						effect = {
							set_owner = event_target:abyssal_host_invader_country
							while = {
								count = 10
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_scourer_hardmode"
										design = "NAME_abyssal_host_scourer_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_scourer"
										design = "NAME_abyssal_host_scourer"
									}
								}
							}
							while = {
								count = 15
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_lance_hardmode"
										design = "NAME_abyssal_host_lance_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_lance"
										design = "NAME_abyssal_host_lance"
									}
								}
							}
							set_location = event_target:abyss_black_hole_2
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 500
							set_fleet_flag = abyssal_host_invader_fleet
							set_fleet_bombardment_stance = armageddon
							if = {
								limit = { has_global_flag = ss_crisis_hardmode }
								add_modifier = {
									modifier = ss_crisis_abyss_hardmode_fleet
									days = -1
								}
							}
							if = {
								limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
								add_modifier = {
									modifier = ss_crisis_abyss_X_multiplier
									days = -1
								}
							}
							add_modifier = {
								modifier = ss_crisis_abyss_diff_multiplier
								multiplier = event_target:global_event_country.ss_AS_strength
								days = -1
							}
						}
					}
				}
			}
			every_system_planet = {
				add_modifier = {
					modifier = abyssalsecrets_dark_world
					days = -1
				}
			}
			every_system_planet = {
				limit = {
					is_star = yes
				}
				change_pc = pc_ss_abyssal_black_hole
			}
		}
		random_system = {
			limit = {
				AND = {
					NOT = { has_star_flag = abyssal_secrets_blackhole } 
					NOT = { any_system_planet = { is_planet_class = pc_ss_abyssal_black_hole } }
					distance = { source = event_target:abyss_black_hole_2 min_jumps > 15 type = hyperlane }
					distance = { source = root.capital_scope min_jumps > 30 type = hyperlane }
					NOT = { is_owned_by = root }
				} 
			}
			set_star_flag = abyssal_secrets_blackhole
			save_global_event_target_as = system_abyss_black_hole_3
			set_star_class = sc_ss_abyss 
			random_system_planet = {
				limit = { is_star = yes }
				save_global_event_target_as = abyss_black_hole_3
				set_name = "NAME_abyss_black_hole_spawn"
				event_target:abyssal_host_invader_country = {
					create_fleet = {
						name = "NAME_abyssal_host_dreadnought_name"
						settings = {
							spawn_debris = no
							is_boss = no
						}			
						effect = {
							set_owner = event_target:abyssal_host_invader_country
							while = {
								count = 20
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_scourer_hardmode"
										design = "NAME_abyssal_host_scourer_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_scourer"
										design = "NAME_abyssal_host_scourer"
									}
								}
							}
							while = {
								count = 30
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_lance_hardmode"
										design = "NAME_abyssal_host_lance_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_lance"
										design = "NAME_abyssal_host_lance"
									}
								}
							}
							set_location = event_target:abyss_black_hole_3
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 500
							set_fleet_flag = abyssal_host_invader_fleet
							set_fleet_bombardment_stance = armageddon
							if = {
								limit = { has_global_flag = ss_crisis_hardmode }
								add_modifier = {
									modifier = ss_crisis_abyss_hardmode_fleet
									days = -1
								}
							}
							if = {
								limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
								add_modifier = {
									modifier = ss_crisis_abyss_X_multiplier
									days = -1
								}
							}
							add_modifier = {
								modifier = ss_crisis_abyss_diff_multiplier
								multiplier = event_target:global_event_country.ss_AS_strength
								days = -1
							}
						}
					}
					create_fleet = {
						name = "NAME_abyssal_host_reclaimer_name"
						settings = {
							spawn_debris = no
							is_boss = no
						}			
						effect = {
							set_owner = event_target:abyssal_host_invader_country
							while = {
								count = 10
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_scourer_hardmode"
										design = "NAME_abyssal_host_scourer_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_scourer"
										design = "NAME_abyssal_host_scourer"
									}
								}
							}
							while = {
								count = 15
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_lance_hardmode"
										design = "NAME_abyssal_host_lance_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_lance"
										design = "NAME_abyssal_host_lance"
									}
								}
							}
							set_location = event_target:abyss_black_hole_3
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 500
							set_fleet_flag = abyssal_host_invader_fleet
							set_fleet_bombardment_stance = armageddon
							if = {
								limit = { has_global_flag = ss_crisis_hardmode }
								add_modifier = {
									modifier = ss_crisis_abyss_hardmode_fleet
									days = -1
								}
							}
							if = {
								limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
								add_modifier = {
									modifier = ss_crisis_abyss_X_multiplier
									days = -1
								}
							}
							add_modifier = {
								modifier = ss_crisis_abyss_diff_multiplier
								multiplier = event_target:global_event_country.ss_AS_strength
								days = -1
							}
						}
					}
					create_fleet = {
						name = "NAME_abyssal_host_reclaimer_name"
						settings = {
							spawn_debris = no
							is_boss = no
						}			
						effect = {
							set_owner = event_target:abyssal_host_invader_country
							while = {
								count = 10
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_scourer_hardmode"
										design = "NAME_abyssal_host_scourer_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_scourer"
										design = "NAME_abyssal_host_scourer"
									}
								}
							}
							while = {
								count = 15
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									create_ship = {
										name = "NAME_abyssal_host_lance_hardmode"
										design = "NAME_abyssal_host_lance_hardmode"
									}
								}
								else = {
									create_ship = {
										name = "NAME_abyssal_host_lance"
										design = "NAME_abyssal_host_lance"
									}
								}
							}
							set_location = event_target:abyss_black_hole_3
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 500
							set_fleet_flag = abyssal_host_invader_fleet
							set_fleet_bombardment_stance = armageddon
							if = {
								limit = { has_global_flag = ss_crisis_hardmode }
								add_modifier = {
									modifier = ss_crisis_abyss_hardmode_fleet
									days = -1
								}
							}
							if = {
								limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
								add_modifier = {
									modifier = ss_crisis_abyss_X_multiplier
									days = -1
								}
							}
							add_modifier = {
								modifier = ss_crisis_abyss_diff_multiplier
								multiplier = event_target:global_event_country.ss_AS_strength
								days = -1
							}
						}
					}
				}
			}
			every_system_planet = {
				add_modifier = {
					modifier = abyssalsecrets_dark_world
					days = -1
				}
			}
			every_system_planet = {
				limit = {
					is_star = yes
				}
				change_pc = pc_ss_abyssal_black_hole
			}
		}
		every_country = {
			limit = { is_country_type = default }
			begin_event_chain = { 
				event_chain = abyssal_invasion_chain
				target = this 
			}
			create_point_of_interest = {
				id = the_eye
				name = the_eye_poi
				desc = the_eye_desc
				event_chain = abyssal_invasion_chain
				location = event_target:abyss_black_hole_1
			}
			create_point_of_interest = {
				id = abyss_black_hole_1
				name = abyssal_gateway_poi
				desc = abyssal_gateway_desc
				event_chain = abyssal_invasion_chain
				location = event_target:abyss_black_hole_2
			}
			create_point_of_interest = {
				id = abyss_black_hole_2
				name = abyssal_gateway_poi
				desc = abyssal_gateway_desc
				event_chain = abyssal_invasion_chain
				location = event_target:abyss_black_hole_3
			}
		}
	}
}

### Tell Everyone shit is going down

country_event = {
	id = abyssalsecrets.312
	title = abyssalsecrets.312.name
	desc = abyssalsecrets.312.desc
	picture = GFX_evt_black_hole
	show_sound = event_sensor_ping
	is_triggered_only = yes

	option = {
		name = abyssalsecrets.312.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.313 days = 15 }
		}
	}
}

### Abyssal Host introduces themselves to everyone

country_event = {
	id = abyssalsecrets.313
	title = "TRANSMISSION"
	desc = "abyssalsecrets.313.desc"

	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"

	picture_event_data = {
		portrait = abyssal_host_portrait
		room = abyssal_host_room
	}

	is_triggered_only = yes

	option = {
		name = abyssalsecrets.313.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.1003 days = 30 }
		}
	}
	
	option = {
		name = abyssalsecrets.313.b
		trigger = {
			AND = {
				owner = { OR = { has_ethic = ethic_fanatic_militarist has_ethic = ethic_militarist } }
				NOT = { has_country_flag = ss_abyss_truth_accepted }
			}
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.1003 days = 30 }
		}
	}

	option = {
		name = abyssalsecrets.313.c
		trigger = {
			AND = {
				owner = { 
					OR = { 
						has_ethic = ethic_fanatic_spiritualist
						has_ethic = ethic_materialist
						has_ethic = ethic_fanatic_materialist
						has_ethic = ethic_spiritualist
					} 
				}
				NOT = { has_country_flag = ss_abyss_truth_accepted }
			}
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.1003 days = 30 }
		}
	}
	
	option = {
		name = abyssalsecrets.313.d
		trigger = {
			AND = {
				owner = { 
					OR = { 
						has_ethic = ethic_pacifist
						has_ethic = ethic_fanatic_pacifist
						has_ethic = ethic_egalitarian
						has_ethic = ethic_fanatic_egalitarian
					} 
				}
				NOT = { has_country_flag = ss_abyss_truth_accepted }
			}
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.1003 days = 30 }
		}
	}
	
	option = {
		name = abyssalsecrets.313.e
		trigger = {
			owner = { 
				OR = { 
					has_authority = auth_hive_mind
				}
			}
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.1003 days = 30 }
		}
	}
	
	option = {
		name = abyssalsecrets.313.f
		trigger = {
			has_country_flag = ss_abyss_truth_accepted
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.1003 days = 30 }
		}
	}
}

### Continuous spawn algorithm.
### Recurses with itself every 350 days, spawning a new fleet. Stops when The Father is Destroyed.
### If number of ships > 1000, checks again in 450 days

country_event = {
	id = abyssalsecrets.314
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = abyssal_host_invaders_type
	}


	immediate = {
		# If at fleet cap
		if = {
			limit = {
				num_ships > 450
			}
			country_event = { id = abyssalsecrets.314 days = 350 } # Check again later
		}
		# Otherwise spawn ships, unless The Father is dead, then spawn bigger ships
		else_if = {
			limit = {
				has_country_flag = host_main_invasion_mode
			}
			if = {
				limit = {
					has_global_flag = abyssal_invasion_ongoing
					count_owned_ship = {
						limit = { is_ship_size = abyssal_father }
						count > 0
					}
				}
				country_event = { id = abyssalsecrets.315 }
				country_event = { id = abyssalsecrets.314 days = 250 }
			}
			else_if = {
				limit = {
					has_global_flag = abyssal_invasion_ongoing
				}
				country_event = { id = abyssalsecrets.321 }
				country_event = { id = abyssalsecrets.314 days = 250 }
			}
		}
		else_if = {
			limit = {
				AND = {
					has_country_flag = host_rest_mode
					has_global_flag = abyssal_invasion_ongoing
				}
			}
			country_event = { id = abyssalsecrets.531 }
			country_event = { id = abyssalsecrets.314 days = 250 }
		}
		else_if = {
			limit = {
				AND = {
					has_country_flag = host_push_mode
					has_global_flag = abyssal_invasion_ongoing
				}
			}
			country_event = { id = abyssalsecrets.530 }
			country_event = { id = abyssalsecrets.314 days = 250 }
		}
	}
}

country_event = {
	id = abyssalsecrets.315
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = { 
				any_system_planet = { is_planet_class = pc_ss_abyssal_black_hole }
				is_star_class = sc_ss_abyss
			}
			star = {
				event_target:abyssal_host_invader_country = {
					country_event = { id = abyssalsecrets.323 days = 60 }
					while = {
						count = 2
						create_fleet = {
							name = "NAME_abyssal_host_reclaimer_name"
							settings = {
								spawn_debris = no
								is_boss = no
							}			
							effect = {
								set_owner = event_target:abyssal_host_invader_country
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_scourer_hardmode"
											design = "NAME_abyssal_host_scourer_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_scourer"
											design = "NAME_abyssal_host_scourer"
										}
									}
								}
								while = {
									count = 15
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_lance_hardmode"
											design = "NAME_abyssal_host_lance_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_lance"
											design = "NAME_abyssal_host_lance"
										}
									}
								}
								set_location = PREVPREV
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = self
								set_aggro_range = 500
								set_fleet_flag = abyssal_host_invader_fleet
								set_fleet_bombardment_stance = armageddon
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									add_modifier = {
										modifier = ss_crisis_abyss_hardmode_fleet
										days = -1
									}
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
							}
						}
					}
				}
			}
		}
	}
}

### THE FATHER COMETH
### Starts the ship spawn recursion. Spawns the father and his entourage. Fleet empowered depending on how many planets monched.

country_event = {
	id = abyssalsecrets.316
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { NOT = { has_country_flag = ss_father_manifestation_alerted } }
			event_target:abyss_black_hole_1 = {
				save_event_target_as = father_spawn_loc
			}
		}
		else = {
			random_system = {
				limit = {
					is_star_class = sc_ss_abyss
				}
				save_event_target_as = father_spawn_loc
			}
		}
		event_target:father_spawn_loc = {
			event_target:abyssal_host_invader_country = {
				create_leader = {
					class = admiral
					species = event_target:abyssal_host_species
					name = random
					skill = 3
					traits = {
						trait = leader_trait_ethereal
					}
				}
				create_fleet = {
					name = "NAME_abyssal_father_fleet"
					settings = {
						spawn_debris = no
						is_boss = no
					}			
					effect = {
						set_owner = event_target:abyssal_host_invader_country
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_father"
								design = "NAME_abyssal_father_manifestation"
							}
							last_created_ship = {
								add_modifier = {
									modifier = ss_crisis_father_hardmode_fleet
									days = -1
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_father"
								design = "NAME_abyssal_father_manifestation"
							}
						}
						assign_leader = last_created_leader
						while = {
							count = 10
							if = {
								limit = { has_global_flag = ss_crisis_hardmode }
								create_ship = {
									name = "NAME_abyssal_host_scourer_hardmode"
									design = "NAME_abyssal_host_scourer_hardmode"
								}
							}
							else = {
								create_ship = {
									name = "NAME_abyssal_host_scourer"
									design = "NAME_abyssal_host_scourer"
								}
							}
						}
						while = {
							count = 20
							if = {
								limit = { has_global_flag = ss_crisis_hardmode }
								create_ship = {
									name = "NAME_abyssal_host_lance_hardmode"
									design = "NAME_abyssal_host_lance_hardmode"
								}
							}
							else = {
								create_ship = {
									name = "NAME_abyssal_host_lance"
									design = "NAME_abyssal_host_lance"
								}
							}
						}
						set_location = event_target:father_spawn_loc
						set_formation_scale = 2
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 500
						set_fleet_flag = abyssal_host_main_fleet
						set_fleet_bombardment_stance = armageddon
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							add_modifier = {
								modifier = ss_crisis_abyss_hardmode_fleet
								days = -1
							}
						}
						add_modifier = {
							modifier = ss_crisis_abyss_diff_multiplier
							multiplier = event_target:global_event_country.ss_AS_strength
							days = -1
						}
					}
				}
			}
		}
		every_country = {
			country_event = { id = abyssalsecrets.320 days = 15 }
		}
	}
}

### Planet eaten once devastation reaches 100% (checked through on-actions)

planet_event = {
	id = abyssalsecrets.317
	title = "abyssalsecrets.317.name"
	desc = "abyssalsecrets.317.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_ghost_town

	is_triggered_only = yes

	trigger = {
		planet_devastation >= 100
		FROM = { is_country_type = abyssal_host_invaders_type }
	}

	immediate = {
		destroy_colony = yes
		if = {
			limit = {
				NOR = {
					is_planet_class = pc_ringworld_habitable
					is_planet_class = pc_habitat
				}
			}
			add_modifier = {
				modifier = abyssalsecrets_abyss_world
				days = -1
			}
			change_pc = pc_abyss
			reset_planet = yes
		}
		else_if = {
			limit = { is_planet_class = pc_ringworld_habitable }
			change_pc = pc_ringworld_habitable_damaged
			reset_planet = yes
		}
		else_if = {
			limit = { is_planet_class = pc_habitat }
			remove_planet = yes
		}
		every_country = {
			limit = {
				has_event_chain = "abyssal_invasion_chain"
			}
			add_event_chain_counter = {
				event_chain = "abyssal_invasion_chain"
				counter = "abyssal_planets_consumed"
				amount = 1
			}
		}
	}
	
	option = {
		name = abyssalsecrets.317.a
	}
}

### The Explanation Events
### Let the player know they have to destroy the main fleet containing the father.

### Uh oh, big thing has appeared! You better kill it.

country_event = {
	id = abyssalsecrets.320
	title = "abyssalsecrets.320.name"
	picture = GFX_evt_dimensional_horror
	show_sound = event_red_alert
	location = event_target:father_spawn_loc
	
	desc = {
		text = abyssalsecrets.320.desc_01
		trigger = {
			AND = {
				NOT = { has_country_flag = abyssal_secrets_leader_event }
				NOT = { has_country_flag = ss_father_manifestation_alerted }
			}
		}
	}
	desc = {
		text = abyssalsecrets.320.desc_02
		trigger = {
			AND = {
				NOT = { has_country_flag = abyssal_secrets_leader_event }
				has_country_flag = ss_father_manifestation_alerted
			}
		}
	}
	desc = {
		text = abyssalsecrets.320.desc_03
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}

	is_triggered_only = yes
	
	immediate = {	
	}
	
	option = {
		name = abyssalsecrets.320.a
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	option = {
		name = abyssalsecrets.320.b
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
	after = {
		hidden_effect = {
			set_country_flag = ss_father_manifestation_alerted
		}
	}
}

# Special re-inforcement wave, can happen without the father present.

country_event = {
	id = abyssalsecrets.321
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = abyssal_host_invaders_type
	}

	immediate = {
		# Spawn three waves of smaller fleets
		country_event = { id = abyssalsecrets.323 days = 50 }
		country_event = { id = abyssalsecrets.323 days = 150 }
		country_event = { id = abyssalsecrets.323 days = 300 }
		# Spawn a big wave
		country_event = { id = abyssalsecrets.322 }
	}
}

country_event = {
	id = abyssalsecrets.322
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = { 
				any_system_planet = { is_planet_class = pc_ss_abyssal_black_hole }
				is_star_class = sc_ss_abyss
			}
			star = {
				event_target:abyssal_host_invader_country = {
					while = {
						count = 2
						create_leader = {
							class = admiral
							species = event_target:abyssal_host_species
							name = random
							skill = 3
							traits = {
								trait = leader_trait_ethereal
							}
						}
						create_fleet = {
							name = "NAME_abyssal_host_pulsar_name"
							settings = {
								spawn_debris = no
								is_boss = no
							}			
							effect = {
								set_owner = event_target:abyssal_host_invader_country
								while = {
									count = 5
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_pulsar_hardmode"
											design = "NAME_abyssal_host_pulsar_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_pulsar"
											design = "NAME_abyssal_host_pulsar"
										}
									}
								}
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_scourer_hardmode"
											design = "NAME_abyssal_host_scourer_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_scourer"
											design = "NAME_abyssal_host_scourer"
										}
									}
								}
								while = {
									count = 15
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_lance_hardmode"
											design = "NAME_abyssal_host_lance_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_lance"
											design = "NAME_abyssal_host_lance"
										}
									}
								}
								assign_leader = last_created_leader
								set_location = PREVPREV
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = self
								set_aggro_range = 500
								set_fleet_flag = abyssal_host_invader_fleet
								set_fleet_bombardment_stance = armageddon
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									add_modifier = {
										modifier = ss_crisis_abyss_hardmode_fleet
										days = -1
									}
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
							}
						}
					}
				}
			}
		}
		event_target:abyssal_host_invader_country = {
			create_leader = {
				class = admiral
				species = event_target:abyssal_host_species
				name = random
				skill = 3
				traits = {
					trait = leader_trait_ethereal
				}
			}
			create_fleet = {
				name = "NAME_abyssal_host_pulsar_name"
				settings = {
					spawn_debris = no
					is_boss = no
				}			
				effect = {
					set_owner = event_target:abyssal_host_invader_country
					while = {
						count = 5
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_pulsar_hardmode"
								design = "NAME_abyssal_host_pulsar_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_pulsar"
								design = "NAME_abyssal_host_pulsar"
							}
						}
					}
					assign_leader = last_created_leader
					while = {
						count = 10
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_scourer_hardmode"
								design = "NAME_abyssal_host_scourer_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_scourer"
								design = "NAME_abyssal_host_scourer"
							}
						}
					}
					while = {
						count = 5
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_lance_hardmode"
								design = "NAME_abyssal_host_lance_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_lance"
								design = "NAME_abyssal_host_lance"
							}
						}
					}
					set_location = event_target:abyss_black_hole_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 500
					set_fleet_flag = abyssal_host_invader_fleet
					set_fleet_bombardment_stance = armageddon
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						add_modifier = {
							modifier = ss_crisis_abyss_hardmode_fleet
							days = -1
						}
					}
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
						add_modifier = {
							modifier = ss_crisis_abyss_X_multiplier
							days = -1
						}
					}
					add_modifier = {
						modifier = ss_crisis_abyss_diff_multiplier
						multiplier = event_target:global_event_country.ss_AS_strength
						days = -1
					}
				}
			}
		}
	}
}

country_event = {
	id = abyssalsecrets.323
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = { 
				any_system_planet = { is_planet_class = pc_ss_abyssal_black_hole }
				is_star_class = sc_ss_abyss
			}
			star = {
				event_target:abyssal_host_invader_country = {
					while = {
						count = 2
						create_fleet = {
							name = "NAME_abyssal_host_patrol_name"
							settings = {
								spawn_debris = no
								is_boss = no
							}			
							effect = {
								set_owner = event_target:abyssal_host_invader_country
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_scourer_hardmode"
											design = "NAME_abyssal_host_scourer_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_scourer"
											design = "NAME_abyssal_host_scourer"
										}
									}
								}
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_lance_hardmode"
											design = "NAME_abyssal_host_lance_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_lance"
											design = "NAME_abyssal_host_lance"
										}
									}
								}
								set_location = PREVPREV
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = self
								set_aggro_range = 500
								set_fleet_flag = abyssal_host_invader_fleet
								set_fleet_bombardment_stance = armageddon
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									add_modifier = {
										modifier = ss_crisis_abyss_hardmode_fleet
										days = -1
									}
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
							}
						}
					}
				}
			}
		}
		event_target:abyssal_host_invader_country = {
			create_fleet = {
				name = "NAME_abyssal_host_patrol_name"
				settings = {
					spawn_debris = no
					is_boss = no
				}			
				effect = {
					set_owner = event_target:abyssal_host_invader_country
					while = {
						count = 10
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_scourer_hardmode"
								design = "NAME_abyssal_host_scourer_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_scourer"
								design = "NAME_abyssal_host_scourer"
							}
						}
					}
					while = {
						count = 10
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_lance_hardmode"
								design = "NAME_abyssal_host_lance_hardmode"
							}
						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_lance"
								design = "NAME_abyssal_host_lance"
							}
						}
					}
					set_location = event_target:abyss_black_hole_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 500
					set_fleet_flag = abyssal_host_invader_fleet
					set_fleet_bombardment_stance = armageddon
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						add_modifier = {
							modifier = ss_crisis_abyss_hardmode_fleet
							days = -1
						}
					}
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
						add_modifier = {
							modifier = ss_crisis_abyss_X_multiplier
							days = -1
						}
					}
					add_modifier = {
						modifier = ss_crisis_abyss_diff_multiplier
						multiplier = event_target:global_event_country.ss_AS_strength
						days = -1
					}
				}
			}
		}
	}
}

### The tertiary events.
### The Abyssal Father is so alien, that mortal minds break in his presence (understandable)
### A repeating set of negative events ail the greater galaxy. These events will keep ailing them until the father is defeated.
### Some of the events taunt the player, some provide some background info to the keen.


### The finale.
### Once the Father is defeated, things start to wind down. Existing abyssal host fleets continue, but no new ones spawn
### After a while, the player is contacted directly by the Father of the Abyss. It gives some more lore.
### Mostly though, it begs for it's life and tries to assert itself as a misunderstood victim, seeking sympathy.
### If the player offers no sympathy, it resorts to threats. It says it will return eventually, now that the gates are open.
### The player is offered one of three options:
#		One last chance to form a bond (player forms bond, father gives them free stuff)
#		Destroy the father by exploding the main blackhole. (destroys system, destroys father, Father psychically annihilates some population)
#		Father is granted as a mortal leader, blackholes still destroyed.

### Ends invasion mode if the father's fleet is destroyed. Checked through on-actions.

country_event = {
	id = abyssalsecrets.350
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		exists = From
		fromfromfrom = { has_fleet_flag = abyssal_host_main_fleet }
	}
	
	immediate = {
		if = {
			limit = {
				NOT = { has_global_flag = abyssal_father_destroyed }
			}
			set_global_flag = abyssal_father_destroyed
			every_country = {
				limit = { is_country_type = default }
				country_event = { id = abyssalsecrets.351 }
			}
			event_target:abyssal_host_enemy_country = {
				country_event = { id = abyssalsecrets.352 days = 50 random = 25 }
			}
			event_target:abyssal_host_invader_country = {
				country_event = { id = abyssalsecrets.1001 days = 150 random = 150 }
			}
		}
		else = {
			every_country = {
				limit = { is_country_type = default }
				country_event = { id = abyssalsecrets.351 }
			}
		}
	}
}

country_event = {
	id = abyssalsecrets.351
	title = "abyssalsecrets.351.name"
	desc = "abyssalsecrets.351.desc"
	picture = GFX_evt_small_space_battle
	show_sound = event_space_battle

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.351.a
	}
}

### Father gets in contact with player. Following is a conversation sequence.

country_event = {
	id = abyssalsecrets.352
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.352.desc.initial"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.352.initial
		hidden_effect = {
			country_event = { id = abyssalsecrets.353 }
		}
	}
}

country_event = {
	id = abyssalsecrets.353
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.352.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.352.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.354 }
		}
	}
	option = {
		name = abyssalsecrets.352.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.355 }
		}
	}
	option = {
		name = abyssalsecrets.352.c
		is_dialog_only = yes
		response_text = abyssalsecrets.352.c.response
	}
	option = {
		name = abyssalsecrets.352.d
		is_dialog_only = yes
		response_text = abyssalsecrets.352.d.response
	}
}

country_event = {
	id = abyssalsecrets.354
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.352.1"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.352.1.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.356 }
		}
	}
	option = {
		name = abyssalsecrets.352.1.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.357 }
		}
	}
	option = {
		name = abyssalsecrets.352.1.c
		is_dialog_only = yes
		response_text = abyssalsecrets.352.1.c.response
	}
}

country_event = {
	id = abyssalsecrets.355
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.352.2"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.352.2.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.356 }
		}
	}
	option = {
		name = abyssalsecrets.352.2.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.357 }
		}
	}
	option = {
		name = abyssalsecrets.352.2.c
		is_dialog_only = yes
		response_text = abyssalsecrets.352.2.c.response
	}
}

country_event = {
	id = abyssalsecrets.356
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.352.1.1"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.352.1.1.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.358 }
		}
	}
	option = {
		name = abyssalsecrets.352.1.1.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.359 }
		}
	}
	option = {
		name = abyssalsecrets.352.1.1.c
		is_dialog_only = yes
		response_text = abyssalsecrets.352.1.1.c.response
	}
}

country_event = {
	id = abyssalsecrets.357
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.352.1.2"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.352.1.2.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.358 }
		}
	}
	option = {
		name = abyssalsecrets.352.1.2.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.359 }
		}
	}
	option = {
		name = abyssalsecrets.352.1.2.c
		is_dialog_only = yes
		response_text = abyssalsecrets.352.1.2.c.response
	}
}

country_event = {
	id = abyssalsecrets.358
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.352.1.1.1"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.352.1.1.1.a
		response_text = abyssalsecrets.352.1.1.1.a.response
		hidden_effect = {
			country_event = { id = abyssalsecrets.499 }
			set_timed_global_flag = { flag = ss_endgame_timer_1 years = 1 } #If pact signed 
			if = {
				limit = { has_global_flag = ss_crisis_hardmode }
				set_timed_global_flag = { flag = ss_endgame_timer_2 days = 180 }
			}
			else = { set_timed_global_flag = { flag = ss_endgame_timer_2 years = 2 } }
		}
	}
	option = {
		name = abyssalsecrets.352.1.1.1.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.499 }
			set_timed_global_flag = { flag = ss_endgame_timer_1 years = 1 } #If pact signed
			if = {
				limit = { has_global_flag = ss_crisis_hardmode }
				set_timed_global_flag = { flag = ss_endgame_timer_2 days = 180 }
			}
			else = { set_timed_global_flag = { flag = ss_endgame_timer_2 years = 2 } }
			country_event = { id = abyssalsecrets.1000 }
		}
	}
	option = {
		name = abyssalsecrets.352.1.1.1.c
		is_dialog_only = yes
		response_text = abyssalsecrets.352.1.1.1.c.response
	}
}

country_event = {
	id = abyssalsecrets.359
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.352.1.1.2"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.352.1.1.2.a
		response_text = abyssalsecrets.352.1.1.2.a.response
		hidden_effect = {
			country_event = { id = abyssalsecrets.499 }
			set_timed_global_flag = { flag = ss_endgame_timer_1 years = 1 } #If pact signed years = 3 
			if = {
				limit = { has_global_flag = ss_crisis_hardmode }
				set_timed_global_flag = { flag = ss_endgame_timer_2 days = 180 }
			}
			else = { set_timed_global_flag = { flag = ss_endgame_timer_2 years = 2 } }
		}
	}
	option = {
		name = abyssalsecrets.352.1.1.2.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.499 }
			set_timed_global_flag = { flag = ss_endgame_timer_1 years = 1 } #If pact signed years = 3 
			if = {
				limit = { has_global_flag = ss_crisis_hardmode }
				set_timed_global_flag = { flag = ss_endgame_timer_2 days = 180 }
			}
			else = { set_timed_global_flag = { flag = ss_endgame_timer_2 years = 2 } }
			country_event = { id = abyssalsecrets.1000 }
		}
	}
	option = {
		name = abyssalsecrets.352.1.1.2.c
		is_dialog_only = yes
		response_text = abyssalsecrets.352.1.1.2.c.response
	}
}

### Now the player either enters a pact and that is it pretty much.
### Here the Father congratulates the player for their smart move. Custom diplomacy enabled, Father will help player.

country_event = {
	id = abyssalsecrets.360
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.360.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.360.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.361 days = 50 }
		}
	}
}

### Spawns comms fleet, lets player know to talk through them.

country_event = {
	id = abyssalsecrets.361
	title = "abyssalsecrets.361.title"
	desc = "abyssalsecrets.361.desc"
	picture = GFX_evt_black_hole
	show_sound = event_ship_bridge
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { NOT = { exists = event_target:abyssal_host_envoy } }
			create_country = {
				name = "NAME_abyssal_host_envoy"
				type = abyssal_host_type
				name_list = "Abyssal_Host"
				species = event_target:abyssal_host_species
				flag = {
					icon = {
						category = "zoological"
						file = "flag_zoological_23.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"red"
						"dark_grey"
						"red"
						"red"
					}
				}
				effect = {
					set_faction_hostility = {
						target = root.owner
						set_hostile = no
						set_neutral = no
						set_friendly = yes
					}
					set_faction_hostility = {
						target = event_target:abyssal_host_invader_country
						set_hostile = no
						set_neutral = no
						set_friendly = yes
					}
					set_country_flag = abyssal_envoys
				}
			}
		}
		last_created_country = {
			establish_communications_no_message = root
			save_global_event_target_as = abyssal_host_envoy
		}
		establish_communications_no_message = event_target:abyssal_host_envoy
		set_faction_hostility = {
			target = event_target:abyssal_host_invader_country
			set_hostile = no
			set_neutral = no
			set_friendly = yes
		}
		every_country = {
			limit = {
				NOT = { is_same_value = root }
			}
			add_opinion_modifier = {
				who = root
				modifier = opinion_abyssal_threats
			}
		}
		create_fleet = {
			name = "NAME_abyssal_host_envoy_fleet"
			settings = {
				spawn_debris = no
				is_boss = no
			}			
			effect = {
				set_owner = event_target:abyssal_host_envoy
				while = {
					count = 3
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						create_ship = {
							name = "NAME_abyssal_host_pulsar_hardmode"
							design = "NAME_abyssal_host_pulsar_hardmode"
						}
					}
					else = {
						create_ship = {
							name = "NAME_abyssal_host_pulsar"
							design = "NAME_abyssal_host_pulsar"
						}
					}
				}
				while = {
					count = 8
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						create_ship = {
							name = "NAME_abyssal_host_scourer_hardmode"
							design = "NAME_abyssal_host_scourer_hardmode"
						}
					}
					else = {
						create_ship = {
							name = "NAME_abyssal_host_scourer"
							design = "NAME_abyssal_host_scourer"
						}
					}
				}
				set_location = event_target:abyss_black_hole_1
				set_fleet_stance = passive
				set_fleet_flag = abyssal_host_envoy_fleet
				if = {
					limit = { has_global_flag = ss_crisis_hardmode }
					add_modifier = {
						modifier = ss_crisis_abyss_hardmode_fleet
						days = -1
					}
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
					add_modifier = {
						modifier = ss_crisis_abyss_X_multiplier
						days = -1
					}
				}
				add_modifier = {
					modifier = ss_crisis_abyss_diff_multiplier
					multiplier = event_target:global_event_country.ss_AS_strength
					days = -1
				}
			}
		}
	}
	
	option = {
		name = abyssalsecrets.361.a
	}
}

### Custom diplomacy. Activated through on-actions.

country_event = {
	id = abyssalsecrets.362
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		AND = {
			FROM = { is_country_type = abyssal_host_type }
			has_country_flag = abyssal_host_friend
		}
	}
	
	immediate = {
		country_event = { id = abyssalsecrets.363 }
	}
}

country_event = {
	id = abyssalsecrets.363
	title = abyssalsecrets.visions
	
	desc = {
		text = abyssalsecrets.362.desc_01
	}
	desc = {
		text = abyssalsecrets.362.desc_02
	}
	desc = {
		text = abyssalsecrets.362.desc_03
	}
	desc = {
		text = abyssalsecrets.362.desc_04
	}
	desc = {
		text = abyssalsecrets.362.desc_05
	}

	diplomatic = yes
	force_open = yes
	custom_gui = "ss_ab_diplo_window"

	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}

	is_triggered_only = yes

	trigger = {
	}

	option = {
		name = abyssalsecrets.362.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.364 }
		}
	}
	option = {
		name = abyssalsecrets.362.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.365 }
		}
	}
	option = {
		name = abyssalsecrets.362.c
		hidden_effect = {
			country_event = { id = abyssalsecrets.367 }
		}
	}
	option = {
		name = abyssalsecrets.362.d
	}
}

### Request Resources

country_event = {
	id = abyssalsecrets.364
	title = abyssalsecrets.visions
	desc = "abyssalsecrets.363.desc"

	diplomatic = yes
	force_open = yes
	custom_gui = "ss_ab_diplo_window"

	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}

	is_triggered_only = yes
	
	immediate = {
		random_list = {
    		35 = {
				set_variable = { which = father_resource_tier value = 1 }
    		}
    		35 = {
				set_variable = { which = father_resource_tier value = 2 }
			}
			30 = {
				set_variable = { which = father_resource_tier value = 3 }
			}
    	}
	}

	option = {
		name = abyssalsecrets.363.a
		allow = {
			custom_tooltip = {
				fail_text = father_time_not_expired
				NOT = { has_country_flag = father_resources_requested }
			}
		}
		if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 1
				}
			}
			owner = {
				add_resource = { 
					energy = 8000
					food = 3000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 2
				}
			}
			owner = {
				add_resource = { 
					energy = 12000
					food = 4500
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 3
				}
			}
			owner = {
				add_resource = { 
					energy = 16000
					food = 6000
				}
			}
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = father_resources_requested
				days = 350
			}
		}
	}
	option = {
		name = abyssalsecrets.363.b
		allow = {
			custom_tooltip = {
				fail_text = father_time_not_expired
				NOT = { has_country_flag = father_resources_requested }
			}
		}
		if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 1
				}
			}
			owner = {
				add_resource = { 
					minerals = 6000
					alloys = 2000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 2
				}
			}
			owner = {
				add_resource = { 
					minerals = 9000
					alloys = 3000
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 3
				}
			}
			owner = {
				add_resource = { 
					minerals = 13500
					alloys = 4500
				}
			}
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = father_resources_requested
				days = 350
			}
		}
	}
	option = {
		name = abyssalsecrets.363.c
		allow = {
			custom_tooltip = {
				fail_text = father_time_not_expired
				NOT = { has_country_flag = father_resources_requested }
			}
		}
		if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 1
				}
			}
			owner = {
				add_resource = { 
					sr_muonic_hydrogen = 75
					sr_hypernuclear = 75
					sr_quantanium = 75
					sr_dark_matter = 75
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 2
				}
			}
			owner = {
				add_resource = { 
					sr_muonic_hydrogen = 125
					sr_hypernuclear = 125
					sr_quantanium = 125
					sr_dark_matter = 125
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = father_resource_tier
					value = 3
				}
			}
			owner = {
				add_resource = { 
					sr_muonic_hydrogen = 175
					sr_hypernuclear = 175
					sr_quantanium = 175
					sr_dark_matter = 175
				}
			}
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = father_resources_requested
				days = 350
			}
		}
	}
	option = {
		name = abyssalsecrets.363.d
	}
}

### Request Reinforcements

country_event = {
	id = abyssalsecrets.365
	title = abyssalsecrets.visions
	desc = "abyssalsecrets.364.desc"

	diplomatic = yes
	force_open = yes
	custom_gui = "ss_ab_diplo_window"

	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}

	is_triggered_only = yes
	
	immediate = {
		random_list = {
    		35 = {
				set_variable = { which = father_fleet_strength_tier value = 1 }
    		}
    		35 = {
				set_variable = { which = father_fleet_strength_tier value = 2 }
			}
			30 = {
				set_variable = { which = father_fleet_strength_tier value = 3 }
			}
    	}
	}

	option = {
		name = abyssalsecrets.364.a
		allow = {
			custom_tooltip = {
				fail_text = father_time_not_expired
				NOT = { has_country_flag = father_resources_requested }
			}
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = father_resources_requested
				days = 350
			}
			country_event = { id = abyssalsecrets.366 days = 25 }
		}
	}
	option = {
		name = abyssalsecrets.364.b
	}
}

country_event = {
	id = abyssalsecrets.366
	title = abyssalsecrets.365.title
	desc = "abyssalsecrets.365.desc"
	picture = GFX_evt_black_hole
	show_sound = event_ship_bridge
	location = event_target:abyss_black_hole_1

	is_triggered_only = yes
	
	immediate = {
		create_fleet = {
			name = "NAME_abyssal_host_reclaimer_name"
			settings = {
				spawn_debris = no
				is_boss = no
			}			
			effect = {
				set_owner = root.owner
				#assign_leader = last_created_leader
				while = {
					count = 5
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						create_ship = {
							name = "NAME_abyssal_host_pulsar_hardmode"
							design = "NAME_abyssal_host_pulsar_hardmode"
						}
					}
					else = {
						create_ship = {
							name = "NAME_abyssal_host_pulsar"
							design = "NAME_abyssal_host_pulsar"
						}
					}
				}
				while = {
					count = 5
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						create_ship = {
							name = "NAME_abyssal_host_scourer_hardmode"
							design = "NAME_abyssal_host_scourer_hardmode"
						}
					}
					else = {
						create_ship = {
							name = "NAME_abyssal_host_scourer"
							design = "NAME_abyssal_host_scourer"
						}
					}
					
				}
				while = {
					count = 10
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						create_ship = {
							name = "NAME_abyssal_host_lance_hardmode"
							design = "NAME_abyssal_host_lance_hardmode"
						}
					}
					else = {
						create_ship = {
							name = "NAME_abyssal_host_lance"
							design = "NAME_abyssal_host_lance"
						}
					}
				}
				set_location = event_target:abyss_black_hole_1
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 100
				if = {
					limit = { has_global_flag = ss_crisis_hardmode }
					add_modifier = {
						modifier = ss_crisis_abyss_hardmode_fleet
						days = -1
					}
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
					add_modifier = {
						modifier = ss_crisis_abyss_X_multiplier
						days = -1
					}
				}
				add_modifier = {
					modifier = ss_crisis_abyss_diff_multiplier
					multiplier = event_target:global_event_country.ss_AS_strength
					days = -1
				}
			}
		}
		last_created_fleet = {
			add_modifier = {
				modifier = ss_abyss_free_ships
				days = -1
			}
		}
	}
	
	option = {
		name = abyssalsecrets.365.a
	}
}

### Ask questions:

country_event = {
	id = abyssalsecrets.367
	title = abyssalsecrets.visions
	
	desc = {
		text = abyssalsecrets.366.desc_01
	}
	desc = {
		text = abyssalsecrets.366.desc_02
	}
	desc = {
		text = abyssalsecrets.366.desc_03
	}

	diplomatic = yes
	force_open = yes
	custom_gui = "ss_ab_diplo_window"

	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}

	is_triggered_only = yes

	option = {
		name = abyssalsecrets.366.a
		is_dialog_only = yes
		response_text = abyssalsecrets.366.a.response
	}
	option = {
		name = abyssalsecrets.366.b
		is_dialog_only = yes
		response_text = abyssalsecrets.366.b.response
	}
	option = {
		name = abyssalsecrets.366.c
		is_dialog_only = yes
		response_text = abyssalsecrets.366.c.response
	}
	option = {
		name = abyssalsecrets.366.d
		is_dialog_only = yes
		response_text = abyssalsecrets.366.d.response
	}
	option = {
		name = abyssalsecrets.366.e
		is_dialog_only = yes
		response_text = abyssalsecrets.366.e.response
	}
	option = {
		name = abyssalsecrets.366.f
	}
}


### To actually win, the players must destroy a certain number of abyssal host fleets to get the project that destroys them.

country_event = {
	id = abyssalsecrets.368
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = abyssal_host_invaders_type
		exists = from
	}

	immediate = {
		if = {
			limit = {
				FROM = { has_event_chain = "abyssal_invasion_chain" }
			}
			FROM = {
				add_event_chain_counter = {
					event_chain = "abyssal_invasion_chain"
					counter = "abyssal_engagement_victories_us"
					amount = 1
				}
				country_event = { id = abyssalsecrets.369 }
			}
		}
		if = {
			limit = {
				num_ships < 40
			}
			# Emergency re-inforcement if abyssal host catastrophically low in active ships.
			country_event = { id = abyssalsecrets.315 }
		}
		if = {
			limit = {
				num_ships < 80
			}
			# Emergency re-inforcement if abyssal host low in active ships.
			country_event = { id = abyssalsecrets.530 }
		}
		every_country = {
			limit = {
				has_event_chain = "abyssal_invasion_chain"
				NOT = { is_same_value = FROM }
			}
			add_event_chain_counter = {
				event_chain = "abyssal_invasion_chain"
				counter = "abyssal_engagement_victories_others"
				amount = 1
			}
		}
	}
}

country_event = {
	id = abyssalsecrets.369
	hide_window = yes

	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		if = {
			limit = { 
				AND = {
					has_completed_event_chain_counter = {
						event_chain = "abyssal_invasion_chain" 
						counter = "abyssal_engagement_victories_us" 
					}
					NOT = { has_country_flag = abyssal_host_solution_found }
				}
			}
			set_country_flag = abyssal_host_solution_found
			if = {
				limit = {
					AND = {
						NOT = { has_special_project = ABYSSALSECRETS_ENDGAME_1 } 
						NOT = { has_country_flag = abyssal_secrets_leader_event }
					}
				}
				country_event = { id = abyssalsecrets.371 }
				country_event = { id = abyssalsecrets.392 }
			}
		}
	}
}
	
fleet_event = {
	id = abyssalsecrets.370
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		owner = {
			AND = {
				is_ai = no
				has_special_project = ABYSSALSECRETS_ENDGAME_1
				NOT = { has_country_flag = final_convo_triggered }
				NOT = { has_country_flag = abyssal_secrets_leader_event }
				is_same_value = event_target:abyssal_host_enemy_country
			}
		}
		is_ship_class = shipclass_constructor
		From = {
			has_star_flag = abyssal_secrets_blackhole
		}
	}
	
	immediate = {
		owner = { 
			country_event = { id = abyssalsecrets.373 } 
			set_country_flag = final_convo_triggered
		}
	}
}

### Player figures out what to do, a rather simple maneourve

country_event = {
	id = abyssalsecrets.371
	title = abyssalsecrets.371.title
	desc = abyssalsecrets.371.desc
	picture = GFX_evt_black_hole
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	trigger = {
		exists = this
	}
	
	immediate = {
		# Spawns some extra fleets to prevent the player from immediately finishing the crisis
		event_target:abyssal_host_invader_country = {
			country_event = { id = abyssalsecrets.321 days = 15 }
		}
	}
	
	option = {
		name = abyssalsecrets.371.a
		custom_tooltip = abyssalsecrets.370.a.tooltip
		hidden_effect = {
			if = {
				limit = {
					AND = {
						NOT = { has_special_project = ABYSSALSECRETS_ENDGAME_1 } 
						NOT = { has_country_flag = abyssal_secrets_leader_event }
					}
				}
				event_target:abyss_black_hole_1 = {
					solar_system = {
						if = {
							limit = { any_ambient_object = { NOT = { has_ambient_object_flag = ss_weapon_dep_loc } } }
							create_ambient_object = {
								type = "ss_abyssal_secrets_deploy_location"
							}
							last_created_ambient_object = {
								set_location = {
									target = event_target:abyss_black_hole_1
									distance = 275
									angle = random
								}
								set_ambient_object_flag = ss_weapon_dep_loc
								enable_special_project = {
									name = "ABYSSALSECRETS_ENDGAME_1"
									location = this
									owner = root.owner
								}
							}
						}
					}
				}
			}
		}
	}
}

### Destroy the Blackhole. Goodbye Mr Father! The star is converted to a brown dwarf (pc_t_star) and all planets are destroyed
### All fleets and megastructures in system destroyed, abyssal host fleets and countries erased. 

country_event = {
	id = abyssalsecrets.372
	title = abyssalsecrets.372.title
	desc = abyssalsecrets.372.desc
	picture = GFX_evt_black_hole
	show_sound = event_activating_unknown_technology

	is_triggered_only = yes
	
	immediate = {
		remove_global_flag = abyssal_invasion_ongoing
		event_target:abyss_black_hole_1 = {
			solar_system = {
				every_system_ambient_object = {
					destroy_ambient_object = this
				}
				every_fleet_in_system = {
					destroy_fleet = this
				}
				remove_star_flag = abyssal_secrets_blackhole
				every_system_planet = {
					if = {
						limit = {
							NOR = {
								is_planet_class = pc_ringworld_habitable
								is_planet_class = pc_habitat
								is_star = yes
							}
						}
						change_pc = pc_shattered
						if = {
							limit = { has_owner = yes }
							destroy_colony = yes
						}
						add_modifier = {
							modifier = abyssalsecrets_shattered
							days = -1
						}
					}
					else_if = {
						limit = { is_star = yes }
						change_pc = pc_t_star
						set_name = NAME_abyss_former_black_hole
					}
					else_if = {
						limit = { is_planet_class = pc_ringworld_habitable }
						change_pc = pc_ringworld_habitable_damaged
						reset_planet = yes
					}
					else = {
						remove_planet = yes
					}
					every_deposit = {
						remove_deposit = yes
					}
				}
				set_star_class = sc_t 
				create_ambient_object = {
					type = "star_explosion"
					play_animation_once = yes
					location = event_target:abyss_black_hole_1
				}
				every_system_megastructure = {
					remove_megastructure = yes
				}
			}
		}
		event_target:abyssal_host_invader_country = {
			every_owned_fleet = {
				destroy_fleet = this
			}
			destroy_country = yes
		}
		clear_global_event_target = abyssal_host_invader_country
		if = {
			limit = {
				exists = event_target:abyssal_host_envoy
			}
			event_target:abyssal_host_envoy = {
				every_owned_fleet = {
					destroy_fleet = this
				}
				destroy_country = yes
			}
			clear_global_event_target = abyssal_host_envoy
		}
		every_system = {
			limit = {
				is_star_class = sc_ss_abyss
			}
			every_system_planet = {
				limit = {
					is_star = yes
				}
				change_pc = pc_neutron_star
				set_name = NAME_abyss_neutron_star
			}
			set_star_class = sc_neutron_star 
		}
		set_global_flag = abyssal_secrets_ended
		clear_global_event_target = system_abyss_black_hole_1
		clear_global_event_target = system_abyss_black_hole_2
		clear_global_event_target = system_abyss_black_hole_3
		clear_global_event_target = abyss_black_hole_1
		clear_global_event_target = abyss_black_hole_2
		clear_global_event_target = abyss_black_hole_3
		every_country = {
			limit = { is_country_type = default }
			end_event_chain = "abyssal_invasion_chain"
		}
		every_country = {
			limit = {
				AND = {
					is_ai = no 
					NOT = { has_country_flag = abyssal_secrets_leader_event }
				}
			}
			country_event = { id = abyssalsecrets.385 }
		}
		if = {
			limit = {
				any_playable_country = {
					has_country_flag = abyssal_secrets_leader_event
				}
			}
			random_playable_country = {
				limit = {
					has_country_flag = abyssal_secrets_leader_event
				}
				create_leader = {
					class = governor
					name = random
					species = this.owner_main_species
					skill = 2
					set_age = 47
					traits = { 
						trait = leader_trait_architectural_interest
						trait = leader_trait_intellectual
					}
				}
				set_heir = last_created_leader
				ruler = {
					kill_leader = { show_notification = yes }
				}
				if = {
					limit = {
						has_event_chain = ss_father_objectives_chain
					}
					end_event_chain = ss_father_objectives_chain
				}
				country_event = { id = abyssalsecrets.391 }
			}
		}
		if = {
			limit = {
				exists = event_target:ss_FE_building_loc
			}
			event_target:ss_FE_building_loc = {
				if = {
					limit = {
						has_building = building_ss_abyss_reality_constrictor
					}
					remove_building = building_ss_abyss_reality_constrictor
				}
			}
		}
	}
	
	option = {
		name = abyssalsecrets.372.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.380 days = 15 random = 15 }
		}
	}
}

### The father figures out what you are doing and tries to talk you out of it. Gets a little desperate. Has a small convo.

country_event = {
	id = abyssalsecrets.373
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.373.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.373.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.374 }
		}
	}
	option = {
		name = abyssalsecrets.373.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.375 }
		}
	}
}

country_event = {
	id = abyssalsecrets.374
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.373.1.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.373.1.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.376 }
		}
	}
}

country_event = {
	id = abyssalsecrets.375
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.373.2.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.373.2.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.376 }
		}
	}
}

country_event = {
	id = abyssalsecrets.376
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.373.1.1.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.373.1.1.a
		response_text = abyssalsecrets.373.1.1.a.response
		hidden_effect = {
			set_country_flag = abyssal_father_killed
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.378 days = 35 }
			country_event = { id = abyssalsecrets.392 }
		}
	}
	
	option = {
		name = abyssalsecrets.373.1.1.b
		hidden_effect = {
			country_event = { id = abyssalsecrets.377 }
			country_event = { id = abyssalsecrets.392 }
		}
	}
}

country_event = {
	id = abyssalsecrets.377
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.373.1.1.2.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.373.1.1.a
		response_text = abyssalsecrets.373.1.1.a.response
		hidden_effect = {
			set_country_flag = abyssal_father_killed
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.378 days = 35 }
			country_event = { id = abyssalsecrets.392 }
		}
	}
	
	option = {
		name = abyssalsecrets.373.1.1.2.a
		hidden_effect = {
			set_country_flag = abyssal_father_deal
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.379 days = 35 }
			country_event = { id = abyssalsecrets.392 }
		}
	}
	
	option = {
		name = abyssalsecrets.373.1.1.2.b
		response_text = abyssalsecrets.373.1.1.2.b.response
		is_dialog_only = yes
	}
}

### The Father turns a few stars into black holes and spawns extra host fleets in the rest of the galaxy (outside The Eye)

country_event = {
	id = abyssalsecrets.378
	title = abyssalsecrets.378.title
	desc = abyssalsecrets.378.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	immediate = {
		while = {
			count = 2
			random_system = {
				limit = {
					AND = {
						NOT = { is_star_class = sc_ss_abyss } 
						distance = { source = root.capital_scope min_jumps > 10 type = hyperlane }
						NOT = { is_owned_by = root }
					} 
				}
				set_star_flag = abyssal_secrets_blackhole
				save_global_event_target_as = system_abyss_black_hole_2
				set_star_class = sc_ss_abyss
				every_system_planet = {
					limit = { is_star = yes }
					change_pc = pc_ss_abyssal_black_hole
				}
				random_system_planet = {
					limit = { is_star = yes }
					event_target:abyssal_host_invader_country = {
						create_fleet = {
							name = "NAME_abyssal_host_dreadnought_name"
							settings = {
								spawn_debris = no
								is_boss = no
							}			
							effect = {
								set_owner = event_target:abyssal_host_invader_country
								while = {
									count = 5
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_pulsar_hardmode"
											design = "NAME_abyssal_host_pulsar_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_pulsar"
											design = "NAME_abyssal_host_pulsar"
										}
									}
								}
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_scourer_hardmode"
											design = "NAME_abyssal_host_scourer_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_scourer"
											design = "NAME_abyssal_host_scourer"
										}
									}
								}
								while = {
									count = 20
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_lance_hardmode"
											design = "NAME_abyssal_host_lance_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_lance"
											design = "NAME_abyssal_host_lance"
										}
									}
								}
								set_location = prevprev
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = return_point
								set_aggro_range = 500
								set_fleet_flag = abyssal_host_invader_fleet
								set_fleet_bombardment_stance = armageddon
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									add_modifier = {
										modifier = ss_crisis_abyss_hardmode_fleet
										days = -1
									}
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
							}
						}
						create_fleet = {
							name = "NAME_abyssal_host_reclaimer_name"
							settings = {
								spawn_debris = no
								is_boss = no
							}			
							effect = {
								set_owner = event_target:abyssal_host_invader_country
								while = {
									count = 15
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_scourer_hardmode"
											design = "NAME_abyssal_host_scourer_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_scourer"
											design = "NAME_abyssal_host_scourer"
										}
									}
								}
								while = {
									count = 15
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_lance_hardmode"
											design = "NAME_abyssal_host_lance_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_lance"
											design = "NAME_abyssal_host_lance"
										}
									}
								}
								set_location = prevprev
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = return_point
								set_aggro_range = 500
								set_fleet_flag = abyssal_host_invader_fleet
								set_fleet_bombardment_stance = armageddon
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									add_modifier = {
										modifier = ss_crisis_abyss_hardmode_fleet
										days = -1
									}
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
							}
						}
						create_fleet = {
							name = "NAME_abyssal_host_reclaimer_name"
							settings = {
								spawn_debris = no
								is_boss = no
							}			
							effect = {
								set_owner = event_target:abyssal_host_invader_country
								while = {
									count = 15
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_scourer_hardmode"
											design = "NAME_abyssal_host_scourer_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_scourer"
											design = "NAME_abyssal_host_scourer"
										}
									}
								}
								while = {
									count = 15
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_lance_hardmode"
											design = "NAME_abyssal_host_lance_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_lance"
											design = "NAME_abyssal_host_lance"
										}
									}
								}
								set_location = prevprev
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = return_point
								set_aggro_range = 500
								set_fleet_flag = abyssal_host_invader_fleet
								set_fleet_bombardment_stance = indiscriminate
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									add_modifier = {
										modifier = ss_crisis_abyss_hardmode_fleet
										days = -1
									}
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
							}
						}
					}
				}
				every_system_planet = {
					add_modifier = {
						modifier = abyssalsecrets_dark_world
						days = -1
					}
				}
			}
		}
	}
	
	option = {
		name = abyssalsecrets.378.a
	}
}

# Alternate End in case you accept the fathers plea for peace.
country_event = {
	id = abyssalsecrets.379
	title = abyssalsecrets.379.title
	desc = abyssalsecrets.379.desc
	picture = GFX_evt_black_hole
	show_sound = event_activating_unknown_technology

	is_triggered_only = yes
	
	immediate = {
		remove_global_flag = abyssal_invasion_ongoing
		event_target:abyss_black_hole_1 = {
			solar_system = {
				every_system_ambient_object = {
					limit = { has_ambient_object_flag = ss_weapon_dep_loc }
					destroy_ambient_object = this
				}
				remove_star_flag = abyssal_secrets_blackhole
			}
		}
		event_target:abyssal_host_invader_country = {
			every_owned_fleet = {
				destroy_fleet = this
			}
			destroy_country = yes
		}
		clear_global_event_target = abyssal_host_invader_country
		if = {
			limit = {
				exists = event_target:abyssal_host_envoy
			}
			event_target:abyssal_host_envoy = {
				every_owned_fleet = {
					destroy_fleet = this
				}
				destroy_country = yes
			}
			clear_global_event_target = abyssal_host_envoy
		}
		every_system = {
			limit = {
				AND = {
					is_star_class = sc_ss_abyss
					NOT = { is_same_value = event_target:system_abyss_black_hole_1 }
				}
			}
			every_system_planet = {
				limit = {
					is_star = yes
				}
				change_pc = pc_neutron_star
				set_name = NAME_abyss_neutron_star
			}
			set_star_class = sc_neutron_star 
		}
		set_global_flag = abyssal_secrets_ended
		clear_global_event_target = system_abyss_black_hole_1
		clear_global_event_target = system_abyss_black_hole_2
		clear_global_event_target = system_abyss_black_hole_3
		clear_global_event_target = abyss_black_hole_1
		clear_global_event_target = abyss_black_hole_2
		clear_global_event_target = abyss_black_hole_3
		every_country = {
			end_event_chain = "abyssal_invasion_chain"
			if = {
				limit = { has_special_project = ABYSSALSECRETS_ENDGAME_1 }
				abort_special_project = { type = ABYSSALSECRETS_ENDGAME_1 }
			}
		}
		every_country = {
			limit = { has_event_chain = abyssal_endgame_chain  }
			end_event_chain = "abyssal_endgame_chain"
		}
		if = {
			limit = {
				any_playable_country = {
					has_country_flag = abyssal_secrets_leader_event
				}
			}
			random_playable_country = {
				limit = {
					has_country_flag = abyssal_secrets_leader_event
				}
				create_leader = {
					class = governor
					name = random
					species = root.owner_main_species
					skill = 2
					set_age = 47
					traits = { 
						trait = leader_trait_architectural_interest
						trait = leader_trait_intellectual
					}
				}
				set_heir = last_created_leader
				ruler = {
					kill_leader = { show_notification = yes }
				}
				if = {
					limit = {
						has_event_chain = ss_father_objectives_chain
					}
					end_event_chain = ss_father_objectives_chain
				}
				country_event = { id = abyssalsecrets.391 }
			}
		}
		if = {
			limit = {
				exists = event_target:ss_FE_building_loc
			}
			event_target:ss_FE_building_loc = {
				if = {
					limit = {
						has_building = building_ss_abyss_reality_constrictor
					}
					remove_building = building_ss_abyss_reality_constrictor
				}
			}
		}
	}
	
	option = {
		name = abyssalsecrets.379.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.380 days = 175 random = 50 }
			country_event = { id = abyssalsecrets.390 days = 50 random = 50 }
		}
	}
}

### The Aftermath
### If the Father is destroyed, a nearby system is revealed. Contains a blackhole and one doomed world. Contains some research projects.

### Abyssal Father shows up as a governor, or doesn't (you are given token modifier for 5 years instead).

country_event = {
	id = abyssalsecrets.380
	title = abyssalsecrets.380.title
	picture = GFX_evt_alien_propaganda
	show_sound = event_celebration

	is_triggered_only = yes
	
	desc = {
		text = abyssalsecrets.380.desc_01
		trigger = {
			has_country_flag = abyssal_father_deal
		}
	}
	
	desc = {
		text = abyssalsecrets.380.desc_02
		trigger = {
			NOT = { has_country_flag = abyssal_father_deal }
		}
	}
	
	immediate = {
		if = {
			limit = { has_country_flag = abyssal_father_deal }
			create_leader = {
				class = governor
				species = root.owner_species
				name = "NAME_abyssal_father_deal_leader"
				gender = male
				set_age = 32
				skill = 10
				event_leader = yes
				traits = {
					trait = leader_trait_ss_ruler_the_eye_governor
				}
				effect = {
					set_leader_flag = ss_retired_father_leader
				}
			}
		}
	}
	
	option = {
		name = abyssalsecrets.380.a
		custom_tooltip = abyssalsecrets.380.a.tooltip
		trigger = {
			has_country_flag = abyssal_father_deal
		}
	}
	
	option = {
		name = abyssalsecrets.380.b
		trigger = {
			NOT = { has_country_flag = abyssal_father_deal }
		}
		add_modifier = {
			modifier = abyssalsecrets_its_over
			days = 1800
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.381 days = 100 random = 50 }
		}
	}
}

### Spawn system, point player to it.

country_event = {
	id = abyssalsecrets.381
	title = abyssalsecrets.381.title
	desc = abyssalsecrets.381.desc
	picture = GFX_evt_binary_stars
	show_sound = event_mystic_reveal
	location = event_target:abyssal_father_home_system

	is_triggered_only = yes
	
	immediate = {
		random_system_within_border = {
			spawn_system = {
				min_distance = 10
				max_distance = 30
				max_jumps = 0
				initializer = "abyssal_father_system"
			}
		}
		random_system = {
			limit = {
				has_star_flag = abyssal_father_home_system
			}
			save_event_target_as = abyssal_father_home_system
		} 
	}
	
	option = {
		name = abyssalsecrets.381.a
		hidden_effect = {
			country_event = { id = abyssalsecrets.390 days = 50 random = 50 }
		}
	}
}

### Homeworld Event

ship_event = {
	id = abyssalsecrets.382
	title = abyssalsecrets.382.title
	desc = abyssalsecrets.382.desc
	picture = GFX_evt_black_hole
	show_sound = event_ghost_town

	is_triggered_only = yes
	
	immediate = {
		owner = { set_country_flag = ss_father_home_system_spawned }
		owner = { set_timed_country_flag = { flag = ss_relic_get_cd days = 300 } }
	}
	
	option = {
		name = abyssalsecrets.382.a
	}
}

### The gravestone. (will you shed a tear you terrible monster? Will you?)

ship_event = {
	id = abyssalsecrets.383
	title = abyssalsecrets.383.title
	desc = abyssalsecrets.383.desc
	picture = GFX_evt_cold_barren
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.383.a
	}
}

### Tells Everyone crisis is over

country_event = {
	id = abyssalsecrets.385
	title = abyssalsecrets.385.title
	desc = abyssalsecrets.385.desc
	picture = GFX_evt_black_hole
	show_sound = event_celebration

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.385.a
		add_modifier = {
			modifier = abyssalsecrets_its_over
			days = 1800
		}
	}
}

country_event = {
	id = abyssalsecrets.390
	title = TRANSMISSION
	diplomatic = yes
	force_open = yes
	
	desc = {
		text = abyssalsecrets.390.desc_01
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_spiritualist
			}
		}
	}
	desc = {
		text = abyssalsecrets.390.desc_02
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_materialist
			}
		}
	}
	desc = {
		text = abyssalsecrets.390.desc_03
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophobe
			}
		}
	}
	desc = {
		text = abyssalsecrets.390.desc_04
		trigger = { 
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	picture_event_data = {
		portrait = event_target:ss_abyss_fallen_empire_comm
		planet_background = event_target:ss_abyss_fallen_empire_comm
		graphical_culture = event_target:ss_abyss_fallen_empire_comm
		city_level = event_target:ss_abyss_fallen_empire_comm
		room = event_target:ss_abyss_fallen_empire_comm.ruler
	}
	option = {
		name = abyssalsecrets.390.a
		response_text = abyssalsecrets.390.a.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.390.b
		response_text = abyssalsecrets.390.b.response
		is_dialog_only = yes
	}
	
	option = {
		name = abyssalsecrets.390.c
	}
}

### In case crisis is ended and pact player exists, tell them what has happened.

country_event = {
	id = abyssalsecrets.391
	title = abyssalsecrets.391.title
	desc = "abyssalsecrets.391.desc"
	picture = GFX_evt_city_ruins
	show_sound = event_ghost_town
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.391.a
		add_modifier = {
			modifier = ss_father_is_dead
			days = 3650
		}
		set_timed_country_flag = { flag = ss_death_benefit_cd days = 1000 }
	}
}

country_event = {
	id = abyssalsecrets.392
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { NOT = { has_global_flag = ss_abyss_defence_fleet } }
			if = {
				limit = { NOT = { exists = event_target:abyssal_host_envoy } }
				create_country = {
					name = "NAME_abyssal_host_envoy"
					type = abyssal_host_type
					name_list = "Abyssal_Host"
					species = event_target:abyssal_host_species
					flag = {
						icon = {
							category = "zoological"
							file = "flag_zoological_23.dds"
						}
						background= {
							category = "backgrounds"
							file = "00_solid.dds"
						}
						colors={
							"red"
							"dark_grey"
							"red"
							"red"
						}
					}
					effect = {
						set_faction_hostility = {
							target = event_target:abyssal_host_invader_country
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
						set_country_flag = abyssal_envoys
						every_country = {
							limit = {
								NOT = { is_same_value = root }
							}
							add_opinion_modifier = {
								who = root
								modifier = opinion_abyssal_threats
							}
						}
					}
				}
			}
			last_created_country = {
				establish_communications_no_message = root
				save_global_event_target_as = abyssal_host_envoy
			}
			establish_communications_no_message = event_target:abyssal_host_envoy
			
			create_fleet = {
				name = "NAME_abyssal_host_envoy_fleet"
				settings = {
					spawn_debris = no
					is_boss = no
				}			
				effect = {
					set_owner = event_target:abyssal_host_envoy
					while = {
						count = 20
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_scourer_hardmode"
								design = "NAME_abyssal_host_scourer_hardmode"
							}

						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_scourer"
								design = "NAME_abyssal_host_scourer"
							}
						}
					}
					while = {
						count = 10
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_lance_hardmode"
								design = "NAME_abyssal_host_lance_hardmode"
							}

						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_lance"
								design = "NAME_abyssal_host_lance"
							}
						}
					}
					while = {
						count = 10
						if = {
							limit = { has_global_flag = ss_crisis_hardmode }
							create_ship = {
								name = "NAME_abyssal_host_pulsar_hardmode"
								design = "NAME_abyssal_host_pulsar_hardmode"
							}

						}
						else = {
							create_ship = {
								name = "NAME_abyssal_host_pulsar"
								design = "NAME_abyssal_host_pulsar"
							}
						}
					}
					set_location = event_target:abyss_black_hole_1
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 1000
					set_fleet_bombardment_stance = armageddon
					set_fleet_flag = abyssal_host_envoy_fleet
					if = {
						limit = { has_global_flag = ss_crisis_hardmode }
						add_modifier = {
							modifier = ss_crisis_abyss_hardmode_fleet
							days = -1
						}
					}
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
						add_modifier = {
							modifier = ss_crisis_abyss_X_multiplier
							days = -1
						}
					}
					add_modifier = {
						modifier = ss_crisis_abyss_diff_multiplier
						multiplier = event_target:global_event_country.ss_AS_strength
						days = -1
					}
				}
			}
			set_global_flag = ss_abyss_defence_fleet
		}
	}
}

######################
# Abyssal Host Comms #
######################

country_event = {
	id = abyssalsecrets.400
	title = "abyssalsecrets.400.name"
	
	desc = {
		text = abyssalsecrets.400.desc_01
	}
	desc = {
		text = abyssalsecrets.400.desc_02
	}
	desc = {
		text = abyssalsecrets.400.desc_03
		trigger = {
			OR = {
				has_trait = trait_psionic
				has_trait = trait_latent_psionic 
				ruler = {
					has_trait = leader_trait_chosen
				}
			}
		}
	}
	desc = {
		text = abyssalsecrets.400.desc_04
		trigger = {
			OR = {
				has_civic = civic_hive_devouring_swarm
				has_civic = civic_fanatic_purifiers
				has_civic = civic_machine_terminator 
			}
		}
	}
	desc = {
		text = abyssalsecrets.400.desc_05
		exclusive_trigger = {
			has_country_flag = abyssal_host_friend
		}
	}

	diplomatic = yes
	force_open = yes
	custom_gui = "ss_ab_diplo_window"

	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_portrait
	}

	is_triggered_only = yes

	trigger = {
		FROM = { is_country_type = abyssal_host_invaders_type }
	}

	option = {
		name = abyssalsecrets.400.a
		response_text = abyssalsecrets.400.a.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.400.b
		response_text = abyssalsecrets.400.b.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.400.c
		response_text = abyssalsecrets.400.c.response
		is_dialog_only = yes
	}
	option = {
		name = abyssalsecrets.400.d
		response_text = abyssalsecrets.400.d.response
		is_dialog_only = yes
		trigger = {
			NOT = { has_country_flag = abyssal_host_friend }
		}
	}
	option = {
		name = abyssalsecrets.400.e
		trigger = {
			has_country_flag = abyssal_host_friend
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.363 }
		}
	}
	option = {
		name = abyssalsecrets.400.f
	}
}

###############
# POST EVENTS #
###############

### Post events in case your DESTROY the Father:

# Gives player the Heart of Creation:
country_event = {
	id = abyssalsecrets.410
	title = abyssalsecrets.410.title
	desc = abyssalsecrets.410.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	trigger = {
		AND = {
			has_global_flag = abyssal_secrets_ended
			has_country_flag = ss_father_home_system_spawned
			NOT = { has_country_flag = ss_relic_get_cd }
			NOT = { has_country_flag = ss_relic_found }
		}
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.410.a
		add_relic = r_heart_of_creation 
	}
	
	after = {
		hidden_effect = {
			set_country_flag = ss_relic_found
		}
	}
}

### If player signed pact, but Father died, they eventually get a bunch of goodies:

country_event = {
	id = abyssalsecrets.420
	title = abyssalsecrets.420.title
	desc = abyssalsecrets.420.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	trigger = {
		AND = {
			has_country_flag = abyssal_secrets_leader_event
			has_global_flag = abyssal_secrets_ended
			NOT = { has_country_flag = ss_death_benefit_cd }
			NOT = { has_country_flag = ss_death_benefit }
		}
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.420.a
		add_modifier = {
			modifier = ss_father_death_benefit
			days = -1
		}
	}
	
	after = {
		hidden_effect = {
			set_country_flag = ss_death_benefit
		}
	}
}

### Athair comes to the players rescue if something bad is happening:

planet_event = {
	id = abyssalsecrets.430
	hide_window = yes
	
	trigger = {
		AND = {
			has_global_flag = abyssal_secrets_ended
			owner = { is_same_value = event_target:abyssal_host_enemy_country }
			exists = sector.sector_capital.leader
		}
	}

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				AND = {
					sector.sector_capital = { leader = { has_leader_flag = ss_retired_father_leader } }
					owner = { NOT = { has_country_flag = ss_father_protection_cd } }
				}
			}
			planet_event = { id = abyssalsecrets.431 }
		}
	}
}

planet_event = {
	id = abyssalsecrets.431
	title = abyssalsecrets.431.title
	desc = abyssalsecrets.431.desc
	picture = GFX_evt_fleet_from_surface
	show_sound = event_mystic_reveal
	location = this
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
		owner = { set_timed_country_flag = { flag = ss_father_protection_cd days = 900 } }
	}
	
	option = {
		name = abyssalsecrets.431.a
		add_modifier = {
			modifier = ss_father_protection
			days = 350
		}
	}
}

# Event that determines when the endgame process should start.
country_event = {
	id = abyssalsecrets.499
	hide_window = yes
	
	trigger = {
		exists = this
	}

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				has_country_flag = abyssal_secrets_leader_event
			}
			if = {
				limit = {
					NOT = { has_global_flag = ss_endgame_timer_1 }
				}
				country_event = { id = abyssalsecrets.500 days = 30 }
			}
			else = {
				country_event = { id = abyssalsecrets.499 days = 200 }
			}
		}
		else = {
			if = {
				limit = {
					NOT = { has_global_flag = ss_endgame_timer_2 }
				}
				country_event = { id = abyssalsecrets.500 days = 30 }
			}
			else = {
				country_event = { id = abyssalsecrets.499 days = 200 }
			}
		}
	}
}

# Beginning of the end; FE builds reality constrictor, stars start randomly collapsing.
country_event = {
	id = abyssalsecrets.500
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		#Awakens the enemy FE, builds the reality constrictor and gives non-pact players a warning if they still exist.
		if = {
			limit = {
				exists = event_target:ss_abyss_fallen_empire_comm
			}
			event_target:ss_abyss_fallen_empire_comm = {
				### AWAKEN FE (prevent custom FEs from being forcebly awakened)
				if = {
					limit = {
						OR = {
							has_country_flag = fallen_empire_1
							has_country_flag = fallen_empire_2
							has_country_flag = fallen_empire_3
							has_country_flag = fallen_empire_4
						}
					}
					country_event = { id = abyssalsecrets.560 days = 300 random = 150 }
				}
				random_owned_planet = {
					limit = {
						free_building_slots > 0
					}
					add_building = building_ss_abyss_reality_constrictor
					save_global_event_target_as = ss_FE_building_loc
					set_planet_flag = FE_reality_building_loc
				}
			}
			### Establish communications with FE
			every_country = {
				limit = {
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					NOT = { has_communications = root }
				}

				establish_communications_no_message = root
				root = { save_event_target_as = contact_empire }
				#country_event = { id = action.1 }
			}
			every_country = {
				limit = {
					AND = {
						is_ai = no
						has_communications = event_target:ss_abyss_fallen_empire_comm
					}
				}
				country_event = { id = abyssalsecrets.502 days = 50 } # warns other real players about what is happening
			}
		}
		# If player accepted pact, give them target to destroy reality constrictor
		if = {
			limit = {
				has_country_flag = abyssal_secrets_leader_event
			}
			country_event = { id = abyssalsecrets.501 days = 150 } # Father contacts player, new event chain created.
			#country_event = { id = abyssalsecrets.564 days = 700 random = 300 } # Grants ability to turn stars into abyssal black holes.
			#country_event = { id = abyssalsecrets.520 days = 300 } #Father tells pact player to defend The Eye
		}
		country_event = { id = abyssalsecrets.505 days = 5 } #Checker event; is building destroyed?
		# BAD EVENTS GO HERE
		# More abyssal host ships spawn
		#event_target:abyssal_host_invader_country = {
		#	set_country_flag = host_push_mode
		#}
		set_variable = { which = num_systems value = 0 }
		every_system = {
			root = {
				change_variable = { which = num_systems value = 1 }
			}
		}
		set_variable = { which = num_bh_systems value = 0 }
		every_system = {
			limit = {
				is_star_class = sc_ss_abyss
			}
			root = {
				change_variable = { which = num_bh_systems value = 1 }
			}
		}
		if = {
			limit = { NOT = { any_ambient_object = { has_ambient_object_flag = ss_weapon_dep_loc } } }
			create_ambient_object = {
				type = "ss_abyssal_secrets_deploy_location"
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:abyss_black_hole_1
					distance = 275
					angle = random
				}
				set_ambient_object_flag = ss_weapon_dep_loc
			}
		}
		every_playable_country = {
			# Warn ordinary empires something bad will start happening, gives them option to end even if kill count unmet.
			country_event = { id = abyssalsecrets.507 }
			# Speed Modifier
			# country_event = { id = abyssalsecrets.525 days = 90 } #Applies speed modifier
			# Blackholes start collapsing
			country_event = { id = abyssalsecrets.522 days = 200 } #Alerts blackholes are doing something bad
			# Planets become slightly damaged over time
			if = {
				limit = { has_global_flag = ss_crisis_hardmode }
				country_event = { id = abyssalsecrets.527 days = 100 } #Alerts players planets will gain devastation
			}
		}
		set_variable = { which = temp_num_systems value = this.num_systems }
		divide_variable = { which = temp_num_systems value = 400 }
		floor_variable = temp_num_systems
		if = {
			limit = {
				check_variable = { which = temp_num_systems value < 1 }
			}
			set_variable = { which = temp_num_systems value = 1 }
		}
		while = {
			count = this.temp_num_systems
			country_event = { id = abyssalsecrets.523 days = 210 } #Loop that makes blackholes
		}
		# country_event = { id = abyssalsecrets.528 days = 300 } #Loop that adds devastation to planets
		# Adds more fancy graphics to The Eye
		event_target:system_abyss_black_hole_1 = {
			every_system_ambient_object = {
				limit = { NOT = { has_ambient_object_flag = ss_weapon_dep_loc } }
				destroy_ambient_object = this
			}
			star = {
				create_ambient_object = {
					type = "ss_grav_storm_1"
					location = this
				}
			}
		}
	}
}

# Main Objective to destroy FE.
country_event = {
	id = abyssalsecrets.501
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.501.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	trigger = {
		exists = event_target:ss_abyss_fallen_empire_comm
		has_global_flag = abyssal_invasion_ongoing
	}
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	immediate = {
		if = {
			limit = {
				NOT = { has_event_chain = ss_father_objectives_chain }
			}
			begin_event_chain = { 
				event_chain = ss_father_objectives_chain 
				target = this 
			}
		}
		create_point_of_interest = {
			id = father_obj_kill_FE
			name = father_obj_kill_FE
			desc = father_obj_kill_FE_desc
			event_chain = ss_father_objectives_chain
			location = event_target:ss_FE_building_loc
		}
		set_country_flag = ss_endgame_objective_given
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.501.a
		custom_tooltip = abyssalsecrets.501.a.tooltip
	}
}

country_event = {
	id = abyssalsecrets.502
	title = TRANSMISSION
	diplomatic = yes
	
	is_triggered_only = yes
	
	desc = {
		text = abyssalsecrets.502.desc_01
		trigger = {
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophile
			}
		}
	}
	
	desc = {
		text = abyssalsecrets.502.desc_02
		trigger = {
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_xenophobe
			}
		}
	}
	
	desc = {
		text = abyssalsecrets.502.desc_03
		trigger = {
			event_target:ss_abyss_fallen_empire_comm = {
				has_ethic = ethic_fanatic_spiritualist
			}
		}
	}
	
	desc = {
		text = abyssalsecrets.502.desc_04
		trigger = {
			event_target:abyssal_host_enemy_country = {
				has_country_flag = abyssal_host_friend
			}
		}
	}
	
	trigger = {
		exists = event_target:ss_abyss_fallen_empire_comm
	}
	
	picture_event_data = {
		portrait = event_target:ss_abyss_fallen_empire_comm
		planet_background = event_target:ss_abyss_fallen_empire_comm
		graphical_culture = event_target:ss_abyss_fallen_empire_comm
		city_level = event_target:ss_abyss_fallen_empire_comm
		room = event_target:ss_abyss_fallen_empire_comm.ruler
	}
	option = {
		name = abyssalsecrets.502.a
	}
}

# Tells pact-player to land armies or glass planet, activated in on_actions
fleet_event = {
	id = abyssalsecrets.503
	title = abyssalsecrets.503.title
	desc = abyssalsecrets.503.desc
	picture = GFX_evt_fleet_from_surface
	show_sound = event_ship_bridge
	
	trigger = {
		AND = {
			NOT = { owner = { has_country_flag = ss_fe_kill_obj_alerted } }
			owner = { has_country_flag = abyssal_secrets_leader_event }
			from = { is_scope_type = planet }
			from = { 
				AND = {
					has_building = building_ss_abyss_reality_constrictor
					owner = { is_same_value = event_target:ss_abyss_fallen_empire_comm }
					is_same_value = event_target:ss_FE_building_loc
				}
			}
		}
	}

	is_triggered_only = yes
	
	immediate = {
		owner = { set_country_flag = ss_fe_kill_obj_alerted }
	}
	
	option = {
		name = abyssalsecrets.503.a
	}
}

# Checks for when the Reality Constrictor is destroyed...
country_event = {
	id = abyssalsecrets.505
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invasion_ongoing
	}
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	immediate = {
		if = {
			limit = {
				NOT = { exists = event_target:ss_abyss_fallen_empire_comm }
			}
			every_country = {
				limit = { NOT = { is_ai = yes } }
				country_event = { id = abyssalsecrets.506 days = 45 }
			}
			set_global_flag = ss_fast_endgame
			end_event_chain = ss_father_objectives_chain
		}
		else_if = {
			limit = {
				AND = {
					event_target:ss_abyss_fallen_empire_comm = {
						any_owned_planet = {
							has_building = building_ss_abyss_reality_constrictor
						}
					}
					has_global_flag = abyssal_invasion_ongoing
				}
			}
			country_event = { id = abyssalsecrets.505 days = 45 }
		}
		else_if = {
			limit = {
				has_global_flag = abyssal_invasion_ongoing
			}
			every_country = {
				limit = { NOT = { is_ai = yes } }
				country_event = { id = abyssalsecrets.506 days = 45 }
			}
			set_global_flag = ss_fast_endgame
			end_event_chain = ss_father_objectives_chain
		}
	}
}


# If it is destroyed, tell people things are getting worse.
country_event = {
	id = abyssalsecrets.506
	title = "abyssalsecrets.visions"
	
	desc = {
		text = abyssalsecrets.506.desc_01
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
	
	desc = {
		text = abyssalsecrets.506.desc_02
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	trigger = {
	}
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}
	
	immediate = {
	}
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.506.a
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
	option = {
		name = abyssalsecrets.506.b
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
}

# Tells other empires something bad is coming in 10 years, instantly gives them project to finish if they don't have it already.
country_event = {
	id = abyssalsecrets.507
	title = abyssalsecrets.507.title
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	desc = {
		text = abyssalsecrets.507.desc_01
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
	
	desc = {
		text = abyssalsecrets.507.desc_02
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.507.a
		custom_tooltip = abyssalsecrets.370.a.tooltip
		hidden_effect = {
			if = {
				limit = {
					AND = {
						NOT = { has_special_project = ABYSSALSECRETS_ENDGAME_1 } 
						NOT = { has_country_flag = abyssal_secrets_leader_event }
					}
				}
				event_target:abyss_black_hole_1 = {
					solar_system = {
						random_system_ambient_object = {
							limit = { has_ambient_object_flag = ss_weapon_dep_loc }
							enable_special_project = {
								name = "ABYSSALSECRETS_ENDGAME_1"
								location = this
								owner = root.owner
							}
						}
					}
				}
				country_event = { id = abyssalsecrets.392 }
			}
		}
	}
}

country_event = {
	id = abyssalsecrets.520
	title = "abyssalsecrets.visions"
	desc = "abyssalsecrets.520.desc"
	
	diplomatic = yes
	custom_gui = "ss_ab_diplo_window"
	
	trigger = {
	}
	
	picture_event_data = {
		room = "abyssal_host_room"
		portrait = abyssal_host_father_portrait
	}

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.520.a
	}
}

### STARS ARE COLLAPSING AND WHEN THEY HAVE ALL COLLAPSED, BAD THINGS WILL HAPPEN!
country_event = {
	id = abyssalsecrets.522
	title = "abyssalsecrets.522.title"
	picture = GFX_evt_ss_the_heart
	show_sound = event_sensor_ping
	
	desc = {
		text = abyssalsecrets.522.desc_01
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
	
	desc = {
		text = abyssalsecrets.522.desc_02
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		begin_event_chain = { 
			event_chain = abyssal_endgame_chain
			target = this 
		}
		add_event_chain_counter = {
			event_chain = "abyssal_endgame_chain"
			counter = "ss_blackhole_conversions_max"
			amount = from.num_systems
		}
		add_event_chain_counter = {
			event_chain = "abyssal_endgame_chain"
			counter = "ss_blackhole_conversions"
			amount = from.num_bh_systems
		}
	}
	
	option = {
		name = abyssalsecrets.522.a
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	
	option = {
		name = abyssalsecrets.522.b
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
}

#Random systems turn into blackholes with emission nebulas TODO; add shockwave effect
country_event = {
	id = abyssalsecrets.523
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = abyssal_secrets_ended }
	}
	
	immediate = {
		if = {
			limit = { NOT = { has_global_flag = abyssal_secrets_ended } }
			every_country = {
				limit = {
					has_event_chain = "abyssal_endgame_chain"
				}
				add_event_chain_counter = {
					event_chain = "abyssal_endgame_chain"
					counter = "ss_blackhole_conversions"
					amount = 1
				}
			}
			random_system = {
				limit = {
					NOT = { is_star_class = sc_ss_abyss }
				}
				if = {
					limit = { has_owner = yes }
					if = {
						limit = { owner = { NOT = { has_country_flag = ss_collapse_alerted } } }
						save_event_target_as = ss_collapse_target
						owner = { country_event = { id = abyssalsecrets.524 } } #Alerter event
					}
				}
				set_timed_star_flag = { flag = ss_abyssal_shockwave days = 300 }
				set_star_flag = abyssal_secrets_blackhole
				if = {
					limit = { exists = starbase }
					starbase = { 
						starbase = { fleet = { destroy_fleet = this } }
					}
				}
				set_star_class = sc_ss_abyss
				every_system_planet = {
					if = {
						limit = { has_mining_station = yes }
						mining_station = { dismantle = yes }
					}
					if = {
						limit = { has_research_station = yes }
						research_station = { dismantle = yes }
					}
					if = {
						limit = { 
							is_star = yes 
							NOT = { is_planet_class = pc_ss_abyssal_black_hole }
						}
						change_pc = pc_ss_abyssal_black_hole
					}
				}
				every_fleet_in_system = {
					set_mia = mia_return_home
				}
				star = {
					create_ambient_object = {
						type = "ss_star_shockwave"
						play_animation_once = yes
						location = this
					}
				}
				star = {
					random_list = {
						10 = {
							create_ambient_object = {
								type = "rare_nebula_1"
								location = this
							}
							create_ambient_object = {
								type = "turbulent_nebula_1"
								location = this
							}
							create_ambient_object = {
								type = "nebula_L3_entity"
								location = this
							}
						}
						10 = {
							create_ambient_object = {
								type = "rare_nebula_2"
								location = this
							}
							create_ambient_object = {
								type = "turbulent_nebula_2"
								location = this
							}
							create_ambient_object = {
								type = "nebula_L4_entity"
								location = this
							}
						}
						10 = {
							create_ambient_object = {
								type = "turbulent_nebula_1"
								location = this
							}
							create_ambient_object = {
								type = "nebula_L8_entity"
								location = this
							}
						}
						10 = {
							create_ambient_object = {
								type = "turbulent_nebula_2"
								location = this
							}
							create_ambient_object = {
								type = "nebula_L10_entity"
								location = this
							}
						}
						10 = {
							create_ambient_object = {
								type = "turbulent_nebula_1"
								location = this
							}
							create_ambient_object = {
								type = "nebula_L6_entity"
								location = this
							}
						}
					}
				}
				every_system_planet = {
					limit = {
						NOT = { is_star = yes }
					}
					add_modifier = {
						modifier = abyssalsecrets_dark_world
						days = -1
					}
				}
				every_system_planet = {
					limit = {
						AND = {
							is_star = yes
							NOT = { is_planet_class = pc_ss_abyssal_black_hole }
						}
					}
					change_pc = pc_ss_abyssal_black_hole
				}
			}
			if = {
				limit = {
					AND = {
						has_global_flag = abyssal_invasion_ongoing
						has_global_flag = ss_fast_endgame
					}
				}
				if = {
					limit = { has_global_flag = ss_crisis_hardmode }
					country_event = { id = abyssalsecrets.523 days = 10 }
				}
				else = {
					country_event = { id = abyssalsecrets.523 days = 25 }
				}
			}
			else_if = {
				limit = {
					AND = {
						has_global_flag = abyssal_invasion_ongoing
						NOT = { has_global_flag = ss_fast_endgame }
					}
				}
				if = {
					limit = { has_global_flag = ss_crisis_hardmode }
					country_event = { id = abyssalsecrets.523 days = 40 }
				}
				else = {
					country_event = { id = abyssalsecrets.523 days = 200 }
				}
			}
			country_event = { id = abyssalsecrets.540 days = 15 }
		}
	}
}

# Tell player star has collapsed
country_event = {
	id = abyssalsecrets.524
	title = abyssalsecrets.524.name
	picture = GFX_evt_black_hole
	show_sound = event_sensor_ping
	location = event_target:ss_collapse_target
	
	desc = {
		text = abyssalsecrets.524.desc_01
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
	
	desc = {
		text = abyssalsecrets.524.desc_02
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.524.a
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	
	option = {
		name = abyssalsecrets.524.b
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
	
	after = {
		hidden_effect = {
			set_timed_country_flag = { flag = ss_collapse_alerted days = 200 }
		}
	}
}

#Tell player everything is going fast
country_event = {
	id = abyssalsecrets.525
	title = abyssalsecrets.525.name
	desc = abyssalsecrets.525.desc
	picture = GFX_evt_black_hole
	show_sound = event_sensor_ping
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.525.a
		add_modifier = {
			modifier = ss_reality_warping
			days = 300
		}
		hidden_effect = {
			country_event = { id = abyssalsecrets.526 } #Applies speed modifier
		}
	}
}

#Make everything actually go fast
country_event = {
	id = abyssalsecrets.526
	hide_window = yes
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				AND = {
					has_global_flag = abyssal_invasion_ongoing
					NOT = { has_modifier = ss_reality_warping }
				}
			}
			add_modifier = {
				modifier = ss_reality_warping
				days = 300
			}
		}
		country_event = { id = abyssalsecrets.526 days = 300 }
	}
}

#Tells planets are being damaged
country_event = {
	id = abyssalsecrets.527
	title = abyssalsecrets.527.name
	picture = GFX_evt_alien_city
	show_sound = event_ghost_town
	
	desc = {
		text = abyssalsecrets.527.desc_01
		trigger = {
			NOT = { has_country_flag = abyssal_father_deal }
		}
	}
	
	desc = {
		text = abyssalsecrets.527.desc_02
		trigger = {
			has_country_flag = abyssal_father_deal
		}
	}
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.527.a
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = abyssal_father_deal } }
				country_event = { id = abyssalsecrets.528 days = 10 }
			}
		}
	}
}

#Actually adds devastation.
country_event = {
	id = abyssalsecrets.528
	hide_window = yes
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				has_global_flag = abyssal_invasion_ongoing
			}
			every_owned_planet = {
				random_list = {
					25 = {
						add_planet_devastation = 8
					}
					75 = {}
				}
			}
			country_event = { id = abyssalsecrets.528 days = 50 }
		}
	}
}

### SHIP SPAWN PUSH MODE
country_event = {
	id = abyssalsecrets.530
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = { 
				is_star_class = sc_ss_abyss
			}
			star = {
				event_target:abyssal_host_invader_country = {
					country_event = { id = abyssalsecrets.323 days = 60 }
					while = {
						count = 3
						create_fleet = {
							name = "NAME_abyssal_host_reclaimer_name"
							settings = {
								spawn_debris = no
								is_boss = no
							}			
							effect = {
								set_owner = event_target:abyssal_host_invader_country
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_scourer_hardmode"
											design = "NAME_abyssal_host_scourer_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_scourer"
											design = "NAME_abyssal_host_scourer"
										}
									}
								}
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_lance_hardmode"
											design = "NAME_abyssal_host_lance_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_lance"
											design = "NAME_abyssal_host_lance"
										}
									}
								}
								while = {
									count = 5
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_pulsar_hardmode"
											design = "NAME_abyssal_host_pulsar_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_pulsar"
											design = "NAME_abyssal_host_pulsar"
										}
									}
								}
								set_location = PREVPREV
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = self
								set_aggro_range = 500
								set_fleet_flag = abyssal_host_invader_fleet
								set_fleet_bombardment_stance = armageddon
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									add_modifier = {
										modifier = ss_crisis_abyss_hardmode_fleet
										days = -1
									}
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
							}
						}
					}
				}
			}
		}
	}
}

### SHIP SPAWN REST MODE
country_event = {
	id = abyssalsecrets.531
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = { 
				is_star_class = sc_ss_abyss
			}
			star = {
				event_target:abyssal_host_invader_country = {
					while = {
						count = 2
						create_fleet = {
							name = "NAME_abyssal_host_reclaimer_name"
							settings = {
								spawn_debris = no
								is_boss = no
							}			
							effect = {
								set_owner = event_target:abyssal_host_invader_country
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_scourer_hardmode"
											design = "NAME_abyssal_host_scourer_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_scourer"
											design = "NAME_abyssal_host_scourer"
										}
									}
								}
								while = {
									count = 10
									if = {
										limit = { has_global_flag = ss_crisis_hardmode }
										create_ship = {
											name = "NAME_abyssal_host_lance_hardmode"
											design = "NAME_abyssal_host_lance_hardmode"
										}
									}
									else = {
										create_ship = {
											name = "NAME_abyssal_host_lance"
											design = "NAME_abyssal_host_lance"
										}
									}
								}
								set_location = PREVPREV
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = self
								set_aggro_range = 500
								set_fleet_flag = abyssal_host_invader_fleet
								set_fleet_bombardment_stance = armageddon
								if = {
									limit = { has_global_flag = ss_crisis_hardmode }
									add_modifier = {
										modifier = ss_crisis_abyss_hardmode_fleet
										days = -1
									}
								}
								if = {
									limit = { event_target:global_event_country = { check_variable = { which = ss_AS_strength value >= 15.00 } } }
									add_modifier = {
										modifier = ss_crisis_abyss_X_multiplier
										days = -1
									}
								}
								add_modifier = {
									modifier = ss_crisis_abyss_diff_multiplier
									multiplier = event_target:global_event_country.ss_AS_strength
									days = -1
								}
							}
						}
					}
				}
			}
		}
	}
}

# Checker event: when all stars are black-holes, end the universe.
country_event = {
	id = abyssalsecrets.540
	hide_window = yes
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
		set_variable = { which = bh_num_systems value = 0 }
		every_system = {
			limit = { 
				is_star_class = sc_ss_abyss
			}
			root = {
				change_variable = { which = bh_num_systems value = 1 }
			}
		}
		if = {
			limit = {
				check_variable = { which = num_systems value = root.bh_num_systems }
			}
			# END THE UNIVERSE
			every_playable_country = {
				limit = {
					AND = {
						NOT = { is_same_value = root }
						NOT = { has_global_flag = ss_end_initiated }
						is_ai = no
					}
				}
				set_global_flag = ss_end_initiated
				country_event = { id = abyssalsecrets.541 } 
			}
			country_event = { id = abyssalsecrets.542 days = 25 } 
		}
	}
}

country_event = {
	id = abyssalsecrets.541
	title = abyssalsecrets.541.name
	desc = abyssalsecrets.541.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = abyssalsecrets.541.a
	}
}

# END THE UNIVERSE, in the event a pact player exists, in which case they survive in utopia.

country_event = {
	id = abyssalsecrets.542
	title = abyssalsecrets.542.name
	desc = abyssalsecrets.542.desc
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	
	trigger = {
	}

	is_triggered_only = yes
	
	immediate = {
		# Give new heavenly colony.
		# Destroy all other countries
		remove_global_flag = abyssal_invasion_ongoing
		create_leader = {
			class = governor
			name = random
			species = this.owner_main_species
			skill = 2
			set_age = 47
			traits = { 
				trait = leader_trait_architectural_interest
				trait = leader_trait_intellectual
			}
		}
		set_heir = last_created_leader
		ruler = {
			kill_leader = { show_notification = yes }
		}
	}
	
	option = {
		name = abyssalsecrets.542.a
	}
	
	after = {
		hidden_effect = {
			set_update_modifiers_batch = begin
			every_country = {
				limit = {
					NOT = { has_country_flag = abyssal_secrets_leader_event }
				}
				destroy_country = yes
			}
			random_system = {
				limit = {
					any_system_planet = {
						has_owner = no
						is_colonizable = no
						is_star = no
						planet_size > 18
						planet_size < 26
					}
				}
				random_system_planet = {
					limit = {
						has_owner = no
						is_colonizable = no
						is_star = no
						planet_size > 18
						planet_size < 26
					}
					set_planet_flag = ss_elysium
					save_event_target_as = ss_elysium
					change_pc = pc_gaia
					reset_planet = yes
				}
			}
			event_target:ss_elysium = {
				create_colony = {
					owner = root
					#species = root.owner_species
					#ethos = root
				}
				set_name = "NAME_ss_elysium"
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_mining
				add_district = district_generator
				add_building = building_capital
				add_building = building_research_lab_1
				add_building = building_foundry_1
				add_building = building_factory_1
				while = {
					limit = {
						num_pops < 8
						free_housing > 0
					}
					create_pop = {
						species = root
					}
				}
			}
			# Then empty all other colonies
			every_system = {
				every_system_planet = {
					limit = {
						AND = {
							NOT = { is_same_value = event_target:ss_elysium }
							NOT = { has_planet_flag = ss_elysium }
							is_colony = yes
						}
					}
					destroy_colony = yes
				}
			}
			every_system = {
				random_list = {
					5 = { star = { change_pc = pc_a_star } set_star_class = sc_a }
					5 = { star = { change_pc = pc_b_star } set_star_class = sc_b }
					10 = { star = { change_pc = pc_f_star } set_star_class = sc_f }
					10 = { star = { change_pc = pc_g_star } set_star_class = sc_g }
					15 = { star = { change_pc = pc_k_star } set_star_class = sc_k }
					15 = { star = { change_pc = pc_m_star } set_star_class = sc_m }
				}
				every_system_planet = {
					if = {
						limit = {
							AND = {
								is_colonizable = yes
								is_artificial = no
								NOT = { is_same_value = event_target:ss_elysium }
								NOT = { has_planet_flag = ss_elysium }
							}
						}
						change_pc = pc_gaia
						reset_planet = yes
					}
					else_if = {
						limit = {
							is_artificial = yes
						}
						remove_planet = yes
					}
					else_if = {
						limit = {
							AND = {
								is_star = no
								NOR = {
									is_planet_class = pc_gas_giant
									is_planet_class = pc_molten
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
									is_planet_class = pc_toxic
									is_planet_class = pc_frozen
								}
								NOT = { is_same_value = event_target:ss_elysium }
								NOT = { has_planet_flag = ss_elysium }
							}
						}
						change_pc = { class = rl_unhabitable_planets }
						reset_planet = yes
						reroll_deposits = yes
					}
					prevent_anomaly = yes
				}
				every_system_planet = {
					limit = {
						exists = orbital_station
					}
					orbital_station = { dismantle = yes }
				}
				every_system_megastructure = {
					remove_megastructure = this
				}
				every_fleet_in_system = {
					destroy_fleet = this
				}
			}
			set_update_modifiers_batch = end
			if = {
				limit = {
					has_event_chain = ss_father_objectives_chain
				}
				end_event_chain = ss_father_objectives_chain
			}
			if = {
				limit = {
					has_event_chain = abyssal_invasion_chain
				}
				end_event_chain = abyssal_invasion_chain
			}
			if = {
				limit = {
					has_event_chain = abyssal_endgame_chain
				}
				end_event_chain = abyssal_endgame_chain
			}
		}
		win = yes
	}
}

# END THE UNIVERSE, if no pact players exist, everything just explodes, you lose!

country_event = {
	id = abyssalsecrets.543
	hide_window = yes
	
	trigger = {
	}

	is_triggered_only = yes
	fire_only_once = yes
	
	immediate = {
		# Destroy all other countries
		remove_global_flag = abyssal_invasion_ongoing
		set_update_modifiers_batch = begin
		every_country = {
			destroy_country = yes
		}
		# Then empty all other colonies
		every_system = {
			every_system_planet = {
				limit = {
					AND = {
						NOT = { is_same_value = event_target:ss_elysium }
						NOT = { has_planet_flag = ss_elysium }
						is_colony = yes
					}
				}
				destroy_colony = yes
			}
		}
		every_system = {
			random_list = {
				5 = { star = { change_pc = pc_a_star } set_star_class = sc_a }
				5 = { star = { change_pc = pc_b_star } set_star_class = sc_b }
				10 = { star = { change_pc = pc_f_star } set_star_class = sc_f }
				10 = { star = { change_pc = pc_g_star } set_star_class = sc_g }
				15 = { star = { change_pc = pc_k_star } set_star_class = sc_k }
				15 = { star = { change_pc = pc_m_star } set_star_class = sc_m }
			}
			every_system_planet = {
				if = {
					limit = {
						AND = {
							is_colonizable = yes
							is_artificial = no
						}
					}
					change_pc = pc_gaia
					reset_planet = yes
				}
				else_if = {
					limit = {
						is_artificial = yes
					}
					remove_planet = yes
				}
				else_if = {
					limit = {
						AND = {
							is_star = no
							NOR = {
								is_planet_class = pc_gas_giant
								is_planet_class = pc_molten
								is_planet_class = pc_barren
								is_planet_class = pc_barren_cold
								is_planet_class = pc_toxic
								is_planet_class = pc_frozen
							}
							NOT = { is_same_value = event_target:ss_elysium }
							NOT = { has_planet_flag = ss_elysium }
						}
					}
					change_pc = { class = rl_unhabitable_planets }
					reset_planet = yes
					reroll_deposits = yes
				}
				prevent_anomaly = yes
			}
			every_system_planet = {
				limit = {
					exists = orbital_station
				}
				orbital_station = { dismantle = yes }
			}
			every_system_megastructure = {
				remove_megastructure = this
			}
			every_fleet_in_system = {
				destroy_fleet = this
			}
		}
		set_update_modifiers_batch = end
	}
}

### If somebody tries to end the crisis and the main player signed a pact, warn them it is about to end.

fleet_event = {
	id = abyssalsecrets.550
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		owner = {
			AND = {
				NOT = { has_country_flag = constructor_ending_warned }
				has_special_project = ABYSSALSECRETS_ENDGAME
			}
		}
		is_ship_class = shipclass_constructor
		From = {
			is_same_value = event_target:abyss_black_hole_1
		}
		any_playable_country = {
			AND = {
				is_same_value = event_target:abyssal_child
				has_country_flag = abyssal_secrets_leader_event
			}
		}
	}
	
	immediate = {
		random_playable_country = {
			limit = {
				AND = {
					is_same_value = event_target:abyssal_child
					has_country_flag = abyssal_secrets_leader_event
				}
			}
			set_timed_country_flag = { flag = constructor_ending_warned days = 100 }
			country_event = { id = abyssalsecrets.551 }
		}
	}
}

country_event = {
	id = abyssalsecrets.551
	title = abyssalsecrets.551.title
	desc = abyssalsecrets.551.desc
	picture = GFX_evt_black_hole
	show_sound = event_red_alert

	is_triggered_only = yes
	trigger = {}
	
	option = {
		name = abyssalsecrets.551.a
	}
}

### Custom code for awakening the FE:

country_event = {
	id = abyssalsecrets.560
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		if = {
			limit = {
				AND = {
					OR = {
						has_ethic = ethic_fanatic_materialist
						has_ethic = ethic_fanatic_xenophile
					}
					has_global_flag = abyssal_invasion_ongoing
				}
			}
			set_global_flag = guardians_of_the_galaxy_happened
			set_country_flag = guardians_of_the_galaxy
			country_event = { id = fallen_empires_awakening.3 }

			every_country = {
				limit = {
					is_country_type = default
				}
				random_list = {
					33 = { add_opinion_modifier = { who = root modifier = opinion_crisis_fighter } }
					33 = { add_opinion_modifier = { who = root modifier = opinion_crisis_fighter_small } }
					33 = { }
				}
			}

			# Notify
			every_country = {
				limit = {
					is_ai = no
				}
				country_event = { id = abyssalsecrets.561 }
			}
			observer_event = { id = observer.74 }
		}
		else_if = {
			limit = {
				OR = {
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_fanatic_xenophobe
					NOT = { has_global_flag = abyssal_invasion_ongoing }
				}
			}
			set_global_flag = sleepers_awake_happened

			country_event = { id = fallen_empires_awakening.3 }

			# Notify players
			every_country = {
				limit = {
					is_ai = no
				}
				country_event = { id = abyssalsecrets.562 }
			}
			observer_event = { id = observer.73 }

			# War in Heaven
			if = {
				limit = { host_has_dlc = "Leviathans Story Pack" }
				random_list = {
					40 = { # War in Heaven with Fallen Empire of opposing ethos
						random_country = {
							limit = {
								NOT = { is_same_value = root }
								is_country_type = fallen_empire
								NOT = { has_ethic = ethic_gestalt_consciousness }
								OR = {
									AND = {
										has_ethic = ethic_fanatic_xenophobe
										root = { has_ethic = ethic_fanatic_xenophile }
									}
									AND = {
										has_ethic = ethic_fanatic_xenophile
										root = { has_ethic = ethic_fanatic_xenophobe }
									}
									AND = {
										has_ethic = ethic_fanatic_spiritualist
										root = { has_ethic = ethic_fanatic_materialist }
									}
									AND = {
										has_ethic = ethic_fanatic_materialist
										root = { has_ethic = ethic_fanatic_spiritualist }
									}
								}
							}
							set_country_flag = sleepers_awake_ancient_rival
							set_timed_country_flag = { flag = timed_ancient_rival days = 3650 }
							set_timed_country_flag = { flag = ai_no_wars days = 3650 }
							root = { set_timed_country_flag = { flag = ai_no_wars days = 3650 } }
							every_country = {
								limit = { is_country_type = default }
								set_timed_country_flag = { flag = ai_no_wars days = 3650 }
							}
						}
					}
					20 = { # War in Heaven with Fallen Empire of different ethos
						random_country = {
							limit = {
								NOT = { is_same_value = root }
								is_country_type = fallen_empire
								NOT = { has_ethic = ethic_gestalt_consciousness }
							}
							set_country_flag = sleepers_awake_ancient_rival
							set_timed_country_flag = { flag = timed_ancient_rival days = 3650 }
							set_timed_country_flag = { flag = ai_no_wars days = 3650 }
							root = { set_timed_country_flag = { flag = ai_no_wars days = 3650 } }
							every_country = {
								limit = {
									is_country_type = default
								}
								set_timed_country_flag = { flag = ai_no_wars days = 3650 }
							}
						}
					}
					40 = { # No War in Heaven
						set_global_flag = no_war_in_heaven
					}
				}
			}
			else = { set_global_flag = no_war_in_heaven }
		}
	}
}

country_event = {
	id = abyssalsecrets.561
	title = abyssalsecrets.561.name
	desc = abyssalsecrets.561.desc
	picture = GFX_evt_fallen_empire
	show_sound = event_alien_signal
	location = from

	is_triggered_only = yes

	option = {
		name = abyssalsecrets.561.a
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	option = {
		name = abyssalsecrets.561.b
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	option = {
		name = abyssalsecrets.561.c
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
}

country_event = {
	id = abyssalsecrets.562 
	title = abyssalsecrets.562.name
	desc = abyssalsecrets.562.desc
	picture = GFX_evt_fallen_empire
	show_sound = event_alien_signal
	location = from

	is_triggered_only = yes

	option = {
		name = abyssalsecrets.562.a
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	option = {
		name = abyssalsecrets.562.b
		trigger = {
			NOT = { has_country_flag = abyssal_secrets_leader_event }
		}
	}
	option = {
		name = abyssalsecrets.562.c
		trigger = {
			has_country_flag = abyssal_secrets_leader_event
		}
	}
}

### Grants pact player ability to convert stars to abyssal black holes.
country_event = {
	id = abyssalsecrets.564 
	title = abyssalsecrets.564.name
	desc = abyssalsecrets.564.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssal_invasion_ongoing
	}
	
	immediate = {
		set_country_flag = ss_abyss_bh_conversion
	}

	option = {
		name = abyssalsecrets.564.a
	}
}

### Issues project to finish abyssal black hole conversion.

country_event = {
	id = abyssalsecrets.565 
	title = abyssalsecrets.565.name
	desc = abyssalsecrets.565.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal

	is_triggered_only = yes
	
	immediate = {
		set_country_flag = ss_conversion_pending
		event_target:ss_convert_target = {
			enable_special_project = {
				name = SS_CONVERT_ABYSS_BLACK_HOLE
				location = this
				owner = root
			}
		}
	}

	option = {
		name = abyssalsecrets.565.a
	}
}

### Converts star.
country_event = {
	id = abyssalsecrets.566
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		create_message = {
			type = MESSAGE_TYPE_STAR_CONVERTED_ABYSS
			localization = MESSAGE_STAR_CONVERTED_ABYSS
			days = 30
			target = root
			variable = {
				type = name
				localization = SYSTEM
				scope = event_target:ss_convert_target.solar_system
			}
		}
		event_target:ss_convert_target = {
			solar_system = {
				every_system_planet = {
					limit = {
						has_planet_flag = ss_convert_target
					}
					remove_planet_flag = ss_convert_target
				}
				every_system_planet = {
					limit = {
						AND = {
							is_star = yes
							NOT = { is_planet_class = pc_ss_abyssal_black_hole }
						}
					}
					change_pc = pc_ss_abyssal_black_hole
				}
				set_star_class = sc_ss_abyss
				set_star_flag = abyssal_secrets_blackhole
			}
			create_ambient_object = {
				type = "ss_star_shockwave"
				play_animation_once = yes
				location = this
			}
			random_list = {
				10 = {
					create_ambient_object = {
						type = "rare_nebula_1"
						location = this
					}
					create_ambient_object = {
						type = "turbulent_nebula_1"
						location = this
					}
					create_ambient_object = {
						type = "nebula_L3_entity"
						location = this
					}
				}
				10 = {
					create_ambient_object = {
						type = "rare_nebula_2"
						location = this
					}
					create_ambient_object = {
						type = "turbulent_nebula_2"
						location = this
					}
					create_ambient_object = {
						type = "nebula_L4_entity"
						location = this
					}
				}
				10 = {
					create_ambient_object = {
						type = "turbulent_nebula_1"
						location = this
					}
					create_ambient_object = {
						type = "nebula_L8_entity"
						location = this
					}
				}
				10 = {
					create_ambient_object = {
						type = "turbulent_nebula_2"
						location = this
					}
					create_ambient_object = {
						type = "nebula_L10_entity"
						location = this
					}
				}
				10 = {
					create_ambient_object = {
						type = "turbulent_nebula_1"
						location = this
					}
					create_ambient_object = {
						type = "nebula_L6_entity"
						location = this
					}
				}
			}
			solar_system = {
				every_system_planet = {
					limit = {
						NOT = { is_star = yes }
					}
					add_modifier = {
						modifier = abyssalsecrets_dark_world
						days = -1
					}
				}
			}
		}
	}
	
	after = {
		hidden_effect = {
			remove_country_flag = ss_conversion_pending
		}
	}
}

### Pact warning event

country_event = {
	id = abyssalsecrets.1000
	title = abyssalsecrets.pact.title
	picture = GFX_evt_black_hole
	show_sound = event_mystic_reveal
	
	desc = {
		text = abyssalsecrets.pact.desc_01
		trigger = {
			NOT = { has_country_flag = ss_abyss_truth_accepted }
		}
	}
	
	desc = {
		text = abyssalsecrets.pact.desc_02
		trigger = {
			has_country_flag = ss_abyss_truth_accepted
		}
	}

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.pact.confirm
		custom_tooltip = abyssalsecrets.pact.confirm.tooltip
		hidden_effect = {
			set_country_flag = abyssal_host_friend
			save_global_event_target_as = abyssal_host_friend
			country_event = { id = abyssalsecrets.301 }
			country_event = { id = abyssalsecrets.303 days = 100 }
			country_event = { id = abyssalsecrets.360 days = 30 }
			every_subject = {
				country_event = { id = abyssalsecrets.301 }
				add_opinion_modifier = {
					modifier = opinion_abyssal_allies
					who = root
				}
			}
		}
	}
	option = {
		name = abyssalsecrets.pact.deny
	}
}

### Father Respawn checking

country_event = {
	id = abyssalsecrets.1001
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		if = {
			limit = {
				count_owned_ship = {
					limit = { is_ship_size = abyssal_father }
					count < 1
				}
				exists = event_target:abyssal_host_enemy_country
				has_global_flag = abyssal_invasion_ongoing
				is_country_type = abyssal_host_invaders_type
			}
			event_target:abyssal_host_enemy_country = {
				country_event = { id = abyssalsecrets.316 }
			}
		}
		else = {
			country_event = { id = abyssalsecrets.1001 days = 400 }
		}
	}
}


### Tells the player what to do.

country_event = {
	id = abyssalsecrets.1003
	title = abyssalsecrets.1003.title
	desc = abyssalsecrets.1003.desc
	picture = GFX_evt_black_hole
	show_sound = event_default
	
	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.1003.a
	}
}

country_event = {
	id = abyssalsecrets.1101
	title = abyssalsecrets.1101.title
	desc = abyssalsecrets.1101.desc
	picture = GFX_evt_fleet_from_surface
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = abyssalsecrets_fired
		any_owned_planet = {
			has_modifier = abyssalsecrets_blockade
		}
	}
	
	immediate = {
		every_owned_planet = {
			limit = {
				has_modifier = abyssalsecrets_blockade
			}
			remove_modifier = abyssalsecrets_blockade
		}
		event_target:blockade_drones_country = { destroy_country = yes }
		event_target:blockade_drone_fleet = { destroy_fleet = this }
	}
	
	option = {
		name = "abyssalsecrets.1101.a"
		hidden_effect = {
			owner = { country_event = { id = abyssalsecrets.23 days = 15 } }
		}
	}
}

### Heart of Creation Activation

country_event = {
	id = abyssalsecrets.1200
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		change_variable = { which = ss_heart_activations value = 1 }
		set_variable = { which = ss_heart_activations_temp value = ss_heart_activations }
		modulo_variable = { which = ss_heart_activations_temp value = 2 }
		if = {
			limit = {
				check_variable = { which = ss_heart_activations_temp value = 0 }
			}
			random_list = {
				10 = { country_event = { id = abyssalsecrets.1201 } } # Gain a cache of resources
				10 = { country_event = { id = abyssalsecrets.1202 } } # Leaders level up
				10 = { country_event = { id = abyssalsecrets.1203 } } # Energy production boosted for short duration
				10 = { country_event = { id = abyssalsecrets.1204 } } # Ship travel speed increased
				10 = { country_event = { id = abyssalsecrets.1205 } } # Gain a temporary boost to pop growth
				10 = { country_event = { id = abyssalsecrets.1206 } } # Story segment
			}
		}
		else = {
			random_list = {
				10 = { 
					random_owned_planet = { planet_event = { id = abyssalsecrets.1207 } }
				} # Random planet is enhanced, increased size and modifier added
				10 = {
					country_event = { id = abyssalsecrets.1208 }
				} # Star novas, showering planets with resources
				10 = { 
					country_event = { id = abyssalsecrets.1209 } 
				} # An uninhabitable world is made habitable
				10 = { 
					country_event = { id = abyssalsecrets.1210 } 
				} # A neutron star, pulsar or blackhole gains a quantanium deposit
				10 = { country_event = { id = abyssalsecrets.1211 } } # A random star system is created
				10 = { country_event = { id = abyssalsecrets.1212 } } # Ruler gains special trait, if already got trait, gain experience instead.
			}
		}
	}
}

country_event = {
	id = abyssalsecrets.1201
	title = abyssalsecrets.1201.title
	desc = abyssalsecrets.1201.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	immediate = {
		export_trigger_value_to_variable = { trigger = years_passed variable = heart_resource_mult }
		export_trigger_value_to_variable = { trigger = check_galaxy_setup_value parameters = { setting = end_game_year } variable = ss_end_year }
		divide_variable = { which = heart_resource_mult value = ss_end_year }
	}
	
	option = {
		name = "abyssalsecrets.1201.a"
		add_resource = {
			energy = 6000
			alloys = 3000
			sr_quantanium = 100
			sr_hypernuclear = 100
			sr_muonic_hydrogen = 100
			mult = heart_resource_mult
		}
	}
}

country_event = {
	id = abyssalsecrets.1202
	title = abyssalsecrets.1202.title
	desc = abyssalsecrets.1202.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = "abyssalsecrets.1202.a"
		custom_tooltip = abyssalsecrets.1202.tooltip
		hidden_effect = {
			every_owned_leader = {
				add_skill = 1
			}
		}
	}
}

country_event = {
	id = abyssalsecrets.1203
	title = abyssalsecrets.1203.title
	desc = abyssalsecrets.1203.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = "abyssalsecrets.1203.a"
		add_modifier = {
			modifier = ss_heart_energy_output
			days = 450
		}
	}
}

country_event = {
	id = abyssalsecrets.1204
	title = abyssalsecrets.1204.title
	desc = abyssalsecrets.1204.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = "abyssalsecrets.1204.a"
		add_modifier = {
			modifier = ss_heart_ship_speed
			days = 450
		}
	}
}

country_event = {
	id = abyssalsecrets.1205
	title = abyssalsecrets.1205.title
	desc = abyssalsecrets.1205.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = "abyssalsecrets.1205.a"
		add_modifier = {
			modifier = ss_heart_pop_growth
			days = 450
		}
	}
}

country_event = {
	id = abyssalsecrets.1206
	title = abyssalsecrets.1206.title
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	
	desc = {
		text = abyssalsecrets.1206.desc_01
		trigger = { NOT = { is_variable_set = ss_heart_messages } }
	}
	desc = {
		text = abyssalsecrets.1206.desc_02
		trigger = { check_variable = { which = ss_heart_messages value = 1 } }
	}
	desc = {
		text = abyssalsecrets.1206.desc_03
		trigger = { check_variable = { which = ss_heart_messages value > 1 } }
	}
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = "abyssalsecrets.1206.a"
		hidden_effect = {
			change_variable = { which = ss_heart_messages value = 1 }
		}
	}
}

planet_event = {
	id = abyssalsecrets.1207
	title = abyssalsecrets.1207.title
	desc = abyssalsecrets.1207.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	location = this
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				NOT = { has_modifier = ss_heart_wonderous_planet }
			}
			change_planet_size = 2
			add_modifier = {
				modifier = ss_heart_wonderous_planet
				days = -1
			}
		}
		else = {
			change_planet_size = 2
		}
	}
	
	option = {
		name = "abyssalsecrets.1207.a"
	}
}

country_event = {
	id = abyssalsecrets.1208
	title = abyssalsecrets.1208.title
	desc = abyssalsecrets.1208.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	location = event_target:ss_nova_loc
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_owned_planet = {
					AND = {
						is_star = yes
						NOT = { has_planet_flag = ss_heart_flare }
						this.solar_system = { NOT = { any_system_planet = { has_owner = yes } } }
						this.solar_system = { num_planets_in_system > 2 }
					}
				}
			}
			random_planet_within_border = {
				limit = {
					AND = {
						is_star = yes
						NOT = { has_planet_flag = ss_heart_flare }
						this.solar_system = { NOT = { any_system_planet = { has_owner = yes } } }
						this.solar_system = { num_planets_in_system > 2 }
					}
				}
				save_global_event_target_as = ss_nova_loc
				solar_system = {
					every_system_planet = {
						limit = {}
						if = {
							limit = { 
								OR = {
									is_star = yes 
									is_planet_class = pc_gas_giant
								}
							}
							random_list = {
								10 = { add_deposit = d_energy_4 }
								10 = { add_deposit = d_energy_5 }
								10 = { add_deposit = d_energy_6 }
							}
						}
						if = {
							limit = {
								OR = {
									is_planet_class = pc_molten
									is_planet_class = pc_toxic
									is_planet_class = pc_frozen
									is_asteroid = yes
								}
							}
							random_list = {
								10 = { add_deposit = d_minerals_3 }
								10 = { add_deposit = d_minerals_4 }
								10 = { add_deposit = d_minerals_5 }
							}
						}
						if = {
							limit = {
								OR = {
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
									is_planet_class = pc_frozen
									is_planet_class = pc_ice_asteroid
								}
							}
							random_list = {
								5 = { add_deposit = d_rare_crystals_1 }
								10 = {}
							}
						}
						if = {
							limit = {
								OR = {
									is_planet_class = pc_molten
									is_planet_class = pc_asteroid
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
								}
							}
							random_list = {
								5 = { add_deposit = d_volatile_motes_1 }
								10 = {}
							}
						}
						if = {
							limit = {
								OR = {
									is_planet_class = pc_gas_giant
									is_planet_class = pc_toxic
								}
							}
							random_list = {
								10 = { add_deposit = d_exotic_gases_1 }
								10 = {}
							}
						}
						set_planet_flag = ss_heart_flare
					}
				} 
			}
		}
		else = {
			random_planet_within_border = {
				limit = {
					AND = {
						is_star = yes
					}
				}
				save_global_event_target_as = ss_nova_loc
				solar_system = {
					every_system_planet = {
						limit = {}
						if = {
							limit = { 
								OR = {
									is_star = yes 
									is_planet_class = pc_gas_giant
								}
							}
							random_list = {
								10 = { add_deposit = d_energy_4 }
								10 = { add_deposit = d_energy_5 }
								10 = { add_deposit = d_energy_6 }
							}
						}
						if = {
							limit = {
								OR = {
									is_planet_class = pc_molten
									is_planet_class = pc_toxic
									is_planet_class = pc_frozen
									is_asteroid = yes
								}
							}
							random_list = {
								10 = { add_deposit = d_minerals_3 }
								10 = { add_deposit = d_minerals_4 }
								10 = { add_deposit = d_minerals_5 }
							}
						}
						if = {
							limit = {
								OR = {
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
									is_planet_class = pc_frozen
									is_planet_class = pc_ice_asteroid
								}
							}
							random_list = {
								5 = { add_deposit = d_rare_crystals_1 }
								10 = {}
							}
						}
						if = {
							limit = {
								OR = {
									is_planet_class = pc_molten
									is_planet_class = pc_asteroid
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
								}
							}
							random_list = {
								5 = { add_deposit = d_volatile_motes_1 }
								10 = {}
							}
						}
						if = {
							limit = {
								OR = {
									is_planet_class = pc_gas_giant
									is_planet_class = pc_toxic
								}
							}
							random_list = {
								10 = { add_deposit = d_exotic_gases_1 }
								10 = {}
							}
						}
						set_planet_flag = ss_heart_flare
					}
				}
			}
		}
	}
	
	option = {
		name = "abyssalsecrets.1208.a"
	}
	
	after = {
		hidden_effect = {
			clear_global_event_target = ss_nova_loc
		}
	}
}

country_event = {
	id = abyssalsecrets.1209
	title = abyssalsecrets.1209.title
	desc = abyssalsecrets.1209.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	location = event_target:ss_growth_loc
	
	is_triggered_only = yes
	
	immediate = {
		random_planet_within_border = {
			limit = {
				AND = {
					NOT = { is_star = yes }
					NOT = { is_colonizable = yes }
					NOT = { is_asteroid = yes }
					planet_size > 7
					planet_size < 20
				}
			}
			save_event_target_as = ss_growth_loc
			change_pc = { class = rl_habitable_normal inherit_entity = no }
			reroll_planet_modifiers = yes
			reroll_deposits = yes
		}
	}
	
	option = {
		name = "abyssalsecrets.1209.a"
	}
}

country_event = {
	id = abyssalsecrets.1210
	title = abyssalsecrets.1210.title
	desc = abyssalsecrets.1210.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	location = event_target:ss_distortion_loc
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_planet_within_border = {
					OR = {
						is_planet_class = pc_neutron_star 
						is_planet_class = pc_pulsar 
						is_planet_class = pc_black_hole
						is_planet_class = pc_ss_abyssal_black_hole
					}
				}
			}
			random_planet_within_border = {
				limit = {
					AND = {
						is_star = yes
						OR = {
							is_planet_class = pc_neutron_star 
							is_planet_class = pc_pulsar 
							is_planet_class = pc_black_hole
							is_planet_class = pc_ss_abyssal_black_hole
						}
					}
				}
				save_event_target_as = ss_distortion_loc
				add_deposit = d_quantanium_deposit_2 
			}
		}
		else = {
			random_planet_within_border = {
				limit = {
					is_star = yes
				}
				save_event_target_as = ss_distortion_loc
				add_deposit = d_quantanium_deposit_2 
			}
		}
	}
	
	option = {
		name = "abyssalsecrets.1210.a"
	}
}

country_event = {
	id = abyssalsecrets.1211
	title = abyssalsecrets.1211.title
	desc = abyssalsecrets.1211.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	location = event_target:ss_created_world
	
	is_triggered_only = yes
	
	immediate = {
		random_system_within_border = {
			random_list = {
				10 = {
					spawn_system = {
						min_jumps = 2
						max_jumps = 10
						min_distance = 10
						max_distance = 50
						initializer = "basic_init_02"
						hyperlane = yes
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
					save_event_target_as = ss_created_world
				}
				10 = {
					spawn_system = {
						min_jumps = 2
						max_jumps = 10
						min_distance = 10
						max_distance = 50
						initializer = "basic_init_04"
						hyperlane = yes
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
					save_event_target_as = ss_created_world
				}
				10 = {
					spawn_system = {
						min_jumps = 2
						max_jumps = 10
						min_distance = 10
						max_distance = 50
						initializer = "basic_init_06"
						hyperlane = yes
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
					save_event_target_as = ss_created_world
				}
				10 = {
					spawn_system = {
						min_jumps = 2
						max_jumps = 10
						min_distance = 10
						max_distance = 50
						initializer = "binary_init_01"
						hyperlane = yes
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
					save_event_target_as = ss_created_world
				}
				10 = {
					spawn_system = {
						min_jumps = 2
						max_jumps = 10
						min_distance = 10
						max_distance = 50
						initializer = "trinary_init_02"
						hyperlane = yes
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
					save_event_target_as = ss_created_world
				}
				10 = {
					spawn_system = {
						min_jumps = 2
						max_jumps = 10
						min_distance = 10
						max_distance = 50
						initializer = "binary_init_02"
						hyperlane = yes
					}
					add_extra_hyperlane_to_spawned_system_effect = yes
					save_event_target_as = ss_created_world
				}
			}
		}
	}
	option = {
		name = "abyssalsecrets.1211.a"
	}
}

country_event = {
	id = abyssalsecrets.1212
	title = abyssalsecrets.1212.title
	desc = abyssalsecrets.1212.desc
	picture = GFX_evt_ss_the_heart
	show_sound = event_mystic_reveal
	location = this
	
	is_triggered_only = yes
	
	immediate = {
		ruler = {
			if = {
				limit = {
					NOT = { has_trait = leader_trait_ss_ruler_the_eye }
				}
				add_trait = leader_trait_ss_ruler_the_eye
			}
			add_skill = 2
		}
	}
	
	option = {
		name = "abyssalsecrets.1212.a"
		custom_tooltip = abyssalsecrets.1212.tooltip
	}
}

country_event = {
	id = abyssalsecrets.1300
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		every_system = {
			set_star_class = sc_ss_abyss
		}
	}
}

country_event = {
	id = abyssalsecrets.1301
	title = "TRANSMISSION"
	desc = "abyssalsecrets.1301.desc"
	custom_gui = "ss_ab_diplo_window"

	diplomatic = yes

	picture_event_data = {
		portrait = abyssal_host_father_portrait
		room = abyssal_host_room
	}

	is_triggered_only = yes
	
	option = {
		name = abyssalsecrets.1301.a
	}
}