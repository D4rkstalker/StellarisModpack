namespace = dyson_swarm_other

#triggers on megastructure completion
country_event = {
	id = dyson_swarm_other.1
	title = dyson_swarm_other.1.title
	desc = dyson_swarm_other.1.desc
	picture = GFX_evt_dyson_sun
	
	is_triggered_only = yes
	
	option = {
		name = dyson_swarm_other.1.a
	}	
}

#The dyson swarm resource deposit initializers. Has to be triggered on an ALREADY COLONIZED swarm, otherwise it doesn't work for some reason
country_event = {
	id = dyson_swarm_other.2
	title = dyson_swarm_other.2.title
	desc = dyson_swarm_other.2.desc
	picture = GFX_evt_dyson_sun
	
	is_triggered_only = yes
	
	option = {
		name = dyson_swarm_other.2.a
	}
}

#runs an event on all planettypes which in turn add deposits to the swarm.
planet_event = {
	id = dyson_swarm_other.3
	title = dyson_swarm_other.3.title
	desc = dyson_swarm_other.3.desc
	picture = GFX_evt_dyson_sun
	
	is_triggered_only = yes
	
	immediate = {
	#resources
		solar_system = {
			every_system_planet = {
				limit = { dyson_is_asteroid = yes }
				planet_event = { id = dyson_swarm_other.5 }
			}
		}
		solar_system = {
			every_system_planet = {
				limit = { dyson_is_molten_planet = yes }
				planet_event = { id = dyson_swarm_other.7 }
			}
		}
		solar_system = {
			every_system_planet = {
				limit = { dyson_is_minable_planet = yes }
				planet_event = { id = dyson_swarm_other.8 }
			}
		}
		solar_system = {
			every_system_planet = {
				limit = { dyson_is_ice_asteroid = yes }
				planet_event = { id = dyson_swarm_other.9 }
			}
		}
		solar_system = {
			every_system_planet = {
				limit = { dyson_is_gas_giant = yes }
				planet_event = { id = dyson_swarm_other.10 }
			}
		}
	#motes
		random_list = {
			5 = {
			}
			10 = { add_deposit = d_dyson_swarm_astroid }
			30 = { add_deposit = d_dyson_swarm_mote_fields }
			30 = {
				add_deposit = d_dyson_swarm_mote_fields
				add_deposit = d_dyson_swarm_mote_fields
			}
			20 = {	
				add_deposit = d_dyson_swarm_mote_fields 
				add_deposit = d_dyson_swarm_mote_fields 
				add_deposit = d_dyson_swarm_mote_fields
			}
			5 = {
				add_deposit = d_dyson_swarm_mote_fields
				add_deposit = d_dyson_swarm_mote_fields 
				add_deposit = d_dyson_swarm_mote_fields 
				add_deposit = d_dyson_swarm_mote_fields
			}
		}
	}
	
	option = {
		name = dyson_swarm_other.3.a
	}
}

planet_event = {
	id = dyson_swarm_other.5
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_planet = {
				limit = {
					is_planet_class = pc_dyson_swarm
				}
				add_deposit = d_dyson_swarm_astroid
			}
		}
	}
}

planet_event = {
	id = dyson_swarm_other.7
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_planet = {
				limit = {
					is_planet_class = pc_dyson_swarm
				}
				random_list = {
					75 = { 
						add_deposit = d_dyson_swarm_molten
					}
					25 = {
						add_deposit = d_dyson_swarm_molten_minerals
					}
				}
			}
		}
	}
}

planet_event = {
	id = dyson_swarm_other.8
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_planet = {
				limit = {
					is_planet_class = pc_dyson_swarm
				}
				random_list = {
					60 = { 
						add_deposit = d_dyson_swarm_barren
					}
					40 = {
						add_deposit = d_dyson_swarm_barren_nothing
					}
				}
			}
		}
	}
}

planet_event = {
	id = dyson_swarm_other.9
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_planet = {
				limit = {
					is_planet_class = pc_dyson_swarm
				}
				add_deposit = d_dyson_swarm_ice_asteroid
			}
		}
	}
}

planet_event = {
	id = dyson_swarm_other.10
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_planet = {
				limit = {
					is_planet_class = pc_dyson_swarm
				}
				random_list = {
					75 = { 
						add_deposit = d_dyson_swarm_gas_giant
					}
					25 = {
						add_deposit = d_dyson_swarm_gas_giant_energy
					}
				}
			}
		}
	}
}

#help events
country_event = {
	id = dyson_swarm_other.11
	title = dyson_swarm_other.11.title
	desc = dyson_swarm_other.11.desc
	
	is_triggered_only = yes
	
	option = {
		name = dyson_swarm_other.11.a
		hidden_effect = {
			country_event = { id = dyson_swarm_other.18 }
		}
	}
	
	option = {
		name = dyson_swarm_other.11.c
		hidden_effect = {
			country_event = { id = dyson_swarm_other.35 }
		}
	}
	
	option = {
		name = dyson_swarm_other.11.b
	}
}

country_event = {
	id = dyson_swarm_other.18
	title = dyson_swarm_other.18.title
	desc = dyson_swarm_other.18.desc
	
	is_triggered_only = yes
	
	option = {
		name = dyson_swarm_other.11.b
	}
}

country_event = {
	id = dyson_swarm_other.35
	title = dyson_swarm_other.35.title
	desc = dyson_swarm_other.35.desc
	
	is_triggered_only = yes
	
	option = {
		name = dyson_swarm_other.11.b
	}
}

#pops on dyson swarms will become less suited for living on normal planets, triggers every five years for swarms without gravity generators.
#dyson_swarm_other.40 will randomize when the event happens, so its not at the same time for everyone, reducing lagspikes
country_event = {
	id = dyson_swarm_other.40
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		any_owned_planet = {
			is_planet_class = pc_dyson_swarm
			NOT = { has_modifier = dyson_swarm_gravity_generators }
			num_pops > 6
			any_owned_pop = {
				species = {
					NOR = {
						is_species_class = ROBOT
						has_trait = trait_pc_dyson_swarm_preference
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
						has_trait = trait_pc_habitat_preference
					}
				}
			}
		}
		NOT = { has_global_flag = dyson_deteriation_off }
	}
	
	immediate = {
		country_event = {
			id = dyson_swarm_other.15
			days = 1
			random = 20
		}
	}
}
#notification
country_event = {
	id = dyson_swarm_other.13
	title = dyson_swarm_other.13.title
	desc = dyson_swarm_other.13.desc
	picture = GFX_evt_genetic_modification
	show_sound = event_scanner
	
	is_triggered_only = yes

	option = {
		name = dyson_swarm_other.13.a
		custom_tooltip = dyson_swarm_other.13.a.tooltip
	}
	option = {
		name = dyson_swarm_other.13.b
		custom_tooltip = dyson_swarm_other.13.b.tooltip
		set_country_flag = atrophy_notification_off
	}
}
#actual trait assignment
planet_event = {
	id = dyson_swarm_other.14
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {	
			15 = {
				while = {
					count = 2
					random_pop = {
						limit = {
							species = {
								NOR = {
									is_species_class = ROBOT
									has_trait = trait_pc_dyson_swarm_preference
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
									has_trait = trait_pc_habitat_preference
								}
							}
						}
						dyson_add_atrophy = yes
					}
				}
			}
			50 = { 
				while = {
					count = 3
					random_pop = {
						limit = {
							species = {
								NOR = {
									is_species_class = ROBOT
									has_trait = trait_pc_dyson_swarm_preference
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
									has_trait = trait_pc_habitat_preference
								}
							}
						}
						dyson_add_atrophy = yes
					}
				}
			}
			35 = {
				while = {
					count = 4
					random_pop = {
						limit = {
							species = {
								NOR = {
									is_species_class = ROBOT
									has_trait = trait_pc_dyson_swarm_preference
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
									has_trait = trait_pc_habitat_preference
								}
							}
						}
						dyson_add_atrophy = yes
					}
				}
			}
		}
	}
}
#apply the event to swarms, trigger notification if it is on
country_event = {
	id = dyson_swarm_other.15
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		every_owned_planet = {
			limit = {
				is_planet_class = pc_dyson_swarm
				NOT = { has_modifier = dyson_swarm_gravity_generators }
			}
			planet_event = { id = dyson_swarm_other.14 }			
		}
		if = {
			limit = { NOT = { has_country_flag = atrophy_notification_off } }
			country_event = { id = dyson_swarm_other.13 }
		}
	}
}

#Planetdestruction
#event to remove all system flags and ambient objects after destroying a dyson swarm through decision and through using the cracker

#Planetcracker event, triggered alongside the normal one.
planet_event = {
	id = dyson_swarm_other.19
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		ROOT = {
			has_planet_flag = is_dyson_swarm
		}
	}
	
	immediate = {
		dyson_remove_ambient_objects = yes
		remove_planet = yes
	}
}

#Crisis: Unbidden. triggered through on_planet_bombarded, after the normal bombardment event.
planet_event = {
	id = dyson_swarm_other.20
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			planet_devastation >= 100
			has_planet_flag = is_dyson_swarm
		}
		FROM = {
			OR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
			}
		}
	}
	
	immediate = {
		dyson_remove_ambient_objects = yes
		remove_planet = yes
	}
}

#Crisis: Prethorian Scourge. triggered through on_pop_purged, after the normal infestation event.
planet_event = {
	id = dyson_swarm_other.21
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			num_pops = 1 # Last Pop is still alive when this event is fired
			controller = { is_country_type = "swarm" }
			has_planet_flag = is_dyson_swarm
		}
	}
	
	immediate = {
		dyson_remove_ambient_objects = yes
		remove_planet = yes
	}
}

#Shielder event, triggered alongside the normal one.
#idea: removes ambient objects and places new ones, closer to the actual "planet". Then add some sort of massive shield that encases all of them in a bubble.
planet_event = {
	id = dyson_swarm_other.22
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		ROOT = {
			has_planet_flag = is_dyson_swarm
		}
	}
	
	immediate = {
		spawn_habitat_pacifier_effect = yes
		change_pc = {
			class = pc_dyson_swarm_shielded
			inherit_entity = no
		}
		set_planet_size = 4
		dyson_remove_all_modular_districts_flags = yes
		dyson_remove_ambient_objects = yes
	}
}

#event for planet mining
planet_event = {
	id = dyson_swarm_other.23
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_planet_flag = has_dyson_miner
				}
			}
			set_planet_flag = has_dyson_miner
			save_event_target_as = dyson_currently_mining
			create_ambient_object = {
				type = "dyson_station_03"
				entity_offset_height = { min = -0 max = -25 }
				location = this
			}
			last_created_ambient_object = { 
				set_ambient_object_flag = dyson_marked_for_removal
				set_location = {
					target = this
					distance = 3
					angle = random
				}
			}
		}
		if = {
			limit = {
				OR = {
					planet_size = 2
					planet_size = 1
				}
			}
			event_target:dyson_currently_mining = {
				planet_event = { id = dyson_swarm_other.25 }
			}
			set_planet_flag = dyson_mined_out
			solar_system = {
				random_system_planet = {
					limit = {
						is_planet_class = pc_dyson_swarm
					}
					change_planet_size = +1
				}
			}
			random_list = {
				50 = { change_pc = pc_barren }
				30 = { change_pc = pc_broken }
				20 = { change_pc = pc_toxic }
			}
		}
		if = {
			limit = {
				planet_size > 2
				NOT = {
					has_planet_flag = dyson_mined_out
				}
			}
			change_planet_size = -2
			planet_event = { id = dyson_swarm_other.23 days = 180 } #180
			solar_system = {
				random_system_planet = {
					limit = {
						is_planet_class = pc_dyson_swarm
					}
					change_planet_size = +1
				}
			}
		}
	}
}

#mining began (triggered by decision)
country_event = {
	id = dyson_swarm_other.24
	title = dyson_swarm_other.24.title
	desc = dyson_swarm_other.24.desc
	picture = GFX_evt_gas_giant_station
	
	is_triggered_only = yes
	
	option = {
		name = dyson_swarm_other.24.a
	}
}

#mining complete, remove corresponding deposit on the dyson swarm. triggered for both planets and asteroids
planet_event = {
	id = dyson_swarm_other.25
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		save_event_target_as = dyson_depleted_planet_marker
		space_owner = {
			country_event = { id = dyson_swarm_other.27 }
		}
		solar_system = {
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = dyson_marked_for_removal
				}
				destroy_ambient_object = this
			}
		}
		if = {
			limit = {
				dyson_is_asteroid = yes
			}
			solar_system = {
				random_system_planet = {
					limit = {
						is_planet_class = pc_dyson_swarm
					}
					remove_deposit = d_dyson_swarm_astroid
				}
			}
			solar_system = {
				random_system_planet = {
					limit = {
						is_planet_class = pc_dyson_swarm
					}
					change_planet_size = +4
				}
			}
		}
		if = {
			limit = {
				dyson_is_molten_planet = yes
			}
			solar_system = {
				random_system_planet = {
					limit = {
						is_planet_class = pc_dyson_swarm
					}
					random_list = {
						50 = {
							remove_deposit = d_dyson_swarm_molten
						}
						50 = {
							remove_deposit = d_dyson_swarm_molten_minerals
						}
					}
				}
			}
		}
		if = {
			limit = {
				dyson_is_minable_planet = yes
			}
			solar_system = {
				random_system_planet = {
					limit = {
						is_planet_class = pc_dyson_swarm
					}
					random_list = {
						50 = {
							remove_deposit = d_dyson_swarm_barren
						}
						50 = {
							remove_deposit = d_dyson_swarm_barren_nothing
						}
					}
				}
			}
		}
		if = {
			limit = {
				dyson_is_gas_giant = yes
			}
			solar_system = {
				random_system_planet = {
					limit = {
						is_planet_class = pc_dyson_swarm
					}
					random_list = {
						50 = {
							remove_deposit = d_dyson_swarm_gas_giant
						}
						50 = {
							remove_deposit = d_dyson_swarm_gas_giant_energy
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = dyson_swarm_other.27
	title = dyson_swarm_other.27.title
	desc = dyson_swarm_other.27.desc
	location = event_target:dyson_depleted_planet_marker
	picture = GFX_evt_gas_giant_station
	
	is_triggered_only = yes

	option = {
		name = dyson_swarm_other.27.a
	}
}

#event for asteroid mining
planet_event = {
	id = dyson_swarm_other.37
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		set_planet_flag = has_dyson_miner
		
		create_ambient_object = {
			type = "dyson_station_03"
			entity_offset_height = { min = -0 max = -25 }
			location = this
		}
		last_created_ambient_object = { 
			set_ambient_object_flag = dyson_marked_for_removal
			set_location = {
				target = this
				distance = 3
				angle = random
			}
		}
	}
}

#asteroid mining began
country_event = {
	id = dyson_swarm_other.38
	title = dyson_swarm_other.24.title
	desc = dyson_swarm_other.38.desc
	picture = GFX_evt_asteroid_field
	
	is_triggered_only = yes
	
	option = {
		name = dyson_swarm_other.24.a
	}
}


#remove planetary trading post if the last system colony is destroyed/abandoned 
planet_event = {
	id = dyson_swarm_other.26
	title = dyson_swarm_other.26.title
	desc = dyson_swarm_other.26.desc
	location = root
	picture = GFX_evt_outpost
	
	is_triggered_only = yes 
	
	trigger = {
		solar_system = {
			any_system_planet = {
				is_planet_class = pc_dyson_swarm
				has_building = dyson_swarm_planetary_trading_post
			}
			any_system_planet = {
				NOT = {
					NOT = { is_planet_class = pc_dyson_swarm }
					num_pops > 0
				}
			}
		}
	}
	
	immediate = {
		solar_system = {
			every_system_planet = {
				remove_building = dyson_swarm_planetary_trading_post
			}
		}
	}
	
	option = {
		name = dyson_swarm_other.26.a
	}
}

#exploring event: ruined dyson swarm
#on entering the system
ship_event = {
	id = dyson_swarm_other.28
	title = dyson_swarm_other.28.title
	desc = dyson_swarm_other.28.desc
	picture = GFX_evt_dyson_sun
	location = root
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			From = { 
				has_star_flag = ruined_dyson_swarm_system 
			}
			FromFrom = { 
				NOT = { 
					has_country_flag = entered_ruined_dyson_swarm_system 
				}
			}
			NOT = {
				From = { 
					has_star_flag = ruined_dyson_swarm_system_repaired 
				}
			}
		}
	}
	
	immediate = {
		FromFrom = { 
			set_country_flag = entered_ruined_dyson_swarm_system
		}
		From = {
			random_system_planet = { 
				limit = {
					has_planet_flag = ruined_dyson_swarm_marker 
				}
				save_event_target_as = ruined_dyson_swarm
			}
		}
	}
	
	option = {
		name = dyson_swarm_other.28.a
		enable_special_project = {
			name = "DYSON_SEARCHING_RUINED_SWARM"
			location = event_target:ruined_dyson_swarm 
			owner = root.owner
		}
	}
}

#event to tell the player to take the system. If player already owns it, then add the special project and use different desc
country_event = {
	id = dyson_swarm_other.29
	title = dyson_swarm_other.29.title
	desc = {
		trigger = {
			event_target:ruined_dyson_swarm  = {
				is_inside_border = Prev
			}
		}
		text = dyson_swarm_other.29.desc.yes
	}
	desc = {
		trigger = {
			event_target:ruined_dyson_swarm  = {
				NOT = {
					is_inside_border = Prev
				}
			}
		}
		text = dyson_swarm_other.29.desc.no
	}
	location = event_target:ruined_dyson_swarm 
	
	is_triggered_only = yes
	
	immediate = {
		random_planet = {
			limit = {
				has_planet_flag = ruined_dyson_swarm_marker
			}
			save_event_target_as = ruined_dyson_swarm
		}
	}
	
	option = {
		name = dyson_swarm_other.29.a
		trigger = {
			event_target:ruined_dyson_swarm  = {
				NOT = {
					is_inside_border = Prev
				}
			}
		}
		add_tech_progress = { tech = tech_dyson_swarm progress = 0.5 }
	}
	option = {
		name = dyson_swarm_other.29.b
		trigger = {
			event_target:ruined_dyson_swarm  = {
				is_inside_border = Prev
			}
		}
		enable_special_project = {
			name = "DYSON_REPAIRING_DYSON_SWARM"
			location = event_target:ruined_dyson_swarm
			owner = root.owner
		}
		add_tech_progress = { tech = tech_dyson_swarm progress = 0.5 }
	}
}

#restored dyson swarm
ship_event = {
	id = dyson_swarm_other.30
	title = dyson_swarm_other.30.title
	desc = dyson_swarm_other.30.desc
	picture = GFX_evt_dyson_sun
	location = event_target:ruined_dyson_swarm 
	
	is_triggered_only = yes
	
	immediate = {
		event_target:ruined_dyson_swarm = {
			change_pc = pc_dyson_swarm
			set_name = "NAME_repaired_ruined_swarm"
			solar_system = {
				set_star_flag = ruined_dyson_swarm_system_repaired
				every_system_ambient_object = {
					limit = {
						has_ambient_object_flag = ruined_dyson_swarm_object
					}
					destroy_ambient_object = this
				}
				random_system_planet = {
					limit = {
						has_planet_flag = ruined_dyson_swarm_marker
					}
					while = {
						count = 2
						create_ambient_object = {
							type = "dyson_station_01"
							entity_offset_height = { min = -0 max = -25 }
							location = this
						}
						last_created_ambient_object = { 
							set_ambient_object_flag = dyson_swarm_object
							set_location = {
								target = from
								distance = 40
								angle = random
							}
						}
					}
					create_ambient_object = {
						type = "dyson_station_02"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = { 
						set_ambient_object_flag = dyson_swarm_object
						set_location = {
							target = from
							distance = 38
							angle = random
						}
					}
					create_ambient_object = {
						type = "dyson_station_04"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = { 
						set_ambient_object_flag = dyson_swarm_object
						set_location = {
							target = from
							distance = 36
							angle = random
						}
					}
					create_ambient_object = {
						type = "dyson_station_05"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = { 
						set_ambient_object_flag = dyson_swarm_object
						set_location = {
							target = from
							distance = 42
							angle = random
						}
					}
				}
			}
		}
	}
	
	option = {
		name = dyson_swarm_other.30.a
		custom_tooltip = dyson_swarm_other.30.a.tooltip
		owner = {
			add_monthly_resource_mult = { 
				resource = alloys 
				value = 8
				min = 400 
				max = 600
			}
		}
	}
}

#add special project after building/taking over the systems starbase, triggered through on_starbase_transfer and on_building_starbase_outpost
ship_event = {
	id = dyson_swarm_other.31
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		exists = solar_system
		solar_system = {
			AND = {
				has_star_flag = ruined_dyson_swarm_system
				NOT = {
					has_star_flag = ruined_dyson_swarm_system_repaired
				}
			}
		}
		owner = {
			NOR = {
				has_special_project = DYSON_SEARCHING_RUINED_SWARM
				has_special_project = DYSON_REPAIRING_DYSON_SWARM
			}
		}
	}
	
	immediate = {
		owner = {
			country_event = { id = dyson_swarm_other.32 days = 1 }
		}
	}
}

#actually add special project
country_event = {
	id = dyson_swarm_other.32
	title = dyson_swarm_other.32.title
	desc = dyson_swarm_other.32.desc
	location = event_target:ruined_dyson_swarm
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			is_at_war_with = from
		}
	}
	
	immediate = {
		random_planet = {
			limit = {
				has_planet_flag = ruined_dyson_swarm_marker
			}
			save_event_target_as = ruined_dyson_swarm
		}
	}
	
	option = {
		name = dyson_swarm_other.32.a
		enable_special_project = {
			name = "DYSON_REPAIRING_DYSON_SWARM"
			location = event_target:ruined_dyson_swarm
			owner = root.owner
		}
	}
}

#spawn in the ruined dyson swarm after spawning the system
planet_event = {
	id = dyson_swarm_other.33
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = dyson_spawnpoint
			}
			spawn_planet = {
				class = "pc_ruined_dyson_swarm"
				location = event_target:dyson_spawnpoint
				orbit_location = yes
				orbit_angle_offset = 45
				orbit_distance_offset = 9.899
				size = 10
				has_ring = no
				
				init_effect = {
					set_name = "NAME_ruined_swarm"
					set_planet_entity = {
						entity = "orbital_habitat_entity"
					}
					clear_blockers = yes
					clear_deposits = yes
					set_planet_flag = megastructure
					set_planet_flag = habitat
					set_planet_flag = colony_event
					prevent_anomaly = yes
					set_planet_flag = is_dyson_swarm
					set_planet_flag = ruined_dyson_swarm_marker
					
				#comp for ecology mod to prevent polution events
					set_planet_flag = eco_no_pollution
					
				#mod Compatability to prevent spawning new modifiers or deposits
					every_deposit = {
						remove_deposit = yes
					}
				}
			}
		}
	}
}

#event that replaces certain buildings with the dyson swarm versions if the empire is an AI.
planet_event = {
	id = dyson_swarm_other.36
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_planet_class = pc_dyson_swarm 
		owner = { is_ai = yes }
		OR = {
			has_building = building_luxury_residence
			has_building = building_communal_housing
			has_building = building_drone_storage
			has_building = building_hive_warren
			has_building = building_foundry_1
			has_building = building_factory_1
			has_building = building_bureaucratic_1
			has_building = building_uplink_node
		}
	}
	
	immediate = {
		switch = {
			trigger = has_building
			building_uplink_node = {
				remove_building = building_uplink_node
				add_building = building_dyson_uplink_node_1
			}
			building_bureaucratic_1 = {
				remove_building = building_bureaucratic_1
				add_building = building_dyson_bureaucratic_1
			}
			building_factory_1 = {
				remove_building = building_factory_1
				add_building = building_dyson_zero_g_foundry_0
			}
			building_foundry_1 = {
				remove_building = building_foundry_1
				add_building = building_dyson_zero_g_factory_0
			}
			building_luxury_residence = {
				remove_building = building_luxury_residence
				add_building = building_housing_stations_1
			}
			building_communal_housing = {
				remove_building = building_communal_housing
				add_building = building_housing_stations_1
			}
			building_drone_storage = {
				remove_building = building_drone_storage
				add_building = building_housing_stations_1
			}
			building_hive_warren = {
				remove_building = building_hive_warren
				add_building = building_housing_stations_1
			}
		}
	}
}
#add the housing trait to robots on dyson swarms once tech_dyson_swarm_machine_zero_g_adaptation has been researched/ remove it if not on dyson swarm. triggered through on_pop_added
pop_event = {
	id = dyson_swarm_other.41
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OWNER = { has_technology = "tech_dyson_swarm_machine_zero_g_adaptation" }
		species  = {
			OR = {
				is_species_class = ROBOT
				has_trait = trait_mechanical
				has_trait = trait_machine_unit
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { 
					species = { has_trait = trait_robotic_low_gravity_adaptation }
				}
				from = {
					OR = {
						is_planet_class = pc_habitat
						is_planet_class = pc_dyson_swarm
					}
				}
			}
			modify_species = {
				species = this
				add_trait = trait_robotic_low_gravity_adaptation
			}
		}
		else_if = {
			limit = {
				species = { has_trait = trait_robotic_low_gravity_adaptation }
				from = {
					NOR = { 
						is_planet_class = pc_habitat
						is_planet_class = pc_dyson_swarm
					}
				}
			}
			modify_species = {
				species = this
				remove_trait = trait_robotic_low_gravity_adaptation
			}
		}
	}
}
#add housing trait to all robots once the tech has been researched, triggered through on_tech_increased
country_event = {
	id = dyson_swarm_other.42
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		last_increased_tech = "tech_dyson_swarm_machine_zero_g_adaptation"
	}

	immediate = {
		every_owned_planet = {
			limit = { is_planet_class = pc_dyson_swarm }
			every_owned_pop = {
				limit = {
					NOT = { species = { has_trait = trait_robotic_low_gravity_adaptation } }
				}
				modify_species = {
					species = this
					add_trait = trait_robotic_low_gravity_adaptation
				}
			}
		
		}
	}
}


