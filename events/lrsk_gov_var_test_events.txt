# Government Variety Pack
# Events - Backend
# Author: littleraskol

# These events are to test functionality

namespace = lrsk_gvp_testing

# Give Stuff
country_event = {
	id = lrsk_gvp_testing.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }
	}

	immediate = {
		add_resource = { minerals = 10000 }
		add_resource = { energy = 10000 }
		add_resource = { alloys = 5000 }
		add_resource = { consumer_goods = 5000 }
		add_resource = { influence = 500 }
	}
}

# Testing start case is using the MC trade fed start.
# This gets rid of other megacorps in the fed so that we don't have to worry about branch offices getting sniped from us...
country_event = {
	id = lrsk_gvp_testing.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }
	}

	immediate = {
		IF = { limit = { any_federation_ally = { NOT = { has_valid_civic = civic_merchant_guilds } } }
			every_federation_ally = { limit = { NOT = { has_valid_civic = civic_merchant_guilds } }
				change_government = {
					authority = random
					civics = {
						civic = civic_merchant_guilds
						civic = random
					}
				}
			}
		}
	}
}

# Testing all new buildings in v1.6.8 - cycles through the relevant civics (non-criminal)
# Start with Tradeways, Inc Origin.
# Call event from console for each test, then manual save at that step.
# To test, set instant build on and then open a branch office and build the building to test.
# Then switch to the host empire and test the effects on that end.
# Then reload your last manual save.
country_event = {
	id = lrsk_gvp_testing.11
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }
	}

	immediate = {
		IF = { limit = { NOT = { has_country_flag = lrsk_legit_mc_test_runonce } }
			set_country_flag = lrsk_legit_mc_test_runonce
			set_country_flag = lrsk_test_legit_step_1
		}

		# Might prevent shifting to xenophobe causing some kind of issue
		lrsk_null_origin = yes

		lrsk_null_civics = yes # Might help with some gov change weirdness
		lrsk_remove_all_ethics = yes # Might help with some shift ethic weirdness

		switch = {
			trigger = has_country_flag
			lrsk_test_legit_step_1 = {
				# Start of test - Sci Mgmt
				remove_country_flag = lrsk_test_legit_step_1

				shift_ethic = ethic_authoritarian # ensure validity
				lrsk_randomize_civics = yes # 
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_sci_mgnt
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_2
			}
			lrsk_test_legit_step_2 = {
				# Edu Corp
				remove_country_flag = lrsk_test_legit_step_2

				shift_ethic = ethic_materialist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_edu_corp
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}
				
				set_country_flag = lrsk_test_legit_step_3
			}
			lrsk_test_legit_step_3 = {
				# Co-op
				remove_country_flag = lrsk_test_legit_step_3

				shift_ethic = ethic_egalitarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_workers_councils
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}
				
				set_country_flag = lrsk_test_legit_step_4
			}
			lrsk_test_legit_step_4 = {
				# Gig Econ
				remove_country_flag = lrsk_test_legit_step_4

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_gig_economy
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_5
			}
			lrsk_test_legit_step_5 = {
				# Naval alone
				remove_country_flag = lrsk_test_legit_step_5

				shift_ethic = ethic_militarist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_naval_contractors
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_6
			}
			lrsk_test_legit_step_6 = {
				# Naval and PMC
				remove_country_flag = lrsk_test_legit_step_6

				shift_ethic = ethic_militarist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_naval_contractors
						civic = civic_private_military_companies
					}
				}

				set_country_flag = lrsk_test_legit_step_7
			}
			lrsk_test_legit_step_7 = {
				# PMC alone
				remove_country_flag = lrsk_test_legit_step_7

				shift_ethic = ethic_militarist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_private_military_companies
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_8
			}
			lrsk_test_legit_step_8 = {
				# Prospect
				remove_country_flag = lrsk_test_legit_step_8

				shift_ethic = ethic_militarist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_private_prospectors
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_9
			}
			lrsk_test_legit_step_9 = {
				# Media
				remove_country_flag = lrsk_test_legit_step_9

				shift_ethic = ethic_militarist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_media_conglomerate
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_10
			}
			lrsk_test_legit_step_10 = {
				# Casino
				remove_country_flag = lrsk_test_legit_step_10

				shift_ethic = ethic_spiritualist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_casino_mystic
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_11
			}
			lrsk_test_legit_step_11 = {
				# Vacay
				remove_country_flag = lrsk_test_legit_step_11

				shift_ethic = ethic_xenophile # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_vacay_planning
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_12
			}
			lrsk_test_legit_step_12 = {
				# Heritage
				remove_country_flag = lrsk_test_legit_step_12

				shift_ethic = ethic_xenophobe # ensure validity (will the cause issues for the origin though?)
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_heritage_trust
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_13
			}
			lrsk_test_legit_step_13 = {
				# CRS
				remove_country_flag = lrsk_test_legit_step_13

				shift_ethic = ethic_xenophile # remove any xenophobe weirdness
				shift_ethic = ethic_pacifist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_conflict_res
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_14
			}
			lrsk_test_legit_step_14 = {
				# ISS
				remove_country_flag = lrsk_test_legit_step_14

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_police_state
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}

				set_country_flag = lrsk_test_legit_step_15
			}
			lrsk_test_legit_step_15 = {
				# Indent 
				remove_country_flag = lrsk_test_legit_step_15
				remove_country_flag = lrsk_legit_mc_test_runonce # Allows restart

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_indentured_assets
						civic = lrsk_gov_var_civic_mc_controlling_interest # anodyne option
					}
				}
			}
		}
	}
}


# Testing all new buildings in v1.6.8 - cycles through the relevant civics (criminal)
# Start with Tradeways, Inc Origin.
# Call event from console for each test, then manual save at that step.
# To test, set instant build on and then open a branch office and build the building to test.
# Then switch to the host empire and test the effects on that end.
# Then reload your last manual save.
country_event = {
	id = lrsk_gvp_testing.12
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }
	}

	immediate = {
		IF = { limit = { NOT = { has_country_flag = lrsk_crim_mc_test_runonce } }
			set_country_flag = lrsk_crim_mc_test_runonce
			set_country_flag = lrsk_test_crim_step_1
		}

		# Might prevent shifting to xenophobe causing some kind of issue
		lrsk_null_origin = yes

		lrsk_null_civics = yes # Might help with some gov change weirdness
		lrsk_remove_all_ethics = yes # Might help with some shift ethic weirdness

		switch = {
			trigger = has_country_flag
			lrsk_test_crim_step_1 = {
				# Start of test - Sci Mgmt
				remove_country_flag = lrsk_test_crim_step_1

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_sci_mgnt
						civic = civic_criminal_heritage 
					}
				}

				set_country_flag = lrsk_test_crim_step_2
			}
			lrsk_test_crim_step_2 = {
				# Edu Corp
				remove_country_flag = lrsk_test_crim_step_2

				shift_ethic = ethic_materialist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_edu_corp
						civic = civic_criminal_heritage
					}
				}
				
				set_country_flag = lrsk_test_crim_step_3
			}
			lrsk_test_crim_step_3 = {
				# Co-op
				remove_country_flag = lrsk_test_crim_step_3

				shift_ethic = ethic_egalitarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_workers_councils
						civic = civic_criminal_heritage
					}
				}
				
				set_country_flag = lrsk_test_crim_step_4
			}
			lrsk_test_crim_step_4 = {
				# Gig Econ
				remove_country_flag = lrsk_test_crim_step_4

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_gig_economy
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_5
			}
			lrsk_test_crim_step_5 = {
				# Naval alone
				remove_country_flag = lrsk_test_crim_step_5

				shift_ethic = ethic_militarist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_naval_contractors
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_6
			}
			lrsk_test_crim_step_6 = {
				# PMC alone
				remove_country_flag = lrsk_test_crim_step_6

				shift_ethic = ethic_militarist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_private_military_companies
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_7
			}
			lrsk_test_crim_step_7 = {
				# Indent 
				remove_country_flag = lrsk_test_crim_step_7

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_indentured_assets
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_8
			}
			lrsk_test_crim_step_8 = {
				# Prospect
				remove_country_flag = lrsk_test_crim_step_8

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_private_prospectors
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_9
			}
			lrsk_test_crim_step_9 = {
				# Media
				remove_country_flag = lrsk_test_crim_step_9

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_media_conglomerate
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_10
			}
			lrsk_test_crim_step_10 = {
				# Casino
				remove_country_flag = lrsk_test_crim_step_10

				shift_ethic = ethic_spiritualist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_casino_mystic
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_11
			}
			lrsk_test_crim_step_11 = {
				# Vacay
				remove_country_flag = lrsk_test_crim_step_11

				shift_ethic = ethic_xenophile # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_vacay_planning
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_12
			}
			lrsk_test_crim_step_12 = {
				# Heritage
				remove_country_flag = lrsk_test_crim_step_12

				shift_ethic = ethic_xenophobe # ensure validity (will the cause issues for the origin though?)
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_heritage_trust
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_13
			}
			lrsk_test_crim_step_13 = {
				# CRS
				remove_country_flag = lrsk_test_crim_step_13

				shift_ethic = ethic_xenophile # remove any xenophobe weirdness
				shift_ethic = ethic_pacifist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_conflict_res
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_14
			}
			lrsk_test_crim_step_14 = {
				# ISS
				remove_country_flag = lrsk_test_crim_step_14

				shift_ethic = ethic_authoritarian # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = lrsk_gov_var_civic_mc_police_state
						civic = civic_criminal_heritage
					}
				}

				set_country_flag = lrsk_test_crim_step_15
			}
			lrsk_test_crim_step_15 = {
				# Naval and PMC
				remove_country_flag = lrsk_test_crim_step_15
				remove_country_flag = lrsk_crim_mc_test_runonce # Allows restart

				give_technology = { tech = tech_galactic_administration message = no } # allow 3 civics
				shift_ethic = ethic_militarist # ensure validity
				change_government = {
					authority = auth_corporate
					civics = {
						civic = civic_private_military_companies
						civic = civic_naval_contractors
						civic = civic_criminal_heritage
					}
				}
			}
		}
	}
}

# Selects random level 1 admiral and levels them up - for use when testing mil acad effect
country_event = {
	id = lrsk_gvp_testing.13
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }

		any_owned_leader = {
			leader_class = admiral
			has_level < 2
		}
	}

	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = admiral
				has_level < 2
			}
			add_experience = 201
		}
	}
}

# Selects random level 1 general and levels them up - for use when testing mil acad effect
country_event = {
	id = lrsk_gvp_testing.14
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }

		any_owned_leader = {
			leader_class = general
			has_level < 2
		}
	}

	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = general
				has_level < 2
			}
			add_experience = 201
		}
	}
}

# Triggers the pop steal event
country_event = {
	id = lrsk_gvp_testing.15
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }

		has_valid_civic = civic_criminal_heritage
		has_valid_civic = civic_indentured_assets
		check_variable = { which = lrsk_num_built_workhouses value > 0 }
		
		any_country = {
			check_variable = { which = lrsk_num_owned_workhouses value > 0 }
			any_owned_planet = {
				num_pops > 1 # don't want to steal last pop...
				has_planet_flag = lrsk_could_lose_pops_to@root
			}
		}
	}

	immediate = {
		set_timed_country_flag = { flag =  lrsk_gvp_testcall days = 3 } # Guarantees the event fires
		country_event = { id = lrsk_gvp_mc_bldg_special.20 days = 2 } # Delay to allow switching to victim
	}
}

# Triggers the favor event
country_event = {
	id = lrsk_gvp_testing.16
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }

		has_valid_civic = civic_media_conglomerate
		check_variable = { which = lrsk_num_built_localmedia value > 0 }
		
		any_country = {
			check_variable = { which = lrsk_num_owned_localmedia value > 0 }
			any_owned_planet = {
				num_pops > 0 # just to hopefully filter out any uninhabited worlds
				has_planet_flag = lrsk_could_leak_scandal_to@root
			}
		}
	}

	immediate = {
		set_timed_country_flag = { flag =  lrsk_gvp_testcall days = 3 } # Guarantees the event fires
		country_event = { id = lrsk_gvp_mc_bldg_special.30 }
	}
}

# Creates 10 admirals and 10 generals
country_event = {
	id = lrsk_gvp_testing.17
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }
	}

	immediate = {
		while = {
			count = 10
			create_leader = {
				name = random
				species = root.owner_main_species
				class = admiral
				skill = 1
			}
			create_leader = {
				name = random
				species = root.owner_main_species
				class = general
				skill = 1
			}
		}
	}
}

# Run entire test series on military leaders
country_event = {
	id = lrsk_gvp_testing.18
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }
	}

	immediate = {
		country_event = { id = lrsk_gvp_testing.17 }
		while = {
			count = 10
			country_event = { id = lrsk_gvp_testing.13 }
			country_event = { id = lrsk_gvp_testing.14 }
		}
	}
}


# Triggers casino luck - Casino side
country_event = {
	id = lrsk_gvp_testing.19
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }

		has_valid_civic = lrsk_gov_var_civic_mc_casino_mystic
		check_variable = { which = lrsk_num_built_casinos value > 0 }
		
		any_country = {
			check_variable = { which = lrsk_num_owned_casinos value > 0 }
			any_owned_planet = {
				num_pops > 0 # just to hopefully filter out any uninhabited worlds
				has_planet_flag = lrsk_can_get_casino_events_from@root
			}
		}
	}

	immediate = {
		set_timed_country_flag = { flag =  lrsk_gvp_testcall days = 3 } # Guarantees the event fires
		country_event = { id = lrsk_gvp_mc_bldg_special.50 }
	}
}

# Triggers casino luck - Planet side
country_event = {
	id = lrsk_gvp_testing.20
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# This can be set in lrsk_government_variety_pack_backend.1 to turn off testing events
		NOT = { has_global_flag = lrsk_government_variety_pack_live_version }
		
		check_variable = { which = lrsk_num_owned_casinos value > 0 }
		any_federation_ally = {
			has_valid_civic = lrsk_gov_var_civic_mc_casino_mystic
			check_variable = { which = lrsk_num_built_casinos value > 0 }
		}
		any_owned_planet = {
			num_pops > 0 # just to hopefully filter out any uninhabited worlds
			has_building = lrsk_gov_var_bldg_grand_casino # no idea how to call the relative flag
		}
	}

	immediate = {
		random_federation_ally = {
			limit = {
				has_valid_civic = lrsk_gov_var_civic_mc_casino_mystic
				check_variable = { which = lrsk_num_built_casinos value > 0 }
			}
			save_event_target_as = lrsk_casino_provider
		}
		IF = {
			limit = {
				any_owned_planet = {
					has_building = lrsk_gov_var_bldg_grand_casino
					num_pops > 0 # just to hopefully filter out any uninhabited worlds
					has_planet_flag = lrsk_can_get_casino_events_from@event_target:lrsk_casino_provider
				}
			}
			event_target:lrsk_casino_provider = {
				set_timed_country_flag = { flag =  lrsk_gvp_testcall days = 3 } # Guarantees the event fires
				country_event = { id = lrsk_gvp_mc_bldg_special.50 }
			}
		}
	}
}