namespace = Events_GAPS_Basker

country_event = {
	id = Events_GAPS_Basker.1
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { has_civic = Civic_GAPS_Baskers }
	
	immediate = {
		every_planet_within_border = { 
			limit = { is_colony = yes NOT = { has_deposit = d_GAPS_Light_Level } }
			add_deposit = d_GAPS_Light_Level
		}
		give_technology = { tech = Tech_GAPS_Praise_The_Sun_1 message = no }
	}
}
#
country_event = {
	id = Events_GAPS_Basker.11
	title = Events_GAPS_Basker.11.name
	desc = Events_GAPS_Basker.11.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	trigger = {
		this = { has_civic = Civic_GAPS_Baskers }
		OR = {
			last_increased_tech = Tech_GAPS_Praise_The_Sun_1
			last_increased_tech = Tech_GAPS_Praise_The_Sun_2
			last_increased_tech = Tech_GAPS_Praise_The_Sun_3
			last_increased_tech = Tech_GAPS_Praise_The_Sun_4
			last_increased_tech = Tech_GAPS_Praise_The_Sun_5
		}
	}
	option = {
		name = "Events_GAPS_Basker.Bask_In_Its_Glory"
		custom_tooltip = "Events_GAPS_Basker.Bask_In_Its_Glory.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Baskers_Bask_In_Its_Glory
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Baskers_Bask_In_Its_Glory }
		}
		ai_chance = {
			factor = 25
		}
	}
	option = {
		name = "Events_GAPS_Basker.Radiant_Decadence"
		custom_tooltip = "Events_GAPS_Basker.Radiant_Decadence.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Baskers_Radiant_Decadence
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Baskers_Radiant_Decadence }
		}
		ai_chance = {
			factor = 25
		}
	}
	option = {
		name = "Events_GAPS_Basker.Sun_Is_All_You_Need"
		custom_tooltip = "Events_GAPS_Basker.Sun_Is_All_You_Need.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Baskers_Sun_Is_All_You_Need
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Baskers_Sun_Is_All_You_Need }
		}
		ai_chance = {
			factor = 25
		}
	}
	option = {
		name = "Events_GAPS_Basker.Flare_For_Solar"
		custom_tooltip = "Events_GAPS_Basker.Flare_For_Solar.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Baskers_Flare_For_Solar
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Baskers_Flare_For_Solar }
		}
		ai_chance = {
			factor = 25
		}
	}
	option = {
		name = "Events_GAPS_Basker.The_Sun_Is_Your_Armament"
		custom_tooltip = "Events_GAPS_Basker.The_Sun_Is_Your_Armament.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Baskers_The_Sun_Is_Your_Armament
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Baskers_The_Sun_Is_Your_Armament }
		}
		ai_chance = {
			factor = 25
		}
	}
}
#Tech_GAPS_Praise_The_Sun
# A fleet has entered a system
# Scope = Fleet
# From = System
################
#Basker MODIFIER
################
fleet_event = {
	id = Events_GAPS_Basker.2
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		owner = { has_civic = Civic_GAPS_Baskers has_country_flag = CountryFlag_GAPS_Baskers_The_Sun_Is_Your_Armament }
	}
	
	immediate = {
		#while = {
		#	limit = { from = { any_ship_in_system = { has_modifier = Ship_Modifier_GAPS_Basker_Light_Level } }
		#	remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		#}
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		remove_modifier = Ship_Modifier_GAPS_Basker_Light_Level
		from = {
			while = { 
				count = Variable_GAPS_System_Light_Level
				root = {
					add_modifier = { modifier = Ship_Modifier_GAPS_Basker_Light_Level	days = -1 }
				}
			}
		}
	}
}

country_event = {
	id = Events_GAPS_Basker.3
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		owner = { has_civic = Civic_GAPS_Baskers }
	}
	
	immediate = {
		country_event = { id = Events_GAPS_Basker.33 days = 14 }
	}
}

country_event = {
	id = Events_GAPS_Basker.33
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		owner = { has_civic = Civic_GAPS_Baskers }
	}
	
	immediate = {
		country_event = { id = Events_GAPS_Basker.33 days = 30 }
		every_system_within_border = {
			limit = { 
				exists = starbase 
				starbase = { 
					OR = { 
						starbase = { has_starbase_building = Starbase_Building_GAPS_Solar_Flare_Mainpulator_4 } 
						starbase = { has_starbase_building = Starbase_Building_GAPS_Solar_Flare_Mainpulator_5 } 
						starbase = { has_starbase_building = Starbase_Building_GAPS_Solar_Flare_Mainpulator_6 }  
					} 
				}
				set_star_flag = star_flag_GAPS_sealed_system
			}
		}
	}
}

# From = system
# FromFrom = country (previous owner)
# This = country (new owner)
#System Gained
country_event = {
	id = Events_GAPS_Basker.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		From = {
			has_star_flag = star_flag_GAPS_sealed_system
			Not = { any_system_planet = { is_planet_class = pc_black_hole } }
		}
	}
	immediate = {
		If = { 
			limit = { 
				from = {
					exists = starbase
					OR = { 
						starbase = { has_starbase_building = Starbase_Building_GAPS_Solar_Flare_Mainpulator_4 } 
						starbase = { has_starbase_building = Starbase_Building_GAPS_Solar_Flare_Mainpulator_5 } 
						starbase = { has_starbase_building = Starbase_Building_GAPS_Solar_Flare_Mainpulator_6 }  
					} 
				}
			}
			set_star_flag = star_flag_GAPS_sealed_system
		}
		Else = { remove_star_flag = star_flag_GAPS_sealed_system }
	}
}
country_event = {
	id = Events_GAPS_Basker.5
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		owner = { has_civic = Civic_GAPS_Baskers }
	}
	
	immediate = {
		country_event = { id = Events_GAPS_Basker.51 days = 14 }
		country_event = { id = Events_GAPS_Basker.52 days = 16 }
	}
}
country_event = {
	id = Events_GAPS_Basker.51
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		owner = { has_civic = Civic_GAPS_Baskers }
	}
	
	immediate = {
		country_event = { id = Events_GAPS_Basker.51 days = 30 }
		every_system_within_border = {
			limit = { 
				exists = starbase
				starbase = { has_starbase_module = Starbase_Module_GAPS_Stellar_Refocuser }  
			}
			
			every_system_planet = { 
				limit = { is_primary_star = yes not = { has_modifier = Planet_Modifier_GAPS_Light_Level_Plus_Starbase } } 
				add_modifier = { modifier = Planet_Modifier_GAPS_Light_Level_Plus_Starbase days = -1 } 
				planet_event = { id = Events_GAPS_Light_Levels.2 days = 0 } 
			}
		}
	}
}

country_event = {
	id = Events_GAPS_Basker.52
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		owner = { has_civic = Civic_GAPS_Baskers }
	}
	
	immediate = {
		country_event = { id = Events_GAPS_Basker.52 days = 30 }
		every_system_within_border = {
			limit = { 
				exists = starbase
				NOT = { starbase = { has_starbase_module = Starbase_Module_GAPS_Stellar_Refocuser }  }
				any_system_planet = { has_modifier = Planet_Modifier_GAPS_Light_Level_Plus_Starbase }
			}
			
			every_system_planet = { 
				limit = { has_modifier = Planet_Modifier_GAPS_Light_Level_Plus_Starbase }
				remove_modifier = Planet_Modifier_GAPS_Light_Level_Plus_Starbase
				planet_event = { id = Events_GAPS_Light_Levels.2 days = 0 } 
			}
		}
	}
}

			