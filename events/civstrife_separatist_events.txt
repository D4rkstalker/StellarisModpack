
###############################
### Civil Wars by MrFunEGUY ###
###############################


namespace = civsep

#######################
# Instability Counter #
#######################

country_event = { # Planetary Unrest Counter
	id = civsep.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOT = { years_passed < 15 }
		any_owned_planet = {
			num_pops > 0
			OR = {
				frontier_planet_unrest_tick_check = yes
				integrated_planet_unrest_tick_check = yes
				fundamental_planet_unrest_tick_check = yes
			}
		}
		
	}

	immediate = {
		every_owned_planet = {
			limit = {
				num_pops > 0
				OR = {
					frontier_planet_unrest_tick_check = yes
					integrated_planet_unrest_tick_check = yes
					fundamental_planet_unrest_tick_check = yes
				}
			}
			if = {
				limit = {
					NOT = { is_variable_set = revolt_tick }
					OR = {
						frontier_planet_unrest_tick_check = yes
						integrated_planet_unrest_tick_check = yes
						fundamental_planet_unrest_tick_check = yes
					}
				}
				set_variable = { which = revolt_tick value = 1 }
			}
			else_if = {
				limit = {
					OR = {
						AND = {
							frontier_planet_unrest_tick_check = yes
							check_variable = { which = revolt_tick value < 6 }
						}
						AND = {
							integrated_planet_unrest_tick_check = yes
							check_variable = { which = revolt_tick value < 9 }
						}
						AND = {
							fundamental_planet_unrest_tick_check = yes
							check_variable = { which = revolt_tick value < 12 }
						}
					}
				}
				change_variable = { which = revolt_tick value = 1 }
			}
			else_if = {
				limit = {
					frontier_planet_unrest_tick_check = yes
					check_variable = { which = revolt_tick value = 6 }
				}
				planet_event = { id = civsep.2000 }
			}
			else_if = {
				limit = {
					integrated_planet_unrest_tick_check = yes
					check_variable = { which = revolt_tick value = 9 }
				}
				planet_event = { id = civsep.2000 }
			}
			else_if = {
				limit = {
					fundamental_planet_unrest_tick_check = yes
					check_variable = { which = revolt_tick value = 12 }
				}
				planet_event = { id = civsep.2000 }
			}
		}
	}
}

country_event = { # Planetary Decrease unrest Counter
	id = civsep.1010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_planet = {
			num_pops > 0
			is_variable_set = revolt_tick
			OR = {
				AND = {
					frontier_planet_unrest_untick_check = yes
					check_variable = { which = revolt_tick value < 6 }
				}
				AND = {
					integrated_planet_unrest_untick_check = yes
					check_variable = { which = revolt_tick value < 9 }
				}
				AND = {
					fundamental_planet_unrest_untick_check = yes
					check_variable = { which = revolt_tick value < 12 }
				}
			}
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				num_pops > 0
				is_variable_set = revolt_tick
				OR = {
					AND = {
						frontier_planet_unrest_untick_check = yes
						check_variable = { which = revolt_tick value < 6 }
					}
					AND = {
						integrated_planet_unrest_untick_check = yes
						check_variable = { which = revolt_tick value < 9 }
					}
					AND = {
						fundamental_planet_unrest_untick_check = yes
						check_variable = { which = revolt_tick value < 12 }
					}
				}
			}
			if = {
				limit = {
					check_variable = { which = revolt_tick value = 0 }
					OR = {
						frontier_planet_unrest_untick_check = yes
						integrated_planet_unrest_untick_check = yes
						fundamental_planet_unrest_untick_check = yes
					}
				}
				clear_variable = revolt_tick
			}
			else_if = {
				limit = {
					check_variable = { which = revolt_tick value < 12 }
					OR = {
						frontier_planet_unrest_untick_check = yes
						integrated_planet_unrest_untick_check = yes
						fundamental_planet_unrest_untick_check = yes
					}
				}
				subtract_variable = { which = revolt_tick value = 1 }
			}
		}
	}
}

country_event = { # Planetary Calm Counter
	id = civsep.1020
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_planet = {
			num_pops > 0
			combined_planet_unrest_calm_check = yes
		}	
	}

	immediate = {
		every_owned_planet = {
			limit = {
				num_pops > 0
				combined_planet_unrest_calm_check = yes
			}
			if = {
				limit = {
					frontier_planet_unrest_untick_check = yes
					check_variable = { which = calm_tick value >= 36 }
				}
				clear_variable = calm_tick
				clear_variable = revolt_tick
				remove_planet_flag = plan_sep_active
				save_event_target_as = separatists_disband_planet
				planet_event = { id = civsep.9005 }
			}
			else_if = {
				limit = {
					integrated_planet_unrest_untick_check = yes
					check_variable = { which = calm_tick value >= 24 }
				}
				clear_variable = calm_tick
				clear_variable = revolt_tick
				remove_planet_flag = plan_sep_active
				save_event_target_as = separatists_disband_planet
				planet_event = { id = civsep.9005 }
			}
			else_if = {
				limit = {
					fundamental_planet_unrest_untick_check = yes
					check_variable = { which = calm_tick value >= 12 }
				}
				clear_variable = calm_tick
				clear_variable = revolt_tick
				remove_planet_flag = plan_sep_active
				save_event_target_as = separatists_disband_planet
				planet_event = { id = civsep.9005 }
			}
			else_if = {
				limit = {
					combined_planet_unrest_calm_check = yes
					NOT = { is_variable_set = calm_tick }
				}
				set_variable = { which = calm_tick value = 1 }
			}
			else_if = {
				limit = {
					combined_planet_unrest_calm_check = yes
					check_variable = { which = calm_tick value < 36 }
				}
				change_variable = { which = calm_tick value = 1 }
			}
		}
	}
}

country_event = { # Planetary Decrease Calm counter
	id = civsep.1030
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_planet = { combined_planet_unrest_calm_retick_check = yes }
		
	}

	immediate = {
		every_owned_planet = {
			limit = { combined_planet_unrest_calm_retick_check = yes }
			subtract_variable = { which = calm_tick value = 1 }
		}
	}
}

country_event = { # Sectoral Calm counter on stability increase and remove separatists
	id = civsep.1100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = { combined_sector_calm_tick_check = yes }
	}

	immediate = {

		if = {
			limit = {
				any_owned_sector = {
					has_sector_flag = sector_sep_active
					OR = {
						AND = {
							has_sector_flag = frontier_sector_@root
							sector_capital = { check_variable = { which = sec_calm_tick value >= 36 } }
							combined_sector_calm_tick_check = yes
						}
						AND = {
							has_sector_flag = integrated_sector_@root
							sector_capital = { check_variable = { which = sec_calm_tick value >= 24 } }
							combined_sector_calm_tick_check = yes
						}
						AND = {
							has_sector_flag = fundamental_sector_@root
							sector_capital = { check_variable = { which = sec_calm_tick value >= 12 } }
							combined_sector_calm_tick_check = yes
						}	
					}
				}
			}
			every_owned_sector = {
				limit = {
					has_sector_flag = sector_sep_active
					OR = {
						AND = {
							has_sector_flag = frontier_sector_@root
							sector_capital = { check_variable = { which = sec_calm_tick value >= 36 } }
							combined_sector_calm_tick_check = yes
						}
						AND = {
							has_sector_flag = integrated_sector_@root
							sector_capital = { check_variable = { which = sec_calm_tick value >= 24 } }
							combined_sector_calm_tick_check = yes
						}
						AND = {
							has_sector_flag = fundamental_sector_@root
							sector_capital = { check_variable = { which = sec_calm_tick value >= 12 } }
							combined_sector_calm_tick_check = yes
						}	
					}
				}
				sector_capital = { clear_variable = sec_calm_tick }
				remove_sector_flag = sector_sep_active
				save_event_target_as = separatists_disband_sector
				owner = { country_event = { id = civsep.9015 } }
			}
		}
		else_if = { # Instant Removal
			limit = {
				any_owned_sector = {
					has_sector_flag = sector_sep_active
					NOT = {
						any_owned_planet = {
							OR = {
								planet_stability < 70
								AND = {
									planet_crime  >= 60
									OR = {
										NOT = { exists = sector.leader }
										AND = {
											exists = sector.leader
											sector.leader = { NOT = { has_trait = leader_trait_corrupt } }
										}
									}
								}
							}
						}
					}
				}
			}
			every_owned_sector = {
				limit = {
					has_sector_flag = sector_sep_active
					NOT = {
						any_owned_planet = {
							OR = {
								planet_stability < 70
								AND = {
									planet_crime  >= 60
									OR = {
										NOT = { exists = sector.leader }
										AND = {
											exists = sector.leader
											sector.leader = { NOT = { has_trait = leader_trait_corrupt } }
										}
									}
								}
							}
						}
					}
				}
				if = {
					limit = { sector_capital = { is_variable_set = sec_calm_tick } }
					sector_capital = { clear_variable = sec_calm_tick }
				}
				remove_sector_flag = sector_sep_active
				save_event_target_as = separatists_disband_sector
				owner = { country_event = { id = civsep.9015 } }
			}
		}
		else_if = {
			limit = {
				any_owned_sector = {
					sector_capital = { NOT = { is_variable_set = sec_calm_tick } }
					has_sector_flag = sector_sep_active
					combined_sector_calm_tick_check = yes
				}
			}
			every_owned_sector = {
				limit = {
					sector_capital = { NOT = { is_variable_set = sec_calm_tick } }
					has_sector_flag = sector_sep_active
					combined_sector_calm_tick_check = yes
				}
				sector_capital = { set_variable = { which = sec_calm_tick value = 1 } }
			}
		}
		else_if = {
			limit = {
				any_owned_sector = {
					has_sector_flag = sector_sep_active
					sector_capital = { check_variable = { which = sec_calm_tick value < 36 } }
					combined_sector_calm_tick_check = yes
				}
			}
			every_owned_sector = {
				limit = {
					has_sector_flag = sector_sep_active
					sector_capital = { check_variable = { which = sec_calm_tick value < 36 } }
					combined_sector_calm_tick_check = yes
				}
				sector_capital = { change_variable = { which = sec_calm_tick value = 1 } }
			}
		}
		
	}
}

country_event = { # Sectoral Decrease calm counter on stability decrease after separatists appear
	id = civsep.1110
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = { combined_sector_calm_retick_check = yes }
	}

	immediate = {
		every_owned_sector = {
			limit = { combined_sector_calm_retick_check = yes }
			sector_capital = { subtract_variable = { which = calm_tick value = 1 } }
		}
	}
}

######################
# Create Separatists #
######################

planet_event = { # Create First Separatists
	id = civsep.2000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_capital = no
	}

	immediate = {
		get_separatist_faction_planet = yes

		if = {
			limit = {
				count_owned_pop = {
					limit = {
						can_think = yes
						pop_has_happiness = yes
					}
					count <= 10
				}
			}
			if = {
				limit = {
					count_owned_pop = {
						limit = {
							can_think = yes
							pop_has_happiness = yes
						}
						count = 3
					}
				}
				random_list = {
					60 = {
						while = {
							count = 2
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					40 = {
						while = {
							count = 3
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					count_owned_pop = {
						limit = { can_think = yes }
						count = 4
					}
				}
				random_list = {
					50 = {
						while = {
							count = 2
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					30 = {
						while = {
							count = 3
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					20 = {
						while = {
							count = 4
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					count_owned_pop = {
						limit = { can_think = yes }
						count = 5
					}
				}
				random_list = {
					40 = {
						while = {
							count = 2
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					30 = {
						while = {
							count = 3
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					20 = {
						while = {
							count = 4
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 5
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					count_owned_pop = {
						limit = { can_think = yes }
						count = 6
					}
				}
				random_list = {
					30 = {
						while = {
							count = 2
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					30 = {
						while = {
							count = 3
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					20 = {
						while = {
							count = 4
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 5
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 6
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					count_owned_pop = {
						limit = { can_think = yes }
						count = 7
					}
				}
				random_list = {
					25 = {
						while = {
							count = 2
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					25 = {
						while = {
							count = 3
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					20 = {
						while = {
							count = 4
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 5
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 6
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 7
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					count_owned_pop = {
						limit = { can_think = yes }
						count = 8
					}
				}
				random_list = {
					25 = {
						while = {
							count = 2
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					25 = {
						while = {
							count = 3
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					20 = {
						while = {
							count = 4
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 5
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 6
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 7
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 8
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					count_owned_pop = {
						limit = { can_think = yes }
						count = 9
					}
				}
				random_list = {
					20 = {
						while = {
							count = 2
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					25 = {
						while = {
							count = 3
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					20 = {
						while = {
							count = 4
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 5
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 6
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 7
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 8
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 9
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					count_owned_pop = {
						limit = { can_think = yes }
						count = 10
					}
				}
				random_list = {
					20 = {
						while = {
							count = 2
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					20 = {
						while = {
							count = 3
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					20 = {
						while = {
							count = 4
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 5
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					10 = {
						while = {
							count = 6
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 7
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 8
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 9
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
					5 = {
						while = {
							count = 10
							random_owned_pop = {
								limit = { pop_can_be_separatist_gen = yes }
								set_pop_flag = sep_pop
							}
						}
					}
				}
			}
		}

		else = {

			set_variable = { which = num_sep_pops value = 0 }
			set_variable = { which = sep_pop_percentage value = 0 }

			every_owned_pop = {
				limit = {
					can_think = yes
					pop_has_happiness = yes
				}
				prev = { change_variable = { which = num_sep_pops value = 1 } }
			}

			random_list = {
				40 = { set_variable = { which = sep_pop_percentage value = 0.2 } }
				30 = { set_variable = { which = sep_pop_percentage value = 0.3 } }
				10 = { set_variable = { which = sep_pop_percentage value = 0.4 } }
				10 = { set_variable = { which = sep_pop_percentage value = 0.5 } }
				5 = { set_variable = { which = sep_pop_percentage value = 0.6 } }
				5 = { set_variable = { which = sep_pop_percentage value = 0.7 } }
			}

			multiply_variable = { which = num_sep_pops value = sep_pop_percentage }
			ceiling_variable = num_sep_pops

			while = {
				count = num_sep_pops
				random_owned_pop = {
					limit = { pop_can_be_separatist_gen = yes }
					set_pop_flag = sep_pop
				}
			}

			clear_variable = num_sep_pops
			clear_variable = sep_pop_percentage
		}
	}
}

country_event = { # Create More Separatists Yearly Initializer
	id = civsep.2010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_planet = {
			OR = {
				has_planet_flag = plan_sep_active
				AND = {
					exists = sector
					sector = { has_sector_flag = sector_sep_active }
				}
			}
			any_owned_pop = { NOT = { has_pop_flag = sep_pop } }
		}
	}

	immediate = {

		every_owned_planet = {
			limit = {
				has_planet_flag = plan_sep_active
				any_owned_pop = { NOT = { has_pop_flag = sep_pop } }
			}
			planet_event = { id = civsep.2015 days = 1 random = 359 }
		}
	}
}

planet_event = { # Create Separatists Yearly Event
	id = civsep.2015
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_planet_flag = plan_sep_active
			AND = {
				exists = sector
				sector = { has_sector_flag = sector_sep_active }
			}
		}
		any_owned_pop = {
			happiness <= 65
			pop_can_be_separatist_gen = yes
		}
	}

	immediate = {

		set_variable = { which = num_sep_pops value = 0 }

		every_owned_pop = {
			limit = { pop_can_be_separatist_gen = yes }
			prev = { change_variable = { which = num_sep_pops value = 1 } }
		}

		while = {
			count = num_sep_pops
			random_owned_pop = {
				limit = { pop_can_be_separatist_gen = yes }
				if = {
					limit = {
						happiness <= 65
						happiness > 50
					}
					random = { chance = 25 set_pop_flag = sep_pop }
				}
				else_if = {
					limit = {
						happiness <= 50
						happiness > 40
					}
					random = { chance = 40 set_pop_flag = sep_pop }
				}
				else_if = {
					limit = {
						happiness <= 40
						happiness > 30
					}
					random = { chance = 50 set_pop_flag = sep_pop }
				}
				else_if = {
					limit = {
						happiness <= 30
						happiness > 20
					}
					random = { chance = 60 set_pop_flag = sep_pop }
				}
				else_if = {
					limit = {
						happiness <= 20
						happiness > 10
					}
					random = { chance = 70 set_pop_flag = sep_pop }
				}
				else_if = {
					limit = {
						happiness <= 10
					}
					random = { chance = 80 set_pop_flag = sep_pop }
				}
			}
		}
	}
}

country_event = { # Remove Separatists Yearly Initializer
	id = civsep.2100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_pop = {
			planet = {
				planet_stability >= 50
				OR = {
					NOT = { exists = sector }
					AND = {
						exists = sector
						sector = {
							OR = {
								NOT = { exists = leader }
								AND = {
									exists = leader
									leader = { NOT = { has_trait = leader_trait_corrupt } }
								}
							}
						}
					}
				}
			}
			happiness > 70
			has_pop_flag = sep_pop
			is_enslaved = no
			is_being_purged = no
		}
	}

	immediate = {

		every_owned_pop = {
			limit = {
				planet = {
					planet_stability >= 50
					OR = {
						NOT = { exists = sector }
						AND = {
							exists = sector
							sector = {
								OR = {
									NOT = { exists = leader }
									AND = {
										exists = leader
										leader = { NOT = { has_trait = leader_trait_corrupt } }
									}
								}
							}
						}
					}
				}
				happiness > 70
				has_pop_flag = sep_pop
				is_enslaved = no
				is_being_purged = no
			}
			pop_event = { id = civsep.2105 days = 1 random = 359 }
		}
	}
}

pop_event = { # Remove Separatists Annually
	id = civsep.2105
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		planet = {
			planet_stability >= 50
			OR = {
				NOT = { exists = sector }
				AND = {
					exists = sector
					sector = {
						OR = {
							AND = {
								exists = leader
								leader = { NOT = { has_trait=  leader_trait_corrupt } }
							}
							NOT = { exists = leader }
						}
					}
				}
			}
		}
		happiness > 70
		has_pop_flag = sep_pop
		is_enslaved = no
		is_being_purged = no
	}

	immediate = {

		random = { chance = 60 remove_pop_flag = sep_pop }
	}
}

country_event = { # Create Separatists Corrupt Governor
	id = civsep.2200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_sector = {
			exists = leader
			leader = { has_trait = leader_trait_corrupt }
		}
	}

	immediate = {

		every_owned_sector = {
			limit = {
				exists = leader
				leader = { has_trait = leader_trait_corrupt }
			}
			every_owned_planet = {
				planet_event = { id = civsep.2210 days = 1 random = 359 }
			}
			if = {
				limit = {
					pop_percentage = {
						percentage >= 0.35
						limit = { has_pop_flag = sep_pop }
						exclude = { can_think = no }
					}
					pop_percentage = {
						percentage < 0.5
						limit = { has_pop_flag = sep_pop }
						exclude = { can_think = no }
					}
					NOT = {
						any_owned_planet = {
							OR = {
								has_ground_combat = yes
								solar_system = { is_capital_system = yes }
							}
						}
					}
				}
				random = {
					chance = 5
					owner = { country_event = { id = civsep.2215 days = 1 random = 359 } }
				}
			}
			else_if = {
				limit = {
					pop_percentage = {
						percentage >= 0.5
						limit = { has_pop_flag = sep_pop }
						exclude = { can_think = no }
					}
					NOT = {
						any_owned_planet = {
							OR = {
								has_ground_combat = yes
								solar_system = { is_capital_system = yes }
							}
						}
					}
				}
				random = {
					chance = 15
					owner = { country_event = { id = civsep.2215 days = 1 random = 359 } }
				}
			}
		}
	}
}

planet_event = { # Create Separatists Corrupt Yearly Event
	id = civsep.2210
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = sector
		sector = {
			exists = leader
			leader = { has_trait = leader_trait_corrupt }
		}
	}

	immediate = {

		set_variable = { which = num_sep_pops value = 0 }

		every_owned_pop = {
			limit = { has_pop_flag = sep_pop }
			prev = { change_variable = { which = num_sep_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_sep_pops value = 0 } }
			random_owned_pop = {
				limit = { pop_can_be_separatist_gen = yes }
				set_pop_flag = sep_pop
			}
		}

		else = {
			while = {
				count = num_sep_pops
				random_owned_pop = {
					limit = { pop_can_be_separatist_gen = yes }
					random = { chance = 15 set_pop_flag = sep_pop }
				}
			}
		}
	}
}

country_event = { # Corrupt Governor Launch Rebellion Event
	id = civsep.2215
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_sector = {
			exists = leader
			leader = { has_trait = leader_trait_corrupt }
			pop_percentage = {
				percentage >= 0.35
				limit = { has_pop_flag = sep_pop }
				exclude = { can_think = no }
			}
			NOT = {
				any_owned_planet = {
					OR = {
						has_ground_combat = yes
						solar_system = { is_capital_system = yes }
					}
				}
			}
		}
	}

	immediate = {

		random_owned_sector = {
			limit = {
				exists = leader
				leader = { has_trait = leader_trait_corrupt }
				pop_percentage = {
					percentage >= 0.4
					limit = { has_pop_flag = sep_pop }
					exclude = { can_think = no }
				}
				NOT = {
					any_owned_planet = {
						OR = {
							has_ground_combat = yes
							solar_system = { is_capital_system = yes }
						}
					}
				}
			}
			set_sector_flag = leader_sector
			leader = {
				set_leader_flag = civil_war_leader_governor_faction
				save_event_target_as = rebel_leader
				species = { save_event_target_as = civwar_species }
			}
			owner = {
				save_event_target_as = civwar_originator
				get_civil_war_number = yes
				country_event = { id = civwarcountry.1070 }
			}
			
			
		}
	}
}

#################
# Sector Events #
#################

country_event = { # Sector Separatist Party Form Check
	id = civsep.3000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = {
			NOT = { any_owned_planet = { is_capital = yes } }
			NOT = { has_sector_flag = sector_sep_active }
			NOT = { is_variable_set = isolated_sector_year }
			any_owned_planet = { has_planet_flag = plan_sep_active }
			OR = {
				AND = {
					has_sector_flag = frontier_sector_@root
					pop_percentage = {
						percentage >= 0.3
						limit = { has_pop_flag = sep_pop }
						exclude = { can_think = no }
					}
				}
				AND = {
					has_sector_flag = integrated_sector_@root
					pop_percentage = {
						percentage >= 0.4
						limit = { has_pop_flag = sep_pop }
						exclude = { can_think = no }
					}
				}
				AND = {
					has_sector_flag = fundamental_sector_@root
					pop_percentage = {
						percentage >= 0.5
						limit = { has_pop_flag = sep_pop }
						exclude = { can_think = no }
					}
				}
			}
		}
	}

	immediate = {

		every_owned_sector = {
			limit = {
				NOT = { any_owned_planet = { is_capital = yes } }
				NOT = { has_sector_flag = sector_sep_active }
				any_owned_planet = { has_planet_flag = plan_sep_active }
				OR = {
					AND = {
						has_sector_flag = frontier_sector_@root
						pop_percentage = {
							percentage >= 0.3
							limit = { has_pop_flag = sep_pop }
							exclude = { can_think = no }
						}
					}
					AND = {
						has_sector_flag = integrated_sector_@root
						pop_percentage = {
							percentage >= 0.4
							limit = { has_pop_flag = sep_pop }
							exclude = { can_think = no }
						}
					}
					AND = {
						has_sector_flag = fundamental_sector_@root
						pop_percentage = {
							percentage >= 0.5
							limit = { has_pop_flag = sep_pop }
							exclude = { can_think = no }
						}
					}
				}
			}
			get_separatist_faction_sector = yes
		}
	}
}

country_event = { # Find isolated sectors
	id = civsep.3100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
	}

	immediate = {

		capital_scope.solar_system = {
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = "Lonely Sector Check Ship"
						design = "NAME_AI_Constructor"
						graphical_culture = owner
					}
					set_location = {
						target = root.capital_scope
						distance = 10
						angle = random
					}
					save_event_target_as = access_checker_fleet
				}
			}
		}

		every_owned_sector = {
			limit = { any_owned_planet = { is_capital = no } } # Dont need to check the capital
			if = {
				limit = {
					OR = {
						root = { has_technology = tech_jump_drive_1 }
						root = { has_technology = tech_psi_jump_drive_1 }
						any_system_within_border = {
							event_target:access_checker_fleet = { can_access_system = prev }
						}
					}
				}
				set_sector_flag = can_access_capital
			}
			else = {
				if = {
					limit = { NOT = { is_variable_set = isolated_sector_year } }
					set_variable = { which = isolated_sector_year value = 1 }
				}
				else = {
					change_variable = { which = isolated_sector_year value = 1 }
				}
			}
		}

		if = {	# After being connected, remove lonely sector variables. Look further into this, and make it such that the time is dependent on how long the sector was isolated
			limit = {
				any_owned_sector = {
					has_sector_flag = can_access_capital
					is_variable_set = isolated_sector_year
				}
			}
			every_owned_sector = {
				limit = {
					has_sector_flag = can_access_capital
					is_variable_set = isolated_sector_year
				}
				clear_variable = isolated_sector_year
				if = {
					limit = { has_sector_flag = sector_sep_active }
					remove_sector_flag = sector_sep_active
					save_event_target_as = separatists_disband_sector
					root = { country_event = { id = civsep.9016 } }
				}
			}
		}

		every_owned_sector = {
			limit = { has_sector_flag = can_access_capital }
			remove_sector_flag = can_access_capital
		}

		event_target:access_checker_fleet = { destroy_fleet = this }
	}

	after = {
		if = {
			limit = {
				any_owned_sector = {
					NOT = { has_sector_flag = sector_sep_active }
					is_variable_set = isolated_sector_year
					check_variable = { which = isolated_sector_year value >= 5 }
				}
			}
			country_event = { id = civsep.3110 }
		}
	}
}

country_event = { # Start Isolated Sector Chains
	id = civsep.3110
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_sector = {
			NOT = { has_sector_flag = sector_sep_active }
			is_variable_set = isolated_sector_year
			check_variable = { which = isolated_sector_year value >= 5 }
		}
	}

	immediate = {
		every_owned_sector = {
			limit = {
				NOT = { has_sector_flag = sector_sep_active }
				is_variable_set = isolated_sector_year
				check_variable = { which = isolated_sector_year value >= 5 }
			}
			if = {
				limit = {
					check_variable = { which = isolated_sector_year value >= 5 }
					check_variable = { which = isolated_sector_year value < 10 }
				}
				random = {
					chance = 15
					get_iso_separatist_faction_sector = yes
				}
			}
			else_if = {
				limit = {
					check_variable = { which = isolated_sector_year value >= 10 }
					check_variable = { which = isolated_sector_year value < 15 }
				}
				random = {
					chance = 20
					get_iso_separatist_faction_sector = yes
				}
			}
			else_if = {
				limit = {
					check_variable = { which = isolated_sector_year value >= 15 }
					check_variable = { which = isolated_sector_year value < 20 }
				}
				random = {
					chance = 25
					get_iso_separatist_faction_sector = yes
				}
			}
			else_if = {
				limit = { check_variable = { which = isolated_sector_year value >= 20 } }
				random = {
					chance = 30
					get_iso_separatist_faction_sector = yes
				}
			}
		}
	}
}

####################
# Situation Events #
####################

country_event = { # Check disapproving Factions every month
	id = civsep.4000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_regular_empire = yes
		years_passed >= 15
		any_pop_faction = {
			count_owned_pop = { count >= 5 }
			is_separatist_faction = yes
			NOT = { has_pop_faction_flag = faction_rebelled }
			NOT = { has_pop_faction_flag = faction_sep_situation }
			OR = {
				NOT = { exists = leader }
				AND = {
					leader = { is_heir = no }
					is_iso_sector_separatist_faction = no
				}
				is_iso_sector_separatist_faction = yes
			}
		}
	}

	immediate = {
		random_pop_faction = {
			limit = {
				count_owned_pop = { count >= 5 }
				is_separatist_faction = yes
				NOT = { has_pop_faction_flag = faction_rebelled }
				NOT = { has_pop_faction_flag = faction_sep_situation }
				OR = {
					NOT = { exists = leader }
					AND = {
						leader = { is_heir = no }
						is_iso_sector_separatist_faction = no
					}
					is_iso_sector_separatist_faction = yes
				}
			}
			if = {
				limit = {
					has_pop_faction_flag = plan_faction
					NOT = { any_owned_pop = { planet = { has_planet_flag = rebellion_suppressed } } }
				}
				set_pop_faction_flag = faction_sep_situation
				owner = {
					start_situation = {
						type = situation_civstrife_faction_sep_plan
						target = prev
					}
				}
			}
			else_if = {
				limit = {
					has_pop_faction_flag = sector_faction
					NOT = { any_owned_pop = { sector.sector_capital = { has_planet_flag = rebellion_suppressed } } }
				}
				set_pop_faction_flag = faction_sep_situation
				owner = {
					start_situation = {
						type = situation_civstrife_faction_sep_sec
						target = prev
					}
				}
			}
			else_if = {
				limit = {
					has_pop_faction_flag = iso_sector_faction
					NOT = { any_owned_pop = { sector.sector_capital = { has_planet_flag = rebellion_suppressed } } }
				}
				set_pop_faction_flag = faction_sep_situation
				owner = {
					start_situation = {
						type = situation_civstrife_faction_iso_sep_sec
						target = prev
					}
				}
			}
		}
	}
}

situation_event = { # Spread Separatists Every Month
	id = civsep.4010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			current_stage = reb_situation_2
			situation_progress >= 90
		}
		target = {
			any_owned_pop = {
				planet = {
					any_owned_pop = {
						happiness <= 60
						NOT = { has_pop_flag = sep_pop }
					}
				}
			}
		}
	}

	immediate = {
		target = {

			set_variable = {
				which = maybe_seps
				value = trigger:num_pops
			}

			if = {
				limit = { root = { current_situation_approach = approach_pr_campaign } }
				random_list = {
					50 = { multiply_variable = { which = maybe_seps value = 0.01 } }
					30 = { multiply_variable = { which = maybe_seps value = 0.02 } }
					20 = { multiply_variable = { which = maybe_seps value = 0.03 } }
				}
			}
			else_if = {
				limit = { root = { current_situation_approach = approach_faction_repression } }
				random_list = {
					70 = { multiply_variable = { which = maybe_seps value = 0.01 } }
					30 = { multiply_variable = { which = maybe_seps value = 0.02 } }
				}
			}
			else = {
				random_list = {
					40 = { multiply_variable = { which = maybe_seps value = 0.01 } }
					30 = { multiply_variable = { which = maybe_seps value = 0.02 } }
					15 = { multiply_variable = { which = maybe_seps value = 0.03 } }
					10 = { multiply_variable = { which = maybe_seps value = 0.04 } }
					5 = { multiply_variable = { which = maybe_seps value = 0.05 } }
				}
			}

			ceiling_variable = maybe_seps # At least one pop

			set_variable = { which = gen_sep_chance value = 1 }

			subtract_variable = {
				which = gen_sep_chance
				value = trigger:faction_approval
			}

			divide_variable = { which = gen_sep_chance value = 2 }

			multiply_variable = { which = gen_sep_chance value = 100 }

			owner = {
				while = {
					count = root.target.maybe_seps
					random_owned_pop = {
						limit = {
							has_pop_flag = sep_pop
							exists = pop_faction
							pop_faction = { is_same_value = root.target }
							planet = {
								any_owned_pop = { NOT = { has_pop_flag = sep_pop } }
							}
						}
						planet = {
							ordered_owned_pop = {
								limit = {
									happiness <= 60
									NOT = { has_pop_flag = sep_pop }
								}
								position = 0
								order_by = trigger:happiness
								inverse = yes
								random = {
									chance = root.target.gen_sep_chance
									set_pop_flag = sep_pop
								}
							}
						}
					}
				}
			}

			set_variable = { which = gen_sep_upkeep value = 0 }
			every_owned_pop = {
				limit = { has_pop_flag = sep_pop }
				prev = { change_variable = { which = gen_sep_upkeep value = 1 } }
			}
		}
	}
}

situation_event = { # Planetary Revolt Initializer
	id = civsep.4100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		situation_progress >= 90
		owner = {
			any_owned_planet = {
				is_under_colonization = no
				is_capital = no
				has_ground_combat = no
				is_occupied_flag = no
				pop_percentage = {
					percentage >= 0.25
					limit = {
						exists = pop_faction
						pop_faction = {
							exists = leader
							is_same_value = root.target
						}
					}
					exclude = { can_think = no }
				}
			}
		}
	}

	immediate = {
		situation_event = { id = civsep.4110 days = 1 random = 29 }
	}
}

situation_event = { # Planetary Revolt Event
	id = civsep.4110
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		situation_progress >= 90
		owner = {
			any_owned_planet = {
				is_under_colonization = no
				is_capital = no
				has_ground_combat = no
				is_occupied_flag = no
				pop_percentage = {
					percentage >= 0.25
					# percentage > 0
					limit = {
						exists = pop_faction
						pop_faction = {
							exists = leader
							is_same_value = root.target
						}
					}
					exclude = { can_think = no }
				}
			}
		}
		root.target = {
			OR = {
				NOT = { exists = leader }
				leader = { is_heir = no }
			}
		}
	}

	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					is_under_colonization = no
					is_capital = no
					has_ground_combat = no
					is_occupied_flag = no
					pop_percentage = {
						percentage >= 0.25
						# percentage > 0
						limit = {
							exists = pop_faction
							pop_faction = {
								exists = leader
								is_same_value = root.target
							}
						}
						exclude = { can_think = no }
					}
				}
				
				random = {
					chance = 10
					# chance = 100
					root.target = {
						set_timed_pop_faction_flag = { flag = faction_rebelled years = 5 }
						set_variable = { which = fac_mil_support value = 0 }
						save_event_target_as = civwar_party
					}
					owner = { create_party_name_leader = yes }
					every_owned_pop = {
						limit = {
							exists = pop_faction
							pop_faction = { is_same_value = root.target }
						}
						root.target = { change_variable = { which = fac_mil_support value = 1 } }
					}
					solar_system = { set_timed_star_flag = { flag = civwar_planet months = 3 } }
					save_event_target_as = civil_war_planet
					set_planet_flag = sep_planet_rebellion
					set_timed_planet_flag = { flag = recent_sep_rebellion years = 2 }
					save_event_target_as = rebellion_planet
					get_separatist_war_leader = yes
					get_gen_plan_rebels = yes
					root = { situation_event = { id = civsep.9020 } }
				}
			}
		}
	}
}

situation_event = { # Sectoral Revolt Initializer
	id = civsep.4200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		situation_progress >= 90
		owner = {
			any_owned_sector = {
				NOT = {
					any_owned_planet = {
						is_under_colonization = no
						OR = {
							is_capital = yes
							has_ground_combat = yes
							is_occupied_flag = yes
						}
					}
				}
				pop_percentage = {
					percentage >= 0.25
					limit = {
						exists = pop_faction
						pop_faction = {
							exists = leader
							is_same_value = root.target
						}
					}
					exclude = { can_think = no }
				}
			}
		}
		root.target = {
			OR = {
				NOT = { exists = leader }
				AND = {
					leader = { is_heir = no }
					is_iso_sector_separatist_faction = no
				}
				is_iso_sector_separatist_faction = yes
			}
		}
	}

	immediate = {
		situation_event = { id = civsep.4210 days = 1 random = 29 }
	}
}

situation_event = { # Sectoral Revolt Event
	id = civsep.4210
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		situation_progress >= 90
		owner = {
			any_owned_sector = {
				NOT = {
					any_owned_planet = {
						is_under_colonization = no
						OR = {
							is_capital = yes
							has_ground_combat = yes
							is_occupied_flag = yes
						}
					}
				}
				pop_percentage = {
					percentage >= 0.25
					# percentage > 0
					limit = {
						exists = pop_faction
						pop_faction = {
							exists = leader
							is_same_value = root.target
						}
					}
					exclude = { can_think = no }
				}
			}
		}
	}

	immediate = {

		if = {
			limit = { root.target = { is_iso_sector_separatist_faction = no } }
			owner = {
				random_owned_sector = {
					limit = {
						NOT = {
							any_owned_planet = {
								is_under_colonization = no
								OR = {
									is_capital = yes
									has_ground_combat = yes
									is_occupied_flag = yes
								}
							}
						}
						pop_percentage = {
							percentage >= 0.25
							# percentage > 0
							limit = {
								exists = pop_faction
								pop_faction = {
									exists = leader
									is_same_value = root.target
								}
							}
							exclude = { can_think = no }
						}
					}

					random = {
						chance = 10
						# chance = 100
						root.target = {
							set_timed_pop_faction_flag = { flag = faction_rebelled years = 5 }
							set_variable = { which = fac_mil_support value = 0 }
							save_event_target_as = civwar_party
						}
						every_owned_planet = {
							every_owned_pop = {
								limit = {
									exists = pop_faction
									pop_faction = { is_same_value = root.target }
								}
								root.target = { change_variable = { which = fac_mil_support value = 1 } }
							}
						}
						sector_capital = {
							save_event_target_as = civil_war_planet
							owner = { create_party_name_leader = yes }
							get_separatist_war_leader = yes
							set_planet_flag = sep_sector_rebellion
							get_sectoral_reb_number = yes
							get_gen_sec_rebels = yes
						}
						set_sector_flag = sep_sector_rebellion_@event_target:civil_war_planet
						save_event_target_as = sector_name_local
						owner = { # Create a dummy leader to save the sector name for localisation, killed in comms cleanup
							create_leader = {
								class = ruler
								event_leader = yes
								species = owner_main_species
								name = random
								effect = {
									set_name = {
										key = dummy_sector_leader
										variable_string = "[event_target:sector_name_local.GetName]"
									}
									set_leader_flag = dummy_leader
									set_leader_flag = dummy_sector_leader
									set_leader_flag = dummy_sector_leader_@event_target:civil_war_planet
								}
							}
						}
						root = { situation_event = { id = civsep.9030 } }
					}
				}
			}
		}
		else = {
			owner = {
				if = {
					limit = { root.target = { exists = leader } }
					root.target.leader = {
						set_leader_flag = leader_civil_war_faction
						set_leader_flag = leader_civil_war_isolated
						set_leader_flag = situation_leader_@root
						species = { save_event_target_as = civwar_species }
						if = {
							limit = { has_leader_flag = appointed_heir }
							set_leader_flag = civil_war_leader_heir_isolated
						}
						else_if = {
							limit = { leader_class = governor }
							set_leader_flag = civil_war_leader_governor_isolated
						}
						else_if = {
							limit = { leader_class = admiral }
							set_leader_flag = civil_war_leader_admiral_isolated
						}
						else_if = {
							limit = { leader_class = general }
							set_leader_flag = civil_war_leader_general_isolated
						}
						else_if = {
							limit = { leader_class = scientist }
							set_leader_flag = civil_war_leader_scientist_isolated
						}
					}
				}
				else = { # Create random leader if none exist, should be rare
					root.target = {
						random_owned_pop = {
							species = { save_global_event_target_as = civwar_species }
						}
					}
					owner = {
						create_leader = {
							class = ruler
							species = event_target:civwar_species
							name = random
							skill = 5
							traits = { trait = trait_ruler_deep_connections }
							effect = {
								set_leader_flag = leader_for_@event_target:civil_war_planet
								set_leader_flag = new_isolated_sector_ruler
								set_leader_flag = leader_civil_war_faction
								set_leader_flag = situation_leader_@root
							}
						}
					}
				}

				random_owned_leader = {
					limit = {
						has_leader_flag = leader_civil_war_faction
						exists = pop_faction
						pop_faction = { is_same_value = root.target } # Just in case
					}
					pop_faction = { save_event_target_as = civwar_party } # I Imagine this should stay past the first loop
					save_event_target_as = rebel_leader
				}

				create_party_name_leader = yes
				last_created_leader = { leader_event = { id = civleader.1000 days = 720 } }

				save_event_target_as = civwar_originator

				random_owned_sector = {
					limit = {
						pop_percentage = {
							percentage >= 0.25
							# percentage > 0
							limit = {
								exists = pop_faction
								pop_faction = { is_same_value = root.target }
							}
							exclude = { can_think = no }
						}
						NOT = {
							any_owned_planet = {
								OR = {
									has_ground_combat = yes
									solar_system = { is_capital_system = yes }
								}
							}
						}
					}
					sector_capital = {
						get_sectoral_reb_number = yes
						save_event_target_as = civil_war_planet
					}
					set_sector_flag = leader_sector
					set_sector_flag = rebel_sector_@this
					save_event_target_as = sector_name_local
					create_sector_name_leader = yes
					save_event_target_as = leading_iso_sector
				}

				if = {
					limit = {
						any_owned_sector = {
							is_variable_set = isolated_sector_year
							any_system_within_border = {
								closest_system = {
									limit = {
										exists = sector
										sector = { has_sector_flag = rebel_sector_@event_target:leading_iso_sector }
									}
									use_bypasses = yes
									max_steps = 1
								}
							}
						}
					}
					while = {
						count = 10 # Maybe I should make this more precise
						every_owned_sector = {
							limit = {
								NOT = { has_sector_flag = counted_sector }
								is_variable_set = isolated_sector_year
								any_system_within_border = {
									closest_system = {
										limit = {
											exists = sector
											sector = { is_same_value = event_target:leading_iso_sector }
										}
										use_bypasses = yes
										max_steps = 1
									}
								}
							}
							set_sector_flag = counted_sector
							set_sector_flag = rebel_sector_follower_@event_target:leading_iso_sector
						}
					}
				}

				event_target:leading_iso_sector = {
					save_event_target_as = sector_name_local
				}

				create_leader = {
					class = ruler
					event_leader = yes
					species = owner_main_species
					name = random
					effect = {
						set_name = {
							key = dummy_sector_leader
							variable_string = "[event_target:sector_name_local.GetName]"
						}
						set_leader_flag = dummy_leader
						set_leader_flag = dummy_sector_leader
						save_global_event_target_as = sector_name_leader
					}
				}
				last_created_leader = {
					leader_event = { id = civleader.1000 days = 180 }
				}

				make_isolated_sector_country = yes
			}
		}
	}
}

situation_event = { # Isolated Sector Leader Check
	id = civsep.4500
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		target = {
			OR = {
				NOT = { exists = leader }
				leader = {
					NOT = { has_leader_flag = gen_iso_faction_leader }
					exists = solar_system
					solar_system = {
						exists = sector
						sector = {
							root.target = {
								any_owned_pop = {
									sector = { NOT = { is_same_value = prevprevprev } }
								}
							}
						}
					}
				}
				leader = {
					has_leader_flag = gen_iso_faction_leader
					owner = { any_owned_leader = { get_sector_leader_test = yes } }
				}
			}
		}
	}

	immediate = {

		if = {
			limit = { owner = { any_owned_leader = { get_sector_leader_test = yes } } }
			owner = {
				if = {
					limit = { any_owned_leader = { get_sector_leader_test = yes } }
					if = {
						limit = {
							any_owned_leader = {
								get_sector_leader_test = yes
								leader_class = governor
							}
						}
						random_owned_leader = {
							limit = {
								get_sector_leader_test = yes
								leader_class = governor
							}
							if = {
								limit = { leader_of_faction = yes }
								owner = { get_faction_leader_replace = yes }
							}
							root.target = { set_leader = prev }
						}
					}
					else_if = {
						limit = {
							any_owned_leader = {
								get_sector_leader_test = yes
								leader_class = admiral
							}
						}
						random_owned_leader = {
							limit = {
								get_sector_leader_test = yes
								leader_class = admiral
							}
							if = {
								limit = { leader_of_faction = yes }
								owner = { get_faction_leader_replace = yes }
							}
							root.target = { set_leader = prev }
						}
					}
					else_if = {
						limit = {
							any_owned_leader = {
								get_sector_leader_test = yes
								leader_class = general
							}
						}
						random_owned_leader = {
							limit = {
								get_sector_leader_test = yes
								leader_class = general
							}
							if = {
								limit = { leader_of_faction = yes }
								owner = { get_faction_leader_replace = yes }
							}
							root.target = { set_leader = prev }
						}
					}
					else_if = {
						limit = {
							any_owned_leader = {
								get_sector_leader_test = yes
								leader_class = scientist
							}
						}
						random_owned_leader = {
							limit = {
								get_sector_leader_test = yes
								leader_class = scientist
							}
							if = {
								limit = { leader_of_faction = yes }
								owner = { get_faction_leader_replace = yes }
							}
							root.target = { set_leader = prev }
						}
					}
				}
			}
		}
		else = {
			root.target = {
				random_owned_pop = {
					species = { save_event_target_as = new_leader_species }
				}
			}
			owner = {
				create_leader = {
					class = ruler
					species = event_target:new_leader_species
					name = random
					skill = 5
					leader_age_min = 25
					leader_age_max = 55
					traits = {
						trait = leader_trait_charismatic
						trait = trait_ruler_deep_connections
					}
					effect = {
						set_leader_flag = sep_leader
						set_leader_flag = gen_iso_faction_leader
						save_event_target_as = new_iso_faction_leader
					}
				}
			}
			root.target = { set_leader = event_target:new_iso_faction_leader }
		}
	}
}

################
# Slave Events #
################

country_event = { # Slave Unrest Counter
	id = civsep.5000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOT = { years_passed < 15 }
		any_owned_planet = {
			is_capital = no
			has_ground_combat = no
			is_occupied_flag = no
			num_pops > 0
			OR = {
				frontier_planet_slave_tick_check = yes
				integrated_planet_slave_tick_check = yes
				fundamental_planet_slave_tick_check = yes
			}
		}
		
	}

	immediate = {
		every_owned_planet = {
			limit = {
				is_capital = no
				has_ground_combat = no
				is_occupied_flag = no
				num_pops > 0
				OR = {
					frontier_planet_slave_tick_check = yes
					integrated_planet_slave_tick_check = yes
					fundamental_planet_slave_tick_check = yes
				}
			}
			if = {
				limit = {
					NOT = { is_variable_set = slave_revolt_tick }
					OR = {
						frontier_planet_slave_tick_check = yes
						integrated_planet_slave_tick_check = yes
						fundamental_planet_slave_tick_check = yes
					}
				}
				set_variable = { which = slave_revolt_tick value = 1 }
			}
			else_if = {
				limit = {
					OR = {
						AND = {
							frontier_planet_slave_tick_check = yes
							check_variable = { which = slave_revolt_tick value < 36 }
						}
						AND = {
							integrated_planet_slave_tick_check = yes
							check_variable = { which = slave_revolt_tick value < 60 }
						}
						AND = {
							fundamental_planet_slave_tick_check = yes
							check_variable = { which = slave_revolt_tick value < 120 }
						}
					}
				}
				change_variable = { which = slave_revolt_tick value = 1 }
			}
			else_if = {
				limit = {
					frontier_planet_slave_tick_check = yes
					check_variable = { which = slave_revolt_tick value = 36 }
				}
				planet_event = { id = civsep.5500 }
			}
			else_if = {
				limit = {
					integrated_planet_slave_tick_check = yes
					check_variable = { which = slave_revolt_tick value = 60 }
				}
				planet_event = { id = civsep.5500 }
			}
			else_if = {
				limit = {
					fundamental_planet_slave_tick_check = yes
					check_variable = { which = slave_revolt_tick value = 120 }
				}
				planet_event = { id = civsep.5500 }
			}
		}
	}
}

country_event = { # Slave Decrease unrest Counter
	id = civsep.5010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_planet = {
			num_pops > 0
			is_variable_set = slave_revolt_tick
			OR = {
				AND = {
					frontier_planet_slave_untick_check = yes
					check_variable = { which = slave_revolt_tick value < 36 }
				}
				AND = {
					integrated_planet_slave_untick_check = yes
					check_variable = { which = slave_revolt_tick value < 60 }
				}
				AND = {
					fundamental_planet_slave_untick_check = yes
					check_variable = { which = slave_revolt_tick value < 120 }
				}
			}
		}
		
	}

	immediate = {
		every_owned_planet = {
			limit = {
				num_pops > 0
				is_variable_set = slave_revolt_tick
				OR = {
					AND = {
						frontier_planet_slave_untick_check = yes
						check_variable = { which = slave_revolt_tick value < 36 }
					}
					AND = {
						integrated_planet_slave_untick_check = yes
						check_variable = { which = slave_revolt_tick value < 60 }
					}
					AND = {
						fundamental_planet_slave_untick_check = yes
						check_variable = { which = slave_revolt_tick value < 120 }
					}
				}
			}
			if = {
				limit = {
					check_variable = { which = slave_revolt_tick value = 1 }
					OR = {
						frontier_planet_slave_untick_check = yes
						integrated_planet_slave_untick_check = yes
						fundamental_planet_slave_untick_check = yes
					}
				}
				clear_variable = revolt_tick
			}
			else_if = {
				limit = {
					check_variable = { which = slave_revolt_tick value < 120 }
					check_variable = { which = slave_revolt_tick value > 0 }
					OR = {
						frontier_planet_slave_untick_check = yes
						integrated_planet_slave_untick_check = yes
						fundamental_planet_slave_untick_check = yes
					}
				}
				subtract_variable = { which = revolt_tick value = 1 }
			}
			else_if = {
				limit = {
					check_variable = { which = slave_revolt_tick value = 0 }
					OR = {
						frontier_planet_slave_untick_check = yes
						integrated_planet_slave_untick_check = yes
						fundamental_planet_slave_untick_check = yes
					}
				}
				clear_variable = slave_revolt_tick
			}
		}
	}
}

country_event = { # Slave Calm counter
	id = civsep.5020
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_planet = {
			num_pops > 0
			combined_planet_slave_calm_check = yes
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				num_pops > 0
				combined_planet_slave_calm_check = yes
			}
			if = {
				limit = {
					combined_planet_slave_calm_check = yes
					NOT = { is_variable_set = slave_calm_tick }
				}
				set_variable = { which = slave_calm_tick value = 1 }
			}
			else_if = {
				limit = {
					combined_planet_slave_calm_check = yes
					check_variable = { which = slave_calm_tick value < 24 }
				}
				change_variable = { which = slave_calm_tick value = 1 }
			}
			if = {
				limit = {
					frontier_planet_slave_untick_check = yes
					check_variable = { which = slave_calm_tick value >= 24 }
				}
				clear_variable = slave_calm_tick
				clear_variable = slave_revolt_tick
				remove_planet_flag = plan_slave_sep_active
				save_event_target_as = slaves_disband_planet
				planet_event = { id = civsep.9006 }
			}
			else_if = {
				limit = {
					integrated_planet_slave_untick_check = yes
					check_variable = { which = slave_calm_tick value >= 12 }
				}
				clear_variable = slave_calm_tick
				clear_variable = slave_revolt_tick
				remove_planet_flag = plan_slave_sep_active
				save_event_target_as = slaves_disband_planet
				planet_event = { id = civsep.9006 }
			}
			else_if = {
				limit = {
					fundamental_planet_slave_untick_check = yes
					check_variable = { which = slave_calm_tick value >= 6 }
				}
				clear_variable = slave_calm_tick
				clear_variable = slave_revolt_tick
				remove_planet_flag = plan_slave_sep_active
				save_event_target_as = slaves_disband_planet
				planet_event = { id = civsep.9006 }
			}
		}
	}
}

country_event = { # Slave Decrease Calm counter
	id = civsep.5030
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_planet = { combined_planet_slave_calm_retick_check = yes }
		
	}

	immediate = {
		every_owned_planet = {
			limit = { combined_planet_slave_calm_retick_check = yes }
			subtract_variable = { which = slave_calm_tick value = 1 }
		}
	}
}

country_event = { # Sectoral Slave Situation Form Check
	id = civsep.5100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = {
			NOT = { any_owned_planet = { is_capital = yes } }
			NOT = { has_sector_flag = sec_slave_sep_active }
			any_owned_planet = { has_planet_flag = plan_slave_sep_active }
			OR = {
				AND = {
					has_sector_flag = frontier_sector_@root
					pop_percentage = {
						percentage >= 0.3
						limit = {
							is_enslaved_or_purged = yes
							happiness < 60
						}
						exclude = { can_think = no }
					}
				}
				AND = {
					has_sector_flag = integrated_sector_@root
					pop_percentage = {
						percentage >= 0.4
						limit = {
							is_enslaved_or_purged = yes
							happiness < 60
						}
						exclude = { can_think = no }
					}
				}
				AND = {
					has_sector_flag = fundamental_sector_@root
					pop_percentage = {
						percentage >= 0.5
						limit = {
							is_enslaved_or_purged = yes
							happiness < 60
						}
						exclude = { can_think = no }
					}
				}
			}
		}
	}

	immediate = {

		every_owned_sector = {
			limit = {
				NOT = { any_owned_planet = { is_capital = yes } }
				NOT = { has_sector_flag = sec_slave_sep_active }
				any_owned_planet = { has_planet_flag = plan_slave_sep_active }
				OR = {
					AND = {
						has_sector_flag = frontier_sector_@root
						pop_percentage = {
							percentage >= 0.3
							limit = {
								is_enslaved_or_purged = yes
								happiness < 60
							}
							exclude = { can_think = no }
						}
					}
					AND = {
						has_sector_flag = integrated_sector_@root
						pop_percentage = {
							percentage >= 0.4
							limit = {
								is_enslaved_or_purged = yes
								happiness < 60
							}
							exclude = { can_think = no }
						}
					}
					AND = {
						has_sector_flag = fundamental_sector_@root
						pop_percentage = {
							percentage >= 0.5
							limit = {
								is_enslaved_or_purged = yes
								happiness < 60
							}
							exclude = { can_think = no }
						}
					}
				}
			}
			every_owned_planet = {
				limit = { has_planet_flag = plan_slave_sep_active }
				remove_planet_flag = plan_slave_sep_active
				clear_variable = slave_revolt_tick
				if = {
					limit = { is_variable_set = slave_calm_tick }
					clear_variable = slave_calm_tick
				}
			}
			set_sector_flag = sec_slave_sep_active
			save_event_target_as = slave_sep_sector
			owner = {
				country_event = { id = civsep.9200 }
				start_situation = {
					type = situation_civstrife_sep_slaves_sec
					target = event_target:slave_sep_sector
					effect = {
						save_event_target_as = new_situation
						set_situation_flag = slave_revolt_sec
					}
				}
			}
		}
	}
}

country_event = { # Sectoral Slave Calm counter on stability increase and remove separatists
	id = civsep.5110
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = {
			has_sector_flag = sec_slave_sep_active
			OR = {
				AND = {
					has_sector_flag = frontier_sector_@root
					NOT = {
						any_owned_planet = {
							planet_stability <= 25
							any_owned_pop = { is_enslaved_or_purged = yes }
						}
					}
				}
				AND = {
					has_sector_flag = integrated_sector_@root
					NOT = {
						any_owned_planet = {
							planet_stability <= 20
							any_owned_pop = { is_enslaved_or_purged = yes }
						}
					}
				}
				AND = {
					has_sector_flag = fundamental_sector_@root
					NOT = {
						any_owned_planet = {
							planet_stability <= 15
							any_owned_pop = { is_enslaved_or_purged = yes }
						}
					}
				}	
			}
		}
	}

	immediate = {

		if = {
			limit = {
				any_owned_sector = {
					sector_capital = { NOT = { is_variable_set = sec_slave_calm_tick } }
					has_sector_flag = sec_slave_sep_active
					OR = {
						AND = {
							has_sector_flag = frontier_sector_@root
							NOT = {
								any_owned_planet = {
									planet_stability <= 25
									any_owned_pop = { is_enslaved_or_purged = yes }
								}
							}
						}
						AND = {
							has_sector_flag = integrated_sector_@root
							NOT = {
								any_owned_planet = {
									planet_stability <= 20
									any_owned_pop = { is_enslaved_or_purged = yes }
								}
							}
						}
						AND = {
							has_sector_flag = fundamental_sector_@root
							NOT = {
								any_owned_planet = {
									planet_stability <= 15
									any_owned_pop = { is_enslaved_or_purged = yes }
								}
							}
						}	
					}
				}
			}
			every_owned_sector = {
				limit = {
					sector_capital = { NOT = { is_variable_set = sec_slave_calm_tick } }
					has_sector_flag = sec_slave_sep_active
					OR = {
						AND = {
							has_sector_flag = frontier_sector_@root
							NOT = {
								any_owned_planet = {
									planet_stability <= 25
									any_owned_pop = { is_enslaved_or_purged = yes }
								}
							}
						}
						AND = {
							has_sector_flag = integrated_sector_@root
							NOT = {
								any_owned_planet = {
									planet_stability <= 20
									any_owned_pop = { is_enslaved_or_purged = yes }
								}
							}
						}
						AND = {
							has_sector_flag = fundamental_sector_@root
							NOT = {
								any_owned_planet = {
									planet_stability <= 15
									any_owned_pop = { is_enslaved_or_purged = yes }
								}
							}
						}	
					}
				}
				sector_capital = { set_variable = { which = sec_slave_calm_tick value = 1 } }
			}
		}
		else_if = {
			limit = {
				any_owned_sector = {
					has_sector_flag = sec_slave_sep_active
					OR = {
						AND = {
							has_sector_flag = frontier_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value < 30 } }
							NOT = { any_owned_planet = { planet_stability <= 25 } }
						}
						AND = {
							has_sector_flag = integrated_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value < 18 } }
							NOT = { any_owned_planet = { planet_stability <= 20 } }
						}
						AND = {
							has_sector_flag = fundamental_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value < 8 } }
							NOT = { any_owned_planet = { planet_stability <= 15 } }
						}
					}
				}
			}
			every_owned_sector = {
				limit = {
					has_sector_flag = sec_slave_sep_active
					OR = {
						AND = {
							has_sector_flag = frontier_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value < 30 } }
							NOT = { any_owned_planet = { planet_stability <= 25 } }
						}
						AND = {
							has_sector_flag = integrated_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value < 18 } }
							NOT = { any_owned_planet = { planet_stability <= 20 } }
						}
						AND = {
							has_sector_flag = fundamental_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value < 8 } }
							NOT = { any_owned_planet = { planet_stability <= 15 } }
						}
					}
				}
				sector_capital = { change_variable = { which = sec_slave_calm_tick value = 1 } }
			}
		}
		else_if = {
			limit = {
				any_owned_sector = {
					has_sector_flag = sec_slave_sep_active
					OR = {
						AND = {
							has_sector_flag = frontier_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value >= 30 } }
							NOT = { any_owned_planet = { planet_stability <= 30 } }
						}
						AND = {
							has_sector_flag = integrated_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value >= 18 } }
							NOT = { any_owned_planet = { planet_stability <= 25 } }
						}
						AND = {
							has_sector_flag = fundamental_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value >= 8 } }
							NOT = { any_owned_planet = { planet_stability <= 20 } }
						}	
					}
				}
			}
			every_owned_sector = {
				limit = {
					has_sector_flag = sec_slave_sep_active
					OR = {
						AND = {
							has_sector_flag = frontier_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value >= 30 } }
							NOT = { any_owned_planet = { planet_stability <= 30 } }
						}
						AND = {
							has_sector_flag = integrated_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value >= 18 } }
							NOT = { any_owned_planet = { planet_stability <= 25 } }
						}
						AND = {
							has_sector_flag = fundamental_sector_@root
							sector_capital = { check_variable = { which = sec_slave_calm_tick value >= 8 } }
							NOT = { any_owned_planet = { planet_stability <= 20 } }
						}	
					}
				}
				sector_capital = { clear_variable = sec_slave_calm_tick }
				remove_sector_flag = sec_slave_sep_active
				save_event_target_as = slave_disband_sector
				owner = { country_event = { id = civsep.9017 } }
			}
		}
	}
}

country_event = { # Sectoral Slave Decrease calm counter on stability decrease after separatists appear
	id = civsep.5120
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = { combined_sector_slave_calm_retick_check = yes }
	}

	immediate = {
		every_owned_sector = {
			limit = { combined_sector_slave_calm_retick_check = yes }
			sector_capital = { subtract_variable = { which = sec_slave_calm_tick value = 1 } }
		}
	}
}

situation_event = { # Slave Revolt Upkeep and Initializer
	id = civsep.5200
	hide_window = yes
	is_triggered_only = yes


	immediate = {

		if = {
			limit = { is_situation_type = situation_civstrife_sep_slaves_plan }
			target = {
				set_variable = { which = slave_sep_upkeep value = 0 }
				every_owned_pop = {
					limit = {
						is_enslaved_or_purged = yes
						happiness < 60
					}
					prev = { change_variable = { which = slave_sep_upkeep value = 1 } }
				}
			}
		}
		else = {
			target = {
				set_variable = { which = slave_sep_upkeep value = 0 }
				every_owned_planet = {
					every_owned_pop = {
						limit = {
							is_enslaved_or_purged = yes
							happiness < 60
						}
						prevprev = { change_variable = { which = slave_sep_upkeep value = 1 } }
					}
				}
			}
		}

		if = {
			limit = { situation_progress >= 90 }
			if = {
				limit = { is_situation_type = situation_civstrife_sep_slaves_plan }
				random = {
					chance = 5
					situation_event = { id = civsep.5205 days = 1 random = 29 }
				}
			}
			else = {
				random = {
					chance = 10
					situation_event = { id = civsep.5205 days = 1 random = 29 }
				}
			}
		}
	}
}

situation_event = { # Slave Revolt Event
	id = civsep.5205
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		situation_progress >= 90
	}

	immediate = {
		if = {
			limit = { is_situation_type = situation_civstrife_sep_slaves_plan }
			target = {
				set_variable = { which = fac_mil_support value = 0 }
				every_owned_pop = {
					limit = {
						is_enslaved_or_purged = yes
						happiness < 60
					}
					prev = { change_variable = { which = fac_mil_support value = 1 } }
				}
				random_owned_pop = {
					limit = {
						is_enslaved_or_purged = yes
						happiness < 60
					}
					save_event_target_as = leader_pop
				}
				solar_system = { set_timed_star_flag = { flag = civwar_planet months = 3 } }
				get_plan_slave_rebels = yes
				root = { situation_event = { id = civsep.9100 } }
			}
		}
		else = {
			target = {
				set_variable = { which = fac_mil_support value = 0 }
				every_owned_planet = {
					every_owned_pop = {
						limit = {
							is_enslaved_or_purged = yes
							happiness < 60
						}
						prevprev = { change_variable = { which = fac_mil_support value = 1 } }
					}
				}
				random_owned_planet = {
					limit = { any_owned_pop = { is_enslaved_or_purged = yes } }
					random_owned_pop = {
						limit = { is_enslaved_or_purged = yes }
						save_event_target_as = leader_pop
					}
				}
				
				sector_capital = {
					solar_system = { set_timed_star_flag = { flag = civwar_planet months = 3 } }
					get_sec_slave_rebels = yes
					root = { situation_event = { id = civsep.9210 } }
				}
			}
		}
	}
}

planet_event = { # Slave Situation start event, taken from unrest.55
	id = civsep.5500
	title = unrest.55.name
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = unrest.55.desc.slave
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = unrest.55.desc.gestalt_standard
	}
	picture = GFX_evt_night_raid
	show_sound = {
		sound = advisor_notification_planet_in_revolt
		sound_is_advisor = yes
	}
	location = root
	is_triggered_only = yes
	situation = event_target:new_situation

	immediate = {
		set_planet_flag = plan_slave_sep_active
		owner = {
			start_situation = {
				type = situation_civstrife_sep_slaves_plan
				target = root
				effect = {
					save_event_target_as = new_situation
					set_situation_flag = slave_revolt
				}
			}
		}
	}

	option = {
		name = unrest.55.A

		tooltip = {
			owner = {
				start_situation = {
					type = situation_civstrife_sep_slaves_plan
					target = root
				}
			}
		}
	}
}

###############
# Flag Events #
###############

country_event = { # Remove Separatists from capital and core sector (ie if you move capital to rebellious planet)
	id = civsep.6000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		OR = {
			capital_scope = { has_planet_flag = plan_sep_active }
			capital_scope = { has_planet_flag = plan_slave_sep_active }
			any_owned_sector = {
				OR = {
					has_sector_flag = sector_sep_active
					has_sector_flag = sector_slave_sep_active
				}
				any_owned_planet = { is_capital = yes }
			}
		}
	}

	immediate = {

		if = {
			limit = { capital_scope = { has_planet_flag = plan_sep_active } }
			capital_scope = { remove_planet_flag = plan_sep_active }
		}

		if = {
			limit = { capital_scope = { has_planet_flag = plan_slave_sep_active } }
			capital_scope = { remove_planet_flag = plan_slave_sep_active }
		}

		if = {
			limit = {
				any_owned_sector = {
					has_sector_flag = sector_sep_active
					any_owned_planet = { is_capital = yes }
				}
			}
			random_owned_sector = {
				limit = {
					has_sector_flag = sector_sep_active
					any_owned_planet = { is_capital = yes }
				}
				remove_sector_flag = sector_sep_active
			}
		}

		if = {
			limit = {
				any_owned_sector = {
					has_sector_flag = sector_slave_sep_active
					any_owned_planet = { is_capital = yes }
				}
			}
			random_owned_sector = {
				limit = {
					has_sector_flag = sector_slave_sep_active
					any_owned_planet = { is_capital = yes }
				}
				remove_sector_flag = sector_slave_sep_active
			}
		}
		
	}
}

############
# Messages #
############

pop_faction_event = { # Planetary Separatist Faction Formed Notif
	id = civsep.9000
	title = civsep.9000.name
	desc = civsep.9000.desc
	picture = GFX_evt_one_sided_deal
	hide_window = no
	is_triggered_only = yes

	option = {
		name = WORRYING
	}
}

planet_event = { # Planetary Separatist Faction Disband Notif
	id = civsep.9005
	title = civsep.9005.name
	desc = civsep.9005.desc
	picture = GFX_evt_news_room
	hide_window = no
	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

planet_event = { # Planetary Separatist Faction Disband Notif
	id = civsep.9006
	title = civsep.9006.name
	desc = civsep.9006.desc
	picture = GFX_evt_news_room
	hide_window = no
	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

pop_faction_event = { # Sector Separatist Faction Formed Notif
	id = civsep.9010
	title = civsep.9010.name
	desc = civsep.9010.desc
	picture = GFX_evt_one_sided_deal
	hide_window = no
	is_triggered_only = yes

	option = {
		name = WORRYING
	}
}

pop_faction_event = { # Isolated Sector Separatist Faction Formed Notif
	id = civsep.9011
	title = civsep.9010.name
	desc = civsep.9011.desc
	picture = GFX_evt_one_sided_deal
	hide_window = no
	is_triggered_only = yes

	option = {
		name = WORRYING
	}
}

country_event = { # Sector Separatist Faction Disband Notif
	id = civsep.9015
	title = civsep.9015.name
	desc = civsep.9015.desc
	picture = GFX_evt_news_room
	hide_window = no
	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

country_event = { # Isolated Sector Separatist Faction Disband Notif
	id = civsep.9016
	title = civsep.9015.name
	desc = civsep.9016.desc
	picture = GFX_evt_news_room
	hide_window = no
	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

country_event = { # Slave Sector Situation Disband Notif
	id = civsep.9017
	title = civsep.9017.name
	desc = civsep.9017.desc
	picture = GFX_evt_news_room
	hide_window = no
	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

situation_event = { # Planetary Separatists Strike
	id = civsep.9020
	picture = GFX_evt_open_revolt
	title = civsep.9020.name
	desc = civsep.9020.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civcom.this_is_bad
		ai_chance = { factor = 1 }
	}
}

situation_event = { # Sectoral Separatists Strike
	id = civsep.9030
	picture = GFX_evt_open_revolt
	title = civsep.9020.name
	desc = civsep.9030.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civcom.this_is_bad
		ai_chance = { factor = 1 }
	}
}

situation_event = { # Slaves Strike
	id = civsep.9100
	picture = GFX_evt_open_revolt
	title = civsep.9100.name
	desc = civsep.9100.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civcom.this_is_bad
		ai_chance = { factor = 1 }
	}
}

country_event = { # Slaves Organize Sector Wide
	id = civsep.9200
	picture = GFX_evt_night_raid
	title = civsep.9200.name
	desc = civsep.9200.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civcom.this_is_bad
		ai_chance = { factor = 1 }
	}
}

situation_event = { # Slaves Strike Sector
	id = civsep.9210
	picture = GFX_evt_open_revolt
	title = civsep.9100.name
	desc = civsep.9210.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civcom.this_is_bad
		ai_chance = { factor = 1 }
	}
}