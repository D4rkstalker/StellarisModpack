namespace = Events_Civic_GAPS_Seekers
#on game start
country_event = {
	id = Events_Civic_GAPS_Seekers.1
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { has_civic = Civic_GAPS_Seekers }

	immediate = {
		set_country_flag = Country_Flag_GAPS_I_am_Seekers
	}
}
# Triggered when two empires discover each other
# This = Empire 1
# From = Empire 2
# Fromfromfrom = System where contact occurred
#on_first_contact = {
country_event = {
	id = Events_Civic_GAPS_Seekers.2
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { 
		OR = { 
			This = { has_civic = Civic_GAPS_Seekers }
			From = { has_civic = Civic_GAPS_Seekers }
		}
	}

	immediate = {
		if = {
			limit = { This = { has_civic = Civic_GAPS_Seekers } }
			This = {
				change_variable = { which = "Country_Variable_GAPS_Seekers_First_Contacts" value = 1 }
				while = {
					count = "Country_Variable_GAPS_Seekers_First_Contacts"
					add_resource = {
						unity = 100
					}
				}
			}
		}
		if = {
			limit = { From = { has_civic = Civic_GAPS_Seekers } }
			From = {
				change_variable = { which = "Country_Variable_GAPS_Seekers_First_Contacts" value = 1 }
				while = {
					count = "Country_Variable_GAPS_Seekers_First_Contacts"
					add_resource = {
						unity = 100
					}
				}
			}
		}
	}
}
# A ship is done surveying the last unsurveyed planet in a system
# Scope = ship
# From = system
#on_system_survey_ship = {
ship_event = {
	id = Events_Civic_GAPS_Seekers.3
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { 
		root.owner = { has_civic = Civic_GAPS_Seekers }
	}

	immediate = {
		root.owner = {
			change_variable = { which = "Country_Variable_GAPS_Seekers_Surveyed_Systems" value = 1 }
			while = {
				count = "Country_Variable_GAPS_Seekers_Surveyed_Systems"
				add_resource = {
					unity = 50
				}
			}
		}
	}
}
# This = Fleet ( science vessel )
# From = Archaeological Site
# on_arch_stage_finished
fleet_event = {
	id = Events_Civic_GAPS_Seekers.4
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { 
		root.owner = { has_civic = Civic_GAPS_Seekers }
	}

	immediate = {
		root.owner = {
			change_variable = { which = "Country_Variable_GAPS_Seekers_Archaeological_Stages_Finished" value = 1 }
			while = {
				count = "Country_Variable_GAPS_Seekers_Archaeological_Stages_Finished"
				add_resource = {
					unity = 100
				}
			}
		}
	}
}
# A country has gained a surveyed status on a planet. Happens after "on_survey" if a science ship surveyed a planet.
# Root = Planet
# From = Country
# FromFrom = Fleet of the science ship that surveyed it, if any
# on_planet_surveyed = {
planet_event = {
	id = Events_Civic_GAPS_Seekers.5
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { 
		has_anomaly = yes
		is_colonizable = yes
		From = { has_civic = Civic_GAPS_Seekers }
	}

	immediate = {
		add_deposit = d_GAPS_Wonderous_Anomaly
		add_modifier = { modifier = "Planet_Modifier_GAPS_Wonderous_Anomaly" days = -1 }
	}
}
# A ship has been built
# Root = Ship
# From = Planet
#on_ship_built
planet_event = {
	id = Events_Civic_GAPS_Seekers.6
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { 
		is_ship_size = science
		root.owner = { has_civic = Civic_GAPS_Seekers }
	}

	immediate = {
		remove_modifier = Ship_Modifier_GAPS_Seekers_Science_Ship
		add_modifier = { modifier = "Ship_Modifier_GAPS_Seekers_Science_Ship" days = -1 }
	}
}