namespace = NDO

### Clear and add special blockers

planet_event = {
	id = NDO.301
	title = "NDO.301.name"
	desc = "NDO.301.desc"
	picture = GFX_evt_relic_world
	location = ROOT

	is_triggered_only = yes
	
	trigger = {
		owner = {
			has_origin = origin_disharmonious_unity
		}
	}

	immediate = {		
		clear_deposits = yes	
		add_deposit = d_radioactive_wasteland
		add_deposit = d_city_ruins
			
	}
	
	option = {
		name = NDO.301.a		
	}
		
	option = {
		name = NDO.301.b		
	}
}

#### Remove the negative resort world modifier

planet_event = {
	id = NDO.381
	hide_window = yes
	
	pre_triggers = {
		is_capital = yes
		is_homeworld = yes
		original_owner = yes
		is_occupied_flag = no
	}
	
	mean_time_to_happen = { days = 1 }
	
	trigger = {
		owner = {
			has_origin = origin_resort_world
		}			
		any_owned_pop = {
			exists = species		
			NOT = { is_same_species = root }
			pop_has_happiness = yes
			is_robot_pop = no
		}	
	}
	immediate = {		
		remove_modifier = empty_resort_world_modifier			
	}	
}

#### Remove the negative overcrowded planet modifier

planet_event = {
	id = NDO.291
	hide_window = yes
	
	pre_triggers = {
		is_capital = yes
		is_homeworld = yes
		original_owner = yes
		is_occupied_flag = no
	}
	
	mean_time_to_happen = { days = 1 }
	
	trigger = {
		owner = {
			has_origin = origin_overcrowded
		}			
		num_pops < 50	
	}
	immediate = {		
		remove_modifier = overcrowded_planet_modifier			
	}	
}

planet_event = {
	id = NDO.2912
	hide_window = yes
	is_triggered_only = yes

	immediate = {		
		remove_modifier = overcrowded_planet_modifier			
	}	
}

#### Fire the second Special Overcrowded Project

planet_event = {
	id = NDO.292
	hide_window = yes

	fire_only_once = yes
	
	
	pre_triggers = {
		has_owner = yes
		is_capital = no
		is_homeworld = no
		is_occupied_flag = no
	}
	
	mean_time_to_happen = { days = 1 }
	
	trigger = {
		owner = {
			has_origin = origin_overcrowded
			num_owned_planets = 2			
		}
		
	}
	immediate = {	
		owner = {
			country_event = { id = NDO.2911 }
		}			
	}	
}


### Set Special Project Overcrowded

country_event = {
	id = NDO.2911
	title = "NDO.2911.name"
	desc = "NDO.2911.desc"
	picture = GFX_a_new_dawn
	location = ROOT
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_overcrowded
		}
	}	

	immediate = {
		add_modifier = {
			modifier = revert_sterilization_camapaign_modifier
			days = -1
		}		
	}
	
	option = {
		name = NDO.2911.a
		enable_special_project = {
			name = "REVERT_STERILIZATION_CAMPAIGN_PROJECT"
			location = this
			owner = root
		}		
	}
	option = {
		name = NDO.2911.b

		custom_tooltip = keep_sterilization_project_tooltip	
	}
}


########### Failed Cryogenic Events

planet_event = {
	id = NDO.45
	title = "NDO.45.name"
	desc = "NDO.45.desc"
	picture = GFX_failed_cryo_event_nht
	location = ROOT
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_failed_cryonic
		}
	}	

	immediate = {
		every_deposit = {
			limit = { is_blocker = yes }
			clear_blocker = yes
		}	
		add_deposit = d_failed_cryo
		
		while = {
			count = 19
			random_owned_pop = {
				limit = {
					is_same_species = owner.species
				}
				kill_pop = yes
			}
		}		
	}
	
	option = {
		name = NDO.45.a
			allow = { owner = { resource_stockpile_compare = { resource = energy value >= 50 } } }
			owner = { add_resource = { energy = -50 } }	

		custom_tooltip = failed_cryo_1_A_tooltip			
		hidden_effect = {
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
		}
	}		
	option = {
		name = NDO.45.b
		allow = {
			owner = { resource_stockpile_compare = { resource = energy value >= 100 } }
		}
			owner = { add_resource = { energy = -100 } }

		custom_tooltip = failed_cryo_1_B_tooltip
		
		hidden_effect = {
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
		}
	}
	option = {
		name = NDO.45.c

		custom_tooltip = failed_cryo_1_C_tooltip
	}
	after = {

		add_deposit = d_failed_cryo
		hidden_effect = {
			planet_event = { id = NDO.451 days = 1800 }
		}
	}
}


planet_event = {
	id = NDO.451
	title = "NDO.451.name"
	desc = "NDO.451.desc"
	picture = GFX_failed_cryo_event_nht
	location = ROOT
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_failed_cryonic
		}
	}	
	
	immediate = {
	}
	
	option = {
		name = NDO.451.a
			allow = { owner = { resource_stockpile_compare = { resource = energy value >= 250 } } }
			owner = { add_resource = { energy = -250 } }

		custom_tooltip = failed_cryo_2_A_tooltip			
		hidden_effect = {
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
		}
	}		
	option = {
		name = NDO.451.b
		allow = {
			owner = { resource_stockpile_compare = { resource = energy value >= 1000 } }
		}
			owner = { add_resource = { energy = -1000 } }

		custom_tooltip = failed_cryo_2_B_tooltip
		
		hidden_effect = {
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
		}
	}
	option = {
		name = NDO.451.c
		allow = {
			owner = { resource_stockpile_compare = { resource = energy value >= 1000 } }
		}
			owner = { add_resource = { energy = -1000 } }

		custom_tooltip = failed_cryo_2_C_tooltip
		
		hidden_effect = {
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
		}
	}
	option = {
		name = NDO.451.d

		custom_tooltip = failed_cryo_2_D_tooltip
	}
	after = {
		add_deposit = d_failed_cryo
		hidden_effect = {
			planet_event = { id = NDO.452 days = 420 random = 100 }
		}
	}
}


planet_event = {
	id = NDO.452
	title = "NDO.452.name"
	desc = "NDO.452.desc"
	picture = GFX_failed_cryo_event_nht
	location = ROOT
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_failed_cryonic
		}
	}	

	immediate = {
	}
	
	option = {
		name = NDO.452.a
			allow = { owner = { resource_stockpile_compare = { resource = energy value >= 500 } } }
			owner = { add_resource = { energy = -500 } }

		custom_tooltip = failed_cryo_3_A_tooltip			
		hidden_effect = {
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
		}
	}		
	option = {
		name = NDO.452.b
		allow = {
			owner = { resource_stockpile_compare = { resource = energy value >= 1500 } }
		}
			owner = { add_resource = { energy = -1500 } }

		custom_tooltip = failed_cryo_3_B_tooltip
		
		hidden_effect = {
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
			create_pop = {
				species = owner_main_species
			}
		}
	}
	option = {
		name = NDO.452.c

		custom_tooltip = failed_cryo_3_C_tooltip
	}
	after = {
		add_deposit = d_failed_cryo
	}
}


###### Leave Federation Growing Tension Origin

country_event = {
	id = NDO.411
	hide_window = yes

	fire_only_once = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_growing_tensions
			has_federation = no
		}
		NOT = { has_country_flag = revert_economic_crisis_nht }
	}

	immediate = {		
		remove_modifier = growing_tensions_nht_modifier
		remove_opinion_modifier = {
			who = root
			modifier = opinion_nht_growing_tensions
		}
		
		abort_special_project = { type = REVERT_SECESSION_NHT_PROJECT }		
	}	
}


####################### Machiavellians


#planet_event = {
#	id = NDO.461
#	hide_window = yes
#	
#	pre_triggers = {
#		has_owner = yes
#		is_ai = no
#		is_homeworld = no
#	}
#	
#	trigger = {
#		owner = {
#			has_origin = origin_the_machiavellians		
#		}
#	}
#	
#	immediate = {	
#		if = {
#			limit = {
#				num_pops > 1
#			}
#			while = {
#				limit = {
#					num_pops > 1
#				}
#				random_owned_pop = {
#					limit = { is_exact_same_species = root }
#					kill_pop = yes
#				}
#			}
#		}			
#	}	
#}

#planet_event = {
#	id = NDO.463
#	hide_window = yes
#	
#	pre_triggers = {
#		has_owner = yes
#		is_ai = no
#		is_homeworld = no
#	}
#	
#	trigger = {
#		owner = {
#			has_origin = origin_the_machiavellians		
#		}
#	}
#	
#	immediate = {	
#		if = {
#			limit = {
#				any_owned_pop = {
#					NOT = { is_exact_same_species = root }
#					species = { has_species_flag = mach_second_species@root.owner }							
#				}
#				count_owned_pop = {
#					limit = {is_exact_same_species = ROOT }
#					count > 1
#				}
#			}
#			add_modifier = {
#				modifier = "pop_under_control_nht_modifier"
#				days = -1
#			}
#		}
#		else = {
#			every_owned_pop = {
#				limit = { is_exact_same_species = root }
#				kill_pop = yes
#			}
#		}		
#	}	
#}

#################################################
###########
#################################################


planet_event = {
	id = NDO.464
	title = "NDO.464.name"
	desc = "NDO.464.desc"
	picture = GFX_crowd_cheerings_nht
	location = ROOT
	
	pre_triggers = {
		has_owner = yes
		is_homeworld = no
	}
	
	trigger = {
		owner = {
			has_origin = origin_the_machiavellians		
		}		
	}	
		
	is_triggered_only = yes

	immediate = {
		save_event_target_as = revolt_situation
		
		random_owned_species = {
			limit = { has_species_flag = mach_second_species@root.owner }
			save_event_target_as = rebelled_second_species_nht
		}

		save_event_target_as = rebel_planet_nht
		create_rebels = {
			name = random
			ethos = random
			authority = random
			civics = random
			origin = "origin_separatists"
			species = event_target:rebelled_second_species_nht
			flag = random
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_militarist"
				ethic = "ethic_fanatic_militarist"
			}
				
			effect = {
				set_country_type = default #we don't need the rebel country type with this version, but create_rebels effect has useful functionalities
				save_event_target_as = rebel_empire_nht

				create_leader = {
					class = random_ruler
					species = event_target:rebelled_second_species_nht
					name = random
					skill = 5
					effect = {
						event_target:rebel_empire_nht = { assign_leader = prev }
					}
				}


			create_fleet = {
				effect = {
					set_owner = event_target:rebel_empire_nht
					while = {
						count = 2
						create_ship = {
							name = random
							random_existing_design = corvette
							graphical_culture = event_target:rebel_empire_nht
						}
					}
					set_location = event_target:rebel_planet_nht
				}
			}

				establish_communications_no_message = root.owner

				event_target:rebel_planet_nht = { #Flip the target planet
					set_owner = event_target:rebel_empire_nht
					add_modifier = {
						modifier = insurgents_free
						days = 7200
					}

					solar_system = {
						if = {
							limit = { exists = starbase }
							starbase = {
								set_owner = event_target:rebel_empire_nht
								if = {
									limit = { has_starbase_size = starbase_outpost }
									set_starbase_size = starbase_starport
									set_starbase_module = {
										slot = 1
										module = shipyard
									}
									set_starbase_module = {
										slot = 2
										module = shipyard
									}
								}
								else_if = {
									limit = {
										NOT = { has_starbase_module = shipyard }
									}
									set_starbase_module = {
										slot = 1
										module = shipyard
									}
									set_starbase_module = {
										slot = 2
										module = shipyard
									}
								}
							}
						}
						else = {
							create_starbase = {
								size = starbase_starport
								module = shipyard
								module = shipyard
								owner = event_target:rebel_empire_nht
							}
						}
					}
				}

				add_resource = {
					minerals = 15000
					energy = 15000
					food = 15000
					consumer_goods = 10000
					alloys = 10000
					rare_crystals = 1000
					volatile_motes = 1000
					exotic_gases = 1000
					influence = 1000
					unity = 10000
				}
				#It copies the traditions and technologies in code

				#Add truce
				owner = {
					set_truce = {
						target = event_target:rebel_empire_nht
						type = liberation
					}
					event_target:rebel_empire_nht = {
						set_truce = {
							target = prev
							type = liberation
						}
					}
				}
			}
		}
		event_target:rebel_planet_nht = {
			add_trust = {
				amount = -50
				who = root
			}
			add_intel = {
				amount = 50
				who = root
			}
		}

	}

	option = {
		name = NDO.464.A
		
	}
	option = {
		name = NDO.464.B
	}
}