namespace = ag_planet_killer

# Destroyed a star.
planet_event = {
	id = ag_planet_killer.1
	hide_window = yes
	is_triggered_only = yes

	trigger = { is_star = yes }

	immediate = {
		from = {
			save_event_target_as = ag_target_fleet
			owner = { save_event_target_as = ag_target_country }
			random_owned_ship = { save_event_target_as = ag_target_ship }
		}
		from.owner = {
			switch = {
				trigger = galaxy_size
				huge = { add_resource = { sr_dark_matter = 1000 } }
				large = { add_resource = { sr_dark_matter = 1500 } }
				medium = { add_resource = { sr_dark_matter = 2000 } }
				small = { add_resource = { sr_dark_matter = 2500 } }
				tiny = { add_resource = { sr_dark_matter = 3000 } }
			}
			if = {
				limit = { NOT = { has_country_flag = ag_fired_ancient_star_killer } }
				set_country_flag = ag_fired_ancient_star_killer
				country_event = { id = ag_planet_killer.11 }
			}
		}
		ag_ancient_planet_killer_hit_explosion = yes
		change_pc = pc_black_hole
		solar_system = { set_star_class = sc_black_hole }
		if = { limit = { planet_size > 29 } set_planet_size = 15 }
		else_if = { limit = { planet_size > 19 } set_planet_size = 10 }
		else_if = { limit = { always = yes } set_planet_size = 7 }
		prevent_anomaly = yes
		clear_deposits = yes
		while = {
			count = 4
			random_list = {
				50 = { }
				50 = { add_deposit = d_dark_matter_deposit_1 }
				50 = { add_deposit = d_dark_matter_deposit_2 }
				50 = { add_deposit = d_dark_matter_deposit_3 }
				1 = { add_deposit = d_dark_matter_deposit_10 }
			}
			random_list = {
				100 = { }
				25 = { add_deposit = d_physics_1 }
				25 = { add_deposit = d_physics_2 }
				25 = { add_deposit = d_physics_3 }
				25 = { add_deposit = d_physics_4 }
			}
		}
		solar_system = {
			set_asteroid_belt = { radius = 0 }
			ag_destroy_megastructure = yes
			every_system_planet = {
				limit = { NOR = { is_same_value = root is_planet_class = pc_ag_void_star is_planet_class = pc_ag_void_planet } }
				prevent_anomaly = yes
				if = {
					limit = { is_star = yes NOT = { is_planet_class = pc_black_hole } }
					change_pc = pc_black_hole
					solar_system = { set_star_class = sc_black_hole }
					if = { limit = { planet_size > 29 } set_planet_size = 15 }
					else_if = { limit = { planet_size > 19 } set_planet_size = 10 }
					else_if = { limit = { always = yes } set_planet_size = 7 }
					clear_deposits = yes
					while = {
						count = 3
						random_list = {
							75 = { }
							50 = { add_deposit = d_dark_matter_deposit_1 }
							50 = { add_deposit = d_dark_matter_deposit_2 }
							50 = { add_deposit = d_dark_matter_deposit_3 }
						}
						random_list = {
							100 = { }
							25 = { add_deposit = d_physics_1 }
							25 = { add_deposit = d_physics_2 }
							25 = { add_deposit = d_physics_3 }
							25 = { add_deposit = d_physics_4 }
						}
					}
				}
				else_if = {
					limit = { is_asteroid = yes }
					remove_planet = yes
				}
				else_if = {
					limit = { is_planet_class = pc_gas_giant }
					clear_deposits = yes
					if = { limit = { planet_size > 25 } change_planet_size = -10 }
					else_if = { limit = { planet_size > 15 } change_planet_size = -5 }
				}
				else_if = {
					limit = {
						exists = owner
						owner = { is_country_type = ag_zeta_crisis_country }
						OR = {
							is_planet_class = pc_ag_shrouded
							is_planet_class = pc_ag_ringworld_shrouded
						}
					}
					add_planet_devastation = 50
				}
				else_if = {
					limit = { NOR = { is_planet_class = pc_shattered is_planet_class = pc_shattered_2 } }
					clear_deposits = yes
					if = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = planet_destruction.1000 days = 1 }
						}
					}
					# Contingency Machine World
					if = {
						limit = { is_planet_class = pc_ai NOT = { has_planet_flag = machine_lair } }
						set_planet_flag = destroyed_by_colossus
						set_planet_flag = planet_cracked
						add_planet_devastation = 50
						planet_event = { id = crisis.2040 }
					}
					# Contingency Final Machine World
					if = {
						limit = { is_planet_class = pc_ai has_planet_flag = machine_lair }
						set_planet_flag = destroyed_by_colossus
						set_planet_flag = planet_cracked
						from.owner = { save_event_target_as = final_machine_world_destroyer }
						stop_crisis_sound = yes
						planet_event = { id = crisis.2046 }
					}
					# Swarm Situation Log counter
					if = {
						limit = { exists = owner owner = { is_country_type = swarm } }
						every_country = {
							limit = { has_event_chain = "prethoryn_scourge_chain" }
							add_event_chain_counter = {
								event_chain = "prethoryn_scourge_chain"
								counter = "infested_worlds"
								amount = -1
							}
							add_event_chain_counter = {
								event_chain = "prethoryn_scourge_chain"
								counter = "infested_worlds_cleansed"
								amount = 1
							}
						}
					}
					if = {
						limit = {
							OR = {
								is_active_resolution = "resolution_rulesofwar_reverence_for_life"
								is_active_resolution = "resolution_rulesofwar_independent_tribunals"
								is_active_resolution = "resolution_rulesofwar_last_resort_doctrine"
								is_active_resolution = "resolution_rulesofwar_demobilization_initiative"
							}
						}
						from.owner = { set_timed_country_flag = { flag = resolution_breached_fired_cracker days = 3600 } }
					}
					if = {
						limit = {
							exists = owner
							owner = {
								NOT = { is_same_value = from.owner }
								ag_is_common_country = yes
							}
						}
						# Generate threat
						if = {
							limit = { is_colony = yes }
							add_threat = { who = from.owner amount = 3 }
							# modifier for allies + those upset by genocide
							every_country = {
								limit = {
									NOR = {
										is_same_value = from.owner
										is_same_value = root.solar_system.space_owner
										AND = {
											has_federation = yes
											is_in_federation_with = from.owner
										}
									}
									OR = {
										has_communications = from.owner
										has_communications = root.solar_system.space_owner
									}
									OR = {
										AND = {
											has_federation = yes
											is_in_federation_with = root.solar_system.space_owner
										}
										has_ai_personality = awakened_fallen_empire_xenophile
										AND = {
											is_country_type = default
											OR = {
												is_egalitarian = yes
												is_xenophile = yes
											}
										}
									}
								}
								if = {
									limit = { root = { is_colony = no } }
									add_opinion_modifier = {
										modifier = opinion_cracked_an_uninhabited_world
										who = from.owner
									}
								}
								else = {
									add_opinion_modifier = {
										modifier = opinion_cracked_a_world
										who = from.owner
									}
								}
							}
						}
						else = { add_threat = { who = from.owner amount = 1 } }
						# modifiers for victim
						owner = {
							if = {
								limit = { root = { is_colony = no } }
								add_opinion_modifier = {
									modifier = opinion_cracked_my_uninhabited_world
									who = from.owner
								}
							}
							else = {
								add_opinion_modifier = {
									modifier = opinion_cracked_my_world
									who = from.owner
								}
							}
							if = {
								limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
								add_modifier = { modifier = "colossus_victim" days = 10800 }
							}
						}
						if = {
							limit = { exists = owner owner = { is_country_type = primitive } }
							# modifier for allies + those upset by genocide
							every_country = {
								limit = {
									NOT = { is_same_value = from.owner }
									OR = {
										has_communications = from.owner
										has_communications = root.solar_system.space_owner
									}
									OR = {
										has_ai_personality = awakened_fallen_empire_xenophile
										AND = {
											is_country_type = default
											NOR = {
												is_xenophobe = yes
												is_homicidal = yes
												is_xenophile = yes
											}
										}
									}
								}
								add_opinion_modifier = {
									modifier = opinion_cracked_a_primitive_world
									who = from.owner
								}
							}
							every_country = {
								limit = {
									NOT = { is_same_value = from.owner }
									OR = {
										has_communications = from.owner
										has_communications = root.solar_system.space_owner
									}
									OR = {
										has_ai_personality = awakened_fallen_empire_xenophile
										AND = {
											is_country_type = default
											is_xenophile = yes
										}
									}
								}
								add_opinion_modifier = {
									modifier = opinion_cracked_a_primitive_world_phile
									who = from.owner
								}
							}
						}
					}
					if = {
						limit = { exists = owner }
						owner = {
							add_static_war_exhaustion = {
								attacker = from.fleet.owner
								location = root
								value_for_planet_destruction = 1.0
							}
						}
					}
					if = { limit = { num_pops > 0 } every_owned_pop = { kill_pop = yes } }
					if = {
						limit = { is_colony = yes }
						remove_all_buildings = yes
						remove_all_districts = yes
					}
					if = {
						limit = { OR = { ag_is_habitat = yes is_planet_class = pc_habitat_shielded } }
						spawn_habitat_cracker_effect = yes
						remove_planet = yes
					}
					else_if = {
						limit = {
							ag_is_ringworld = yes
							NOR = {
								is_planet_class = pc_ag_ringworld_shrouded
								is_planet_class = pc_ringworld_habitable_damaged
								is_planet_class = pc_ringworld_seam_damaged
								is_planet_class = pc_ringworld_tech_damaged
							}
						}
						spawn_ringworld_cracker_effect = yes
						ag_destroy_habitable_ringworld = yes
					}
					else_if = {
						limit = { always = yes }
						change_pc = pc_shattered
						if = {
							limit = {
								NOR = {
									is_planet_class = pc_molten
									is_planet_class = pc_toxic
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
									is_planet_class = pc_frozen
								}
							}
							random_list = {
								25 = { while = { count = 4 add_deposit = d_minerals_4 } }
								25 = { while = { count = 3 add_deposit = d_minerals_4 } }
								25 = { while = { count = 2 add_deposit = d_minerals_4 } }
								25 = { add_deposit = d_minerals_4 }
							}
						}
						else = {
							while = {
								count = 2
								random_list = {
									100 = { }
									25 = { add_deposit = d_minerals_1 }
									25 = { add_deposit = d_minerals_2 }
									25 = { add_deposit = d_minerals_3 }
									25 = { add_deposit = d_minerals_4 }
								}
							}
						}
					}
					if = {
						limit = {
							solar_system = { has_star_flag = sol }
							from.owner = { NOT = { species_portrait = human } }
							OR = {
								has_planet_flag = planet_earth
								has_planet_flag = nuked_earth
								AND = {
									exists = owner
									owner = {
										is_primitive = yes
										species_portrait = human
									}
								}
							}
						}
						random_list = {
							50 = { }
							50 = {
								solar_system = { save_event_target_as = sol_sys }
								from.owner = { country_event = { id = planet_destruction.111 } }
							}
						}
					}
					if = {
						limit = { has_modifier = "holy_planet" }
						remove_modifier = "holy_planet"
						add_modifier = { modifier = "ag_shattered_holy_planet" days = -1 }
						if = {
							limit = {
								NOT = { has_global_flag = ag_holy_guardian_to_awaken }
								any_country = {
									has_ai_personality_behaviour = holy_planets
									NOT = { is_at_war_with = from.owner }
								}
							}
							from.owner = { save_event_target_as = ag_source_country }
							save_event_target_as = ag_destroyed_holy_planet
							set_global_flag = ag_holy_guardian_to_awaken
							random_country = {
								limit = {
									has_ai_personality_behaviour = holy_planets
									NOT = { is_at_war_with = event_target:ag_source_country }
								}
								save_event_target_as = ag_holy_guardian_empire
							}
							event_target:ag_source_country = {
								country_event = { id = ag_ancient.1000 days = 2 random = 5 }
							}
						}
					}
					from.owner = {
						if = {
							limit = { has_ascension_perk = ap_become_the_crisis }
							complete_crisis_objective = crisobj_destroy_worlds
						}
					}
				}
			}
			if = {
				limit = { exists = starbase }
				every_fleet_in_system = {
					limit = {
						any_owned_ship = {
							is_ship_class = shipclass_starbase
							NOR = {
								is_ship_size = starbase_ag_zeta_crisis
								is_ship_size = ag_gamma_station_hostile
								is_ship_size = ag_gamma_station_0
								is_ship_size = ag_gamma_station_1
								is_ship_size = ag_gamma_station_small_hostile
								is_ship_size = ag_gamma_station_small_moving_hostile
								is_ship_size = juggernaut
							}
						}
					}
					every_owned_ship = {
						destroy_ship = this
						fire_on_action = {
							on_action = on_ship_disabled
							scopes = { from = event_target:ag_target_ship }
						}
						owner = {
							fire_on_action = {
								on_action = on_ship_destroyed_victim
								scopes = {
									from = root.from.owner
									fromfrom = prevprev
									fromfromfrom = event_target:ag_target_ship
								}
							}
						}
						root.from.owner = {
							fire_on_action = {
								on_action = on_ship_destroyed_perp
								scopes = {
									from = prevprev.owner
									fromfrom = event_target:ag_target_ship
									fromfromfrom = prevprev
								}
							}
						}
					}
					owner = {
						fire_on_action = {
							on_action = on_fleet_destroyed_victim
							scopes = {
								from = root.from.owner
								fromfrom = prevprev
								fromfromfrom = root.from
							}
						}
					}
					root.from.owner = {
						fire_on_action = {
							on_action = on_fleet_destroyed_perp
							scopes = {
								from = prevprev.owner
								fromfrom = root.from
								fromfromfrom = prevprev
							}
						}
					}
				}
			}
			every_fleet_in_system = {
				limit = {
					exists = this
					NOR = {
						is_same_value = from
						any_owned_ship = {
							is_ship_class = shipclass_starbase
							NOR = {
								is_ship_size = starbase_ag_zeta_crisis
								is_ship_size = ag_gamma_station_hostile
								is_ship_size = ag_gamma_station_0
								is_ship_size = ag_gamma_station_1
								is_ship_size = ag_gamma_station_small_hostile
								is_ship_size = ag_gamma_station_small_moving_hostile
								is_ship_size = juggernaut
							}
						}
					}
				}
				if = {
					limit = {
						exists = owner
						owner = { NOT = { is_same_value = from.owner } }
						ag_is_ancient_ship = no
						ag_is_zeta_crisis_ship = no
					}
					every_owned_ship = {
						destroy_ship = this
						fire_on_action = {
							on_action = on_ship_disabled
							scopes = { from = event_target:ag_target_ship }
						}
						owner = {
							fire_on_action = {
								on_action = on_ship_destroyed_victim
								scopes = {
									from = root.from.owner
									fromfrom = prevprev
									fromfromfrom = event_target:ag_target_ship
								}
							}
						}
						root.from.owner = {
							fire_on_action = {
								on_action = on_ship_destroyed_perp
								scopes = {
									from = prevprev.owner
									fromfromfrom = prevprev
									fromfrom = event_target:ag_target_ship
								}
							}
						}
					}
					owner = {
						fire_on_action = {
							on_action = on_fleet_destroyed_victim
							scopes = {
								from = root.from.owner
								fromfrom = prevprev
								fromfromfrom = root.from
							}
						}
					}
					root.from.owner = {
						fire_on_action = {
							on_action = on_fleet_destroyed_perp
							scopes = {
								from = prevprev.owner
								fromfrom = root.from
								fromfromfrom = prevprev
							}
						}
					}
				}
				else = { set_mia = yes }
			}
			if = {
				limit = { NOT = { exists = space_owner } }
				every_country = {
					limit = {
						NOR = {
							is_same_value = from.owner
							is_country_type = fallen_empire
						}
						has_communications = from.owner
					}
					add_opinion_modifier = {
						modifier = ag_opinion_destroyed_system
						who = from.owner
					}
				}
			}
			else = {
				every_country = {
					limit = {
						NOR = {
							is_same_value = from.owner
							is_country_type = fallen_empire
						}
						OR = {
							has_communications = from.owner
							has_communications = prev.space_owner
						}
					}
					if = {
						limit = { is_same_value = prev.space_owner }
						add_opinion_modifier = {
							modifier = ag_opinion_destroyed_my_system
							who = from.owner
						}
					}
					else = {
						add_opinion_modifier = {
							modifier = ag_opinion_destroyed_system
							who = from.owner
						}
					}
				}
			}
		}
		every_country = {
			create_message = {
				type = "STAR_DESTROYED"
				localization = "message_ag_ancient_epsilon_pk_weapon_killed_star_desc"
				days = 30
				target = root
				variable = {
					type = name
					localization = "ag_target_planet"
					scope = root
				}
				variable = {
					type = name
					localization = "ag_target_system"
					scope = root.solar_system
				}
				variable = {
					type = name
					localization = "ag_attacker"
					scope = from.owner
				}
				variable = {
					type = name
					localization = "ag_attacker_ship"
					scope = from
				}
			}
		}
	}
}

# Destroyed a planet.
planet_event = {
	id = ag_planet_killer.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_star = no
		from = { has_fleet_flag = ag_epsilon_star_killer_planet_killer_mode }
	}

	immediate = {
		from.owner = {
			if = {
				limit = { NOT = { has_country_flag = ag_fired_ancient_star_killer_alt } }
				set_country_flag = ag_fired_ancient_star_killer_alt
				country_event = { id = ag_planet_killer.12 }
			}
		}
		if = {
			limit = { is_asteroid = yes }
			remove_planet = yes
		}
		else_if = {
			limit = { is_planet_class = pc_gas_giant }
			clear_deposits = yes
			if = { limit = { planet_size > 25 } change_planet_size = -10 }
			else_if = { limit = { planet_size > 15 } change_planet_size = -5 }
		}
		else_if = {
			limit = {
				exists = owner
				owner = { is_country_type = ag_zeta_crisis_country }
				OR = {
					is_planet_class = pc_ag_shrouded
					is_planet_class = pc_ag_ringworld_shrouded
				}
			}
			add_planet_devastation = 50
		}
		else_if = {
			limit = { NOR = { is_planet_class = pc_shattered is_planet_class = pc_shattered_2 } }
			clear_deposits = yes
			if = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = planet_destruction.1000 days = 1 }
				}
			}
			# Contingency Machine World
			if = {
				limit = { is_planet_class = pc_ai NOT = { has_planet_flag = machine_lair } }
				set_planet_flag = destroyed_by_colossus
				set_planet_flag = planet_cracked
				planet_event = { id = crisis.2040 }
			}
			# Contingency Final Machine World
			if = {
				limit = { is_planet_class = pc_ai has_planet_flag = machine_lair }
				set_planet_flag = destroyed_by_colossus
				set_planet_flag = planet_cracked
				from.owner = { save_event_target_as = final_machine_world_destroyer }
				stop_crisis_sound = yes
				planet_event = { id = crisis.2046 }
			}
			# Swarm Situation Log counter
			if = {
				limit = { exists = owner owner = { is_country_type = swarm } }
				every_country = {
					limit = { has_event_chain = "prethoryn_scourge_chain" }
					add_event_chain_counter = {
						event_chain = "prethoryn_scourge_chain"
						counter = "infested_worlds"
						amount = -1
					}
					add_event_chain_counter = {
						event_chain = "prethoryn_scourge_chain"
						counter = "infested_worlds_cleansed"
						amount = 1
					}
				}
			}
			if = {
				limit = {
					OR = {
						is_active_resolution = "resolution_rulesofwar_reverence_for_life"
						is_active_resolution = "resolution_rulesofwar_independent_tribunals"
						is_active_resolution = "resolution_rulesofwar_last_resort_doctrine"
						is_active_resolution = "resolution_rulesofwar_demobilization_initiative"
					}
				}
				from.owner = { set_timed_country_flag = { flag = resolution_breached_fired_cracker days = 3600 } }
			}
			if = {
				limit = {
					exists = owner
					owner = {
						NOT = { is_same_value = from.owner }
						ag_is_common_country = yes
					}
				}
				# Generate threat
				if = {
					limit = { is_colony = yes }
					add_threat = { who = from.owner amount = 3 }
					# modifier for allies + those upset by genocide
					every_country = {
						limit = {
							NOR = {
								is_same_value = from.owner
								is_same_value = root.owner
								AND = {
									has_federation = yes
									is_in_federation_with = from.owner
								}
							}
							OR = {
								has_communications = from.owner
								has_communications = root.owner
							}
							OR = {
								AND = {
									has_federation = yes
									is_in_federation_with = root.owner
								}
								has_ai_personality = awakened_fallen_empire_xenophile
								AND = {
									is_country_type = default
									OR = {
										is_egalitarian = yes
										is_xenophile = yes
									}
								}
							}
						}
						if = {
							limit = { root = { is_colony = no } }
							add_opinion_modifier = {
								modifier = opinion_cracked_an_uninhabited_world
								who = from.owner
							}
						}
						else = {
							add_opinion_modifier = {
								modifier = opinion_cracked_a_world
								who = from.owner
							}
						}
					}
				}
				else = { add_threat = { who = from.owner amount = 1 } }
				# modifiers for victim
				owner = {
					if = {
						limit = { root = { is_colony = no } }
						add_opinion_modifier = {
							modifier = opinion_cracked_my_uninhabited_world
							who = from.owner
						}
					}
					else = {
						add_opinion_modifier = {
							modifier = opinion_cracked_my_world
							who = from.owner
						}
					}
					if = {
						limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
						add_modifier = { modifier = "colossus_victim" days = 10800 }
					}
				}
				if = {
					limit = { exists = owner owner = { is_country_type = primitive } }
					# modifier for allies + those upset by genocide
					every_country = {
						limit = {
							NOT = { is_same_value = from.owner }
							OR = {
								has_communications = from.owner
								has_communications = root.owner
							}
							OR = {
								has_ai_personality = awakened_fallen_empire_xenophile
								AND = {
									is_country_type = default
									NOR = {
										is_xenophobe = yes
										is_homicidal = yes
										is_xenophile = yes
									}
								}
							}
						}
						add_opinion_modifier = {
							modifier = opinion_cracked_a_primitive_world
							who = from.owner
						}
					}
					every_country = {
						limit = {
							NOT = { is_same_value = from.owner }
							OR = {
								has_communications = from.owner
								has_communications = root.owner
							}
							OR = {
								has_ai_personality = awakened_fallen_empire_xenophile
								AND = {
									is_country_type = default
									is_xenophile = yes
								}
							}
						}
						add_opinion_modifier = {
							modifier = opinion_cracked_a_primitive_world_phile
							who = from.owner
						}
					}
				}
			}
			if = {
				limit = { exists = owner }
				owner = {
					add_static_war_exhaustion = {
						attacker = from.owner
						location = root
						value_for_planet_destruction = 1.0
					}
				}
			}
			if = { limit = { num_pops > 0 } every_owned_pop = { kill_pop = yes } }
			if = {
				limit = { is_colony = yes }
				remove_all_buildings = yes
				remove_all_districts = yes
			}
			if = {
				limit = { OR = { ag_is_habitat = yes is_planet_class = pc_habitat_shielded } }
				spawn_habitat_cracker_effect = yes
				remove_planet = yes
			}
			else_if = {
				limit = {
					ag_is_ringworld = yes
					NOR = {
						is_planet_class = pc_ag_ringworld_shrouded
						is_planet_class = pc_ringworld_habitable_damaged
						is_planet_class = pc_ringworld_seam_damaged
						is_planet_class = pc_ringworld_tech_damaged
					}
				}
				spawn_ringworld_cracker_effect = yes
				change_pc = pc_ringworld_habitable_damaged
			}
			else_if = {
				limit = { always = yes }
				change_pc = pc_shattered
				if = {
					limit = {
						NOR = {
							is_planet_class = pc_molten
							is_planet_class = pc_toxic
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
							is_planet_class = pc_frozen
						}
					}
					random_list = {
						25 = { while = { count = 4 add_deposit = d_minerals_4 } }
						25 = { while = { count = 3 add_deposit = d_minerals_4 } }
						25 = { while = { count = 2 add_deposit = d_minerals_4 } }
						25 = { add_deposit = d_minerals_4 }
					}
				}
				else = {
					while = {
						count = 2
						random_list = {
							100 = { }
							25 = { add_deposit = d_minerals_1 }
							25 = { add_deposit = d_minerals_2 }
							25 = { add_deposit = d_minerals_3 }
							25 = { add_deposit = d_minerals_4 }
						}
					}
				}
			}
			if = {
				limit = {
					solar_system = { has_star_flag = sol }
					from.owner = { NOT = { species_portrait = human } }
					OR = {
						has_planet_flag = planet_earth
						has_planet_flag = nuked_earth
						AND = {
							exists = owner
							owner = {
								is_primitive = yes
								species_portrait = human
							}
						}
					}
				}
				random_list = {
					50 = { }
					50 = {
						solar_system = { save_event_target_as = sol_sys }
						from.owner = { country_event = { id = planet_destruction.111 } }
					}
				}
			}
			if = {
				limit = { has_modifier = "holy_planet" }
				remove_modifier = "holy_planet"
				add_modifier = { modifier = "ag_shattered_holy_planet" days = -1 }
				if = {
					limit = {
						NOT = { has_global_flag = ag_holy_guardian_to_awaken }
						any_country = {
							has_ai_personality_behaviour = holy_planets
							NOT = { is_at_war_with = root.owner }
						}
					}
					root.owner = { save_event_target_as = ag_source_country }
					save_event_target_as = ag_destroyed_holy_planet
					set_global_flag = ag_holy_guardian_to_awaken
					random_country = {
						limit = {
							has_ai_personality_behaviour = holy_planets
							NOT = { is_at_war_with = event_target:ag_source_country }
						}
						save_event_target_as = ag_holy_guardian_empire
					}
					event_target:ag_source_country = {
						country_event = { id = ag_ancient.1000 days = 2 random = 5 }
					}
				}
			}
			from.owner = {
				if = {
					limit = { has_ascension_perk = ap_become_the_crisis }
					complete_crisis_objective = crisobj_destroy_worlds
				}
			}
		}
		every_country = {
			create_message = {
				type = "PLANET_DESTROYED"
				localization = "message_ag_ancient_epsilon_pk_weapon_killed_planet_desc"
				days = 30
				target = root
				variable = {
					type = name
					localization = "ag_target_planet"
					scope = root
				}
				variable = {
					type = name
					localization = "ag_attacker"
					scope = from.owner
				}
				variable = {
					type = name
					localization = "ag_attacker_ship"
					scope = from
				}
			}
		}
	}
}

# Destroyed a planet, clean up pops only.
planet_event = {
	id = ag_planet_killer.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_star = no
		from = { has_fleet_flag = ag_epsilon_star_killer_planet_sweeper_mode }
	}

	immediate = {
		from.owner = {
			if = {
				limit = { NOT = { has_country_flag = ag_fired_ancient_star_killer_alt2 } }
				set_country_flag = ag_fired_ancient_star_killer_alt2
				country_event = { id = ag_planet_killer.13 }
			}
		}
		if = {
			limit = { is_asteroid = yes }
			remove_planet = yes
		}
		else = {
			if = {
				limit = { is_planet_class = pc_gas_giant }
				clear_deposits = yes
			}
			if = {
				limit = { exists = owner }
				if = {
					limit = {
						owner = { is_country_type = ag_zeta_crisis_country }
						OR = {
							is_planet_class = pc_ag_shrouded
							is_planet_class = pc_ag_ringworld_shrouded
						}
					}
					random_list = {
						10 = { add_planet_devastation = 10 }
						10 = { add_planet_devastation = 11 }
						10 = { add_planet_devastation = 12 }
						10 = { add_planet_devastation = 13 }
						10 = { add_planet_devastation = 14 }
						10 = { add_planet_devastation = 15 }
						10 = { add_planet_devastation = 16 }
						10 = { add_planet_devastation = 17 }
						10 = { add_planet_devastation = 18 }
						10 = { add_planet_devastation = 19 }
						10 = { add_planet_devastation = 20 }
					}
				}
				else = {
					random_list = {
						10 = { add_planet_devastation = 40 }
						10 = { add_planet_devastation = 44 }
						10 = { add_planet_devastation = 48 }
						10 = { add_planet_devastation = 52 }
						10 = { add_planet_devastation = 56 }
						10 = { add_planet_devastation = 60 }
						10 = { add_planet_devastation = 64 }
						10 = { add_planet_devastation = 68 }
						10 = { add_planet_devastation = 72 }
						10 = { add_planet_devastation = 76 }
						10 = { add_planet_devastation = 80 }
					}
				}
				#Dismantle observation post
				if = {
					limit = { has_observation_outpost = yes }
					observation_outpost_owner = {
						country_event = { id = planet_destruction.1000 days = 1 }
					}
				}
				# Swarm Situation Log counter
				if = {
					limit = { owner = { is_country_type = swarm } }
					every_country = {
						limit = { has_event_chain = "prethoryn_scourge_chain" }
						add_event_chain_counter = {
							event_chain = "prethoryn_scourge_chain"
							counter = "infested_worlds"
							amount = -1
						}
						add_event_chain_counter = {
							event_chain = "prethoryn_scourge_chain"
							counter = "infested_worlds_cleansed"
							amount = 1
						}
					}
				}
				if = {
					limit = {
						OR = {
							is_active_resolution = "resolution_rulesofwar_reverence_for_life"
							is_active_resolution = "resolution_rulesofwar_independent_tribunals"
							is_active_resolution = "resolution_rulesofwar_last_resort_doctrine"
							is_active_resolution = "resolution_rulesofwar_demobilization_initiative"
						}
					}
					from.owner = { set_timed_country_flag = { flag = resolution_breached_fired_cracker days = 3600 } }
				}
				if = {
					limit = { owner = {
						NOT = { is_same_value = from.owner }
						ag_is_common_country = yes
					} }
					# Generate threat
					add_threat = { who = from.owner amount = 3 }
					# modifier for allies + those upset by genocide
					every_country = {
						limit = {
							NOR = {
								is_same_value = from.owner
								is_same_value = root.owner
								AND = {
									has_federation = yes
									is_in_federation_with = from.owner
								}
							}
							OR = {
								has_communications = from.owner
								has_communications = root.owner
							}
							OR = {
								AND = {
									has_federation = yes
									is_in_federation_with = root.owner
								}
								has_ai_personality = awakened_fallen_empire_xenophile
								AND = {
									is_country_type = default
									OR = {
										is_egalitarian = yes
										is_xenophile = yes
										is_spiritualist = yes
									}
								}
							}
						}
						add_opinion_modifier = {
							modifier = opinion_swept_a_world
							who = from.owner
						}
					}
					# modifiers for victim
					owner = {
						add_opinion_modifier = {
							modifier = opinion_swept_my_world
							who = from.owner
						}
						if = {
							limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
							add_modifier = {
								modifier = colossus_victim
								days = 10800 # 30 years
							}
						}
					}
				}
				else_if = {
					limit = { owner = { is_country_type = primitive } }
					# modifier for allies + those upset by genocide
					every_country = {
						limit = {
							NOT = { is_same_value = from.owner }
							OR = {
								has_communications = from.owner
								has_communications = root.owner
							}
							is_country_type = default
							NOR = {
								is_xenophobe = yes
								is_homicidal = yes
								is_xenophile = yes
							}
						}
						add_opinion_modifier = {
							modifier = opinion_swept_a_primitive_world
							who = from.owner
						}
					}
					every_country = {
						limit = {
							NOT = { is_same_value = from.owner }
							OR = {
								has_communications = from.owner
								has_communications = root.owner
							}
							OR = {
								has_ai_personality = awakened_fallen_empire_xenophile
								AND = {
									is_country_type = default
									is_xenophile = yes
								}
							}
						}
						add_opinion_modifier = {
							modifier = opinion_swept_a_primitive_world_phile
							who = from.owner
						}
					}
				}
				# Add war exhaustion to planet owner
				owner = {
					if = {
						limit = { is_at_war_with = from.owner }
						add_static_war_exhaustion = {
							attacker = from.owner
							location = root
							value_for_planet_destruction = 1.0
						}
					}
				}
				every_owned_pop = {
					from.owner = {
						if = {
							limit = { has_ascension_perk = ap_become_the_crisis }
							complete_crisis_objective = crisobj_purge_pops
						}
					}
					kill_pop = yes
				}
				destroy_colony = yes
			}
			else = {
				random_list = {
					10 = { add_planet_devastation = 40 }
					10 = { add_planet_devastation = 44 }
					10 = { add_planet_devastation = 48 }
					10 = { add_planet_devastation = 52 }
					10 = { add_planet_devastation = 56 }
					10 = { add_planet_devastation = 60 }
					10 = { add_planet_devastation = 64 }
					10 = { add_planet_devastation = 68 }
					10 = { add_planet_devastation = 72 }
					10 = { add_planet_devastation = 76 }
					10 = { add_planet_devastation = 80 }
				}
			}
			add_modifier = { modifier = "ag_epsilon_star_killer_swept_1" days = 5400 }
			planet_event = { id = ag_planet_killer.4 days = 1080 }
			if = {
				limit = { is_planet_class = pc_habitat }
				add_deposit = ag_ancient_bomb_crater_habitat
				spawn_habitat_cracker_effect = yes
			}
			else_if = {
				limit = { is_planet_class = pc_ringworld_habitable }
				add_deposit = ag_ancient_bomb_crater_ringworld
				spawn_ringworld_cracker_effect = yes
			}
			else_if = {
				limit = { always = yes }
				add_deposit = ag_ancient_bomb_crater_default
				ag_spawn_explosion_effect = { ag_color = red ag_scale = xl }
			}
			if = {
				limit = { is_planet_class = pc_infested }
				random_list = {
					50 = { change_pc = pc_barren }
					50 = { change_pc = pc_barren_cold }
				}
				add_modifier = { modifier = "terraforming_candidate" days = -1 }
			}
		}
		every_country = {
			create_message = {
				type = "PLANET_DESTROYED"
				localization = "message_ag_ancient_epsilon_pk_weapon_swept_planet_desc"
				days = 30
				target = root
				variable = {
					type = name
					localization = "ag_target_planet"
					scope = root
				}
				variable = {
					type = name
					localization = "ag_attacker"
					scope = from.owner
				}
				variable = {
					type = name
					localization = "ag_attacker_ship"
					scope = from
				}
			}
		}
	}
}
planet_event = {
	id = ag_planet_killer.4
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		switch = {
			trigger = has_modifier
			ag_epsilon_star_killer_swept_1 = {
				remove_modifier = "ag_epsilon_star_killer_swept_1"
				add_modifier = { modifier = ag_epsilon_star_killer_swept_2 days = 4320 }
				planet_event = { id = ag_planet_killer.4 days = 1080 }
			}
			ag_epsilon_star_killer_swept_2 = {
				remove_modifier = "ag_epsilon_star_killer_swept_2"
				add_modifier = { modifier = ag_epsilon_star_killer_swept_3 days = 3240 }
				planet_event = { id = ag_planet_killer.4 days = 1080 }
			}
			ag_epsilon_star_killer_swept_3 = {
				remove_modifier = "ag_epsilon_star_killer_swept_3"
				add_modifier = { modifier = ag_epsilon_star_killer_swept_4 days = 2160 }
				planet_event = { id = ag_planet_killer.4 days = 1080 }
			}
			ag_epsilon_star_killer_swept_4 = {
				remove_modifier = "ag_epsilon_star_killer_swept_4"
				add_modifier = { modifier = ag_epsilon_star_killer_swept_5 days = 1080 }
			}
		}
	}
}

# Notifications.
country_event = {
	id = ag_planet_killer.11
	title = "ag_planet_killer.11.name"
	desc = "ag_planet_killer.11.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_black_hole_room }
	show_sound = event_activating_unknown_technology
	location = from
	is_triggered_only = yes
	option = {
		name = "ag_planet_killer.11.a"
		trigger = {
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_machine_terminator
			}
		}
	}
	option = {
		name = "ag_planet_killer.11.b"
		trigger = {
			OR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_machine_terminator
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 60
			min = 600
			max = 3000
		}
	}
}
country_event = {
	id = ag_planet_killer.12
	title = "ag_planet_killer.12.name"
	desc = "ag_planet_killer.12.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_exploding_planet_room }
	show_sound = event_activating_unknown_technology
	location = from
	is_triggered_only = yes
	option = {
		name = "ag_planet_killer.12.a"
		trigger = {
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_machine_terminator
			}
		}
	}
	option = {
		name = "ag_planet_killer.12.b"
		trigger = {
			OR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_machine_terminator
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 60
			min = 600
			max = 3000
		}
	}
}
country_event = {
	id = ag_planet_killer.13
	title = "ag_planet_killer.13.name"
	desc = "ag_planet_killer.13.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_burning_settlement_room }
	show_sound = event_activating_unknown_technology
	location = from
	is_triggered_only = yes
	option = {
		name = "ag_planet_killer.13.a"
		trigger = {
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_machine_terminator
			}
		}
	}
	option = {
		name = "ag_planet_killer.13.b"
		trigger = {
			OR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_machine_terminator
			}
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 60
			min = 600
			max = 3000
		}
	}
}
