
###############################
### Civil Wars by MrFunEGUY ###
###############################


namespace = civend

##################
#   Civil Wars   #
##################


# Initializer, normal Civil Wars
country_event = {
	id = civend.1000
	hide_window = yes
	is_triggered_only = yes

	# A war has been won
	# Root = Winner Warleader
	# From = Loser Warleader
	# FromFrom = War

	trigger = {
		NOT = { any_subject = { has_country_flag = subject_for_traitor_@from } }
		OR = {
			fromfrom = {
				OR = {
					using_war_goal = {
						type = wg_civwar
						owner = root
					}
					using_war_goal = {
						type = wg_civwar_heir
						owner = root
					}
					using_war_goal = {
						type = wg_coup_successor
						owner = root
					}
					using_war_goal = {
						type = wg_coup_independent
						owner = root
					}
					using_war_goal = {
						type = wg_coup_successor
						owner = root
					}
					using_war_goal = {
						type = wg_coup_fealty
						owner = root
					}
				}
			}
			AND = {
				fromfrom = {
					using_war_goal = {
						type = wg_planet_rebellion
						owner = root
					}
				}
				from.ruler = {
					NOR = {
						has_leader_flag = civil_war_ruler_separatist
						has_leader_flag = civil_war_ruler_nationalist
						has_leader_flag = civil_war_ruler_new
					}
				}
			}
		}
	}

	immediate = {

		from.ruler = { save_event_target_as = defeated_traitor_1 }

		clone_leader = {
			target = event_target:defeated_traitor_1
			class = ruler
			effect = {
				save_event_target_as = defeated_traitor
				set_leader_flag = dummy_leader
			}
		}

		get_traitor_outcome = yes
		
	}
}

# Traitorous Leader is Dead
country_event = {
	id = civend.1001
	title = civend.1001.name
	picture = GFX_evt_surrender
	location = root.capital_scope
	hide_window = no
	is_triggered_only = yes

	desc = {
		text = civend.1001.hanging.desc
		trigger = { has_country_flag = death_by_hanging }
	}

	desc = {
		text = civend.1001.jumping.desc
		trigger = { has_country_flag = death_by_jumping }
	}

	desc = {
		text = civend.1001.spacing.desc
		trigger = { has_country_flag = death_by_spacing }
	}

	desc = {
		text = civend.1001.gun.desc
		trigger = { has_country_flag = death_by_gun }
	}

	desc = {
		text = civend.1001.poison.desc
		trigger = { has_country_flag = death_by_poison }
	}

	desc = {
		text = civend.1001.coup.desc
		trigger = { has_country_flag = death_by_coup }
	}

	# Unfortunate we couldn't capture them
	option = {
		name = civend.1001.a
		hidden_effect = {
			event_target:defeated_traitor = {
				kill_leader = { show_notification = no }
			}
			if = {
				limit = { has_country_flag = death_by_hanging }
				remove_country_flag = death_by_hanging
			}
			else_if = {
				limit = { has_country_flag = death_by_jumping }
				remove_country_flag = death_by_jumping
			}
			else_if = {
				limit = { has_country_flag = death_by_spacing }
				remove_country_flag = death_by_spacing
			}
			else_if = {
				limit = { has_country_flag = death_by_gun }
				remove_country_flag = death_by_gun
			}
			else_if = {
				limit = { has_country_flag = death_by_poison }
				remove_country_flag = death_by_poison
			}
			else_if = {
				limit = { has_country_flag = death_by_coup }
				remove_country_flag = death_by_coup
			}
		}
	}
}

# Traitorous Leader Escapes is escaping to another empire, will works for them.
country_event = {
	id = civend.1003
	title = civend.1003.name
	desc = civend.1003.desc
	picture = GFX_evt_ship_travel
	location = root.capital_scope
	hide_window = no
	is_triggered_only = yes
	
	# Damn it!
	option = {
		name = civend.1003.a
		hidden_effect = {
			country_event = { id = civend.5000 }
		}
	}
}

# Traitorous Leader Captured
country_event = {
	id = civend.1004
	title = civend.1004.name
	picture = GFX_evt_surrender
	location = root.capital_scope
	hide_window = no
	is_triggered_only = yes

	desc = {
		text = civend.1004.coup.desc
		trigger = { has_country_flag = captured_by_coup }
	}

	desc = {
		text = civend.1004.normal.desc
		trigger = { has_country_flag = captured_normally }
	}

	# Excellent
	option = {
		name = civend.1004.a
		hidden_effect = { country_event = { id = civcom.7000 } }
	}

	after = {
		if = {
			limit = { has_country_flag = captured_by_coup }
			remove_country_flag = captured_by_coup
		}
		else_if = {
			limit = { has_country_flag = captured_normally }
			remove_country_flag = captured_normally
		}
	}
}

# Initializer, subject Civil Wars
country_event = {
	id = civend.2000
	hide_window = yes
	is_triggered_only = yes

	# A war has been won
	# Root = Winner Warleader
	# From = Loser Warleader
	# FromFrom = War

	trigger = {
		any_subject = { has_country_flag = subject_for_traitor_@from }
		OR = {
			fromfrom = {
				OR = {
					using_war_goal = {
						type = wg_civwar
						owner = root
					}
					using_war_goal = {
						type = wg_civwar_heir
						owner = root
					}
					using_war_goal = {
						type = wg_coup_successor
						owner = root
					}
					using_war_goal = {
						type = wg_coup_independent
						owner = root
					}
					using_war_goal = {
						type = wg_coup_successor
						owner = root
					}
					using_war_goal = {
						type = wg_coup_fealty
						owner = root
					}
				}
			}
			AND = {
				fromfrom = {
					using_war_goal = {
						type = wg_planet_rebellion
						owner = root
					}
				}
				from.ruler = {
					NOR = {
						has_leader_flag = civil_war_ruler_separatist
						has_leader_flag = civil_war_ruler_nationalist
						has_leader_flag = civil_war_ruler_new
					}
				}
			}
		}
	}

	immediate = {

		random_subject = {
			limit = { has_country_flag = subject_for_traitor_@from }
			remove_country_flag = subject_for_traitor_@from
			save_event_target_as = traitor_subject_country
		}

		from.ruler = { save_event_target_as = defeated_traitor_1 }

		event_target:traitor_subject_country = {
			clone_leader = {
				target = event_target:defeated_traitor_1
				class = ruler
				effect = {
					save_event_target_as = defeated_traitor
					set_leader_flag = dummy_leader
				}
			}
			get_traitor_outcome = yes
		}

		set_timed_country_flag = { flag = traitor_already_asked@event_target:defeated_traitor days = 10 }
	}
}

########

# Set subjects who assisted in civwar free
country_event = {
	id = civend.3000
	hide_window = yes
	is_triggered_only = yes

	# A war has been won
	# Root = Winner Warleader
	# From = Loser Warleader
	# FromFrom = War

	trigger = {
		fromfrom = {
			OR = {
				using_war_goal = { type = wg_civwar owner = root }
				using_war_goal = { type = wg_natwar owner = root }
				using_war_goal = { type = wg_civwar_heir owner = root }
				using_war_goal = { type = wg_coup_successor owner = root }
				using_war_goal = { type = wg_coup_independent owner = root }
			}
			any_attacker = {
				has_overlord = root
				NOT = { has_country_flag = sub_joins_overlord }
			}
		}
	}

	immediate = {
		fromfrom = {
			every_attacker = {
				limit = {
					has_overlord = root
					NOT = { has_country_flag = sub_joins_overlord }
				}
				set_subject_of = { who = none }
			}
		}
	}
}

# Set subjects who assisted in civwar free on rebel side
country_event = {
	id = civend.3005
	hide_window = yes
	is_triggered_only = yes

	# A war has been won
	# Root = Winner Warleader
	# From = Loser Warleader
	# FromFrom = War

	trigger = {
		is_overlord = yes
		fromfrom = {
			OR = {
				using_war_goal = { type = wg_civwar_rebel owner = root }
				using_war_goal = { type = wg_natwar_rebel owner = root }
				using_war_goal = { type = wg_civwar_heir_rebel owner = root }
				using_war_goal = { type = wg_coup_successor_opponent owner = root }
				using_war_goal = { type = wg_coup_independent_opponent owner = root }
			}
		}
	}

	immediate = {
		every_subject = {
			limit = { has_country_flag = helped_rebels_sub }
			remove_country_flag = helped_rebels_sub
			set_subject_of = { who = none }
		}
	}
}

# Set rebel pledged subjects back as subjects if we win
country_event = {
	id = civend.3010
	hide_window = yes
	is_triggered_only = yes

	# A war has been won
	# Root = Winner Warleader
	# From = Loser Warleader
	# FromFrom = War

	trigger = {
		# There are cases where this implemtation can be a little weird, but fuck you
		from = { is_overlord = yes }
		fromfrom = {
			OR = {
				using_war_goal = { type = wg_civwar owner = root }
				using_war_goal = { type = wg_natwar owner = root }
				using_war_goal = { type = wg_civwar_heir owner = root }
				using_war_goal = { type = wg_coup_successor owner = root }
				using_war_goal = { type = wg_coup_independent owner = root }
			}
		}
	}

	immediate = {
		from = {
			every_subject = {
				set_subject_of = {
					who = root
					preset = preset_vassal
				}
			}
		}
	}
}

# Set Rebel helper Subjects back as subjects 
country_event = {
	id = civend.3020
	hide_window = yes
	is_triggered_only = yes

	# A war has been won
	# Root = Winner Warleader
	# From = Loser Warleader
	# FromFrom = War

	trigger = {
		from = {
			is_overlord = yes
			any_subject = { has_country_flag = helped_rebels_sub }
		}
		fromfrom = {
			OR = {
				using_war_goal = { type = wg_civwar owner = root }
				using_war_goal = { type = wg_natwar owner = root }
				using_war_goal = { type = wg_civwar_heir owner = root }
				using_war_goal = { type = wg_coup_successor owner = root }
				using_war_goal = { type = wg_coup_independent owner = root }
			}
		}
	}

	immediate = {
		from = {
			every_subject = {
				limit = { has_country_flag = helped_rebels_sub }
				remove_country_flag = helped_rebels_sub
				set_subject_of = {
					who = root
					preset = preset_vassal
				}
			}
		}
	}
}

# Remove joiner flag
country_event = {
	id = civend.3030
	hide_window = yes
	is_triggered_only = yes

	# A war has been won
	# Root = Winner Warleader
	# From = Loser Warleader
	# FromFrom = War

	trigger = {
		fromfrom = {
			OR = {
				using_war_goal = { type = wg_civwar owner = root }
				using_war_goal = { type = wg_natwar owner = root }
				using_war_goal = { type = wg_civwar_heir owner = root }
				using_war_goal = { type = wg_coup_successor owner = root }
				using_war_goal = { type = wg_coup_independent owner = root }
			}
			any_attacker = { has_country_flag = sub_joins_overlord }
		}
	}

	immediate = {
		fromfrom = {
			every_attacker = {
				limit = { has_country_flag = sub_joins_overlord }
				remove_country_flag = sub_joins_overlord
			}
		}
	}
}

# Remove joiner flag
country_event = {
	id = civend.3031
	hide_window = yes
	is_triggered_only = yes

	# A war has been won
	# Root = Winner Warleader
	# From = Loser Warleader
	# FromFrom = War

	trigger = {
		fromfrom = {
			OR = {
				using_war_goal = { type = wg_civwar_rebel owner = root }
				using_war_goal = { type = wg_natwar_rebel owner = root }
				using_war_goal = { type = wg_civwar_heir_rebel owner = root }
				using_war_goal = { type = wg_coup_successor_opponent owner = root }
				using_war_goal = { type = wg_coup_independent_opponent owner = root }
			}
			any_attacker = { has_country_flag = sub_joins_overlord }
		}
	}

	immediate = {
		fromfrom = {
			every_attacker = {
				limit = { has_country_flag = sub_joins_overlord }
				remove_country_flag = sub_joins_overlord
			}
		}
	}
}

# Remove joiner flag
country_event = {
	id = civend.3032
	hide_window = yes
	is_triggered_only = yes

	# A status quo has been signed
	# Root = Actor
	# From = Recipient
	# FromFrom = Main Attacker
	# FromFromFrom = Main Defender
	# FromFromFromFrom = War

	trigger = {
		FromFromFromFrom = {
			OR = {
				using_war_goal = { type = wg_civwar owner = root }
				using_war_goal = { type = wg_natwar owner = root }
				using_war_goal = { type = wg_civwar_heir owner = root }
				using_war_goal = { type = wg_coup_successor owner = root }
				using_war_goal = { type = wg_coup_independent owner = root }
			}
			any_attacker = { has_country_flag = sub_joins_overlord }
		}
	}

	immediate = {
		FromFromFromFrom = {
			every_attacker = {
				limit = { has_country_flag = sub_joins_overlord }
				remove_country_flag = sub_joins_overlord
			}
		}
	}
}

########

# Traitorous Leader is attempting to escape to another empire, will work for them.
country_event = {
	id = civend.5000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:defeated_traitor
	}
	
	immediate = {

		# Note: Make subjects able to recieve traitors, at the risk of their overlord finding out.
		
		if = {
			limit = {
				any_country = {
					is_country_type_with_subjects = yes
					has_communications = root
					OR = {
						is_homicidal = no
						is_organic_zealots = yes
					}
					NOR = {
						is_loyal_to = root
						is_overlord_to = root
						has_overlord = root
						is_custodial_to = root
						has_country_flag = traitor_already_asked@event_target:defeated_traitor
					}
				}
			}
			save_event_target_as = traitor_home_country
			random_country = {
				limit = {
					is_country_type_with_subjects = yes
					has_communications = root
					OR = {
						is_homicidal = no
						is_organic_zealots = yes
					}
					NOR = {
						is_loyal_to = root
						is_overlord_to = root
						has_overlord = root
						is_custodial_to = root
						has_country_flag = traitor_already_asked@event_target:defeated_traitor
					}
				}
				country_event = { id = civend.5001 }
			}
		}
		else = { # Disappears forever, I guess.
			event_target:defeated_traitor = { kill_leader = { show_notification = no } }
		}
	}
}

# Traitorous Leader is attempting to escape to another empire, foreign country notification.
country_event = {
	id = civend.5001
	title = civend.5001.name
	desc = civend.5001.desc
	picture = GFX_evt_ship_travel
	location = root.capital_scope
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civend.5001.a
		hidden_effect = {
			country_event = { id = civcom.8000 }
		}
	}
}

# Traitorous Leader escaped to another empire, notify mother country.
country_event = {
	id = civend.5002
	title = civend.5002.name
	desc = civend.5002.desc
	picture = GFX_evt_ship_travel
	location = from.capital_scope
	hide_window = no
	is_triggered_only = yes

	option = { # How dare they accept them!
		name = civend.5002.a
		hidden_effect = {
			add_opinion_modifier = {
				who = from
				modifier = opinion_received_traitor
			}
		}
	}
}

# Traitorous Leader escaped to another empire, notify mother country, Admiral localisation
country_event = {
	id = civend.5012
	title = civend.5002.name
	desc = civend.5012.desc
	picture = GFX_evt_ship_travel
	location = root.capital_scope
	hide_window = no
	is_triggered_only = yes

	option = { # How dare they accept them!
		name = civend.5002.a
		hidden_effect = {
			add_opinion_modifier = {
				who = from
				modifier = opinion_received_traitor
			}
		}
	}
}

########

# Banished Leader is attempting to gain employ in another empire.
country_event = {
	id = civend.5100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:defeated_traitor
	}
	
	immediate = {

		if = {
			limit = {
				any_country = {
					is_country_type_with_subjects = yes
					has_communications = root
					OR = {
						is_homicidal = no
						is_organic_zealots = yes
					}
					NOR = {
						is_loyal_to = root
						is_overlord_to = root
						is_custodial_to = root
						has_overlord = root
						has_country_flag = traitor_already_asked@event_target:defeated_traitor
					}
				}
			}
			save_event_target_as = traitor_home_country
			random_country = {
				limit = {
					is_country_type_with_subjects = yes
					has_communications = root
					OR = {
						is_homicidal = no
						is_organic_zealots = yes
					}
					NOR = {
						is_loyal_to = root
						is_overlord_to = root
						is_custodial_to = root
						has_overlord = root
						has_country_flag = traitor_already_asked@event_target:defeated_traitor
					}
				}
				country_event = { id = civend.5001 }
			}
		}
	}
}

###########################
### Civil War Epilogues ###
###########################

# Traitorous Leader Executed.
country_event = {
	id = civend.6000
	title = civend.6000.name
	picture = GFX_evt_announcement
	location = root.capital_scope
	hide_window = no
	is_triggered_only = yes

	desc = {
		text = civend.6000.hanged.desc
		trigger = { has_country_flag = traitor_hanged }
	}

	desc = {
		text = civend.6000.firing_squad.desc
		trigger = { has_country_flag = traitor_firing_squad }
	}

	desc = {
		text = civend.6000.guillotine.desc
		trigger = { has_country_flag = traitor_guillotine }
	}

	desc = {
		text = civend.6000.flayed.desc
		trigger = { has_country_flag = traitor_flayed }
	}

	desc = {
		text = civend.6000.stretched.desc
		trigger = { has_country_flag = traitor_stretched }
	}

	desc = {
		text = civend.6000.piked.desc
		trigger = { has_country_flag = traitor_piked }
	}

	option = { # Good
		name = civend.6000.a
		hidden_effect = {
			event_target:defeated_traitor = { kill_leader = { show_notification = no } }
			if = {
				limit = { has_country_flag = traitor_hanged }
				remove_country_flag = traitor_hanged
			}
			else_if = {
				limit = { has_country_flag = traitor_firing_squad }
				remove_country_flag = traitor_firing_squad
			}
			else_if = {
				limit = { has_country_flag = traitor_guillotine }
				remove_country_flag = traitor_guillotine
			}
			else_if = {
				limit = { has_country_flag = traitor_flayed }
				remove_country_flag = traitor_flayed
			}
			else_if = {
				limit = { has_country_flag = traitor_stretched }
				remove_country_flag = traitor_stretched
			}
			else_if = {
				limit = { has_country_flag = traitor_piked }
				remove_country_flag = traitor_piked
			}
		}
	}
}

# A war has been won
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
# Traitorous Leader Installed or Retrieved at end of war.
country_event = {
	id = civend.8000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		fromfrom = {
			OR = {
				using_war_goal = { type = wg_install_traitor owner = root }
				using_war_goal = { type = wg_install_traitor_heir owner = root }
				using_war_goal = { type = wg_retrieve_traitor owner = root }
				using_war_goal = { type = wg_retrieve_traitor_heir owner = root }
			}
		}
	}

	immediate = {

		if = {
			limit = { fromfrom = { using_war_goal = { type = wg_install_traitor owner = root } } }
			random_owned_leader = {
				limit = { has_leader_flag = traitor_@from }
				set_owner = from
				save_event_target_as = traitor_leader
			}
			set_country_flag = installer_country_@event_target:traitor_leader
			from = { set_installed_traitor_gov = yes }
		}
		else_if = {
			limit = { fromfrom = { using_war_goal = { type = wg_install_traitor_heir owner = root } } }
			random_owned_leader = {
				limit = { has_leader_flag = heir_traitor_@from }
				set_owner = from
				save_event_target_as = traitor_leader
			}
			set_country_flag = installer_country_@event_target:traitor_leader
			from = { set_installed_traitor_gov = yes }
		}
		else_if = {
			limit = { fromfrom = { using_war_goal = { type = wg_retrieve_traitor owner = root } } }
			from = {
				random_owned_leader = {
					limit = { has_leader_flag = traitor_@root }
					set_owner = root
					save_event_target_as = defeated_traitor
				}
				# Just get all traitors with one war.
				every_owned_leader = {
					limit = { has_leader_flag = traitor_@root }
					set_owner = root
				}
				every_owned_leader = {
					limit = { has_leader_flag = heir_traitor_@root }
					set_owner = root
				}
			}
			country_event = { id = civcom.7100 }
		}
		else_if = {
			limit = { fromfrom = { using_war_goal = { type = wg_retrieve_traitor_heir owner = root } } }
			from = {
				random_owned_leader = {
					limit = { has_leader_flag = heir_traitor_@root }
					set_owner = root
					save_event_target_as = defeated_traitor
				}
				# Just get all traitors with one war.
				every_owned_leader = {
					limit = { has_leader_flag = heir_traitor_@root }
					set_owner = root
				}
				every_owned_leader = {
					limit = { has_leader_flag = traitor_@root }
					set_owner = root
				}
			}
			country_event = { id = civcom.7100 }
		}
	}
}

######

# Dead Installed Leader, remove grateful modifier
country_event = {
	id = civend.9000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			leader_class = ruler
			has_leader_flag = grateful_restored_leader_@this
		}
	}

	immediate = {

		from = {
			save_global_event_target_as = dead_grateful_leader
		}

		random_country = {
			limit = {
				has_country_flag = installer_country_@event_target:dead_grateful_leader
			}
			remove_country_flag = installer_country_@event_target:dead_grateful_leader
			save_event_target_as = remove_grateful_modifier_country
		}

		clear_global_event_target = dead_grateful_leader

		remove_opinion_modifier = {
			who = event_target:remove_grateful_modifier_country
			modifier = opinion_restored_to_leadership
		}
	}
}

# Dead fleeing traitor
country_event = {
	id = civend.9001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			OR = {
				has_leader_flag = traitor_1_@root
				has_leader_flag = traitor_2_@root
				has_leader_flag = traitor_3_@root
				has_leader_flag = traitor_4_@root
				has_leader_flag = traitor_5_@root
			}
		}
	}

	immediate = {

		from = { save_event_target_as = dead_traitor }

		if = {
			limit = {
				has_country_flag = traitor_country_1_@root
			}
			remove_country_flag = traitor_country_1_@root
			random_country = {
				limit = {
					has_country_flag = traitor_country_mother_1_@root
				}
				remove_country_flag = traitor_country_mother_1_@root
				country_event = { id = civend.9005 }
			}
		}
		else_if = {
			limit = {
				has_country_flag = traitor_country_2_@root
			}
			remove_country_flag = traitor_country_2_@root
			random_country = {
				limit = {
					has_country_flag = traitor_country_mother_2_@root
				}
				remove_country_flag = traitor_country_mother_2_@root
				country_event = { id = civend.9005 }
			}
		}
		else_if = {
			limit = {
				has_country_flag = traitor_country_3_@root
			}
			remove_country_flag = traitor_country_3_@root
			random_country = {
				limit = {
					has_country_flag = traitor_country_mother_3_@root
				}
				remove_country_flag = traitor_country_mother_3_@root
				country_event = { id = civend.9005 }
			}
		}
		else_if = {
			limit = {
				has_country_flag = traitor_country_4_@root
			}
			remove_country_flag = traitor_country_4_@root
			random_country = {
				limit = {
					has_country_flag = traitor_country_mother_4_@root
				}
				remove_country_flag = traitor_country_mother_4_@root
				country_event = { id = civend.9005 }
			}
		}
		else_if = {
			limit = {
				has_country_flag = traitor_country_5_@root
			}
			remove_country_flag = traitor_country_5_@root
			random_country = {
				limit = {
					has_country_flag = traitor_country_mother_5_@root
				}
				remove_country_flag = traitor_country_mother_5_@root
				country_event = { id = civend.9005 }
			}
		}
	}
}

# Treasonous Leader has died notification
country_event = {
	id = civend.9005
	title = civend.9005.name
	desc = civend.9005.desc
	picture = GFX_evt_spy_network
	hide_window = no
	is_triggered_only = yes

	option = { # One less threat to stability.
		name = civheir.8100.a
	}
}
