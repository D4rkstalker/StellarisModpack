namespace = ag_zeta_crisis

# on_entering_system_fleet, Hidden, give debuff to those ships enter Zeta Area before crisis appears
fleet_event = {
    id = ag_zeta_crisis.1
    hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_1
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		from = { has_star_flag = ag_zeta_crisis_core_system }
		owner = { NOT = { is_country_type = ag_zeta_crisis_country } }
		any_controlled_ship = { NOR = {
			ag_is_ancient_ship = yes
			ag_is_ancient_ship_unlocked = yes
		} }
	}
	
	immediate = { ag_zeta_crisis_core_system_ship_debuff_effect = yes }
}

# Hidden, First Stage of crisis.
country_event = {
    id = ag_zeta_crisis.2
    hide_window = yes
	is_triggered_only = yes
	trigger = { NOR = { has_global_flag = ag_zeta_crisis_stage_1 has_global_flag = ag_zeta_crisis_ended } }
	immediate = {
		set_global_flag = ag_zeta_crisis_stage_1
		event_target:ag_ancient_zeta_shielded_world = {
			ag_set_ancient_ringworld = {
				ag_color = violet
				ag_type = habitable
				ag_surface_type = shrouded
				ag_shield_color = blue
			}
			ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
			solar_system = { every_country = {
				limit = { intel_level = { level > low system = prev } }
				country_event = { id = ag_zeta_crisis.3 }
			} }
		}
		ag_create_zeta_criris_country = yes
	}
}
# Noti for the First Stage.
country_event = {
	id = ag_zeta_crisis.3
	title = "ag_zeta_crisis.3.name"
	desc = "ag_zeta_crisis.3.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_clocks_room }
	show_sound = event_yellow_alert
	location = event_target:ag_ancient_zeta_shielded_world
	is_triggered_only = yes
	option = { name = "ag_zeta_crisis.3.a" }
	option = { name = "ag_zeta_crisis.3.b" }
	option = { name = "ag_zeta_crisis.3.c" }
	option = {
		name = "ag_zeta_crisis.3.d"
		trigger = { species = { has_trait = trait_psionic } }
	}
}

# Hidden, Second Stage of crisis
country_event = {
    id = ag_zeta_crisis.11
    hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_1
		NOT = { has_global_flag = ag_zeta_crisis_stage_2 }
		NOT = { has_global_flag = ag_zeta_crisis_ended }
	}
	
	immediate = {
		if = {
			limit = { exists = event_target:ag_ancient_eta_shielded_world event_target:ag_ancient_eta_shielded_world = { exists = owner has_building = ag_ancient_eta_monument owner = { is_ai = no } } }
			event_target:ag_ancient_eta_shielded_world = {
				reroll_random = yes
				random_list = { 50 = { } 50 = { planet_event = { id = ag_zeta_psionics.10 days = 30 random = 30 } } }
				owner = { country_event = { id = ag_zeta_psionics.203 days = 5 random = 5 } }
			}
		}
		set_global_flag = ag_zeta_crisis_stage_2
		if = { limit = { has_crisis = no } set_crisis_stage_1 = yes }
		event_target:ag_ancient_zeta_shielded_world = {
			ag_set_ancient_ringworld = {
				ag_color = violet
				ag_type = habitable
				ag_surface_type = shrouded
				ag_shield_color = green
			}
			ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
			solar_system = { every_country = {
				limit = { intel_level = { level > low system = prev } }
				country_event = { id = ag_zeta_crisis.12 }
			} }
		}
	}
}

# Notification for Second Stage of crisis
country_event = {
	id = ag_zeta_crisis.12
	title = "ag_zeta_crisis.12.name"
	desc = "ag_zeta_crisis.12.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_clocks_room }
	show_sound = event_activating_unknown_technology
	location = event_target:ag_ancient_zeta_shielded_world
	is_triggered_only = yes
	option = {
		name = "ag_zeta_crisis.12.a"
		trigger = { OR = {
			has_ethic = ethic_materialist
			has_ethic = ethic_fanatic_materialist
		} }
	}
	option = {
		name = "ag_zeta_crisis.12.b"
		trigger = { OR = {
			has_ethic = ethic_spiritualist
			has_ethic = ethic_fanatic_spiritualist
		} }
	}
	option = {
		name = "ag_zeta_crisis.12.c"
		trigger = { NOT = { has_ethic = ethic_gestalt_consciousness } }
	}
	option = {
		name = "ag_zeta_crisis.12.d"
		trigger = { has_ethic = ethic_gestalt_consciousness }
	}
	# option = {
		# name = "ag_zeta_crisis.3.e"
		# trigger = { species = { has_trait = trait_psionic } }
	# }
}

# Hidden, Third Stage of crisis, invasion begins
country_event = {
    id = ag_zeta_crisis.21
    hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_1
		has_global_flag = ag_zeta_crisis_stage_2
		NOT = { has_global_flag = ag_zeta_crisis_stage_3 }
		NOT = { has_global_flag = ag_zeta_crisis_ended }
	}
	
	immediate = {
		if = {
			limit = { exists = event_target:ag_ancient_eta_shielded_world event_target:ag_ancient_eta_shielded_world = { exists = owner has_building = ag_ancient_eta_monument owner = { is_ai = no } } }
			event_target:ag_ancient_eta_shielded_world = {
				planet_event = { id = ag_zeta_psionics.10 days = 30 random = 30 }
				owner = { country_event = { id = ag_zeta_psionics.203 days = 5 random = 5 } }
			}
		}
		set_global_flag = ag_zeta_crisis_stage_3
		set_global_flag = ag_zeta_no_ancient_debris
		if = { limit = { OR = { has_crisis = no has_crisis_stage = { STAGE = 1 } } } set_crisis_stage_2 = yes }
		ag_create_zeta_criris_country = yes
		event_target:ag_zeta_crisis_country = { country_event = { id = ag_zeta_crisis.22 days = 50 random = 20 } }
		awaken_guardians_of_the_galaxy = yes
		# set_update_modifiers_batch = begin
		create_country = {
			name = "NAME_ag_zeta_crisis_portal_holder"
			type = ag_zeta_crisis_portal_holder
			flag = {
				icon = {
					category = "special"
					file = "the_shroud.dds"
				}
				background = {
					category = "backgrounds"
					file = "circle.dds"
				}
				colors={
					"black"
					"dark_purple"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			set_country_flag = ag_ancient_empire_mod_country
			save_global_event_target_as = ag_zeta_crisis_portal_holder
			set_country_flag = ag_zeta_crisis_portal_holder
			set_graphical_culture = fallen_empire_01
		}
		# set_update_modifiers_batch = end
		every_country = {
			limit = { NOT = { is_same_value = event_target:ag_zeta_crisis_portal_holder } }
			establish_communications_no_message = event_target:ag_zeta_crisis_portal_holder
		}
		event_target:ag_zeta_crisis_country = {
			set_faction_hostility = {
				target = event_target:ag_zeta_crisis_portal_holder
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
			country_event = { id = ag_zeta_crisis.551 days = 300 random = 20 }
			country_event = { id = ag_zeta_crisis.552 days = 540 random = 20 }
			country_event = { id = ag_zeta_crisis.553 days = 75 random = 20 }
			country_event = { id = ag_zeta_crisis.554 days = 50 random = 20 }
			country_event = { id = ag_zeta_crisis.210 days = 2 }	# set friendly takes 1 day.
			country_event = { id = ag_zeta_crisis.49 days = 360 random = 360 }
		}
		random_system = {
			limit = { has_star_flag = ag_ancient_zeta_system }
			spawn_megastructure = {
				type = ag_psionic_portal_megastructure
				orbit_angle = 233
				orbit_distance = 0
				coords_from = event_target:ag_ancient_zeta_star
			}
			isolate_system = yes
			set_star_flag = ag_no_jump_in_system
			set_star_flag = ag_no_jump_out_system
			every_fleet_in_system = {
				limit = { NAND = { exists = owner owner = { OR = {
					is_country_type = ag_zeta_crisis_country
					is_country_type = ag_zeta_crisis_portal_holder
					is_country_type = ag_zeta_crisis_relic_country
				} } } }
				destroy_fleet = { target = this kill_leader = yes destroy_template = yes }
			}
			ag_create_zeta_crisis_starbase = yes
			ag_create_zeta_crisis_special_ships = yes
			event_target:ag_ancient_zeta_shielded_world = {
				ag_destroy_habitable_ringworld_psionics = yes
				add_modifier = { modifier = "ag_zeta_crisis_core_planet" days = -1 }
				remove_modifier = "ag_ancient_shield_deposit_green"
				remove_deposit = ag_ancient_shield_deposit_green
				set_owner = event_target:ag_zeta_crisis_country
				set_controller = event_target:ag_zeta_crisis_country
				set_colony_type = col_ag_zeta_crisis
				planet_event = { id = ag_zeta_crisis.27 days = 10 }
			}
			event_target:ag_zeta_shrouded_planet = {
				ag_change_pc = { ag_planet_class = pc_ag_shrouded }
				add_modifier = { modifier = "ag_zeta_crisis_core_planet" days = -1 }
				set_owner = event_target:ag_zeta_crisis_country
				set_controller = event_target:ag_zeta_crisis_country
				set_colony_type = col_ag_zeta_crisis
			}
			random_system_planet = {
				limit = { is_star = yes }
				ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
				create_fleet = {
					name = "NAME_ag_zeta_crisis_portal_fleet"
					settings = {
						spawn_debris = no
					}
					effect = {
						set_fleet_flag = ag_zeta_crisis_home_portal
						set_fleet_flag = ag_zeta_crisis_portal
						set_owner = event_target:ag_zeta_crisis_portal_holder
						set_event_locked = yes
						create_ship = {
							name = "NAME_ag_zeta_crisis_portal_ship"
							design = "NAME_ag_zeta_crisis_portal"
							prefix = no
							effect = {
								ag_difficulty_bonus = yes
								ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = event }
							}
						}
						set_location = { target = prev distance = 0 angle = 0 }
					}
				}
				ag_spawn_zeta_crisis_guardian_fleet = yes
				while = { count = 2 ag_spawn_zeta_crisis_assault_fleet = yes }
			}
		}
		event_target:global_event_country = { change_variable = { which = ag_num_psionic_portals_spawned value = 1 } }
		ag_zeta_crisis_gate_portal_spawn = {
			ag_portal_event_target_name = ag_zeta_crisis_first_portal
			ag_portal_planet_flag = ag_zeta_crisis_portal_1_planet
			ag_portal_fleet_flag = ag_zeta_crisis_portal_1_fleet
			ag_portal_notification_event = ag_zeta_crisis.211
		}
		every_playable_country = { country_event = { id = ag_ancient.1055 days = 2 random = 3 } add_modifier = { modifier = "ag_zeta_crisis_anti_cloaking" days = -1 } }
		event_target:global_event_country = { ag_clear_ship_cloaking_effect = yes }
	}
	after = {
		if = {
			limit = { has_galactic_custodian = yes }
			every_playable_country = { limit = { is_ai = no is_galactic_community_member = yes is_galactic_custodian = no is_galactic_emperor = no } country_event = { id = ag_zeta_psionics.111 } }
		}
		else_if = {
			limit = { has_galactic_emperor = yes }
			every_playable_country = { limit = { is_ai = no is_galactic_community_member = yes is_galactic_custodian = no is_galactic_emperor = no } country_event = { id = ag_zeta_psionics.112 } }
		}
		every_country = {
			limit = { any_situation = { is_situation_type = ag_zeta_crisis_init_situation } }
			random_situation = { limit = { is_situation_type = ag_zeta_crisis_init_situation } destroy_situation = this }
		}
	}
}
country_event = {
	id = ag_zeta_crisis.210
    hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	immediate = {
		event_target:ag_ancient_zeta_shielded_world.solar_system = {
			every_system_megastructure = {
				limit = { OR = {
					is_megastructure_type = gateway_0
					is_megastructure_type = gateway_final
					is_megastructure_type = gateway_ruined
					is_megastructure_type = gateway_restored
					is_megastructure_type = ag_ancient_eta_gateway_megastructure_0
					is_megastructure_type = ag_ancient_eta_gateway_megastructure_1
					is_megastructure_type = ag_ancient_eta_gateway_megastructure_2
					is_megastructure_type = ag_ancient_eta_gateway_megastructure_3
					is_megastructure_type = ag_ancient_eta_gateway_megastructure_damaged
					is_megastructure_type = ag_ancient_eta_gateway_megastructure_damaged_alt
					is_megastructure_type = ag_ancient_eta_gateway_megastructure_closed
					is_megastructure_type = ag_ancient_eta_gateway_megastructure_closed_alt
				} }
				if = {
					limit = { exists = event_target:ag_eta_gateway_controller }
					event_target:ag_eta_gateway_controller = { ag_eta_gateway_flags_cleans_up_effect = { ag_clear_global_event_target = no } }
					clear_global_event_target = ag_eta_gateway_controller
				}
				remove_megastructure = this
			}
		}
		create_fleet = {
			name = "NAME_ag_zeta_area_inhibitor_fleet"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_fleet_flag = ag_zeta_area_inhibitor
				set_owner = event_target:ag_zeta_crisis_portal_holder
				set_event_locked = yes
				create_ship = {
					name = "NAME_ag_zeta_area_inhibitor_ship"
					design = "NAME_ag_zeta_area_inhibitor"
					prefix = no
				}
				set_location = { target = event_target:ag_ancient_zeta_shielded_world.solar_system.star distance = 0 angle = 0 }
			}
		}
	}
}

# Notification for Third Stage of crisis
country_event = {
	id = ag_zeta_crisis.211
	title = "ag_zeta_crisis.211.name"
	desc = "ag_zeta_crisis.211.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_red_alert
	location = event_target:ag_ancient_zeta_star
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.211.a"
		begin_event_chain = {
			event_chain = "ag_zeta_crisis_chain"
			target = this
		}
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_core_portal"
				amount = 2
			}
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_psionic_worlds"
				amount = 2
			}
			create_point_of_interest = {
				id = ag_zeta_crisis_home_portal
				name = "ag_zeta_crisis_home_portal"
				desc = "ag_zeta_crisis_home_portal_desc"
				event_chain = ag_zeta_crisis_chain
				location = event_target:ag_ancient_zeta_star
			}
			create_point_of_interest = {
				id = ag_zeta_crisis_gate_portal_1
				name = "ag_zeta_crisis_gate_portal"
				desc = "ag_zeta_crisis_gate_portal_desc"
				event_chain = ag_zeta_crisis_chain
				location = event_target:ag_zeta_crisis_first_portal
			}
		}
	}
}

# Hidden, Second Secondary Psionic Portal spawns
country_event = {
    id = ag_zeta_crisis.22
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_1
		has_global_flag = ag_zeta_crisis_stage_2
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		event_target:global_event_country = { check_variable = { which = ag_num_psionic_portals_spawned value = 1 } }
	}
	
	immediate = {
		country_event = { id = ag_zeta_crisis.23 days = 50 random = 20 }
		event_target:global_event_country = { change_variable = { which = ag_num_psionic_portals_spawned value = 1 } }
		ag_zeta_crisis_gate_portal_spawn = {
			ag_portal_event_target_name = ag_zeta_crisis_second_portal
			ag_portal_planet_flag = ag_zeta_crisis_portal_2_planet
			ag_portal_fleet_flag = ag_zeta_crisis_portal_2_fleet
			ag_portal_notification_event = ag_zeta_crisis.221
		}
	}
}

# Notification, Second Secondary Psionic Portal spawns
country_event = {
	id = ag_zeta_crisis.221
	title = "ag_zeta_crisis.221.name"
	desc = "ag_zeta_crisis.221.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_red_alert
	location = event_target:ag_zeta_crisis_second_portal
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.221.a"
		if = {
			limit = {
				NOT = {
					has_event_chain = "ag_zeta_crisis_chain"
				}
			}
			begin_event_chain = {
				event_chain = "ag_zeta_crisis_chain"
				target = this
			}
		}
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_core_portal"
				amount = 1
			}
			create_point_of_interest = {
				id = ag_zeta_crisis_gate_portal_2
				name = "ag_zeta_crisis_gate_portal"
				desc = "ag_zeta_crisis_gate_portal_desc"
				event_chain = ag_zeta_crisis_chain
				location = event_target:ag_zeta_crisis_second_portal
			}
		}
	}
}

# Hidden, Third Secondary Psionic Portal spawns
country_event = {
    id = ag_zeta_crisis.23
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_1
		has_global_flag = ag_zeta_crisis_stage_2
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		event_target:global_event_country = { check_variable = { which = ag_num_psionic_portals_spawned value = 2 } }
	}
	
	immediate = {
		country_event = { id = ag_zeta_crisis.24 days = 50 random = 20 }
		event_target:global_event_country = { change_variable = { which = ag_num_psionic_portals_spawned value = 1 } }
		ag_zeta_crisis_gate_portal_spawn = {
			ag_portal_event_target_name = ag_zeta_crisis_third_portal
			ag_portal_planet_flag = ag_zeta_crisis_portal_3_planet
			ag_portal_fleet_flag = ag_zeta_crisis_portal_3_fleet
			ag_portal_notification_event = ag_zeta_crisis.231
		}
	}
}

# Notification, Third Secondary Psionic Portal spawns
country_event = {
	id = ag_zeta_crisis.231
	title = "ag_zeta_crisis.231.name"
	desc = "ag_zeta_crisis.231.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_red_alert
	location = event_target:ag_zeta_crisis_third_portal
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.231.a"
		if = {
			limit = {
				NOT = {
					has_event_chain = "ag_zeta_crisis_chain"
				}
			}
			begin_event_chain = {
				event_chain = "ag_zeta_crisis_chain"
				target = this
			}
		}
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_core_portal"
				amount = 1
			}
			create_point_of_interest = {
				id = ag_zeta_crisis_gate_portal_3
				name = "ag_zeta_crisis_gate_portal"
				desc = "ag_zeta_crisis_gate_portal_desc"
				event_chain = ag_zeta_crisis_chain
				location = event_target:ag_zeta_crisis_third_portal
			}
		}
	}
}

# Hidden, Fourth Secondary Psionic Portal spawns
country_event = {
    id = ag_zeta_crisis.24
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_1
		has_global_flag = ag_zeta_crisis_stage_2
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		event_target:global_event_country = { check_variable = { which = ag_num_psionic_portals_spawned value = 3 } }
	}
	
	immediate = {
		country_event = { id = ag_zeta_crisis.25 days = 50 random = 20 }
		event_target:global_event_country = { change_variable = { which = ag_num_psionic_portals_spawned value = 1 } }
		ag_zeta_crisis_gate_portal_spawn = {
			ag_portal_event_target_name = ag_zeta_crisis_fourth_portal
			ag_portal_planet_flag = ag_zeta_crisis_portal_4_planet
			ag_portal_fleet_flag = ag_zeta_crisis_portal_4_fleet
			ag_portal_notification_event = ag_zeta_crisis.241
		}
	}
}

# Notification, Fourth Secondary Psionic Portal spawns
country_event = {
	id = ag_zeta_crisis.241
	title = "ag_zeta_crisis.241.name"
	desc = "ag_zeta_crisis.241.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_red_alert
	location = event_target:ag_zeta_crisis_fourth_portal
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.241.a"
		if = {
			limit = {
				NOT = {
					has_event_chain = "ag_zeta_crisis_chain"
				}
			}
			begin_event_chain = {
				event_chain = "ag_zeta_crisis_chain"
				target = this
			}
		}
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_core_portal"
				amount = 1
			}
			create_point_of_interest = {
				id = ag_zeta_crisis_gate_portal_4
				name = "ag_zeta_crisis_gate_portal"
				desc = "ag_zeta_crisis_gate_portal_desc"
				event_chain = ag_zeta_crisis_chain
				location = event_target:ag_zeta_crisis_fourth_portal
			}
		}
	}
}

# Hidden, Fifth Secondary Psionic Portal spawns
country_event = {
    id = ag_zeta_crisis.25
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_1
		has_global_flag = ag_zeta_crisis_stage_2
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		event_target:global_event_country = { check_variable = { which = ag_num_psionic_portals_spawned value = 4 } }
	}
	
	immediate = {
		country_event = { id = ag_zeta_crisis.26 days = 50 random = 20 }
		event_target:global_event_country = { change_variable = { which = ag_num_psionic_portals_spawned value = 1 } }
		ag_zeta_crisis_gate_portal_spawn = {
			ag_portal_event_target_name = ag_zeta_crisis_fifth_portal
			ag_portal_planet_flag = ag_zeta_crisis_portal_5_planet
			ag_portal_fleet_flag = ag_zeta_crisis_portal_5_fleet
			ag_portal_notification_event = ag_zeta_crisis.251
		}
	}
}

# Notification, Fifth Secondary Psionic Portal spawns
country_event = {
	id = ag_zeta_crisis.251
	title = "ag_zeta_crisis.251.name"
	desc = "ag_zeta_crisis.251.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_red_alert
	location = event_target:ag_zeta_crisis_fifth_portal
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.251.a"
		if = {
			limit = {
				NOT = {
					has_event_chain = "ag_zeta_crisis_chain"
				}
			}
			begin_event_chain = {
				event_chain = "ag_zeta_crisis_chain"
				target = this
			}
		}
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_core_portal"
				amount = 1
			}
			create_point_of_interest = {
				id = ag_zeta_crisis_gate_portal_5
				name = "ag_zeta_crisis_gate_portal"
				desc = "ag_zeta_crisis_gate_portal_desc"
				event_chain = ag_zeta_crisis_chain
				location = event_target:ag_zeta_crisis_fifth_portal
			}
		}
	}
}

# Hidden, Sixth Secondary Psionic Portal spawns
country_event = {
    id = ag_zeta_crisis.26
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_1
		has_global_flag = ag_zeta_crisis_stage_2
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		event_target:global_event_country = { check_variable = { which = ag_num_psionic_portals_spawned value = 5 } }
	}
	
	immediate = {
		set_global_flag = ag_zeta_crisis_all_portal_spawned
		if = { limit = { OR = { has_crisis = no has_crisis_stage = { STAGE = 1 } has_crisis_stage = { STAGE = 2 } } } set_crisis_stage_3 = yes }
		event_target:global_event_country = { change_variable = { which = ag_num_psionic_portals_spawned value = 1 } }
		ag_zeta_crisis_gate_portal_spawn = {
			ag_portal_event_target_name = ag_zeta_crisis_sixth_portal
			ag_portal_planet_flag = ag_zeta_crisis_portal_6_planet
			ag_portal_fleet_flag = ag_zeta_crisis_portal_6_fleet
			ag_portal_notification_event = ag_zeta_crisis.261
		}
	}
}

# Notification, Sixth Secondary Psionic Portal spawns
country_event = {
	id = ag_zeta_crisis.261
	title = "ag_zeta_crisis.261.name"
	desc = "ag_zeta_crisis.261.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_red_alert
	location = event_target:ag_zeta_crisis_sixth_portal
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.261.a"
		if = {
			limit = {
				NOT = {
					has_event_chain = "ag_zeta_crisis_chain"
				}
			}
			begin_event_chain = {
				event_chain = "ag_zeta_crisis_chain"
				target = this
			}
		}
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_core_portal"
				amount = 1
			}
			create_point_of_interest = {
				id = ag_zeta_crisis_gate_portal_6
				name = "ag_zeta_crisis_gate_portal"
				desc = "ag_zeta_crisis_gate_portal_desc"
				event_chain = ag_zeta_crisis_chain
				location = event_target:ag_zeta_crisis_sixth_portal
			}
		}
	}
}

# Half year cycle to remove fleets that entered Zeta Area before all Secondary Psionic Portals destroyed
planet_event = {
	id = ag_zeta_crisis.27
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		event_target:ag_zeta_crisis_country = {
			check_variable = {
				which = ag_zeta_crisis_gate_portal_destroyed
				value < 6
			}
		}
	}

	immediate = {
		planet_event = { id = ag_zeta_crisis.27 days = 180 }
		solar_system = {
			every_fleet_in_system = {
				limit = {
					exists = owner
					owner = {
						NOR = {
							is_country_type = ag_zeta_crisis_country
							is_country_type = ag_zeta_crisis_portal_holder
						}
					}
				}
				destroy_fleet = this
			}
		}
	}
}

# on_ship_destroyed_perp, Counter for ships destroyed by Shroud Invaders
country_event = {
	id = ag_zeta_crisis.31
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = ag_zeta_crisis_country
		from = { NOT = { is_country_type = ag_zeta_crisis_country } }
	}

	immediate = {
		from = { change_variable = { which = ag_num_ships_destroyed_by_zeta_crisis value = 1 } }
		every_country = {
			limit = {
				NOT = { is_same_value = event_target:ag_zeta_crisis_country }
				has_event_chain = "ag_zeta_crisis_chain"
			}
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_victims"
				amount = 1
			}
		}
	}
}

# on_ship_destroyed_victim, Counter for Shroud Invaders' ships killed
country_event = {
	id = ag_zeta_crisis.32
	hide_window = yes

	is_triggered_only = yes

	trigger = { is_country_type = ag_zeta_crisis_country }

	immediate = {
		from = {
			if = {
				limit = { NOT = { has_event_chain = "ag_zeta_crisis_chain" } }
				begin_event_chain = {
					event_chain = "ag_zeta_crisis_chain"
					target = this
				}
			}
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_killed_by_us"
				amount = 1
			}
			if = {
				limit = {
					NOT = { has_country_flag = ag_killed_zeta_crisis_starbase }
					root.fromfrom = { is_ship_size = starbase_ag_zeta_crisis }
				}
				set_country_flag = ag_killed_zeta_crisis_starbase
			}
		}
		every_country = {
			limit = {
				has_event_chain = "ag_zeta_crisis_chain"
				NOT = { is_same_value = root.from }
			}
			add_event_chain_counter = {
				event_chain = "ag_zeta_crisis_chain"
				counter = "ag_zeta_crisis_killed_by_others"
				amount = 1
			}
		}
		if = {
			limit = { fromfromfrom = { NOR = {
				is_ship_class = shipclass_military
				AND = { is_ship_class = shipclass_starbase fleet = { is_mobile = yes } }
				ag_is_mod_station = yes
			} } }
			fromfrom.fleet = {
				change_variable = { which = ag_num_zeta_crisis_fleet_killed value = 1 }
				if = {
					limit = { check_variable = { which = ag_num_zeta_crisis_fleet_killed value > @ag_zeta_crisis_other_kills } }
					clear_variable = ag_num_zeta_crisis_fleet_killed
					solar_system = { system_event = { id = ag_zeta_crisis.34 } }
				}
				if = {
					limit = { NOT = { has_fleet_flag = ag_zeta_crisis_33_mutex } }
					set_fleet_flag = ag_zeta_crisis_33_mutex
					fleet_event = { id = ag_zeta_crisis.33 days = 1 }
				}
			}
		}
	}
}
fleet_event = {
	id = ag_zeta_crisis.33
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = { clear_variable = ag_num_zeta_crisis_fleet_killed remove_fleet_flag = ag_zeta_crisis_33_mutex }
}
system_event = {
	id = ag_zeta_crisis.34
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_event_active = yes }
	immediate = {
		if = {
			limit = { NOR = { has_star_flag = ag_zeta_crisis_psionic_storm_system has_star_flag = ag_zeta_crisis_psionic_singularity_system } }
			random_list = {
				20 = { ag_create_large_psionic_storm = { ag_forced_spawn_reinforcement = yes ag_kill_fleets = yes } }
				80 = { ag_create_small_psionic_storm = { ag_forced_spawn_reinforcement = yes ag_kill_fleets = yes } }
			}
		}
	}
}

# on_ship_destroyed_victim, Give Shroud Invaders' weakness research project if player lost too many ships
country_event = {
	id = ag_zeta_crisis.35
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		from = {
			is_country_type = ag_zeta_crisis_country
		}
		is_ai = no
		NOR = {
			has_global_flag = ag_zeta_crisis_ended
			has_country_flag = ag_has_zeta_crisis_weakness
		}
	}
	
	immediate = {
		if = {
			limit = {
				check_variable = {
					which = ag_zeta_crisis_killcount
					value < 1
				}
			}
			set_variable = {
				which = ag_zeta_crisis_killcount
				value = 1
			}
		}
		fromfrom = {
			root = {
				ag_hostile_kill_counter = {
					ag_variable_name = ag_zeta_crisis_killcount
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ag_zeta_crisis_killcount
					value > 512
				}
				NOR = {
					has_global_flag = ag_zeta_crisis_ended
					has_country_flag = ag_has_zeta_crisis_weakness
				}
			}
			set_variable = {
				which = ag_zeta_crisis_killcount
				value = 512
			}
			random_list = {
				25 = {
					country_event = {
						id = ag_zeta_crisis.351
						days = 30
						random = 30
					}
					set_country_flag = ag_has_zeta_crisis_weakness
				}
				75 = {
				}
			}
		}
	}
}

# Notification for Shroud Invaders' weakness research project
country_event = {
	id = ag_zeta_crisis.351
	title = "ag_zeta_crisis.351.name"
	desc = "ag_zeta_crisis.351.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_sabotaged_ship_room }
	show_sound = event_yellow_alert
	
	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
	}
	
	option = {
		name = "ag_zeta_crisis.351.a"
		enable_special_project = {
			name = "ag_find_zeta_crisis_weakness"
			location = capital_scope
			owner = root
		}
	}
	option = {
		name = "ag_zeta_crisis.351.b"
		add_resource = { influence = @ag_end_event_influence_large }
	}
}

# Completed special project for Shroud Invaders' weakness
country_event = {
	id = ag_zeta_crisis.352
	title = "ag_zeta_crisis.352.name"
	desc = "ag_zeta_crisis.352.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_physics_research_room }
	show_sound = event_laboratory_sound
	
	is_triggered_only = yes

	option = {
		name = "ag_zeta_crisis.352.a"
		if = {
			limit = {
				NOT = {
					has_modifier = ag_zeta_crisis_weakness
				}
			}
			add_modifier = {
				modifier = ag_zeta_crisis_weakness
				days = -1
			}
		}
	}
}

# on_ship_destroyed_perp, Shroud Invaders create avaters when destroy other ships
country_event = {
	id = ag_zeta_crisis.41
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		is_country_type = ag_zeta_crisis_country
		from = { NOT = { is_country_type = ag_zeta_crisis_country } }
	}
	
	immediate = {
		if = {
			limit = { from = { is_ai = yes } }
			random_list = {
				75 = { }
				25 = {
					fromfromfrom = {
						if = {
							limit = { exists = fleet }
							fleet = { save_event_target_as = ag_zeta_crisis_avatar_spawn_loc }
						}
						else_if = {
							limit = { exists = solar_system }
							solar_system = {
								random_system_planet = {
									limit = { is_star = yes }
									save_event_target_as = ag_zeta_crisis_avatar_spawn_loc
								}
							}
						}
					}
					if = {
						limit = { exists = event_target:ag_zeta_crisis_avatar_spawn_loc }
						fromfromfrom = {
							root.from = {
								ag_hostile_kill_counter = {
									ag_variable_name = ag_no_variable
									ag_effect_corvette_class = ag_zeta_t2_class_target_effect
									ag_effect_destroyer_class = ag_zeta_t2_class_target_effect
									ag_effect_cruiser_class = ag_zeta_t3_class_target_effect
									ag_effect_battleship_class = ag_zeta_t3_class_target_effect
									ag_effect_titan_class = ag_zeta_t4_class_target_effect
									ag_effect_colossus_class = ag_zeta_t5_class_target_effect
									ag_effect_constructor_class = ag_zeta_t1_class_target_effect
									ag_effect_colonizer_class = ag_zeta_t2_class_target_effect
									ag_effect_science_class = ag_zeta_t1_class_target_effect
									ag_effect_transport_class = ag_zeta_t1_class_target_effect
									ag_effect_defensive_station_class = ag_zeta_t1_class_target_effect
									ag_effect_starbase_class = ag_zeta_t2_class_target_effect
									ag_effect_civilian_station_class = ag_zeta_t1_class_target_effect
									ag_effect_ancient_class = ag_zeta_t2_class_target_effect
								}
							}
						}
					}
				}
			}
			reroll_random = yes
		}
		else = {
			fromfromfrom = {
				if = {
					limit = { exists = fleet }
					fleet = { save_event_target_as = ag_zeta_crisis_avatar_spawn_loc }
				}
				else_if = {
					limit = { exists = solar_system }
					solar_system = {
						random_system_planet = {
							limit = { is_star = yes }
							save_event_target_as = ag_zeta_crisis_avatar_spawn_loc
						}
					}
				}
			}
			if = {
				limit = { exists = event_target:ag_zeta_crisis_avatar_spawn_loc }
				fromfromfrom = {
					root.from = {
						ag_hostile_kill_counter = {
							ag_variable_name = ag_no_variable
							ag_effect_corvette_class = ag_zeta_t2_class_target_effect
							ag_effect_destroyer_class = ag_zeta_t2_class_target_effect
							ag_effect_cruiser_class = ag_zeta_t3_class_target_effect
							ag_effect_battleship_class = ag_zeta_t3_class_target_effect
							ag_effect_titan_class = ag_zeta_t4_class_target_effect
							ag_effect_colossus_class = ag_zeta_t5_class_target_effect
							ag_effect_constructor_class = ag_zeta_t1_class_target_effect
							ag_effect_colonizer_class = ag_zeta_t2_class_target_effect
							ag_effect_science_class = ag_zeta_t1_class_target_effect
							ag_effect_transport_class = ag_zeta_t1_class_target_effect
							ag_effect_defensive_station_class = ag_zeta_t1_class_target_effect
							ag_effect_starbase_class = ag_zeta_t2_class_target_effect
							ag_effect_civilian_station_class = ag_zeta_t1_class_target_effect
							ag_effect_ancient_class = ag_zeta_t2_class_target_effect
						}
					}
				}
			}
		}
	}
}

# Shroud Invaders' avatar upgraded or disappeared
fleet_event = {
	id = ag_zeta_crisis.42
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		exists = this
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
		has_fleet_flag = ag_zeta_crisis_avatar_fleet
		any_controlled_ship = {
			exists = this
			OR = {
				is_ship_size = ag_zeta_crisis_avatar_t1
				is_ship_size = ag_zeta_crisis_avatar_t2
				is_ship_size = ag_zeta_crisis_avatar_t3
				is_ship_size = ag_zeta_crisis_avatar_t4
				is_ship_size = ag_zeta_crisis_avatar_t5
			}
		}
	}
	
	immediate = {
		every_controlled_ship = {
			limit = {
				exists = this
				OR = {
					is_ship_size = ag_zeta_crisis_avatar_t1
					is_ship_size = ag_zeta_crisis_avatar_t2
					is_ship_size = ag_zeta_crisis_avatar_t3
					is_ship_size = ag_zeta_crisis_avatar_t4
					is_ship_size = ag_zeta_crisis_avatar_t5
				}
			}
			random_list = {
				900 = { destroy_ship = this }
				90 = {
					if = {
						limit = { NOT = { is_ship_size = ag_zeta_crisis_avatar_t5 } }
						random_list = {
							80 = {
								switch = {
									trigger = has_ship_flag
									ag_1_to_2 = {
										prev = {
											ag_zeta_crisis_avatar_t2_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_1_to_3 = {
										prev = {
											ag_zeta_crisis_avatar_t3_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_1_to_4 = {
										prev = {
											ag_zeta_crisis_avatar_t4_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_1_to_5 = {
										prev = {
											ag_zeta_crisis_avatar_t5_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_2_to_3 = {
										prev = {
											ag_zeta_crisis_avatar_t3_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_2_to_4 = {
										prev = {
											ag_zeta_crisis_avatar_t4_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_2_to_5 = {
										prev = {
											ag_zeta_crisis_avatar_t5_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_3_to_4 = {
										prev = {
											ag_zeta_crisis_avatar_t4_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_3_to_5 = {
										prev = {
											ag_zeta_crisis_avatar_t5_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
									ag_4_to_5 = {
										prev = {
											ag_zeta_crisis_avatar_t5_spawn = yes
										}
										ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
										delete_ship = this
									}
								}
							}
							20 = {
								if = {
									limit = {
										OR = {
											is_ship_size = ag_zeta_crisis_avatar_t1
											is_ship_size = ag_zeta_crisis_avatar_t2
											is_ship_size = ag_zeta_crisis_avatar_t3
										}
									}
									prev = {
										ag_zeta_crisis_small_ship_spawn = yes
									}
									ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
									delete_ship = this
								}
								else = {
									prev = {
										ag_zeta_crisis_medium_ship_spawn = yes
									}
									ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
									delete_ship = this
								}
							}
						}
					}
					else = {
						if = {
							limit = {
								NOT = {
									has_ship_flag = ag_zeta_crisis_avatar_t5_charged
								}
							}
							prev = { ag_zeta_crisis_small_ship_spawn = yes }
							ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
							delete_ship = this
						}
						else = {
							random_list = {
								80 = {
									prev = {
										ag_zeta_crisis_medium_ship_spawn = yes
									}
									ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
									delete_ship = this
								}
								20 = {
									prev = {
										ag_zeta_crisis_large_ship_spawn = yes
									}
									ag_spawn_explosion_effect = { ag_scale = s ag_color = violet }
									delete_ship = this
								}
							}
						}
					}
				}
				10 = { }
			}
		}
		fleet_event = { id = ag_zeta_crisis.42 days = 360 random = 180 }
	}
}

# on_ship_destroyed_victim, Shroud Invaders' ships split when destroyed
country_event = {
	id = ag_zeta_crisis.43
	hide_window = yes
	
	is_triggered_only = yes
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		is_country_type = ag_zeta_crisis_country
		from = { NOT = { is_country_type = ag_zeta_crisis_country } }
		fromfrom = {
			NOT = { has_ship_flag = ag_set_disable_at_health }
			OR = {
				is_ship_size = ag_zeta_crisis_small_ship
				is_ship_size = ag_zeta_crisis_medium_ship
				is_ship_size = ag_zeta_crisis_large_ship
				is_ship_size = ag_zeta_crisis_support_ship
				is_ship_size = starbase_ag_zeta_crisis
				is_ship_size = ag_zeta_crisis_avatar_t2
				is_ship_size = ag_zeta_crisis_avatar_t3
				is_ship_size = ag_zeta_crisis_avatar_t4
				is_ship_size = ag_zeta_crisis_avatar_t5
			}
		}
	}
	
	immediate = {
		if = {
			limit = { fromfrom = { NOT = { has_ship_flag = ag_zeta_crisis_43_mutex } } }
			fromfrom = { set_ship_flag = ag_zeta_crisis_43_mutex }
			if = {
				limit = { fromfrom = { is_ship_size = starbase_ag_zeta_crisis } }
				fromfromfrom = {
					if = {
						limit = { exists = fleet }
						fleet = { save_event_target_as = ag_zeta_crisis_split_avatar_spawn_loc }
					}
					else_if = {
						limit = { exists = solar_system }
						solar_system.star = { save_event_target_as = ag_zeta_crisis_split_avatar_spawn_loc }
					}
					else_if = {
						limit = { always = yes }
						random_system = {
							limit = {
								NOT = { has_star_flag = ag_ancient_zeta_system }
								exists = space_owner
								space_owner = { is_country_type = ag_zeta_crisis_country }
							}
							star = { save_event_target_as = ag_zeta_crisis_split_avatar_spawn_loc }
						}
					}
					solar_system = {
						system_event = { id = ag_zeta_crisis.502 days = 30 random = 30 }
						random_ambient_object = {
							limit = { has_ambient_object_flag = ag_zeta_crisis_system_effect_thin }
							destroy_ambient_object = this
						}
					}
				}
				if = {
					limit = { exists = event_target:ag_zeta_crisis_split_avatar_spawn_loc }
					ag_zeta_crisis_starbase_split_effect = yes
				}
			}
			else_if = {
				limit = { fromfrom = { exists = fleet } }
				fromfrom = { ag_zeta_crisis_ship_split_effect = yes }
			}
		}
	}
}

# on_planet_bombarded, Orbital bombardment's side effects caused by Shroud Invaders' ships
planet_event = {
	id = ag_zeta_crisis.44
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		exists = owner
		owner = { NOR = {
			is_country_type = swarm
			is_country_type = ai_empire
			is_country_type = cybrex_empire
			is_country_type = awakened_fallen_empire
			is_country_type = ag_ancient_primitive_crisis
			is_country_type = ag_ancient_psi_guardian
		} }
		planet_devastation < 100
		has_orbital_bombardment_stance = ag_zeta_crisis_bombardment
		from = { is_country_type = ag_zeta_crisis_country }
	}
	
	immediate = {
		random_list = { 50 = { change_variable = { which = ag_zeta_crisis_bombardment_charge value = 1 } } 50 = { } }
		reroll_random = yes
		if = {
			limit = { check_variable = { which = ag_zeta_crisis_bombardment_charge value > 5 } }
			# set_update_modifiers_batch = begin
			random_list = {
				50 = { set_variable = { which = ag_zeta_crisis_bombardment_charge value = 5 } }
				50 = {
					set_variable = { which = ag_zeta_crisis_bombardment_charge value = 0 }
					random_list = {
						25 = { add_planet_devastation = 15 }
						25 = { add_planet_devastation = 10 }
						25 = { modifier = { factor = 0.5 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } } add_planet_devastation = 5 }
						25 = { modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } } }
					}
					if = {
						limit = { num_pops > 5 }
						random_list = {
							25 = {
								add_planet_devastation = 5
								while = {
									count = 5
									random_owned_pop = { kill_pop = yes }
									random_list = {
										50 = { ag_zeta_crisis_avatar_t1_fleet_spawn = { ag_target_name = prev ag_distance_to_target = 15 } }
										50 = { }
									}
									reroll_random = yes
								}
							}
							25 = {
								add_planet_devastation = 3
								while = {
									count = 3
									random_owned_pop = { kill_pop = yes }
									random_list = {
										50 = { ag_zeta_crisis_avatar_t1_fleet_spawn = { ag_target_name = prev ag_distance_to_target = 15 } }
										50 = { }
									}
									reroll_random = yes
								}
							}
							25 = {
								add_planet_devastation = 1
								random_owned_pop = { kill_pop = yes }
								random_list = {
									50 = { ag_zeta_crisis_avatar_t1_fleet_spawn = { ag_target_name = prev ag_distance_to_target = 15 } }
									50 = { }
								}
								reroll_random = yes
							}
							25 = { }
						}
						reroll_random = yes
					}
					if = {
						limit = { OR = {
							habitable_planet = yes
							AND = { ag_is_ringworld = yes ag_is_unhabitable_ringworld = no }
							ag_is_habitat = yes
						} }
						set_variable = { which = ag_zeta_crisis_bombardment_crater_counter value = 0 }
						every_deposit = {
							limit = { is_deposit_type = ag_zeta_crisis_bombardment_crater }
							prev = { change_variable = { which = ag_zeta_crisis_bombardment_crater_counter value = 1 } }
						}
						if = {
							limit = { check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < trigger:planet_size } }
							random_list = { 40 = { } 60 = { add_deposit = ag_zeta_crisis_bombardment_crater } }
							reroll_random = yes
						}
					}
				}
			}
			reroll_random = yes
			# set_update_modifiers_batch = end
		}
	}
}

# on_planet_bombarded, Shroud Invaders destroyed a planet
planet_event = {
	id = ag_zeta_crisis.45
	title = "ag_zeta_crisis.45.name"
	desc = {
		trigger = { NOR = {
			AND = { ag_is_ringworld = yes ag_is_unhabitable_ringworld = no }
			ag_is_habitat = yes
			has_modifier = "holy_planet"
		} }
		text = "ag_zeta_crisis.45.a.desc"
	}
	desc = {
		trigger = { AND = { ag_is_ringworld = yes ag_is_unhabitable_ringworld = no } }
		text = "ag_zeta_crisis.45.b.desc"
	}
	desc = {
		trigger = { ag_is_habitat = yes }
		text = "ag_zeta_crisis.45.c.desc"
	}
	desc = {
		trigger = { has_modifier = "ag_shattered_holy_planet" }
		text = "ag_zeta_crisis.45.d.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_nuclear_explosion_room }
	show_sound = event_super_explosion
	location = root

	is_triggered_only = yes

	trigger = {
		ag_zeta_crisis_event_active = yes
		exists = owner
		owner = { NOT = { is_country_type = ag_ancient_psi_guardian } }
		OR = {
			planet_devastation >= 100
			AND = { num_pops < 5 owner = { ag_is_common_country = yes } }
		}
		from = { is_country_type = ag_zeta_crisis_country }
	}
	
	immediate = {
		# set_update_modifiers_batch = begin
		if = {
			limit = { exists = owner }
			owner = { change_variable = { which = ag_num_planets_destroyed_by_zeta_crisis value = 1 } }
		}
		add_threat = { who = from amount = 2 }
		ag_zeta_crisis_controlled_planet_effect = yes
		solar_system = { every_fleet_in_system = {
			limit = {
				exists = owner
				owner = { is_country_type = ag_zeta_crisis_country }
				has_fleet_flag = ag_zeta_crisis_assault_fleet
				OR = {
					AND = {
						is_fleet_idle = yes
						exists = orbit
						orbit = { is_same_value = root }
					}
					AND = {
						is_fleet_idle = yes
						NAND = {
							exists = orbit
							orbit = {
								is_star = no
								exists = owner
								owner = { is_hostile = event_target:ag_zeta_crisis_country }
							}
						}
					}
				}
			}
			clear_orders = yes
			clear_fleet_actions = this
			fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
		} }
		# set_update_modifiers_batch = end
	}
	
	option = { name = "ag_zeta_crisis.45.a" }
}

# Shroud Invaders build defensive platform on Shrouded Planets
planet_event = {
	id = ag_zeta_crisis.46
	hide_window = yes

	is_triggered_only = yes
	
	pre_triggers = {
		has_owner = yes
	}
	
	trigger = {
		exists = this
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_ended
			event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } }
		}
		exists = owner
		owner = { is_country_type = ag_zeta_crisis_country }
		OR = {
			is_planet_class = pc_ag_shrouded
			is_planet_class = pc_ag_ringworld_shrouded
		}
	}
	
	immediate = {
		if = {
			limit = {
				has_orbital_bombardment = no
			}
			ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
			create_fleet = {
				name = "NAME_ag_zeta_crisis_planet_guardian_fleet"
				settings = {
					spawn_debris = no
				}
				effect = {
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_flag = ag_zeta_crisis_planet_guardian_fleet
					set_fleet_flag = ag_zeta_crisis_platform@root
					ag_zeta_crisis_defensive_platform_spawn = yes
					set_location = { target = root distance = 25 angle = random }
				}
			}
		}
		else = {
			planet_event = { id = ag_zeta_crisis.46 days = 90 }
		}
	}
}

# on_ship_destroyed_victim, Shroud Invaders' defensive platform tries to rebuilt when destroyed
country_event = {
	id = ag_zeta_crisis.461
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		is_country_type = ag_zeta_crisis_country
		fromfrom = {
			is_ship_size = ag_zeta_crisis_defensive_platform
			NOT = { has_ship_flag = ag_set_disable_at_health }
			exists = fleet
			fleet = { has_fleet_flag = ag_zeta_crisis_planet_guardian_fleet }
		}
	}

	immediate = {
		fromfrom.solar_system = {
			random_system_planet = {
				limit = {
					root.fromfrom.fleet = {
						has_fleet_flag = ag_zeta_crisis_platform@prev
					}
				}
				planet_event = { id = ag_zeta_crisis.46 days = @ag_zeta_crisis_planet_defensive_platform_regen_days random = 60 }
			}
		}
	}
}

# on_planet_bombarded, Shroud Invaders' planet reclaimed by orbital bombardment
planet_event = {
	id = ag_zeta_crisis.47
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
		OR = {
			AND = {
				exists = owner
				owner = {
					is_country_type = ag_zeta_crisis_country
				}
				has_planet_flag = ag_zeta_crisis_controlled_world
				planet_devastation >= 95
			}
			AND = {
				exists = owner
				owner = {
					NOT = {
						is_country_type = ag_zeta_crisis_country
					}
				}
				exists = controller
				controller = {
					is_country_type = ag_zeta_crisis_country
				}
				planet_devastation >= 50
			}
		}
	}
	
	immediate = {
		save_event_target_as = ag_target_planet
		from = {
			save_event_target_as = ag_target_country
		}
		if = {
			limit = {
				exists = owner
				owner = {
					is_country_type = ag_zeta_crisis_country
				}
				has_planet_flag = ag_zeta_crisis_controlled_world
				planet_devastation >= 95
			}
			add_planet_devastation = -100
			destroy_colony = yes
			remove_planet_flag = ag_zeta_crisis_controlled_world
			random_list = {
				25 = {
					while = {
						count = 6
						ag_zeta_crisis_avatar_t1_fleet_spawn = {
							ag_target_name = prev
							ag_distance_to_target = 20
						}
					}
				}
				25 = {
					while = {
						count = 3
						ag_zeta_crisis_avatar_t2_fleet_spawn = {
							ag_target_name = prev
							ag_distance_to_target = 20
						}
					}
				}
				25 = {
					ag_zeta_crisis_avatar_t3_fleet_spawn = {
						ag_target_name = prev
						ag_distance_to_target = 20
					}
				}
				75 = {
				}
			}
			if = {
				limit = { ag_is_ringworld = no }
				random_list = {
					45 = {
						random_list = {
							50 = { ag_change_pc = { ag_planet_class = pc_barren } }
							50 = { ag_change_pc = { ag_planet_class = pc_barren_cold } }
						}
						add_modifier = {
							modifier = "terraforming_candidate"
							days = -1
						}
						reset_planet = yes
						clear_deposits = yes
						add_deposit = d_zro_deposit_3
					}
					45 = {
						random_list = {
							50 = { ag_change_pc = { ag_planet_class = pc_barren } }
							50 = { ag_change_pc = { ag_planet_class = pc_barren_cold } }
						}
						reset_planet = yes
						clear_deposits = yes
						add_deposit = d_zro_deposit_3
					}
					10 = {
						ag_change_pc = { ag_planet_class = pc_nuked }
						reset_planet = yes
						random_list = {
							33 = {
								add_deposit = ag_zeta_crisis_bombardment_crater
								add_deposit = ag_zeta_crisis_bombardment_crater
							}
							33 = {
								add_deposit = ag_zeta_crisis_bombardment_crater
							}
							33 = {
							}
						}
						random_list = {
							50 = {
								add_deposit = ag_zeta_crisis_nuked_planet_deposit
							}
							50 = {
							}
						}
						random_list = {
							35 = {
								add_modifier = {
									modifier = "hazardous_weather"
									days = -1
								}
							}
							35 = {
								add_modifier = {
									modifier = "unstable_tectonics"
									days = -1
								}
							}
							3 = {
								add_modifier = {
									modifier = "hazardous_weather"
									days = -1
								}
								add_modifier = {
									modifier = "unstable_tectonics"
									days = -1
								}
							}
							27 = {
							}
						}
					}
				}
			}
			else = {
				ag_destroy_habitable_ringworld = yes
			}
			every_country = {
				limit = {
					NOT = {
						is_country_type = ag_zeta_crisis_country
					}
					has_event_chain = "ag_zeta_crisis_chain"
				}
				add_event_chain_counter = {
					event_chain = "ag_zeta_crisis_chain"
					counter = "ag_zeta_crisis_psionic_worlds"
					amount = -1
				}
				add_event_chain_counter = {
					event_chain = "ag_zeta_crisis_chain"
					counter = "ag_zeta_crisis_psionic_worlds_cleansed"
					amount = 1
				}
			}
			from = {
				country_event = { id = ag_zeta_crisis.471 }
			}
		}
		else = {
			if = {
				limit = {
					from = {
						OR = {
							is_country_type = ag_ancient_psi_guardian
							has_country_flag = ag_banned_zeta_crisis_472_1
							is_same_value = root.owner
						}
					}
				}
				owner = {
					country_event = { id = ag_zeta_crisis.473 }
				}
				if = { limit = { has_army = yes } remove_all_armies = yes }
				set_controller = owner
				every_owned_pop = {
					unemploy_pop = yes
				}
			}
			else_if = {
				limit = {
					from = {
						has_country_flag = ag_banned_zeta_crisis_472_2
					}
				}
				owner = {
					country_event = { id = ag_zeta_crisis.474 }
				}
				if = { limit = { has_army = yes } remove_all_armies = yes }
				set_owner = from
				set_controller = from
				every_owned_pop = {
					unemploy_pop = yes
				}
			}
			else_if = {
				limit = {
					always = yes
				}
				from = {
					country_event = { id = ag_zeta_crisis.472 }
				}
			}
			random_list = {
				50 = {
					while = {
						count = 2
						ag_zeta_crisis_avatar_t1_fleet_spawn = {
							ag_target_name = prev
							ag_distance_to_target = 20
						}
					}
				}
				50 = {
				}
			}
		}
	}
}

# Notification for Shroud Invaders' planet reclaimed by orbital bombardment
country_event = {
	id = ag_zeta_crisis.471
	title = "ag_zeta_crisis.471.name"
	desc = "ag_zeta_crisis.471.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_nuclear_explosion_room }
	show_sound = event_super_explosion
	location = from
	
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_country_flag = ag_banned_zeta_crisis_471
		}
	}
	
	option = {
		name = "ag_zeta_crisis.471.a"
	}
	option = {
		name = "ag_zeta_crisis.471.b"
		hidden_effect = {
			set_country_flag = ag_banned_zeta_crisis_471
		}
	}
}

# If planet isn't Shrouded Planet, orbital fleet's owner could select to control this planet or not
country_event = {
	id = ag_zeta_crisis.472
	title = "ag_zeta_crisis.472.name"
	desc = "ag_zeta_crisis.472.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_burning_settlement_room }
	show_sound = event_super_explosion
	location = event_target:ag_target_planet
	
	is_triggered_only = yes

	trigger = {
		NOR = {
			has_country_flag = ag_banned_zeta_crisis_472_1
			has_country_flag = ag_banned_zeta_crisis_472_2
		}
	}
	
	option = {
		name = "ag_zeta_crisis.472.a"
		ai_chance = {
			factor = 0
		}
		hidden_effect = {
			from = {
				if = { limit = { has_army = yes } remove_all_armies = yes }
				set_controller = owner
				every_owned_pop = {
					unemploy_pop = yes
				}
				owner = {
					country_event = { id = ag_zeta_crisis.473 }
				}
			}
		}
	}
	option = {
		name = "ag_zeta_crisis.472.b"
		ai_chance = {
			factor = 1000
			modifier = {
				factor = 0
				OR = {
					AND = {
						has_ethic = ethic_gestalt_consciousness
						NOR = {
							has_valid_civic = civic_hive_devouring_swarm
							has_valid_civic = civic_machine_terminator
							has_valid_civic = civic_machine_assimilator
							has_valid_civic = civic_machine_servitor
						}
					}
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			}
		}
		hidden_effect = {
			set_country_flag = ag_banned_zeta_crisis_472_1
			from = {
				if = { limit = { has_army = yes } remove_all_armies = yes }
				set_controller = owner
				every_owned_pop = {
					unemploy_pop = yes
				}
				owner = {
					country_event = { id = ag_zeta_crisis.473 }
				}
			}
		}
	}
	option = {
		name = "ag_zeta_crisis.472.c"
		ai_chance = {
			factor = 0
		}
		hidden_effect = {
			from = {
				owner = { country_event = { id = ag_zeta_crisis.474 } }
				if = { limit = { has_army = yes } remove_all_armies = yes }
				set_owner = root.fromfrom
				set_controller = root.fromfrom
				every_owned_pop = {
					unemploy_pop = yes
				}
			}
		}
	}
	option = {
		name = "ag_zeta_crisis.472.d"
		ai_chance = {
			factor = 1000
			modifier = {
				factor = 0
				NOR = {
					AND = {
						has_ethic = ethic_gestalt_consciousness
						NOR = {
							has_valid_civic = civic_hive_devouring_swarm
							has_valid_civic = civic_machine_terminator
							has_valid_civic = civic_machine_assimilator
							has_valid_civic = civic_machine_servitor
						}
					}
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			}
		}
		hidden_effect = {
			set_country_flag = ag_banned_zeta_crisis_472_2
			from = {
				owner = {
					country_event = { id = ag_zeta_crisis.474 }
				}
				if = { limit = { has_army = yes } remove_all_armies = yes }
				set_owner = root.fromfrom
				set_controller = root.fromfrom
				every_owned_pop = {
					unemploy_pop = yes
				}
			}
		}
	}
}

# Notification for other country returned planet to its original owner
country_event = {
	id = ag_zeta_crisis.473
	title = "ag_zeta_crisis.473.name"
	desc = {
		trigger = {
			is_same_value = event_target:ag_target_country
		}
		text = "ag_zeta_crisis.473.a.desc"
	}
	desc = {
		trigger = {
			NOT = {
				is_same_value = event_target:ag_target_country
			}
		}
		text = "ag_zeta_crisis.473.b.desc"
	}
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_burning_settlement_room }
	show_sound = event_super_explosion
	location = event_target:ag_target_planet
	
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_country_flag = ag_banned_zeta_crisis_473
		}
	}
	
	option = {
		name = "ag_zeta_crisis.473.a"
		trigger = {
			is_same_value = event_target:ag_target_country
		}
	}
	option = {
		name = "ag_zeta_crisis.473.b"
		trigger = {
			NOT = {
				is_same_value = event_target:ag_target_country
			}
		}
	}
	option = {
		name = "ag_zeta_crisis.473.c"
		hidden_effect = {
			set_country_flag = ag_banned_zeta_crisis_473
		}
	}
}

# Notification for other country refused return planet to its original owner
country_event = {
	id = ag_zeta_crisis.474
	title = "ag_zeta_crisis.474.name"
	desc = "ag_zeta_crisis.474.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_burning_settlement_room }
	show_sound = event_super_explosion
	location = event_target:ag_target_planet
	is_triggered_only = yes
	trigger = { NOT = { has_country_flag = ag_banned_zeta_crisis_474 } }
	option = { name = "ag_zeta_crisis.474.a" }
	option = {
		name = "ag_zeta_crisis.474.b"
		hidden_effect = { set_country_flag = ag_banned_zeta_crisis_474 }
	}
}

# on_planet_bombarded, Fleet damaged when bomberding Shrouded Planet
planet_event = {
	id = ag_zeta_crisis.48
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		exists = owner
		owner = { is_country_type = ag_zeta_crisis_country }
		has_planet_flag = ag_zeta_crisis_controlled_world
		planet_devastation < 100
		from = {
			ag_is_common_country = yes
			NOT = { has_technology = tech_ag_zeta_crisis_planet_bombardment_damage_immune }
		}
	}
	immediate = {
		from = { if = {
			limit = { NOT = { has_country_flag = ag_zeta_crisis_planet_bombarded } }
			set_country_flag = ag_zeta_crisis_planet_bombarded
		} }
		every_fleet_in_orbit = {
			limit = {
				exists = owner
				owner = { is_same_value = root.from }
			}
			every_controlled_ship = {
				random_list = {
					50 = {
						modifier = { factor = 0.5 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
						ag_reduce_hp_percent = { ag_value = 2 }
					}
					50 = { }
				}
				reroll_random = yes
			}
		}
		random_list = {
			5 = { ag_zeta_crisis_avatar_t1_fleet_spawn = { ag_target_name = root ag_distance_to_target = 25 } }
			95 = { }
		}
		reroll_random = yes
	}
}

# Shroud Invaders turn uncolonized planets into Shrouded Planets within border
country_event = {
	id = ag_zeta_crisis.49
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
	}
	immediate = {
		every_planet_within_border = {
			limit = {
				NAND = {
					exists = owner
					owner = { OR = {
						is_country_type = ag_zeta_crisis_country
						is_country_type = ag_zeta_crisis_portal_holder
						is_country_type = ag_zeta_crisis_relic_country
					} }
				}
				OR = {
					habitable_planet = yes
					AND = { ag_is_ringworld = yes ag_is_unhabitable_ringworld = no }
					ag_is_habitat = yes
				}
			}
			random_list = {
				25 = { }
				75 = {
					add_threat = { who = event_target:ag_zeta_crisis_country amount = 5 }
					ag_zeta_crisis_controlled_planet_effect = yes
				}
			}
			reroll_random = yes
		}
		country_event = { id = ag_zeta_crisis.49 days = 480 random = 360 }
	}
}

# Shroud Invaders' Support Ships create new ships if any ship killed
event = {
	id = ag_zeta_crisis.51
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		exists = event_target:ag_zeta_crisis_country
	}
	
	immediate = {
		event_target:ag_zeta_crisis_country = {
			every_controlled_fleet = {
				limit = {
					NOT = { has_fleet_flag = ag_zeta_crisis_avatar_fleet }
					check_variable = { which = ag_current_zeta_crisis_support_ships value > 0 }
				}
				set_variable = { which = ag_current_zeta_crisis_large_ships value = 0 }
				set_variable = { which = ag_current_zeta_crisis_medium_ships value = 0 }
				set_variable = { which = ag_current_zeta_crisis_small_ships value = 0 }
				set_variable = { which = ag_current_zeta_crisis_support_ships value = 0 }
				every_controlled_ship = { switch = {
					trigger = is_ship_size
					ag_zeta_crisis_large_ship = { prev = { change_variable = { which = ag_current_zeta_crisis_large_ships value = 1 } } }
					ag_zeta_crisis_medium_ship = { prev = { change_variable = { which = ag_current_zeta_crisis_medium_ships value = 1 } } }
					ag_zeta_crisis_small_ship = { prev = { change_variable = { which = ag_current_zeta_crisis_small_ships value = 1 } } }
					ag_zeta_crisis_support_ship = { prev = { change_variable = { which = ag_current_zeta_crisis_support_ships value = 1 } } }
				} }
				every_controlled_ship = {
					limit = { is_ship_size = ag_zeta_crisis_support_ship has_hp_percentage > 0.1 }
					fleet = {
						if = {
							limit = { check_variable = { which = ag_current_zeta_crisis_large_ships value < ag_num_zeta_crisis_large_ships } }
							random_list = {
								50 = { }
								50 = {
									modifier = { factor = 0.5 is_in_combat = yes }
									modifier = { factor = 2 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
									ag_zeta_crisis_large_ship_spawn = yes
									change_variable = { which = ag_current_zeta_crisis_large_ships value = 1 }
								}
							}
						}
						if = {
							limit = { check_variable = { which = ag_current_zeta_crisis_medium_ships value < ag_num_zeta_crisis_medium_ships } }
							random_list = {
								0 = { modifier = {
									add = 100
									is_in_combat = yes
									event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 2.5 } }
								} }
								100 = {
									ag_zeta_crisis_medium_ship_spawn = yes
									change_variable = { which = ag_current_zeta_crisis_medium_ships value = 1 }
								}
							}
						}
						if = {
							limit = { check_variable = { which = ag_current_zeta_crisis_small_ships value < ag_num_zeta_crisis_small_ships } }
							while = {
								count = 2
								random_list = {
									0 = { modifier = {
										add = 100
										is_in_combat = yes
										event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 2.5 } }
									} }
									100 = {
										ag_zeta_crisis_small_ship_spawn = yes
										change_variable = { which = ag_current_zeta_crisis_small_ships value = 1 }
									}
								}
							}
						}
						if = {
							limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
							if = {
								limit = { check_variable = { which = ag_current_zeta_crisis_support_ships value < ag_num_zeta_crisis_support_ships } }
								random_list = {
									100 = { modifier = {
										factor = 3
										is_in_combat = yes
										event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 4.5 } }
									} }
									100 = {
										ag_zeta_crisis_support_ship_spawn = yes
										change_variable = { which = ag_current_zeta_crisis_support_ships value = 1 }
									}
								}
							}
						}
					}
				}
				clear_variable = ag_current_zeta_crisis_large_ships
				clear_variable = ag_current_zeta_crisis_medium_ships
				clear_variable = ag_current_zeta_crisis_small_ships
				clear_variable = ag_current_zeta_crisis_support_ships
			}
		}
	}
}

# on_entering_system_fleet, Spawn Psionic Storm when too many avatars in a system
fleet_event = {
	id = ag_zeta_crisis.52
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
		has_fleet_flag = ag_zeta_crisis_avatar_fleet
		from = {
			ag_can_spawn_psionic_storm_in_system = yes
			count_fleet_in_system = { limit = { has_fleet_flag = ag_zeta_crisis_avatar_fleet } count > 15 }
		}
	}
	
	immediate = {
		from = {
			random_list = {
				20 = { set_timed_star_flag = { flag = ag_zeta_crisis_no_psionic_storm_flag days = 540 } }
				20 = { set_timed_star_flag = { flag = ag_zeta_crisis_no_psionic_storm_flag days = 480 } }
				20 = { set_timed_star_flag = { flag = ag_zeta_crisis_no_psionic_storm_flag days = 360 } }
				20 = { set_timed_star_flag = { flag = ag_zeta_crisis_no_psionic_storm_flag days = 180 } }
				20 = {
					save_event_target_as = ag_zeta_crisis_psionic_storm_system
					if = {
						limit = {
							count_ship_in_system = {
								limit = { OR = {
									is_ship_size = ag_zeta_crisis_avatar_t1
									is_ship_size = ag_zeta_crisis_avatar_t2
									is_ship_size = ag_zeta_crisis_avatar_t3
									is_ship_size = ag_zeta_crisis_avatar_t4
									is_ship_size = ag_zeta_crisis_avatar_t5
								} }
								count > 30
							}
							NOT = { any_neighbor_system = { OR = {
								has_star_flag = ag_zeta_crisis_no_psionic_storm_flag
								any_ship_in_system = { OR = {
									is_ship_size = ag_zeta_crisis_portal
									is_ship_size = ag_zeta_crisis_psionic_storm
									is_ship_size = ag_zeta_crisis_psionic_singularity
								} }
							} } }
						}
						every_fleet_in_system = {
							limit = { has_fleet_flag = ag_zeta_crisis_avatar_fleet }
							ag_spawn_explosion_effect = { ag_scale = m ag_color = violet }
							delete_fleet = this
						}
						ag_create_large_psionic_storm = yes
					}
					else_if = {
						limit = {
							NOT = { any_neighbor_system = { OR = {
								has_star_flag = ag_zeta_crisis_no_psionic_storm_flag
								any_ship_in_system = { OR = {
									is_ship_size = ag_zeta_crisis_portal
									is_ship_size = ag_zeta_crisis_psionic_storm
									is_ship_size = ag_zeta_crisis_psionic_singularity
								} }
							} } }
						}
						random_list = {
							20 = {
								every_fleet_in_system = {
									limit = { has_fleet_flag = ag_zeta_crisis_avatar_fleet }
									ag_spawn_explosion_effect = { ag_scale = m ag_color = violet }
									delete_fleet = this
								}
								ag_create_large_psionic_storm = yes
							}
							80 = {
								every_fleet_in_system = {
									limit = { has_fleet_flag = ag_zeta_crisis_avatar_fleet }
									ag_spawn_explosion_effect = { ag_scale = m ag_color = violet }
									delete_fleet = this
								}
								ag_create_small_psionic_storm = yes
							}
						}
					}
					else_if = {
						limit = { always = yes }
						set_timed_star_flag = {
							flag = ag_zeta_crisis_no_psionic_storm_flag
							days = 180
						}
					}
				}
			}
		}
	}
}

# Remove Psionic Storm
fleet_event = {
	id = ag_zeta_crisis.521
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	
	immediate = {
		solar_system = {
			save_event_target_as = ag_zeta_crisis_psionic_storm_system
			remove_star_flag = ag_zeta_crisis_psionic_storm_system
			if = {
				limit = { NOT = { has_star_flag = ag_ancient_zeta_system } }
				every_playable_country = {
					limit = { NOT = { is_same_value = event_target:ag_zeta_crisis_country } }
					country_event = { id = ag_zeta_crisis.523 }
				}
			}
		}
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
		if = {
			limit = {
				has_fleet_flag = ag_zeta_crisis_psionic_storm_large
			}
			solar_system = {
				every_system = {
					limit = {
						NOT = { is_same_value = prev }
						OR = {
							distance = {
								source = prev
								min_distance >= 0
								max_distance <= 50
								#type = euclidean
								#use_bypasses = no
							}
							has_hyperlane_to = prev
						}
						any_ship_in_system = {
							is_ship_size = ag_zeta_crisis_psionic_storm
							fleet = {
								has_fleet_flag = ag_zeta_crisis_psionic_storm_small@prevprevprev
							}
						}
					}
					remove_star_flag = ag_zeta_crisis_psionic_storm_system
					every_fleet_in_system = {
						limit = {
							has_fleet_flag = ag_zeta_crisis_psionic_storm_fleet
							has_fleet_flag = ag_zeta_crisis_psionic_storm_small@prevprev
						}
						ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
						delete_fleet = this
					}
				}
			}
		}
		destroy_fleet = this
	}
}

# Notification for Psionic Storm Spawned
country_event = {
	id = ag_zeta_crisis.522
	title = "ag_zeta_crisis.522.name"
	desc = "ag_zeta_crisis.522.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_psionic
	location = event_target:ag_zeta_crisis_psionic_storm_system
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { is_ai = no NOT = { has_country_flag = ag_zeta_crisis_501_fired } }
			country_event = { id = ag_zeta_crisis.501 days = 5 random = 5 }
		}
	}
	option = {
		name = "ag_zeta_crisis.522.a"
		custom_tooltip = "ag_zeta_crisis.522.a.tooltip"
	}
}

# Notification for Psionic Storm Despawned
country_event = {
	id = ag_zeta_crisis.523
	title = "ag_zeta_crisis.523.name"
	desc = "ag_zeta_crisis.523.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_sensor_ping
	location = event_target:ag_zeta_crisis_psionic_storm_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.523.a"
		custom_tooltip = "ag_zeta_crisis.523.a.tooltip"
	}
}

# on_ship_destroyed_perp, Spawn Psionic Singularity if too many ships killed in a system
country_event = {
	id = ag_zeta_crisis.53
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
		OR = {
			is_country_type = ag_zeta_crisis_country
			from = { is_country_type = ag_zeta_crisis_country }
		}
		fromfrom.solar_system = { ag_can_spawn_psionic_storm_in_system = yes }
		fromfromfrom = { NOR = {
			is_ship_size = ag_zeta_crisis_portal
			is_ship_size = ag_zeta_crisis_psionic_storm
			is_ship_size = ag_zeta_crisis_psionic_singularity
		} }
	}
	
	immediate = {
		fromfrom.solar_system = {
			save_event_target_as = ag_zeta_crisis_psionic_singularity_system
			if = {
				limit = { root = { is_country_type = ag_zeta_crisis_country } }
				change_variable = { which = ag_zeta_crisis_system_charge value = 1 }
			}
			else = {
				random_list = {
					50 = { change_variable = { which = ag_zeta_crisis_system_charge value = 1 } }
					50 = { }
				}
			}
			if = {
				limit = {
					check_variable = {
						which = ag_zeta_crisis_system_charge
						value >= @ag_zeta_crisis_psionic_singularity_charge_max
					}
				}
				random_list = {
					25 = {
						set_variable = {
							which = ag_zeta_crisis_system_charge
							value = @ag_zeta_crisis_psionic_singularity_charge_value_1
						}
					}
					25 = {
						set_variable = {
							which = ag_zeta_crisis_system_charge
							value = @ag_zeta_crisis_psionic_singularity_charge_value_2
						}
					}
					25 = {
						set_variable = {
							which = ag_zeta_crisis_system_charge
							value = @ag_zeta_crisis_psionic_singularity_charge_value_3
						}
					}
					25 = {
						set_variable = {
							which = ag_zeta_crisis_system_charge
							value = 0
						}
						set_star_flag = ag_zeta_crisis_psionic_singularity_system
						random_system_planet = {
							limit = {
								is_primary_star = yes
							}
							ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
							create_fleet = {
								name = "NAME_ag_zeta_crisis_psionic_singularity_fleet"
								settings = {
									spawn_debris = no
									is_boss = yes
								}
								effect = {
									set_fleet_flag = ag_zeta_crisis_psionic_singularity_fleet
									set_owner = event_target:ag_zeta_crisis_country
									set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
									create_ship = {
										name = "NAME_ag_zeta_crisis_psionic_singularity_ship"
										design = "NAME_ag_zeta_crisis_psionic_singularity"
										prefix = no
										effect = {
											ag_difficulty_bonus = yes
										}
									}
									set_location = { target = prev distance = -1 angle = 0 }
									# fleet_event = { id = ag_zeta_crisis.75 days = 2 random = 3 }
									
									fleet_event = { id = ag_zeta_crisis.531 days = 1800 random = 720 }
								}
							}
						}
						every_country = {
							limit = {
								NOT = {
									is_same_value = event_target:ag_zeta_crisis_country
								}
							}
							country_event = { id = ag_zeta_crisis.532 }
						}
					}
				}
			}
		}
	}
}

# Remove Psionic Singularity
fleet_event = {
	id = ag_zeta_crisis.531
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		exists = this
	}
	
	immediate = {
		solar_system = {
			save_event_target_as = ag_zeta_crisis_psionic_singularity_system
			remove_star_flag = ag_zeta_crisis_psionic_singularity_system
		}
		every_country = {
			limit = {
				NOT = {
					is_same_value = event_target:ag_zeta_crisis_country
				}
			}
			country_event = { id = ag_zeta_crisis.533 }
		}
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
		delete_fleet = this
	}
}

# Notification for Psionic Singularity Spawned
country_event = {
	id = ag_zeta_crisis.532
	title = "ag_zeta_crisis.532.name"
	desc = "ag_zeta_crisis.532.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_activating_unknown_technology
	location = event_target:ag_zeta_crisis_psionic_singularity_system
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { is_ai = no NOT = { has_country_flag = ag_zeta_crisis_501_fired } }
			country_event = { id = ag_zeta_crisis.501 days = 5 random = 5 }
		}
	}
	option = {
		name = "ag_zeta_crisis.532.a"
		custom_tooltip = "ag_zeta_crisis.532.a.tooltip"
	}
}

# Notification for Psionic Singularity Despawned
country_event = {
	id = ag_zeta_crisis.533
	title = "ag_zeta_crisis.533.name"
	desc = "ag_zeta_crisis.533.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_sensor_ping
	location = event_target:ag_zeta_crisis_psionic_singularity_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.533.a"
		custom_tooltip = "ag_zeta_crisis.533.a.tooltip"
	}
}

# on_ship_destroyed_victim, Psionic Singularity explode
country_event = {
	id = ag_zeta_crisis.534
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
		is_country_type = ag_zeta_crisis_country
		fromfrom = {
			is_ship_size = ag_zeta_crisis_psionic_singularity
			solar_system = { NOT = { has_star_flag = ag_zeta_crisis_psionic_storm_spawn_flag } }
		}
	}
	
	immediate = {
		every_country = {
			limit = {
				NOT = {
					is_same_value = event_target:ag_zeta_crisis_country
				}
			}
			country_event = { id = ag_zeta_crisis.535 }
		}
		fromfrom.solar_system = {
			set_timed_star_flag = { flag = ag_zeta_crisis_psionic_storm_spawn_flag days = 2 }
			save_event_target_as = ag_zeta_crisis_psionic_storm_system
			ag_psionic_storm_system_side_effect = yes
			every_fleet_in_system = {
				limit = {
					owner = {
						NOR = {
							is_country_type = ag_zeta_crisis_relic_country
							is_country_type = ag_zeta_crisis_country
							is_country_type = ag_zeta_crisis_portal_holder
						}
					}
				}
				ag_psionic_singularity_explode_fleet_effect = yes
			}
			set_star_flag = ag_zeta_crisis_psionic_storm_system
			random_system_planet = {
				limit = { is_primary_star = yes }
				ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
				create_fleet = {
					name = "NAME_ag_zeta_crisis_psionic_storm_fleet"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_fleet_flag = ag_zeta_crisis_psionic_storm_fleet
						set_owner = event_target:ag_zeta_crisis_country
						set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
						create_ship = {
							name = "NAME_ag_zeta_crisis_psionic_storm_ship"
							design = "NAME_ag_zeta_crisis_psionic_storm_small"
							prefix = no
							effect = {
								ag_difficulty_bonus = yes
							}
						}
						set_location = { target = prev distance = -1 angle = 0 }
						set_event_locked = yes
						fleet_event = { id = ag_zeta_crisis.521 days = 1080 random = 720 }
					}
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
					random_list = { 95 = { modifier = { add = -35 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } } } 5 = { ag_spawn_zeta_crisis_assault_fleet = yes } }
				}
			}
			every_system_planet = {
				limit = {
					exists = owner
					owner = {
						is_hostile = event_target:ag_zeta_crisis_country
					}
					OR = {
						is_colony = yes
						is_under_colonization = yes
					}
					num_pops > 0
				}
				ag_zeta_crisis_controlled_planet_effect = yes
			}
			every_fleet_in_system = {
				limit = {
					exists = owner
					owner = {
						is_country_type = ag_zeta_crisis_country
					}
					has_fleet_flag = ag_zeta_crisis_assault_fleet
					OR = {
						AND = {
							is_fleet_idle = yes
							exists = orbit
							orbit = {
								is_same_value = root
							}
						}
						AND = {
							is_fleet_idle = yes
							NAND = {
								exists = orbit
								orbit = {
									NOT = {
										is_star = yes
									}
									exists = owner
									owner = {
										is_hostile = event_target:ag_zeta_crisis_country
									}
								}
							}
						}
					}
				}
				clear_orders = yes
				clear_fleet_actions = this
				fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
			}
		}
	}
}

# Notification for Psionic Singularity exploded
country_event = {
	id = ag_zeta_crisis.535
	title = "ag_zeta_crisis.535.name"
	desc = "ag_zeta_crisis.535.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_red_alert
	location = event_target:ag_zeta_crisis_psionic_storm_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.535.a"
	}
}

# on_monthly_pulse, System's variable for Psionic Singularity decrease every month
event = {
	id = ag_zeta_crisis.536
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
	}
	
	immediate = {
		every_system = {
			limit = {
				check_variable = {
					which = ag_zeta_crisis_system_charge
					value > 0
				}
			}
			subtract_variable = {
				which = ag_zeta_crisis_system_charge
				value = 1
			}
		}
	}
}

# on_monthly_pulse, Debuff for colonies if Psionic Entities in system
event = {
	id = ag_zeta_crisis.54
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_system = {
					any_system_planet = {
						exists = owner
						owner = {
							NOT = {
								is_country_type = ag_zeta_crisis_country
							}
						}
						num_pops > 0
						NOT = {
							has_modifier = "ag_zeta_crisis_ship_in_system"
						}
					}
					any_ship_in_system = {
						exists = owner
						owner = {
							is_country_type = ag_zeta_crisis_country
						}
					}
				}
			}
			every_galaxy_planet = {
				limit = {
					exists = owner
					owner = {
						NOT = {
							is_country_type = ag_zeta_crisis_country
						}
					}
					num_pops > 0
					NOT = {
						has_modifier = "ag_zeta_crisis_ship_in_system"
					}
					solar_system = {
						any_ship_in_system = {
							exists = owner
							owner = {
								is_country_type = ag_zeta_crisis_country
							}
						}
					}
				}
				add_modifier = {
					modifier = "ag_zeta_crisis_ship_in_system"
					days = -1
				}
			}
		}
		if = {
			limit = {
				any_system = {
					any_system_planet = {
						has_modifier = "ag_zeta_crisis_ship_in_system"
					}
					NOT = {
						any_ship_in_system = {
							exists = owner
							owner = {
								is_country_type = ag_zeta_crisis_country
							}
						}
					}
				}
			}
			every_galaxy_planet = {
				limit = {
					has_modifier = "ag_zeta_crisis_ship_in_system"
					solar_system = {
						NOT = {
							any_ship_in_system = {
								exists = owner
								owner = {
									is_country_type = ag_zeta_crisis_country
								}
							}
						}
					}
				}
				remove_modifier = "ag_zeta_crisis_ship_in_system"
			}
		}
	}
}

# Shroud Invaders Attack Fleet's reinforcement cycle
country_event = {
	id = ag_zeta_crisis.551
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
		is_country_type = ag_zeta_crisis_country
		event_target:ag_zeta_crisis_country = { check_variable = { which = ag_zeta_crisis_gate_portal_destroyed value < 6 } }
	}


	immediate = {
		if = {
			limit = {
				OR = {
					AND = {
						NOT = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
						count_owned_ship = {
							limit = { fleet = { has_fleet_flag = ag_zeta_crisis_assault_fleet } }
							count > 1024
						}
					}
					AND = {
						event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } }
						count_owned_ship = {
							limit = { fleet = { has_fleet_flag = ag_zeta_crisis_assault_fleet } }
							count > 2048
						}
					}
				}
			}
			if = {
				limit = { NOT = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } } }
				country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_6_portal_reinforcement_days random = 180 }
			}
			else = { country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_6_portal_reinforcement_days random = 120 } }
		}
		else = {
			if = {
				limit = { check_variable = { which = ag_zeta_crisis_gate_portal_destroyed value = 0 } }
				event_target:ag_ancient_zeta_star = {
					random_list = {
						10 = { while = { count = 3 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 2 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 1 ag_spawn_zeta_crisis_assault_fleet = yes } }
					}
					reroll_random = yes
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
						ag_spawn_zeta_crisis_assault_fleet = yes
						random_list = {
							20 = { }
							80 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
						random_list = {
							60 = { }
							40 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
					}
				}
				country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_6_portal_reinforcement_days random = 60 }
			}
			else_if = {
				limit = { check_variable = { which = ag_zeta_crisis_gate_portal_destroyed value = 1 } }
				event_target:ag_ancient_zeta_star = {
					random_list = {
						10 = { while = { count = 3 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 2 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 1 ag_spawn_zeta_crisis_assault_fleet = yes } }
					}
					reroll_random = yes
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
						ag_spawn_zeta_crisis_assault_fleet = yes
						random_list = {
							25 = { }
							75 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
						random_list = {
							65 = { }
							35 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
					}
				}
				country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_5_portal_reinforcement_days random = 60 }
			}
			else_if = {
				limit = { check_variable = { which = ag_zeta_crisis_gate_portal_destroyed value = 2 } }
				event_target:ag_ancient_zeta_star = {
					random_list = {
						5 = { while = { count = 3 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 2 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 1 ag_spawn_zeta_crisis_assault_fleet = yes } }
					}
					reroll_random = yes
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
						ag_spawn_zeta_crisis_assault_fleet = yes
						random_list = {
							30 = { }
							70 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
						random_list = {
							70 = { }
							30 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
					}
				}
				country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_4_portal_reinforcement_days random = 60 }
			}
			else_if = {
				limit = { check_variable = { which = ag_zeta_crisis_gate_portal_destroyed value = 3 } }
				event_target:ag_ancient_zeta_star = {
					random_list = {
						5 = { while = { count = 3 ag_spawn_zeta_crisis_assault_fleet = yes } }
						5 = { while = { count = 2 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 1 ag_spawn_zeta_crisis_assault_fleet = yes } }
					}
					reroll_random = yes
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
						ag_spawn_zeta_crisis_assault_fleet = yes
						random_list = {
							35 = { }
							65 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
						random_list = {
							75 = { }
							25 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
					}
				}
				country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_3_portal_reinforcement_days random = 60 }
			}
			else_if = {
				limit = { check_variable = { which = ag_zeta_crisis_gate_portal_destroyed value = 4 } }
				event_target:ag_ancient_zeta_star = {
					random_list = {
						10 = { while = { count = 2 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 1 ag_spawn_zeta_crisis_assault_fleet = yes } }
					}
					reroll_random = yes
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
						ag_spawn_zeta_crisis_assault_fleet = yes
						random_list = {
							40 = { }
							60 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
						random_list = {
							80 = { }
							20 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
					}
				}
				country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_2_portal_reinforcement_days random = 60 }
			}
			else_if = {
				limit = { check_variable = { which = ag_zeta_crisis_gate_portal_destroyed value = 5 } }
				event_target:ag_ancient_zeta_star = {
					random_list = {
						10 = { while = { count = 2 ag_spawn_zeta_crisis_assault_fleet = yes } }
						10 = { while = { count = 1 ag_spawn_zeta_crisis_assault_fleet = yes } }
					}
					reroll_random = yes
					if = {
						limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
						ag_spawn_zeta_crisis_assault_fleet = yes
						random_list = {
							45 = { }
							55 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
						random_list = {
							85 = { }
							15 = { ag_spawn_zeta_crisis_assault_fleet = yes }
						}
						reroll_random = yes
					}
				}
				country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_1_portal_reinforcement_days random = 60 }
			}
			else_if = {
				limit = { check_variable = { which = ag_zeta_crisis_gate_portal_destroyed value = 6 } }
				event_target:ag_ancient_zeta_star = {
					ag_spawn_zeta_crisis_assault_fleet = yes
					random_list = {
						50 = { }
						50 = { ag_spawn_zeta_crisis_assault_fleet = yes }
					}
					reroll_random = yes
					random_list = {
						90 = { }
						10 = { ag_spawn_zeta_crisis_assault_fleet = yes }
					}
					reroll_random = yes
				}
				country_event = { id = ag_zeta_crisis.551 days = @ag_zeta_crisis_assault_fleet_0_portal_reinforcement_days random = 120 }
			}
		}
	}
}

# Shroud Invaders Patrol Fleet's reinforcement cycle
country_event = {
	id = ag_zeta_crisis.552
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
		is_country_type = ag_zeta_crisis_country
		event_target:ag_zeta_crisis_country = {
			check_variable = {
				which = ag_zeta_crisis_gate_portal_destroyed
				value < 6
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				OR = {
					AND = {
						galaxy_percentage < 0.2
						count_owned_ship = {
							limit = { fleet = { has_fleet_flag = ag_zeta_crisis_patrol_fleet } }
							count > 150
						}
					}
					AND = {
						galaxy_percentage < 0.4
						galaxy_percentage >= 0.2
						count_owned_ship = {
							limit = { fleet = { has_fleet_flag = ag_zeta_crisis_patrol_fleet } }
							count > 300
						}
					}
					AND = {
						galaxy_percentage < 0.6
						galaxy_percentage >= 0.4
						count_owned_ship = {
							limit = { fleet = { has_fleet_flag = ag_zeta_crisis_patrol_fleet } }
							count > 450
						}
					}
					AND = {
						galaxy_percentage < 0.8
						galaxy_percentage >= 0.6
						count_owned_ship = {
							limit = { fleet = { has_fleet_flag = ag_zeta_crisis_patrol_fleet } }
							count > 600
						}
					}
					AND = {
						galaxy_percentage >= 0.8
						count_owned_ship = {
							limit = { fleet = { has_fleet_flag = ag_zeta_crisis_patrol_fleet } }
							count > 750
						}
					}
				}
			}
			country_event = { id = ag_zeta_crisis.552 days = @ag_zeta_crisis_patrol_fleet_reinforcement_days random = 180 }
		}
		else = {
			event_target:ag_ancient_zeta_star = {
				ag_spawn_zeta_crisis_patrol_fleet = yes
			}
			country_event = { id = ag_zeta_crisis.552 days = @ag_zeta_crisis_patrol_fleet_reinforcement_days random = 180 }
		}
	}
}

# Shroud Invaders Construction Ship Protector's reinforcement cycle
country_event = {
	id = ag_zeta_crisis.553
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
		is_country_type = ag_zeta_crisis_country
		event_target:ag_zeta_crisis_country = {
			check_variable = {
				which = ag_zeta_crisis_gate_portal_destroyed
				value < 6
			}
		}
	}
	
	immediate = {
		while = {
			limit = {
				any_controlled_fleet = {
					has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
					NOT = {
						has_fleet_flag = ag_zeta_crisis_construction_ship_fleet_marked
					}
				}
			}
			random_controlled_fleet = {
				limit = {
					has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
					NOT = {
						has_fleet_flag = ag_zeta_crisis_construction_ship_fleet_marked
					}
				}
				set_timed_fleet_flag = {
					flag = ag_zeta_crisis_construction_ship_fleet_marked
					days = 2
				}
			}
			if = {
				limit = {
					any_controlled_fleet = {
						has_fleet_flag = ag_zeta_crisis_protector_fleet
						NOT = {
							has_fleet_flag = ag_zeta_crisis_protector_fleet_marked
						}
					}
				}
				random_controlled_fleet = {
					limit = {
						has_fleet_flag = ag_zeta_crisis_protector_fleet
						NOT = {
							has_fleet_flag = ag_zeta_crisis_protector_fleet_marked
						}
					}
					set_timed_fleet_flag = {
						flag = ag_zeta_crisis_protector_fleet_marked
						days = 2
					}
				}
			}
			else = {
				set_timed_country_flag = {
					flag = ag_zeta_crisis_need_protector_fleet
					days = 2
				}
			}
		}
		if = {
			limit = {
				has_country_flag = ag_zeta_crisis_need_protector_fleet
			}
			event_target:ag_ancient_zeta_star = {
				ag_spawn_zeta_crisis_protector_fleet = yes
			}
			country_event = { id = ag_zeta_crisis.553 days = @ag_zeta_crisis_protector_fleet_reinforcement_days random = 90 }
		}
		else = {
			country_event = { id = ag_zeta_crisis.553 days = @ag_zeta_crisis_protector_fleet_reinforcement_days random = 180 }
		}
	}
}

# Shroud Invaders Construction Ship's reinforcement cycle
country_event = {
	id = ag_zeta_crisis.554
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_all_portal_destroyed
			has_global_flag = ag_zeta_crisis_ended
		}
		is_country_type = ag_zeta_crisis_country
		event_target:ag_zeta_crisis_country = {
			check_variable = {
				which = ag_zeta_crisis_gate_portal_destroyed
				value < 6
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				OR = {
					AND = {
						galaxy_percentage < 0.05
						count_controlled_ship = {
							limit = {
								is_ship_size = ag_zeta_crisis_construction_ship
							}
							count > 8
						}
					}
					AND = {
						galaxy_percentage < 0.20
						galaxy_percentage >= 0.05
						count_controlled_ship = {
							limit = {
								is_ship_size = ag_zeta_crisis_construction_ship
							}
							count > 16
						}
					}
					AND = {
						galaxy_percentage < 0.40
						galaxy_percentage >= 0.20
						count_controlled_ship = {
							limit = {
								is_ship_size = ag_zeta_crisis_construction_ship
							}
							count > 24
						}
					}
					AND = {
						galaxy_percentage < 0.60
						galaxy_percentage >= 0.40
						count_controlled_ship = {
							limit = {
								is_ship_size = ag_zeta_crisis_construction_ship
							}
							count > 32
						}
					}
					AND = {
						galaxy_percentage >= 0.60
						count_controlled_ship = {
							limit = {
								is_ship_size = ag_zeta_crisis_construction_ship
							}
							count > 40
						}
					}
				}
			}
			country_event = { id = ag_zeta_crisis.554 days = @ag_zeta_crisis_construction_ship_reinforcement_days random = 180 }
		}
		else = {
			event_target:ag_ancient_zeta_star = {
				ag_spawn_zeta_crisis_construction_ship = yes
			}
			country_event = { id = ag_zeta_crisis.554 days = @ag_zeta_crisis_construction_ship_reinforcement_days random = 90 }
		}
	}
}

# on_army_killed_in_combat, Spawn extra armies on avatar killed.
country_event = {
	id = ag_zeta_crisis.56
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = ag_zeta_crisis_country
		is_same_value = event_target:ag_zeta_crisis_country
		from = { OR = {
			army_type = ag_zeta_crisis_defensive_army
			army_type = ag_zeta_crisis_assault_army
		} }
	}

	immediate = {
		random_list = {
			60 = { }
			20 = { fromfromfrom = {
				create_army = {
					name = "NAME_ag_zeta_crisis_avatar"
					owner = event_target:ag_zeta_crisis_country
					species = event_target:ag_zeta_crisis_country.owner_main_species
					type = "ag_zeta_crisis_assault_army_minor"
				}
			} }
			10 = { fromfromfrom = { while = {
				count = 2
				create_army = {
					name = "NAME_ag_zeta_crisis_avatar"
					owner = event_target:ag_zeta_crisis_country
					species = event_target:ag_zeta_crisis_country.owner_main_species
					type = "ag_zeta_crisis_assault_army_minor"
				}
			} } }
			8 = { fromfromfrom = { while = {
				count = 3
				create_army = {
					name = "NAME_ag_zeta_crisis_avatar"
					owner = event_target:ag_zeta_crisis_country
					species = event_target:ag_zeta_crisis_country.owner_main_species
					type = "ag_zeta_crisis_assault_army_minor"
				}
			} } }
			2 = { fromfromfrom = {
				create_army = {
					name = "NAME_ag_zeta_crisis_avatar"
					owner = event_target:ag_zeta_crisis_country
					species = event_target:ag_zeta_crisis_country.owner_main_species
					type = "ag_zeta_crisis_assault_army"
				}
			} }
		}
		reroll_random = yes
	}
}

# on_entering_system_fleet, Shroud Invaders Action, attack planet in same system
fleet_event = {
	id = ag_zeta_crisis.61
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
		exists = owner
		owner = {
			NOT = {
				is_country_type = ag_zeta_crisis_country
			}
			is_hostile = event_target:ag_zeta_crisis_country
		}
		any_controlled_ship = {
			is_disabled = no
			is_ship_class = shipclass_military
		}
		from = {
			any_ship_in_system = {
				fleet = {
					OR = {
						has_fleet_flag = ag_zeta_crisis_assault_fleet
						has_fleet_flag = ag_zeta_crisis_patrol_fleet
						has_fleet_flag = ag_zeta_crisis_protector_fleet
						has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
					}
				}
			}
		}
	}
	
	immediate = {
		from = {
			every_fleet_in_system = {
				limit = {
					OR = {
						has_fleet_flag = ag_zeta_crisis_assault_fleet
						has_fleet_flag = ag_zeta_crisis_patrol_fleet
						has_fleet_flag = ag_zeta_crisis_protector_fleet
					}
				}
				clear_orders = yes
				clear_fleet_actions = this
				ag_zeta_crisis_assault_fleet_attack_fleet_action = yes
			}
			every_fleet_in_system = {
				limit = {
					has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
					NAND = {
						exists = orbit
						orbit = {
							is_primary_star = yes
							has_planet_flag = ag_zeta_crisis_star_to_build_starbase
						}
					}
				}
				remove_fleet_flag = ag_zeta_crisis_construction_ship_has_protector
				solar_system = {
					random_system_planet = {
						limit = {
							is_primary_star = yes
						}
						remove_planet_flag = ag_zeta_crisis_star_to_build_starbase
					}
				}
				clear_orders = yes
				clear_fleet_actions = this
				set_fleet_stance = evasive
			}
		}
	}
}

# on_fleet_destroyed_perp, Shroud Invaders Action, reset target after battle
country_event = {
    id = ag_zeta_crisis.62
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
		is_country_type = ag_zeta_crisis_country
		fromfromfrom = {
			any_controlled_ship = {
				is_ship_class = shipclass_military
			}
		}
	}
	
	after = {
		fromfrom = {
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = {
							is_country_type = ag_zeta_crisis_country
						}
					}
					clear_orders = yes
					clear_fleet_actions = this
					switch = {
						trigger = has_fleet_flag
						ag_zeta_crisis_assault_fleet = {
							fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
						}
						ag_zeta_crisis_patrol_fleet = {
							fleet_event = { id = ag_zeta_crisis.72 days = 3 random = 2 }
						}
						ag_zeta_crisis_protector_fleet = {
							fleet_event = { id = ag_zeta_crisis.73 days = 3 random = 2 }
						}
						ag_zeta_crisis_construction_ship_fleet = {
							fleet_event = { id = ag_zeta_crisis.81 days = 3 random = 2 }
						}
					}
				}
				every_system_planet = {
					limit = {
						is_primary_star = yes
						has_planet_flag = ag_zeta_crisis_star_to_build_starbase
					}
					if = {
						limit = {
							prev = {
								NOT = {
									any_ship_in_system = {
										is_ship_size = ag_zeta_crisis_construction_ship
										fleet = {
											exists = orbit
											orbit = {
												is_same_value = prevprevprev
											}
										}
									}
								}
							}
						}
						remove_planet_flag = ag_zeta_crisis_star_to_build_starbase
					}
				}
			}
		}
	}
}

# on_fleet_auto_move_arrival, Shroud Invaders Action, reset target when orbiting stars
country_event = {
    id = ag_zeta_crisis.63
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		has_country_flag = ag_zeta_crisis_country
		from = { OR = {
			has_fleet_flag = ag_zeta_crisis_assault_fleet
			has_fleet_flag = ag_zeta_crisis_patrol_fleet
			has_fleet_flag = ag_zeta_crisis_protector_fleet
			has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
		} }
	}
	
	immediate = {
		if = {
			limit = { fromfrom = { exists = owner owner = { is_hostile = root } } }
			fromfrom = { planet_event = { id = ag_zeta_crisis.631 days = 5 } }
		}
		if = {
			limit = { fromfrom = { OR = {
				is_star = yes
				NOT = { exists = owner }
			} } }
			from = {
				clear_orders = yes
				clear_fleet_actions = this
				if = {
					limit = { has_fleet_flag = ag_zeta_crisis_assault_fleet }
					fleet_event = { id = ag_zeta_crisis.71 days = 1 random = 5 }
				}
				else_if = {
					limit = { has_fleet_flag = ag_zeta_crisis_patrol_fleet }
					fleet_event = { id = ag_zeta_crisis.72 days = 1 random = 5 }
				}
				else_if = {
					limit = { has_fleet_flag = ag_zeta_crisis_protector_fleet }
					fleet_event = { id = ag_zeta_crisis.73 days = 1 random = 5 }
				}
				else_if = {
					limit = {
						has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
						root.fromfrom = { NOT = { has_planet_flag = ag_zeta_crisis_star_to_build_starbase } }
					}
					fleet_event = { id = ag_zeta_crisis.81 days = 1 random = 5 }
				}
			}
		}
	}
}
planet_event = {
	id = ag_zeta_crisis.631
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				exists = owner
				exists = event_target:ag_zeta_crisis_country
				owner = { is_hostile = event_target:ag_zeta_crisis_country }
				has_orbital_bombardment = no
				num_pops > 4
				any_fleet_in_orbit = { exists = owner owner = { is_same_value = event_target:ag_zeta_crisis_country } }
			}
			if = {
				limit = { OR = { NOT = { is_variable_set = ag_zeta_crisis_bombardment } check_variable = { which = ag_zeta_crisis_bombardment value < 3 } } }
				ag_spawn_explosion_effect = { ag_scale = l ag_color = violet }
				add_planet_devastation = 25
				change_variable = { which = ag_zeta_crisis_bombardment value = 1 }
				planet_event = { id =  ag_zeta_crisis.631 days = 48 random = 24 }
			}
			else = {
				clear_variable = ag_zeta_crisis_bombardment
				add_planet_devastation = 100
				planet_event = { id = ag_zeta_crisis.45 scopes = { from = event_target:ag_zeta_crisis_country } }
			}
		}
		else = { if = {
			limit = { is_variable_set = ag_zeta_crisis_bombardment }
			subtract_variable = { which = ag_zeta_crisis_bombardment value = 1 }
			if = {
				limit = { check_variable = { which = ag_zeta_crisis_bombardment value <= 0 } }
				clear_variable = ag_zeta_crisis_bombardment
			}
			else = { planet_event = { id =  ag_zeta_crisis.631 days = 48 random = 24 } }
		} }
	}
}

# on_ship_destroyed_victim, Shroud Invaders Action, move to support friendly if neighbor starbase destroyed
country_event = {
    id = ag_zeta_crisis.64
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
		is_country_type = ag_zeta_crisis_country
		fromfrom = {
			is_ship_size = starbase_ag_zeta_crisis
		}
	}
	
	immediate = {
		fromfrom = {
			solar_system = {
				every_neighbor_system = {
					limit = {
						any_ship_in_system = {
							fleet = {
								OR = {
									has_fleet_flag = ag_zeta_crisis_assault_fleet
									has_fleet_flag = ag_zeta_crisis_patrol_fleet
								}
							}
						}
					}
					every_fleet_in_system = {
						limit = {
							OR = {
								has_fleet_flag = ag_zeta_crisis_assault_fleet
								has_fleet_flag = ag_zeta_crisis_patrol_fleet
							}
						}
						clear_orders = yes
						clear_fleet_actions = this
						prevprev = {
							random_system_planet = {
								limit = {
									is_primary_star = yes
								}
								prevprev = {
									auto_move_to_planet = {
										target = prev
										clear_auto_move_on_arrival = yes
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# on_entering_battle, Shroud Invaders Action, move to support friendly if nearby portal underattack
country_event = {
    id = ag_zeta_crisis.65
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
		is_same_value = event_target:ag_zeta_crisis_country
		fromfrom = {
			NOT = { 
				has_fleet_flag = ag_zeta_crisis_patrol_reinforcement_locked
			}
			any_controlled_ship = {
				is_ship_size = ag_zeta_crisis_portal
			}
			exists = owner
			owner = {
				is_country_type = ag_zeta_crisis_country
			}
		}
	}
	
	immediate = {
		fromfrom = {
			set_timed_fleet_flag = {
				flag = ag_zeta_crisis_patrol_reinforcement_locked
				days = 20
			}
			solar_system = {
				every_neighbor_system = {
					limit = { always = yes }
					every_neighbor_system = {
						limit = {
							any_ship_in_system = {
								fleet = {
									OR = {
										has_fleet_flag = ag_zeta_crisis_assault_fleet
										has_fleet_flag = ag_zeta_crisis_patrol_fleet
									}
								}
							}
						}
						every_fleet_in_system = {
							limit = {
								OR = {
									has_fleet_flag = ag_zeta_crisis_assault_fleet
									has_fleet_flag = ag_zeta_crisis_patrol_fleet
								}
							}
							clear_orders = yes
							clear_fleet_actions = this
							prevprevprev = {
								random_system_planet = {
									limit = {
										is_primary_star = yes
									}
									prevprev = {
										auto_move_to_planet = {
											target = prev
											clear_auto_move_on_arrival = yes
										}
									}
								}
							}
						}
					}
					every_fleet_in_system = {
						limit = {
							OR = {
								has_fleet_flag = ag_zeta_crisis_assault_fleet
								has_fleet_flag = ag_zeta_crisis_patrol_fleet
							}
						}
						clear_orders = yes
						clear_fleet_actions = this
						prevprev = {
							random_system_planet = {
								limit = {
									is_primary_star = yes
								}
								prevprev = {
									auto_move_to_planet = {
										target = prev
										clear_auto_move_on_arrival = yes
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# on_ship_destroyed_victim, Shroud Invaders Action, Construction Ship's protector find a new target if Construction Ship destroyed
country_event = {
    id = ag_zeta_crisis.66
    hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
		fromfrom = {
			is_ship_size = ag_zeta_crisis_construction_ship
		}
	}
	
	immediate = {
		every_controlled_fleet = {
			limit = {
				has_fleet_flag = ag_zeta_crisis_protector_fleet
				NOT = {
					has_fleet_order = follow_order
				}
			}
			fleet_event = { id = ag_zeta_crisis.73 days = 1 random = 2 }
		}
	}
}

# Shroud Invaders Action, Attack Fleet finds target
fleet_event = {
	id = ag_zeta_crisis.71
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_global_flag = ag_zeta_crisis_stage_3 NOT = { has_global_flag = ag_zeta_crisis_ended } }
	immediate = { ag_zeta_crisis_assault_fleet_action = yes }
}

# Shroud Invaders Action, Patrol Fleet finds target
fleet_event = {
	id = ag_zeta_crisis.72
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_global_flag = ag_zeta_crisis_stage_3 NOT = { has_global_flag = ag_zeta_crisis_ended } }
	immediate = { ag_zeta_crisis_patrol_fleet_action = yes }
}

# Shroud Invaders Action, Construction Ship's protector finds target
fleet_event = {
	id = ag_zeta_crisis.73
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_global_flag = ag_zeta_crisis_stage_3 NOT = { has_global_flag = ag_zeta_crisis_ended } }
	immediate = { ag_zeta_crisis_protector_fleet_action = yes }
}

# Shroud Invaders Action, Avatar finds target
fleet_event = {
	id = ag_zeta_crisis.74
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_global_flag = ag_zeta_crisis_stage_3 NOT = { has_global_flag = ag_zeta_crisis_ended } }
	immediate = { ag_zeta_crisis_avatar_action = yes }
}

# Shroud Invaders Action, Ships go berserking when all Psionic Portal destroyed
fleet_event = {
	id = ag_zeta_crisis.76
	hide_window = yes
	is_triggered_only = yes
	immediate = { ag_zeta_crisis_ships_berserk_action = yes }
}

# Shroud Invaders Action, Construction Ship find a suitable system
fleet_event = {
	id = ag_zeta_crisis.81
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_global_flag = ag_zeta_crisis_stage_3 NOT = { has_global_flag = ag_zeta_crisis_ended } }
	immediate = { ag_zeta_crisis_constructor_fleet_action = yes }
}

# on_entering_system_fleet, Shroud Invaders Action, Construction Ship check its order when entering system
fleet_event = {
	id = ag_zeta_crisis.82
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
		from = {
			NOT = {
				any_ship_in_system = {
					is_ship_size = starbase_ag_zeta_crisis
					exists = owner
					owner = { is_country_type = ag_zeta_crisis_country }
				}
			}
		}
	}
	
	immediate = {
		clear_orders = yes
		clear_fleet_actions = this
		if = {
			limit = {
				from = {
					OR = {
						any_ship_in_system = {
							is_disabled = no
							is_ship_class = shipclass_military
							exists = owner
							owner = {
								is_hostile = event_target:ag_zeta_crisis_country
							}
						}
						AND = {
							any_ship_in_system = {
								is_ship_size = starbase_ag_zeta_crisis
								exists = owner
								owner = { is_country_type = ag_zeta_crisis_country }
							}
						}
					}
				}
			}
			set_fleet_stance = evasive
		}
		else = {
			if = {
				limit = {
					has_fleet_order = evade_hostiles_order
					from = {
						NOT = {
							any_ship_in_system = {
								is_disabled = no
								is_ship_class = shipclass_military
								exists = owner
								owner = {
									is_hostile = event_target:ag_zeta_crisis_country
								}
							}
						}
					}
				}
				set_fleet_stance = passive
				fleet_event = { id = ag_zeta_crisis.81 }
			}
			else_if = {
				limit = {
					from = {
						any_system_planet = {
							is_primary_star = yes
							NOT = {
								has_planet_flag = ag_zeta_crisis_star_to_build_starbase
							}
						}
					}
				}
				from = {
					random_system_planet = {
						limit = {
							is_primary_star = yes
						}
						prevprev = {
							auto_move_to_planet = {
								target = prev
								clear_auto_move_on_arrival = yes
							}
						}
						set_planet_flag = ag_zeta_crisis_star_to_build_starbase
						planet_event = { id = ag_zeta_crisis.83 days = @ag_zeta_crisis_starbase_construction_days }
					}
				}
			}
			else_if = {
				limit = {
					from = {
						any_system_planet = {
							is_primary_star = yes
							has_planet_flag = ag_zeta_crisis_star_to_build_starbase
							NOT = {
								any_fleet_in_orbit = {
									has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
									NOT = {
										is_same_value = root
									}
								}
							}
						}
					}
				}
				from = {
					random_system_planet = {
						limit = {
							is_primary_star = yes
						}
						prevprev = {
							auto_move_to_planet = {
								target = prev
								clear_auto_move_on_arrival = yes
							}
						}
						planet_event = { id = ag_zeta_crisis.83 days = @ag_zeta_crisis_starbase_construction_days }
					}
				}
			}
			else_if = {
				limit = {
					from = {
						any_neighbor_system = {
							NOT = {
								exists = starbase
							}
							any_system_planet = {
								is_primary_star = yes
								OR = {
									NOT = {
										has_planet_flag = ag_zeta_crisis_star_to_build_starbase
									}
									AND = {
										has_planet_flag = ag_zeta_crisis_star_to_build_starbase
										NOT = {
											any_fleet_in_orbit = {
												has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
												NOT = {
													is_same_value = root
												}
											}
										}
									}
								}
							}
						}
					}
				}
				from = {
					random_neighbor_system = {
						limit = {
							NOT = {
								exists = starbase
							}
							any_system_planet = {
								is_primary_star = yes
								OR = {
									NOT = {
										has_planet_flag = ag_zeta_crisis_star_to_build_starbase
									}
									AND = {
										has_planet_flag = ag_zeta_crisis_star_to_build_starbase
										NOT = {
											any_fleet_in_orbit = {
												has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
												NOT = {
													is_same_value = root
												}
											}
										}
									}
								}
							}
						}
						random_system_planet = {
							limit = {
								is_primary_star = yes
							}
							prevprevprev = {
								auto_move_to_planet = {
									target = prev
									clear_auto_move_on_arrival = yes
								}
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					always = yes
				}
				closest_system = {
					use_bypasses = yes
					limit = {
						any_ship_in_system = {
							is_ship_size = starbase_ag_zeta_crisis
							exists = owner
							owner = { is_country_type = ag_zeta_crisis_country }
						}
					}
					random_system_planet = {
						limit = {
							is_primary_star = yes
						}
						prevprev = {
							auto_move_to_planet = {
								target = prev
								clear_auto_move_on_arrival = yes
							}
						}
					}
				}
			}
		}
	}
}

# Shroud Invaders Action, Spawn a starbase when Construction Ship completed its construction
planet_event = {
	id = ag_zeta_crisis.83
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_fleet_in_orbit = {
					has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
				}
			}
			remove_planet_flag = ag_zeta_crisis_star_to_build_starbase
			solar_system = {
				ag_create_zeta_crisis_starbase = yes
				every_fleet_in_system = {
					limit = {
						has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
					}
					clear_orders = yes
					clear_fleet_actions = this
					fleet_event = { id = ag_zeta_crisis.81 days = 3 random = 2 }
				}
			}
		}
	}
}

# on_monthly_pulse, Failsafe for unexpected bugs or events make Shroud Invaders' fleet stoped
event = {
	id = ag_zeta_crisis.91
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOT = {
			has_global_flag = ag_zeta_crisis_ended
		}
		any_country = {
			is_country_type = ag_zeta_crisis_country
		}
	}
	
	immediate = {
		every_country = {
			limit = {
				is_country_type = ag_zeta_crisis_country
			}
			every_controlled_fleet = {
				limit = {
					has_fleet_flag = ag_zeta_crisis_assault_fleet
					is_fleet_idle = yes
					NAND = {
						exists = orbit
						orbit = {
							NOT = {
								is_star = yes
							}
							exists = owner
							owner = {
								is_hostile = event_target:ag_zeta_crisis_country
							}
						}
					}
				}
				fleet_event = { id = ag_zeta_crisis.71 }
			}
			every_controlled_fleet = {
				limit = {
					has_fleet_flag = ag_zeta_crisis_patrol_fleet
					is_fleet_idle = yes
				}
				fleet_event = { id = ag_zeta_crisis.72 }
			}
			every_controlled_fleet = {
				limit = {
					has_fleet_flag = ag_zeta_crisis_protector_fleet
					is_fleet_idle = yes
				}
				fleet_event = { id = ag_zeta_crisis.73 }
			}
			every_controlled_fleet = {
				limit = {
					has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
					is_fleet_idle = yes
					NAND = {
						exists = orbit
						orbit = {
							is_primary_star = yes
							has_planet_flag = ag_zeta_crisis_star_to_build_starbase
						}
					}
				}
				fleet_event = { id = ag_zeta_crisis.81 }
			}
		}
	}
}

# on_starbase_destroyed, Destroy starbase, create new starbase
starbase_event = {
	id = ag_zeta_crisis.92
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		from.owner = { is_country_type = ag_zeta_crisis_country }
		NOT = { solar_system = { any_system_planet = { is_colony = yes } } }
	}
	immediate = { solar_system = { system_event = { id = ag_zeta_crisis.93 days = 2 } } }
}
system_event = {
	id = ag_zeta_crisis.93
	hide_window = yes
	is_triggered_only = yes
	immediate = { ag_create_zeta_crisis_starbase = yes }
}

# Switch owner of Psionic Portal if all nearby starbase destroyed
country_event = {
	id = ag_zeta_crisis.101
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = ag_zeta_crisis_country
		fromfrom = {
			is_ship_size = starbase_ag_zeta_crisis
		}
	}

	immediate = {
		fromfrom.solar_system = {
			system_event = { id = ag_zeta_crisis.502 days = 30 random = 30 }
			every_system_ambient_object = {
				limit = { has_ambient_object_flag = ag_zeta_crisis_system_effect_thin }
				destroy_ambient_object = this
			}
			every_fleet_in_system = {
				limit = {
					exists = owner
					owner = {
						is_same_value = event_target:ag_zeta_crisis_country
					}
					NOT = {
						has_fleet_flag = ag_zeta_crisis_planet_guardian_fleet
					}
				}
				every_controlled_ship = {
					limit = {
						is_ship_size = ag_zeta_crisis_defensive_platform
					}
					destroy_ship = this
				}
			}
		}
		if = {
			limit = {
				fromfrom = {
					solar_system = {
						OR = {
							AND = {
								any_ship_in_system = {
									fleet = {
										has_fleet_flag = ag_zeta_crisis_gate_portal
									}
								}
								NOT = {
									any_neighbor_system = {
										has_hyperlane_to = prev
										any_ship_in_system = {
											is_ship_size = starbase_ag_zeta_crisis
											exists = owner
											owner = { is_country_type = ag_zeta_crisis_country }
										}
									}
								}
							}
							any_neighbor_system = {
								has_hyperlane_to = prev
								any_ship_in_system = {
									fleet = {
										has_fleet_flag = ag_zeta_crisis_gate_portal
									}
								}
								NOR = {
									any_ship_in_system = {
										is_ship_size = starbase_ag_zeta_crisis
										exists = owner
										owner = { is_country_type = ag_zeta_crisis_country }
									}
									any_neighbor_system = {
										has_hyperlane_to = prev
										NOT = { is_same_value = root.fromfrom.solar_system }
										any_ship_in_system = {
											is_ship_size = starbase_ag_zeta_crisis
											exists = owner
											owner = { is_country_type = ag_zeta_crisis_country }
										}
									}
								}
							}
						}
					}
				}
			}
			event_target:ag_zeta_crisis_portal_holder = {
				random_controlled_fleet = {
					limit = {
						has_fleet_flag = ag_zeta_crisis_gate_portal
						exists = solar_system
						solar_system = {
							OR = {
								is_same_value = root.fromfrom.solar_system
								any_neighbor_system = {
									has_hyperlane_to = prev
									is_same_value = root.fromfrom.solar_system
								}
							}
							NOT = {
								any_neighbor_system = {
									has_hyperlane_to = prev
									NOT = { is_same_value = root.fromfrom.solar_system }
									any_ship_in_system = {
										is_ship_size = starbase_ag_zeta_crisis
										exists = owner
										owner = { is_country_type = ag_zeta_crisis_country }
									}
								}
							}
						}
					}
					set_owner = root
					set_event_locked = no
				}
			}
		}
	}
}
# Failsafe event for portal owner swap.
event = {
	id = ag_zeta_crisis.1010
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		ag_zeta_crisis_event_active = yes
		exists = event_target:ag_zeta_crisis_portal_holder
	}
	immediate = {
		event_target:ag_zeta_crisis_portal_holder = {
			every_controlled_fleet = {
				limit = {
					has_fleet_flag = ag_zeta_crisis_gate_portal
					solar_system = { NOT = { any_ship_in_system = {
						is_ship_size = starbase_ag_zeta_crisis
						exists = owner
						owner = { is_country_type = ag_zeta_crisis_country }
					} } }
				}
				if = {
					limit = { solar_system = { NOT = { any_neighbor_system = {
						has_hyperlane_to = prev
						any_ship_in_system = {
							is_ship_size = starbase_ag_zeta_crisis
							exists = owner
							owner = { is_country_type = ag_zeta_crisis_country }
						}
					} } } }
					set_owner = event_target:ag_zeta_crisis_country
					set_event_locked = no
				}
			}
		}
	}
}

# on_ship_disabled, Shroud Invaders' Psionic Portal destroyed (actually is disabled)
ship_event = {
	id = ag_zeta_crisis.102
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_size = ag_zeta_crisis_portal
		exists = owner
		owner = { is_country_type = ag_zeta_crisis_country }
	}
	
	immediate = {
		if = {
			limit = { fleet = { has_fleet_flag = ag_zeta_crisis_gate_portal } }
			ag_zeta_crisis_gate_portal_destroyed_effect = yes
		}
		else = {
			ag_zeta_crisis_home_portal_destroyed_effect = yes
			event_target:ag_ancient_zeta_star = { planet_event = { id = ag_zeta_crisis.1023 days = 15 } }
		}
	}
}

# Notification, A Shroud Invaders' Scondary Psionic Portal destroyed
country_event = {
	id = ag_zeta_crisis.1020
	title = "ag_zeta_crisis.1020.name"
	desc = "ag_zeta_crisis.1020.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_super_explosion

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.1020.a"
	}
}

# Notification, All Shroud Invaders' Scondary Psionic Portal destroyed
country_event = {
	id = ag_zeta_crisis.1021
	title = "ag_zeta_crisis.1021.name"
	desc = "ag_zeta_crisis.1021.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_super_explosion

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.1021.a"
	}
}

# Notification, All Shroud Invaders' Psionic Portal destroyed
country_event = {
	id = ag_zeta_crisis.1022
	title = "ag_zeta_crisis.1022.name"
	desc = "ag_zeta_crisis.1022.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_super_explosion

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.1022.a"
	}
}

# Create a Large Psionic Storm in Zeta Area when Primary Psionic Portal destroyed
planet_event = {
	id = ag_zeta_crisis.1023
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		solar_system = {
			ag_psionic_storm_system_side_effect = yes
			every_fleet_in_system = {
				ag_spawn_explosion_effect = { ag_scale = m ag_color = violet }
				delete_fleet = this
			}
			save_event_target_as = ag_zeta_crisis_psionic_storm_system
			set_star_flag = ag_zeta_crisis_psionic_storm_system
			random_system_planet = {
				limit = { is_primary_star = yes }
				ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
				ag_zeta_crisis_relic_country_ckeck = yes
				create_fleet = {
					name = "NAME_ag_zeta_crisis_psionic_storm_fleet"
					settings = { spawn_debris = no is_boss = yes }
					effect = {
						set_fleet_flag = ag_zeta_crisis_psionic_storm_fleet
						set_fleet_flag = ag_zeta_crisis_psionic_storm_large
						set_owner = event_target:ag_zeta_crisis_relic_country
						set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
						create_ship = {
							name = "NAME_ag_zeta_crisis_psionic_storm_ship"
							design = "NAME_ag_zeta_crisis_psionic_storm_large"
							prefix = no
							effect = { ag_difficulty_bonus = yes }
						}
						set_location = { target = prev distance = -1 angle = 0 }
						set_event_locked = yes
						fleet_event = { id = ag_zeta_crisis.521 days = 540 }
					}
				}
				planet_event = { id = ag_zeta_crisis.1024 days = 540 }
			}
			every_system = {
				limit = {
					NOT = { is_same_value = prev }
					OR = {
						distance = {
							source = prev
							min_distance >= 0
							max_distance <= 50
							type = euclidean
							use_bypasses = no
						}
						has_hyperlane_to = prev
					}
					ag_can_spawn_psionic_storm_in_system = yes
					NOT = { any_system_planet = { is_colony = yes is_capital = yes } }
				}
				if = { limit = { ag_is_mod_special_system = no } ag_psionic_storm_system_side_effect = yes }
				set_star_flag = ag_zeta_crisis_psionic_storm_system
				random_system_planet = {
					limit = { is_primary_star = yes }
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
					create_fleet = {
						name = "NAME_ag_zeta_crisis_psionic_storm_fleet"
						settings = { spawn_debris = no is_boss = yes }
						effect = {
							set_fleet_flag = ag_zeta_crisis_psionic_storm_fleet
							set_fleet_flag = ag_zeta_crisis_psionic_storm_small_zeta_area
							set_owner = event_target:ag_zeta_crisis_relic_country
							set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
							create_ship = {
								name = "NAME_ag_zeta_crisis_psionic_storm_ship"
								design = "NAME_ag_zeta_crisis_psionic_storm_small"
								prefix = no
								effect = { ag_difficulty_bonus = yes }
							}
							set_location = { target = prev distance = -1 angle = 0 }
							set_event_locked = yes
						}
					}
				}
				if = {
					limit = { ag_is_mod_special_system = no }
					every_system_planet = {
						limit = {
							exists = owner
							owner = { is_hostile = event_target:ag_zeta_crisis_country }
							OR = { is_colony = yes is_under_colonization = yes }
							num_pops > 0
						}
						ag_zeta_crisis_controlled_planet_effect = yes
					}
				}
			}
			every_country = {
				limit = { NOT = { is_same_value = event_target:ag_zeta_crisis_country } }
				country_event = { id = ag_zeta_crisis.522 }
			}
		}
		event_target:ag_zeta_crisis_country = { country_event = { id = ag_zeta_crisis.10231 days = 2 } }
	}
}
country_event = {
	id = ag_zeta_crisis.10231
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = { ag_spawn_zeta_crisis_guardian_fleet = yes ag_create_zeta_crisis_special_ships = yes }
}

# Psionic Storm in Zeta Area weakened
planet_event = {
	id = ag_zeta_crisis.1024
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		solar_system = {
			random_system_planet = {
				limit = { is_primary_star = yes }
				ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
				create_ambient_object = {
					type = ag_zeta_crisis_psionic_storm_small_object
					location = this
					duration = -1
					use_3d_location = yes
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
					entity_scale_to_size = no
					scale = 1.0
				}
			}
			add_modifier = { modifier = "ag_zeta_crisis_psionic_storm_final_effect" days = -1 }
			every_country = {
				limit = { NOT = { is_same_value = event_target:ag_zeta_crisis_country } }
				country_event = { id = ag_zeta_crisis.1026 }
			}
			every_galaxy_fleet = {
				limit = { has_fleet_flag = ag_zeta_crisis_psionic_storm_small_zeta_area }
				delete_fleet = { target = this kill_leader = yes destroy_template = yes }
			}
		}
	}
}

# Notification for coming Psionic Storm in Zeta Area
country_event = {
	id = ag_zeta_crisis.1025
	title = "ag_zeta_crisis.1025.name"
	desc = "ag_zeta_crisis.1025.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_psionic
	location = event_target:ag_ancient_zeta_star

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.1025.a"
	}
}

# Notification for Psionic Storm in Zeta Area weakened
country_event = {
	id = ag_zeta_crisis.1026
	title = "ag_zeta_crisis.1026.name"
	desc = "ag_zeta_crisis.1026.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_sensor_ping
	location = event_target:ag_ancient_zeta_star

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.1026.a"
	}
}

# on_fleet_destroyed_perp, End crisis when all psionic entities destroyed
country_event = {
	id = ag_zeta_crisis.103
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		has_global_flag = ag_zeta_crisis_all_portal_destroyed
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		from = {
			is_country_type = ag_zeta_crisis_country
			num_ships = 0
		}
	}
	
	immediate = {
		if = {
			limit = { exists = event_target:ag_ancient_eta_shielded_world event_target:ag_ancient_eta_shielded_world = { exists = owner has_building = ag_ancient_eta_monument owner = { is_ai = no } } }
			event_target:ag_ancient_eta_shielded_world.owner = { country_event = { id = ag_zeta_psionics.204 days = 5 random = 5 } }
		}
		set_global_flag = ag_zeta_crisis_ended
		if = {
			limit = { NOR = {
				ag_gamma_crisis_event_active = yes
				# ag_eta_titan_event_active = yes
				any_country = { is_crisis_faction = yes }
			} }
			end_crisis = yes
		}
		else = { multiply_crisis_strength = 1.5 }
		country_event = { id = ag_zeta_crisis.1031 }
		save_event_target_as = ag_zeta_crisis_killer
		every_country = {
			limit = {
				NOT = { is_same_value = root }
			}
			country_event = { id = ag_zeta_crisis.1032 }
		}
		every_country = {
			if = { limit = { has_modifier = "ag_zeta_crisis_weakness" } remove_modifier = "ag_zeta_crisis_weakness" }
			if = { limit = { has_modifier = "ag_iota_zeta_crisis_damage_buff" } remove_modifier = "ag_iota_zeta_crisis_damage_buff" }
			if = { limit = { has_country_flag = ag_has_zeta_crisis_weakness } remove_country_flag = ag_has_zeta_crisis_weakness }
			if = { limit = { has_modifier = "ag_zeta_crisis_anti_cloaking" } remove_modifier = "ag_zeta_crisis_anti_cloaking" }
			if = { limit = { has_modifier = "ag_defender_of_the_galaxy_zeta_crisis" } remove_modifier = "ag_defender_of_the_galaxy_zeta_crisis" }
			if = {
				limit = { has_special_project = ag_find_zeta_crisis_weakness }
				abort_special_project = { type = "ag_find_zeta_crisis_weakness" location = capital_scope }
			}
		}
		add_threat = { who = root amount = 50 }
		from = {
			every_owned_planet = {
				add_planet_devastation = -100
				destroy_colony = yes
				remove_planet_flag = ag_zeta_crisis_controlled_world
				if = {
					limit = { ag_is_ringworld = no }
					random_list = {
						45 = {
							random_list = {
								50 = { ag_change_pc = { ag_planet_class = pc_barren } }
								50 = { ag_change_pc = { ag_planet_class = pc_barren_cold } }
							}
							add_modifier = { modifier = "terraforming_candidate" days = -1 }
							reset_planet = yes
							clear_deposits = yes
							add_deposit = d_zro_deposit_3
						}
						45 = {
							random_list = {
								50 = { ag_change_pc = { ag_planet_class = pc_barren } }
								50 = { ag_change_pc = { ag_planet_class = pc_barren_cold } }
							}
							reset_planet = yes
							clear_deposits = yes
							add_deposit = d_zro_deposit_3
						}
						10 = {
							ag_change_pc = { ag_planet_class = pc_nuked }
							reset_planet = yes
							random_list = {
								33 = {
									add_deposit = ag_zeta_crisis_bombardment_crater
									add_deposit = ag_zeta_crisis_bombardment_crater
								}
								33 = { add_deposit = ag_zeta_crisis_bombardment_crater }
								33 = { }
							}
							random_list = {
								50 = { add_deposit = ag_zeta_crisis_nuked_planet_deposit }
								50 = { }
							}
							random_list = {
								35 = { add_modifier = { modifier = "hazardous_weather" days = -1 } }
								35 = { add_modifier = { modifier = "unstable_tectonics" days = -1 } }
								3 = { add_modifier = { modifier = "hazardous_weather" days = -1 } }
								3 = { add_modifier = { modifier = "unstable_tectonics" days = -1 } }
								27 = { }
							}
						}
					}
				}
				else = { ag_destroy_habitable_ringworld = yes }
			}
			destroy_country = yes
		}
		event_target:ag_zeta_shrouded_planet = { if = { limit = { exists = owner owner = { ag_is_common_country = yes } } planet_event = { id = ag_zeta_crisis.301 days = 30 random = 30 } } }
	}
}

# Notification for Shroud Invaders defeated, for its killer
country_event = {
	id = ag_zeta_crisis.1031
	title = "ag_zeta_crisis.1031.name"
	desc = "ag_zeta_crisis.1031.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_crisis_defeated_room }
	show_sound = event_celebration

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.1031.a"
		end_event_chain = "ag_zeta_crisis_chain"
	}
}

# Notification for Shroud Invaders defeated, for others
country_event = {
	id = ag_zeta_crisis.1032
	title = "ag_zeta_crisis.1032.name"
	desc = "ag_zeta_crisis.1032.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_crisis_defeated_room }
	show_sound = event_celebration

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.1032.a"
		end_event_chain = "ag_zeta_crisis_chain"
	}
}

# on_yearly_pulse, Destroy Shroud Invaders with less than 25 ships.
event = {
	id = ag_zeta_crisis.1033
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		has_global_flag = ag_zeta_crisis_all_portal_destroyed
		NOT = { has_global_flag = ag_zeta_crisis_ended }
		exists = event_target:ag_zeta_crisis_country
		event_target:ag_zeta_crisis_country = {
			NOT = { any_controlled_fleet = { OR = {
				has_fleet_flag = ag_zeta_crisis_assault_fleet
				has_fleet_flag = ag_zeta_crisis_assault_fleet_1
				has_fleet_flag = ag_zeta_crisis_assault_fleet_2
				has_fleet_flag = ag_zeta_crisis_patrol_fleet
				has_fleet_flag = ag_zeta_crisis_protector_fleet
				has_fleet_flag = ag_zeta_crisis_construction_ship_fleet
			} } }
			num_ships < 25
		}
	}
	
	immediate = {
		random_list = {
			40 = { }
			60 = {
				if = {
					limit = { exists = event_target:ag_ancient_eta_shielded_world event_target:ag_ancient_eta_shielded_world = { exists = owner has_building = ag_ancient_eta_monument owner = { is_ai = no } } }
					event_target:ag_ancient_eta_shielded_world.owner = { country_event = { id = ag_zeta_psionics.204 days = 5 random = 5 } }
				}
				set_global_flag = ag_zeta_crisis_ended
				if = {
					limit = { NOR = {
						ag_gamma_crisis_event_active = yes
						# ag_eta_titan_event_active = yes
						any_country = { is_crisis_faction = yes }
					} }
					end_crisis = yes
				}
				else = { multiply_crisis_strength = 1.5 }
				every_country = {
					limit = { NOT = { is_country_type = ag_zeta_crisis_country } }
					country_event = { id = ag_zeta_crisis.1034 }
					if = { limit = { has_modifier = "ag_zeta_crisis_weakness" } remove_modifier = "ag_zeta_crisis_weakness" }
					if = { limit = { has_modifier = "ag_iota_zeta_crisis_damage_buff" } remove_modifier = "ag_iota_zeta_crisis_damage_buff" }
					if = { limit = { has_country_flag = ag_has_zeta_crisis_weakness } remove_country_flag = ag_has_zeta_crisis_weakness }
					if = { limit = { has_modifier = "ag_zeta_crisis_anti_cloaking" } remove_modifier = "ag_zeta_crisis_anti_cloaking" }
					if = { limit = { has_modifier = "ag_defender_of_the_galaxy_zeta_crisis" } remove_modifier = "ag_defender_of_the_galaxy_zeta_crisis" }
					if = {
						limit = { has_special_project = ag_find_zeta_crisis_weakness }
						abort_special_project = { type = "ag_find_zeta_crisis_weakness" location = capital_scope }
					}
				}
				event_target:ag_zeta_crisis_country = {
					every_owned_planet = {
						add_planet_devastation = -100
						destroy_colony = yes
						remove_planet_flag = ag_zeta_crisis_controlled_world
						if = {
							limit = { ag_is_ringworld = no }
							random_list = {
								45 = {
									random_list = {
										50 = { ag_change_pc = { ag_planet_class = pc_barren } }
										50 = { ag_change_pc = { ag_planet_class = pc_barren_cold } }
									}
									add_modifier = { modifier = "terraforming_candidate" days = -1 }
									reset_planet = yes
									clear_deposits = yes
									add_deposit = d_zro_deposit_3
								}
								45 = {
									random_list = {
										50 = { ag_change_pc = { ag_planet_class = pc_barren } }
										50 = { ag_change_pc = { ag_planet_class = pc_barren_cold } }
									}
									reset_planet = yes
									clear_deposits = yes
									add_deposit = d_zro_deposit_3
								}
								10 = {
									ag_change_pc = { ag_planet_class = pc_nuked }
									reset_planet = yes
									random_list = {
										33 = {
											add_deposit = ag_zeta_crisis_bombardment_crater
											add_deposit = ag_zeta_crisis_bombardment_crater
										}
										33 = { add_deposit = ag_zeta_crisis_bombardment_crater }
										33 = { }
									}
									random_list = {
										50 = { add_deposit = ag_zeta_crisis_nuked_planet_deposit }
										50 = { }
									}
									random_list = {
										35 = { add_modifier = { modifier = "hazardous_weather" days = -1 } }
										35 = { add_modifier = { modifier = "unstable_tectonics" days = -1 } }
										3 = { add_modifier = { modifier = "hazardous_weather" days = -1 } }
										3 = { add_modifier = { modifier = "unstable_tectonics" days = -1 } }
										27 = { }
									}
								}
							}
						}
						else = { ag_destroy_habitable_ringworld = yes }
					}
					every_controlled_fleet = { delete_fleet = this }
					destroy_country = yes
				}
				event_target:ag_zeta_shrouded_planet = { if = { limit = { exists = owner owner = { ag_is_common_country = yes } } planet_event = { id = ag_zeta_crisis.301 days = 30 random = 30 } } }
			}
		}
	}
}

# Notification for Shroud Invaders defeated, for auto destroy
country_event = {
	id = ag_zeta_crisis.1034
	title = "ag_zeta_crisis.1034.name"
	desc = "ag_zeta_crisis.1034.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_crisis_defeated_room }
	show_sound = event_celebration

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.1034.a"
		end_event_chain = "ag_zeta_crisis_chain"
	}
}

# Spawn Psi Installation Defensive System if Shroud Invaders controlled too many planets
country_event = {
	id = ag_zeta_crisis.201
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = ag_zeta_crisis_mutex }
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_ended
			has_global_flag = ag_ancient_psi_guardian_appeared
		}
		event_target:ag_zeta_crisis_country = {
			count_controlled_ship = { limit = { is_ship_size = starbase_ag_zeta_crisis } count > 20 }
			OR = {
				AND = { galaxy_size = tiny num_owned_planets > 8 }
				AND = { galaxy_size = small num_owned_planets > 12 }
				AND = { galaxy_size = medium num_owned_planets > 16 }
				AND = { galaxy_size = large num_owned_planets > 20 }
				num_owned_planets >= 24
			}
		}
	}
	
	immediate = {
		set_timed_global_flag = { flag = ag_zeta_crisis_mutex days = 2 }
		reroll_random = yes
		random_list = { 50 = { } 50 = { if = { limit = { OR = { has_crisis = no has_crisis_stage = { STAGE = 1 } has_crisis_stage = { STAGE = 2 } has_crisis_stage = { STAGE = 3 } } } set_crisis_stage_4 = yes } } }
		reroll_random = yes
		random_list = {
			50 = { }
			50 = {
				modifier = { factor = 1.5 has_crisis_stage = { STAGE = 4 } }
				modifier = {
					factor = 2
					event_target:ag_zeta_crisis_country = { OR = {
						AND = { galaxy_size = tiny num_owned_planets > 12 }
						AND = { galaxy_size = small num_owned_planets > 18 }
						AND = { galaxy_size = medium num_owned_planets > 24 }
						AND = { galaxy_size = large num_owned_planets > 30 }
						num_owned_planets >= 36
					} }
				}
				modifier = {
					factor = 2
					event_target:ag_zeta_crisis_country = { OR = {
						AND = { galaxy_size = tiny num_owned_planets > 16 }
						AND = { galaxy_size = small num_owned_planets > 24 }
						AND = { galaxy_size = medium num_owned_planets > 32 }
						AND = { galaxy_size = large num_owned_planets > 40 }
						num_owned_planets >= 48
					} }
				}
				set_global_flag = ag_ancient_psi_guardian_appeared
				ag_spawn_ancient_system = { ag_system_to_spawn = "ag_ancient_psi_init" }
				random_system = {
					limit = { has_star_flag = ag_ancient_psi_system }
					ag_spawned_system_hyperlane_fixup = yes
				}
				event_target:ag_ancient_psi_guardian_country = {
					establish_communications_no_message = event_target:ag_zeta_crisis_country
					country_event = { id = ag_zeta_crisis.203 days = 200 random = 40 }
				}
				every_country = {
					limit = { NOT = { is_country_type = ag_zeta_crisis_country } }
					country_event = { id = ag_zeta_crisis.2011 days = 3 random = 2 }
					country_event = { id = ag_zeta_crisis.2012 days = 10 }
				}
				if = {
					limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
					event_target:ag_zeta_crisis_country = { add_modifier = { modifier = ag_zeta_crisis_weakness_ancient_psi_guardian days = -1 } }
				}
				if = {
					limit = { exists = event_target:ag_zeta_crisis_portal_holder }
					event_target:ag_zeta_crisis_portal_holder = { add_modifier = { modifier = ag_zeta_crisis_weakness_ancient_psi_guardian days = -1 } }
				}
			}
		}
		reroll_random = yes
	}
}

# Notification, Psi Installation Defensive System spawned 
country_event = {
	id = ag_zeta_crisis.2011
	title = "ag_zeta_crisis.2011.name"
	desc = "ag_zeta_crisis.2011.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_wormhole_room }
	show_sound = event_red_alert

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.2011.a"
	}
}

# Received Psi Installation Defensive System's message
country_event = {
	id = ag_zeta_crisis.2012
	title = "ag_zeta_crisis.2012.name"
	desc = "ag_zeta_crisis.2012.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_star_chart_room }
	show_sound = event_sensor_ping
	location = event_target:ag_ancient_psi_star

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.2012.a"
		hidden_effect = {
			country_event = { id = ag_zeta_crisis.2013 }
		}
	}
}

# Psi Installation Defensive System's message
country_event = {
	id = ag_zeta_crisis.2013
	title = "ag_zeta_crisis.2013.name"
	desc = "ag_zeta_crisis.2013.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes
	
	immediate = {
		establish_communications_no_message = event_target:ag_ancient_psi_guardian_country
		event_target:ag_ancient_psi_star = {
			solar_system = {
				every_system_planet = {
					set_surveyed = {
						surveyed = yes
						surveyor = root
					}
				}
			}
		}
	}
	
	option = {
		name = "ag_zeta_crisis.2013.a"
	}
}

# on_custom_diplomacy, Diplomatic event for Psi Installation Defensive System when it is neutral to the player
country_event = {
	id = ag_zeta_crisis.2021
	title = "ag_zeta_crisis.2021.name"
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.a.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.b.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.c.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.d.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.e.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.f.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.g.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.h.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.i.desc"
	}
	desc = {
		trigger = { always = yes }
		text = "ag_zeta_crisis.2021.j.desc"
	}
	desc = {
		trigger = {
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value < equivalent
			}
		}
		text = "ag_zeta_crisis.2021.k.desc"
	}
	desc = {
		trigger = {
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value < equivalent
			}
		}
		text = "ag_zeta_crisis.2021.l.desc"
	}
	desc = {
		trigger = {
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value >= equivalent
			}
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value < overwhelming
			}
		}
		text = "ag_zeta_crisis.2021.m.desc"
	}
	desc = {
		trigger = {
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value >= equivalent
			}
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value < overwhelming
			}
		}
		text = "ag_zeta_crisis.2021.n.desc"
	}
	desc = {
		trigger = {
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value >= overwhelming
			}
		}
		text = "ag_zeta_crisis.2021.o.desc"
	}
	desc = {
		trigger = {
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value >= overwhelming
			}
		}
		text = "ag_zeta_crisis.2021.p.desc"
	}
	desc = {
		trigger = {
			relative_power = {
				who = event_target:ag_zeta_crisis_country
				category = fleet
				value >= overwhelming
			}
			NOT = {
				has_country_flag = ag_killed_zeta_crisis_starbase
			}
		}
		text = "ag_zeta_crisis.2021.q.desc"
	}
	desc = {
		trigger = {
			OR = {
				has_ethic = ethic_pacifist
				has_ethic = ethic_fanatic_pacifist
			}
		}
		text = "ag_zeta_crisis.2021.r.desc"
	}
	desc = {
		trigger = {
			OR = {
				has_country_flag = synthetic_empire
				has_authority = auth_machine_intelligence
			}
		}
		text = "ag_zeta_crisis.2021.s.desc"
	}
	desc = {
		trigger = {
			event_target:ag_ancient_psi_guardian_country = {
				any_controlled_ship = {
					exists = solar_system
					solar_system = {
						exists = space_owner
						space_owner = {
							is_same_value = root
						}
					}
				}
			}
		}
		text = "ag_zeta_crisis.2021.t.desc"
	}
	desc = {
		trigger = {
			event_target:ag_ancient_psi_guardian_country = {
				any_controlled_ship = {
					exists = solar_system
					solar_system = {
						exists = space_owner
						space_owner = {
							is_same_value = root
						}
					}
				}
			}
		}
		text = "ag_zeta_crisis.2021.u.desc"
	}
	desc = {
		trigger = {
			event_target:ag_ancient_psi_guardian_country = {
				any_controlled_ship = {
					exists = solar_system
					solar_system = {
						exists = space_owner
						space_owner = {
							is_same_value = root
						}
					}
				}
			}
		}
		text = "ag_zeta_crisis.2021.v.desc"
	}
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes
	
	trigger = {
		from = { is_same_value = event_target:ag_ancient_psi_guardian_country }
		NOR = {
			has_country_flag = ag_ancient_psi_guardian_country_diplomacy_engaged
			is_hostile = event_target:ag_ancient_psi_guardian_country
		}
	}

	immediate = { set_country_flag = ag_ancient_psi_guardian_country_diplomacy_engaged }
	after = { hidden_effect = { remove_country_flag = ag_ancient_psi_guardian_country_diplomacy_engaged } }
	
	option = {
		name = ag_zeta_crisis.2021.a
		is_dialog_only = yes
		response_text = ag_zeta_crisis.2021.a.response
	}
	option = {
		name = ag_zeta_crisis.2021.b
		is_dialog_only = yes
		response_text = ag_zeta_crisis.2021.b.response
	}
	option = {
		name = ag_zeta_crisis.2021.c
		is_dialog_only = yes
		response_text = ag_zeta_crisis.2021.c.response
	}
	option = {
		name = ag_zeta_crisis.2021.d
		trigger = {
			has_valid_civic = civic_fanatic_purifiers
		}
		is_dialog_only = yes
		response_text = ag_zeta_crisis.2021.d.response
	}
	option = {
		name = ag_zeta_crisis.2021.e
		trigger = {
			has_valid_civic = civic_hive_devouring_swarm
		}
		is_dialog_only = yes
		response_text = ag_zeta_crisis.2021.e.response
	}
	option = {
		name = ag_zeta_crisis.2021.f
		trigger = {
			has_valid_civic = civic_machine_terminator
		}
		is_dialog_only = yes
		response_text = ag_zeta_crisis.2021.f.response
	}
	option = {
		name = ag_zeta_crisis.2021.g
		response_text = ag_zeta_crisis.2021.g.response
	}
}

# on_custom_diplomacy, Diplomatic event for Psi Installation Defensive System when it is hostile to the player
country_event = {
	id = ag_zeta_crisis.2022
	title = "ag_zeta_crisis.2022.name"
	desc = "ag_zeta_crisis.2022.a.desc"
	desc = "ag_zeta_crisis.2022.b.desc"
	desc = "ag_zeta_crisis.2022.c.desc"
	desc = "ag_zeta_crisis.2022.d.desc"
	desc = "ag_zeta_crisis.2022.e.desc"
	
	is_triggered_only = yes

	trigger = {
		from = { is_same_value = event_target:ag_ancient_psi_guardian_country }
		is_hostile = event_target:ag_ancient_psi_guardian_country
		NOT = { has_country_flag = ag_ancient_psi_guardian_country_diplomacy_engaged }
	}
	
	diplomatic = yes
	force_open = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}

	immediate = { set_country_flag = ag_ancient_psi_guardian_country_diplomacy_engaged }
	after = { hidden_effect = { remove_country_flag = ag_ancient_psi_guardian_country_diplomacy_engaged } }
	
	option = {
		name = "ag_zeta_crisis.2022.a"
		response_text = "ag_zeta_crisis.2022.a.response"
	}
	option = {
		name = "ag_zeta_crisis.2022.b"
		response_text = "ag_zeta_crisis.2022.b.response"
	}
	option = {
		name = "ag_zeta_crisis.2022.c"
		default_hide_option = yes
		response_text = "ag_zeta_crisis.2022.c.response"
	}
}

# Psi Installation Defensive System's reinforcement cycle
country_event = {
	id = ag_zeta_crisis.203
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		NOR = {
			has_global_flag = ag_zeta_crisis_ended
			has_global_flag = ag_ancient_psi_guardian_departed
		}
		is_country_type = ag_ancient_psi_guardian
		any_country = { is_country_type = ag_zeta_crisis_country }
	}
	
	immediate = {
		event_target:ag_ancient_psi_guardian_country = {
			every_controlled_fleet = {
				limit = {
					is_in_combat = no
					OR = {
						has_fleet_flag = ag_ancient_psi_guardian_home_fleet
						has_fleet_flag = ag_ancient_psi_guardian_fleet
					}
				}
				set_variable = { which = ag_current_psi_titans value = 0 }
				set_variable = { which = ag_current_psi_battleships value = 0 }
				set_variable = { which = ag_current_psi_destroyers value = 0 }
				every_controlled_ship = { switch = {
					trigger = is_ship_size
					ag_zeta_titan = { prev = { change_variable = { which = ag_current_psi_titans value = 1 } } }
					ag_zeta_titan_psi = { prev = { change_variable = { which = ag_current_psi_titans value = 1 } } }
					ag_zeta_battleship = { prev = { change_variable = { which = ag_current_psi_battleships value = 1 } } }
					ag_zeta_battleship_psi = { prev = { change_variable = { which = ag_current_psi_battleships value = 1 } } }
					ag_zeta_destroyer = { prev = { change_variable = { which = ag_current_psi_destroyers value = 1 } } }
					ag_zeta_destroyer_psi = { prev = { change_variable = { which = ag_current_psi_destroyers value = 1 } } }
				} }
				every_controlled_ship = {
					limit = { OR = { is_ship_size = ag_zeta_titan is_ship_size = ag_zeta_titan_psi } }
					fleet = {
						if = {
							limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
							if = {
								limit = { check_variable = { which = ag_current_psi_titans value < ag_num_psi_titans } }
								random_list = {
									50 = { }
									50 = { ag_psi_titan_spawn = { ag_is_player = no ag_owner = event_target:ag_ancient_psi_guardian_country } }
								}
							}
						}
						if = {
							limit = { check_variable = { which = ag_current_psi_battleships value < ag_num_psi_battleships } }
							ag_psi_battleship_spawn = yes
							change_variable = { which = ag_current_psi_battleships value = 1 }
						}
						if = {
							limit = { check_variable = { which = ag_current_psi_destroyers value < ag_num_psi_destroyers } }
							while = {
								count = 2
								ag_psi_destroyer_spawn = yes
								change_variable = { which = ag_current_psi_destroyers value = 1 }
							}
						}
					}
				}
			}
		}
		if = {
			limit = { count_controlled_ship = { count > 125 } }
			country_event = { id = ag_zeta_crisis.203 days = 750 }
		}
		else = {
			ag_spawn_psi_area_reinforcement = {
				ag_fleet_owner = event_target:ag_ancient_psi_guardian_country
				ag_fleet_location = event_target:ag_ancient_psi_machine_world
			}
			if = {
				limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
				random_list = {
					60 = { }
					30 = {
						ag_spawn_psi_area_reinforcement = {
							ag_fleet_owner = event_target:ag_ancient_psi_guardian_country
							ag_fleet_location = event_target:ag_ancient_psi_machine_world
						}
					}
					10 = {
						while = {
							count = 2
							ag_spawn_psi_area_reinforcement = {
								ag_fleet_owner = event_target:ag_ancient_psi_guardian_country
								ag_fleet_location = event_target:ag_ancient_psi_machine_world
							}
						}
					}
				}
			}
			country_event = { id = ag_zeta_crisis.203 days = 750 }
		}
	}
}

# on_ship_destroyed_perp, Psi Installation Defensive System's counter for Shroud Invaders' ship killed by others
country_event = {
	id = ag_zeta_crisis.204
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		has_global_flag = ag_ancient_psi_guardian_appeared
		NOR = {
			has_global_flag = ag_zeta_crisis_ended
			has_global_flag = ag_ancient_psi_guardian_departed
			has_country_flag = ag_ancient_psi_guardian_fleet_gift
		}
		is_country_type = default
		any_country = { is_country_type = ag_ancient_psi_guardian }
		NOT = { is_hostile = event_target:ag_ancient_psi_guardian_country }
		from = { is_country_type = ag_zeta_crisis_country }
	}
	
	immediate = {
		change_variable = { 
			which = "ag_zeta_crisis_ship_kills" 
			value = 1
		}
		if = {
			limit = {
				check_variable = {
					which = "ag_zeta_crisis_ship_kills" 
					value >= 125
				}
				any_country = {
					is_country_type = ag_ancient_psi_guardian
					count_controlled_ship = {
						count > 50
					}
				}
			}
			set_country_flag = ag_ancient_psi_guardian_fleet_gift
			country_event = { id = ag_zeta_crisis.2041 days = 10 random = 30 }
		}
	}
}

# Psi Installation Defensive System give player some ancient ships
country_event = {
	id = ag_zeta_crisis.2041
	title = "ag_zeta_crisis.2041.name"
	desc = "ag_zeta_crisis.2041.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.2041.a"
		custom_tooltip = "ag_zeta_crisis.2041.a.tooltip"
		if = {
			limit = { exists = event_target:ag_kuat_invasion_country }
			custom_tooltip = "ag_zeta_crisis.2041.a.1.tooltip"
		}
		response_text = "ag_zeta_crisis.2041.a.response"
		hidden_effect = {
			ag_spawn_psi_area_reinforcement = {
				ag_is_player = yes
				ag_fleet_owner = root
				ag_fleet_location = root.capital_scope
			}
			last_created_fleet = { random_controlled_ship = {
				limit = { is_ship_size = ag_zeta_titan }
				set_ship_flag = ag_zeta_titan_player
			} }
		}
	}
	option = {
		name = "ag_zeta_crisis.2041.b"
		response_text = "ag_zeta_crisis.2041.b.response"
	}
}

# Psi Installation Defensive System recall ships if its hostile to player
country_event = {
	id = ag_zeta_crisis.2042
	title = "ag_zeta_crisis.2042.name"
	desc = "ag_zeta_crisis.2042.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	mean_time_to_happen = { months = 1 }
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		has_global_flag = ag_ancient_psi_guardian_appeared
		NOR = {
			has_global_flag = ag_zeta_crisis_ended
			has_global_flag = ag_ancient_psi_guardian_departed
		}
		any_country = {
			is_country_type = ag_ancient_psi_guardian
			NOT = { is_same_value = root }
			is_hostile = root
		}
		any_controlled_fleet = { has_fleet_flag = ag_ancient_psi_guardian_fleet }
	}
	
	immediate = {
		every_controlled_fleet = {
			limit = { has_fleet_flag = ag_ancient_psi_guardian_fleet }
			if = { limit = { exists = leader } leader = { unassign_leader = this } }
			set_owner = event_target:ag_ancient_psi_guardian_country
			set_location = event_target:ag_ancient_psi_machine_world
		}
	}
	
	option = { name = "ag_zeta_crisis.2042.a" }
}

# on_entering_battle, Psi Installation Defensive System recall ships if player attacked unauthorized targets
country_event = {
	id = ag_zeta_crisis.2043
	title = "ag_zeta_crisis.2043.name"
	desc = "ag_zeta_crisis.2043.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		has_global_flag = ag_ancient_psi_guardian_appeared
		NOR = {
			has_global_flag = ag_zeta_crisis_ended
			has_global_flag = ag_ancient_psi_guardian_departed
		}
		any_country = {
			is_country_type = ag_ancient_psi_guardian
			NOT = { is_same_value = root }
		}
		fromfrom = { has_fleet_flag = ag_ancient_psi_guardian_fleet }
		from = { ag_psi_area_support_target = no }
	}
	
	immediate = {
		every_controlled_fleet = {
			limit = { has_fleet_flag = ag_ancient_psi_guardian_fleet }
			if = { limit = { exists = leader } leader = { unassign_leader = this } }
			set_owner = event_target:ag_ancient_psi_guardian_country
			set_location = event_target:ag_ancient_psi_machine_world
		}
	}
	
	option = { name = "ag_zeta_crisis.2043.a" }
}

# on_planet_bombarded, Hidden, Psi Installation Defensive System recall ships if player bombarded unauthorized planets
planet_event = {
	id = ag_zeta_crisis.2044
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_stage_3
		has_global_flag = ag_ancient_psi_guardian_appeared
		NOR = {
			has_global_flag = ag_zeta_crisis_ended
			has_global_flag = ag_ancient_psi_guardian_departed
		}
		exists = controller
		controller = { ag_psi_area_support_target = no }
		has_orbital_bombardment = yes
		any_country = {
			is_country_type = ag_ancient_psi_guardian
			NOT = { is_same_value = root.from }
		}
		from = { any_controlled_fleet = {
			has_fleet_flag = ag_ancient_psi_guardian_fleet
			exists = orbit
			orbit = { is_same_value = root }
		} }
	}
	
	immediate = { from = { country_event = { id = ag_zeta_crisis.2045 } } }
}

# Notification, Psi Installation Defensive System recall ships if player bombarded unauthorized planets
country_event = {
	id = ag_zeta_crisis.2045
	title = "ag_zeta_crisis.2045.name"
	desc = "ag_zeta_crisis.2045.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes
	
	immediate = {
		every_controlled_fleet = {
			limit = { has_fleet_flag = ag_ancient_psi_guardian_fleet }
			if = { limit = { exists = leader } leader = { unassign_leader = this } }
			set_owner = event_target:ag_ancient_psi_guardian_country
			set_location = event_target:ag_ancient_psi_machine_world
		}
	}
	
	option = { name = "ag_zeta_crisis.2045.a" }
}

# on_planet_bombarded, Psi Installation Defensive System destroyed
planet_event = {
	id = ag_zeta_crisis.205
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		planet_devastation >= 100
		is_same_value = event_target:ag_ancient_psi_machine_world
		exists = owner
		owner = {
			is_country_type = ag_ancient_psi_guardian
			is_same_value = event_target:ag_ancient_psi_guardian_country
		}
		NOR = {
			has_global_flag = ag_ancient_psi_guardian_departed
			has_global_flag = ag_ancient_psi_guardian_destroyed
		}
	}
	
	immediate = {
		set_global_flag = ag_ancient_psi_guardian_destroyed
		from = { save_global_event_target_as = ag_psi_guardian_killer }
		add_planet_devastation = -100
		destroy_colony = yes
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
		if = {
			limit = { from = { NOT = { is_country_type = ag_zeta_crisis_country } } }
			ag_destroy_habitable_ringworld = yes
			add_deposit = ag_ancient_psi_guardian_killed_deposit
		}
		else = {
			ag_destroy_habitable_ringworld_psionics = yes
			set_owner = event_target:ag_zeta_crisis_country
			set_controller = event_target:ag_zeta_crisis_country
			set_colony_type = col_ag_zeta_crisis
			set_planet_flag = ag_zeta_crisis_controlled_world
			every_country = {
				limit = { has_event_chain = "ag_zeta_crisis_chain" }
				add_event_chain_counter = {
					event_chain = "ag_zeta_crisis_chain"
					counter = "ag_zeta_crisis_psionic_worlds"
					amount = 1
				}
			}
		}
		solar_system = { ag_destroy_megastructure = yes }
		event_target:ag_ancient_psi_guardian_country = { destroy_country = yes }
		every_country = {
			limit = { NOT = { is_country_type = ag_zeta_crisis_country } }
			country_event = { id = ag_zeta_crisis.2051 }
		}
	}
}

# Notification, Psi Installation Defensive System destroyed
country_event = {
	id = ag_zeta_crisis.2051
	title = "ag_zeta_crisis.2051.name"
	desc = "ag_zeta_crisis.2051.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_city_ruins_room }
	show_sound = event_ghost_town
	location = event_target:ag_ancient_psi_machine_world

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.2051.a"
		trigger = { NOT = { is_same_value = event_target:ag_psi_guardian_killer } }
	}
	option = {
		name = "ag_zeta_crisis.2051.b"
		trigger = { is_same_value = event_target:ag_psi_guardian_killer }
	}
}

# Psi Installation Defensive System departed
country_event = {
	id = ag_zeta_crisis.206
	hide_window = yes
	
	mean_time_to_happen = { months = 24 }
	
	trigger = {
		has_global_flag = ag_zeta_crisis_ended
		is_country_type = ag_ancient_psi_guardian
		NOR = {
			has_global_flag = ag_ancient_psi_guardian_departed
			has_global_flag = ag_ancient_psi_guardian_destroyed
		}
	}
	
	immediate = {
		set_global_flag = ag_ancient_psi_guardian_departed
		every_country = {
			limit = { NOT = { is_same_value = root } }
			country_event = { id = ag_zeta_crisis.2061 }
			if = {
				limit = { any_controlled_fleet = { has_fleet_flag = ag_ancient_psi_guardian_fleet } }
				set_country_flag = ag_ancient_psi_guardian_recalled_fleet
				every_controlled_fleet = {
					limit = { has_fleet_flag = ag_ancient_psi_guardian_fleet }
					if = { limit = { exists = leader } leader = { unassign_leader = this } }
					delete_fleet = this
				}
			}
		}
		every_country = {
			limit = { is_country_type = ag_ancient_psi_guardian }
			every_owned_pop = { kill_pop = yes }
			every_controlled_fleet = { delete_fleet = this }
			event_target:ag_ancient_psi_machine_world = {
				solar_system = {
					random_system_planet = { limit = { is_star = yes } ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet } }
					ag_spawn_ancient_construction_section = yes
				}
				if = { limit = { planet_devastation > 0 } add_planet_devastation = -100 }
				destroy_colony = yes
				ag_change_pc = { ag_planet_class = pc_ag_ringworld_gaia }
				ag_set_ancient_ringworld = {
					ag_color = violet
					ag_type = habitable
					ag_surface_type = gaia
					ag_generate_ruins = yes
				}
				reset_planet = yes
			}
			destroy_country = yes
		}
	}
}

# Notification, Psi Installation Defensive System departed
country_event = {
	id = ag_zeta_crisis.2061
	title = "ag_zeta_crisis.2061.name"
	desc = "ag_zeta_crisis.2061.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ringworld_room }
	show_sound = event_ghost_town
	location = event_target:ag_ancient_psi_machine_world

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.2061.a"
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = ag_ancient_psi_guardian_recalled_fleet } }
				country_event = { id = ag_zeta_crisis.2062 }
			}
			else = {
				remove_country_flag = ag_ancient_psi_guardian_recalled_fleet
				country_event = { id = ag_zeta_crisis.2063 }
			}
		}
	}
}

# Psi Installation Defensive System sends message when it departed
country_event = {
	id = ag_zeta_crisis.2062
	title = "ag_zeta_crisis.2062.name"
	desc = "ag_zeta_crisis.2062.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.2062.a"
	}
}

# Psi Installation Defensive System sends message when it departed, recalls ships version
country_event = {
	id = ag_zeta_crisis.2063
	title = "ag_zeta_crisis.2063.name"
	desc = "ag_zeta_crisis.2063.desc"
	
	diplomatic = yes
	custom_gui = "ag_ancient_event_diplomacy_window"
	custom_gui_option = "ag_ancient_event_diplomacy_option"
	
	picture_event_data = {
		room = ag_ancient_ai_red_room
		portrait = ag_ancient_ai_red
	}
	
	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.2063.a"
	}
}

# on_colonization_started, Colonize shrouded planet.
planet_event = {
	id = ag_zeta_crisis.300
	title = "ag_zeta_crisis.300.name"
	desc = "ag_zeta_crisis.300.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_city_ruins_room }
	show_sound = event_wind_ruins
	fire_only_once = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = ag_zeta_crisis_ended
		has_planet_flag = ag_zeta_shrouded_planet
	}
	
	option = { name = "ag_zeta_crisis.300.a" }
}

# on_colonized, Create Relic archaeology site
planet_event = {
	id = ag_zeta_crisis.301
	title = "ag_zeta_crisis.301.name"
	desc = "ag_zeta_crisis.301.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_city_ruins_room }
	show_sound = event_wind_ruins
	fire_only_once = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = ag_zeta_crisis_ended
		has_planet_flag = ag_zeta_shrouded_planet
	}
	immediate = {
		while = {
			count = 8
			random_list = { 50 = { } 50 = { add_deposit = ag_ancient_ruins } }
			reroll_random = yes
		}
	}
	
	option = {
		name = "ag_zeta_crisis.301.a"
		add_deposit = ag_zeta_crisis_archaeological_dig
		create_archaeological_site = ag_ancient_zeta_crisis_relic_site
		hidden_effect = { owner = { set_country_flag = ag_ancient_zeta_crisis_relic_site_discovered } }
	}
	option = {
		name = "ag_zeta_crisis.301.c"
		owner = { add_resource = { influence = @ag_end_event_influence_medium } }
	}
}

# Archeology Site: Buried Structure
# Stage 1
fleet_event = {
	id = ag_zeta_crisis.302
	title = "ag_zeta_crisis.302.name"
	desc = "ag_zeta_crisis.302.desc"
	picture = GFX_evt_archaeology_camp
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no } }
	option = { name = "ag_zeta_crisis.302.a" }
}
# Stage 2
fleet_event = {
	id = ag_zeta_crisis.303
	title = "ag_zeta_crisis.303.name"
	desc = "ag_zeta_crisis.303.desc"
	picture = GFX_evt_in_the_dark
	show_sound = event_dig_site
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no } }
	option = { name = "ag_zeta_crisis.303.a" }
}
# Stage 3
fleet_event = {
	id = ag_zeta_crisis.304
	title = "ag_zeta_crisis.304.name"
	desc = "ag_zeta_crisis.304.desc"
	picture = GFX_evt_huge_monument
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no } }
	option = {
		name = "ag_zeta_crisis.304.a"
		small_artifact_reward = yes
	}
}
# Stage 4
fleet_event = {
	id = ag_zeta_crisis.305
	title = "ag_zeta_crisis.305.name"
	desc = "ag_zeta_crisis.305.desc"
	picture = GFX_evt_society_cache
	show_sound = event_finding_loot
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no } }
	option = {
		name = "ag_zeta_crisis.305.a"
		small_artifact_reward = yes
	}
}
# Stage 5
fleet_event = {
	id = ag_zeta_crisis.306
	title = "ag_zeta_crisis.306.name"
	desc = "ag_zeta_crisis.306.desc"
	picture = GFX_evt_shroudwalker_enclave
	show_sound = event_finding_loot
	archaeology = yes
	is_triggered_only = yes
	immediate = { from = { set_site_progress_locked = yes } }
	after = { from = { set_site_progress_locked = no } }
	option = {
		name = "ag_zeta_crisis.306.a"
		small_artifact_reward = yes
	}
}
# Stage 6, archaeological dig completed
fleet_event = {
	id = ag_zeta_crisis.307
	title = "ag_zeta_crisis.307.name"
	desc = "ag_zeta_crisis.307.desc"
	picture = GFX_evt_ag_ancient_AI
	show_sound = event_mystic_reveal
	archaeology = yes
	is_triggered_only = yes
	immediate = {
		from = { set_site_progress_locked = yes }
		owner = {
			random_list = {
				10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1 } }
				10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 1.5 } }
				10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2 } }
				10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 2.5 } }
				10 = { set_variable = { which = ag_ancient_knowledge_common_var value = 3 } }
			}
			reroll_random = yes
			random_list = {
				10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
				10 = { change_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
				10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.25 } }
				10 = { subtract_variable = { which = ag_ancient_knowledge_common_var value = 0.125 } }
				10 = { }
			}
			reroll_random = yes
		}
	}
	after = {
		# hidden_effect = { owner = { clear_variable = ag_ancient_knowledge_common_var } }
		from = { set_site_progress_locked = no }
	}
	option = {
		name = "ag_zeta_crisis.307.a"
		medium_artifact_reward = yes
		owner = {
			add_relic = ag_zeta_crisis_relic
			ag_add_ancient_knowledge = { ag_value = ag_ancient_knowledge_common_var ag_notification_desc = "" }
		}
		from.planet = { remove_deposit = ag_zeta_crisis_archaeological_dig }
	}
}

# on_jump_drive, Psionic Container detonated when arrived target by jump
ship_event = {
	id = ag_zeta_crisis.311
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		fleet = { has_fleet_flag = ag_psionic_container_active_mode }
		OR = {
			is_ship_size = ag_ancient_zeta_psionic_container
			is_ship_size = ag_ancient_zeta_psionic_container_alt
		}
		OR = {
			has_ship_flag = ag_ancient_psionic_storm_container_player
			has_ship_flag = ag_ancient_psionic_singularity_container_player
		}
	}
	
	immediate = {
		owner = { save_event_target_as = ag_source_country }
		solar_system = { save_event_target_as = ag_target_system }
		ag_zeta_crisis_relic_country_ckeck = yes
		if = {
			limit = {
				solar_system = {
					exists = space_owner
					space_owner = { is_same_value = event_target:ag_source_country }
				}
			}
			owner = { country_event = { id = ag_zeta_crisis.3113 } }
		}
		else_if = {
			limit = {
				solar_system = {
					exists = space_owner
					space_owner = {
						NOT = { is_same_value = event_target:ag_source_country }
						OR = {
							is_country_type = default
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
						NOT = { is_at_war_with = event_target:ag_source_country }
					}
				}
			}
			owner = { country_event = { id = ag_zeta_crisis.3114 } }
		}
		else_if = {
			limit = {
				solar_system = {
					any_ship_in_system = {
						OR = {
							is_ship_size = ag_gamma_station_hostile
							is_ship_size = ag_gamma_station_1
							is_ship_size = ag_gamma_station_small_hostile
							is_ship_size = ag_gamma_station_small_moving_hostile
							is_ship_size = ag_delta_platform_hostile
							is_ship_size = ag_delta_titan_hostile
							is_ship_size = ag_delta_titan_1
							is_ship_size = ag_zeta_military_station_large
							is_ship_size = ag_zeta_military_station_large_psi
						}
					}
				}
			}
			solar_system = {
				random_fleet_in_system = {
					limit = {
						any_controlled_ship = {
							OR = {
								is_ship_size = ag_gamma_station_hostile
								is_ship_size = ag_gamma_station_1
								is_ship_size = ag_gamma_station_small_hostile
								is_ship_size = ag_gamma_station_small_moving_hostile
								is_ship_size = ag_delta_platform_hostile
								is_ship_size = ag_delta_titan_hostile
								is_ship_size = ag_delta_titan_1
								is_ship_size = ag_zeta_military_station_large
								is_ship_size = ag_zeta_military_station_large_psi
							}
						}
					}
					owner = { save_event_target_as = ag_target_country }
				}
			}
			owner = { country_event = { id = ag_zeta_crisis.3115 } }
		}
		else_if = {
			limit = {
				solar_system = {
					OR = {
						any_ship_in_system = {
							OR = {
								is_ship_size = ag_zeta_crisis_psionic_storm
								is_ship_size = ag_zeta_crisis_psionic_singularity
							}
						}
						any_system = {
							OR = {
								has_hyperlane_to = prev
								distance = {
									source = prev
									min_distance >= 0
									max_distance <= 50
									#type = euclidean
									#use_bypasses = no
								}
							}
							any_ship_in_system = {
								OR = {
									is_ship_size = ag_zeta_crisis_psionic_storm
									is_ship_size = ag_zeta_crisis_psionic_singularity
								}
							}
						}
					}
				}
			}
			owner = {
				country_event = { id = ag_zeta_crisis.3116 }
			}
		}
		else_if = {
			limit = { always = yes }
			if = {
				limit = { has_ship_flag = ag_ancient_psionic_storm_container_player }
				solar_system = {
					ag_psionic_storm_system_side_effect = yes
					if = {
						limit = {
							exists = space_owner
							space_owner = {
								ag_is_common_country = yes
							}
						}
						every_country = {
							limit = {
								NOR = {
									is_same_value = root.owner
									is_same_value = prev.space_owner
									is_country_type = fallen_empire
								}
							}
							add_opinion_modifier = {
								modifier = ag_opinion_psionic_storm_destroyed_system
								who = event_target:ag_source_country
							}
						}
						space_owner = {
							if = {
								limit = {
									NOR = {
										has_country_flag = ag_zeta_crisis_3131_marked
										is_same_value = root.owner
									}
								}
								set_timed_country_flag = {
									flag = ag_zeta_crisis_3131_marked
									days = 2
								}
								country_event = { id = ag_zeta_crisis.3131 }
							}
							create_message = {
								type = "PLANET_DESTROYED"
								localization = "ag_system_attacked_by_psionic_storm_desc"
								days = 30
								target = prev
								variable = {
									type = name
									localization = "ag_attacker"
									scope = event_target:ag_source_country
								}
								variable = {
									type = name
									localization = "ag_victim_system"
									scope = prev
								}
							}
							add_opinion_modifier = {
								modifier = ag_opinion_psionic_storm_destroyed_my_system
								who = event_target:ag_source_country
							}
						}
						add_threat = { who = event_target:ag_source_country amount = 10 }
					}
					set_star_flag = ag_zeta_crisis_psionic_storm_system
					random_system_planet = {
						limit = { is_primary_star = yes }
						ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
						create_fleet = {
							name = "NAME_ag_zeta_crisis_psionic_storm_fleet"
							settings = {
								spawn_debris = no
								is_boss = yes
							}
							effect = {
								set_fleet_flag = ag_zeta_psionic_storm_fleet_player
								set_fleet_flag = ag_zeta_psionic_storm_small_player
								set_owner = event_target:ag_zeta_crisis_relic_country
								create_ship = {
									name = "NAME_ag_zeta_crisis_psionic_storm_ship"
									design = "NAME_ag_zeta_crisis_psionic_storm_small"
									prefix = no
									effect = {
										ag_difficulty_bonus = yes
									}
								}
								set_location = { target = prev distance = -1 angle = 0 }
								set_event_locked = yes
								fleet_event = { id = ag_zeta_crisis.312 days = 1080 random = 720 }
							}
						}
					}
					every_system_planet = {
						limit = {
							OR = {
								habitable_planet = yes
								AND = { ag_is_ringworld = yes ag_is_unhabitable_ringworld = no }
								ag_is_habitat = yes
							}
						}
						ag_zeta_crisis_relic_psionic_storm_destroy_planet_effect = yes
					}
					every_country = {
						limit = {
							NOR = {
								is_same_value = event_target:ag_source_country
								has_country_flag = ag_zeta_crisis_3131_marked
							}
						}
						country_event = { id = ag_zeta_crisis.3132 }
					}
					event_target:ag_source_country = {
						country_event = { id = ag_zeta_crisis.3111 }
					}
				}
			}
			else = {
				solar_system = {
					set_star_flag = ag_zeta_crisis_psionic_singularity_system
					random_system_planet = {
						limit = { is_primary_star = yes }
						ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
						create_fleet = {
							name = "NAME_ag_zeta_crisis_psionic_singularity_fleet"
							settings = {
								spawn_debris = no
								is_boss = yes
							}
							effect = {
								set_fleet_flag = ag_zeta_psionic_singularity_fleet_player
								set_fleet_flag = ag_zeta_crisis_psionic_singularity_fleet@event_target:ag_source_country
								set_owner = event_target:ag_zeta_crisis_relic_country
								create_ship = {
									name = "NAME_ag_zeta_crisis_psionic_singularity_ship"
									design = "NAME_ag_zeta_crisis_psionic_singularity"
									prefix = no
									effect = {
										ag_difficulty_bonus = yes
									}
								}
								set_location = { target = prev distance = -1 angle = 0 }
								# fleet_event = { id = ag_zeta_crisis.75 days = 2 random = 3 }
								
								fleet_event = { id = ag_zeta_crisis.314 days = 1800 random = 720 }
							}
						}
					}
					if = {
						limit = {
							exists = space_owner
							space_owner = {
								ag_is_common_country = yes
							}
						}
						space_owner = {
							country_event = { id = ag_zeta_crisis.3151 }
							add_opinion_modifier = {
								modifier = ag_opinion_psionic_singularity_in_my_system
								who = root.owner
							}
						}
					}
					every_country = {
						limit = {
							NOR = {
								is_same_value = event_target:ag_source_country
								is_same_value = prev.space_owner
							}
						}
						country_event = { id = ag_zeta_crisis.3152 }
					}
					event_target:ag_source_country = {
						country_event = { id = ag_zeta_crisis.3112 }
					}
				}
			}
		}
	}
	
	after = {
		delete_ship = this
	}
}

# Detonated successful, Psionic Storm version
country_event = {
	id = ag_zeta_crisis.3111
	title = "ag_zeta_crisis.3111.name"
	desc = "ag_zeta_crisis.3111.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3111.a"
		custom_tooltip = "ag_zeta_crisis.3111.a.tooltip"
	}
}

# Detonated successful, Psionic Singularity version
country_event = {
	id = ag_zeta_crisis.3112
	title = "ag_zeta_crisis.3112.name"
	desc = "ag_zeta_crisis.3112.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3112.a"
		custom_tooltip = "ag_zeta_crisis.3111.a.tooltip"
	}
}

# Detonated failed
# Can't detonate within border
country_event = {
	id = ag_zeta_crisis.3113
	title = "ag_zeta_crisis.3113.name"
	desc = "ag_zeta_crisis.3113.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3113.a"
		custom_tooltip = "ag_zeta_crisis.3113.a.tooltip"
	}
}
# Can't detonate before decleared war
country_event = {
	id = ag_zeta_crisis.3114
	title = "ag_zeta_crisis.3114.name"
	desc = "ag_zeta_crisis.3114.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3114.a"
	}
}
# Can't detonate if high value ancient ships or vanilla crisis' portals/machine planets in system
country_event = {
	id = ag_zeta_crisis.3115
	title = "ag_zeta_crisis.3115.name"
	desc = "ag_zeta_crisis.3115.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3115.a"
	}
}
# Can't detonate if there are already a Psionic Storm or Psionic Singularity in system
country_event = {
	id = ag_zeta_crisis.3116
	title = "ag_zeta_crisis.3116.name"
	desc = "ag_zeta_crisis.3116.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_throne_room }
	show_sound = event_mystic_reveal
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3116.a"
	}
}

# Remove Psionic Storm
fleet_event = {
	id = ag_zeta_crisis.312
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		exists = this
	}
	
	immediate = {
		every_country = {
			country_event = { id = ag_zeta_crisis.3121 }
		}
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
		solar_system = {
			save_event_target_as = ag_zeta_crisis_psionic_storm_system
			remove_star_flag = ag_zeta_crisis_psionic_storm_system
			every_system = {
				limit = {
					NOT = {
						is_same_value = prev
					}
					OR = {
						distance = {
							source = prev
							min_distance >= 0
							max_distance <= 50
							#type = euclidean
							#use_bypasses = no
						}
						has_hyperlane_to = prev
					}
					any_ship_in_system = {
						is_ship_size = ag_zeta_crisis_psionic_storm
						fleet = { has_fleet_flag = ag_zeta_psionic_storm_small_player@prevprevprev }
					}
				}
				remove_star_flag = ag_zeta_crisis_psionic_storm_system
				every_fleet_in_system = {
					limit = {
						has_fleet_flag = ag_zeta_crisis_psionic_storm_fleet
						has_fleet_flag = ag_zeta_psionic_storm_small_player@prevprev
					}
					ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
					delete_fleet = this
				}
			}
		}
		delete_fleet = this
	}
}

# Notification, Psionic Storm Despawned
country_event = {
	id = ag_zeta_crisis.3121
	title = "ag_zeta_crisis.3121.name"
	desc = "ag_zeta_crisis.3121.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_sensor_ping
	location = event_target:ag_zeta_crisis_psionic_storm_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3121.a"
		custom_tooltip = "ag_zeta_crisis.3121.a.tooltip"
	}
}

# Notification, Psionic Storm spawned, for victims
country_event = {
	id = ag_zeta_crisis.3131
	title = "ag_zeta_crisis.3131.name"
	desc = "ag_zeta_crisis.3131.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unspeakable_horror_room }
	show_sound = event_red_alert
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3131.a"
		custom_tooltip = "ag_zeta_crisis.3111.a.tooltip"
	}
}

# Notification, Psionic Storm spawned, for others
country_event = {
	id = ag_zeta_crisis.3132
	title = "ag_zeta_crisis.3132.name"
	desc = "ag_zeta_crisis.3132.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unspeakable_horror_room }
	show_sound = event_yellow_alert
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3132.a"
		custom_tooltip = "ag_zeta_crisis.3111.a.tooltip"
	}
}

# Remove Psionic Singularity
fleet_event = {
	id = ag_zeta_crisis.314
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		exists = this
	}
	
	immediate = {
		solar_system = {
			save_event_target_as = ag_zeta_crisis_psionic_singularity_system
			remove_star_flag = ag_zeta_crisis_psionic_singularity_system
		}
		every_country = {
			country_event = { id = ag_zeta_crisis.3141 }
		}
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
		delete_fleet = this
	}
}

# Notification, Psionic Singularity Despawned
country_event = {
	id = ag_zeta_crisis.3141
	title = "ag_zeta_crisis.3141.name"
	desc = "ag_zeta_crisis.3141.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ag_zeta_crisis_psionic_portal_room }
	show_sound = event_sensor_ping
	location = event_target:ag_zeta_crisis_psionic_singularity_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3141.a"
		custom_tooltip = "ag_zeta_crisis.3141.a.tooltip"
	}
}

# Notification, Psionic Singularity spawned, for victims
country_event = {
	id = ag_zeta_crisis.3151
	title = "ag_zeta_crisis.3151.name"
	desc = "ag_zeta_crisis.3151.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unspeakable_horror_room }
	show_sound = event_red_alert
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3151.a"
	}
}

# Notification, Psionic Singularity spawned, for others
country_event = {
	id = ag_zeta_crisis.3152
	title = "ag_zeta_crisis.3152.name"
	desc = "ag_zeta_crisis.3152.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unspeakable_horror_room }
	show_sound = event_yellow_alert
	location = event_target:ag_target_system

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3152.a"
	}
	
}

# on_ship_destroyed_victim, Psionic Singularity exploded if it was killed
country_event = {
	id = ag_zeta_crisis.316
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		fromfrom = {
			is_ship_size = ag_zeta_crisis_psionic_singularity
			fleet = {
				has_fleet_flag = ag_zeta_psionic_singularity_fleet_player
			}
		}
	}
	
	immediate = {
		fromfrom = {
			solar_system = {
				save_event_target_as = ag_zeta_crisis_psionic_storm_system
			}
			random_country = {
				limit = {
					prev = {
						has_fleet_flag = ag_zeta_crisis_psionic_singularity_fleet@prev
					}
				}
				save_event_target_as = ag_source_country
			}
		}
		every_country = {
			country_event = { id = ag_zeta_crisis.3161 }
		}
		fromfrom.solar_system = {
			ag_psionic_storm_system_side_effect = yes
			if = {
				limit = {
					exists = space_owner
					space_owner = {
						ag_is_common_country = yes
					}
				}
				every_country = {
					limit = {
						NOR = {
							is_same_value = event_target:ag_source_country
							is_same_value = prev.space_owner
							is_country_type = fallen_empire
						}
					}
					add_opinion_modifier = {
						modifier = ag_opinion_psionic_storm_destroyed_system
						who = event_target:ag_source_country
					}
				}
				space_owner = {
					country_event = { id = ag_zeta_crisis.3131 }
					if = {
						limit = {
							NOT = {
								has_country_flag = ag_zeta_crisis_3131_marked
							}
						}
						set_timed_country_flag = {
							flag = ag_zeta_crisis_3131_marked
							days = 2
						}
					}
					create_message = {
						type = "PLANET_DESTROYED"
						localization = "ag_system_attacked_by_psionic_storm_desc"
						days = 30
						target = prev
						variable = {
							type = name
							localization = "ag_attacker"
							scope = event_target:ag_source_country
						}
						variable = {
							type = name
							localization = "ag_victim_system"
							scope = prev
						}
					}
					add_opinion_modifier = {
						modifier = ag_opinion_psionic_storm_destroyed_my_system
						who = event_target:ag_source_country
					}
					#add_static_war_exhaustion = {
					#	attacker = event_target:ag_source_country
					#	location = fromfrom.solar_system
					#	value_for_planet_destruction = 2.0
					#}
				}
				add_threat = { who = event_target:ag_source_country amount = 10 }
			}
			every_fleet_in_system = {
				limit = { owner = { NOT = { is_country_type = ag_zeta_crisis_relic_country } } }
				ag_psionic_singularity_explode_fleet_effect = yes
			}
			set_star_flag = ag_zeta_crisis_psionic_storm_system
			random_system_planet = {
				limit = {
					is_primary_star = yes
				}
				ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
				create_fleet = {
					name = "NAME_ag_zeta_crisis_psionic_storm_fleet"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_fleet_flag = ag_zeta_psionic_storm_fleet_player
						set_fleet_flag = ag_zeta_psionic_storm_small_player
						set_owner = event_target:ag_zeta_crisis_relic_country
						create_ship = {
							name = "NAME_ag_zeta_crisis_psionic_storm_ship"
							design = "NAME_ag_zeta_crisis_psionic_storm_small"
							prefix = no
							effect = {
								ag_difficulty_bonus = yes
							}
						}
						set_location = { target = prev distance = -1 angle = 0 }
						set_event_locked = yes
						fleet_event = { id = ag_zeta_crisis.3162 days = 1080 random = 720 }
					}
				}
			}
			every_system_planet = {
				limit = {
					OR = {
						habitable_planet = yes
						AND = { ag_is_ringworld = yes ag_is_unhabitable_ringworld = no }
						ag_is_habitat = yes
						AND = {
							is_colony = yes
							num_pops > 0
						}
						is_under_colonization = yes
					}
				}
				ag_zeta_crisis_relic_psionic_storm_destroy_planet_effect = yes
			}
		}
	}
}

# Notification for Psionic Singularity exploded
country_event = {
	id = ag_zeta_crisis.3161
	title = "ag_zeta_crisis.3161.name"
	desc = "ag_zeta_crisis.3161.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unspeakable_horror_room }
	show_sound = event_red_alert

	is_triggered_only = yes
	
	option = {
		name = "ag_zeta_crisis.3161.a"
	}
}

# Psionic Storm caused by the explosion of Psionic Singularity despawned
fleet_event = {
	id = ag_zeta_crisis.3162
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		exists = this
	}
	
	immediate = {
		solar_system = {
			save_event_target_as = ag_zeta_crisis_psionic_storm_system
		}
		every_country = {
			country_event = { id = ag_zeta_crisis.3121 }
		}
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
		delete_fleet = this
	}
}

# on_ship_destroyed_victim, Psionic Container destroyed, spawn some hostile psionic entities
country_event = {
	id = ag_zeta_crisis.317
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		fromfrom = {
			OR = {
				is_ship_size = ag_ancient_zeta_psionic_container
				is_ship_size = ag_ancient_zeta_psionic_container_alt
			}
		}
	}
	
	immediate = {
		if = {
			limit = { fromfrom.fleet = { NOT = { has_fleet_flag = ag_psionic_container_active_mode } } }
			random_list = {
				50 = { }
				50 = {
					save_event_target_as = ag_source_country
					country_event = { id = ag_zeta_crisis.3171 }
					fromfrom = {
						ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
						solar_system = {
							every_fleet_in_system = {
								destroy_fleet = this
							}
							ag_zeta_crisis_relic_country_ckeck = yes
							random_system_planet = {
								limit = { is_primary_star = yes }
								while = {
									count = 5
									random_list = {
										25 = {
										}
										15 = {
											create_fleet = {
												name = "NAME_ag_zeta_crisis_avatar_fleet"
												settings = {
													spawn_debris = no
												}
												effect = {
													set_owner = event_target:ag_zeta_crisis_relic_country
													ag_zeta_crisis_avatar_t1_spawn = yes
													set_location = { target = prev distance = 0 angle = random }
													set_fleet_stance = aggressive
													set_aggro_range = 1000
													set_aggro_range_measure_from = self
													
													fleet_event = { id = ag_zeta_crisis.76 days = 2 random = 3 }
													ag_delayed_destroy_fleet = { ag_days = 360 ag_random = 180 }
												}
											}
										}
										15 = {
											create_fleet = {
												name = "NAME_ag_zeta_crisis_avatar_fleet"
												settings = {
													spawn_debris = no
												}
												effect = {
													set_owner = event_target:ag_zeta_crisis_relic_country
													ag_zeta_crisis_avatar_t2_spawn = yes
													set_location = { target = prev distance = 0 angle = random }
													set_fleet_stance = aggressive
													set_aggro_range = 1000
													set_aggro_range_measure_from = self
													
													fleet_event = { id = ag_zeta_crisis.76 days = 2 random = 3 }
													ag_delayed_destroy_fleet = { ag_days = 360 ag_random = 180 }
												}
											}
										}
										15 = {
											create_fleet = {
												name = "NAME_ag_zeta_crisis_avatar_fleet"
												settings = {
													spawn_debris = no
												}
												effect = {
													set_owner = event_target:ag_zeta_crisis_relic_country
													set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
													ag_zeta_crisis_avatar_t3_spawn = yes
													set_location = { target = prev distance = 0 angle = random }
													set_fleet_stance = aggressive
													set_aggro_range = 1000
													set_aggro_range_measure_from = self
													
													fleet_event = { id = ag_zeta_crisis.76 days = 2 random = 3 }
													ag_delayed_destroy_fleet = { ag_days = 360 ag_random = 180 }
												}
											}
										}
										15 = {
											create_fleet = {
												name = "NAME_ag_zeta_crisis_avatar_fleet"
												settings = {
													spawn_debris = no
												}
												effect = {
													set_owner = event_target:ag_zeta_crisis_relic_country
													set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
													ag_zeta_crisis_avatar_t4_spawn = yes
													set_location = { target = prev distance = 0 angle = random }
													set_fleet_stance = aggressive
													set_aggro_range = 1000
													set_aggro_range_measure_from = self
													
													fleet_event = { id = ag_zeta_crisis.76 days = 2 random = 3 }
													ag_delayed_destroy_fleet = { ag_days = 360 ag_random = 180 }
												}
											}
										}
										15 = {
											create_fleet = {
												name = "NAME_ag_zeta_crisis_avatar_fleet"
												settings = {
													spawn_debris = no
												}
												effect = {
													set_owner = event_target:ag_zeta_crisis_relic_country
													set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
													ag_zeta_crisis_avatar_t5_spawn = yes
													set_location = { target = prev distance = 0 angle = random }
													set_fleet_stance = aggressive
													set_aggro_range = 1000
													set_aggro_range_measure_from = self
													
													fleet_event = { id = ag_zeta_crisis.76 days = 2 random = 3 }
													ag_delayed_destroy_fleet = { ag_days = 360 ag_random = 180 }
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		else = { fromfrom = { ship_event = { id = ag_zeta_crisis.311 } } }
	}
}

# Notification for hostile psionic entities spawned when Psionic Container destroyed
country_event = {
	id = ag_zeta_crisis.3171
	title = "ag_zeta_crisis.3171.name"
	desc = "ag_zeta_crisis.3171.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_ship_in_orbit_room }
	show_sound = event_yellow_alert

	is_triggered_only = yes
	
	option = { name = "ag_zeta_crisis.3171.a" }
}

# on_entering_system_fleet, Fleet takes damage when entering system with a Psionic Storm
fleet_event = {
	id = ag_zeta_crisis.402
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		exists = owner
		owner = { NOR = {
			is_country_type = ag_zeta_crisis_relic_country
			is_country_type = ag_zeta_crisis_country
			is_country_type = ag_zeta_crisis_portal_holder
			is_country_type = extradimensional
			is_country_type = extradimensional_2
			is_country_type = extradimensional_3
			is_country_type = portal_holder
			is_country_type = shroud
			is_country_type = shroud_spirits
		} }
		from = { has_star_flag = ag_zeta_crisis_psionic_storm_system }
	}
	
	immediate = { from = { random_fleet_in_system = {
		limit = { any_controlled_ship = { is_ship_size = ag_zeta_crisis_psionic_storm } }
		random_controlled_ship = {
			limit = { is_ship_size = ag_zeta_crisis_psionic_storm }
			if = {
				limit = { has_component = ag_zeta_crisis_psionic_storm_large_aura }
				prevprev = { every_fleet_in_system = {
					limit = {
						exists = owner
						owner = { NOR = {
							is_country_type = ag_zeta_crisis_relic_country
							is_country_type = ag_zeta_crisis_country
							is_country_type = ag_zeta_crisis_portal_holder
							is_country_type = extradimensional
							is_country_type = extradimensional_2
							is_country_type = extradimensional_3
							is_country_type = portal_holder
							is_country_type = shroud
							is_country_type = shroud_spirits
						} }
					}
					destroy_fleet = this
				} }
			}
			else = { prevprev = { every_fleet_in_system = {
				limit = {
					exists = owner
					owner = { NOR = {
						is_country_type = ag_zeta_crisis_relic_country
						is_country_type = ag_zeta_crisis_country
						is_country_type = ag_zeta_crisis_portal_holder
						is_country_type = extradimensional
						is_country_type = extradimensional_2
						is_country_type = extradimensional_3
						is_country_type = portal_holder
						is_country_type = shroud
						is_country_type = shroud_spirits
					} }
				}
				while = {
					limit = { any_controlled_ship = {
						exists = this
						has_hp > 0
						NOT = { has_ship_flag = ag_zeta_crisis_psionic_storm_damaged }
					} }
					random_controlled_ship = {
						limit = {
							exists = this
							has_hp > 0
							NOT = { has_ship_flag = ag_zeta_crisis_psionic_storm_damaged }
						}
						set_timed_ship_flag = { flag = ag_zeta_crisis_psionic_storm_damaged days = 2 }
						random_list = {
							5 = {
								modifier = {
									factor = 0
									has_global_flag = ag_zeta_crisis_ended
									root.from = { has_star_flag = ag_ancient_zeta_system }
								}
								export_modifier_to_variable = { modifier = ship_hull_damage_mult variable = ag_ship_hull_damage_var }
								multiply_variable = { which = ag_ship_hull_damage_var value = -1 }
								subtract_variable = { which = ag_ship_hull_damage_var value = 1 }
								random_list = {
									50 = { add_modifier = { modifier = "ag_ship_hull_damage_mult_buff" multiplier = ag_ship_hull_damage_var days = 5 } }
									50 = { add_modifier = { modifier = "ag_ship_hull_damage_mult_buff" multiplier = ag_ship_hull_damage_var days = 10 } }
								}
								reroll_random = yes
								clear_variable = ag_ship_hull_damage_var
							}
							25 = {
								remove_modifier = "ag_psionic_storm_ship_debuff_1"
								add_modifier = { modifier = "ag_psionic_storm_ship_debuff_1" days = 11 }
							}
							35 = {
								remove_modifier = "ag_psionic_storm_ship_debuff_2"
								add_modifier = { modifier = "ag_psionic_storm_ship_debuff_2" days = 7 }
							}
							25 = {
								remove_modifier = "ag_psionic_storm_ship_debuff_3"
								add_modifier = { modifier = "ag_psionic_storm_ship_debuff_3" days = 5 }
							}
						}
						reroll_random = yes
					}
				}
			} } }
		}
	} } }
}

# on_ship_disabled, Shroud Invaders' abilities in Calamity Difficulty
ship_event = {
	id = ag_zeta_crisis.411
	hide_window = yes
	is_triggered_only = yes

	trigger = { OR = {
		is_ship_size = ag_zeta_crisis_small_ship
		is_ship_size = ag_zeta_crisis_medium_ship
		is_ship_size = ag_zeta_crisis_large_ship
		is_ship_size = ag_zeta_crisis_support_ship
		is_ship_size = ag_zeta_crisis_special_ship
		is_ship_size = ag_zeta_crisis_construction_ship
		is_ship_size = ag_zeta_crisis_defensive_platform
	} }

	immediate = {
		repair_ship = yes
		set_disabled = no
		ag_subtract_disable_at_health = { ag_disable_type = difficulty }
		ship_event = { id = ag_zeta_crisis.4111 days = 180 random = 90 }
		random_list = {
			50 = { add_modifier = { modifier = ag_zeta_crisis_revive_buff days = -1 } }
			50 = { solar_system = { every_fleet_in_system = {
				limit = { exists = owner owner = { is_hostile = event_target:ag_zeta_crisis_country } }
				every_controlled_ship = {
					random_list = {
						25 = {
							remove_modifier = ag_zeta_crisis_revive_debuff_1
							random_list = {
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_1 days = 30 }
								}
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_1 days = 25 }
								}
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_1 days = 20 }
								}
								20 = { add_modifier = { modifier = ag_zeta_crisis_revive_debuff_1 days = 10 } }
								20 = { add_modifier = { modifier = ag_zeta_crisis_revive_debuff_1 days = 5 } }
							}
							reroll_random = yes
						}
						25 = {
							remove_modifier = ag_zeta_crisis_revive_debuff_2
							random_list = {
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_2 days = 30 }
								}
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_2 days = 25 }
								}
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_2 days = 20 }
								}
								20 = { add_modifier = { modifier = ag_zeta_crisis_revive_debuff_2 days = 10 } }
								20 = { add_modifier = { modifier = ag_zeta_crisis_revive_debuff_2 days = 5 } }
							}
							reroll_random = yes
						}
						25 = {
							remove_modifier = ag_zeta_crisis_revive_debuff_3
							random_list = {
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_3 days = 30 }
								}
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_3 days = 25 }
								}
								20 = {
									modifier = { factor = 0 OR = { ag_is_ancient_ship = yes ag_is_ancient_ship_unlocked = yes } }
									add_modifier = { modifier = ag_zeta_crisis_revive_debuff_3 days = 20 }
								}
								20 = { add_modifier = { modifier = ag_zeta_crisis_revive_debuff_3 days = 10 } }
								20 = { add_modifier = { modifier = ag_zeta_crisis_revive_debuff_3 days = 5 } }
							}
							reroll_random = yes
						}
						2 = {
							modifier = {
								factor = 0
								OR = {
									ag_is_ancient_ship = yes
									ag_is_ancient_ship_unlocked = yes
									ag_is_special_ship = yes
								}
							}
							export_modifier_to_variable = { modifier = ship_hull_damage_mult variable = ag_ship_hull_damage_var }
							multiply_variable = { which = ag_ship_hull_damage_var value = -1 }
							subtract_variable = { which = ag_ship_hull_damage_var value = 1 }
							random_list = {
								10 = { add_modifier = { modifier = "ag_ship_hull_damage_mult_buff" multiplier = ag_ship_hull_damage_var days = 5 } }
								10 = { add_modifier = { modifier = "ag_ship_hull_damage_mult_buff" multiplier = ag_ship_hull_damage_var days = 10 } }
								10 = { add_modifier = { modifier = "ag_ship_hull_damage_mult_buff" multiplier = ag_ship_hull_damage_var days = 15 } }
							}
							reroll_random = yes
							clear_variable = ag_ship_hull_damage_var
						}
						25 = { }
					}
					reroll_random = yes
				}
			} } }
		}
		reroll_random = yes
	}
}
ship_event = {
	id = ag_zeta_crisis.4111
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = {
		if = {
			limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } }
			ag_set_disable_at_health = { ag_value = 0.25 ag_disable_type = difficulty }
		}
		else_if = {
			limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
			ag_set_disable_at_health = { ag_value = 0.5 ag_disable_type = difficulty }
		}
	}
}

# on_entering_battle, debuff for ancient ships
country_event = {
	id = ag_zeta_crisis.412
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } }
		is_country_type = ag_zeta_crisis_country
		fromfromfrom = { any_controlled_ship = {
			ag_is_ancient_ship_alt = yes
			NOT = { has_modifier = "ag_zeta_crisis_to_ancient_debuff" }
		} }
	}
	
	immediate = { fromfromfrom = { every_controlled_ship = {
		limit = {
			ag_is_ancient_ship_alt = yes
			NOT = { has_modifier = "ag_zeta_crisis_to_ancient_debuff" }
		}
		remove_modifier = "ag_zeta_crisis_to_ancient_debuff"
		if = {
			limit = { NOT = { has_modifier = "ag_zeta_crisis_to_ancient_debuff" } }
			add_modifier = { modifier = "ag_zeta_crisis_to_ancient_debuff" days = 30 }
		}
		ship_event = { id = ag_zeta_crisis.413 days = 30 }
	} } }
}
ship_event = {
	id = ag_zeta_crisis.413
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		exists = this
		solar_system = { any_ship_in_system = {
			exists = owner
			owner = { is_country_type = ag_zeta_crisis_country }
		} }
	}
	
	immediate = {
		remove_modifier = "ag_zeta_crisis_to_ancient_debuff"
		if = {
			limit = { NOT = { has_modifier = "ag_zeta_crisis_to_ancient_debuff" } }
			add_modifier = { modifier = "ag_zeta_crisis_to_ancient_debuff" days = 30 }
		}
		ship_event = { id = ag_zeta_crisis.413 days = 30 }
	}
}

# on_ship_built, Building psionic containers
ship_event = {
	id = ag_zeta_crisis.421
	hide_window = yes
	is_triggered_only = yes

	trigger = { OR = {
		is_ship_size = ag_ancient_zeta_psionic_container
		is_ship_size = ag_ancient_zeta_psionic_container_alt
	} }

	immediate = {
		fleet = { set_fleet_flag = ag_ancient_psionic_container_player }
		if = {
			limit = { is_ship_size = ag_ancient_zeta_psionic_container }
			set_ship_flag = ag_ancient_psionic_storm_container_player
		}
		else = { set_ship_flag = ag_ancient_psionic_singularity_container_player }
	}
}

# Merge avaters' fleet
fleet_event = {
	id = ag_zeta_crisis.422
	hide_window = yes
	is_triggered_only = yes
	trigger = { OR = {
		has_fleet_flag = ag_zeta_crisis_assault_fleet
		has_fleet_flag = ag_zeta_crisis_patrol_fleet
		has_fleet_flag = ag_zeta_crisis_protector_fleet
	} }
	immediate = {
		from = { every_fleet_in_system = {
			limit = { exists = this has_fleet_flag = ag_zeta_crisis_avatar_fleet num_ships > 0 }
			every_controlled_ship = {
				limit = { exists = this is_ship_size = ag_zeta_crisis_avatar_t1 }
				random_list = {
					25 = { }
					75 = { root = { ag_zeta_crisis_avatar_t1_spawn = yes } delete_ship = this }
				}
				reroll_random = yes
			}
			every_controlled_ship = {
				limit = { exists = this is_ship_size = ag_zeta_crisis_avatar_t2 }
				random_list = {
					25 = { }
					75 = { root = { ag_zeta_crisis_avatar_t2_spawn = yes } delete_ship = this }
				}
				reroll_random = yes
			}
			every_controlled_ship = {
				limit = { exists = this is_ship_size = ag_zeta_crisis_avatar_t3 }
				random_list = {
					25 = { }
					75 = { root = { ag_zeta_crisis_avatar_t3_spawn = yes } delete_ship = this }
				}
				reroll_random = yes
			}
			every_controlled_ship = {
				limit = { exists = this is_ship_size = ag_zeta_crisis_avatar_t4 }
				random_list = {
					25 = { }
					75 = { root = { ag_zeta_crisis_avatar_t4_spawn = yes } delete_ship = this }
				}
				reroll_random = yes
			}
			every_controlled_ship = {
				limit = { exists = this is_ship_size = ag_zeta_crisis_avatar_t5 }
				random_list = {
					25 = { }
					75 = { root = { ag_zeta_crisis_avatar_t5_spawn = yes } delete_ship = this }
				}
				reroll_random = yes
			}
		} }
	}
}

# Fleet leader's skill
country_event = {
	id = ag_zeta_crisis.431
	hide_window = yes
	trigger = {
		is_country_type = ag_zeta_crisis_country
		is_same_value = event_target:ag_zeta_crisis_country
		fromfrom = { OR = {
			has_fleet_flag = ag_zeta_crisis_leader_8
			has_fleet_flag = ag_zeta_crisis_leader_9
			has_fleet_flag = ag_zeta_crisis_leader_10
			has_fleet_flag = ag_zeta_crisis_leader_11
		} }
	}
	is_triggered_only = yes
	immediate = {
		fromfrom = {
			switch = {
				trigger = has_fleet_flag
				ag_zeta_crisis_leader_8 = {
					root.fromfromfrom = {
						every_controlled_ship = {
							limit = { NAND = {
								has_modifier = ag_zeta_crisis_leader_modifier_08
								has_modifier = ag_zeta_crisis_leader_modifier_08_alt
							} }
							if = {
								limit = { check_modifier_value = { modifier = weapon_type_energy_weapon_damage_mult value > 0 } }
								set_variable = { which = ag_energy_weapon_damage_factor value = 0 }
								export_modifier_to_variable = { modifier = weapon_type_energy_weapon_damage_mult variable = ag_energy_weapon_damage_factor }
								if = {
									limit = { check_variable = { which = ag_energy_weapon_damage_factor value > 0 } }
									add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_08" multiplier = ag_energy_weapon_damage_factor days = 12 }
								}
								clear_variable = ag_energy_weapon_damage_factor
							}
							if = {
								limit = { check_modifier_value = { modifier = weapon_type_energy_weapon_fire_rate_mult value > 0 } }
								set_variable = { which = ag_energy_weapon_fire_rate_factor value = 0 }
								export_modifier_to_variable = { modifier = weapon_type_energy_weapon_fire_rate_mult variable = ag_energy_weapon_fire_rate_factor }
								if = {
									limit = { check_variable = { which = ag_energy_weapon_fire_rate_factor value > 0 } }
									add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_08_alt" multiplier = ag_energy_weapon_fire_rate_factor days = 12 }
								}
								clear_variable = ag_energy_weapon_fire_rate_factor
							}
						}
					}
				}
				ag_zeta_crisis_leader_9 = { if = {
					limit = { NOT = { has_fleet_flag = ag_zeta_crisis_leader_9_cooldown } }
					set_timed_fleet_flag = { flag = ag_zeta_crisis_leader_9_cooldown days = 90 }
					ag_spawn_zeta_crisis_hallucination_fleet = { ag_target = this }
					ag_spawn_zeta_crisis_hallucination_fleet = { ag_target = root.fromfromfrom }
				} }
				ag_zeta_crisis_leader_10 = {
					root.fromfromfrom = {
						set_timed_fleet_flag = { flag = ag_zeta_crisis_leader_10_flaged days = 12 }
						every_controlled_ship = {
							set_variable = { which = ag_weapon_range_factor value = 0 }
							export_modifier_to_variable = { modifier = ship_weapon_range_mult variable = ag_weapon_range_factor }
							if = {
								limit = { check_variable = { which = ag_weapon_range_factor value > 0 } }
								add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_10" multiplier = ag_weapon_range_factor days = -1 }
								change_variable = { which = ag_zeta_crisis_leader_modifier_10_levels value = 1 }
							}
							clear_variable = ag_weapon_range_factor
						}
						fleet_event = { id = ag_zeta_crisis.432 days = 1 }
					}
				}
				ag_zeta_crisis_leader_11 = {
					root.fromfromfrom = {
						random_controlled_ship = {
							limit = { check_modifier_value = { modifier = weapon_type_energy_weapon_damage_mult value > 0 } }
							export_modifier_to_variable = { modifier = weapon_type_energy_weapon_damage_mult variable = ag_weapon_damage_factor }
							root.fromfrom = { set_variable = { which = ag_weapon_damage_factor value = prev.ag_weapon_damage_factor } }
							clear_variable = ag_weapon_damage_factor
						}
						random_controlled_ship = {
							limit = { check_modifier_value = { modifier = weapon_type_energy_weapon_fire_rate_mult value > 0 } }
							export_modifier_to_variable = { modifier = weapon_type_energy_weapon_fire_rate_mult variable = ag_weapon_fire_rate_factor }
							root.fromfrom = { set_variable = { which = ag_weapon_fire_rate_factor value = prev.ag_weapon_fire_rate_factor } }
							clear_variable = ag_weapon_fire_rate_factor
						}
					}
					every_controlled_ship = {
						set_variable = { which = ag_weapon_damage_factor value = root.fromfrom.ag_weapon_damage_factor }
						set_variable = { which = ag_weapon_fire_rate_factor value = root.fromfrom.ag_weapon_fire_rate_factor }
						remove_modifier = "ag_zeta_crisis_leader_modifier_11"
						remove_modifier = "ag_zeta_crisis_leader_modifier_11_alt"
						add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_11" multiplier = ag_weapon_damage_factor days = 12 }
						add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_11_alt" multiplier = ag_weapon_fire_rate_factor days = 12 }
						clear_variable = ag_weapon_damage_factor
						clear_variable = ag_weapon_fire_rate_factor
					}
					clear_variable = ag_weapon_damage_factor
					clear_variable = ag_weapon_fire_rate_factor
				}
			}
		}
	}
}
fleet_event = {
	id = ag_zeta_crisis.432
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = {
		if = {
			limit = { is_in_combat = yes has_fleet_flag = ag_zeta_crisis_leader_10_flaged }
			every_controlled_ship = {
				limit = { check_modifier_value = { modifier = ship_weapon_range_mult value > 0 } }
				set_variable = { which = ag_weapon_range_factor value = 0 }
				export_modifier_to_variable = { modifier = ship_weapon_range_mult variable = ag_weapon_range_factor }
				if = {
					limit = { check_variable = { which = ag_weapon_range_factor value > 0 } }
					add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_10" multiplier = ag_weapon_range_factor days = -1 }
				}
				clear_variable = ag_weapon_range_factor
			}
			fleet_event = { id = ag_zeta_crisis.432 days = 1 }
		}
		else = { every_controlled_ship = { while = {
			limit = { has_modifier = "ag_zeta_crisis_leader_modifier_10" }
			remove_modifier = "ag_zeta_crisis_leader_modifier_10"
		} } }
	}
}

# on_ship_destroyed_victim, Shroud Invaders' special ship respawn.
country_event = {
	id = ag_zeta_crisis.441
	hide_window = yes
	is_triggered_only = yes
	trigger = { fromfrom = { NOT = { has_ship_flag = ag_set_disable_at_health } is_ship_size = ag_zeta_crisis_special_ship } }
	immediate = { fromfrom = {
		switch = {
			trigger = has_ship_flag
			ag_zeta_crisis_special_0 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.442 days = 720 random = 360 } } }
			ag_zeta_crisis_special_60 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.443 days = 720 random = 360 } } }
			ag_zeta_crisis_special_120 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.444 days = 720 random = 360 } } }
			ag_zeta_crisis_special_180 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.445 days = 720 random = 360 } } }
			ag_zeta_crisis_special_240 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.446 days = 720 random = 360 } } }
			ag_zeta_crisis_special_300 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.447 days = 720 random = 360 } } }
			ag_zeta_crisis_special_45 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.448 days = 720 random = 360 } } }
			ag_zeta_crisis_special_90 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.449 days = 720 random = 360 } } }
			ag_zeta_crisis_special_135 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.450 days = 720 random = 360 } } }
			ag_zeta_crisis_special_180 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.451 days = 720 random = 360 } } }
			ag_zeta_crisis_special_225 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.452 days = 720 random = 360 } } }
			ag_zeta_crisis_special_270 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.453 days = 720 random = 360 } } }
			ag_zeta_crisis_special_315 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.454 days = 720 random = 360 } } }
		}
	} }
}
planet_event = {
	id = ag_zeta_crisis.442
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 0 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 0 } }
}
planet_event = {
	id = ag_zeta_crisis.443
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 60 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 60 } }
}
planet_event = {
	id = ag_zeta_crisis.444
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 120 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 120 } }
}
planet_event = {
	id = ag_zeta_crisis.445
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 180 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 180 } }
}
planet_event = {
	id = ag_zeta_crisis.446
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 240 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 240 } }
}
planet_event = {
	id = ag_zeta_crisis.447
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 300 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 300 } }
}
planet_event = {
	id = ag_zeta_crisis.448
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 45 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 45 } }
}
planet_event = {
	id = ag_zeta_crisis.449
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 90 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 90 } }
}
planet_event = {
	id = ag_zeta_crisis.450
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 135 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 135 } }
}
planet_event = {
	id = ag_zeta_crisis.451
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 180 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 180 } }
}
planet_event = {
	id = ag_zeta_crisis.452
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 225 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 225 } }
}
planet_event = {
	id = ag_zeta_crisis.453
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 270 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 270 } }
}
planet_event = {
	id = ag_zeta_crisis.454
	hide_window = yes
	is_triggered_only = yes
	trigger = { ag_zeta_crisis_special_ship_spawn_trigger = { ag_angle = 315 } }
	immediate = { ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 315 } }
}

# on_ship_destroyed_perp, Remove Shroud Invaders' special ship after one kill.
country_event = {
	id = ag_zeta_crisis.455
	hide_window = yes
	is_triggered_only = yes
	trigger = { fromfrom = { is_ship_size = ag_zeta_crisis_special_ship solar_system = { NOT = { has_star_flag = ag_zeta_crisis_gate_portal_spawned } } } }
	immediate = { fromfrom = {
		switch = {
			trigger = has_ship_flag
			ag_zeta_crisis_special_0 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.442 days = 720 random = 360 } } }
			ag_zeta_crisis_special_60 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.443 days = 720 random = 360 } } }
			ag_zeta_crisis_special_120 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.444 days = 720 random = 360 } } }
			ag_zeta_crisis_special_180 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.445 days = 720 random = 360 } } }
			ag_zeta_crisis_special_240 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.446 days = 720 random = 360 } } }
			ag_zeta_crisis_special_300 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.447 days = 720 random = 360 } } }
			ag_zeta_crisis_special_45 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.448 days = 720 random = 360 } } }
			ag_zeta_crisis_special_90 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.449 days = 720 random = 360 } } }
			ag_zeta_crisis_special_135 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.450 days = 720 random = 360 } } }
			ag_zeta_crisis_special_180 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.451 days = 720 random = 360 } } }
			ag_zeta_crisis_special_225 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.452 days = 720 random = 360 } } }
			ag_zeta_crisis_special_270 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.453 days = 720 random = 360 } } }
			ag_zeta_crisis_special_315 = { fromfrom.solar_system.star = { planet_event = { id = ag_zeta_crisis.454 days = 720 random = 360 } } }
		}
		delete_ship = this
	} }
}

country_event = {
	id = ag_zeta_crisis.501
	title = "ag_zeta_crisis.501.name"
	desc = "ag_zeta_crisis.501.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_m_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_unspeakable_horror_room }
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = ag_zeta_crisis_501_fired }
		has_technology = "tech_ag_psionic_signal_42"
	}
	immediate = { set_country_flag = ag_zeta_crisis_501_fired }
	option = { name = "ag_zeta_crisis.501.a" custom_tooltip = "ag_zeta_crisis.501.a.tooltip" }
}

# Remove upkeep debuff
system_event = {
	id = ag_zeta_crisis.502
	hide_window = yes
	is_triggered_only = yes
	trigger = { NOT = { any_system_ambient_object = { OR = {
		has_ambient_object_flag = ag_zeta_crisis_system_effect_thin
		has_ambient_object_flag = ag_zeta_crisis_system_effect_thick
	} } } }
	immediate = {
		if = { limit = { has_modifier = "ag_zeta_psionic_environment_thin" } remove_modifier = "ag_zeta_psionic_environment_thin" }
		if = { limit = { has_modifier = "ag_zeta_psionic_environment_thick" } remove_modifier = "ag_zeta_psionic_environment_thick" }
	}
}

# on_army_killed_no_combat, Remove leader if army killed by effect.
country_event = {
	id = ag_zeta_crisis.503
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = from
		from = { exists = planet planet = { has_ground_combat = yes } }
	}
	immediate = {
		from.planet = {
			if = {
				limit = { any_ground_combat_attacker = { exists = leader leader = { exists = owner owner = { NOT = { is_country_type = ag_zeta_crisis_country } } } } }
				reroll_random = yes
				random_list = { 50 = { } 50 = { random_ground_combat_attacker = { leader = {
					save_event_target_as = ag_target_leader
					owner = { create_message = {
						type = "LEADER_DEATH"
						localization = "ag_leader_kill_by_zeta_crisis_message_desc_alt"
						days = 30
						target = root.from.planet
						variable = { type = name localization = "ag_target_planet" scope = root.from.planet }
						variable = { type = name localization = "ag_target_leader" scope = event_target:ag_target_leader }
					} }
					ag_kill_leader = yes
				} } } }
			}
			else_if = {
				limit = { any_ground_combat_defender = { exists = leader leader = { exists = owner owner = { NOT = { is_country_type = ag_zeta_crisis_country } } } } }
				reroll_random = yes
				random_list = { 50 = { } 50 = { random_ground_combat_defender = { leader = {
					save_event_target_as = ag_target_leader
					owner = { create_message = {
						type = "LEADER_DEATH"
						localization = "ag_leader_kill_by_zeta_crisis_message_desc_alt"
						days = 30
						target = root.from.planet
						variable = { type = name localization = "ag_target_planet" scope = root.from.planet }
						variable = { type = name localization = "ag_target_leader" scope = event_target:ag_target_leader }
					} }
					ag_kill_leader = yes
				} } } }
			}
		}
	}
}
