namespace = ag_subsystem

###########################################################################
# New Subsystem: (7) Create Subsystem's extra requirements and events.
###########################################################################

# Emergency Repair System
# Attached
ship_event = {
	id = ag_subsystem.11
	hide_window = yes
	is_triggered_only = yes
	trigger = { NOR = { has_ship_flag = ag_emergency_repair_system_locked has_ship_flag = ag_emergency_repair_system } }
	immediate = {
		set_ship_flag = ag_emergency_repair_system
		ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = subsystem_emergency_repair }
	}
}
# on_disabled
ship_event = {
	id = ag_subsystem.12
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_ship_flag = ag_emergency_repair_system }
	immediate = {
		repair_ship = yes
		repair_percentage = 1.0
		remove_ship_flag = ag_emergency_repair_system
		remove_modifier = "ag_emergency_repair_system_power"
		add_modifier = { modifier = "ag_emergency_repair_system_power" days = @ag_sub_repair_system_effect_days }
		ship_event = { id = ag_subsystem.13 days = @ag_sub_repair_system_effect_days }
		ship_event = { id = ag_subsystem.11 days = @ag_sub_repair_system_cooldown }
		owner = { country_event = { id = ag_subsystem.15 } }
		ag_subtract_disable_at_health = { ag_disable_type = subsystem_emergency_repair }
		set_disabled = no
		ag_spawn_extra_lives_effect = yes
	}
}
ship_event = {
	id = ag_subsystem.13
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = {
		remove_modifier = "ag_emergency_repair_system_cooldown"
		add_modifier = { modifier = "ag_emergency_repair_system_cooldown" days = @ag_sub_repair_system_debuff_days }
	}
}
# Removed
ship_event = {
	id = ag_subsystem.14
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		ag_subtract_disable_at_health = { ag_disable_type = subsystem_emergency_repair }
		remove_ship_flag = ag_emergency_repair_system
		set_timed_ship_flag = { flag = ag_emergency_repair_system_locked days = @ag_sub_repair_system_cooldown }
	}
}
country_event = {
	id = ag_subsystem.15
	title = "ag_subsystem.15.name"
	desc = "ag_subsystem.15.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_yellow_alert
	location = from
	is_triggered_only = yes
	option = { name = "ag_subsystem.15.a" }
}

# Structural Protection System
# Notification
country_event = {
	id = ag_subsystem.20
	title = "ag_subsystem.20.name"
	desc = { trigger = { NOT = { exists = event_target:ag_ancient_ship_debris_spawn_loc } } text = "ag_subsystem.20.a.desc" }
	desc = { trigger = { exists = event_target:ag_ancient_ship_debris_spawn_loc } text = "ag_subsystem.20.b.desc" }
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_small_space_battle_room }
	show_sound = event_ship_explosion
	location = event_target:ag_target_ambient_object
	is_triggered_only = yes
	option = { name = "ag_subsystem.20.a" }
}
# on_ship_destroyed_victim
country_event = {
	id = ag_subsystem.21
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		fromfrom = { NOR = { has_ship_flag = ag_subsystem_21_mutex has_ship_flag = ag_set_disable_at_health } }
		OR = { ag_any_ship_with_structural_protection_system = yes has_country_flag = ag_ship_subsystem_enabled_201_9 }
	}
	immediate = {
		fromfrom = { set_ship_flag = ag_subsystem_21_mutex }
		if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_101_2 fromfrom = { has_ship_flag = ag_alpha_titan_player } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_alpha_titan_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					if = { limit = { root.fromfrom = { is_ship_size = ag_alpha_titan_0 } } ag_spawn_jumpdrive_effect = { ag_color = blue } }
					else = { ag_spawn_jumpdrive_effect = { ag_color = red } }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_alpha_titan_debris_object
				enable_special_project = { name = ag_structural_protection_system_101 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
		}
		else_if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_301_2 fromfrom = { has_ship_flag = ag_gamma_station_player } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_gamma_station_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					if = { limit = { root.fromfrom = { is_ship_size = ag_gamma_station_0 } } ag_spawn_jumpdrive_effect = { ag_color = blue } }
					else = { ag_spawn_jumpdrive_effect = { ag_color = red } }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_gamma_station_debris_object
				enable_special_project = { name = ag_structural_protection_system_301 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
		}
		else_if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_304_2 fromfrom = { has_ship_flag = ag_gamma_titan_player } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_gamma_titan_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					if = { limit = { root.fromfrom = { is_ship_size = ag_gamma_titan_0 } } ag_spawn_jumpdrive_effect = { ag_color = blue } }
					else = { ag_spawn_jumpdrive_effect = { ag_color = red } }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_gamma_titan_debris_object
				enable_special_project = { name = ag_structural_protection_system_304 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
		}
		else_if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_401_2 fromfrom = { has_ship_flag = ag_delta_titan_player } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_delta_titan_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					if = { limit = { root.fromfrom = { is_ship_size = ag_delta_titan_0 } } ag_spawn_jumpdrive_effect = { ag_color = blue } }
					else = { ag_spawn_jumpdrive_effect = { ag_color = red } }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_delta_titan_debris_object
				enable_special_project = { name = ag_structural_protection_system_401 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
		}
		else_if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_501_2 fromfrom = { has_ship_flag = ag_epsilon_titan_player } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_epsilon_titan_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					if = { limit = { root.fromfrom = { is_ship_size = ag_epsilon_titan_0 } } ag_spawn_jumpdrive_effect = { ag_color = blue } }
					else = { ag_spawn_jumpdrive_effect = { ag_color = red } }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_epsilon_titan_debris_object
				enable_special_project = { name = ag_structural_protection_system_501 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
		}
		else_if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_602_2 fromfrom = { has_ship_flag = ag_eta_titan_player } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_eta_titan_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					if = { limit = { root.fromfrom = { is_ship_size = ag_eta_titan_0 } } ag_spawn_jumpdrive_effect = { ag_color = blue } }
					else = { ag_spawn_jumpdrive_effect = { ag_color = red } }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_eta_titan_debris_object
				enable_special_project = { name = ag_structural_protection_system_602 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
		}
		else_if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_701_2 fromfrom = { has_ship_flag = ag_zeta_titan_player } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_zeta_titan_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					ag_spawn_jumpdrive_effect = { ag_color = violet }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_zeta_titan_debris_object
				enable_special_project = { name = ag_structural_protection_system_701 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
		}
		else_if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_2501_2 fromfrom = { has_ship_flag = ag_lost_ancient_ship } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_starlight_2_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					ag_spawn_jumpdrive_effect = { ag_color = red }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_starlight_2_debris_object
				enable_special_project = { name = ag_structural_protection_system_2501 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
			set_country_flag = ag_lost_ancient_ship_locked
		}
		else_if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_2601_2 fromfrom = { has_ship_flag = ag_ancient_wandering_ship_player } }
			ag_ancient_jumpdrive_beacon_locator = yes
			create_ambient_object = { type = ag_player_wandering_ship_debris_object }
			last_created_ambient_object = {
				if = {
					limit = { exists = event_target:ag_ancient_ship_debris_spawn_loc }
					set_location = { target = event_target:ag_ancient_ship_debris_spawn_loc distance = 45 angle = random }
					if = { limit = { root.fromfrom = { is_ship_size = ag_ancient_wandering_ship_0 } } ag_spawn_jumpdrive_effect = { ag_color = blue } }
					else = { ag_spawn_jumpdrive_effect = { ag_color = red } }
				}
				else = { set_location = { target = fromfrom distance = -1 angle = 0 } }
				set_ambient_object_flag = ag_player_wandering_ship_debris_object
				enable_special_project = { name = ag_structural_protection_system_2601 location = this owner = root }
				save_event_target_as = ag_target_ambient_object
			}
			country_event = { id = ag_subsystem.20 }
		}
		else_if = {
			limit = {
				has_country_flag = ag_ship_subsystem_enabled_201_9
				fromfrom = { OR = { is_ship_size = ag_beta_station_type1_0 is_ship_size = ag_beta_station_type1_1 } }
			}
			random_list = { 25 = { } 75 = { change_variable = { which = ag_num_beta_station_type1_cores value = 1 } } }
		}
	}
}
# Gamma Station
ship_event = {
	id = ag_subsystem.22
	title = "ag_subsystem.22.name"
	desc = "ag_subsystem.22.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.22.a"
		hidden_effect = {
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_player_gamma_station_debris_object }
					save_event_target_as = ag_ship_spawn_loc
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_gamma_ships_unlocked }
					ag_gamma_station_player_spawn = {
						ag_unlock_ship = yes
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
				else = {
					ag_gamma_station_player_spawn = {
						ag_unlock_ship = no
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}
# Delta Titan
ship_event = {
	id = ag_subsystem.23
	title = "ag_subsystem.23.name"
	desc = "ag_subsystem.23.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.23.a"
		hidden_effect = {
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_player_delta_titan_debris_object }
					save_event_target_as = ag_ship_spawn_loc
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_delta_ships_unlocked }
					ag_delta_titan_player_spawn = {
						ag_unlock_ship = yes
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
				else = {
					ag_delta_titan_player_spawn = {
						ag_unlock_ship = no
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}
# Epsilon Titan
ship_event = {
	id = ag_subsystem.24
	title = "ag_subsystem.24.name"
	desc = "ag_subsystem.24.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.24.a"
		hidden_effect = {
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_player_epsilon_titan_debris_object }
					save_event_target_as = ag_ship_spawn_loc
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_epsilon_ships_unlocked }
					ag_epsilon_titan_player_spawn = {
						ag_unlock_ship = yes
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
				else = {
					ag_epsilon_titan_player_spawn = {
						ag_unlock_ship = no
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}
# Zeta Titan
ship_event = {
	id = ag_subsystem.25
	title = "ag_subsystem.25.name"
	desc = "ag_subsystem.25.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.25.a"
		hidden_effect = {
			solar_system = { random_system_ambient_object = {
				limit = { has_ambient_object_flag = ag_player_zeta_titan_debris_object }
				save_event_target_as = ag_ship_spawn_loc
			} }
			owner = {
				if = {
					limit = { has_country_flag = ag_zeta_titan_default_gra_weapon }
					create_fleet = {
						name = "NAME_ag_zeta_guardian_fleet"
						settings = { spawn_debris = no }
						effect = {
							set_fleet_flag = ag_has_ancient_ship_in_fleet
							set_owner = root.owner
							create_ship = {
								name = "NAME_ag_zeta_titan_ship"
								design = "NAME_ag_zeta_titan_red_alt"
								prefix = no
								effect = { set_ship_flag = ag_zeta_titan_player ag_difficulty_bonus = yes }
							}
							set_location = { target = event_target:ag_ship_spawn_loc distance = 0 angle = random }
						}
					}
				}
				else = {
					create_fleet = {
						name = "NAME_ag_zeta_guardian_fleet"
						settings = { spawn_debris = no }
						effect = {
							set_fleet_flag = ag_has_ancient_ship_in_fleet
							set_owner = root.owner
							create_ship = {
								name = "NAME_ag_zeta_titan_ship"
								design = "NAME_ag_zeta_titan"
								prefix = no
								effect = { set_ship_flag = ag_zeta_titan_player ag_difficulty_bonus = yes }
							}
							set_location = { target = event_target:ag_ship_spawn_loc distance = 0 angle = random }
						}
					}
				}
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}
# Starlight II
ship_event = {
	id = ag_subsystem.26
	title = "ag_subsystem.26.name"
	desc = "ag_subsystem.26.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.26.a"
		hidden_effect = {
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_player_starlight_2_debris_object }
					save_event_target_as = ag_ship_spawn_loc
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_lost_ancient_ship_science_ship_form_active }
					ag_spawn_lost_ancient_ship_via_tech = { ag_is_battleship = no ag_location_target = event_target:ag_ship_spawn_loc }
				}
				else = { ag_spawn_lost_ancient_ship_via_tech = { ag_is_battleship = yes ag_location_target = event_target:ag_ship_spawn_loc } }
				remove_country_flag = ag_lost_ancient_ship_locked
				change_variable = { which = ag_lost_ancient_ship_subsystem_repaired value = 1 }
				set_timed_country_flag = { flag = ag_lost_ancient_ship_subsystem_repaired_recent days = 30 }
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}
# Wandering Ship
ship_event = {
	id = ag_subsystem.27
	title = "ag_subsystem.27.name"
	desc = "ag_subsystem.27.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.27.a"
		hidden_effect = {
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_player_wandering_ship_debris_object }
					save_event_target_as = ag_ship_spawn_loc
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_delta_ships_unlocked }
					ag_ancient_wandering_ship_player_spawn = {
						ag_unlock_ship = yes
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
				else = {
					ag_ancient_wandering_ship_player_spawn = {
						ag_unlock_ship = no
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}
# Gamma Titan
ship_event = {
	id = ag_subsystem.28
	title = "ag_subsystem.28.name"
	desc = "ag_subsystem.28.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.28.a"
		hidden_effect = {
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_player_gamma_titan_debris_object }
					save_event_target_as = ag_ship_spawn_loc
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_gamma_ships_unlocked }
					ag_gamma_titan_player_spawn = {
						ag_unlock_ship = yes
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
				else = {
					ag_gamma_titan_player_spawn = {
						ag_unlock_ship = no
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}
# Eta Titan
ship_event = {
	id = ag_subsystem.29
	title = "ag_subsystem.29.name"
	desc = "ag_subsystem.29.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.29.a"
		hidden_effect = {
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_player_eta_titan_debris_object }
					save_event_target_as = ag_ship_spawn_loc
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_eta_ships_unlocked }
					ag_eta_titan_player_spawn = {
						ag_unlock_ship = yes
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
				else = {
					ag_eta_titan_player_spawn = {
						ag_unlock_ship = no
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}
# Alpha Titan
ship_event = {
	id = ag_subsystem.30
	title = "ag_subsystem.30.name"
	desc = "ag_subsystem.30.desc"
	diplomatic = yes
	custom_gui = "ag_ancient_event_s_window"
	custom_gui_option = "ag_ancient_event_option"
	picture_event_data = { room = ag_event_space_station_room }
	show_sound = event_dyson_sphere_build_complete
	location = root
	is_triggered_only = yes
	
	option = {
		name = "ag_subsystem.30.a"
		hidden_effect = {
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = ag_player_alpha_titan_debris_object }
					save_event_target_as = ag_ship_spawn_loc
				}
			}
			owner = {
				if = {
					limit = { has_country_flag = ag_alpha_ships_unlocked }
					ag_alpha_titan_player_spawn = {
						ag_unlock_ship = yes
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
				else = {
					ag_alpha_titan_player_spawn = {
						ag_unlock_ship = no
						ag_owner = root.owner
						ag_location_target = event_target:ag_ship_spawn_loc
					}
				}
			}
			event_target:ag_ship_spawn_loc = { destroy_ambient_object = this }
		}
	}
}

# Gamma Station Drones Spawn
country_event = {
	id = ag_subsystem.34
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = ag_ancient_drones_spawn_cooldown }
		OR = {
			is_country_type = ag_ancient_gamma_guardian
			has_country_flag = ag_ship_subsystem_enabled_301_11
		}
		from = { NOT = { is_country_type = ag_zeta_crisis_country } }
		fromfrom = { OR = {
			has_fleet_flag = ag_gamma_station_hostile_fleet
			has_fleet_flag = ag_gamma_station_small_hostile_fleet
			has_fleet_flag = ag_gamma_station_player
		} }
	}
	immediate = {
		set_timed_country_flag = { flag = ag_ancient_drones_spawn_cooldown days = 2 }
		if = {
			limit = { is_country_type = ag_ancient_gamma_guardian }
			ag_gamma_station_drones_spawn = { ag_owner = root ag_location = fromfromfrom ag_drones_max = @ag_sub_support_drones_total_hostile }
		}
		else = { ag_gamma_station_drones_spawn = { ag_owner = root ag_location = fromfromfrom ag_drones_max = @ag_sub_support_drones_total_player } }
	}
}
fleet_event = {
	id = ag_subsystem.35
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = { delete_fleet = { target = this destroy_template = yes } }
}

# on_entering_battle, Auxiliary Energy System
country_event = {
	id = ag_subsystem.51
	hide_window = yes
	is_triggered_only = yes
	trigger = { fromfrom = { NOT = { has_fleet_flag = ag_sub_6_mutex } } ag_country_has_subsystem = { ag_subsystem_id = 6 } }
	immediate = {
		fromfrom = {
			set_timed_fleet_flag = { flag = ag_sub_6_mutex days = 2 }
			every_controlled_ship = {
				limit = { ag_ship_has_subsystem = { ag_owner = root ag_subsystem_id = 6 } }
				remove_modifier = "ag_auxiliary_power"
				add_modifier = { modifier = "ag_auxiliary_power" days = @ag_sub_auxiliary_energy_system_effect_days }
			}
		}
	}
}

# on_entering_battle, Computing Network
country_event = {
	id = ag_subsystem.52
	hide_window = yes
	is_triggered_only = yes
	trigger = { fromfrom = { NOT = { has_fleet_flag = ag_sub_7_mutex } } ag_country_has_subsystem = { ag_subsystem_id = 7 } }
	immediate = {
		fromfrom = {
			set_timed_fleet_flag = { flag = ag_sub_7_mutex days = 2 }
			every_controlled_ship = {
				limit = { ag_ship_has_subsystem = { ag_owner = root ag_subsystem_id = 7 } }
				prev = { change_variable = { which = ag_num_subsystem_computing_network_owner value = 1 } }
			}
			if = {
				limit = { check_variable = { which = ag_num_subsystem_computing_network_owner value > @ag_sub_computing_network_required_ships } }
				root = {
					ag_get_repeatable_tech_max_buff = { ag_index = sub_7_tech }
					multiply_variable = { which = ag_sub_7_tech_damage_value value = 0.0025 }
					multiply_variable = { which = ag_sub_7_tech_fire_rate_value value = 0.0025 }
					multiply_variable = { which = ag_sub_7_tech_damage_value value = ag_num_subsystem_computing_network_owner }
					multiply_variable = { which = ag_sub_7_tech_fire_rate_value value = ag_num_subsystem_computing_network_owner }
				}
				ag_add_repeatable_tech_max_buff = { ag_index = sub_7_tech ag_days = @ag_sub_computing_network_effect_days }
				remove_modifier = "ag_computing_network_buff"
				add_modifier = { modifier = "ag_computing_network_buff" days = @ag_sub_computing_network_effect_days }
				root = { clear_variable = ag_sub_7_tech_id clear_variable = ag_sub_7_tech_damage_value clear_variable = ag_sub_7_tech_fire_rate_value }
			}
		}
	}
}

# on_entering_battle, Auto deployment
country_event = {
	id = ag_subsystem.53
	hide_window = yes
	is_triggered_only = yes
	trigger = { OR = {
		AND = {
			has_country_flag = ag_ship_subsystem_enabled_402_36
			fromfrom = { has_fleet_flag = ag_delta_platform_player NOT = { has_fleet_flag = ag_delta_platform_deploying } }
		}
		AND = {
			has_country_flag = ag_ship_subsystem_enabled_601_36
			fromfrom = {
				num_ships = 1
				any_controlled_ship = { OR = { is_ship_size = ag_eta_gateway_0 is_ship_size = ag_eta_gateway_1 } }
			}
		}
	} }
	immediate = {
		if = {
			limit = {
				has_country_flag = ag_ship_subsystem_enabled_402_36
				fromfrom = { has_fleet_flag = ag_delta_platform_player NOT = { has_fleet_flag = ag_delta_platform_deploying } }
			}
			fromfrom = {
				if = {
					limit = { owner = { has_country_flag = ag_ship_subsystem_enabled_402_14 } }
					ag_deploy_ancient_turret_preparation = { ag_delay = 2 }
				}
				else = { ag_deploy_ancient_turret_preparation = { ag_delay = 5 } }
			}
		}
		else = { if = {
			limit = { fromfrom.solar_system = { NOR = {
				has_star_flag = ag_eta_gateway_deploy_mytex
				any_system_megastructure = { ag_is_gateway_megastructure = yes }
			} } }
			fromfrom = {
				solar_system = { set_timed_star_flag = { flag = ag_eta_gateway_deploy_mytex days = 2 } }
				ag_set_eta_gateway_deployed = yes
			}
		} }
	}
}

# Recycle Station
country_event = {
	id = ag_subsystem.61
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = ag_ship_subsystem_enabled_201_8
		from = { any_controlled_ship = { OR = { is_ship_size = ag_beta_station_type1_0 is_ship_size = ag_beta_station_type1_1 } } }
	}
	immediate = { change_variable = { which = ag_num_beta_station_type1_cores value = 1 } }
}

# Titans' Abilities
country_event = {
	id = ag_subsystem.71
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			AND = { has_country_flag = ag_ship_subsystem_enabled_101_42 has_country_flag = ag_alpha_titan_psi_shield_auto fromfrom = { any_controlled_ship = { has_ship_flag = ag_alpha_titan_player } } }
			AND = { has_country_flag = ag_ship_subsystem_enabled_304_17 fromfrom = { any_controlled_ship = { has_ship_flag = ag_gamma_titan_player } } }
			AND = { has_country_flag = ag_ship_subsystem_enabled_401_16 fromfrom = { any_controlled_ship = { has_ship_flag = ag_delta_titan_player } } }
			AND = { has_country_flag = ag_ship_subsystem_enabled_401_17 fromfrom = { any_controlled_ship = { has_ship_flag = ag_delta_titan_player } } }
			AND = { has_country_flag = ag_ship_subsystem_enabled_602_17 fromfrom = { any_controlled_ship = { has_ship_flag = ag_eta_titan_player } } }
			AND = { has_country_flag = ag_ship_subsystem_enabled_602_34 fromfrom = { any_controlled_ship = { has_ship_flag = ag_eta_titan_player } } }
			AND = { has_country_flag = ag_ship_subsystem_enabled_2601_28 fromfrom = { any_controlled_ship = { has_ship_flag = ag_ancient_wandering_ship_player } } }
			AND = { has_country_flag = ag_ship_subsystem_enabled_2601_29 fromfrom = { any_controlled_ship = { has_ship_flag = ag_ancient_wandering_ship_player } } }
		}
		# from = { ag_is_mod_country = no }
	}
	immediate = {
		if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_101_42 has_country_flag = ag_alpha_titan_psi_shield_auto fromfrom = { any_controlled_ship = { has_ship_flag = ag_alpha_titan_player } } }
			fromfrom = {
				if = {
					limit = { root = { OR = { NOT = { is_variable_set = ag_alpha_psi_shield_auto_delay } check_variable = { which = ag_alpha_psi_shield_auto_delay value = 0 } } } }
					every_controlled_ship = {
						limit = { OR = { is_ship_size = ag_alpha_titan_0 is_ship_size = ag_alpha_titan_1 } }
						ag_alpha_titan_player_psi_shield_effect = { ag_days = value:ag_alpha_titan_psi_shield_active_days }
					}
				}
				else = { set_variable = { which = ag_alpha_psi_shield_auto_delay value = root.ag_alpha_psi_shield_auto_delay } }
			}
		}
		if = {
			limit = { has_country_flag = ag_ship_subsystem_enabled_304_17 fromfrom = { any_controlled_ship = { has_ship_flag = ag_gamma_titan_player } } }
			# fromfromfrom = {
				# set_variable = { which = ag_num_ships_temp_1 value = 0 }
				# export_trigger_value_to_variable = { trigger = num_ships variable = ag_num_ships_temp_1 }
			# }
			fromfrom = {
				# set_variable = { which = ag_num_ships_temp_2 value = 0 }
				# export_trigger_value_to_variable = { trigger = num_ships variable = ag_num_ships_temp_2 }
				# set_variable = { which = ag_num_ships_temp_1 value = root.fromfromfrom.ag_num_ships_temp_1 }
				if = {
					limit = { NOT = { has_fleet_flag = ag_sub_304_17_mutex } num_ships < root.fromfromfrom.trigger:num_ships }
					set_timed_fleet_flag = { flag = ag_sub_304_17_mutex days = 2 }
					root = {
						ag_get_repeatable_tech_max_buff = { ag_index = sub_304_17_tech }
						multiply_variable = { which = ag_sub_304_17_tech_damage_value value = 0.08 }
						multiply_variable = { which = ag_sub_304_17_tech_fire_rate_value value = 0.08 }
					}
					ag_add_repeatable_tech_max_buff = { ag_index = sub_304_17_tech ag_days = @ag_sub_fleet_suppression_effect_days }
					root = { clear_variable = ag_sub_304_17_tech_id clear_variable = ag_sub_304_17_tech_damage_value clear_variable = ag_sub_304_17_tech_fire_rate_value }
				}
			}
			# fromfromfrom = { clear_variable = ag_num_ships_temp_1 }
			# fromfrom = { clear_variable = ag_num_ships_temp_1 clear_variable = ag_num_ships_temp_2 }
		}
		if = {
			limit = { fromfrom = { any_controlled_ship = { has_ship_flag = ag_delta_titan_player } } }
			if = {
				limit = { has_country_flag = ag_ship_subsystem_enabled_401_16 }
				random_list = {
					50 = { }
					50 = {
						fromfromfrom = {
							set_timed_fleet_flag = { flag = ag_sub_16_flaged days = @ag_sub_weapon_range_suppression_effect_days }
							every_controlled_ship = {
								ag_spawn_buff_effect = {ag_type = 3 ag_color = red ag_scale = s }
								if = {
									limit = { check_modifier_value = { modifier = ship_weapon_range_mult value > 0 } }
									remove_modifier = "ag_delta_titan_weapon_range_debuff"
									add_modifier = { modifier = "ag_delta_titan_weapon_range_debuff" multiplier = modifier:ship_weapon_range_mult days = -1 }
								}
								# set_variable = { which = ag_weapon_range_factor value = 0 }
								# export_modifier_to_variable = { modifier = ship_weapon_range_mult variable = ag_weapon_range_factor }
								# if = {
									# limit = { check_variable = { which = ag_weapon_range_factor value > 0 } }
									# add_modifier = { modifier = "ag_delta_titan_weapon_range_debuff" multiplier = ag_weapon_range_factor days = -1 }
									# change_variable = { which = ag_delta_titan_weapon_range_debuff_levels value = 1 }
								# }
								# clear_variable = ag_weapon_range_factor
							}
							fleet_event = { id = ag_subsystem.72 days = 1 }
						}
					}
				}
			}
			else_if = {
				limit = { has_country_flag = ag_ship_subsystem_enabled_401_17 }
				# fromfromfrom = {
					# set_variable = { which = ag_num_ships_temp_1 value = 0 }
					# export_trigger_value_to_variable = { trigger = num_ships variable = ag_num_ships_temp_1 }
				# }
				fromfrom = {
					# set_variable = { which = ag_num_ships_temp_2 value = 0 }
					# export_trigger_value_to_variable = { trigger = num_ships variable = ag_num_ships_temp_2 }
					# set_variable = { which = ag_num_ships_temp_1 value = root.fromfromfrom.ag_num_ships_temp_1 }
					if = {
						limit = { NOT = { has_fleet_flag = ag_sub_401_17_mutex } num_ships < root.fromfromfrom.trigger:num_ships }
						set_timed_fleet_flag = { flag = ag_sub_401_17_mutex days = 2 }
						root = {
							ag_get_repeatable_tech_max_buff = { ag_index = sub_401_17_tech }
							multiply_variable = { which = ag_sub_401_17_tech_damage_value value = 0.08 }
							multiply_variable = { which = ag_sub_401_17_tech_fire_rate_value value = 0.08 }
						}
						ag_add_repeatable_tech_max_buff = { ag_index = sub_401_17_tech ag_days = @ag_sub_fleet_suppression_effect_days }
						root = { clear_variable = ag_sub_401_17_tech_id clear_variable = ag_sub_401_17_tech_damage_value clear_variable = ag_sub_401_17_tech_fire_rate_value }
					}
				}
				# fromfromfrom = { clear_variable = ag_num_ships_temp_1 }
				# fromfrom = { clear_variable = ag_num_ships_temp_1 clear_variable = ag_num_ships_temp_2 }
			}
		}
		if = {
			limit = { fromfrom = { any_controlled_ship = { has_ship_flag = ag_eta_titan_player } } }
			if = {
				limit = { has_country_flag = ag_ship_subsystem_enabled_602_17 }
				# fromfromfrom = {
					# set_variable = { which = ag_num_ships_temp_1 value = 0 }
					# export_trigger_value_to_variable = { trigger = num_ships variable = ag_num_ships_temp_1 }
				# }
				fromfrom = {
					# set_variable = { which = ag_num_ships_temp_2 value = 0 }
					# export_trigger_value_to_variable = { trigger = num_ships variable = ag_num_ships_temp_2 }
					# set_variable = { which = ag_num_ships_temp_1 value = root.fromfromfrom.ag_num_ships_temp_1 }
					if = {
						limit = { NOT = { has_fleet_flag = ag_sub_602_17_mutex } num_ships < root.fromfromfrom.trigger:num_ships }
						set_timed_fleet_flag = { flag = ag_sub_602_17_mutex days = 2 }
						root = {
							ag_get_repeatable_tech_max_buff = { ag_index = sub_602_17_tech }
							multiply_variable = { which = ag_sub_602_17_tech_damage_value value = 0.08 }
							multiply_variable = { which = ag_sub_602_17_tech_fire_rate_value value = 0.08 }
						}
						ag_add_repeatable_tech_max_buff = { ag_index = sub_602_17_tech ag_days = @ag_sub_fleet_suppression_effect_days }
						root = { clear_variable = ag_sub_602_17_tech_id clear_variable = ag_sub_602_17_tech_damage_value clear_variable = ag_sub_602_17_tech_fire_rate_value }
					}
				}
				# fromfromfrom = { clear_variable = ag_num_ships_temp_1 }
				# fromfrom = { clear_variable = ag_num_ships_temp_1 clear_variable = ag_num_ships_temp_2 }
			}
			else_if = {
				limit = { has_country_flag = ag_ship_subsystem_enabled_602_34 }
				fromfrom = { random_controlled_ship = {
					limit = {
						has_ship_flag = ag_eta_titan_player
						NOT = { has_ship_flag = ag_eta_titan_phantom_cooldown }
					}
					set_timed_ship_flag = { flag = ag_eta_titan_phantom_cooldown days = 30 }
					random_list = {
						25 = {
							create_fleet = {
								name = "NAME_ag_eta_titan_phantom_fleet"
								settings = {
									is_boss = yes
									spawn_debris = no
									can_change_composition = no
									can_change_leader = no
									can_disband = no
									can_upgrade = no
								}
								effect = {
									set_fleet_flag = ag_has_ancient_ship_in_fleet
									set_fleet_flag = ag_eta_titan_phantom_player_fleet
									set_owner = root
									create_ship = {
										name = "NAME_ag_eta_titan_phantom_ship"
										design = "NAME_ag_eta_titan_phantom_player"
										prefix = no
										effect = {
											ag_difficulty_bonus = yes
											ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = invincible }
											ag_delayed_delete_ship = { ag_days = @ag_sub_eta_hallucination_combat_effect_days }
										}
									}
									set_location = { target = prev distance = 0 angle = random }
									fleet_event = { id = ag_subsystem.74 days = 1 }
								}
							}
							create_fleet = {
								name = "NAME_ag_eta_titan_phantom_fleet"
								settings = {
									is_boss = yes
									spawn_debris = no
									can_change_composition = no
									can_change_leader = no
									can_disband = no
									can_upgrade = no
								}
								effect = {
									set_fleet_flag = ag_has_ancient_ship_in_fleet
									set_fleet_flag = ag_eta_titan_phantom_player_fleet
									set_owner = root
									create_ship = {
										name = "NAME_ag_eta_titan_phantom_ship"
										design = "NAME_ag_eta_titan_phantom_player"
										prefix = no
										effect = {
											ag_difficulty_bonus = yes
											ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = invincible }
											ag_delayed_delete_ship = { ag_days = @ag_sub_eta_hallucination_combat_effect_days }
										}
									}
									set_location = { target = root.fromfromfrom distance = 0 angle = random }
									fleet_event = { id = ag_subsystem.74 days = 1 }
								}
							}
						}
						75 = {
							create_fleet = {
								name = "NAME_ag_eta_titan_phantom_fleet"
								settings = {
									is_boss = yes
									spawn_debris = no
									can_change_composition = no
									can_change_leader = no
									can_disband = no
									can_upgrade = no
								}
								effect = {
									set_fleet_flag = ag_has_ancient_ship_in_fleet
									set_fleet_flag = ag_eta_titan_phantom_player_fleet
									set_owner = root
									create_ship = {
										name = "NAME_ag_eta_titan_phantom_ship"
										design = "NAME_ag_eta_titan_phantom_player"
										prefix = no
										effect = {
											ag_difficulty_bonus = yes
											ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = invincible }
											ag_delayed_delete_ship = { ag_days = @ag_sub_eta_hallucination_combat_effect_days }
										}
									}
									set_location = { target = prev distance = 0 angle = random }
									fleet_event = { id = ag_subsystem.74 days = 1 }
								}
							}
						}
					}
					reroll_random = yes
				} }
			}
		}
		if = {
			limit = { fromfrom = { any_controlled_ship = { has_ship_flag = ag_ancient_wandering_ship_player } } }
			if = {
				limit = { has_country_flag = ag_ship_subsystem_enabled_2601_28 }
				set_variable = { which = ag_num_owned_anchor_stations value = 0 }
				every_megastructure = {
					limit = { OR = { is_megastructure_type = ag_ancient_anchor_station_2 is_megastructure_type = ag_ancient_anchor_station_player } }
					prev = { change_variable = { which = ag_num_owned_anchor_stations value = 1 } }
				}
				random_list = {
					90 = {
						modifier = { add = -10 check_variable = { which = ag_num_owned_anchor_stations value > 0 } }
						modifier = { add = -10 check_variable = { which = ag_num_owned_anchor_stations value > 1 } }
						modifier = { add = -10 check_variable = { which = ag_num_owned_anchor_stations value > 2 } }
						modifier = { add = -10 check_variable = { which = ag_num_owned_anchor_stations value > 3 } }
					}
					10 = {
						modifier = { add = 10 check_variable = { which = ag_num_owned_anchor_stations value > 0 } }
						modifier = { add = 10 check_variable = { which = ag_num_owned_anchor_stations value > 1 } }
						modifier = { add = 10 check_variable = { which = ag_num_owned_anchor_stations value > 2 } }
						modifier = { add = 10 check_variable = { which = ag_num_owned_anchor_stations value > 3 } }
						fromfromfrom = {
							set_timed_fleet_flag = { flag = ag_sub_28_flaged days = @ag_sub_anchor_station_effect_days }
							every_controlled_ship = {
								ag_spawn_buff_effect = {ag_type = 3 ag_color = red ag_scale = s }
								set_variable = { which = ag_weapon_debuff_factor value = 0 }
								export_modifier_to_variable = { modifier = ship_weapon_damage variable = ag_weapon_debuff_factor }
								if = {
									limit = { check_variable = { which = ag_weapon_debuff_factor value > 0 } }
									add_modifier = { modifier = "ag_wandering_ship_weapon_damage_debuff" multiplier = ag_weapon_debuff_factor days = -1 }
									change_variable = { which = ag_wandering_ship_weapon_damage_debuff_levels value = 1 }
								}
								set_variable = { which = ag_weapon_debuff_factor value = 0 }
								export_modifier_to_variable = { modifier = ship_shield_damage_mult variable = ag_weapon_debuff_factor }
								if = {
									limit = { check_variable = { which = ag_weapon_debuff_factor value > 0 } }
									add_modifier = { modifier = "ag_wandering_ship_shield_damage_debuff" multiplier = ag_weapon_debuff_factor days = -1 }
									change_variable = { which = ag_wandering_ship_shield_damage_debuff_levels value = 1 }
								}
								set_variable = { which = ag_weapon_debuff_factor value = 0 }
								export_modifier_to_variable = { modifier = ship_armor_damage_mult variable = ag_weapon_debuff_factor }
								if = {
									limit = { check_variable = { which = ag_weapon_debuff_factor value > 0 } }
									add_modifier = { modifier = "ag_wandering_ship_armor_damage_debuff" multiplier = ag_weapon_debuff_factor days = -1 }
									change_variable = { which = ag_wandering_ship_armor_damage_debuff_levels value = 1 }
								}
								set_variable = { which = ag_weapon_debuff_factor value = 0 }
								export_modifier_to_variable = { modifier = ship_hull_damage_mult variable = ag_weapon_debuff_factor }
								if = {
									limit = { check_variable = { which = ag_weapon_debuff_factor value > 0 } }
									add_modifier = { modifier = "ag_wandering_ship_hull_damage_debuff" multiplier = ag_weapon_debuff_factor days = -1 }
									change_variable = { which = ag_wandering_ship_hull_damage_debuff_levels value = 1 }
								}
								clear_variable = ag_weapon_debuff_factor
							}
							fleet_event = { id = ag_subsystem.73 days = 1 }
						}
					}
				}
				clear_variable = ag_num_owned_anchor_stations
			}
			else_if = {
				limit = { has_country_flag = ag_ship_subsystem_enabled_2601_29 }
				fromfromfrom = {
					set_variable = { which = ag_num_ships_temp_1 value = 0 }
					export_trigger_value_to_variable = { trigger = num_ships variable = ag_num_ships_temp_1 }
				}
				fromfrom = {
					set_variable = { which = ag_num_ships_temp_2 value = 0 }
					export_trigger_value_to_variable = { trigger = num_ships variable = ag_num_ships_temp_2 }
					if = {
						limit = { check_variable = { which = ag_num_ships_temp_2 value < root.fromfromfrom.ag_num_ships_temp_1 } }
						root = {
							ag_get_repeatable_tech_max_buff = { ag_index = sub_2601_29_tech }
							multiply_variable = { which = ag_sub_2601_29_tech_damage_value value = 0.12 }
							multiply_variable = { which = ag_sub_2601_29_tech_fire_rate_value value = 0.12 }
						}
						ag_add_repeatable_tech_max_buff = { ag_index = sub_2601_29_tech ag_days = @ag_sub_fleet_suppression_2601_effect_days }
						root = { clear_variable = ag_sub_2601_29_tech_id clear_variable = ag_sub_2601_29_tech_damage_value clear_variable = ag_sub_2601_29_tech_fire_rate_value }
					}
				}
				fromfromfrom = { clear_variable = ag_num_ships_temp_1 }
				fromfrom = { clear_variable = ag_num_ships_temp_2 }
			}
		}
	}
}
fleet_event = {
	id = ag_subsystem.72
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = {
		if = {
			limit = { is_in_combat = yes has_fleet_flag = ag_sub_16_flaged }
			every_controlled_ship = {
				limit = { check_modifier_value = { modifier = ship_weapon_range_mult value > 0 } }
				set_variable = { which = ag_weapon_range_factor value = 0 }
				export_modifier_to_variable = { modifier = ship_weapon_range_mult variable = ag_weapon_range_factor }
				if = {
					limit = { check_variable = { which = ag_weapon_range_factor value > 0 } }
					add_modifier = { modifier = "ag_delta_titan_weapon_range_debuff" multiplier = ag_weapon_range_factor days = -1 }
					change_variable = { which = ag_delta_titan_weapon_range_debuff_levels value = 1 }
				}
				clear_variable = ag_weapon_range_factor
			}
			fleet_event = { id = ag_subsystem.72 days = 1 }
		}
		else = { every_controlled_ship = {
			while = {
				count = ag_delta_titan_weapon_range_debuff_levels
				remove_modifier = "ag_delta_titan_weapon_range_debuff"
			}
			clear_variable = ag_delta_titan_weapon_range_debuff_levels
		} }
	}
}
fleet_event = {
	id = ag_subsystem.73
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = {
		if = {
			limit = { is_in_combat = yes has_fleet_flag = ag_sub_28_flaged }
			every_controlled_ship = {
				limit = { OR = {
					check_modifier_value = { modifier = ship_weapon_damage value > 0 }
					check_modifier_value = { modifier = ship_shield_damage_mult value > 0 }
					check_modifier_value = { modifier = ship_armor_damage_mult value > 0 }
					check_modifier_value = { modifier = ship_hull_damage_mult value > 0 }
				} }
				if = {
					limit = { check_modifier_value = { modifier = ship_weapon_damage value > 0 } }
					set_variable = { which = ag_weapon_debuff_factor value = 0 }
					export_modifier_to_variable = { modifier = ship_weapon_damage variable = ag_weapon_debuff_factor }
					if = {
						limit = { check_variable = { which = ag_weapon_debuff_factor value > 0 } }
						add_modifier = { modifier = "ag_wandering_ship_weapon_damage_debuff" multiplier = ag_weapon_debuff_factor days = -1 }
						change_variable = { which = ag_wandering_ship_weapon_damage_debuff_levels value = 1 }
					}
				}
				if = {
					limit = { check_modifier_value = { modifier = ship_shield_damage_mult value > 0 } }
					set_variable = { which = ag_weapon_debuff_factor value = 0 }
					export_modifier_to_variable = { modifier = ship_shield_damage_mult variable = ag_weapon_debuff_factor }
					if = {
						limit = { check_variable = { which = ag_weapon_debuff_factor value > 0 } }
						add_modifier = { modifier = "ag_wandering_ship_shield_damage_debuff" multiplier = ag_weapon_debuff_factor days = -1 }
						change_variable = { which = ag_wandering_ship_shield_damage_debuff_levels value = 1 }
					}
				}
				if = {
					limit = { check_modifier_value = { modifier = ship_armor_damage_mult value > 0 } }
					set_variable = { which = ag_weapon_debuff_factor value = 0 }
					export_modifier_to_variable = { modifier = ship_armor_damage_mult variable = ag_weapon_debuff_factor }
					if = {
						limit = { check_variable = { which = ag_weapon_debuff_factor value > 0 } }
						add_modifier = { modifier = "ag_wandering_ship_armor_damage_debuff" multiplier = ag_weapon_debuff_factor days = -1 }
						change_variable = { which = ag_wandering_ship_armor_damage_debuff_levels value = 1 }
					}
				}
				if = {
					limit = { check_modifier_value = { modifier = ship_hull_damage_mult value > 0 } }
					set_variable = { which = ag_weapon_debuff_factor value = 0 }
					export_modifier_to_variable = { modifier = ship_hull_damage_mult variable = ag_weapon_debuff_factor }
					if = {
						limit = { check_variable = { which = ag_weapon_debuff_factor value > 0 } }
						add_modifier = { modifier = "ag_wandering_ship_hull_damage_debuff" multiplier = ag_weapon_debuff_factor days = -1 }
						change_variable = { which = ag_wandering_ship_hull_damage_debuff_levels value = 1 }
					}
				}
				clear_variable = ag_weapon_debuff_factor
			}
			fleet_event = { id = ag_subsystem.73 days = 1 }
		}
		else = { every_controlled_ship = {
			while = {
				count = ag_wandering_ship_weapon_damage_debuff_levels
				remove_modifier = "ag_wandering_ship_weapon_damage_debuff"
			}
			while = {
				count = ag_wandering_ship_shield_damage_debuff_levels
				remove_modifier = "ag_wandering_ship_shield_damage_debuff"
			}
			while = {
				count = ag_wandering_ship_armor_damage_debuff_levels
				remove_modifier = "ag_wandering_ship_armor_damage_debuff"
			}
			while = {
				count = ag_wandering_ship_hull_damage_debuff_levels
				remove_modifier = "ag_wandering_ship_hull_damage_debuff"
			}
			clear_variable = ag_wandering_ship_weapon_damage_debuff_levels
			clear_variable = ag_wandering_ship_shield_damage_debuff_levels
			clear_variable = ag_wandering_ship_armor_damage_debuff_levels
			clear_variable = ag_wandering_ship_hull_damage_debuff_levels
		} }
	}
}
fleet_event = {
	id = ag_subsystem.74
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = this }
	immediate = {
		if = { limit = { is_in_combat = no } destroy_fleet = { target = this kill_leader = yes destroy_template = yes } }
		else = { fleet_event = { id = ag_subsystem.74 days = 1 } }
	}
}
# ag_on_system_selector_confirm, Eta titan's hallucination
country_event = {
	id = ag_subsystem.75
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_country_flag = ag_enabled_eta_hallucination_target_selector }
	immediate = {
		remove_country_flag = ag_enabled_eta_hallucination_target_selector
		every_system = {
			limit = { has_star_flag = ag_system_selector_selected_system }
			remove_star_flag = ag_system_selector_selected_system
			if = {
				limit = { root = { NOT = { has_country_flag = ag_eta_titan_phantom_spawned } } }
				root = {
					set_country_flag = ag_eta_titan_phantom_spawned
					random_controlled_ship = {
						limit = { OR = { is_ship_size = ag_eta_titan_0 is_ship_size = ag_eta_titan_1 } NOT = { has_ship_flag = ag_eta_titan_phantom_cooldown } }
						set_ship_flag = ag_eta_titan_phantom_cooldown
						prevprev = { create_fleet = {
							name = "NAME_ag_eta_titan_phantom_fleet"
							settings = {
								is_boss = yes
								spawn_debris = no
								can_change_composition = no
								can_change_leader = no
								can_disband = no
								can_upgrade = no
							}
							effect = {
								set_fleet_flag = ag_has_ancient_ship_in_fleet
								set_fleet_flag = ag_eta_titan_phantom_player_fleet
								set_owner = root
								create_ship = {
									name = "NAME_ag_eta_titan_phantom_ship"
									design = "NAME_ag_eta_titan_phantom_player"
									prefix = no
									effect = {
										ag_difficulty_bonus = yes
										ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = invincible }
										ag_delayed_delete_ship = { ag_days = @ag_sub_eta_hallucination_remote_effect_days }
									}
								}
								set_location = { target = prev.star distance = 0 angle = random }
								fleet_event = { id = ag_subsystem.74 days = 1 }
								root = { create_message = {
									type = "message_ag_eta_hallucination_spawn"
									localization = "message_ag_eta_hallucination_spawn_desc"
									days = 30
									target = prev
									variable = {
										type = name
										localization = "ag_target_system"
										scope = prevprev
									}
								} }
							}
						} }
					}
				}
			}
		}
	}
	after = {
		if = { limit = { has_country_flag = ag_eta_titan_phantom_spawned } remove_country_flag = ag_eta_titan_phantom_spawned }
		ag_system_selector_after_effect = yes
		ag_clear_system_selection = yes
	}
}

# Starlight II enhance new leaders
country_event = {
	id = ag_subsystem.81
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			AND = {
				has_country_flag = ag_ship_subsystem_enabled_2501_26
				has_country_flag = ag_lost_ancient_ship_science_ship_form_active
				from = { leader_class = scientist }
			}
			AND = {
				has_country_flag = ag_ship_subsystem_enabled_2501_27
				has_country_flag = ag_lost_ancient_ship_battleship_form_active
				from = { leader_class = admiral }
			}
		}
		exists = event_target:ag_starlight_2_ship
		is_same_value = event_target:ag_starlight_2_ship.owner
	}
	immediate = {
		if = {
			limit = {
				has_country_flag = ag_ship_subsystem_enabled_2501_26
				has_country_flag = ag_lost_ancient_ship_science_ship_form_active
				from = { leader_class = scientist }
			}
			from = {
				add_skill = 1
				random_list = { 10 = { add_skill = 2 } 40 = { add_skill = 1 } 50 = { } }
				reroll_random = yes
				random_list = {
					110 = { }
					# 220 available totally.
					20 = { modifier = { factor = 0 has_trait = leader_trait_meticulous_2 } ag_add_trait = { ag_trait = leader_trait_meticulous ag_max_level = 2 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_spark_of_genius_2 } ag_add_trait = { ag_trait = leader_trait_spark_of_genius ag_max_level = 2 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_carefree_2 } ag_add_trait = { ag_trait = leader_trait_carefree ag_max_level = 2 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_roamer_2 } ag_add_trait = { ag_trait = leader_trait_roamer ag_max_level = 2 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_maniacal_2 } ag_add_trait = { ag_trait = leader_trait_maniacal ag_max_level = 2 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_materials_3 } ag_add_trait = { ag_trait = leader_trait_expertise_materials ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_propulsion_3 } ag_add_trait = { ag_trait = leader_trait_expertise_propulsion ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_voidcraft_3 } ag_add_trait = { ag_trait = leader_trait_expertise_voidcraft ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_industry_3 } ag_add_trait = { ag_trait = leader_trait_expertise_industry ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_field_manipulation_3 } ag_add_trait = { ag_trait = leader_trait_expertise_field_manipulation ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_particles_3 } ag_add_trait = { ag_trait = leader_trait_expertise_particles ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_psionics_3 } ag_add_trait = { ag_trait = leader_trait_expertise_psionics ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_computing_3 } ag_add_trait = { ag_trait = leader_trait_expertise_computing ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_biology_3 } ag_add_trait = { ag_trait = leader_trait_expertise_biology ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_statecraft_3 } ag_add_trait = { ag_trait = leader_trait_expertise_statecraft ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_military_theory_3 } ag_add_trait = { ag_trait = leader_trait_expertise_military_theory ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_expertise_new_worlds_3 } ag_add_trait = { ag_trait = leader_trait_expertise_new_worlds ag_max_level = 3 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_archaeologist_2 } ag_add_trait = { ag_trait = leader_trait_archaeologist ag_max_level = 2 } }
					10 = { modifier = { factor = 0 has_trait = leader_trait_slippery_3 } ag_add_trait = { ag_trait = leader_trait_slippery ag_max_level = 3 } }
					10 = {
						modifier = { factor = 0 OR = { root = { has_ethic = "ethic_gestalt_consciousness" } has_trait = leader_trait_custom_AI_assistant } }
						add_trait = leader_trait_custom_AI_assistant
					}
					10 = {
						modifier = { factor = 0 OR = {
							root = { has_ethic = "ethic_gestalt_consciousness" }
							root = { has_policy_flag = ai_outlawed }
							has_trait = leader_trait_custom_AI_assistant }
						}
						add_trait = leader_trait_sapient_AI_assistant
					}
				}
				reroll_random = yes
			}
		}
		else = {
			from = {
				add_skill = 1
				random_list = { 10 = { add_skill = 2 } 40 = { add_skill = 1 } 50 = { } }
				reroll_random = yes
				random_list = {
					45 = { }
					# 80
					10 = { modifier = { factor = 0 has_trait = leader_trait_trickster_2 } add_trait = leader_trait_trickster }
					10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } add_trait = leader_trait_engineer }
					10 = { modifier = { factor = 0 has_trait = leader_trait_aggressive_2 } add_trait = leader_trait_aggressive }
					20 = { modifier = { factor = 0 has_trait = leader_trait_cautious_2 } add_trait = leader_trait_cautious }
					10 = { modifier = { factor = 0 has_trait = leader_trait_scout_2 } add_trait = leader_trait_scout }
					10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } add_trait = leader_trait_unyielding }
					10 = { modifier = { factor = 0 has_trait = leader_trait_gale_speed_3 } add_trait = leader_trait_gale_speed }
					10 = {
						modifier = { factor = 0 OR = { root = { has_authority = "auth_machine_intelligence" } has_trait = leader_trait_fleet_logistician } }
						add_trait = leader_trait_fleet_logistician
					}
				}
				reroll_random = yes
			}
		}
	}
}

# Ship repair effect after entering bypass via ancient gateway
fleet_event = {
	id = ag_subsystem.91
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = { has_country_flag = ag_ship_subsystem_enabled_601_33 }
		fromfrom = { any_system_megastructure = { is_megastructure_type = ag_ancient_eta_gateway_galactic_gateway } }
	}
	immediate = { every_controlled_ship = { repair_ship = yes } }
}
fleet_event = {
	id = ag_subsystem.92
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = { has_country_flag = ag_ship_subsystem_enabled_601_33 }
		fromfrom = { any_system_megastructure = { is_megastructure_type = ag_ancient_eta_gateway_lgate } }
	}
	immediate = { every_controlled_ship = { repair_ship = yes } }
}
fleet_event = {
	id = ag_subsystem.93
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = { has_country_flag = ag_ship_subsystem_enabled_601_33 }
		fromfrom = { any_system_megastructure = { is_megastructure_type = ag_ancient_eta_gateway_ancient_gateway } }
	}
	immediate = { every_controlled_ship = { repair_ship = yes } }
}
fleet_event = {
	id = ag_subsystem.94
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = { has_country_flag = ag_ship_subsystem_enabled_601_33 }
		fromfrom = { any_system_megastructure = { OR = {
			is_megastructure_type = ag_ancient_eta_gateway_wormhole_temporary
			is_megastructure_type = ag_ancient_eta_gateway_wormhole_temporary_alt
		} } }
	}
	immediate = { every_controlled_ship = { repair_ship = yes } }
}

# on_ship_destroyed_perp, Gain Zro from destroy ships via alpha psi weapon.
country_event = {
	id = ag_subsystem.100
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = ag_ship_subsystem_enabled_101_41
		fromfrom = {
			NOT = { has_ship_flag = ag_event_alpha_titan }
			OR = {
				is_ship_size = ag_alpha_titan_0
				is_ship_size = ag_alpha_titan_1
			}
		}
	}
	immediate = { add_resource = { sr_zro = @ag_alpha_ship_zro_output } }
}
ship_event = {
	id = ag_subsystem.101
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_ship_flag = ag_alpha_titan_psi_shield_enabled }
	immediate = {
		subtract_variable = { which = ag_alpha_psi_shield_days value = 1 }
		if = {
			limit = { check_variable = { which = ag_alpha_psi_shield_days value <= 0 } }
			clear_variable = ag_alpha_psi_shield_days
			ag_clear_disable_at_health = { ag_disable_type = invincible }
			ag_alpha_titan_player_remove_psi_shield_effect = yes
		}
		else = { ship_event = { id = ag_subsystem.101 days = 1 } }
	}
	# after = { if = { limit = { NOT = { is_variable_set = ag_alpha_psi_shield_days } } ag_alpha_titan_player_remove_psi_shield_effect = yes } }
}
ship_event = {
	id = ag_subsystem.102
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { exists = owner owner = { has_country_flag = ag_ship_subsystem_enabled_101_42 } }
			if = {
				limit = { check_variable = { which = ag_alpha_psi_shield_charge value < @ag_alpha_psi_shield_charge_days_max } }
				change_variable = { which = ag_alpha_psi_shield_charge value = @ag_alpha_psi_shield_charge_speed }
				if = {
					limit = { check_variable = { which = ag_alpha_psi_shield_charge value < @ag_alpha_psi_shield_charge_days_max } }
					ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
				}
				else_if = {
					limit = { check_variable = { which = ag_alpha_psi_shield_charge value > @ag_alpha_psi_shield_charge_days_max } }
					set_variable = { which = ag_alpha_psi_shield_charge value = @ag_alpha_psi_shield_charge_days_max }
				}
			}
		}
		else_if = { limit = { is_variable_set = ag_alpha_psi_shield_charge } clear_variable = ag_alpha_psi_shield_charge }
	}
}
