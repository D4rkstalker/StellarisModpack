namespace = sleeper_awakes

#Events for a rude awakening: the berserker hive

#triggers whenever a drone countries/ a hive planet gets occupied or bombed to zero pops. 
planet_event = {
	id = sleeper_awakes.05
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			OR = {
				is_country_type = scrambled_drones
				is_country_type = the_sleeper_fallen
				is_country_type = berserker_awoken_hive
			}
		}
		FROMFROM = {
			NOT = {
				is_sleeper = yes
			}
		}
	}
	
	immediate = {
		set_owner = FROMFROM
		if = {
			limit = {
				FROM = {
					AND = {
						is_country_type = scrambled_drones
						NOT = {
							has_country_flag = eternal_slumber   #this flag prevents a second berserker awakening through the variable
						}
					}
				}
			}
			FROM = {
				destroy_country = yes
			}
			random_country = {
				limit = {
					is_sleeper = yes
				}
				random_list = {
					70 = {
						change_variable  = { 
							which = sleeper_agitation 
							value = 25
						}
					}
					20 = {
						change_variable  = { 
							which = sleeper_agitation 
							value = 30
						}
					}
					10 = {
						change_variable  = { 
							which = sleeper_agitation 
							value = 15
						}
					}
				}
				country_event = { id = sleeper_awakes.01 }
				country_event = { id = sleeper_awakes.16 }
			}
		}
		if = {
			limit = {
				AND = {
					has_planet_flag = sleeper_secondary_core_world
					FROM = {
						AND = {
							is_sleeper = yes
							NOT = {
								has_country_flag = eternal_slumber
							}
						}
					}
				}
			}
			random_country = {
				limit = {
					is_sleeper = yes
				}
				random_list = {
					25 = {
						change_variable  = { 
							which = sleeper_agitation 
							value = 60
						}
					}
					75 = {
						change_variable  = { 
							which = sleeper_agitation 
							value = 80
						}
					}
				}
				country_event = { id = sleeper_awakes.01 }
				country_event = { id = sleeper_awakes.16 }
			}
		}
		if = {
			limit = {
				AND = {
					FROM = {
						AND = {
							is_country_type = the_sleeper_fallen
							NOT = {
								has_country_flag = eternal_slumber
							}
						}
					}
					has_planet_flag = hive_core_world
				}
			}
			random_country = {
				limit = {
					is_sleeper = yes
				}
				change_variable  = {
					which = sleeper_agitation 
					value = 101
				}
				country_event = { id = sleeper_awakes.01 }
			}
		}
	}
}

#trigger event for destroying sleeper fleets
country_event = {
	id = sleeper_awakes.18
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			NOT = {
				has_country_flag = eternal_slumber
			}
			is_country_type = the_sleeper_fallen
			FromFrom = {
				OR = {
					has_fleet_flag = sleeper_core_fleet
					has_fleet_flag = sleeper_core_fleet_unbound
				}
			}
		}
	}
	
	immediate = {
		random_list = {
			50 = { 
				change_variable  = { 
					which = sleeper_agitation 
					value = 50
				}
			}
			50 = {
				change_variable  = { 
					which = sleeper_agitation 
					value = 60
				}
			}
		}
		country_event = { id = sleeper_awakes.01 }
		country_event = { id = sleeper_awakes.16 }
	}
}

#trigger event for loosing a fight with sleeper fleets
country_event = {
	id = sleeper_awakes.19
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			FROM = {
				NOT = {
					has_country_flag = eternal_slumber
				}
				is_country_type = the_sleeper_fallen
			}
			FROMFROMFROM = {
				OR = {
					has_fleet_flag = sleeper_core_fleet
					has_fleet_flag = sleeper_core_fleet_unbound
				}
			}
		}
	}
	
	immediate = {
		FROM = {
			random_list = {
				25 = { 
					change_variable  = { 
						which = sleeper_agitation 
						value = 8
					}
				}
				75 = {
					change_variable  = { 
						which = sleeper_agitation 
						value = 4
					}
				}
			}
			country_event = { id = sleeper_awakes.01 }
			country_event = { id = sleeper_awakes.16 }
		}
	}
}

#gatekeeper event for the berserker awakening
country_event = {
	id = sleeper_awakes.01
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			check_variable = {
				which = sleeper_agitation 
				value > 99
			}
			is_country_type = the_sleeper_fallen
			NOT = {
				has_country_flag = eternal_slumber
			}
			any_owned_planet = {
				has_planet_flag = hive_original_homeworld
			}
		}
	}
	
	immediate = {
		country_event = { id = sleeper_awakes.02 }
	#no second awakening through the aggro variable
		set_country_flag = eternal_slumber
	#stop the event that randomly adds aggro points
		set_country_flag = no_aggro_checks
	}
}


#final warning from TN-3. triggered by accumulating 80 agitation points. Also adds reinforcements to one drone planet.
#gatekeeper
country_event = {
	id = sleeper_awakes.16
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			check_variable = { 
				which = sleeper_agitation 
				value > 79
			}
			check_variable = { 
				which = sleeper_agitation 
				value < 101
			}
			NOT = {
				has_country_flag = sleeper_warning_already_called
			}
		}
	}
	
	immediate = {
		set_country_flag = sleeper_warning_already_called
		every_country = {
			limit = {
				has_country_flag = sleeper_encountered
			}
			country_event = { id = sleeper_awakes.13 }
		}
		if = {
			limit = {
				any_country = {
					is_country_type = scrambled_drones
				}
			}
			random_country = {
				limit = {
					is_country_type = scrambled_drones
				}
				spawn_sleeper_admiral = yes
				random_owned_planet = {
					spawn_sleeper_drone_country_fleet = yes
				}
			}
		}
	}
}

#diplo event that shows to everyone
country_event = {
	id = sleeper_awakes.13
	title = sleeper_awakes.13.title
	desc = sleeper_awakes.13.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = hive_researcher_enclave
			}
			save_event_target_as = contact_empire
		}
		random_country = {
			limit = {
				is_sleeper = yes
			}
			save_event_target_as = the_sleeper
		}
	}
	
	option = {
		name = sleeper_awakes.13.a
	}
}

#event for actual berserker awakening. Gets triggered on the sleeper itself.
#wakey wakey, bakey bakey, you are going to get purged, you filthy filthy xeno scum
country_event = {
	id = sleeper_awakes.02
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		save_event_target_as = the_sleeper
	#annex all remaining drone countries
		every_country = {
			limit = {
				is_country_type = scrambled_drones
			}
			country_event = { id = sleeper_awakes.06 }
		}
	#The hive enclave makes its announcement
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = { id = sleeper_awakes.03 }
		}
	#change country type
		set_country_type = berserker_awoken_hive
	#change civics to activate berserker AI
		change_government = {
			authority = auth_hive_mind
			civics = { 
				civic = civic_devouerer
				civic = civic_scrambled_drones 
			} 
		}
	#lock the two main fleets to remain in their system (hindered by Tony). if any ships enter the system, they are unlocked and free to attack again.
		if = {
			limit = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
			every_owned_fleet = {
				limit = {
					has_fleet_flag = sleeper_core_fleet
				}
				set_event_locked = yes
				set_fleet_flag = sleeper_locked
			}
		}
	#make sure that the livestock on the farm doesn't get purged during the hives awakening. Well, sort off.
		country_event = { id = sleeper_awakes.12 days = 35 }
	#start the event to put it back to sleep (between four and eight years) and set its variable
		country_event = { id = sleeper_awakes.07 days = 1440 random = 2880 }
	#TN-3's fate
		if = {
			limit = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
			every_country = {
				limit = {
					is_country_type = hive_researcher_enclave
				}
				set_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
			}
			country_event = { id = sleeper_tony.01 days = 100 }
		}
	#spawn fleets and armies
		while = {
			count = 2
			spawn_sleeper_berserk_admiral = yes
			random_owned_planet = {
				limit = {
					has_planet_flag = hive_core_world
				}
				
				spawn_sleeper_berserker_fleet_large = yes
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = hive_core_world
				}
				while = {
					count = 14
					create_army = {
						name = random
						owner = prev.owner
						species = prev.owner
						type = "xenomorph_army"
					}
					create_army = {
						name = random
						owner = prev.owner
						species = prev.owner
						type = "xenomorph_army"
					}
				}
				while = {
					count = 2
					create_fleet = {
						effect = {
							set_owner = prev.owner
							sleeper_spawn_construction_ship = yes			
						}
					}
				}
			}
		}
		while = {
			count = 4
			spawn_sleeper_berserk_admiral = yes
			random_owned_planet = {
				spawn_sleeper_berserker_fleet_small_random = yes
				while = {
					count = 10
					create_army = {
						name = random
						owner = prev.owner
						species = prev.owner
						type = "xenomorph_army"
					}
				}
			}
		}
#if any (default) country is strong enough, more fleets will be spawned
		if = {
			limit = {
				any_country = {
					is_country_type = default
					fleet_power > 50000
				}
			}
			while = {
				count = 2
				spawn_sleeper_berserk_admiral = yes
				random_owned_planet = {
					limit = {
						has_planet_flag = hive_core_world
					}
					spawn_sleeper_berserker_fleet_large = yes
				}
				random_owned_planet = {
					limit = {
						has_planet_flag = hive_core_world
					}
					while = {
						count = 4
						create_army = {
							name = random
							owner = prev.owner
							species = prev.owner
							type = "xenomorph_army"
						}
						create_army = {
							name = random
							owner = prev.owner
							species = prev.owner
							type = "xenomorph_army"
						}
					}
				}
			}
		}
	#start reinforcement- cycle. get 4 new berserker fleets every 200 days until it goes back to sleep
		country_event = { id = sleeper_awakes.20 days = 30 }
	#the sleeper becomes hostile towards everybody who bought the neutrality upgrade again
		every_country = {
			limit = {
				has_country_flag = pacifying_upgrade_active
			}
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
			remove_country_flag = pacifying_upgrade_active
		}
	}
}

#citizenship reset. hiveminded pops get citizenship, non hiveminded become livestock.
country_event = {
	id = sleeper_awakes.12
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				is_sleeper = yes
			}
			save_event_target_as = sleeper
		}
		every_owned_pop = {
			limit = {
				species = {
					AND = {
						has_trait = trait_hive_mind
						NOT = {
							has_citizenship_type = {
								country = event_target:sleeper
								type = citizenship_full
							}
						}
					}
				}
			}
			set_citizenship_type = {
				country = this
				type = citizenship_full
				cooldown = yes
			}
		}
	}
}

#TN-3 announces the hives awakening, gets interrupted by the hive itself. if the enclave is dead already, then this is replaced by a dialogue window with the hive.
country_event = {
	id = sleeper_awakes.03
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		planet_background = event_target:contact_empire 
		graphical_culture = event_target:contact_empire 
		city_level = event_target:contact_empire 
		room = event_target:contact_empire.ruler 
	}
	title = sleeper_awakes.03.title
	desc = {
		text = sleeper_awakes.03.desc.enclave
		trigger = {
			any_country = {
				is_country_type = hive_researcher_enclave
			}
		}
	}
	desc = {
		text = sleeper_awakes.03.desc.hive
		trigger = {
			NOT = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = berserker_awoken_hive
			}
			save_event_target_as = berserker_hive
		}
		if = {
			limit = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
			random_country = {
				limit = {
					is_country_type = hive_researcher_enclave
				}
				save_event_target_as = contact_empire
			}
		}
		if = {
			limit = {
				NOT = {
					any_country = {
						is_country_type = hive_researcher_enclave
					}
				}
			}
			random_country = {
				limit = {
					is_country_type = berserker_awoken_hive
				}
				save_event_target_as = contact_empire
			}
		}
	}
	
	option = {
		name = sleeper_awakes.03.a
		hidden_effect = {
			country_event = { id = sleeper_awakes.04 }
		}
	}
}

country_event = {
	id = sleeper_awakes.04
	title = sleeper_awakes.04.title
	desc = sleeper_awakes.04.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		planet_background = event_target:contact_empire 
		graphical_culture = event_target:contact_empire 
		city_level = event_target:contact_empire 
		room = event_target:contact_empire.ruler 
	}
	title = sleeper_awakes.04.title
	desc = sleeper_awakes.04.desc
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = berserker_awoken_hive
			}
			save_event_target_as = contact_empire
		}
	}
	
	option = {
		name = sleeper_awakes.04.a
	}
}

#event that gives the hive control over all remaining drone country fleets and planets and then nukes the remains
country_event = {
	id = sleeper_awakes.06
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = scrambled_drones
	}
	
	immediate = {
		every_owned_fleet = {
			set_owner = event_target:the_sleeper
			set_fleet_flag = sleeper_berserker_fleet
		}
		every_owned_planet = {
			set_owner = event_target:the_sleeper
		}
		destroy_country = yes
	}
}

#the hive goes back to sleep
country_event = {
	id = sleeper_awakes.07
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			is_country_type = the_sleeper_fallen
		}
	}
	
	immediate = {
		save_event_target_as = the_sleeper
	#change the country type back again 
		set_country_type = the_sleeper_fallen
	#change civics
		change_government = {
			authority = auth_hive_mind
			civics = { 
				civic = civic_sleeper
				civic = civic_scrambled_drones
			}
		}
	#unlock core fleet and move the three advanced fleets back to the hives borders
		random_owned_planet = {
			limit = {
				is_capital = yes
			}
			save_event_target_as = sleeper_capital
		}
		every_owned_fleet = {
			limit = {
				has_fleet_flag = sleeper_core_fleet
			}
			set_event_locked = no
			auto_move_to_planet = {
				target = event_target:sleeper_capital
				clear_auto_move_on_arrival = yes
			}
		}
		random_owned_planet = {
			limit = {
				has_planet_flag = sleeper_secondary_core_world
			}
			save_event_target_as = sleeper_annex
		}
		every_owned_fleet = {
			limit = {
				has_fleet_flag = sleeper_core_fleet_unbound
			}
			auto_move_to_planet = {
				target = event_target:sleeper_annex
				clear_auto_move_on_arrival = yes
			}
		}
	#all berserker fleets will now remain where they are, doing nothing
		every_owned_fleet = {
			limit = {
				has_fleet_flag = sleeper_berserker_fleet
			}
			clear_orders = yes
			set_fleet_stance = passive
			add_modifier = { modifier = sleeper_disconnected_drones days = -1 }
		}
	#restore citizenship again
		country_event = { id = sleeper_awakes.12 days = 10 }
	#announcement
		every_country = {
			limit = {
				has_communications = event_target:the_sleeper
			}
			country_event = { id = sleeper_awakes.14 }
		}
	}
}

country_event = {
	id = sleeper_awakes.14
	title = sleeper_awakes.14.title
	desc = sleeper_awakes.14.desc
	
	is_triggered_only = yes
	
	trigger = {
		any_country = {
			is_sleeper = yes
		}
	}
	
	option = {
		name = sleeper_awakes.14.a
	}
}

#gatekeeper that triggers if the capital world gets taken whilst in berserker mode. puts the hive back to sleep.
planet_event = {
	id = sleeper_awakes.09
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			FROM = {
				is_country_type = berserker_awoken_hive
			}
			ROOT = {
				has_planet_flag = hive_original_homeworld
			}
		}
	}
	
	immediate = {
		FROM = {
			country_event = { id = sleeper_awakes.07 }
		}
	}
}

#event when the berserker/sleeping hive takes a planet. Some pops get converted to drones, while the rest gets purged or turned into livestock, depending on its current country type. Pops that were part of a hive before are put to work instantly. Robots are broken down. The original owner gets a country flag for the liberation event.
planet_event = {
	id = sleeper_awakes.10
	hide_window = yes
	
	trigger = {
		OR = {
			FROMFROM = {
				OR = {
					is_country_type = berserker_awoken_hive
					is_country_type = the_sleeper_fallen
					is_country_type = awakened_sleeper
				}
			}
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		save_event_target_as = conquered_planet
		FROM = {
			country_event = { id = sleeper_awakes.11 }
			set_country_flag = former_owner@event_target:conquered_planet
		}
		set_owner = FROMFROM
	#find out the rough amount of pops on the planet. Why can't I just turn this into a variable? Why, paradox? WHY?
		if = {
			limit = {
				num_pops <= 5
			}
			set_variable = {
				which = pop_modifier_amount 
				value = 3
			}
		}	
		if = {
			limit = {
				AND = {
					num_pops > 5
					num_pops <= 10
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 9
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 10
					num_pops <= 20
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 21
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 20
					num_pops <= 30
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 29
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 30
					num_pops <= 40
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 39
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 40
					num_pops <= 60
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 49
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 60
					num_pops <= 80
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 69
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 80
					num_pops <= 100
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 90
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 100
					num_pops <= 120
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 108
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 110
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 110
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 120
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 120
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 130
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 130
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 140
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 140
			}
		}
		if = {
			limit = {
				AND = {
					num_pops > 150
				}
			}
			set_variable = { 
				which = pop_modifier_amount 
				value = 150
			}
		}
	#add hive minded trait to roughly one third of all (organic) pops. If the sleeper is awoken, then add it to half of them
		if = {
			limit = {
				FROM = {
					NOT = {
						has_authority = auth_hive_mind
					}
				}
			}
			if = {
				limit = {
					NOT = {
						FROMFROM = {
							is_country_type = awakened_sleeper
						}
					}
				}
				divide_variable = { 
					which = pop_modifier_amount 
					value = 3
				}
			}
			if = {
				limit = {
					FROMFROM = {
						is_country_type = awakened_sleeper
					}
				}
				divide_variable = { 
					which = pop_modifier_amount 
					value = 2 
				}
			}
			while = {
				count = pop_modifier_amount
				random_owned_pop = {
					limit = {
						species = {
							NOR = {
								has_trait = trait_mechanical
								has_trait = trait_machine_unit
								has_trait = trait_hive_mind
							}
						}
					}
					modify_species = {
						species = this
						add_trait = trait_hive_mind
						add_traits_at_start_of_list = yes
					}
				}
			}
		}
	#purge some pops
		set_variable = {
			which = pop_purge_amount 
			value = pop_modifier_amount 
		}
		divide_variable = { 
			which = pop_purge_amount 
			value = 10
		}
		while = {
			count = pop_purge_amount
			random_owned_pop = {
				kill_pop = yes
			}
		}
	#all drones get right citizenship
		FROMFROM = {
			country_event = { id = sleeper_awakes.12 days = 1 }
		}
	#one livestock pop will be resettled to the farms. only works if it hasn't been taken yet.
		if = {
			limit = {
				FROMFROM = {
					any_owned_planet = {
						has_planet_flag = sleeper_farms
					}
				}
			}
			FROMFROM = {
				random_owned_planet = {
					limit = {
						has_planet_flag = sleeper_farms
					}
					save_event_target_as = the_farms
				}
				event_target:conquered_planet = {
					random_pop = {
						limit = {
							species = {
								NOR = {
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
									has_trait = trait_hive_mind
								}
							}
						}
						save_event_target_as = new_food
					}
				}
				event_target:the_farms = {
					resettle_pop = {
						pop = event_target:new_food
						planet = event_target:the_farms
					}
				}
			}
		}
	}
}

#diplomatic event for original owner afterwards
country_event = {
	id = sleeper_awakes.11
	title = sleeper_awakes.11.title
	desc = {
		trigger {
			has_authority = auth_hive_mind
		}	
		text = sleeper_awakes.11.desc.hi
	}
	desc = {
		trigger {
			has_authority = auth_machine_intelligence
		}	
		text = sleeper_awakes.11.desc.ma
	}
	desc = {	
		trigger {
			NOR = {
				has_authority = auth_hive_mind
				has_authority = auth_machine_intelligence
			}
		}
		text = sleeper_awakes.11.desc.no
	}
	picture = GFX_evt_victorious_army
	
	is_triggered_only = yes
	
	option = {
		name = sleeper_awakes.11.a
	}
}

#liberating a planet from the frenzied hive, altered from the marauder events
#Sleeper Planet Liberated (HIDDEN)
country_event = {
	id = sleeper_awakes.24
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = { 
			OR = {
				is_country_type = the_sleeper_fallen
				is_country_type = berserker_awoken_hive
			}
		}
	}

	immediate = {
		random_country = {
			limit = { has_country_flag = former_owner@fromfrom }
			save_event_target_as = planet_former_owner
		}
		fromfrom = { save_event_target_as = liberated_planet }
		if = { # Planet belonged to liberator
			limit = {
				event_target:planet_former_owner = { is_same_value = root }
			}
			country_event = { id = sleeper_awakes.25 }
			break = yes
		}
		if = { # Planet belonged to someone else
			limit = {
				event_target:planet_former_owner = { 
					NOT = { is_same_value = root } 
				}
			}
			country_event = { id = sleeper_awakes.26 }
			break = yes
		}
		if = { # Planet's former owner no longer exists
			limit = {
				NOT = { exists = event_target:planet_former_owner }
			}
			country_event = { id = sleeper_awakes.27 }
		}
	}
}

# Liberated Own Planet
country_event = {
	id = sleeper_awakes.25
	title = sleeper_awakes.liberate.name
	desc = sleeper_awakes.25.desc
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	location = event_target:liberated_planet

	is_triggered_only = yes

	option = {
		name = sleeper_awakes.25.a
		event_target:liberated_planet = {
			set_owner = root
		}
	}	
}

# Liberated Someone Else's Planet
country_event = {
	id = sleeper_awakes.26
	title = sleeper_awakes.liberate.name
	desc = sleeper_awakes.26.desc
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle

	is_triggered_only = yes

	option = { # Keep planet
		name = sleeper_awakes.26.a
		custom_tooltip = sleeper_awakes.26.a.tooltip
		event_target:planet_former_owner = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_kept_sleeper_planet
			}
		}
		event_target:liberated_planet = {
			set_owner = root
		}
	}
	option = { # Return to former owner
		name = sleeper_awakes.26.b
		custom_tooltip = sleeper_awakes.26.b.tooltip
		event_target:liberated_planet = {
			set_owner = event_target:planet_former_owner
		}
		event_target:planet_former_owner = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_returned_sleeper_planet
			}
		}
		hidden_effect = {
			event_target:planet_former_owner = {
				country_event = { id = sleeper_awakes.28 }
			}
		}
	}	
}

# Liberated Dead Country's Planet
country_event = {
	id = sleeper_awakes.27
	title = sleeper_awakes.liberate.name
	desc = sleeper_awakes.27.desc
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle

	is_triggered_only = yes

	option = {
		name = sleeper_awakes.27.a
		event_target:liberated_planet = {
			set_owner = root
		}
	}	
}

# Liberated Returned to Our Control
country_event = {
	id = sleeper_awakes.28
	title = sleeper_awakes.28.name
	desc = sleeper_awakes.28.desc
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle

	is_triggered_only = yes

	option = {
		name = sleeper_awakes.28.a
	}	
}

#core fleet gets unlocked after a hostile fleet enters the system. Permanently.
ship_event = {
	id = sleeper_awakes.15
	hide_window = yes
	
	trigger = {
		FROM = {
			has_star_flag = sleeper_home_system
		}
		owner = {
			OR = {
				is_country_type = default
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
				is_country_type = swarm
				is_country_type = awakened_marauders
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = ai_empire
				is_country_type = gate_builders
			}
		}
	}
	
	is_triggered_only = yes
	
	immediate = {
		solar_system = {
			every_fleet_in_system = {
				limit = {
					has_fleet_flag = sleeper_core_fleet
				}
				set_event_locked = no
			}
		}
	}
}

#berserker reinforcements 
country_event = {
	id = sleeper_awakes.20
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		while = {
			count = 3
			spawn_sleeper_berserk_admiral = yes
			random_owned_planet = {
				spawn_sleeper_berserker_fleet_small_random = yes
				while = {
					count = 3
					create_army = {
						name = random
						owner = prev.owner
						species = prev.owner
						type = "xenomorph_army"
					}
				}
			}
		}
		if = {
			limit = {
				count_owned_ships = {
					limit = { is_ship_size = constructor }
					count < 1
				}
			}
			capital_scope = {
				sleeper_spawn_construction_ship_full = yes
				sleeper_spawn_construction_ship_full = yes
			}
		}
		if = {
			limit = {
				is_country_type = berserker_awoken_hive
			}
			country_event = {
				id = sleeper_awakes.20
				days = 200
			}
		}
	}
}

#comm event for finding the sleeper during its berserker phase 
country_event = {
	id = sleeper_awakes.22
	title = sleeper.22.title
	desc = sleeper.22.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = event_target:contact_empire 
	}
	
	is_triggered_only = yes

	immediate = {
		save_event_target_as = us_the_contacter
		random_country = {
			limit = {
				is_sleeper = yes
			}
			save_event_target_as = contact_empire
			establish_communications_no_message = event_target:us_the_contacter
		}
		every_country = {
			limit = {
				has_country_flag = the_sleeper
			}
			establish_communications_no_message = event_target:us_the_contacter
			save_event_target_as = sleeper_country
		}
		set_country_flag = sleeper_encountered
	}
	
	option = {
		name = sleeper.22.a
	}
}
	

#agitation from bombarding the farms, the thinkery and the annex
planet_event = {
	id = sleeper_awakes.30
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			is_country_type = the_sleeper_fallen
		}
		OR = {
			has_planet_flag = hive_core_world
			has_planet_flag = sleeper_secondary_core_world
		}
	}
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = the_sleeper_fallen
			}
			change_variable  = { 
				which = sleeper_agitation 
				value = 0.5
			}
			country_event = { id = sleeper_awakes.01 }
			country_event = { id = sleeper_awakes.16 }
		}
	}
}
	
	
	
	