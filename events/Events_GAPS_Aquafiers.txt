namespace = Events_GAPS_Aquaifiers
#
country_event = {
	id = Events_GAPS_Aquaifiers.1
	title = Events_GAPS_Aquaifiers.1.name
	desc = Events_GAPS_Aquaifiers.1.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	trigger = {
		has_origin = Origin_GAPS_Aquaifiers
		OR = {
			last_increased_tech = Tech_GAPS_Pure_Steam_Designs
			last_increased_tech = Tech_GAPS_Pure_Water_Transference
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Lushify_Water_World"
		custom_tooltip = "Events_GAPS_Aquaifiers.Lushify_Water_World.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Lushify_Water_World
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Lushify_Water_World }
			last_increased_tech = Tech_GAPS_Pure_Water_Transference	
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Purify_Waters"
		custom_tooltip = "Events_GAPS_Aquaifiers.Purify_Waters.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Purify_Waters
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Purify_Waters }
			last_increased_tech = Tech_GAPS_Pure_Water_Transference	
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Drown_The_World"
		custom_tooltip = "Events_GAPS_Aquaifiers.Drown_The_World.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Drown_The_World
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Drown_The_World }
			last_increased_tech = Tech_GAPS_Pure_Water_Transference	
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Transfer_Aquatic_Titans"
		custom_tooltip = "Events_GAPS_Aquaifiers.Transfer_Aquatic_Titans.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Transfer_Aquatic_Titans
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Transfer_Aquatic_Titans }
			last_increased_tech = Tech_GAPS_Pure_Water_Transference	
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Pure_Steam_Dispensary"
		custom_tooltip = "Events_GAPS_Aquaifiers.Pure_Steam_Dispensary.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Pure_Steam_Dispensary
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Pure_Steam_Dispensary }
			last_increased_tech = Tech_GAPS_Pure_Steam_Designs	
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Exotic_Steam_Dispensary"
		custom_tooltip = "Events_GAPS_Aquaifiers.Exotic_Steam_Dispensary.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Exotic_Steam_Dispensary
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Exotic_Steam_Dispensary }
			last_increased_tech = Tech_GAPS_Pure_Steam_Designs	
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Steam_Shroud_Generator"
		custom_tooltip = "Events_GAPS_Aquaifiers.Steam_Shroud_Generator.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Steam_Shroud_Generator
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Steam_Shroud_Generator }
			last_increased_tech = Tech_GAPS_Pure_Steam_Designs	
		}
		ai_chance = {
			factor = 20
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Steam_Space_Vents"
		custom_tooltip = "Events_GAPS_Aquaifiers.Steam_Space_Vents.Tooltip"
		hidden_effect = {
			set_country_flag = CountryFlag_GAPS_Steam_Space_Vents
			give_technology = { tech = Tech_GAPS_Steam_Shrouding message = no }	
		}
		trigger = {
			NOT = { has_country_flag = CountryFlag_GAPS_Steam_Space_Vents }
			last_increased_tech = Tech_GAPS_Pure_Steam_Designs	
		}
		ai_chance = {
			factor = 20
		}
	}

}
#
country_event = {
	id = Events_GAPS_Aquaifiers.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = Origin_GAPS_Aquaifiers
	}
	immediate = {
		every_owned_planet = { 
			limit = { is_colony = yes }
			add_modifier = {
				modifier = Planet_Modifier_GAPS_Lush_Water_World
				days = -1
			}
			add_modifier = {
				modifier = Planet_Modifier_GAPS_Pure_Water
				days = -1
			}
			add_deposit = d_GAPS_Pure_Water
			if = { limit = { is_homeworld = yes } set_planet_size = 25 }
		}
		country_event = { id = Events_GAPS_Aquaifiers.4 days = 0 }
		set_country_flag = CountryFlag_GAPS_I_am_Aquaifiers
	}
}
planet_event = {
	id = Events_GAPS_Aquaifiers.3	
	title = "colony_mod.2.name"
	desc = "colony_mod.2.desc"
	picture = GFX_evt_alien_nature
	show_sound = event_air_raid_siren
	location = ROOT
	trackable = yes
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		set_planet_flag = titanic_life_colony_flag
		add_deposit = d_titanic_life_blocker
		add_modifier = {
			modifier = titanic_life
			days = -1
		}
	}
	
	is_triggered_only = yes
	
	option = {
		name = colony_mod.2.a# yes
		# study them, may have bad outcome, such as a hostile unit spawning
		enable_special_project = {
			name = "titanic_life_study_normal"
			location = this
			owner = root
		}
	}
	
	option = {
		name = colony_mod.2.b# no
		#no effect, don't bother them
	}
	
	option = {
		name = colony_mod.2.c
		# study them, bad outcome less likely but takes longer.
		# Remove blockers in success result
		enable_special_project = {
			name = "titanic_life_study_nice"
			location = this
			owner = root
		}
		hidden_effect = {
			set_planet_flag = nice_titan_study
		}
	}
	
	option = {
		name = colony_mod.2.d
		# study them, takes less time but you will likely get a bad effect too
		# huge food output increase
		enable_special_project = {
			name = "titanic_life_study_mean"
			location = this
			owner = root
		}
		add_modifier = {
			modifier = "eat_the_titans"
			days = -1
		}
	}
}

country_event = {
	id = Events_GAPS_Aquaifiers.4
	title = Events_GAPS_Aquaifiers.4.name
	desc = Events_GAPS_Aquaifiers.4.desc
	picture = GFX_evt_unidentified_ship
	show_sound = megastructure_upgraded_01
	hide_window = no
	is_triggered_only = yes

	trigger = {
		has_origin = Origin_GAPS_Aquaifiers
		any_owned_planet = { 
			is_colony = yes
			NOR = {
				is_planet_class = pc_ocean
				is_planet_class = pc_aquatic
				is_planet_class = pc_subarctic
				is_planet_class = pc_desertislands
			}
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Ocean"
		custom_tooltip = "Events_GAPS_Aquaifiers.Ocean.Tooltip"
		every_owned_planet = { 
			limit = { is_colony = yes }
			change_pc = { class = pc_ocean inherit_entity = no }
			reroll_planet_modifiers = yes
			reroll_deposits = yes
			if = { limit = { not = { has_modifier = Planet_Modifier_GAPS_Pure_Water } add_modifier = { modifier = Planet_Modifier_GAPS_Pure_Water days = -1 } }
			if = { limit = { not = { has_deposit = d_GAPS_Pure_Water } add_deposit = d_GAPS_Pure_Water } }
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = { 
					solar_system.owner = { ideal_planet_class = pc_desertislands }
					solar_system.owner = { ideal_planet_class = pc_subarctic }
					solar_system.owner = { ideal_planet_class = pc_aquatic }
					#solar_system.owner = { ideal_planet_class = pc_continental }
					solar_system.owner = { ideal_planet_class = pc_ocean }
				}
			}
		}
	}
	
	option = {
		name = "Events_GAPS_Aquaifiers.Aquatic"
		custom_tooltip = "Events_GAPS_Aquaifiers.Aquatic.Tooltip"
		every_owned_planet = { 
			limit = { is_colony = yes }
			change_pc = { class = pc_aquatic inherit_entity = no }
			reroll_planet_modifiers = yes
			reroll_deposits = yes
			planet_event = { id = pdengine.14 days = 1 }
			if = { limit = { not = { has_modifier = Planet_Modifier_GAPS_Pure_Water } add_modifier = { modifier = Planet_Modifier_GAPS_Pure_Water days = -1 } }
			if = { limit = { not = { has_deposit = d_GAPS_Pure_Water } add_deposit = d_GAPS_Pure_Water } }
			add_deposit = d_aquatic_trench
			add_modifier = { modifier = "aquatic" days = -1 }
		}
		trigger = {
			has_global_flag = planetarydiversity
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = { 
					solar_system.owner = { ideal_planet_class = pc_desertislands }
					solar_system.owner = { ideal_planet_class = pc_subarctic }
					solar_system.owner = { ideal_planet_class = pc_aquatic }
					#solar_system.owner = { ideal_planet_class = pc_continental }
					solar_system.owner = { ideal_planet_class = pc_ocean }
				}
			}
		}
	}

	option = {
		name = "Events_GAPS_Aquaifiers.Subarctic"
		custom_tooltip = "Events_GAPS_Aquaifiers.Subarctic.Tooltip"
		every_owned_planet = { 
			limit = { is_colony = yes }
			change_pc = { class = pc_subarctic inherit_entity = no }
			reroll_planet_modifiers = yes
			reroll_deposits = yes
			planet_event = { id = pdengine.14 days = 1 }
			if = { limit = { not = { has_modifier = Planet_Modifier_GAPS_Pure_Water } add_modifier = { modifier = Planet_Modifier_GAPS_Pure_Water days = -1 } }
			if = { limit = { not = { has_deposit = d_GAPS_Pure_Water } add_deposit = d_GAPS_Pure_Water } }
		}
		trigger = {
			has_global_flag = planetarydiversity
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = { 
					solar_system.owner = { ideal_planet_class = pc_desertislands }
					solar_system.owner = { ideal_planet_class = pc_subarctic }
					solar_system.owner = { ideal_planet_class = pc_aquatic }
					#solar_system.owner = { ideal_planet_class = pc_continental }
					solar_system.owner = { ideal_planet_class = pc_ocean }
				}
			}
		}
	}
	
	option = {
		name = "Events_GAPS_Aquaifiers.Desertislands"
		custom_tooltip = "Events_GAPS_Aquaifiers.Desertislands.Tooltip"
		every_owned_planet = { 
			limit = { is_colony = yes }
			change_pc = { class = pc_desertislands inherit_entity = no }
			reroll_planet_modifiers = yes
			reroll_deposits = yes
			if = { limit = { not = { has_modifier = Planet_Modifier_GAPS_Pure_Water } add_modifier = { modifier = Planet_Modifier_GAPS_Pure_Water days = -1 } }
			if = { limit = { not = { has_deposit = d_GAPS_Pure_Water } add_deposit = d_GAPS_Pure_Water } }
			add_deposit = d_GAPS_Pure_Water
		}
		trigger = {
			has_global_flag = planetarydiversity
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOR = { 
					solar_system.owner = { ideal_planet_class = pc_desertislands }
					solar_system.owner = { ideal_planet_class = pc_subarctic }
					solar_system.owner = { ideal_planet_class = pc_aquatic }
					#solar_system.owner = { ideal_planet_class = pc_continental }
					solar_system.owner = { ideal_planet_class = pc_ocean }
				}
			}
		}
	}
}