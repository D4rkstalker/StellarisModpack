namespace = vbp_machine

#########################
#Natural  outcome  block#
#########################

#Space age
country_event = {
	id = vbp_machine.200
	
	hide_window = yes
	is_triggered_only = yes
		
	immediate = {
		remove_country_flag = vbp_primitive_robots
		set_country_flag = primitives_can_into_space
		set_country_type = default
		IF = {
			limit = {
				has_civic = civic_machine_servitor
			}
			change_government = {
				civics = {
					civic = civic_machine_servitor
					civic = random
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_civic = civic_machine_assimilator
			}
			change_government = {
				civics = {
					civic = civic_machine_assimilator
					civic = random
				}
			}
		}
		ELSE_IF = {
            limit = { 
                OR = {
                    AND = {
                        has_country_flag = vbp_machine_angered 
                        NOT = { exists = from } 
                    }
                    AND = {
                        exists = FROM
                        FROM = { has_civic = civic_machine_terminator }
                    }
                }
            }
            change_government = {
                civics = {
                    civic = civic_machine_terminator
                    civic = random
                }
            }
        }
        ELSE = {
            change_government = {
                civics = random
            }
            while = { #Reroll civics terminator vassals not allowed
                limit = {
                    exists = from
                    FROM = { NOT = { has_civic = civic_machine_terminator } }
                    has_civic = civic_machine_terminator
                }
                change_government = {
                    civics = random
                }
            }
        }
		change_country_flag = random
		add_resource = {
            minerals = 1000
            energy = 500
        }
		set_name = random
		remove_country_flag = day_0
		
		capital_scope = {
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = { country_event = { id = vbp_machine.201 } }
				observation_outpost = { dismantle = yes }
            }
            remove_all_buildings = yes
			remove_all_armies = yes
			
			if = {
				limit = { NOT = { is_planet_class = pc_ringworld_habitable } }
				add_district = district_nexus
				add_district = district_nexus
				add_district = district_nexus
				add_district = district_mining
				add_district = district_mining
				add_district = district_generator
				add_district = district_generator
				add_district = district_generator	
				IF = {
					limit = {
						any_owned_species = {
							is_robotic = no
							is_lithoid = no
						}
					}
					add_district = district_farming
					add_district = district_farming
				}
				ELSE_IF = {
					limit = {
						any_owned_species = {
							is_lithoid = yes
						}
					}
					add_district = district_mining
					add_district = district_mining
				}
				ELSE = {
					add_district = district_generator
					add_district = district_generator
				}
				add_building = building_machine_capital	
				add_building = building_maintenance_depot
				add_building = building_research_lab_1
				add_building = building_foundry_1
				add_building = building_machine_assembly_plant
			}
			if = {
				limit = { is_planet_class = pc_ringworld_habitable }
				add_district = district_rw_nexus
				add_district = district_rw_generator
				IF = {
					limit = {
						any_owned_species = {
							is_robotic = no
							is_lithoid = no
						}
					}
					add_district = district_rw_farming
					add_building = building_chemical_plant
					add_deposit = d_segment_rubble_1
					add_deposit = d_segment_rubble_1
					add_deposit = d_segment_rubble_2
					add_deposit = d_segment_rubble_2
				}
				ELSE = {
					add_building = building_maintenance_depot
				}
				add_building = building_machine_capital	
				add_building = building_crystal_plant
				add_building = building_foundry_1
				add_building = building_machine_assembly_plant
				
				add_building = building_foundry_1
			}

			IF = {
				limit = {
					root = { has_civic = civic_machine_servitor }
				}
				add_building = building_organic_sanctuary
			}
            while = {
                count = 3
                create_pop = { species = root }
			}
			solar_system = {
				if = {
					limit = {
						NOT = { exists = starbase }
					}
					create_starbase = {
						size = starbase_outpost
						owner = root
					}
				}
				else = {
					if = {
						limit = {
							starbase = {
								NOT = { owner = { is_same_value = root } }
							}								
						}	
						starbase = {
							owner = { country_event = { id = primitive.180 days = 10 } }
						}								
					}
				}
			}
		}

		IF = {
			limit = { has_country_flag = mpo_primitive_contact_sender }
			remove_country_flag = mpo_primitive_contact_sender
			random_list = {
				# common ground
				1 = {
					every_country = {
						limit = {
							has_country_flag = mpo_primitive_contact@prev
						}
						remove_country_flag = mpo_primitive_contact@prev
						add_opinion_modifier = {
							who = prev
							modifier = opinion_common_ground
						}
						IF = {
							limit = {
								OR = {
									is_country_type = primitive
									is_country_type = vbp_hive
									is_country_type = vbp_machine
								}	
							}
							set_timed_country_flag = { flag = mpo_common_ground_advance days = 2 }
							country_event = { id = prim_orig.5 }
						}
						ELSE = {
							join_alliance = { who = root override_requirements = yes }
							IF = {
								limit = {
									NOT = { has_country_flag = mpo_common_ground_advance }
								}
								set_federation_leader = this
								add_tradition = tr_diplomacy_adopt
								add_tradition = tr_diplomacy_the_federation
							}
						}
					}
					modifier = {
						factor = 0
						has_country_flag = mpo_hegemon_advance
					}
				}
				# hegemon
				1 = {
					IF = {
						limit = { has_origin = origin_common_ground }
						set_origin = origin_hegemon
					}
					every_country = {
						limit = {
							has_country_flag = mpo_primitive_contact@prev
						}
						remove_country_flag = mpo_primitive_contact@prev
						IF = {
							limit = {
								OR = {
									is_country_type = primitive
									is_country_type = vbp_hive
									is_country_type = vbp_machine
								}	
							}
							set_timed_country_flag = { flag = mpo_hegemon_advance days = 2 }
							country_event = { id = prim_orig.5 }
						}
						ELSE = {
							join_alliance = { who = root override_requirements = yes }
							IF = {
								limit = {
									NOT = { has_country_flag = mpo_hegemon_advance }
								}
								set_federation_leader = this
								add_tradition = tr_diplomacy_adopt
								add_tradition = tr_diplomacy_the_federation
								federation = {
									set_federation_type = hegemony_federation
									set_name = random
									set_federation_law = succession_term_years_20
								}
							}
						}
					}
					modifier = {
						factor = 0
						OR = {
							has_country_flag = mpo_common_ground_advance
							AND = {
								is_egalitarian = yes
								NOT = { has_country_flag = mpo_hegemon_advance 	}
							}
						}
					}
				}
			}
		}

	}
}
