namespace = isb_living

country_event = {
	id = isb_living.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				is_country_type = living_systems
			}

			PREV = {
				set_country_flag = flag_found_living
			}
		}

		if = {
			limit = {
				NOT = { has_country_flag = flag_found_living }
			}

			create_country = {
				name = "[Civilians]"
				type = living_systems
				species = random
				name_list = "PRT1"
				auto_delete = no
			}

			every_country = {
				limit = {
					#is_ai = no
					is_country_type = default
				}
				establish_communications_no_message = last_created_country
			}

			create_country = {
				name = "[Civilians]"
				type = living_systems
				species = random
				name_list = "PRT2"
				auto_delete = no
			}

			every_country = {
				limit = {
					#is_ai = no
					is_country_type = default
				}
				establish_communications_no_message = last_created_country
			}

			create_country = {
				name = "[Civilians]"
				type = living_systems
				species = random
				name_list = "Human"
				auto_delete = no
			}

			every_country = {
				limit = {
					#is_ai = no
					is_country_type = default
				}
				establish_communications_no_message = last_created_country
			}

			create_country = {
				name = "[Civilians]"
				type = living_systems
				species = random
				name_list = "Human2"
				auto_delete = no
			}

			every_country = {
				limit = {
					#is_ai = no
					is_country_type = default
				}
				establish_communications_no_message = last_created_country
			}

			create_country = {
				name = "[Civilians]"
				type = living_systems
				species = random
				name_list = "PRT1"
				auto_delete = no
			}

			every_country = {
				limit = {
					#is_ai = no
					is_country_type = default
				}
				establish_communications_no_message = last_created_country
			}

			create_country = {
				name = "[Civilians]"
				type = living_systems
				species = random
				name_list = "PRT2"
				auto_delete = no
			}

			every_country = {
				limit = {
					#is_ai = no
					is_country_type = default
				}
				establish_communications_no_message = last_created_country
			}

			every_country = {
				limit = { is_ai = no }

				country_event = { id = isb_living.3 days = 15 }

				if = {
					limit = {
						NOT = { has_global_flag = flag_living_ai_spawn_off }
					}
					every_country = {
						limit = {
							is_country_type = default
							is_ai = yes
							NOT = { has_country_flag = flag_living_ai_spawn_tag } # In case there are multiple players
							OR = {
								has_global_flag = flag_living_ai_spawn_all
								AND = {	# Only AIs in contact with player
									has_global_flag = flag_living_ai_spawn_contact
									has_communications = PREV
								}
							}
						}

						#country_event = { id = isb_living.2 days = 2 random = 10 }
						country_event = { id = isb_living.3 days = 3 random = 20 }
						set_timed_country_flag = { flag = flag_living_ai_spawn_tag days = 3 }
					}
				}
			}
		}
		else = {
			remove_country_flag = flag_found_living

			every_country = {
				limit = { is_ai = no }

				country_event = { id = isb_living.3 days = 10 }

				if = {
					limit = {
						NOT = { has_global_flag = flag_living_ai_spawn_off }
					}
					every_country = {
						limit = {
							is_country_type = default
							is_ai = yes
							NOT = { has_country_flag = flag_living_ai_spawn_tag } # In case there are multiple players
							OR = {
								has_global_flag = flag_living_ai_spawn_all
								AND = {	# Only AIs in contact with player
									has_global_flag = flag_living_ai_spawn_contact
									has_communications = PREV
								}
							}
						}

						#country_event = { id = isb_living.2 days = 2 random = 10 }
						country_event = { id = isb_living.3 days = 3 random = 20 }
						set_timed_country_flag = { flag = flag_living_ai_spawn_tag days = 3 }
					}
				}
			}
		}

		# No player empires, in observer mode probably
		if = {
			limit = {
				NOT = { any_country = { is_ai = no } }
			}

			# If AI spawn enabled
			if = {
				limit = {
					has_global_flag = flag_living_ai_spawn_all
				}

				every_country = {
					limit = {
						is_country_type = default
						is_ai = yes
					}

					#country_event = { id = isb_living.2 days = 2 random = 10 }
					country_event = { id = isb_living.3 days = 3 random = 20 }
					set_timed_country_flag = { flag = flag_living_ai_spawn_tag days = 3 }
				}
			}
		}
	}
}

country_event = {
	id = isb_living.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "[Civilians]"
			type = living_systems
			species = random
			name_list = "PRT1"
			auto_delete = no
		}

		every_country = {
			limit = {
				is_ai = no
				is_country_type = default
			}
			establish_communications_no_message = last_created_country
		}
	}
}

# Main Control Event
country_event = {
	id = isb_living.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			set_variable = {
				which = "living_country_spawn_count"
				value = 1
			}
		}

		every_owned_planet = {
			limit = {
				# has_spaceport
				num_pops > 9
			}
			save_event_target_as = ship_spawn_planet

			if = {
				limit = {
					num_pops > 7
				}

				if = {
					limit = {
						check_variable = {
							which = "living_fleet_count"
							value < 5
						}
					}
					#count = 1

					planet_event = { id = isb_living.6 }
					if = {
						limit = {
							NOT = { PREV = { has_policy_flag = isb_living_density_policy_low } }
						}

						planet_event = { id = isb_living.6 }
					}
				}

				# Auto-switch to low density after 120 planets. For player only
				if = {
					limit = {
						PREV = { is_ai = no }
					}
					change_variable = {
						which = "living_country_spawn_count"
						value = 1
					}
				}

				if = {
					limit = {
						num_pops > 12
						NOT = { PREV = { has_policy_flag = isb_living_density_policy_low } }
						NAND = {
								is_planet_class = pc_ringworld_habitable
								SOLAR_SYSTEM = {
									any_system_planet {
										NOT = { is_same_value = PREVPREV }
										is_planet_class = pc_ringworld_habitable
										is_colony = yes
									}
								}

						}
						OR = { # Auto low density after 120 planets
							PREV = { is_ai = yes }
							PREV = {
								check_variable = {
									which = "living_country_spawn_count"
									value < 121
								}
							}
						}
					}

					if = {
						limit = {
							check_variable = {
								which = "living_fleet_count"
								value < 8
							}
						}
						#count = 1

						planet_event = { id = isb_living.6 days = 15 }
						planet_event = { id = isb_living.6 days = 25 }
					}

					if = {
						limit = {
							num_pops > 19
						}

						if = {
							limit = {
								check_variable = {
									which = "living_fleet_count"
									value < 15
								}
							}
							#count = 1

							planet_event = { id = isb_living.6 days = 35 }
							planet_event = { id = isb_living.6 days = 45 }
							planet_event = { id = isb_living.6 days = 55 }
						}
					}
				}
			}
		}

		# Spaceline
		country_event = { id = isb_living.7 days = 15 random = 40 }

		country_event = { id = isb_living.8 days = 190 random = 30 }

		if = {
			limit = {
				NOT = { has_policy_flag = isb_living_density_policy_low }
			}

			random_list = {
				50 = {
					country_event = { id = isb_living.8 days = 100 random = 30 }
				}
				50 = {
				}
			}

			random_list = {
				50 = {
					country_event = { id = isb_living.8 days = 290 random = 30 }
				}
				50 = {
				}
			}
		}

		# Owned Planet shuttle service
		country_event = { id = isb_living.9 days = 15 random = 40 }

		if = {
			limit = { NOT = { has_policy_flag = isb_living_density_policy_low } }

			country_event = { id = isb_living.9 days = 160 random = 40 }

			country_event = { id = isb_living.9 days = 90 random = 40 }

			country_event = { id = isb_living.9 days = 260 random = 40 }
		}

		# Random Planet Shuttle Service
		country_event = { id = isb_living.10 days = 100 random = 40 }

		if = {
			limit = { NOT = { has_policy_flag = isb_living_density_policy_low } }

			country_event = { id = isb_living.10 days = 200 random = 40 }
		}

		# Ads are controlled globally
		if = {
			limit = { NOT = { has_global_flag = flag_living_ads_off } }

			# Billboard
			country_event = { id = isb_living.19 days = 30 random = 40 }
		}

		if = {
			limit = {
				OR = {
					has_global_flag = flag_living_interstellar_on
					NOT = { has_policy_flag = isb_living_interstellar_policy_off }
				}
			}

			# Interstellar Fleets
			random_list = {
				70 = {
					country_event = { id = isb_living.25 days = 2 random = 5 }
				}
				30 = {
				}
			}
		}
	}
}

# Checks for hostile fleet entering system
fleet_event = {
	id = isb_living.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		FROM = { exists = OWNER }
	}

	immediate = {
		OWNER = { save_event_target_as = fleet_owner }
		SOLAR_SYSTEM = {
			every_system_planet = {
				limit = {
					exists = OWNER
					OWNER = { is_hostile = event_target:fleet_owner }
				}

				PREV = { set_timed_star_flag = { flag = flag_living_panic days = 360 } }
				break = yes
			}
		}
	}
}

# Yearly country tick
event = {
	id = isb_living.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_global_flag = flag_living_density_off }
			}

			random_country = {
				limit = { is_country_type = default }

				country_event = { id = isb_living.1 }
			}
		}
	}
}

# Billboard main spawner
country_event = {
	id = isb_living.19
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_planet = {
			limit = {
				#has_spaceport = yes
				num_pops > 11
			}

			planet_event = {id = isb_living.20 }
		}
	}
}

# Ensure random for planets in same system
planet_event = {
	id = isb_living.20
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		save_event_target_as = ship_spawn_planet

		SOLAR_SYSTEM = {
			random_system_planet = {
				limit = {
					NOT = { is_same_value = PREVPREV }
					NOT = { has_planet_flag = flag_living_billboard }
				}

				save_event_target_as = target_planet
				set_timed_planet_flag = { flag = flag_living_billboard days = 1 }
			}

			random_system_planet = {
				limit = {
					NOT = { has_planet_flag = flag_living_billboard }
				}

				save_event_target_as = target_planet2
			}
		}

		random_list = {
			50 = {
				FROM = { country_event = { id = isb_living.21 } }
			}
			50 = {
				FROM = { country_event = { id = isb_living.24 } }
			}
		}

		last_created_fleet = {
			set_name = advertisements_fleet_name
			set_fleet_stance = passive
			set_location = {
				target = event_target:ship_spawn_planet
				distance = 15
				angle = 115
			}

			create_ambient_object = {
				type = "living_move_marker_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:target_planet
					distance = 10
					angle = random
				}
			}

			random_list = {
				50 = {
					# Non-moving billboard
					queue_actions = {
						wait = 300
						effect = {
							id = "isb_living.19.trigger.1"
							destroy_fleet = THIS
						}
					}
				}
				25 = {
					# Move once
					queue_actions = {
						wait = 120
						move_to = last_created_ambient_object
						wait = 160
						effect = {
							id = "isb_living.19.trigger.2"
							destroy_fleet = THIS
						}
					}
				}
				25 = {
					# Move twice
					queue_actions = {
						wait = 60
						move_to = last_created_ambient_object
						wait = 75
						move_to = event_target:target_planet2
						wait = 90
						effect = {
							id = "isb_living.19.trigger.3"
							destroy_fleet = THIS
						}
					}
				}
			}

			destroy_ambient_object = last_created_ambient_object
		}
	}
}

# Billboard 01
country_event = {
	id = isb_living.21
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				is_country_type = living_systems
			}
			save_event_target_as = living_country
		}
		if = {
			limit = {
				exists = event_target:living_country
			}
			create_fleet = {
				effect = {
					set_owner = event_target:living_country

					create_ship = {
						name = "Billboard"
						design = "Billboard Mk-1"
					}
				}
			}
		}
		else = {
			create_fleet = {
				name = "Country not found"
			}
		}
	}
}

# Billboard 02
country_event = {
	id = isb_living.24
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				is_country_type = living_systems
			}
			save_event_target_as = living_country
		}
		if = {
			limit = {
				exists = event_target:living_country
			}
			create_fleet = {
				effect = {
					set_owner = event_target:living_country

					create_ship = {
						name = "Billboard"
						design = "Billboard Mk-2"
					}
				}
			}
		}
		else = {
			create_fleet = {
				name = "Country not found"
			}
		}
	}
}

# Interstellar Fleet spawners. They start appearing when the country has > 20 stations in total from planets with > 9 pops
country_event = {
	id = isb_living.25
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		count_owned_ship = {
			limit = {
				OR = {
					#is_ship_size = orbital_station
					is_ship_size = mining_station
					is_ship_size = research_station
					is_ship_size = mining_station
					is_ship_size = research_station
					is_ship_size = starbase_outpost
					is_ship_size = starbase_starport
					is_ship_size = starbase_starhold
					is_ship_size = starbase_starfortress
					is_ship_size = starbase_citadel
				}
			}
			count > 19
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				#has_spaceport = yes
				num_pops > 12
				OR = { # Auto low density after 15 planets. No more interstellar fleets
					PREV = { is_ai = yes }
					PREV = {
						check_variable = {
							which = "living_country_spawn_count"
							value < 16
						}
					}
				}
			}

			planet_event = { id = isb_living.26 days = 1 random = 75}
		}
	}
}

# Interstellar fleet logic
planet_event = {
	id = isb_living.26
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		save_event_target_as = ship_spawn_planet
		SOLAR_SYSTEM = {
			save_event_target_as = current_system
		}
		OWNER = {
			random_owned_ship = {
				limit = {
					OR = {
						#is_ship_size = orbital_station
						is_ship_size = mining_station
						is_ship_size = research_station
						is_ship_size = starbase_outpost
						is_ship_size = starbase_starport
						is_ship_size = starbase_starhold
						is_ship_size = starbase_starfortress
						is_ship_size = starbase_citadel
					}
					SOLAR_SYSTEM = {
						distance = {
							source = event_target:current_system
							max_distance <= 500
						}
						NOT = { is_same_value = event_target:current_system }
					}
				}

				save_event_target_as = target_ship
				SOLAR_SYSTEM = { save_event_target_as = target_system }

				PREVPREV = { planet_event = { id = isb_living.27 } }

				last_created_fleet = {
					set_name = expeditionary_fleet_name
					set_fleet_stance = passive
					set_location = {
						target = event_target:ship_spawn_planet
						distance = 14
						angle = random
					}

					queue_actions = {
						wait = 15
						move_to = event_target:target_system
						wait = 7
						move_to = event_target:target_ship
						wait = 70
						move_to = event_target:current_system
						# Moves back to spawn location
						move_to = THIS
						wait = 15
						effect = {
							id = "isb_living.26.trigger.1"
							destroy_fleet = THIS
						}
					}
				}
			}
		}
	}
}

# Interstellar fleet
planet_event = {
	id = isb_living.27
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				is_country_type = living_systems
			}
			save_event_target_as = living_country
		}
		if = {
			limit = {
				exists = event_target:living_country
			}
			create_fleet = {
				effect = {
					set_owner = event_target:living_country

					create_ship = {
						name = random
						design = "Civilian Taxi"
						graphical_culture = "mammalian_01"
					}

					create_ship = {
						name = random
						design = "Civilian Shuttle"
						graphical_culture = "reptilian_01"
					}

					create_ship = {
						name = random
						design = "Cargo Pod"
					}

					create_ship = {
						name = random
						design = "Civilian Vessel"
					}

					create_ship = {
						name = random
						design = "Civilian Vessel"
						graphical_culture = "fungoid_01"
					}

					create_ship = {
						name = random
						design = "Civilian Shuttle"
					}

					create_ship = {
						name = random
						design = "Cargo Containers"
					}

					create_ship = {
						name = random
						design = "Civilian Vessel"
						graphical_culture = "avian_01"
					}

					create_ship = {
						name = random
						design = "Civilian Taxi"
						graphical_culture = "arthropoid_01"
					}

					random_list = {
						50 = {
							create_ship = {
								name = random
								design = "Civilian Shuttle"
								graphical_culture = "reptilian_01"
							}

							create_ship = {
								name = random
								design = "Cargo Pod"
							}

							create_ship = {
								name = random
								design = "Civilian Vessel"
							}

							create_ship = {
								name = random
								design = "Civilian Vessel"
								graphical_culture = "fungoid_01"
							}
						}
						50 = {

						}
					}

					random_list = {
						50 = {
							create_ship = {
								name = random
								design = "Civilian Shuttle"
								graphical_culture = "reptilian_01"
							}

							create_ship = {
								name = random
								design = "Civilian Vessel"
							}

							create_ship = {
								name = random
								design = "Interstellar Shuttle"
							}

							create_ship = {
								name = random
								design = "Civilian Vessel"
								graphical_culture = "fungoid_01"
							}
						}
						50 = {

						}
					}
				}
			}
		}
		else = {
			create_fleet = {
				name = "Country not found"
			}
		}
	}
}

# Self explore fleet logic
fleet_event = {
	id = isb_living.101
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		#SOLAR_SYSTEM = {
			# Hostile Panic Mode
		#	random_list = {
		#		100 = {
		#			if = {
		#				limit = {
		#					has_star_flag = flag_living_panic
		#				}

		#				random_system_planet = {
		#					limit = { exists = OWNER }
		#					save_event_target_as = move_target
		#				}
		#				PREV = {
		#					clear_fleet_actions = THIS
		#					clear_orders = yes
		#					queue_actions = {
		#						move_to = event_target:move_target
		#						wait = 150
		#					}

		#					fleet_event = { id = isb_living.101 days = 90 random = 90 }
		#					break = yes
		#				}
		#			}
		#		}
		#		0 = {
		#		}
		#	}
		#}
		SOLAR_SYSTEM = {
			random_list = {
				70 = {
					random_system_planet = {
						save_event_target_as = move_target
					}
					random_list = {
						15 = {
							PREV = { set_fleet_flag = flag_living_over }
						}
						85 = {
						}
					}
				}
				30 = {
					random_fleet_in_system = {
						limit = { NOT = { is_same_value = PREVPREV } }
						save_event_target_as = move_target

						if = {
							limit = {
								exists = OWNER
								OWNER = { is_country_type = living_systems }
								NOT = { is_ship_size = living_liner }
								NOT = { has_fleet_flag = flag_living_over }
								NOT = { has_fleet_flag = flag_living_wait }
							}

							PREVPREV = {
								queue_actions = {
									move_to = event_target:move_target
									wait = 20
								}
							}

							random_list = {
								50 = {
									queue_actions = {
										move_to = PREVPREV
										wait = 30
									}
								}
								50 = {
									queue_actions = {
										wait = 90
									}
								}
							}
						}
					}
				}
			}
		}

		if = {
			limit = {
				has_fleet_flag = flag_living_over
			}

			clear_fleet_actions = THIS
			queue_actions = {
				move_to = event_target:move_target
				wait = 30
				effect = {
					id = "isb_living.101.trigger.1"
					fleet_event = { id = isb_living.102 }
				}
			}
		}
		else = {
			create_ambient_object = {
				type = "living_move_marker_object"
			}

			random_list = {
				40 = {
					last_created_ambient_object = {
						set_location = {
							target = event_target:move_target
							distance = 0.1
							angle = random
						}
					}
				}
				10 = {
					last_created_ambient_object = {
						set_location = {
							target = event_target:move_target
							distance = 20
							angle = random
						}
					}
				}
				14 = {
					last_created_ambient_object = {
						set_location = {
							target = event_target:move_target
							distance = 50
							angle = random
						}
					}
				}
				14 = {
					last_created_ambient_object = {
						set_location = {
							target = event_target:move_target
							distance = 90
							angle = random
						}
					}
				}
				22 = {
					last_created_ambient_object = {
						set_location = {
							target = event_target:move_target
							distance = 160
							angle = random
						}
					}
				}
			}

			queue_actions = {
				move_to = last_created_ambient_object
				wait = 30
				effect = {
					id = "isb_living.101.trigger.2"
					fleet_event = { id = isb_living.101 days = 5 random = 30 }
				}
			}

			destroy_ambient_object = last_created_ambient_object
		}
	}
}

# Self explore ship destructor
fleet_event = {
	id = isb_living.102
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		destroy_fleet = THIS
		SOLAR_SYSTEM = {
			random_system_planet = {
				limit = {
					exists = OWNER
				}
				change_variable = {
					which = "living_fleet_count"
					value = -1
				}
			}
		}
	}
}

# Bi-yearly fleet counts in case of destroyed civilian fleets. Will cause extra fleets randomly.
# Not ideal but fleet destroyed on_action does not work on living countries
event = {
	id = isb_living.103
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Resets all ai fleet counts
		every_country = {
			limit = {
				is_country_type = default
			}

			every_owned_planet = {
				limit = {
					#has_spaceport = yes
					num_pops > 7
				}

				set_variable = {
					which = "living_fleet_count"
					value = 0
				}
			}
		}

		every_country = {
			limit = { is_country_type = living_systems }
			every_owned_fleet = {
				limit = { has_fleet_flag = flag_living_ai_fleet }

				#randomly assigns fleet count
				fleet_event = { id = isb_living.104 }
			}
		}
	}
}

# Fleet tally
fleet_event = {
	id = isb_living.104
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		SOLAR_SYSTEM = {
			random_system_planet = {
				limit = { exists = OWNER }

				change_variable = {
					which = "living_fleet_count"
					value = 1
				}
			}
		}
	}
}

# AI interstellar global reset flag
country_event = {
	id = isb_living.194
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = flag_living_ai_interstellar_off
			}

			remove_global_flag = flag_living_ai_interstellar_off
		}

		if = {
			limit = {
				has_global_flag = flag_living_ai_interstellar_on
			}

			remove_global_flag = flag_living_ai_interstellar_on
		}
	}
}

# AI density global reset flag
country_event = {
	id = isb_living.195
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = flag_living_ai_density_low
			}

			remove_global_flag = flag_living_ai_density_low
		}

		if = {
			limit = {
				has_global_flag = flag_living_ai_density_normal
			}

			remove_global_flag = flag_living_ai_density_normal
		}
	}
}

# AI Spawn global flag reset
country_event = {
	id = isb_living.196
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = flag_living_ai_spawn_off
			}

			remove_global_flag = flag_living_ai_spawn_off
		}

		if = {
			limit = {
				has_global_flag = flag_living_ai_spawn_contact
			}

			remove_global_flag = flag_living_ai_spawn_contact
		}

		if = {
			limit = {
				has_global_flag = flag_living_ai_spawn_all
			}

			remove_global_flag = flag_living_ai_spawn_all
		}
	}
}

# Density policy global flags reset
country_event = {
	id = isb_living.197
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = flag_living_interstellar_on
			}

			remove_global_flag = flag_living_interstellar_on
		}

		if = {
			limit = {
				has_global_flag = flag_living_interstellar_off
			}

			remove_global_flag = flag_living_interstellar_off
		}
	}
}

# Density policy global flags reset
country_event = {
	id = isb_living.198
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = flag_living_ads_on
			}

			remove_global_flag = flag_living_ads_on
		}

		if = {
			limit = {
				has_global_flag = flag_living_ads_off
			}

			remove_global_flag = flag_living_ads_off
		}
	}
}

# Density policy global flags reset
country_event = {
	id = isb_living.199
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = flag_living_density_normal
			}

			remove_global_flag = flag_living_density_normal
		}

		if = {
			limit = {
				has_global_flag = flag_living_density_low
			}

			remove_global_flag = flag_living_density_low
		}

		if = {
			limit = {
				has_global_flag = flag_living_density_off
			}

			remove_global_flag = flag_living_density_off
		}
	}
}

# Destroy all AI living system ships. Might miss interstellar fleets but those will auto-destruct
event = {
	id = isb_living.297
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { is_country_type = living_systems }
			every_owned_fleet = {
				limit = {
					exists = SOLAR_SYSTEM
					SOLAR_SYSTEM = {
						exists = OWNER
						OWNER = { is_ai = yes }
					}
				}

				destroy_fleet = THIS
			}
		}

	}
}

# Destroy all living system ships
event = {
	id = isb_living.298
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { is_country_type = living_systems }
			every_owned_fleet = { destroy_fleet = THIS }
		}
	}
}


ship_event = {
	id = isb_living.299
	hide_window = no
	is_triggered_only = yes
	picture = GFX_evt_physics_research

	title = pirate_trigger

	desc = {
		text = you_are_system
	}

	immediate = {
	}

	option = {
		name = ok
	}
}
