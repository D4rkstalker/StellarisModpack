namespace = sleeper

#sets global flag that indicates that the mod is installed
event = {
	id = sleeper.30
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		set_global_flag = "has_the_sleeper_mod"
	}
}

#spawn drone country 1
country_event = {
	id = sleeper.01
	hide_window = yes
	fire_only_once = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = the_sleeper_fallen
	}
	
	immediate = {
		owner_species = {
			save_event_target_as = fallen_hive_species_et
		}
		save_event_target_as = the_sleeper
		random_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_1
			}
			create_country = {
				name = "Scrambled Drones"
				type = scrambled_drones
				ignore_initial_colony_error = yes
				authority = auth_hive_mind
				civics = {
					civic = civic_drone_country
				}
				species = event_target:fallen_hive_species_et
				flag = {
					icon= {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "sinus.dds"
					}
					colors={
						"green"
						"green"
						"null"
						"null"
					}
				}
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
			}
			last_created_country = {
				save_event_target_as = drone_country_1
				set_country_flag = drone_country_1
				spawn_sleeper_admiral = yes
				create_ship_design = { design = "NAME_drone_starbase" }
				add_ship_design = last_created_design
			}
			while = {
				count = 15
				create_pop = {
					species = owner_main_species
				}
			}
			set_owner = event_target:drone_country_1
			set_controller = event_target:drone_country_1
			prevent_anomaly = yes
			add_building = building_drone_capital
			add_building = building_sleeper_fortress 
			add_building = building_sleeper_rotting_warrens
			while = {
				count = 2
				add_district = district_hive
			}
			solar_system = {
				create_starbase = {
					size = "starbase_sleeper_drone_country"
					owner = event_target:drone_country_1
				}
			}
			spawn_sleeper_drone_country_fleet = yes
			add_modifier = { modifier = sleeper_drone_planet days = -1 }
		}
	#establish comms with the other fallen empires (and the other way around), contact with the sleeper is handled through other event
		every_country = {
			limit = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = dormant_marauders
					is_country_type = hive_researcher_enclave
				}
			}
			establish_communications_no_message = event_target:drone_country_1
		}
		event_target:drone_country_1 = {
	#make drone country friendly to the sleeper
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
		}
	}
}

#spawn drone country 2
country_event = {
	id = sleeper.02
	hide_window = yes
	fire_only_once = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = the_sleeper_fallen
	}
	
	immediate = {
		owner_species = {
			save_event_target_as = fallen_hive_species_et
		}
		save_event_target_as = the_sleeper
		random_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_2
			}
			create_country = {
				name = "Scrambled Drones"
				type = scrambled_drones
				ignore_initial_colony_error = yes
				authority = auth_hive_mind
				civics = {
					civic = civic_drone_country
				}
				species = event_target:fallen_hive_species_et
				flag = {
					icon= {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "sinus.dds"
					}
					colors={
						"green"
						"green"
						"null"
						"null"
					}
				}
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
			}
			last_created_country = {
				save_event_target_as = drone_country_2
				set_country_flag = drone_country_2
				spawn_sleeper_admiral = yes
				create_ship_design = { design = "NAME_drone_starbase" }
				add_ship_design = last_created_design
			}
			while = {
				count = 15
				create_pop = {
					species = owner_main_species
				}
			}
			set_owner = event_target:drone_country_2
			set_controller = event_target:drone_country_2
			prevent_anomaly = yes
			add_building = building_drone_capital
			add_building = building_sleeper_fortress 
			add_building = building_sleeper_rotting_warrens
			while = {
				count = 2
				add_district = district_hive
			}
			solar_system = {
				create_starbase = {
					size = "starbase_sleeper_drone_country"
					owner = event_target:drone_country_2
				}
			}
			spawn_sleeper_drone_country_fleet = yes
			add_modifier = { modifier = sleeper_drone_planet days = -1 }
		}
	#establish comms with the other fallen empires (and the other way around), contact with the sleeper is handled through other event
		every_country = {
			limit = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = dormant_marauders
					is_country_type = hive_researcher_enclave
				}
			}
			establish_communications_no_message = event_target:drone_country_2
		}
		event_target:drone_country_2 = {
	#make drone country friendly to the sleeper
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
		}
	}
}

#spawn drone country 3
country_event = {
	id = sleeper.03
	hide_window = yes
	fire_only_once = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = the_sleeper_fallen
	}
	
	immediate = {
		owner_species = {
			save_event_target_as = fallen_hive_species_et
		}
		save_event_target_as = the_sleeper
		random_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_3
			}
			create_country = {
				name = "Scrambled Drones"
				type = scrambled_drones
				ignore_initial_colony_error = yes
				authority = auth_hive_mind
				civics = {
					civic = civic_drone_country
				}
				species = event_target:fallen_hive_species_et
				flag = {
					icon= {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "sinus.dds"
					}
					colors={
						"green"
						"green"
						"null"
						"null"
					}
				}
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
			}
			last_created_country = {
				save_event_target_as = drone_country_3
				set_country_flag = drone_country_3
				spawn_sleeper_admiral = yes
				create_ship_design = { design = "NAME_drone_starbase" }
				add_ship_design = last_created_design
			}
			while = {
				count = 14
				create_pop = {
					species = owner_main_species
				}
			}
			set_owner = event_target:drone_country_3
			set_controller = event_target:drone_country_3
			prevent_anomaly = yes
			add_building = building_drone_capital
			add_building = building_sleeper_fortress 
			add_building = building_sleeper_rotting_warrens
			while = {
				count = 2
				add_district = district_hive
			}
			solar_system = {
				create_starbase = {
					size = "starbase_sleeper_drone_country"
					owner = event_target:drone_country_3
				}
			}
			spawn_sleeper_drone_country_fleet = yes
			add_modifier = { modifier = sleeper_drone_planet days = -1 }
		}
	#establish comms with the other fallen empires (and the other way around), contact with the sleeper is handled through other event
		every_country = {
			limit = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = dormant_marauders
					is_country_type = hive_researcher_enclave
				}
			}
			establish_communications_no_message = event_target:drone_country_3
		}
		event_target:drone_country_3 = {
	#make drone country friendly to the sleeper
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
		}
	}
}

#spawn drone country 4
country_event = {
	id = sleeper.04
	hide_window = yes
	fire_only_once = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = the_sleeper_fallen
	}
	
	immediate = {
		owner_species = {
			save_event_target_as = fallen_hive_species_et
		}
		save_event_target_as = the_sleeper
		random_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_4
			}
			create_country = {
				name = "Scrambled Drones"
				type = scrambled_drones
				ignore_initial_colony_error = yes
				authority = auth_hive_mind
				civics = {
					civic = civic_drone_country
				}
				species = event_target:fallen_hive_species_et
				flag = {
					icon= {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "sinus.dds"
					}
					colors={
						"green"
						"green"
						"null"
						"null"
					}
				}
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
			}
			last_created_country = {
				save_event_target_as = drone_country_4
				set_country_flag = drone_country_4
				spawn_sleeper_admiral = yes
				create_ship_design = { design = "NAME_drone_starbase" }
				add_ship_design = last_created_design
			}
			while = {
				count = 14
				create_pop = {
					species = owner_main_species
				}
			}
			set_owner = event_target:drone_country_4
			set_controller = event_target:drone_country_4
			prevent_anomaly = yes
			add_building = building_drone_capital
			add_building = building_sleeper_fortress 
			add_building = building_sleeper_rotting_warrens
			while = {
				count = 2
				add_district = district_hive
			}
			solar_system = {
				create_starbase = {
					size = "starbase_sleeper_drone_country"
					owner = event_target:drone_country_4
				}
			}
			spawn_sleeper_drone_country_fleet = yes
			add_modifier = { modifier = sleeper_drone_planet days = -1 }
		}
	#establish comms with the other fallen empires (and the other way around), contact with the sleeper is handled through other events
		every_country = {
			limit = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = dormant_marauders
					is_country_type = hive_researcher_enclave
				}
			}
			establish_communications_no_message = event_target:drone_country_4
		}
		event_target:drone_country_4 = {
	#make drone country friendly to the sleeper
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = no
				set_neutral = no
				set_friendly = yes
			}
		}
	}
}

#initializer event for the sleeper
#the sleeper establishes comms with all fallen empires and scrambled drones (on game start country)
#ceases hostilities with the hive enclave and other various factions
#sets flag to identify the sleeper, no matter what country type it is right now.
#make sure that drone star systems are actually owned by drone countries
#randomize the sleepers flag
#set species rights for sleeper pops for all fallen empires to purge (maybe it will work? please?)
#clear all deposits from the two hiveplanets, as other mods tend to spawn deposits there after gamestart and add valuable deposits to drone planets.
#start the decade- sleeper agitation event
country_event = {
	id = sleeper.11
	hide_window = yes
	fire_only_once = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = the_sleeper_fallen
	}
	
	immediate = {
		set_global_flag = sleeper_spawned
		set_country_flag = the_sleeper
		save_event_target_as = the_sleeper
		owner_species = {
			save_event_target_as = sleeper_species
		}
		randomize_flag_symbol = "zoological"
		every_country = {
			limit = {
				is_country_type = fallen_empire
			}
			country_event = { id = sleeper.34 days = 1 }
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = hive_researcher_enclave
					is_country_type = scrambled_drones
					is_country_type = fallen_empire
					is_country_type = enclave
				}
			}
			establish_communications_no_message = event_target:the_sleeper
			set_country_flag = sleeper_encountered
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = hive_researcher_enclave
					is_country_type = caravaneer_fleet
					is_country_type = mem_surveyor_country_green
				}
			}
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = no
				set_neutral = yes
				set_friendly = no
			}
		}
		country_event = { id = sleeper.20 days = 2 }
		every_owned_planet = {
			limit = {
				OR = {
					has_planet_flag = hive_original_homeworld
					has_planet_flag = sleeper_secondary_core_world
				}
			}
			clear_deposits = yes
		}
		every_country = {
			limit = {
				is_country_type = scrambled_drones
			}
			country_event = { id = sleeper.39 days = 2 }
		}
		country_event = { id = sleeper.37 days = 10 }
	}
}

country_event = {
	id = sleeper.39
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		every_owned_planet = {
			create_random_drone_deposit = yes
		}
	}
}
 
country_event = {
	id = sleeper.20
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				has_country_flag = drone_country_1
			}
			save_event_target_as = drone_country_1
		}
		every_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_1
			}
			solar_system = {
				starbase = {
					set_owner = event_target:drone_country_1
				}
			}
		}
		random_country = {
			limit = {
				has_country_flag = drone_country_2
			}
			save_event_target_as = drone_country_2
		}
		every_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_2
			}
			solar_system = {
				starbase = {
					set_owner = event_target:drone_country_2
				}
			}
		}
		random_country = {
			limit = {
				has_country_flag = drone_country_3
			}
			save_event_target_as = drone_country_3
		}
		every_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_3
			}
			solar_system = {
				starbase = {
					set_owner = event_target:drone_country_3
				}
			}
		}
		random_country = {
			limit = {
				has_country_flag = drone_country_4
			}
			save_event_target_as = drone_country_4
		}
		every_planet = {
			limit = {
				has_planet_flag = sleeper_drone_planet_4
			}
			solar_system = {
				starbase = {
					set_owner = event_target:drone_country_4
				}
			}
		}
	}
}

#another event that fires at the start of the game, regardless if a sleeper spawned or not. Checks if one spawned and sends a message to all players about it.
country_event = {
	id = sleeper.21
	title = sleeper.21.title
	desc = {
		text = sleeper.21.desc.yes
		trigger = {
			any_country = {
				is_sleeper = yes
				exists = this
			}
		}
	}
	desc = {
		text = sleeper.21.desc.no
		trigger = {
			NOT = {
				any_country = {
					is_sleeper = yes
					exists = this
				}
			}
		}
	}
	
	is_triggered_only = yes
	
	trigger = {
		is_ai = no
	}
	
	option = {
		name = sleeper.21.a
	}
}

#Communication events
#the sleeper (dormant)
country_event = {
	id = sleeper.05
	title = sleeper.05.title 
	desc = sleeper.05.desc
	diplomatic = yes 
	picture_event_data = { 
		room = no_video_feed_room
	}
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			is_country_type = the_sleeper_fallen
		}
		has_country_flag = sleeper_encountered
	}
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = the_sleeper_fallen
			}
			save_event_target_as = contact_empire
		}
	}
	
#contact hive enclave
	option = {
		name = sleeper.05.a
		trigger = {
			any_country = {
				is_country_type = hive_researcher_enclave
			}
		}
		country_event = { id = sleeper.07 }
	}
#goodbye
	option = {
		name = sleeper.05.b
	}
#debug: trigger the berserker awakening
	option = {
		name = sleeper.05.c
		trigger = {
			from = {
				has_country_flag = sleeper_debug_mode_active
			}
		}
		random_country = {
			limit = {
				is_country_type = the_sleeper_fallen
			}
			country_event = { id = sleeper_awakes.02 }
		}
	}
#debug: trigger the "normal" awakening
	option = {
		name = sleeper.05.d
		trigger = {
			from = {
				has_country_flag = sleeper_debug_mode_active
			}
		}
		random_country = {
			limit = {
				is_country_type = the_sleeper_fallen
			}
			country_event = { id = sleeper_the_awoken.05 }
		}
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = { id = sleeper_the_awoken.07 }
		}
	}
	
#debug: show aggro value
	option = {
		name = sleeper.05.e
		trigger = {
			from = {
				has_country_flag = sleeper_debug_mode_active
			}
		}
		country_event = { id = sleeper.43 }
	}
}

#the sleeper (berserker)
country_event = {
	id = sleeper.15
	title = sleeper.15.title 
	desc = {
		text = sleeper.15.desc.a
	}
	desc = {
		text = sleeper.15.desc.b
	}
	desc = {
		text = sleeper.15.desc.c
	}
	desc = {
		text = sleeper.15.desc.d
	}
	desc = {
		text = sleeper.15.desc.e
	}
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire
		planet_background = event_target:contact_empire 
		graphical_culture = event_target:contact_empire
		city_level = event_target:contact_empire
		room = event_target:contact_empire.ruler
	}
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			is_country_type = berserker_awoken_hive
		}
	}
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = berserker_awoken_hive
			}
			save_event_target_as = contact_empire
		}
	}

#goodbye
	option = {
		name = sleeper.15.a
	}
#debug: put it back to sleep
	option = {
		name = sleeper.15.b
		trigger = {
			from = {
				has_country_flag = sleeper_debug_mode_active
			}
		}
		random_country = {
			limit = {
				is_sleeper = yes
			}
			country_event = { id = sleeper_awakes.07 }
		}
	}
}

#any of the drone countries
country_event = {
	id = sleeper.06
	title = sleeper.06.title 
	desc = {
		text = sleeper.06.desc.a
	}
	desc = {
		text = sleeper.06.desc.b
	}
	desc = {
		text = sleeper.06.desc.c
	}
	desc = {
		text = sleeper.06.desc.d
	}
	desc = {
		text = sleeper.06.desc.e
	}
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire
		planet_background = event_target:contact_empire 
		graphical_culture = event_target:contact_empire
		city_level = event_target:contact_empire
		room = event_target:contact_empire.ruler
	}
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			is_country_type = scrambled_drones
		}
		has_country_flag = sleeper_encountered
	}
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = scrambled_drones
			}
			save_event_target_as = contact_empire
		}
	}
	
	option = {
		name = sleeper.06.a
	}
}

#TN-3. has seperate trigger event.
country_event = {
	id = sleeper.13
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			is_country_type = hive_researcher_enclave
		}
		has_country_flag = sleeper_encountered
	}
	
	immediate = {
		country_event = { id = sleeper.07 }
	}
}

country_event = {
	id = sleeper.07
	title = sleeper.07.title 
	desc = {
		text = sleeper.07.desc.a
		trigger = {
			event_target:contact_empire = {
				NOT = {
					has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
				}
			}
		}
	}
	desc = {
		text = sleeper.07.desc.b
		trigger = {
			event_target:contact_empire = {
				NOT = {
					has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
				}
			}
		}
	}
	desc = {
		text = sleeper.07.desc.c
		trigger = {
			event_target:contact_empire = {
				NOT = {
					has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
				}
			}
		}
	}
	desc = {
		text = sleeper.07.desc.d
		trigger = {
			event_target:contact_empire = {
				NOT = {
					has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
				}
			}
		}
	}
	desc = {
		text = sleeper.07.desc.e
		trigger = {
			event_target:contact_empire = {
				has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
			}
		}
	}
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = tony_left
		}
	}
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = hive_researcher_enclave
			}
			save_event_target_as = contact_empire
		}
		random_country = {
			limit = {
				is_country_type = the_sleeper_fallen
			}
			save_event_target_as = the_sleeper
		}
	}
	
	option = {
		name = sleeper.07.a
	}
	
	option = {
		name = sleeper.07.b
		trigger = {
			NOT = {
				has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
			}
		}
		hidden_effect = {
			country_event = { id = sleeper.22 }
		}
	}
	
	option = {
		name = sleeper.07.d
		trigger = {
			NOT = {
				has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
			}
		}
		hidden_effect = { 
			country_event = { id = sleeper.23 }
		}
	}
	
#buy stuff
	option = {
		name = sleeper.07.e
		trigger = {
			AND = {
				NOR ={
					has_country_flag = pacifying_upgrade_bought
					event_target:contact_empire = {
						has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
					}
				}
				any_country = {
					is_country_type = the_sleeper_fallen
				}
			}
		}
		allow = {
			event_target:contact_empire = {
				trust = { 
					who = root
					value >= 60
				}
			}
		}
		hidden_effect = {
			country_event = { id = sleeper.12 }
		}
	}
	
	option = {
		name = sleeper.07.g
		trigger = {
			AND = {
				event_target:contact_empire = {
					has_country_flag = sleeper_damage_upgrade_available
				}
				NOR = {
					has_modifier = sleeper_extra_damage
					has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
				}
			}
		}
		allow = {
			event_target:contact_empire = {
				trust = { 
					who = root
					value >= 40
				}
			}
		}
		hidden_effect = {
			country_event = { id = sleeper.31 }
		}
	}
	
	option = {
		name = sleeper.07.h
		trigger = {
			NOT = {
				has_country_flag = sleeper_bought_map_info
			}
		}
		allow = {
			event_target:contact_empire = {
				trust = { 
					who = root
					value >= 20
				}
			}
		}
		hidden_effect = {
			country_event = { id = sleeper.32 }
		}
	}
	
#offer help and get missions
	option = {
		name = sleeper.07.f
		allow = {
			custom_tooltip = {
				text = sleeper.07.f.tooltip
				NOR = {
					has_country_flag = tony_missions_blocked_timed
					has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
				}
			}
		}
		hidden_effect = {
			add_random_tony_mission = yes
		}
	}
}

#who are you?
country_event = {
	id = sleeper.22
	title = sleeper.07.title 
	desc = sleeper.22.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = hive_researcher_enclave
			}
			save_event_target_as = contact_empire
		}
	}
	
	option = {
		name = sleeper.07.a
	}
	
	option = {
		name = sleeper.07.b
		hidden_effect = {
			country_event = { id = sleeper.22 }
		}
	}
	
	option = {
		name = sleeper.07.d
		hidden_effect = { 
			country_event = { id = sleeper.23 }
		}
	}
	
#buy stuff
	option = {
		name = sleeper.07.e
		trigger = {
			AND = {
				NOR ={
					has_country_flag = pacifying_upgrade_bought
					event_target:contact_empire = {
						has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
					}
				}
				any_country = {
					is_country_type = the_sleeper_fallen
				}
			}
		}
		allow = {
			event_target:contact_empire = {
				trust = { 
					who = root
					value >= 60
				}
			}
		}
		hidden_effect = {
			country_event = { id = sleeper.12 }
		}
	}
	
	option = {
		name = sleeper.07.g
		trigger = {
			AND = {
				event_target:contact_empire = {
					has_country_flag = sleeper_damage_upgrade_available
				}
				NOT = {
					has_modifier = sleeper_extra_damage
				}
			}
		}
		allow = {
			event_target:contact_empire = {
				trust = { 
					who = root
					value >= 40
				}
			}
		}
		hidden_effect = {
			country_event = { id = sleeper.31 }
		}
	}
	
	option = {
		name = sleeper.07.h
		trigger = {
			NOT = {
				has_country_flag = sleeper_bought_map_info
			}
		}
		allow = {
			event_target:contact_empire = {
				trust = { 
					who = root
					value >= 20
				}
			}
		}
		hidden_effect = {
			country_event = { id = sleeper.32 }
		}
	}
	
#offer help and get missions
	option = {
		name = sleeper.07.f
		allow = {
			custom_tooltip = {
				text = sleeper.07.f.tooltip
				NOT = {
					has_country_flag = tony_missions_blocked_timed
				}
			}
		}
		hidden_effect = {
			add_random_tony_mission = yes
		}
	}
}

#The encyclopedia of the multiminded
country_event = {
	id = sleeper.23
	title = sleeper.23.title 
	desc = sleeper.23.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.23.a
		hidden_effect = {
			country_event = { id = sleeper.24 }
		}
	}
	
	option = {
		name = sleeper.23.b
		hidden_effect = {
			country_event = { id = sleeper.25 }
		}
	}
	
	option = {
		name = sleeper.23.c
		hidden_effect = {
			country_event = { id = sleeper.26 }
		}
	}
	
	option = {
		name = sleeper.23.d
		hidden_effect = {
			country_event = { id = sleeper.27 }
		}
	}
	
	option = {
		name = sleeper.23.e
		hidden_effect = {
			country_event = { id = sleeper.28 }
		}
	}
	
	option = {
		name = sleeper.23.f
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#a: a brief history
country_event = {
	id = sleeper.24
	title = sleeper.23.title 
	desc = sleeper.24.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.23.a
		hidden_effect = {
			country_event = { id = sleeper.24 }
		}
	}
	
	option = {
		name = sleeper.23.b
		hidden_effect = {
			country_event = { id = sleeper.25 }
		}
	}
	
	option = {
		name = sleeper.23.c
		hidden_effect = {
			country_event = { id = sleeper.26 }
		}
	}
	
	option = {
		name = sleeper.23.d
		hidden_effect = {
			country_event = { id = sleeper.27 }
		}
	}
	
	option = {
		name = sleeper.23.e
		hidden_effect = {
			country_event = { id = sleeper.28 }
		}
	}
	
	option = {
		name = sleeper.23.f
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#b: The collapse
country_event = {
	id = sleeper.25
	title = sleeper.23.title 
	desc = sleeper.25.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.23.a
		hidden_effect = {
			country_event = { id = sleeper.24 }
		}
	}
	
	option = {
		name = sleeper.23.b
		hidden_effect = {
			country_event = { id = sleeper.25 }
		}
	}
	
	option = {
		name = sleeper.23.c
		hidden_effect = {
			country_event = { id = sleeper.26 }
		}
	}
	
	option = {
		name = sleeper.23.d
		hidden_effect = {
			country_event = { id = sleeper.27 }
		}
	}
	
	option = {
		name = sleeper.23.e
		hidden_effect = {
			country_event = { id = sleeper.28 }
		}
	}
	
	option = {
		name = sleeper.23.f
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#c: subhives
country_event = {
	id = sleeper.26
	title = sleeper.23.title 
	desc = sleeper.26.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.23.a
		hidden_effect = {
			country_event = { id = sleeper.24 }
		}
	}
	
	option = {
		name = sleeper.23.b
		hidden_effect = {
			country_event = { id = sleeper.25 }
		}
	}
	
	option = {
		name = sleeper.23.c
		hidden_effect = {
			country_event = { id = sleeper.26 }
		}
	}
	
	option = {
		name = sleeper.23.d
		hidden_effect = {
			country_event = { id = sleeper.27 }
		}
	}
	
	option = {
		name = sleeper.23.e
		hidden_effect = {
			country_event = { id = sleeper.28 }
		}
	}
	
	option = {
		name = sleeper.23.f
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#d: waking it up
country_event = {
	id = sleeper.27
	title = sleeper.23.title 
	desc = sleeper.27.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.23.a
		hidden_effect = {
			country_event = { id = sleeper.24 }
		}
	}
	
	option = {
		name = sleeper.23.b
		hidden_effect = {
			country_event = { id = sleeper.25 }
		}
	}
	
	option = {
		name = sleeper.23.c
		hidden_effect = {
			country_event = { id = sleeper.26 }
		}
	}
	
	option = {
		name = sleeper.23.d
		hidden_effect = {
			country_event = { id = sleeper.27 }
		}
	}
	
	option = {
		name = sleeper.23.e
		hidden_effect = {
			country_event = { id = sleeper.28 }
		}
	}
	
	option = {
		name = sleeper.23.f
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#e: its planets
country_event = {
	id = sleeper.28
	title = sleeper.23.title 
	desc = sleeper.28.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.23.a
		hidden_effect = {
			country_event = { id = sleeper.24 }
		}
	}
	
	option = {
		name = sleeper.23.b
		hidden_effect = {
			country_event = { id = sleeper.25 }
		}
	}
	
	option = {
		name = sleeper.23.c
		hidden_effect = {
			country_event = { id = sleeper.26 }
		}
	}
	
	option = {
		name = sleeper.23.d
		hidden_effect = {
			country_event = { id = sleeper.27 }
		}
	}
	
	option = {
		name = sleeper.23.e
		hidden_effect = {
			country_event = { id = sleeper.28 }
		}
	}
	
	option = {
		name = sleeper.23.f
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#event to make the sleeper neutral. Sold by TN-3
country_event = {
	id = sleeper.12
	title = sleeper.deal.title
	desc = sleeper.12.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.deal.yes
		allow = {
			resource_stockpile_compare = { resource = energy value >= 2000 }
		}
		add_resource = { energy = -2000 }
		hidden_effect = {
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = no
				set_neutral = yes
				set_friendly = no
			}
			set_country_flag = pacifying_upgrade_bought
			set_country_flag = pacifying_upgrade_active
		}
	}
	
	option = {
		name = sleeper.deal.no
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#events that make the sleeper hostile again, if attacked in any way. For some reason this workaround is necessary, even if the country type is set to become hostile upon attack.
country_event = {
	id = sleeper.18
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			AND = {
				is_country_type = the_sleeper_fallen
				FROM = {
					has_country_flag = pacifying_upgrade_active
				}
			}
			AND = {
				has_country_flag = pacifying_upgrade_active
				FROM = {
					is_country_type = the_sleeper_fallen
				}
			}
		}
	}
	
	immediate = {
		random_country = {
			limit = {
				is_country_type = the_sleeper_fallen
			}
			save_event_target_as = the_sleeper
		}
		IF = {
			limit = {
				FROM = {
					has_country_flag = pacifying_upgrade_active
				}
			}
			FROM = {
				set_faction_hostility = {
					target = event_target:the_sleeper
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
				remove_country_flag = pacifying_upgrade_active
			}
		}
		IF = {
			limit = {
				has_country_flag = pacifying_upgrade_active
			}
			set_faction_hostility = {
				target = event_target:the_sleeper
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
			remove_country_flag = pacifying_upgrade_active
		}
	}
}

#event to buy extra damage against the sleeper after it was unlocked by the special project
country_event = {
	id = sleeper.31
	title = sleeper.deal.title 
	desc = sleeper.31.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.deal.yes
		allow = {
			resource_stockpile_compare = { resource = energy value >= 2500 }
		}
		add_resource = { energy = -2500 }
		add_modifier = { 
			modifier = sleeper_extra_damage 
			days = -1
		}
	}
	
	option = {
		name = sleeper.deal.no
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#event to buy mapinfo about the drone planets 
country_event = {
	id = sleeper.32
	title = sleeper.deal.title 
	desc = sleeper.32.desc
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.deal.yes
		custom_tooltip = sleeper.32.yes.tooltip
		allow = {
			resource_stockpile_compare = { resource = energy value >= 500 }
		}
		add_resource = { energy = -500 }
		hidden_effect = {
			set_country_flag = sleeper_bought_map_info
			every_planet = {
				limit = {
					OR = {
						has_planet_flag = sleeper_drone_planet_1
						has_planet_flag = sleeper_drone_planet_2
						has_planet_flag = sleeper_drone_planet_3
						has_planet_flag = sleeper_drone_planet_4
					}
				}
				surveyed = { 
					set_surveyed = yes 
					surveyor = ROOT
				}
			}
		}
	}
	
	option = {
		name = sleeper.deal.no
		hidden_effect = {
			country_event = { id = sleeper.07 }
		}
	}
}

#Hive first contact
country_event = {
	id = sleeper.08
	title = sleeper.08.title
	desc = sleeper.08.desc
	picture = GFX_evt_star_chart
	location = FROMFROMFROM
	trackable = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = default
		exists = capital_scope
		NOT = { has_country_flag = day_0 }
		from = { NOT = { has_country_flag = day_0 } }
		FROM = {
			OR = {
				has_country_flag = the_sleeper
				is_country_type = scrambled_drones
			}
		}
		NOT = { has_country_flag = sleeper_found }
	}

	immediate = {
		set_country_flag = sleeper_found
		capital_scope = { save_event_target_as = pc_home }
		from = {
			enable_special_project = {
				name = "INVESTIGATE_THE_SLEEPER"
				location = event_target:pc_home
				owner = ROOT
			}
		}
	}
	
	option = {
		name = "action.10.a"
	}
}

country_event = {
	id = sleeper.19
	title = sleeper.19.title
	desc  = sleeper.19.desc
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.19.a
	}
}
	

country_event = {
	id = sleeper.09
	title = sleeper.09.title
	desc = {
		text = sleeper.09.desc.a
		trigger = {
			any_country = {
				is_country_type = hive_researcher_enclave
			}
		}
	}
	desc = {
		text = sleeper.09.desc.b
		trigger = {
			AND = {
				NOT = {
					any_country = {
						is_country_type = hive_researcher_enclave
					}
				}
				NOT = {
					any_country = {
						is_country_type = berserker_awoken_hive
					}
				}
			}
		}
	}
	desc = {
		text = sleeper.09.desc.c
		trigger = {
			any_country = {
				is_country_type = berserker_awoken_hive
			}
		}
	}
	diplomatic = yes 
	picture_event_data = { 
		portrait = event_target:contact_empire 
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes

	immediate = {
		save_event_target_as = us_the_contacter
		if = {
			limit = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
			random_country = {
				limit = {
					is_country_type = hive_researcher_enclave
				}
				save_event_target_as = contact_empire
				establish_communications_no_message = event_target:us_the_contacter
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						any_country = {
							is_country_type = hive_researcher_enclave
						}
					}
					any_country = {
						is_country_type = berserker_awoken_hive
					}
				}
			}
			random_country = {
				limit = {
					is_sleeper = yes
				}
				save_event_target_as = contact_empire
				establish_communications_no_message = event_target:us_the_contacter
			}
		}
		every_country = {
			limit = {
				has_country_flag = the_sleeper
			}
			establish_communications_no_message = event_target:us_the_contacter
			save_event_target_as = sleeper_country
		}
		every_country = {
			limit = {
				is_country_type = scrambled_drones
			}
			establish_communications_no_message = event_target:us_the_contacter
		}
		set_country_flag = sleeper_encountered
	}
	
	option = {
		name = sleeper.07.a
	}
}

#Event for taking "the farm" 
planet_event = {
	id = sleeper.14
	title = sleeper.14.title
	desc  = sleeper.14.desc
	
	is_triggered_only = yes
	
	trigger = {
		AND = {
			has_planet_flag = sleeper_farms
			FROM = {
				is_sleeper = yes
			}
		}
	}
	
	immediate = {
		planet_event = { id = sleeper.36 days = 720 }
	}
	
	#Welcome, friends!
	option = {
		name = sleeper.14.a
	}
	#A fine trophy
	option = {
		name = sleeper.14.b
		trigger = {
			from = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
				}
			}
		}
	}
	#*insert joke about starving communists here*
	option = {
		name = sleeper.14.c
		trigger = {
			from = {
				has_valid_civic = civic_shared_burden
			}
		}
	}
	#*laughts in geniocidal/hive emire*
	option = {
		name = sleeper.14.d
		trigger = {
			from = {
				is_hive_empire = yes
			}
		}
	}
	option = {
		name = sleeper.14.e
		trigger = {
			from = {
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
	}
	option = {
		name = sleeper.14.f
		trigger = {
			from = {
				has_valid_civic = civic_fanatic_purifiers
			}
		}
	}	
	option = {
		name = sleeper.14.g
		trigger = {
			from = {
				has_valid_civic = civic_machine_terminator
			}
		}
	}
	#you are save now, meat bag
	option = {
		name = sleeper.14.h
		trigger = {
			from = {
				has_valid_civic = civic_machine_servitor
			}
		}
	}
}

#followup event: who ever holds the farms two years later gets the ability to use the sleepers cattle species traits
planet_event = {
	id = sleeper.36
	title = sleeper.36.title
	desc  = sleeper.36.desc
	picture = GFX_evt_society_research
	
	is_triggered_only = yes
	
	option = {
		name = sleeper.36.a
		owner = {
			add_research_option = tech_cattle_species_traits
		}
	}
	
	option = {
		name = sleeper.36.b
		owner = {
			add_resource = { influence = 200 }
		}
	}
}

#event that destroys the systems starbase belonging to drone countries and the sleeping/berserker hive when it is conquered by an enemy. would get occupied otherwise, preventing invasion of planets and actually taking the system.
ship_event = {
	id = sleeper.17
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			OR = {
				is_country_type = scrambled_drones
				is_country_type = the_sleeper_fallen
				is_country_type = berserker_awoken_hive
			}
		}
	}
	
	immediate = {
		fleet = { destroy_fleet = this }
	}
}

country_event = {
	id = sleeper.34
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		event_target:sleeper_species = {
			set_citizenship_type = {
				country = this
				type = purge_normal
				cooldown = yes
			}
		}
	}
}

#toggle debugmode
country_event = {
	id = sleeper.35
	title = sleeper.35.title
	desc = sleeper.35.desc
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			any_country = {
				is_sleeper = yes
				NOT = {
					has_country_flag = sleeper_debug_mode_active
				}
			}
		}
		name = sleeper.35.enable
		custom_tooltip = sleeper.35.enable.tooltip
		random_country = {
			limit = {
				is_sleeper = yes
			}
			set_country_flag = sleeper_debug_mode_active
		}
	}
	
	option = {
		trigger = {
			any_country = {
				is_sleeper = yes
				NOT = {
					has_country_flag = sleeper_debug_mode_active
				}
			}
		}
		name = sleeper.35.disable
		random_country = {
			limit = {
				is_sleeper = yes
			}
			remove_country_flag = sleeper_debug_mode_active
		}
	}
}

#debug: check aggro
country_event = {
	id = sleeper.43
	title = sleeper.43.title
	desc = sleeper.43.desc
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				is_sleeper = yes
			}
			save_event_target_as = sleeper
		}
	}
	
	option = {
		name = sleeper.43.a
	}
}

#event that triggers every ten years. Has a chance to increase sleeper aggro. Also checks for crisis factions and AEs. If there is an AE or endgame crisis present and the sleeper aggro is high enough to trigger an berserker awakening, then there a 40% chance that it doesn't awaken at all and a 10% chance that it will awaken properly.
country_event = {
	id = sleeper.37
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			50 = {	#no increase
			}
			20 = {
				change_variable  = { 
					which = sleeper_agitation 
					value = 1
				}
			}
			20 = {
				change_variable  = { 
					which = sleeper_agitation 
					value = 2
				}
			}
			10 = {
				change_variable  = { 
					which = sleeper_agitation
					value = 3
				}
				modifier = {
					factor = 4
					any_country = {
						is_country_type = default
						OR = {
							fleet_power > 50000
							any_owned_planet = {
								has_planet_flag = fallen_empire_world
							}
						}
					}
				}
			}
			
			80 = {
				change_variable  = { 
					which = sleeper_agitation 
					value = 3
				}
				modifier = {
					factor = 0
					any_country = {
						NOR = {
							is_country_type = awakened_marauders
							is_country_type = awakened_fallen_empire
						}
					}
				}
			}
			80 = {
				change_variable  = { 
					which = sleeper_agitation 
					value = 5
				}
				modifier = {
					factor = 0
					any_country = {
						NOR = {
							is_country_type = awakened_fallen_empire
							is_country_type = swarm
							is_country_type = extradimensional
							is_country_type = extradimensional_2
							is_country_type = extradimensional_3
							is_country_type = ai_empire
						}
					}
				}
			}
		}	
		if = {
			limit = {
				check_variable = {
					which = sleeper_agitation 
					value > 99
				}
			}
			set_country_flag = no_aggro_checks
		}
		if = {
			limit = {
				AND = {
					check_variable = {
						which = sleeper_agitation 
						value > 99
					}
					any_country = {
						OR = {
							is_country_type = awakened_fallen_empire
							is_country_type = swarm
							is_country_type = extradimensional
							is_country_type = extradimensional_2
							is_country_type = extradimensional_3
							is_country_type = ai_empire
							is_country_type = gate_builders
						}
					}
				}
			}
			random_list = {
				40 = {
					set_country_flag = eternal_slumber
				}
				10 = {
					set_country_flag = eternal_slumber
					country_event = { id = sleeper_the_awoken.05 days = 60 }
				}
				50 = {}
			}
		}
		country_event = { id = sleeper_awakes.01 days = 1 }
		country_event = { id = sleeper_awakes.16 days = 1 }
		if = {
			limit = {
				AND = {
					is_country_type = the_sleeper_fallen
					NOT = {
						has_country_flag = no_aggro_checks
					}
				}
			}
			country_event = { id = sleeper.37 days = 3600 }
		}
	}
}

#event that (possibly) gives a random neighbor of the hive/its subhives a random mission and if possible a thing to buy. triggered on the sleeper every five years
country_event = {
	id = sleeper.38
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = the_sleeper_fallen
	}
	
	immediate = {
		if = {	#only happens if TN-3 is still alive
			limit = {
				any_country = {
					is_country_type = hive_researcher_enclave
				}
			}
		#save some countries
			random_country = {
				limit = {
					is_country_type = hive_researcher_enclave
				}
				save_event_target_as = tony
			}
			random_country = {
				limit = {
					has_country_flag = drone_country_1
				}
				save_event_target_as = drone_country_1
			}
			random_country = {
				limit = {
					has_country_flag = drone_country_2
				}
				save_event_target_as = drone_country_2
			}
			random_country = {
				limit = {
					has_country_flag = drone_country_3
				}
				save_event_target_as = drone_country_3
			}
			random_country = {
				limit = {
					has_country_flag = drone_country_4
				}
				save_event_target_as = drone_country_4
			}
		#if any default neighbors exist, give them a mission and the chance for a neutrality upgrade.
			if = {
				limit = {
					any_country = {
						AND = {
							OR = {
								is_neighbor_of = this
								is_neighbor_of = event_target:drone_country_1
								is_neighbor_of = event_target:drone_country_2
								is_neighbor_of = event_target:drone_country_3
								is_neighbor_of = event_target:drone_country_4
							}
							NOR = {
								is_country_type = awakened_fallen_empire
								is_country_type = fallen_empire
								is_country_type = dormant_marauders
								is_country_type = awakened_marauders
								is_country_type = swarm
								is_country_type = extradimensional
								is_country_type = extradimensional_2
								is_country_type = extradimensional_3
								is_country_type = ai_empire
								is_country_type = gate_builders
							}
						}
					}
				}
				random_country = {
					limit = {
						AND = {
							OR = {
								is_neighbor_of = this
								is_neighbor_of = event_target:drone_country_1
								is_neighbor_of = event_target:drone_country_2
								is_neighbor_of = event_target:drone_country_3
								is_neighbor_of = event_target:drone_country_4
							}
							NOR = {
								is_country_type = awakened_fallen_empire
								is_country_type = fallen_empire
								is_country_type = dormant_marauders
								is_country_type = awakened_marauders
								is_country_type = swarm
								is_country_type = extradimensional
								is_country_type = extradimensional_2
								is_country_type = extradimensional_3
								is_country_type = ai_empire
								is_country_type = gate_builders
							}
						}
					}
					add_random_tony_mission = yes
					if = {
						limit = {
							AND = {
								event_target:tony = {
									AND = {
										trust = { 
											who = FROM
											value >= 60
										}
										NOT = {
											has_country_flag = OH_DEAR_XENO_GOD_OH_FUCK_WE_WILL_DIE
										}
									}
								}
								NOT = {
									has_country_flag = pacifying_upgrade_bought
								}
							}
						}
						random_list = {
							50 = {
								country_event = { id = sleeper.12 }
							}
							50 = {
							}
						}
					}
				}
			}
		}
	}
}

#one year after invading the thinkery the invader will get a tech for a new colossus weapon. Not triggered on the planet to avoid the evnt not happening if the planet is abandoned.
country_event = {
	id = sleeper.40
	title = sleeper.40.title
	desc = {
		text = sleeper.40.desc.hivemind
		trigger = {
			is_hive_empire = yes
		}
	}
	desc = {
		text = sleeper.40.desc.non_hivemind
		trigger = {
			is_hive_empire = no
		}
	}
	picture = GFX_evt_society_research
	
	is_triggered_only = yes
	
	trigger = {
		is_sleeper = no
	}
	
	option = {
		name = sleeper.40.hivemind
		trigger = {
			owner = {
				is_hive_empire = yes
			}
		}
		add_research_option = tech_planetkiller_sleeper_integrator
	}
	
	option = {
		name = sleeper.40.non_hivemind
		trigger = {
			owner = {
				is_hive_empire = no
			}
		}
		add_research_option = tech_planetkiller_sleeper_hive_creator
	}
	
	option = {
		name = sleeper.40.no
		custom_tooltip = sleeper.40.no.tooltip
		add_resource = { influence = 300 }
	}
}	

planet_event = {
	id = sleeper.41
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_planet_flag = hive_original_homeworld
		owner = {
			is_sleeper = no
		}
	}
	
	immediate = {
		owner = {
			country_event = { id = sleeper.40 days = 360 }
		}
	}
}

#the sleeper has soemthing similar to decadence. Instead of lowering resources, it will add an deviancy multiplier and wandering drone jobs
#represented by a variable, which increases randomly every three months twenty years after its awakening. The chances are modified by its size and number of subjects
#deviancy modifier gets increased every 25 points
#takes into account:
#-do AEs exist?
#-how many subjects does the sleeper have?
#-how many planets does it own? (increases debuff from seven planets upwards)
#-if it has less than 500 hive pops, chance for a slower increase is higher
country_event = {
	id = sleeper.42
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_sleeper = yes
	}
	
	immediate = {
		random_list = {
			25 = {
				change_variable = { which = sleeper_instability value = 1 }
				modifier = {
					factor = 4.0
					count_owned_pops = { 
						limit = { has_trait = trait_hive_mind } 
						count < 500
					}
				}
			}
			30 = {
				change_variable = { which = sleeper_instability value = 2 }
				modifier = {
					factor = 1.5
					any_country = {
						is_country_type = awakened_fallen_empire
					}
				}
				modifier = {
					factor = 1.5
					num_owned_planets = 8
				}
				modifier = {
					factor = 2.0
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count > 0
					}
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count < 3
					}
				}
			}
			25 = {
				change_variable = { which = sleeper_instability value = 3 }
				
				modifier = {
					factor = 1.5
					any_country = {
						is_country_type = awakened_fallen_empire
					}
				}
				modifier = {
					factor = 1.5
					num_owned_planets = 9
				}
				modifier = {
					factor = 2.0
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count > 2
					}
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count < 5
					}
				}
			}
			15 = {
				change_variable = { which = sleeper_instability value = 4 }
				modifier = {
					factor = 1.5
					any_country = {
						is_country_type = awakened_fallen_empire
					}
				}
				modifier = {
					factor = 1.5
					num_owned_planets > 9
				}
				modifier = {
					factor = 3.0
					count_country = {
						limit = { is_subject_type = feeder_vassal }
						count > 4
					}
				}
			}
		}
	#add debuff modifier
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 1 }
				check_variable = { which = sleeper_instability value < 11 }
			}
			add_modifier = { modifier = sleeper_deviancy_debuff_1 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 10 }
				check_variable = { which = sleeper_instability value < 21 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			add_modifier = { modifier = sleeper_deviancy_debuff_2 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 20 }
				check_variable = { which = sleeper_instability value < 31 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			add_modifier = { modifier = sleeper_deviancy_debuff_3 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 30 }
				check_variable = { which = sleeper_instability value < 41 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			add_modifier = { modifier = sleeper_deviancy_debuff_4 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 40 }
				check_variable = { which = sleeper_instability value < 51 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			add_modifier = { modifier = sleeper_deviancy_debuff_5 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 50 }
				check_variable = { which = sleeper_instability value < 61 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			add_modifier = { modifier = sleeper_deviancy_debuff_6 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 60 }
				check_variable = { which = sleeper_instability value < 71 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			remove_modifier = sleeper_deviancy_debuff_6
			add_modifier = { modifier = sleeper_deviancy_debuff_7 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 70 }
				check_variable = { which = sleeper_instability value < 81 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			remove_modifier = sleeper_deviancy_debuff_6
			remove_modifier = sleeper_deviancy_debuff_7
			add_modifier = { modifier = sleeper_deviancy_debuff_8 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 80 }
				check_variable = { which = sleeper_instability value < 91 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			remove_modifier = sleeper_deviancy_debuff_6
			remove_modifier = sleeper_deviancy_debuff_7
			remove_modifier = sleeper_deviancy_debuff_8
			add_modifier = { modifier = sleeper_deviancy_debuff_9 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = sleeper_instability value > 90 }
				check_variable = { which = sleeper_instability value < 101 }
			}
			remove_modifier = sleeper_deviancy_debuff_1
			remove_modifier = sleeper_deviancy_debuff_2
			remove_modifier = sleeper_deviancy_debuff_3
			remove_modifier = sleeper_deviancy_debuff_4
			remove_modifier = sleeper_deviancy_debuff_5
			remove_modifier = sleeper_deviancy_debuff_6
			remove_modifier = sleeper_deviancy_debuff_7
			remove_modifier = sleeper_deviancy_debuff_8
			remove_modifier = sleeper_deviancy_debuff_8
			add_modifier = { modifier = sleeper_deviancy_debuff_10 days = -1 }
		}
	#repeat
		if = {
			limit = {
				check_variable = { which = sleeper_instability value < 101 }
			}
			country_event = { id = sleeper.42 days = 90 }
		}
	}
}

#the AI is not capable of invading the drone countries planets after destroying their starbases. As a workaround, they will automaticly annex them after taking out the starbase. THis can only happen if no ship inside the system is playercontrolled (in case of joined attacks)
# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
country_event = {
	id = sleeper.44
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_ai = yes
		From = {
			is_country_type = scrambled_drones
		}
		FromFromFrom = {
			is_ship_size = starbase_sleeper_drone_country
		}
		NOT = {
			FromFrom = {
				solar_system = {
					any_ship_in_system = {
						owner = {
							is_ai = no
						}
					}
				}
			}
		}
	}
	
	immediate = {
		save_event_target_as = dumb_ai_country
		FromFromFrom = {
			solar_system = {
				every_system_planet = {
					limit = {
						num_pops > 0
					}
					set_owner = event_target:dumb_ai_country
				}
			}
		}
	}
}	
	
	
	
	
	
	
	
	
