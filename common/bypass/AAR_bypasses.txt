#
# These defines the type of bypasses that exist in game. This is only the logical connection between system
# These can be added to megastructures
#
# bypass_type = {
#	name = GATEWAY_GALACTIC		# the localization key used in triggers and effects for the type
#	is_pathfind = yes				# whether this type can be automatically used by the pathfinding (otherwise you'll have to right click the object containing it)
#	requires_exploration = no		# whether this bypass type needs to be 'seen' before it can be used
#	uses_action = no				# whether this type needs an action or can be used automagically
#	always_active = no				# whether bypasses of these types are automatically active on creation, or if they need to be researched/upgraded to be activated
#	windup_time = 0				# time spent "prepping" in the system before going through the bypass
#	winddown_time = 0				# time spent "recovering" in the system after going through the bypass
#	ftl_multiplier = 0				# 0 means instant
#	extends_sensors = yes			# whether you can "see through" the bypass and extends your sensor range to the other side
#	icon_frame = 25
#	remember_instances = no	# whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
#	galactic_map_tooltip_header=GATEWAY_GALACTIC
#	galactic_map_tooltip_desc=GATEWAY_GALACTIC_DESC
#	connection_type = any_other
#	ftl_ship_effect	= "gateway_ftl_ship_effect_entity"		# what effect to spawn on the ship when they jump through the bypass
#	ftl_bypass_effect	= "gateway_ftl_bypass_effect_entity"	# what effect to spawn on the bypass when a ship jumps through
#	bypass_effect		= ""
#	animation_time = 3				# number of days to wait for the jump animation to be played
#	prerequisites = {
#		tech_gateway_activation
#	}
#	on_pre_explore = {					# an effect that is called just before the jump of a right click "explore" action of a fleet
#
#	}
#	country_can_use = {					# trigger to evaluate if a country can use bypasses of this type. this: country, from: (optional) system owner; default: { always = yes }
#	}
#	on_action = "on_entering_bypass"	# The name of the on-action event that will be fired upon entering FTL (if set)
#										# THIS = Fleet
#										# FROM = System jumping to
#										# FROMFROM = System jumped from
# }




###	AAR通路_网道节点
AAR_BPS_webway = {
	name = AAR_WEBWAY	# :0 "网道节点"		AAR_WEBWAY_DESC:0 "该星系包含一个§Y$AAR_WEBWAY$§!"
	is_pathfind = yes
	uses_action = no
	requires_exploration = no
	always_active = no
	windup_time = 3
	winddown_time = 1
	ftl_multiplier = 0.5			# 0 means instant
	icon_frame = 12		# 同虫洞
	remember_instances = no	# whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
	galactic_map_tooltip_header=AAR_WEBWAY
	galactic_map_tooltip_desc=AAR_WEBWAY_DESC
	connection_type = scripted_connection		# any_other/one_to_one/scripted_connection
	animation_time = 1
	ftl_ship_effect = "AAR_entt_FX_webway_SHIP"
	ftl_bypass_effect = "AAR_entt_FX_webway_BYPASS"

	# 科技需求
	prerequisites = {
		AAR_tech_AP_WEBWAY
	}
	# 探索eft	激活网道入口
	on_pre_explore = {
		activate_gateway = fromfrom
	}
	# 国家需求	<root/this>=进入国家/<from>=目的地国家
	country_can_use = {
		has_ascension_perk = AAR_AP_webway
		custom_tooltip = {
			fail_text = AAR_tips_WEBWAY_closed
			OR = {
				NOT = { exists = from }	# 无主目的地
				from = { NOT = { has_closed_borders = root } }	# 开放边界目的地
			}
		}
	}
	# 特殊链接
	scripted_connection = {

		# defines endpoints that can only reach the "nexus"
		node = {
			# system scope
			has_star_flag = AAR_flg_sstm_WEBWAY_node
		}

		# defines endpoint(s) that can reach all "nodes" (but not other nexuses)
		nexus = {
			# system scope
			has_star_flag = AAR_flg_sstm_WEBWAY_nexus
		}
	}
	# 进入触发	<this>=舰队	/<from>=目标星系	/<fromfrom>=来自星系
#	on_action = "AAR_on_entering_webway"

#	respect_closed_borders = yes
#	block_access_if_hostile = yes
}

