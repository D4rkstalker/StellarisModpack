interstellar_habitat_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	show_galactic_map_icon = yes
	prerequisites = { giga_tech_interstellar_habitat }

	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 3500
			influence = 150
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_interstellar_habitat
		NOT = { has_global_flag = stellarhabitat_disabled }
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"			is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"		NOT = { any_system_planet = { is_surveyed = { who = prev.from status = no } } } }
	}

	placement_rules = {
	}

	ai_weight = {
		weight = 300	# Default = 100

		# Can we afford the upkeep

		# Do we want the production

		# Is this system a good location?
		modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# Do we lean towards this from federation/ethic/civic?

		# How many of this megastructure can the AI build?
		modifier = { factor = 0.00	from = { has_country_flag = has_recently_built_interstellar_habitat } }
		modifier = { factor = 0.00	from = { check_variable = { which = completed_i_ringworlds value > 1 } } }
		modifier = { factor = 0.50	from = { check_variable = { which = completed_i_ringworlds value = 1 } } }
		modifier = { factor = 0.00	from = { has_country_flag = giga_started_i_ringworld } }
	}

	on_build_complete = {
		save_event_target_as = giga_system
		set_variable = { which = i_ring_segments value = 0 }
		save_event_target_as = interstellar_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_interstellar_habitat years = 20 }
			set_country_flag = giga_started_i_ringworld
			change_variable = { which = giga_current_stellarhabitat value = 1 }
			country_event = { id = giga_dialog.2901 }	# Notification + Choose where
		}
		remove_megastructure = fromfrom
	}
}

interstellar_habitat_1 = {
	entity = ""
	portrait = "GFX_megastructure_construction_background"
	show_galactic_map_icon = yes
	upgrade_from = { interstellar_habitat_0 }

	build_time = 2700
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
			energy = 5000
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	potential = { NOT = { has_global_flag = stellarhabitat_disabled } }
	possible = { from = { has_technology = giga_tech_interstellar_habitat } }

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		remove_megastructure = fromfrom
	}
}

interstellar_habitat_2 = {
	entity = "interstellar_habitat_stacked_core"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	show_galactic_map_icon = no
	upgrade_desc = hide
	potential = { always = no }
	on_build_complete = {
		from = { set_country_flag = has_built_or_repaired_megastructure }	# Triggers Galactic Wonders
		fromfrom = { set_graphical_culture = from }
	}
}

interstellar_habitat_3 = {
	entity = "interstellar_habitat_entity"
	construction_entity = "interstellar_habitat_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	show_galactic_map_icon = no
	upgrade_from = { interstellar_habitat_2 }

	build_time = 4800
	resources = {
		category = megastructures
		cost = { alloys = 6000 }
	}

	potential = { NOT = { has_global_flag = stellarhabitat_disabled } }
	possible = { from = { has_technology = giga_tech_interstellar_ringworld } }

	ai_weight = {
		factor = 10

		modifier = {
			factor = 0
			from = {
				OR = {
					has_megastructure = interstellar_habitat_3
					has_megastructure = interstellar_habitat_4
				}
			}
		}
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.2903 } }	# Notification
		spawn_megastructure = {
			name = "Interstellar Ring Section"
			type = "interstellar_habitat_4"
			orbit_angle = 90
			orbit_distance = 90
			owner = from
			graphical_culture = fromfrom
			location = star
		}
		spawn_megastructure = {
			name = "Interstellar Ring Section"
			type = "interstellar_habitat_4"
			orbit_angle = 180
			orbit_distance = 90
			owner = from
			graphical_culture = fromfrom
			location = star
		}
		spawn_megastructure = {
			name = "Interstellar Ring Section"
			type = "interstellar_habitat_4"
			orbit_angle = 270
			orbit_distance = 90
			owner = from
			graphical_culture = fromfrom
			location = star
		}
		spawn_megastructure = {
			name = "Interstellar Ring Section"
			type = "interstellar_habitat_4"
			orbit_angle = 0
			orbit_distance = 90
			owner = from
			graphical_culture = fromfrom
			location = star
		}
	}
}

interstellar_habitat_4 = {
	entity = "giga_ringworld_3x_seams_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_desc = hide
	potential = { always = no }
}

interstellar_habitat_5 = {
	entity = "interstellar_ringworld_01_entity"
	construction_entity = "interstellar_ringworld_01_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { interstellar_habitat_4 }

	build_time = 3600
	resources = {
		category = megastructures
		cost = { alloys = 10000 }
	}

	potential = { NOT = { has_global_flag = stellarhabitat_disabled } }
	possible = { from = { has_technology = giga_tech_interstellar_ringworld } }

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.2904 }				# Notification
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
		}

		change_variable = { which = i_ring_segments value = 1 }
		if = {
			limit = { check_variable = { which = i_ring_segments value >= 4 } }
			set_variable = { which = i_ring_segments value = 0 }
			from = {
				remove_country_flag = giga_started_i_ringworld
				change_variable = { which = completed_i_ringworlds value = 1 }
			}
		}

		spawn_planet = {
			class = "pc_interstellar_ringworld_habitable"
			location = fromfrom
			init_effect = {
				set_name = "Interstellar Ringworld Segment"
				set_planet_entity = { graphical_culture = fromfrom }
				surveyed = { set_surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				set_planet_flag = colony_event
				trigger_megastructure_icon = yes
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
				set_planet_flag = has_megastructure
				set_planet_flag = giga_interstellar_ring
				save_event_target_as = interstellar_section
			}
		}

		if = {		limit = { NOT = { has_star_flag = giga_interstellar_1 } } set_star_flag = giga_interstellar_1 event_target:interstellar_section = { set_name = "Interstellar Habitable Segment A" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_interstellar_2 } } set_star_flag = giga_interstellar_2 event_target:interstellar_section = { set_name = "Interstellar Habitable Segment B" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_interstellar_3 } } set_star_flag = giga_interstellar_3 event_target:interstellar_section = { set_name = "Interstellar Habitable Segment C" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_interstellar_4 } } set_star_flag = giga_interstellar_4 event_target:interstellar_section = { set_name = "Interstellar Habitable Segment D" } }

		remove_megastructure = fromfrom
	}
}