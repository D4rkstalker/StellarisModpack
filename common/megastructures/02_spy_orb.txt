@makeshift_sensor_range         = 10
@makeshift_hyperlane_range      = 15
@stage_1_sensor_range           = 20
@stage_1_hyperlane_range        = 30
@stage_2_sensor_range           = 40
@stage_2_hyperlane_range        = 60
@stage_3_sensor_range           = 60
@stage_3_hyperlane_range        = 90


spy_orb_0 = {
    entity = "construction_platform_entity"
    construction_entity = "construction_platform_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = no
    entity_offset = { x = -15 y = -5 }
    build_time = 1800
	build_outside_gravity_well = no 						# indicates this will use "free" placement between the system's inner and outer ring
    resources = {
        category = megastructures
        cost = {
            alloys = 5000
            influence = 300
        }

        upkeep = {
            energy = 20
        }
    }

    prerequisites = { "tech_sentry_array" }

    possible = {
        exists = starbase
        custom_tooltip = {
            fail_text = "requires_inside_border"
            is_inside_border = from
        }
        custom_tooltip = {
            fail_text = "requires_surveyed_system"
            NOT = {
                any_system_planet = {
                    is_surveyed = {
                        who = prev.from
                        status = no
                    }
                }
            }
        }
        custom_tooltip = {
            fail_text = "requires_no_existing_spyorb"
            from = { NOT = { has_country_flag = built_spyorb } }
        }
    }

    placement_rules = {
        planet_possible = {
            custom_tooltip = {
                fail_text = "requires_survey_not_habitable"
                is_surveyed = {
                    who = prev.from
                    status = yes
                }
                colonizeable_planet = no
            }
            custom_tooltip = {
                fail_text = "requires_no_anomaly"
                NOT = { has_anomaly = yes }
            }
            custom_tooltip = {
                fail_text = "requires_no_orbital_station"
                has_orbital_station = no
            }
            custom_tooltip = {
                fail_text = "requires_not_minor_planetary_body"
                NOR = {
                    is_asteroid = yes
                    is_moon = yes
                }
            }
            custom_tooltip = {
                fail_text = "requires_not_ring_world"
                is_ringworld = no
            }
            custom_tooltip = {
                fail_text = "requires_no_existing_megastructure"
                NOR = {
                    has_planet_flag = has_megastructure
                    has_planet_flag = megastructure
                }
            }
        }
    }

    # root = system
    # from = country
    ai_weight = {
        factor = 10
        modifier = {
            factor = 0.1
            starbase = { NOT = { has_starbase_size >= starbase_starfortress } }
        }

        modifier = {
            factor = 0.1
            any_neighbor_system = {
                NOT = {
                    owner = { is_same_value = from }
                }
            }
        }

        modifier = {
            factor = 2.0
            from = {
                OR = {
                    has_ethic = ethic_militarist
                    has_ethic = ethic_fanatic_militarist
                }
            }
        }
    }

    on_build_start = {
        fromfrom.planet = { set_planet_flag = has_megastructure }
    }
    on_build_cancel = {
        fromfrom.planet = { remove_planet_flag = has_megastructure }
    }
    on_build_complete = {
        fromfrom.planet = { set_planet_flag = has_megastructure }
        set_star_flag = spy_orb_built
        from = { set_country_flag = built_spyorb }
    }
}

spy_orb_1 = {
    entity = "spyorb_phase_01_entity"
    construction_entity = "spyorb_phase_01_construction_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = no
    entity_offset = { x = -15 y = -15 }
    build_time = 1800
    resources = {
        category = megastructures
        cost = {
            alloys = 10000
        }

        upkeep = {
            energy = 40
        }
    }

    upgrade_from = {
        spy_orb_0
    }

    prerequisites = { "tech_sentry_array" }

    sensor_range = @stage_1_sensor_range
    hyperlane_range = @stage_1_hyperlane_range
}

spy_orb_2 = {
    entity = "spyorb_phase_02_entity"
    construction_entity = "spyorb_phase_02_construction_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = no
    entity_offset = { x = -15 y = -15 }
    build_time = 1800
    resources = {
        category = megastructures
        cost = {
            alloys = 10000
        }

        upkeep = {
            energy = 60
        }
    }

    upgrade_from = {
        spy_orb_1
    }

    prerequisites = { "tech_sentry_array" }

    sensor_range = @stage_2_sensor_range
    hyperlane_range = @stage_2_hyperlane_range
}


spy_orb_3 = {
    entity = "spyorb_phase_03_entity"
    construction_entity = "spyorb_phase_03_construction_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = no
    entity_offset = { x = -15 y = -15 }
    build_time = 1800
    resources = {
        category = megastructures
        cost = {
            alloys = 10000
        }

        upkeep = {
            energy = 80
        }
    }
    upgrade_from = {
        spy_orb_2
    }

    prerequisites = { "tech_sentry_array" }

    sensor_range = @stage_3_sensor_range
    hyperlane_range = @stage_3_hyperlane_range
}

spy_orb_4 = {
    entity = "spyorb_phase_04_entity"
    construction_entity = "spyorb_phase_04_construction_entity"
    portrait = "GFX_megastructure_spy_orb_background"
    place_entity_on_planet_plane = no
    entity_offset = { x = -15 y = -15 }
    build_time = 1800
    resources = {
        category = megastructures
        cost = {
            alloys = 10000
        }

        upkeep = {
            energy = 100
        }
    }
    upgrade_from = {
        spy_orb_3
    }

    on_build_complete = {
        from = {
            set_country_flag = has_built_or_repaired_megastructure
        }
    }

    prerequisites = { "tech_sentry_array" }
    show_prereqs = yes

    # effect implementation in game_rules (has_full_sensor_range)
}

# Ruined Sentry Array
spy_orb_ruined = {
    entity = "spy_orb_destroyed_entity"
    portrait = "GFX_megastructure_construction_background"

    place_entity_on_planet_plane = no
    entity_offset = { x = -15 y = -15 }

    potential = {
        always = no
    }
}

# Makeshift Sentry Array
spy_orb_makeshift = {
    entity = "spy_orb_destroyed_entity"
    construction_entity = "spy_orb_destroyed_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = no
    entity_offset = { x = -15 y = -15 }
    build_time = 1800
    resources = {
        category = megastructures
        cost = {
            alloys = 5000
        }

        upkeep = {
            energy = 100
        }
    }

    upgrade_from = {
        spy_orb_ruined
    }

    possible = {
        from = {  has_technology = tech_starbase_4 }
    }

    on_build_start = {
        fromfrom = {
            set_graphical_culture = root.from
        }
    }

    sensor_range = @makeshift_sensor_range
    hyperlane_range = @makeshift_hyperlane_range
}

# Restored Sentry Array
spy_orb_restored = {
    entity = "spyorb_phase_04_entity"
    construction_entity = "spyorb_phase_04_construction_entity"
    portrait = "GFX_megastructure_spy_orb_background"
    place_entity_on_planet_plane = no
    entity_offset = { x = -15 y = -15 }
    build_time = 3800
    resources = {
        category = megastructures
        cost = {
            alloys = 15000
        }

        upkeep = {
            energy = 100
        }
    }

    upgrade_from = {
        spy_orb_makeshift
    }

    possible = {
        from = {
            has_technology = tech_mega_engineering
        }
    }

    on_build_start = {
        fromfrom = {
            set_graphical_culture = root.from
        }
    }

    on_build_complete = {
        fromfrom.planet = { set_planet_flag = has_megastructure }
        every_system_ambient_object = { destroy_ambient_object = this }
        from = {
            set_country_flag = has_built_or_repaired_megastructure
            country_event = { id = utopia.2015 }
        }
    }
}
