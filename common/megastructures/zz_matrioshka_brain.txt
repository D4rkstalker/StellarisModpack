matrioshka_brain_0 = {
	entity = "giga_consite_7_7_entity"
	construction_entity = "giga_consite_7_7_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_matrioshka_brain_1 }

	build_time = 500
	resources = {
		category = megastructures
		cost = {
			alloys = 10000
			influence = 300
		}
		upkeep = { energy = 10 }
	}

	potential = {
		has_ascension_perk = ap_gigastructural_constructs
		has_technology = giga_tech_matrioshka_brain_1
		NOT = { has_global_flag = matrioshka_brain_disabled }
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"								is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"							giga_system_is_surveyed = yes }
		custom_tooltip = { fail_text = "requires_no_binary_trinary"							giga_is_bitrinary = no }
		custom_tooltip = { fail_text = "requires_no_colonized_planets"						NOT = { any_system_planet = { is_colony = yes } } }
		custom_tooltip = { fail_text = "requires_no_black_hole_neutron_star_pulsar"			giga_is_special_star = no }
		custom_tooltip = { fail_text = "requires_no_existing_megastructure"					has_no_non_gate_megastructure = yes }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_matrioshka_brain_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_matrioshka_brain value < giga_matrioshka_brain_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"				planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "must_build_around_star"							is_star = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"							has_anomaly = no }
		}
	}

	ai_weight = {
		weight = 100	# Default = 100

		# Can we afford the upkeep
		modifier = { factor = 1.00	chk_afford_alloys_10 = yes }
		modifier = { factor = 0.90	chk_afford_alloys_09 = yes }
		modifier = { factor = 0.80	chk_afford_alloys_08 = yes }
		modifier = { factor = 0.70	chk_afford_alloys_07 = yes }
		modifier = { factor = 0.60	chk_afford_alloys_06 = yes }
		modifier = { factor = 0.50	chk_afford_alloys_05 = yes }
		modifier = { factor = 0.40	chk_afford_alloys_04 = yes }
		modifier = { factor = 0.30	chk_afford_alloys_03 = yes }
		modifier = { factor = 0.20	chk_afford_alloys_25 = yes }
		modifier = { factor = 0.10	chk_afford_alloys_02 = yes }
		modifier = { factor = 0.00	chk_afford_alloys_15 = yes }
		modifier = { factor = 0.00	from = { has_monthly_income = { resource = influence value < 2 } } }

		# Do we want the production
		modifier = { factor = 3.75	chk_needs_physics_10 = yes }
		modifier = { factor = 3.50	chk_needs_physics_09 = yes }
		modifier = { factor = 3.25	chk_needs_physics_08 = yes }
		modifier = { factor = 3.00	chk_needs_physics_07 = yes }
		modifier = { factor = 2.75	chk_needs_physics_06 = yes }
		modifier = { factor = 2.50	chk_needs_physics_05 = yes }
		modifier = { factor = 2.25	chk_needs_physics_04 = yes }
		modifier = { factor = 2.00	chk_needs_physics_03 = yes }
		modifier = { factor = 1.75	chk_needs_physics_25 = yes }
		modifier = { factor = 1.50	chk_needs_physics_02 = yes }
		modifier = { factor = 1.25	chk_needs_physics_15 = yes }

		modifier = { factor = 3.75	chk_needs_society_10 = yes }
		modifier = { factor = 3.50	chk_needs_society_09 = yes }
		modifier = { factor = 3.25	chk_needs_society_08 = yes }
		modifier = { factor = 3.00	chk_needs_society_07 = yes }
		modifier = { factor = 2.75	chk_needs_society_06 = yes }
		modifier = { factor = 2.50	chk_needs_society_05 = yes }
		modifier = { factor = 2.25	chk_needs_society_04 = yes }
		modifier = { factor = 2.00	chk_needs_society_03 = yes }
		modifier = { factor = 1.75	chk_needs_society_25 = yes }
		modifier = { factor = 1.50	chk_needs_society_02 = yes }
		modifier = { factor = 1.25	chk_needs_society_15 = yes }

		modifier = { factor = 3.75	chk_needs_engineering_10 = yes }
		modifier = { factor = 3.50	chk_needs_engineering_09 = yes }
		modifier = { factor = 3.25	chk_needs_engineering_08 = yes }
		modifier = { factor = 3.00	chk_needs_engineering_07 = yes }
		modifier = { factor = 2.75	chk_needs_engineering_06 = yes }
		modifier = { factor = 2.50	chk_needs_engineering_05 = yes }
		modifier = { factor = 2.25	chk_needs_engineering_04 = yes }
		modifier = { factor = 2.00	chk_needs_engineering_03 = yes }
		modifier = { factor = 1.75	chk_needs_engineering_25 = yes }
		modifier = { factor = 1.50	chk_needs_engineering_02 = yes }
		modifier = { factor = 1.25	chk_needs_engineering_15 = yes }

		# Is this system a good location?
		modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# Do we lean towards this from federation/ethic/civic?
		modifier = { factor = 2		from = { has_federation = yes federation = { has_federation_type = research_federation } } }
		modifier = { factor = 3		from = { has_ethic = ethic_fanatic_materialist } }
		modifier = { factor = 1.5	from = { has_ethic = ethic_materialist } }
		modifier = { factor = 1.5	from = { has_civic = civic_technocracy } }

		# How many of this megastructure can the AI build?
		modifier = {
			factor = 0
			from = {
				OR = {
					has_megastructure = matrioshka_brain_0
					has_megastructure = matrioshka_brain_1
					has_megastructure = matrioshka_brain_2
					has_megastructure = matrioshka_brain_3
					has_megastructure = matrioshka_brain_4
					has_megastructure = matrioshka_brain_5
					has_megastructure = matrioshka_brain_6
					has_megastructure = matrioshka_brain_7
					has_megastructure = matrioshka_brain_8
					has_megastructure = matrioshka_brain_9
				}
			}
		}
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.501 }	# Notification
			change_variable = { which = giga_current_matrioshka_brain value = 1 }
		}
		fromfrom.planet = {
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
		}
	}
}

matrioshka_brain_1 = {
	entity = "matrioshka_brain_01_entity"
	construction_entity = "matrioshka_brain_01_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { matrioshka_brain_0 }

	build_time = 1500
	resources = {
		category = megastructures
		cost = { alloys = 30000 }
		upkeep = { alloys = 10 }
		produces = {
			physics_research = 50
			society_research = 50
			engineering_research = 50
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_1
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.502 } }	# Notification
		every_system_planet = { limit = { is_star = no } remove_planet = yes }
		set_asteroid_belt = { radius = 0 }
	}
}

matrioshka_brain_2 = {
	entity = "matrioshka_brain_02_entity"
	construction_entity = "matrioshka_brain_02_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { matrioshka_brain_1 }

	build_time = 2700
	resources = {
		category = megastructures
		cost = { alloys = 35000 }
		upkeep = { alloys = 25 }
		produces = {
			physics_research = 250
			society_research = 250
			engineering_research = 250
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_1
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.503 } }	# Notification
	}
}

matrioshka_brain_3 = {
	entity = "matrioshka_brain_03_entity"
	construction_entity = "matrioshka_brain_03_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { matrioshka_brain_2 }

	build_time = 5400
	resources = {
		category = megastructures
		cost = { alloys = 40000 }
		upkeep = {
			alloys = 50
			influence = 0.5
		}
		produces = {
			physics_research = 750
			society_research = 750
			engineering_research = 750
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_1
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.504 } }	# Notification
	}
}

matrioshka_brain_4 = {
	entity = "matrioshka_brain_04_entity"
	construction_entity = "matrioshka_brain_04_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { matrioshka_brain_3 }

	build_time = 5400
	resources = {
		category = megastructures
		cost = { alloys = 45000 }
		upkeep = {
			alloys = 100
			influence = 1
		}
		produces = {
			physics_research = 2000
			society_research = 2000
			engineering_research = 2000
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_1
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.505 } }	# Notification
	}
}

matrioshka_brain_5 = {
	entity = "matrioshka_brain_05_entity"
	construction_entity = "matrioshka_brain_05_construction_entity"
	portrait = "GFX_megastructure_sentient_AI"
	upgrade_from = { matrioshka_brain_4 }

	build_time = 5400
	resources = {
		category = megastructures
		cost = { alloys = 50000 }
		upkeep = {
			alloys = 210
			influence = 1.5
		}
		produces = {
			physics_research = 5000
			society_research = 5000
			engineering_research = 5000
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_1
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.506 }	# Notification
			if = {
				limit = { NOT = { has_modifier = bigbrainbuff } }
				add_modifier = { modifier = "bigbrainbuff" days = -1 }
			}
		}
	}
}

matrioshka_brain_6 = {
	entity = "matrioshka_brain_05_entity"
	construction_entity = "matrioshka_brain_05_construction_entity"
	portrait = "GFX_megastructure_sentient_AI"
	upgrade_from = { matrioshka_brain_5 }

	build_time = 1350
	resources = {
		category = megastructures
		cost = { alloys = 12500 }
		upkeep = {
			alloys = 220
			influence = 1.5
		}
		produces = {
			physics_research = 4375
			society_research = 4375
			engineering_research = 4375
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_2
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.507 }	# Notification
			if = {
				limit = { NOT = { has_modifier = bigbrainbuff } }
				add_modifier = { modifier = "bigbrainbuff" days = -1 }
			}
		}
		spawn_planet = {
			class = "pc_virtual_reality"
			orbit_distance = 70
			orbit_angle = 0
			size = 10
			init_effect = {
				surveyed = { set_surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				clear_blockers = yes
				save_event_target_as = virtual_section
				trigger_megastructure_icon = yes
				set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
				set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_virtual_reality
			}
		}

		if = {		limit = { NOT = { has_star_flag = giga_virtual_1 } } set_star_flag = giga_virtual_1 event_target:virtual_section = { set_name = "Virtual Section A" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_2 } } set_star_flag = giga_virtual_2 event_target:virtual_section = { set_name = "Virtual Section B" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_3 } } set_star_flag = giga_virtual_3 event_target:virtual_section = { set_name = "Virtual Section C" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_4 } } set_star_flag = giga_virtual_4 event_target:virtual_section = { set_name = "Virtual Section D" } }
	}
}

matrioshka_brain_7 = {
	entity = "matrioshka_brain_05_entity"
	construction_entity = "matrioshka_brain_05_construction_entity"
	portrait = "GFX_megastructure_sentient_AI"
	upgrade_from = { matrioshka_brain_6 }

	build_time = 1350
	resources = {
		category = megastructures
		cost = { alloys = 12500 }
		upkeep = {
			alloys = 230
			influence = 1.5
		}
		produces = {
			physics_research = 3750
			society_research = 3750
			engineering_research = 3750
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_2
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			if = {
				limit = { NOT = { has_modifier = bigbrainbuff } }
				add_modifier = { modifier = "bigbrainbuff" days = -1 }
			}
		}
		spawn_planet = {
			class = "pc_virtual_reality"
			orbit_distance = 70
			orbit_angle = 90
			size = 10
			init_effect = {
				surveyed = { set_surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				clear_blockers = yes
				save_event_target_as = virtual_section
				trigger_megastructure_icon = yes
				set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
				set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_virtual_reality
			}
		}

		if = {		limit = { NOT = { has_star_flag = giga_virtual_1 } } set_star_flag = giga_virtual_1 event_target:virtual_section = { set_name = "Virtual Section A" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_2 } } set_star_flag = giga_virtual_2 event_target:virtual_section = { set_name = "Virtual Section B" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_3 } } set_star_flag = giga_virtual_3 event_target:virtual_section = { set_name = "Virtual Section C" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_4 } } set_star_flag = giga_virtual_4 event_target:virtual_section = { set_name = "Virtual Section D" } }
	}
}

matrioshka_brain_8 = {
	entity = "matrioshka_brain_05_entity"
	construction_entity = "matrioshka_brain_05_construction_entity"
	portrait = "GFX_megastructure_sentient_AI"
	upgrade_from = { matrioshka_brain_7 }

	build_time = 1350
	resources = {
		category = megastructures
		cost = { alloys = 12500 }
		upkeep = {
			alloys = 240
			influence = 1.5
		}
		produces = {
			physics_research = 3125
			society_research = 3125
			engineering_research = 3125
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_2
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			if = {
				limit = { NOT = { has_modifier = bigbrainbuff } }
				add_modifier = { modifier = "bigbrainbuff" days = -1 }
			}
		}
		spawn_planet = {
			class = "pc_virtual_reality"
			orbit_distance = 70
			orbit_angle = 180
			size = 10
			init_effect = {
				surveyed = { set_surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				clear_blockers = yes
				save_event_target_as = virtual_section
				trigger_megastructure_icon = yes
				set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
				set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_virtual_reality
			}
		}

		if = {		limit = { NOT = { has_star_flag = giga_virtual_1 } } set_star_flag = giga_virtual_1 event_target:virtual_section = { set_name = "Virtual Section A" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_2 } } set_star_flag = giga_virtual_2 event_target:virtual_section = { set_name = "Virtual Section B" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_3 } } set_star_flag = giga_virtual_3 event_target:virtual_section = { set_name = "Virtual Section C" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_4 } } set_star_flag = giga_virtual_4 event_target:virtual_section = { set_name = "Virtual Section D" } }
	}
}

matrioshka_brain_9 = {
	entity = "matrioshka_brain_05_entity"
	construction_entity = "matrioshka_brain_05_construction_entity"
	portrait = "GFX_megastructure_sentient_AI"
	upgrade_from = { matrioshka_brain_8 }

	build_time = 1350
	resources = {
		category = megastructures
		cost = { alloys = 12500 }
		upkeep = {
			alloys = 250
			influence = 1.5
		}
		produces = {
			physics_research = 2500
			society_research = 2500
			engineering_research = 2500
			machinedlc_processing_capacity = 2500
		}
	}

	potential = { NOT = { has_global_flag = matrioshka_brain_disabled } }
	possible = {
		from = {
			has_ascension_perk = ap_gigastructural_constructs
			has_technology = giga_tech_matrioshka_brain_2
		}
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.508 }	# Notification
			if = {
				limit = { NOT = { has_modifier = bigbrainbuff } }
				add_modifier = { modifier = "bigbrainbuff" days = -1 }
			}
		}
		spawn_planet = {
			class = "pc_virtual_reality"
			orbit_distance = 70
			orbit_angle = 270
			size = 10
			init_effect = {
				surveyed = { set_surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				clear_blockers = yes
				save_event_target_as = virtual_section
				trigger_megastructure_icon = yes
				set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
				set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_virtual_reality
			}
		}

		if = {		limit = { NOT = { has_star_flag = giga_virtual_1 } } set_star_flag = giga_virtual_1 event_target:virtual_section = { set_name = "Virtual Section A" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_2 } } set_star_flag = giga_virtual_2 event_target:virtual_section = { set_name = "Virtual Section B" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_3 } } set_star_flag = giga_virtual_3 event_target:virtual_section = { set_name = "Virtual Section C" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_virtual_4 } } set_star_flag = giga_virtual_4 event_target:virtual_section = { set_name = "Virtual Section D" } }
	}
}