macro_test_site_0 = {
	entity = "giga_consite_5_5_entity"
	construction_entity = "giga_consite_5_5_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_engineering_test_site }

	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
			influence = 75
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_engineering_test_site
		NOT = { has_global_flag = megabase_disabled }
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border" is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_megabase_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_megabase value < giga_megabase_cap }
				}
			}
		}
	}

	placement_rules = {
	}

	ai_weight = {
		weight = 100	# Default = 100

		# Can we afford the upkeep
		modifier = { factor = 1.00	chk_afford_energy_10 = yes }
		modifier = { factor = 0.90	chk_afford_energy_09 = yes }
		modifier = { factor = 0.80	chk_afford_energy_08 = yes }
		modifier = { factor = 0.70	chk_afford_energy_07 = yes }
		modifier = { factor = 0.60	chk_afford_energy_06 = yes }
		modifier = { factor = 0.50	chk_afford_energy_05 = yes }
		modifier = { factor = 0.40	chk_afford_energy_04 = yes }
		modifier = { factor = 0.30	chk_afford_energy_03 = yes }
		modifier = { factor = 0.20	chk_afford_energy_25 = yes }
		modifier = { factor = 0.10	chk_afford_energy_02 = yes }
		modifier = { factor = 0.00	chk_afford_energy_15 = yes }

		# Do we want the production
		modifier = { factor = 3.75	chk_needs_engineering_10 = yes }
		modifier = { factor = 3.50	chk_needs_engineering_09 = yes }
		modifier = { factor = 3.25	chk_needs_engineering_08 = yes }
		modifier = { factor = 3.00	chk_needs_engineering_07 = yes }
		modifier = { factor = 2.75	chk_needs_engineering_06 = yes }
		modifier = { factor = 2.50	chk_needs_engineering_05 = yes }
		modifier = { factor = 2.25	chk_needs_engineering_04 = yes }
		modifier = { factor = 2.00	chk_needs_engineering_03 = yes }
		modifier = { factor = 1.75	chk_needs_engineering_25 = yes }
		modifier = { factor = 1.50	chk_needs_engineering_02 = yes }
		modifier = { factor = 1.25	chk_needs_engineering_15 = yes }

		# Is this system a good location?
		modifier = { factor = 0.5	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }

		# Do we lean towards this from federation/ethic/civic?
		modifier = { factor = 2.00	from = { has_federation = yes federation = { has_federation_type = research_federation } } }
		modifier = { factor = 2.00	from = { has_ethic = ethic_fanatic_materialist } }
		modifier = { factor = 1.50	from = { has_ethic = ethic_materialist } }
		modifier = { factor = 1.25	from = { has_civic = civic_technocracy } }

		# How many of this megastructure can the AI build?
		modifier = { factor = 0.00 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = macro_test_site_1 is_megastructure_type = macro_test_site_restored } } count > 5 } } }
		modifier = { factor = 0.15 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = macro_test_site_1 is_megastructure_type = macro_test_site_restored } } count = 5 } } }
		modifier = { factor = 0.30 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = macro_test_site_1 is_megastructure_type = macro_test_site_restored } } count = 4 } } }
		modifier = { factor = 0.45 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = macro_test_site_1 is_megastructure_type = macro_test_site_restored } } count = 3 } } }
		modifier = { factor = 0.60 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = macro_test_site_1 is_megastructure_type = macro_test_site_restored } } count = 2 } } }
		modifier = { factor = 0.75 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = macro_test_site_1 is_megastructure_type = macro_test_site_restored } } count = 1 } } }
		modifier = {
			factor = 0
			from = {
				OR = {
					has_megastructure = macro_test_site_0
					has_megastructure = macro_test_site_ruined
				}
			}
		}
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.401 }	# Notification
			change_variable = { which = giga_current_megabase value = 1 }
		}
		fromfrom.planet = {
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
		}
	}
}

macro_test_site_1 = {
	entity = "eng_megabase_station_1"
	construction_entity = "eng_megabase_station_1"
	portrait = "GFX_megastructure_cybernetics"
	place_entity_on_planet_plane = no
	upgrade_from = { macro_test_site_0 }

	build_time = 1800
	resources = {
		category = megastructures
		cost = { alloys = 5000 }
		upkeep = {
			energy = 25
			alloys = 5
		}
		produces = { engineering_research = 150 }
	}

	potential = { NOT = { has_global_flag = megabase_disabled } }
	possible = { from = { has_technology = giga_tech_engineering_test_site } }

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.402 }	# Notification
			if = {
				limit = { NOT = { has_modifier = testbuff } }
				add_modifier = { modifier = "testbuff" days = -1 }
			}
		}
	}
}

macro_test_site_1_dismantle = {
	entity = ""
	portrait = "GFX_megastructure_physics_research"
	upgrade_from = { macro_test_site_1 }

	build_time = 10
	resources = {
		category = megastructures
		cost = {
			alloys = -1500
			energy = 100
		}
	}

	potential = {
		NOT = { has_global_flag = megabase_disabled }
		is_ai = no
	}
	possible = { from = { has_technology = giga_tech_engineering_test_site } }

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		remove_megastructure = fromfrom
		fromfrom.planet = {
			remove_planet_flag = has_megastructure
			remove_planet_flag = megastructure
		}
	}
}

macro_test_site_ruined = {
	entity = "eng_megabase_station_1_ruined"
	place_entity_on_planet_plane = no
	portrait = "GFX_megastructure_construction_background"
	potential = { always = no }
}

macro_test_site_restored = {
	entity = "eng_megabase_station_1"
	construction_entity = "eng_megabase_station_1"
	portrait = "GFX_megastructure_cybernetics"
	place_entity_on_planet_plane = no
	upgrade_from = { macro_test_site_ruined }

	build_time = 1800
	resources = {
		category = megastructures
		cost = { alloys = 5000 }
		upkeep = {
			energy = 25
			alloys = 5
		}
		produces = { engineering_research = 150 }
	}

	potential = { NOT = { has_global_flag = megabase_disabled } }
	possible = { from = { has_technology = giga_tech_engineering_test_site } }

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.404 }	# Notification
			if = {
				limit = { NOT = { has_modifier = testbuff } }
				add_modifier = { modifier = "testbuff" days = -1 }
			}
		}
		every_system_ambient_object = { destroy_ambient_object = this }
		spawn_megastructure = { type = "macro_test_site_1" owner = from location = fromfrom.planet }
		remove_megastructure = fromfrom
	}
}