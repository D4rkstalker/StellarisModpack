dyson_swarm_0 = {
	entity = ""
	construction_entity = "orbital_habitat_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = -7 y = -7 }
	build_time = 400

	resources = {
		category = megastructures
		cost = {
			alloys = 1500
			minerals = 5000
			influence = 100
		}
	}
	construction_blocks_others = no

	potential = {
		AND = {
			NOR = {
				has_civic = civic_the_void
			#gwens additional playstyles (yup) integartion
				has_civic = civic_GAPS_Spaceborn
			}
			OR = {
				has_technology = tech_dyson_swarm
				has_civic = civic_diadochi
				has_civic = civic_great_khans_legacy
				has_country_flag = democratic_khanate_flag
			}
		}
	}

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_not_habitable"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "must_build_around_star"
				is_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "no_dyson_sphere_no_ringworld"
				solar_system = {
					NOR = {	
						has_star_flag = dyson_sphere_built
						has_star_flag = ring_world_built
					}
				}
			}
			custom_tooltip = {
				fail_text = "dyson_not_right_star"
				NOT = {
					is_planet_class = pc_black_hole
					is_planet_class = pc_neutron_star
					is_planet_class = pc_pulsar
					is_planet_class = pc_t
					is_planet_class = pc_nova_2
					is_planet_class = pc_nova_1
					is_planet_class = pc_collapsar
					is_planet_class = pc_magnetar
					is_planet_class = pc_microquasar_1
					is_planet_class = pc_microquasar_2
				}
			}
			custom_tooltip = {
				fail_text = "dyson_only_one_per_system"
				NOT = {
					solar_system = {
						any_system_planet = {
							is_planet_class = pc_dyson_swarm
						}
					}
				}
			}
		}
	}

	# root = system
	# from = country	
	ai_weight = {
		factor = 0
	}

	on_build_start = {}
	on_build_cancel = {}
	
	on_build_complete = {
		spawn_planet = {
			class = "pc_dyson_swarm"
			location = fromfrom.planet
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 9.899
			size = 4
			has_ring = no
			
			init_effect = {
				remove_megastructure = fromfrom	
				set_name = "Dyson swarm administration"
				set_planet_entity = {
					entity = "orbital_habitat_entity"
					graphical_culture = fromfrom
				}
				surveyed = {
					set_surveyed = yes
					surveyor = FROM
				}
				set_all_comms_surveyed = yes
				clear_blockers = yes
				clear_deposits = yes
				set_planet_flag = megastructure
				set_planet_flag = habitat
				set_planet_flag = colony_event
				prevent_anomaly = yes
				set_planet_flag = is_dyson_swarm
				
			#comp for ecology mod to prevent polution events
				set_planet_flag = eco_no_pollution
				
			#Guilli Compatability to prevent spawning new modifiers or deposits
				every_deposit = {
					remove_deposit = yes
				}
				
				while = {
					count = 2
					create_ambient_object = {
						type = "dyson_station_01"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = { 
						set_ambient_object_flag = dyson_swarm_object
						set_location = {
							target = from.from
							distance = 40
							angle = random
						}
					}
				}
				create_ambient_object = {
					type = "dyson_station_02"
					entity_offset_height = { min = -0 max = -25 }
					location = this
				}
				last_created_ambient_object = { 
					set_ambient_object_flag = dyson_swarm_object
					set_location = {
						target = from.from
						distance = 38
						angle = random
					}
				}
				create_ambient_object = {
					type = "dyson_station_04"
					entity_offset_height = { min = -0 max = -25 }
					location = this
				}
				last_created_ambient_object = { 
					set_ambient_object_flag = dyson_swarm_object
					set_location = {
						target = from.from
						distance = 36
						angle = random
					}
				}
				create_ambient_object = {
					type = "dyson_station_05"
					entity_offset_height = { min = -0 max = -25 }
					location = this
				}
				last_created_ambient_object = { 
					set_ambient_object_flag = dyson_swarm_object
					set_location = {
						target = from.from
						distance = 42
						angle = random
					}
				}		
			} 
		}
		fromfrom.planet = {
			set_planet_flag = has_dyson_swarm
		}
		from = {
			country_event =  { id = dyson_swarm_other.1 }
		}
		from = {
			if = {
				limit = {
						NOT = { has_country_flag = built_at_least_one_dyson_swarm }
					}
					set_variable = { which = number_of_built_dyson_swarms value = 1 }
					set_country_flag = built_at_least_one_dyson_swarm 
					break = yes
				}
			if = {
				limit = {
						has_country_flag = built_at_least_one_dyson_swarm 
					}
					change_variable = { which = number_of_built_dyson_swarms value = 1 }
					break = yes
			}
		}
	}
}

dyson_swarm_cheaper_0 = {
	entity = ""
	construction_entity = "orbital_habitat_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = -7 y = -7 }
	build_time = 400

	resources = {
		category = megastructures
		cost = {
			alloys = 1000
			minerals = 3500
			influence = 100
		}
	}
	construction_blocks_others = no

	potential = {
		OR = {
		#gwens additional playstyles (yup) integartion
			has_civic = civic_GAPS_Spaceborn
			has_civic = civic_the_void
			has_civic = civic_machine_rogue_colonizing_unit
		}
	}

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_not_habitable"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "must_build_around_star"
				is_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "no_dyson_sphere_no_ringworld"
				solar_system = {
					NOR = {	
						has_star_flag = dyson_sphere_built
						has_star_flag = ring_world_built
					}
				}
			}
			custom_tooltip = {
				fail_text = "dyson_not_right_star"
				NOT = {
					is_planet_class = pc_black_hole
					is_planet_class = pc_neutron_star
					is_planet_class = pc_pulsar
					is_planet_class = pc_t
					is_planet_class = pc_nova_2
					is_planet_class = pc_nova_1
					is_planet_class = pc_collapsar
					is_planet_class = pc_magnetar
					is_planet_class = pc_microquasar_1
					is_planet_class = pc_microquasar_2
				}
			}
			custom_tooltip = {
				fail_text = "dyson_only_one_per_system"
				NOT = {
					solar_system = {
						any_system_planet = {
							is_planet_class = pc_dyson_swarm
						}
					}
				}
			}
		}
	}

	# root = system
	# from = country	
	ai_weight = {
		factor = 2
		
		modifier = {
			factor = 0.1
			from = {
				#so the AI wont waste resources on upgrading if its income is bad.
				NOT = {
					has_monthly_income = {
						resource = alloys
						value > 25
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
		#shouldn't apply here, as the Ai should use this advantage to the fullest
		#modifier = {
		#	weight = 0
		#	from = {
		#		check_variable = { which = number_of_built_dyson_swarms value = 4 }
		#	}
		#}
	}

	on_build_start = {}
	on_build_cancel = {}
	
	on_build_complete = {
		spawn_planet = {
			class = "pc_dyson_swarm"
			location = fromfrom.planet
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 9.899
			size = 4
			has_ring = no
			
			init_effect = {
				remove_megastructure = fromfrom	
				set_name = "Dyson swarm administration"
				set_planet_entity = {
					entity = "orbital_habitat_entity"
					graphical_culture = fromfrom
				}
				surveyed = {
					set_surveyed = yes
					surveyor = FROM
				}
				set_all_comms_surveyed = yes
				clear_blockers = yes
				clear_deposits = yes
				set_planet_flag = megastructure
				set_planet_flag = habitat
				set_planet_flag = colony_event
				prevent_anomaly = yes
				set_planet_flag = is_dyson_swarm
			#comp for ecology mod to prevent polution events
				set_planet_flag = eco_no_pollution
				
			#Guilli Compatability to prevent spawning new modifiers or deposits
				every_deposit = {
					remove_deposit = yes
				}
			
			#spawn ambient objects
				while = {
					count = 2
					create_ambient_object = {
						type = "dyson_station_01"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = { 
						set_ambient_object_flag = dyson_swarm_object
						set_location = {
							target = from.from
							distance = 40
							angle = random
						}
					}
				}
				create_ambient_object = {
						type = "dyson_station_01"
						entity_offset_height = { min = -0 max = -25 }
						location = this
					}
					last_created_ambient_object = { 
						set_ambient_object_flag = dyson_swarm_object
						set_location = {
							target = from.from
							distance = 40
							angle = random
						}
					}
				create_ambient_object = {
					type = "dyson_station_02"
					entity_offset_height = { min = -0 max = -25 }
					location = this
				}
				last_created_ambient_object = { 
					set_ambient_object_flag = dyson_swarm_object
					set_location = {
						target = from.from
						distance = 38
						angle = random
					}
				}
				create_ambient_object = {
					type = "dyson_station_04"
					entity_offset_height = { min = -0 max = -25 }
					location = this
				}
				last_created_ambient_object = { 
					set_ambient_object_flag = dyson_swarm_object
					set_location = {
						target = from.from
						distance = 36
						angle = random
					}
				}
				create_ambient_object = {
					type = "dyson_station_05"
					entity_offset_height = { min = -0 max = -25 }
					location = this
				}
				last_created_ambient_object = { 
				set_ambient_object_flag = dyson_swarm_object
					set_location = {
						target = from.from
						distance = 42
						angle = random
					}
				}	
			} 
		}
		fromfrom.planet = {
			set_planet_flag = has_dyson_swarm
		}
		from = {
			country_event =  { id = dyson_swarm_other.1 }
		}
		from = {
			if = {
				limit = {
						NOT = { has_country_flag = built_at_least_one_dyson_swarm }
					}
					set_variable = { which = number_of_built_dyson_swarms value = 1 }
					set_country_flag = built_at_least_one_dyson_swarm 
					break = yes
				}
			if = {
				limit = {
						has_country_flag = built_at_least_one_dyson_swarm 
					}
					change_variable = { which = number_of_built_dyson_swarms value = 1 }
					break = yes
			}
		}
	}
}