# Modified: set the entity for the spawned planet explicitly, graphical_culture sourced fromfrom (the mega) rather than the owner (from)
gigablackhole_ring_world_3 = {
	entity = "penrose_sphere_ringworld_01_entity"
	construction_entity = "penrose_sphere_ringworld_01_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { gigablackhole_ring_world_2 }

	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 40000 }
	}

	potential = { NOT = { has_global_flag = penrose_sphere_disabled } }
	possible = { from = { has_technology = giga_tech_penrose_sphere_3 } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.1206 }				# Notification
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_82
					}
				}
				set_country_flag = giga_achievement_82
				set_timed_country_flag = { flag = giga_achievement_82_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
		spawn_planet = {
			class = "pc_giga_penrose_habitable"
			location = fromfrom
			init_effect = {
				set_planet_entity = {
					entity = "penrose_sphere_ringworld_01_entity"
					graphical_culture = fromfrom
				}
				set_surveyed = {
					surveyed = yes
					surveyor = from
				}
				set_all_comms_surveyed = yes
				trigger_megastructure_icon = yes
				save_event_target_as = penrose_section
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_penrose

				giga_start_ai_colony_if_safe = yes
			}
		}
		# Name the segments
		if = {		limit = { NOT = { has_star_flag = giga_penrose_1 } } set_star_flag = giga_penrose_1 event_target:penrose_section = { set_name = "Penrose Segment A" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_penrose_2 } } set_star_flag = giga_penrose_2 event_target:penrose_section = { set_name = "Penrose Segment B" } }
		remove_megastructure = fromfrom
	}
}

# Modified: set the entity for the spawned planet explicitly, graphical_culture sourced fromfrom (the mega) rather than the owner (from)
interstellar_habitat_5 = {
	entity = "interstellar_ringworld_01_entity"
	construction_entity = "interstellar_ringworld_01_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { interstellar_habitat_4 }

	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 10000 }
	}

	potential = { NOT = { has_global_flag = stellarhabitat_disabled } }
	possible = { from = { has_technology = giga_tech_interstellar_ringworld } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.2904 }				# Notification
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_84
					}
				}
				set_country_flag = giga_achievement_84
				set_timed_country_flag = { flag = giga_achievement_84_notification days = 30 }
				giga_achievement_sound = yes
			}
		}

		change_variable = { which = i_ring_segments value = 1 }
		if = {
			limit = { check_variable = { which = i_ring_segments value >= 4 } }
			set_variable = { which = i_ring_segments value = 0 }
			from = {
				remove_country_flag = giga_started_i_ringworld
				change_variable = { which = completed_i_ringworlds value = 1 }
			}
		}

		spawn_planet = {
			class = pc_interstellar_ringworld_habitable
			location = fromfrom
			init_effect = {
				set_name = "Interstellar Ringworld Segment"
				set_planet_entity = {
					entity = "interstellar_ringworld_01_entity"
					graphical_culture = fromfrom
				}
				set_surveyed = {
					surveyed = yes
					surveyor = from
				}
				set_all_comms_surveyed = yes
				set_planet_flag = colony_event
				trigger_megastructure_icon = yes
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
				set_planet_flag = giga_interstellar_ring
				save_event_target_as = interstellar_section

				giga_start_ai_colony_if_safe = yes
			}
		}

		if = {		limit = { NOT = { has_star_flag = giga_interstellar_1 } } set_star_flag = giga_interstellar_1 event_target:interstellar_section = { set_name = "Interstellar Habitable Segment A" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_interstellar_2 } } set_star_flag = giga_interstellar_2 event_target:interstellar_section = { set_name = "Interstellar Habitable Segment B" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_interstellar_3 } } set_star_flag = giga_interstellar_3 event_target:interstellar_section = { set_name = "Interstellar Habitable Segment C" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_interstellar_4 } } set_star_flag = giga_interstellar_4 event_target:interstellar_section = { set_name = "Interstellar Habitable Segment D" } }

		remove_megastructure = fromfrom
	}
}