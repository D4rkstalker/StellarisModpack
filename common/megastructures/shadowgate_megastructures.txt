shadowrift_a = {
	entity = "shadowrift_entity"
	portrait = "GFX_megastructure_shadowrift"
	
	place_entity_on_planet_plane = no
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	bypass_type = shadowgate_a
	
	potential = { always = no }
}

shadowrift_b = {
	entity = "shadowrift_entity"
	portrait = "GFX_megastructure_shadowrift"
	
	place_entity_on_planet_plane = no
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	bypass_type = shadowgate_b
	
	potential = { always = no }
}

shadowrift_c = {
	entity = "shadowrift_entity"
	portrait = "GFX_megastructure_shadowrift"
	
	place_entity_on_planet_plane = no
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	bypass_type = shadowgate_c
	
	potential = { always = no }
}

shadowrift_d = {
	entity = "shadowrift_entity"
	portrait = "GFX_megastructure_shadowrift"
	
	place_entity_on_planet_plane = no
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	bypass_type = shadowgate_d
	
	potential = { always = no }
}

shadowrift_e = {
	entity = "shadowrift_entity"
	portrait = "GFX_megastructure_shadowrift"
	
	place_entity_on_planet_plane = no
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	bypass_type = shadowgate_e
	
	potential = { always = no }
}

shadowrift_db = {
	entity = "shadow_remnant_entity"
	portrait = "GFX_megastructure_dimensionalrift"
	
	place_entity_on_planet_plane = no
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	bypass_type = shadowgate_db
	
	potential = { always = no }
}

shadowrift_rename = {
	entity = "shadow_remnant_entity"
	portrait = "GFX_megastructure_dimensionalrift"
	
	place_entity_on_planet_plane = no
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	potential = { always = no }
}

shadow_anchor = {
	entity = "shadowanchor_entity"
	construction_entity = "shadowanchor_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	
	resources = {
		category = megastructures

		upkeep = {
			trigger = { exists = owner owner = { is_ai = no has_country_flag = has_shadow_anchors } solar_system = { has_star_flag = active_shadow_anchor } }
			energy = 5
		}
	}
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	potential = { always = no }
	
	possible = { always = no }
	
	on_build_complete = {
		if = { limit = { NOT = { has_star_flag = shadow_anchor } }
			set_star_flag = inactive_shadow_anchor
			random_system_megastructure = { limit = { is_megastructure_type = shadow_anchor } set_name = shadow_anchor_inactive }
		}
		set_star_flag = shadow_anchor
		fromfrom.planet = {
			set_planet_flag = has_shadow_anchor
		}
	}

	ai_weight = { factor = 0 }
}

shadow_anchor_toggle = {
	entity = "shadowanchor_entity"
	construction_entity = "shadowanchor_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	build_time = 480

	resources = {
		category = megastructures
		cost = {
			trigger = { solar_system = { has_star_flag = inactive_shadow_anchor } }
			energy = 2500
		}
	}
		
	show_galactic_map_icon = no
	construction_blocks_others = no
	
	potential = {
		NOT = { is_ai = yes }
		OR = { has_country_flag = has_shadow_anchors any_country = { has_communications = prev has_country_flag = has_shadow_anchors } }
	}
	
	possible = {
		space_owner = { is_ai = no }
		custom_tooltip = { fail_text = shadow.anchor.fail.reclaiming NOT = { any_system_planet = { has_planet_flag = shadowgate_anchor_target } } }
		custom_tooltip = { fail_text = shadow.anchor.fail.energy if = { limit = { NOT = { has_star_flag = active_shadow_anchor } } exists = space_owner space_owner = { has_resource = { type = energy amount >= 2500 } } } }
	}
	
	upgrade_from = {
		shadow_anchor
	}
	
	on_build_complete = {
		if = { limit = { has_star_flag = active_shadow_anchor } remove_star_flag = active_shadow_anchor set_star_flag = inactive_shadow_anchor }
		else = { remove_star_flag = inactive_shadow_anchor set_star_flag = active_shadow_anchor }
		fromfrom.planet = { save_event_target_as = shadow_anchor_placement }
		if = { limit = { exists = space_owner } spawn_megastructure = { type = shadow_anchor owner = space_owner planet = event_target:shadow_anchor_placement } }
		else = { spawn_megastructure = { type = shadow_anchor planet = event_target:shadow_anchor_placement } }
		random_system_megastructure = { limit = { is_megastructure_type = shadow_anchor }
			if = { limit = { solar_system = { has_star_flag = active_shadow_anchor } } set_name = shadow_anchor_active }
			else = { set_name = shadow_anchor_inactive }
		}
		random_system_megastructure = { limit = { is_megastructure_type = shadow_anchor_toggle }
			remove_megastructure = this
		}
	}
	ai_weight = { factor = 0 }
}