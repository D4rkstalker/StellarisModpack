

war_name_parts_list = {
	key = "default_war_names"
	parts = {
		"War" = 1
		"Dispute" = 1
		"Conflict" = 1
		"Engagement" = 1
		"Skirmish" = 1
	}
}

war_name_parts_list = {
	key = "federation_war_names"
	parts = {
		"Great War" = 1
		"Galactic War" = 1
		"Alliance War" = 1
		"Galaxy War" = 1
		"Grand War" = 1
		"Grand Galactic War" = 1
	}
}

war_name_parts_list = {
	key = "conquest_war_names"
	parts = {
		"Conquest" = 1
		"Invasion" = 1
		"Annexation" = 1
	}
}

war_name_parts_list = {
	key = "massive_invasion_names"
	parts = {
		"Grand Invasion of" = 1
		"Galactic Conquest of" = 1	
		"Grand Subjugation of" = 1
		"Grand Annexation of" = 1
	}
}

war_name_parts_list = {
	key = "corp_conquest_war_names"
	parts = {
		"Hostile Takeover" = 1
		"Corporate Takeover" = 1
		"Executive Takeover" = 1
	}
}

war_name_parts_list = {
	key = "subjugation_war_names"
	parts = {
		"Subjugation" = 1
		"Pacification" = 1
		"Intervention" = 1
		"Takeover" = 1
	}
}

war_name_parts_list = {
	key = "corp_subjugation_war_names"
	parts = {
		"Acquisition" = 1
		"Share Redistribution" = 1
	}
}

war_name_parts_list = {
	key = "galatron_war_names"
	parts = {
		"Forcible Galatron Seizure" = 1
		"War for the Galatron" = 1
		"Galatron Acquisition War" = 1
	}
}

war_name_parts_list = {
	key = "expel_corp_war_names"
	parts = {
		"War of Economic Independance" = 1
		"War of Economic Autonomy" = 1
		"Wealth Reacquisition War" = 1
		"War of Asset Redistribution"
	}
}

war_name_parts_list = {
	key = "tribute_war_names"
	parts = {		
		"Subjugation" = 1
		"Pacification" = 1
		"Intervention" = 1
	}
}

war_name_parts_list = {
	key = "corp_tribute_war_names"
	parts = {
		"Enforced Sponsorship" = 1
		"Tax Enforcement" = 1
	}
}

war_name_parts_list = {
	key = "force_ideology_war_names"
	parts = {
		"Intervention in" = 1
		"Rollback in" = 1
		"Forced Deposition of" = 1
		"Liberation of" = 1
	}
}

war_name_parts_list = {
	key = "humiliation_war_names"
	parts = {
		"Skirmish" = 1
		"Conflict" = 1
		"Border Skirmish" = 1
		"Border Conflict" = 1
		"Border War" = 1
		"Escalation" = 1
	}
}

war_name_parts_list = {
	key = "humiliation_war_names2"
	parts = {
		"Show of Force" = 1
		"Force Projection" = 1
		"Military Expedition" = 1
	}
}

war_name_parts_list = {
	key = "minor_war_names"
	parts = {
		"Border Conflict" = 1
		"Border Skirmishes" = 1
		"Border Dispute" = 1
		"Skirmishes" = 1
		"Crisis" = 1
	}
}

war_name_parts_list = {
	key = "fe_humiliation_war_names"
	parts = {
		"Punitive Expedition" = 1
	}
}

war_name_parts_list = {
	key = "fe_stop_atrocities_war_names"
	parts = {
		"Moral Intervention" = 1
	}
}

war_name_parts_list = {
	key = "fe_stop_ai_war_names"
	parts = {
		"AI Crisis" = 1
		"Pre-Emptive AI Intervention" = 1
		"Doomsday Prevention"
	}
}

war_name_parts_list = {
	key = "fe_cleanse_holy_worlds_war_names"
	parts = {
		"Holy Purge" = 1
		"Divine Cleansing" = 1
		"Baptism of Fire" = 1
	}
}

war_name_parts_list = {
	key = "fe_cleanse_border_worlds_war_names"
	parts = {
		"Buffer Zone Creation" = 1
		"Neutral Zone War" = 1
		"Dead Border War" = 1
	}
}

war_name_parts_list = {
	key = "machine_uprising_war_names"
	parts = {
		"Machine Uprising" = 1
		"AI Uprising" = 1
		"Machine Revolt" = 1
		"Machine Insurgency" = 1
		"AI Revolution" = 1
	}
}

war_name_parts_list = {
	key = "war_in_heaven_war_names"
	parts = {
		"The War in Heaven" = 1
	}
}

war_name_parts_list = {
	key = "protection_war_names"
	parts = {
		"Preventive War" = 1
		"Self-Preservation War" = 1
		"Preemptive Strike" = 1
		"Preemptive Invasion" = 1
		"Presumptive Skirmish" = 1
	}
}

war_name_parts_list = {
	key = "onesided_war_names"
	parts = {
		"Defiance" = 1
		"Refusal" = 1
		"Provocation" = 1
		"Insurgency" = 1
	}
}

war_name_parts_list = {
	key = "cleansing_pur_war_names"
	parts = {
		"Genocide" = 1
		"War for Living Space" = 1
	}
}

war_name_parts_list = {
	key = "cleansing_ext_war_names"
	parts = {
		"Biological Terror Campaign" = 1
		"Organic Extermination Program" = 1
		"Disinfection Operation Expansion" = 1
	}
}

war_name_parts_list = {
	key = "absorption_war_names"
	parts = {
		"Absorption Attempt" = 1
		"Biomass Accumulation" = 1
		"Great Gorging" = 1
		"Infestation Attempt" = 1
	}
}

war_name_parts_list = {
	key = "independence_war_names"
	parts = {
		"War of Independence" = 1
		"Independence War" = 1
		"Uprising" = 1
		"Liberation War" = 1
		"National Revolution" = 1
		"Restoration War" = 1
		"Crisis" = 1
		"Secession Crisis" = 1
	}
}

war_name_parts_list = {
	key = "slaughter_names"
	parts = {
		"Decimation" = 1
		"Slaughter" = 1
		"Annihilation" = 1
		"Purge" = 1		
		"Razing" = 1
		"Extermination" = 1
	}
}

war_name_parts_list = {
	key = "rebellion_names"
	parts = {
		"Rebellion" = 1
		"Revolt" = 1
		"Popular Revolt" = 1
		"Uprising" = 1
		"Popular Uprising" = 1
		"Revolution" = 1
		"Revolutionary War" = 1
		"War of National Liberation" = 1
		"Liberation War" = 1
		"National Revolution" = 1
	}
}

war_name_parts_list = {
	key = "cleansing_ext_war_names"
	parts = {
		"Organic Euthanization War" = 1
		"Extermination Campaign" = 1
		"Organic Disinfection Program" = 1
	}
}


war_name_parts_list = {
	key = "brothers_war_names"
	parts = {
		"War of National Liberation" = 1
		"Unification War" = 1
		"Civil War" = 1
		"War of Disunity" = 1
		"Crisis" = 1
		"Conflict" = 1
	}
}

war_name_parts_list = {
	key = "eugenics_war_names"
	parts = {
		"Eugenics War" = 1
		"Race War" = 1
		"Succession Crisis" = 1
		"Destiny War" = 1
		"Gene War" = 1
		"Gene Purification" = 1
	}
}

war_name_parts_list = {
	key = "reclamation_names"
	parts = {
		"Reclamation" = 1
	}
}

war_name_parts_list = {
	key = "reunification_names"
	parts = {
		"Reunification" = 1
	}
}

war_name_parts_list = {
	key = "robot_purge_war_names"
	parts = {
		"Purge" = 1
		"Removal" = 1
		"Deletion" = 1
	}
}

war_name_parts_list = {
	key = "robot_war_names"
	parts = {
		"Liberation of" = 1
		"Crusade for" = 1
		"Baptism of" = 1
	}
}

war_name_parts_list = {
	key = "war_on_heaven_names"
	parts = {
		"War on Heaven" = 1
		"War of Deposition" = 1
		" - Precursor War" = 1
	}
}

war_name_parts_list = {
	key = "crusade_names"
	parts = {
		"Crusade" = 1
		"Holy War" = 1
		"Inquisition" = 1
	}
}

war_name_parts_list = {
	key = "secular_war_names"
	parts = {
		"God-Killers' War" = 1
		"Infidel's War" = 1
		"Blasphemer's War" = 1
		"War of Spiritualist Suppression"
	}
}

war_name_parts_list = {
	key = "religious_war_names"
	parts = {
		"Gods' War" = 1
		"Heavens' War" = 1
		"Holy War" = 1
		"Spirit War" = 1
		"Avatar War" = 1
	}
}

### DEFAULT (Fallback)
war_name_format = {
	random_weight = {
		factor = 1
	}
	format = "[This.MainAttacker.GetAdj] - [This.MainDefender.GetAdj] <default_war_names>"
}

### FEDERATION WARS

# War Between Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
            attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] - [This.MainDefender.GetAllianceName] <federation_war_names>"
}

war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
            attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] <massive_invasion_names> of [This.MainDefender.GetAllianceName]"
}

### CONQUEST WARS

# Conquest - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_conquest
                owner = attacker
            }
            attacker = {
				has_federation = no
				NOT = { has_government = gov_megacorporation }
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <conquest_war_names> of [This.MainDefender.Capital.System.GetName]"
}

war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_conquest
                owner = attacker
            }
            attacker = {
				has_federation = no
				NOT = { has_government = gov_megacorporation }
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <conquest_war_names> of [This.MainDefender.GetHomeWorldName]"
}

# Conquest - Attacker Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_conquest
                owner = attacker
            }
			attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] <conquest_war_names> of [This.MainDefender.Capital.System.GetName]"
}

war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_conquest
                owner = attacker
            }
			attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] <conquest_war_names> of [This.MainDefender.GetHomeWorldName]"
}

# Conquest - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_conquest
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <conquest_war_names> of [This.MainDefender.GetAllianceName]"
}

war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_conquest
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetHomeWorldName] <conquest_war_names> of [This.MainDefender.GetAllianceName]"
}

# Conquest - Corporate Attacker, No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_hostile_takeover
                owner = attacker
            }
            attacker = {
				has_federation = no
				has_government = gov_megacorporation
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <corp_conquest_war_names> of [This.MainDefender.Capital.System.GetName]"
}

### SUBJUGATION WARS

# Subjugation - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_subjugation
					owner = attacker
				}
				using_war_goal = {
					type = wg_megacorp_subjugate
					owner = attacker
				}
			}
            attacker = {
				has_federation = no
				NOT = { has_government = gov_megacorporation }
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <subjugation_war_names> of [This.MainDefender.GetHomeWorldName]"
}

war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_subjugation
					owner = attacker
				}
				using_war_goal = {
					type = wg_megacorp_subjugate
					owner = attacker
				}
			}
            attacker = {
				has_federation = no
				NOT = { has_government = gov_megacorporation }
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <subjugation_war_names> of [This.MainDefender.GetName]"
}

# Subjugation - Attacker Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_subjugation
					owner = attacker
				}
				using_war_goal = {
					type = wg_megacorp_subjugate
					owner = attacker
				}
			}
			attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] <subjugation_war_names> of [This.MainDefender.Capital.System.GetName]"
}

# Subjugation - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_subjugation
					owner = attacker
				}
			}
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <subjugation_war_names> of [This.MainDefender.GetAllianceName]"
}

war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_subjugation
					owner = attacker
				}
				using_war_goal = {
					type = wg_megacorp_subjugate
					owner = attacker
				}
			}
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <subjugation_war_names> of [This.MainDefender.GetAllianceName]"
}

# Subjugation - Corporate Attacker, No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_subjugation
					owner = attacker
				}
				using_war_goal = {
					type = wg_megacorp_subjugate
					owner = attacker
				}
			}
            attacker = {
				has_federation = no
				has_government = gov_megacorporation
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <corp_subjugation_war_names> in the [This.MainDefender.GetName]"
}

### TRIBUTE WARS

# Tribute - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_tribute
                owner = attacker
            }
            attacker = {
				has_federation = no
				NOT = { has_government = gov_megacorporation }
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <tribute_war_names> of [This.MainDefender.Capital.System.GetName]"
}

# Tribute - Attacker Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_tribute
                owner = attacker
            }
			attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] <tribute_war_names> of [This.MainDefender.Capital.System.GetName]"
}

# Tribute - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_tribute
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <tribute_war_names> of [This.MainDefender.GetAllianceName]"
}

# Tribute - Corporate Attacker, No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_tribute
                owner = attacker
            }
            attacker = {
				has_federation = no
				has_government = gov_megacorporation
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <corp_tribute_war_names> attempt in [This.MainDefender.Capital.System.GetName]"
}

### FORCE IDEOLOGY WARS

# Force Ideology - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_force_ideology
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <force_ideology_war_names> the [This.MainDefender.GetName]"
}

# Force Ideology - Attacker Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_force_ideology
                owner = attacker
            }
			attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] <force_ideology_war_names> the [This.MainDefender.GetName]"
}

# Force Ideology - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_force_ideology
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <force_ideology_war_names> the [This.MainDefender.GetAllianceName]"
}

### HUMILIATION WARS

# Humiliation - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_humiliation
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] - [This.MainDefender.GetAdj] <humiliation_war_names>"
}

# Humiliation - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_humiliation
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <humiliation_war_names2> against the [This.MainDefender.GetName]"
}

# Humiliation - Attacker Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_humiliation
                owner = attacker
            }
			attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName]'s <humiliation_war_names2> against the [This.MainDefender.GetName]"
}

# Humiliation - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_humiliation
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <humiliation_war_names2> against the [This.MainDefender.GetAllianceName]"
}

### PROTECTION WAR NAMES

# Protection - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_renegade_containment
					owner = attacker
				}
				using_war_goal = {
					type = wg_end_threat
					owner = attacker
				}
				using_war_goal = {
					type = wg_end_threat_swarm
					owner = attacker
				}
			}
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <protection_war_names> against the [This.MainDefender.GetName]"
}

# Protection - Attacker Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_renegade_containment
					owner = attacker
				}
				using_war_goal = {
					type = wg_end_threat
					owner = attacker
				}
				using_war_goal = {
					type = wg_end_threat_swarm
					owner = attacker
				}
			}
			attacker = {
				has_federation = yes
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] <protection_war_names> against the [This.MainDefender.GetAdj]"
}

# Protection - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			OR = {
				using_war_goal = {
					type = wg_renegade_containment
					owner = attacker
				}
				using_war_goal = {
					type = wg_end_threat
					owner = attacker
				}
				using_war_goal = {
					type = wg_end_threat_swarm
					owner = attacker
				}
			}
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetName] <protection_war_names> against the [This.MainDefender.GetAllianceName]"
}

### CLEANSING PURIFIERS WAR NAMES

# Cleansing Purifiers - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_cleansing
                owner = attacker
            }
            attacker = {
				has_federation = no
				has_valid_civic = civic_fanatic_purifiers
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdjCompliment] <cleansing_pur_war_names> against the [This.MainDefender.GetAdjPluralInsult]"
}

# Cleansing Purifiers - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_cleansing
                owner = attacker
            }
			attacker = {
				has_federation = no
				has_valid_civic = civic_fanatic_purifiers
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdjCompliment] <cleansing_pur_war_names> against the [This.MainDefender.GetAllianceName]"
}

### CLEANSING EXTERMINATORS WAR NAMES

# Cleansing Exterminators - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_cleansing
                owner = attacker
            }
            attacker = {
				has_federation = no
				has_valid_civic = civic_machine_terminator
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <cleansing_ext_war_names> in [This.MainDefender.GetAdjPluralInsult] Territory"
}

# Cleansing Exterminators - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_cleansing
                owner = attacker
            }
			attacker = {
				has_federation = no
				has_valid_civic = civic_machine_terminator
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <cleansing_ext_war_names> against the [This.MainDefender.GetAllianceName]"
}

### ABSORPTION WAR NAMES

# Absorption - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_absorption
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] - [This.MainDefender.GetAdj] <absorption_war_names>"
}

# Absorption - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_absorption
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] - [This.MainDefender.GetAllianceName] <absorption_war_names>"
}

### FALLEN EMPIRE HUMILIATION WARS

# Fallen Empire Humiliation - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_humiliation
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <fe_humiliation_war_names> in [This.MainDefender.GetName]"
}

# Fallen Empire Humiliation - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_humiliation
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <fe_humiliation_war_names> into the [This.MainDefender.GetAllianceName]"
}

### FALLEN EMPIRE STOP ATROCITIES WARS

# Fallen Empire Stop Atrocities - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_stop_atrocities
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <fe_stop_atrocities_war_names> against the [This.MainDefender.GetAdjPlural]"
}

# Fallen Empire Stop Atrocities - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_stop_atrocities
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <fe_stop_atrocities_war_names> against the [This.MainDefender.GetAllianceName]"
}

### FALLEN EMPIRE STOP AI WARS

# Fallen Empire Stop AI - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_stop_ai
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <fe_stop_ai_war_names> against [This.MainDefender.GetAdj]"
}

# Fallen Empire Stop AI - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_stop_ai
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <fe_stop_ai_war_names> against the [This.MainDefender.GetAllianceName]"
}

### FALLEN EMPIRE CLEANSE HOLY WORLDS WARS

# Fallen Empire Cleanse Holy Worlds - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_cleanse_holy_worlds
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <fe_cleanse_holy_worlds_war_names> in [This.MainDefender.Capital.System.GetName]"
}

# Fallen Empire Cleanse Holy Worlds - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_cleanse_holy_worlds
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <fe_cleanse_holy_worlds_war_names> in the [This.MainDefender.GetAllianceName]"
}

### FALLEN EMPIRE CLEANSE BORDER WORLDS WARS

# Fallen Empire Cleanse Border Worlds - No Federations
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_cleanse_border_worlds
                owner = attacker
            }
            attacker = {
				has_federation = no
			}
			defender = {
				has_federation = no
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] - [This.MainDefender.GetAdj] <fe_cleanse_border_worlds_war_names>"
}

# Fallen Empire Cleanse Border Worlds - Defender Federation
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_fe_cleanse_border_worlds
                owner = attacker
            }
			attacker = {
				has_federation = no
			}
			defender = {
				has_federation = yes
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] - [This.MainDefender.GetAllianceName] <fe_cleanse_border_worlds_war_names>"
}

### INDEPENDENCE WAR NAMES
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_independence
                owner = attacker
            }
			attacker = {
			}
			defender = {
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <independence_war_names>"
}

### WAR IN HEAVEN
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_war_in_heaven
                owner = attacker
            }
			attacker = {
			}
			defender = {
			}
		}
	}
	format = "<war_in_heaven_war_names>"
}

### MACHINE UPRISING
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_machine_uprising
                owner = attacker
            }
			attacker = {
			}
			defender = {
			}
		}
	}
	format = "[This.MainDefender.GetAdj] <machine_uprising_war_names>"
}

## EXPEL CORP WARS
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_expel_corp
                owner = attacker
            }
		}
	}
	format = "[This.MainAttacker.GetAdj] <expel_corp_war_names>"
}

## GALATRON WARS
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			using_war_goal = {
                type = wg_take_galatron
                owner = attacker
            }
		}
	}
	format = "<galatron_war_names>"
}


#--------------------------------------------------------------------- ---------------------#
	#----------------------------------------------------------#
	#	WARS WITH OVERLORDS
	#----------------------------------------------------------#	
#---------------------------------------------------------------------------------------#


#---- subjects going to war with overlords ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
				exists = overlord
			}
			defender = {
				is_same_value = prev.attacker.overlord
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <independence_war_names>"
}

war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
				exists = overlord
			}
			defender = {
				is_same_value = prev.attacker.overlord				
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <rebellion_names>"
}


#---- overlords going to war with subjects ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			defender = {
				exists = overlord
			}
			attacker = {
				is_same_value = prev.defender.overlord
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <reclamation_names> of [This.MainDefender.Capital.Planet.GetName]"
}
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			defender = {
				exists = overlord
			}
			attacker = {
				is_same_value = prev.defender.overlord
			}
		}
	}
	format = "<reunification_names> of the [This.MainAttacker.GetName]"
}



#--------------------------------------------------------------------- ---------------------#
	#----------------------------------------------------------#
	#	WAR NAMES BASED ON SPECIES
	#----------------------------------------------------------#	
#---------------------------------------------------------------------------------------#

#---- war between subspecies ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
			}
			defender = {
				is_subspecies = prev.attacker			
			}
		}
	}
	format = "[This.MainDefender.GetSpeciesAdj] <eugenics_war_names>"
}


#---- war between members of same species ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
			}
			defender = {
				is_same_species = prev.attacker				
			}
		}
	}
	format = "[This.MainDefender.GetSpeciesAdj] <brothers_war_names>"
}


#---- war declared against robots ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
				has_government = "gov_theocratic_monarchy"
				has_government = "gov_theocratic_dictatorship"
				has_government = "gov_theocratic_republic"
				has_government = "gov_divine_empire"
				has_government = "gov_holy_tribunal"
				has_government = "gov_megachurch"
				}
			defender = {
				has_government = "gov_machine_empire"
				has_government = "gov_machine_terminator"
				has_government = "gov_machine_servitor"
				has_government = "gov_machine_assimilator"
				has_government = "gov_machine_research"
				has_government = "gov_machine_industrial"
				has_government = "gov_ancient_machine_intelligence"		
				}
			}
		}
	format = "[This.MainAttacker.GetAdj]  <robot_war_names> [This.MainDefender.GetHomeWorldName]"
}

#---- war declared by robots ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
				has_government = "gov_machine_empire"
				has_government = "gov_machine_terminator"
				has_government = "gov_machine_servitor"
				has_government = "gov_machine_assimilator"
				has_government = "gov_machine_research"
				has_government = "gov_machine_industrial"
				has_government = "gov_ancient_machine_intelligence"
			}
			defender = {
				NOT = {
					has_government = "gov_machine_empire"
					has_government = "gov_machine_terminator"
					has_government = "gov_machine_servitor"
					has_government = "gov_machine_assimilator"
					has_government = "gov_machine_research"
					has_government = "gov_machine_industrial"
					has_government = "gov_ancient_machine_intelligence"
					}			
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <robot_purge_war_names> of [This.MainDefender.GetAdj] Influence"
}



#--------------------------------------------------------------------- ---------------------#
	#----------------------------------------------------------#
	#	WARS WITH FALLEN EMPIRES
	#----------------------------------------------------------#	
#---------------------------------------------------------------------------------------#

#---- wars declared by independent empires, on fallen or awakened empires ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
				has_federation = no
			}
			defender = {
				OR = {
						is_country_type = fallen_empire	
						is_country_type = awakened_fallen_empire
					}		
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <war_on_heaven_names>"
}


#---- wars declared by fallen empires, on independent empires ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 500
			attacker = {
				OR = {
						is_country_type = fallen_empire	
						is_country_type = awakened_fallen_empire
					}	
			}
			defender = {
				has_federation = no	
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <slaughter_names> of [This.MainDefender.Capital.System.GetName]"
}


#---- wars between fallen / awakened empires, and federations ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
				OR = {
						is_country_type = fallen_empire	
						is_country_type = awakened_fallen_empire
					}	
			}
			defender = {
				has_federation = yes					
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <massive_invasion_names> the [This.MainDefender.GetAllianceName]"
}
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 999
			attacker = {
				has_federation = yes		
			}
			defender = {
				OR = {
						is_country_type = fallen_empire	
						is_country_type = awakened_fallen_empire
					}					
			}
		}
	}
	format = "[This.MainAttacker.GetAllianceName] <massive_invasion_names> [This.MainDefender.Capital.System.GetName]"
}



#--------------------------------------------------------------------- ---------------------#
	#----------------------------------------------------------#
	#	WARS INVOLVING SPIRITUALIST / MATERIALIST GOVERNMENTS
	#----------------------------------------------------------#	
#---------------------------------------------------------------------------------------#

#---- wars declared by spiritualist empires, on non-spiritualists ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 700
			attacker = {
				OR = {						
						has_government = gov_theocratic_monarchy
						has_government = gov_theocratic_dictatorship
						has_government = gov_theocratic_oligarchy
						has_government = gov_theocratic_republic
						has_government = gov_celestial_empire
						has_government = gov_divine_empire
						has_government = gov_holy_tribunal
					}	
			}
			defender = {
				NOT = {
						has_government = gov_theocratic_monarchy
						has_government = gov_theocratic_dictatorship
						has_government = gov_theocratic_oligarchy
						has_government = gov_theocratic_republic
						has_government = gov_celestial_empire
						has_government = gov_divine_empire
						has_government = gov_holy_tribunal
					}	
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] <crusade_names> against [This.MainDefender.Capital.System.GetName]"
}


#---- wars declared on non-spiritualist empires, by spiritualists ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 700
			attacker = {
				NOT = {
						has_government = gov_theocratic_monarchy
						has_government = gov_theocratic_dictatorship
						has_government = gov_theocratic_oligarchy
						has_government = gov_theocratic_republic
						has_government = gov_celestial_empire
						has_government = gov_divine_empire
						has_government = gov_holy_tribunal
					}
			}
			defender = {
				OR = {
						has_government = gov_theocratic_monarchy
						has_government = gov_theocratic_dictatorship
						has_government = gov_theocratic_oligarchy
						has_government = gov_theocratic_republic
						has_government = gov_celestial_empire
						has_government = gov_divine_empire
						has_government = gov_holy_tribunal
					}		
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] - [This.MainDefender.GetAdj] <secular_war>"
}

war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 700
			attacker = {
				NOT = {
						has_government = gov_theocratic_monarchy
						has_government = gov_theocratic_dictatorship
						has_government = gov_theocratic_oligarchy
						has_government = gov_theocratic_republic
						has_government = gov_celestial_empire
						has_government = gov_divine_empire
						has_government = gov_holy_tribunal
					}
			}
			defender = {
				OR = {
						has_government = gov_theocratic_monarchy
						has_government = gov_theocratic_dictatorship
						has_government = gov_theocratic_oligarchy
						has_government = gov_theocratic_republic
						has_government = gov_celestial_empire
						has_government = gov_divine_empire
						has_government = gov_holy_tribunal
					}		
			}
		}
	}
	format = "[This.MainAttacker.GetLeaderName]'s Crusade against Theism"
}


#---- wars between two spiritualist empires ----#
war_name_format = {
	random_weight = {
		factor = 0
		modifier = {
			add = 700
			attacker = {
				OR = {
						has_government = gov_theocratic_monarchy
						has_government = gov_theocratic_dictatorship
						has_government = gov_theocratic_oligarchy
						has_government = gov_theocratic_republic
						has_government = gov_celestial_empire
						has_government = gov_divine_empire
						has_government = gov_holy_tribunal
					}	
			}
			defender = {
				OR = {
						has_government = gov_theocratic_monarchy
						has_government = gov_theocratic_dictatorship
						has_government = gov_theocratic_oligarchy
						has_government = gov_theocratic_republic
						has_government = gov_celestial_empire
						has_government = gov_divine_empire
						has_government = gov_holy_tribunal
					}			
			}
		}
	}
	format = "[This.MainAttacker.GetAdj] - [This.MainDefender.GetAdj] <religious_war_names>"
}