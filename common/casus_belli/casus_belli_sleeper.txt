#my_casus_belli = {
#	potential = { ... }		# trigger to make some CBs invalid for certain types of countries; this = attacker (CB owner); default: { always = yes }
#	is_valid = { ... }		# trigger, evaluated daily to check if CB should be created or destroyed automatically, does not affect CBs granted via script;
#								# this = attacker (CB owner), from = defender (target country); default: { always = yes }
#	destroy_if = { ... }	# trigger, evaluated daily to destroy CBs that have been granted via script ahead of expiration date;
#								# this = attacker (CB owner), from = defender (target country); default: { always = no }
#	show_notification = no/yes	# optional (default = yes), flag to control whether this CB will generate a notification (to avoid duplicate 
# 								# notification when a claim CB is generated)
#}

cb_make_feeder_vassal = {
	show_in_diplomacy = yes
	show_notification = yes
	potential = {
		is_country_type = awakened_sleeper
		is_subject = no
	}
	is_valid = { 
		NOT = { is_overlord_to = FROM }
		is_country_type = awakened_sleeper 
		from = {
			NOR = { 
				has_ethic = ethic_gestalt_consciousness
				has_country_flag = synthetic_empire
			}
		}
	}	
}

cb_sleeper_gestalt_extermination = {
	show_in_diplomacy = yes
	show_notification = yes
	potential = {
		is_country_type = awakened_sleeper
		is_subject = no
	}
	is_valid = { 
		NOT = { is_overlord_to = FROM }
		is_country_type = awakened_sleeper
		from = {
			OR = { 
				has_ethic = ethic_gestalt_consciousness
				has_country_flag = synthetic_empire
			}
		}
	}
}

cb_sleeper_containment = {
	show_in_diplomacy = yes
	show_notification = yes
	potential = {
		OR = {
			is_country_type = default
			is_country_type = lost_empire
			is_country_type = ascended_empire
			is_country_type = eternal_empire
			is_country_type = awakened_fallen_empire
			is_country_type = fallen_empire
		}
	}
	is_valid = {
		OR = {
			is_subject = no
			overlord = { NOT = { is_same_value = from } }
		}
		NOT = { is_overlord_to = FROM }
		from = {
			is_country_type = awakened_sleeper
		}
	}
}