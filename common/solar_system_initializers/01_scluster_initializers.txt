# Filename:		01_scluster_initializers.txt
# Contributors:	SirBlackAxe

# flags = { scluster }

@distance = 50
@jumps = 3
@planet_min_size = 10
@planet_max_size = 25
@base_moon_distance = 10
@moon_min_size = 6
@moon_max_size = 10
@homeworld_min_size = 18
@homeworld_max_size = 24 # 21
@asteroid_min_size = 2
@asteroid_max_size = 4

scluster_test_system = {
	# name = "Example Neighbor"
	class = "rl_all_stars"	#system's star class. ["name_of_class"] picks a specific class

	flags = { scluster }

	#this initializer does not specify any 'usage = ..' so it will only be used explicitly ( like in example_initializer's neighbor_system script )

	planet = {
		class = star
		orbit_distance = 0
	}

	change_orbit = 30
	planet = {
		count = 5
		size = { min = 10 max = 30 }
	}

	init_effect = {
		# star = {
		# 	create_ambient_object = {
		# 		type = "space_storm_1"
		# 		location = this
		# 	}
		# 	last_created_ambient_object = {
		# 		set_ambient_object_flag = space_storm_object
		# 		set_location = {
		# 			target = prev
		# 			distance = 0
		# 			angle = random
		# 		}
		# 	}
		# }
		# add_modifier = { modifier = space_storm }
	}
}

scluster_init_eye = {
	name = "NAME_Cyclocus" # Portmaneau of cyclone/locus
	class = sc_black_hole
	# Some test features to see how it looks.
	asteroid_belt = {
		type = rocky_asteroid_belt # icy_asteroid_belt rocky_asteroid_belt
		radius = 70
	}
	# asteroid_belt = {
	# 	type = icy_asteroid_belt # icy_asteroid_belt rocky_asteroid_belt
	# 	radius = 100
	# }

	flags = { scluster scluster_0 }
	max_instances = 1

	# Central black hole
	planet = {
		name = "NAME_Eye_of_the_Storm"
		class = star
		orbit_distance = 0
		# orbit_angle = 1
		size = 40 # Same size as great wound (40)?
		# has_ring = yes # curious what this will look like

		init_effect = {
			prevent_anomaly = yes
			# clear_deposits = yes
			add_deposit = d_dark_matter_deposit_10 # great wound size
			add_deposit = d_physics_10
		# Space Storm
			create_ambient_object = {
				type = "space_storm_1"
				location = this
			}
			last_created_ambient_object = {
				set_ambient_object_flag = space_storm_object
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
			}
		}
	}

	planet = {
		count = 1
		class = "pc_m_giant_star"
		orbit_distance = 45
		orbit_angle = 310
		size = 30
		has_ring = yes
		# satellite_naming_policy = upper_case_roman_numerals
	}

	planet = {
		name = "NAME_Mote"
		count = 1
		class = "pc_relic"
		orbit_angle = { min = 200 max = 250 }
		orbit_distance = 30
		size = 24
		# satellite_naming_policy = lower_case_latin_letters

		change_orbit = @base_moon_distance

		moon = {
			count = 2
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 3
		}

		init_effect = {
		# Species
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				homeworld = this
				namelist = random_class
				traits = {
					trait = "trait_pc_relic_preference"
					trait = "trait_venerable"
					trait = "trait_docile"
					trait = "trait_resilient"
					trait = "trait_slow_breeders"
					trait = "trait_sedentary"
				}
				# extra_trait_points = 3
			}
		# Country
			create_country = {
				name = "NAME_scluster_fallen_empire" # Can't use random due to current name generation bug returning an empty string.
				adjective = "NAME_scluster_fallen_empire_adj"
				type = fallen_empire # scluster_fallen_empire # fallen_empire
				ignore_initial_colony_error = yes # Not sure what this does.
				authority = auth_imperial # hive minds require Utopia
				civics = {
					civic = civic_lethargic_leadership
					civic = civic_empire_in_decline
				}
				species = last_created_species
				ethos = {
					ethic = "ethic_fanatic_pacifist"
				}
				origin = "origin_fallen_empire"
				flag = random
				effect = {
					set_country_flag = scluster_fallen_empire
					set_country_flag = awakening_not_allowed
					save_global_event_target_as = scluster_fe
					# Pacificy all space critters, even ones you normally can't
					every_country = {
						limit = {
							OR = {
								is_amoeba_country_type = yes
								is_crystal_country_type = yes
								is_drone_country_type = yes
								is_country_type = cloud
								# is_guardian_country = yes
							}
						}
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = yes
							# set_friendly = no
						}
					}
					add_modifier = { modifier = pacified_amoebas days = -1 }
					add_modifier = { modifier = pacified_crystals days = -1 }
					give_technology = { tech = tech_space_cloud_weapon_1 }
					give_technology = { tech = tech_space_cloud_weapon_2 }
					give_technology = { tech = null_void_beam }
					give_technology = { tech = tech_mining_drone_weapon_1 }
					give_technology = { tech = tech_amoeba_strike_craft_1 }
					give_technology = { tech = tech_space_whale_weapon_1 }
					give_technology = { tech = tech_crystal_armor_1 }
					give_technology = { tech = tech_crystal_armor_2 }
					# give_technology = { tech = tech_nanite_repair_system }
					# Unyielding tradition: -25% bombardment damage, +25% def army helth, +33% starbase&platform hull&dmg, +50% def platform cap
					# add_tradition = tr_unyielding_adopt
					# add_tradition = tr_unyielding_resistance_is_frugal
					# add_tradition = tr_unyielding_never_surrender
					# add_tradition = tr_unyielding_bulwark_of_harmony
					# add_tradition = tr_unyielding_defensive_zeal
					# add_tradition = tr_unyielding_fortress_doctrine
					# effect root = { add_tradition =  }

					set_graphical_culture = fallen_empire_02 # arthropoid_01 # Test
					add_resource = {
						minerals = 100000
						energy = 100000
						food = 100000
						consumer_goods = 100000
						alloys = 100000
						influence = 50
					}
					# must initialize global designs here
					add_global_ship_design = "NAME_Enforcer"
					add_global_ship_design = "NAME_Savant"
					add_global_ship_design = "NAME_Scholar"
					add_global_ship_design = "NAME_Sage"
					add_global_ship_design = "NAME_Cloaker"
					add_global_ship_design = "NAME_Librarian"
					add_global_ship_design = "NAME_Seeker"
					add_global_ship_design = "NAME_FE_Starbase"
					#
					add_global_ship_design = "NAME_Stoic"
					add_global_ship_design = "NAME_scluster_FE_Starbase"
					# TODO: Ion Cannon, possibly ancrel station design using driller drones
				}
			}
		# Planet
			# set_planet_flag = fallen_empire_world
			scluster_relic_world_deposits = yes
			clear_blockers = yes
			set_owner = last_created_country
			set_controller = last_created_country
			set_capital = yes


			while = {
				count = 9
				add_district = district_city
			}

			add_building = building_ancient_palace
			add_building = building_planetary_shield_generator_fe # Automatically destroyed because FE capitals don't count as upgraded.
			add_building = building_fe_stronghold
			add_building = building_fe_stronghold
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_affluence_center
			add_building = building_nourishment_center
			add_building = building_class_4_singularity
			add_building = building_dimensional_fabricator
			add_building = building_nano_forge

			while = {
				count = 60
				create_pop = {
					species = owner_main_species
				}
			}
			# create_fallen_empire_starting_navy = yes
			# while = {
			# 	count = 20
			# 	create_army = {
			# 		name = random
			# 		owner = root
			# 		species = root
			# 		type = "robotic_army"
			# 	}
			# }
		}
	}

	planet = {
		count = 2
		orbit_distance = 30
		size = { min = 10 max = 30 }

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 1 max = 3 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	init_effect = {
		add_modifier = { modifier = space_storm }
		create_starbase = {
			owner = last_created_country
			size = "starbase_citadel"

			module = "missile_battery"
			module = "missile_battery"
			module = "missile_battery"
			module = "hangar_bay"
			module = "hangar_bay"
			module = "hangar_bay"

			building = "target_uplink_computer"
			building = "defense_grid"
			building = "dark_matter_listening_post" # "command_center" # "subspace_fluctuator"
			building = "communications_jammer"

			effect = {
				while = {
					count = 15
					create_ship = {
						name = random
						design = "NAME_Stoic"
						graphical_culture = last_created_country
					}
				}
			}
		}
		last_created_country = {
			country_event = {
				id = game_start.10 # comms w/ fes, marauders, enclaves; builds mining & research stations, gives ship cost modifier
				days = 1
			}
		}
	}
}

# scluster_good_habitat_system: panets w/ minerals and rare resource deposits
# scluster_trade_value_asteroid_system
# scluster_black_hole_binary
# scluster_black_hole_trinary
# scluster_toxic_terraforming_system

# The crystal star

# Check if there's a flag I can use to enable the cordycepts starbase building

# Asteroid System
# flags = { asteroid_system }
scluster_trade_value_asteroid_system = {
	class = "rl_standard_stars"

	asteroid_belt = {
		type = crystal_asteroid_belt
		radius = 75
	}

	asteroid_belt = {
		type = rocky_asteroid_belt
		radius = 125
	}

	asteroid_belt = {
		type = icy_asteroid_belt
		radius = 175
	}

	flags = { scluster trade_value_asteroid_system }

	planet = {
		count = 1
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	planet = {
		class = "pc_molten"
		count = 1
		orbit_distance = 50
		orbit_angle = { min = 90 max = 270 }

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	# Crystal asteroids
	change_orbit = 25 # 75
	planet = { # 3 crystal asteroids
		count = 3
		class = "pc_crystal_asteroid"
		orbit_distance = 0
		orbit_angle = { min = 40 max = 100 }
	}

	planet = {
		class = "pc_barren"
		orbit_distance = 25 # 100
		orbit_angle = 60
		has_ring = no

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	# Rocky asteroids
	change_orbit = 25 # 125
	planet = { # 5 rocky asteroids
		count = 5
		class = "pc_asteroid"
		orbit_distance = 0
		orbit_angle = { min = 40 max = 270 }
	}

	planet = {
		orbit_distance = 25 # 150
		orbit_angle = -160
		size = { min = 10 max = 20}
		has_ring = no

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	# Ice asteroids
	change_orbit = 25 # 175
	planet = {
		count = 7
		class = "pc_ice_asteroid"
		orbit_distance = 0
		orbit_angle = { min = 10 max = 50 }
		size = { min = @asteroid_min_size max = @asteroid_max_size }
	}

	planet = {
		class = "pc_frozen"
		orbit_distance = 40
		orbit_angle = { min = 90 max = 270 }
		# size = { min = 10 max = 20}
		has_ring = no

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	init_effect = {
		while = {
			count = 6
			random_system_planet = {
				limit = {
					is_asteroid = yes
					is_preventing_anomaly = no
				}
				reroll_random = yes
				random_list = {
					1 = { add_deposit = d_trade_value_3 }
					1 = { add_deposit = d_trade_value_4 }
					1 = { add_deposit = d_trade_value_5 }
					1 = { add_deposit = d_trade_value_6 }
				}
				prevent_anomaly = yes
			}
		}
	}
}

# Getting the research project requires personally colonizing three different planets with the strong magnetic field modifier. This system provides them for you.
scluster_magnetic_mystery_bugpatch_system = {
	class = "sc_binary_1"

	flags = { scluster magnetic_mystery_bugpatch_system }

	planet = {
		count = 1
		class = star
		orbit_distance = 0
		orbit_angle = 0
		size = { min = 30 max = 35 }
		has_ring = no
	}

	planet = {
		count = 1
		class = star
		orbit_distance = 280
		orbit_angle = { min = 0 max = 360 }
		size = { min = 15 max = 25 }
		has_ring = no
		satellite_naming_policy = upper_case_roman_numerals

		change_orbit = 25

		planet = {
			count = { min = 2 max = 3 }
			class = "rl_unhabitable_planets"
			size = { min = 14 max = 24 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 25
			satellite_naming_policy = lower_case_latin_letters

			change_orbit = @base_moon_distance

			moon = {
				count = { min = 0 max = 1 }
				orbit_angle = { min = 90 max = 270 }
				orbit_distance = 5
			}
		}
	}

	change_orbit = -245

	planet = {
		count = { min = 1 max = 2 }
		orbit_distance = 15
		class = random_non_colonizable
		orbit_angle = { min = 90 max = 270 }
	}

	planet = {
		count = 1
		orbit_distance = 25 # 20 # not spawning moons @ 20
		class = "scluster_rl_colonizable_planets"
		orbit_angle = { min = 90 max = 270 }
		size = { min = @homeworld_min_size max = @homeworld_max_size }
		modifiers = none

		init_effect = {
			prevent_anomaly = yes
			add_modifier = { modifier = strong_magnetic_field }
		}

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			class = random_non_colonizable
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}


	planet = {
		count = { min = 3 max = 4 }
		orbit_distance = 30 # 20 # not spawning moons @ 20
		class = "pc_gas_giant"
		orbit_angle = { min = 90 max = 270 }

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 1 max = 2 }
			class = "scluster_rl_uninhabitable_moons"
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	init_effect = {
		while = {
			count = 2
			ordered_system_planet = {
				order_by = trigger:planet_size
				position = 0
				limit = {
					is_moon = yes
					is_colonizable = no
				}
				scluster_init_homeworld = yes
				prevent_anomaly = yes
				clear_planet_modifiers = yes
				add_modifier = { modifier = strong_magnetic_field }
			}
		}
	}
}

# AI Revolt System
# scluster_ai_system_1 = {
	# class = "rl_standard_stars"
	# flags = { scluster ai_revolt_system }
	# asteroid_belt = {
	# 	type = rocky_asteroid_belt
	# 	radius = 100
	# }

	# planet = {
	# 	# count = 1
	# 	class = star
	# 	orbit_distance = 0
	# 	orbit_angle = 1
	# 	size = { min = 20 max = 30 }
	# 	has_ring = no

	# 	init_effect = {
	# 		prevent_anomaly = yes
	# 		create_species = {
	# 			name = random # "NAME_Cybrex"
	# 			class = "ROBOT"
	# 			portrait = "ai_crisis_2" # TODO
	# 			immortal = yes
	# 			namelist = "AI"
	# 			traits = random
	# 			homeworld = this
	# 		}
	# 		random_list = {
	# 			50 = { # AI flag 1
	# 				create_country = {
	# 					name = random
	# 					authority = auth_machine_intelligence
	# 					ethos = {
	# 						ethic = ethic_gestalt_consciousness
	# 					}
	# 					# civics = { # TODO
	# 					# 	civic = civic_machine_built_to_last
	# 					# 	civic = civic_machine_warbots
	# 					# }
	# 					type = "ai_empire"
	# 					species = last_created_species
	# 					name_list = "AI"
	# 					flag = {
	# 						icon= {
	# 							category = "special"
	# 							file = "ai_01.dds"
	# 						}
	# 						background = {
	# 							category = "backgrounds"
	# 							file = "circle.dds"
	# 						}
	# 						colors = {
	# 							"black"
	# 							"red"
	# 							"null"
	# 							"null"
	# 						}
	# 					}
	# 				}
	# 			}
	# 			50 = { # AI flag 2
	# 				create_country = {
	# 					name = random
	# 					authority = auth_machine_intelligence
	# 					ethos = {
	# 						ethic = ethic_gestalt_consciousness
	# 					}
	# 					type = "ai_empire"
	# 					species = last_created_species
	# 					name_list = "AI"
	# 					flag = {
	# 						icon= {
	# 							category = "special"
	# 							file = "ai_02.dds"
	# 						}
	# 						background= {
	# 							category = "backgrounds"
	# 							file = "stripes.dds"
	# 						}
	# 						colors={
	# 							"black"
	# 							"red"
	# 							"null"
	# 							"null"
	# 						}
	# 					}
	# 				}
	# 			}
	# 		}
	# 		last_created_country = {
	# 			save_global_event_target_as = scluster_ai_civ
	# 			# establish_communications_no_message = ROOT
	# 			create_ship_design = { design = "NAME_AI_Transport" }
	# 			add_ship_design = last_created_design
	# 			create_ship_design = { design = "NAME_AI_Colonizer" }
	# 			add_ship_design = last_created_design
	# 			create_ship_design = { design = "NAME_AI_Constructor" }
	# 			add_ship_design = last_created_design
	# 			add_resource = {
	# 				energy = 1000
	# 				minerals = 1000
	# 			}
	# 			set_graphical_culture = "ai_01"
	# 		}
	# 	}
	# }

	# change_orbit = 40

	# planet = {
	# 	orbit_distance = 20
	# 	class = random_non_colonizable
	# 	count = 2

	# 	init_effect = { prevent_anomaly = yes }
	# }

	# change_orbit = 20

	# planet = {
	# 	count = 5
	# 	class = pc_asteroid
	# 	orbit_distance = 0
	# 	orbit_angle = { min = 40 max = 100 }

	# 	init_effect = { prevent_anomaly = yes }
	# }

	# change_orbit = 20

	# planet = {
	# 	orbit_distance = 20
	# 	class = random_non_colonizable
	# 	count = { min = 1 max = 3 }

	# 	init_effect = { prevent_anomaly = yes }

	# 	change_orbit = @base_moon_distance

	# 	moon = {
	# 		count = { min = 0 max = 1 }
	# 		class = random_non_colonizable
	# 		orbit_angle = { min = 90 max = 270 }
	# 		orbit_distance = 5

	# 		init_effect = { prevent_anomaly = yes }
	# 	}
	# }

	# change_orbit = 20

	# planet = {
	# 	count = 1
	# 	orbit_distance = 0
	# 	class = "pc_ai"
	# 	orbit_angle = { min = 90 max = 270 }
	# 	size = 25
	# 	deposit_blockers = none

	# 	init_effect = {
	# 		prevent_anomaly = yes
	# 		save_event_target_as = ai_homeworld
	# 		set_owner = event_target:scluster_ai_civ
	# 		set_capital = yes
	# 		while = {
	# 			count = 24
	# 			create_pop = { species = owner_main_species }
	# 		}
	# 		while = {
	# 			count = 6
	# 			add_district_and_planet_size_if_needed_effect = {
	# 				district = district_nexus
	# 			}
	# 			add_district_and_planet_size_if_needed_effect = {
	# 				district = district_mining
	# 			}
	# 			add_district_and_planet_size_if_needed_effect = {
	# 				district = district_generator
	# 			}
	# 			add_district_and_planet_size_if_needed_effect = {
	# 				district = district_industrial
	# 			}
	# 		}
	# 		remove_all_buildings = yes
	# 		add_building = building_major_capital
	# 		add_building = building_robot_assembly_plant
	# 		add_building = building_bureaucratic_2
	# 		add_building = building_research_lab_2
	# 		add_building = building_foundry_2
	# 		add_building = building_energy_grid

	# 		validate_planet_buildings_and_districts = yes

	# 		while = {
	# 			count = 8
	# 			create_army = {
	# 				name = random
	# 				owner = event_target:scluster_ai_civ
	# 				species = owner_main_species
	# 				type = "robotic_army"
	# 			}
	# 		}
	# 		create_spaceport = {
	# 			owner = event_target:scluster_ai_civ
	# 			initial_module = "fallen_empire_weapon"
	# 		}
	# 		create_fleet = {
	# 			effect = {
	# 				set_owner = event_target:scluster_ai_civ
	# 				create_ship = {
	# 					name = random
	# 					design = "NAME_AI_Constructor"
	# 				}
	# 				set_location = owner.capital_star
	# 			}
	# 		}
	# 		create_fleet = {
	# 			name = "NAME_AI_Core"
	# 			effect = {
	# 				set_owner = event_target:scluster_ai_civ
	# 				create_ship = {
	# 					name = random
	# 					design = "NAME_AI_Core" # core_ai
	# 					graphical_culture = "ai_01"
	# 				}
	# 				set_location = {
	# 					target = PREV
	# 					distance = 20
	# 					angle = 270
	# 				}
	# 			}
	# 		}
	# 		while = {
	# 			count = 2
	# 			create_fleet = {
	# 				effect = {
	# 					set_owner = event_target:scluster_ai_civ
	# 					create_ship = {
	# 						name = random
	# 						design = "NAME_AI_2" # military_station_small_ai
	# 						# graphical_culture = "ai_01"
	# 					}
	# 					set_location = {
	# 						target = PREV
	# 						distance = 10
	# 						angle = 0
	# 					}
	# 				}
	# 			}
	# 		}
	# 		event_target:scluster_ai_civ = {
	# 			while = {
	# 				count = 3
	# 				create_leader = {
	# 					class = admiral
	# 					species = owner_main_species
	# 					name = random
	# 					skill = 5 # skill = 3400
	# 					# traits = {
	# 					# 	trait = leader_trait_cybrex
	# 					# }
	# 				}
	# 				create_fleet = {
	# 					effect = {
	# 						set_owner = event_target:scluster_ai_civ
	# 						while = {
	# 							count = 8
	# 							create_ship = {
	# 								name = random
	# 								design = "NAME_Euthanizer"
	# 								graphical_culture = "ai_01"
	# 							}
	# 						}
	# 						while = {
	# 							count = 12
	# 							create_ship = {
	# 								name = random
	# 								design = "NAME_Sterilizer"
	# 								graphical_culture = "ai_01"
	# 							}
	# 						}
	# 						assign_leader = last_created_leader
	# 						set_location = {
	# 							target = PREVPREV
	# 							distance = 45
	# 							angle = random
	# 						}
	# 					}
	# 				}
	# 			}
	# 		}
	# 	}
	# }

	# planet = {
	# 	orbit_distance = 20
	# 	count = {
	# 		min = 2 # 0
	# 		max = 3
	# 	}
	# 	class = random_non_colonizable

	# 	init_effect = { prevent_anomaly = yes }

	# 	change_orbit = @base_moon_distance

	# 	moon = {
	# 		count = { min = 0 max = 1 }
	# 		orbit_angle = { min = 90 max = 270 }
	# 		orbit_distance = 5

	# 		init_effect = { prevent_anomaly = yes }
	# 	}
	# }

	# init_effect = {
	# 	create_starbase = {
	# 		size = "starbase_citadel"
	# 		owner = event_target:scluster_ai_civ

	# 		module = "shipyard"
	# 		module = "shipyard"
	# 		module = "gun_battery"
	# 		module = "gun_battery"
	# 		module = "missile_battery"
	# 		module = "missile_battery"
	# 	}
	# }
# }
