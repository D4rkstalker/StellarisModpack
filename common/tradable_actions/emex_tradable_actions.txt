# These actions can be traded in trade deals to provide the empires with modifiers or other sorts of effects.
#
# Example:
#
# trade_action_my_example_action = {
# 	# If this is set to 'yes', then the action will be fired and then removed from the trade deal.
# 	# If 'no', then the trade deal will be treated as a treaty that lasts for at least 10 years.
# 	fire_and_forget = no
#
# 	# Determines if the action will show up in the list in the trade deals view.
# 	# SCOPE: Country "giving" the action
# 	# FROM: Country "receiving" the action
# 	potential = {
# 		has_overlord = from
# 		is_specialist_subject_type = { TYPE = bulwark }
# 	}
#
# 	# If this trigger returns 'no', then the trade deal will be cancelled. Checked on daily tick. Only relevant if fire_and_forget is 'no'.
# 	# SCOPE: Country "giving" the action
# 	# FROM: Country "receiving" the action
# 	active = {
# 		has_overlord = from
# 		is_specialist_subject_type = { TYPE = bulwark }
# 	}
#
# 	# Effect that fires when the trade deal is accepted.
# 	# SCOPE: Country "giving" the action
# 	# FROM: Country "receiving" the action
# 	on_traded_effect = {
# 		from = {
# 			set_galactic_custodian = yes
# 		}
# 	}
#
# 	# Effect that fires when the trade deal ends. Only relevant if fire_and_forget is 'no'.
# 	# SCOPE: Country "giving" the action
# 	# FROM: Country "receiving" the action. Not guaranteed to be valid, since a trade deal is cancelled if one of the countries dies.
# 	on_deal_ended_sender_effect = {
# 	}
#
# 	# Effect that fires when the trade deal ends. Only relevant if fire_and_forget is 'no'.
# 	# SCOPE: Country "receiving" the action
# 	# FROM: Country "giving" the action. Not guaranteed to be valid, since a trade deal is cancelled if one of the countries dies.
# 	on_deal_ended_recipient_effect = {
# 		set_galactic_custodian = no
# 	}
#
# 	# Used to determine how much the AI will value the action in a trade deal.
# 	ai_weight = {
# 		weight = 1
#
# 		modifier = {
# 			weight = 2
# 			from = {
# 				is_galactic_custodian = no
# 			}
# 		}
# 	}
# }

trade_action_emex_comvas = {
	fire_and_forget = no
	
	potential = {
	 	has_overlord = from
 		is_specialist_subject_type = { TYPE = community_vassal }
 	}
	
	active = {
 		has_overlord = from
 		is_specialist_subject_type = { TYPE = community_vassal }
 	}
	
	on_traded_effect = {
		if = {
			limit = { is_specialist_subject_tier = { TYPE = community_vassal TIER = 3 } }
			ROOT = {
				add_modifier = {
					modifier = emex_comvas_trade_subject
					multiplier = 3
				}
			}
			custom_tooltip = double_newline
			FROM = {
				add_modifier = {
					modifier = emex_comvas_trade_overlord
					multiplier = 3
				}
			}
		}
		else_if = {
			limit = { is_specialist_subject_tier = { TYPE = community_vassal TIER = 2 } }
			ROOT = {
				add_modifier = {
					modifier = emex_comvas_trade_subject
					multiplier = 2
				}
			}
			custom_tooltip = double_newline
			FROM = {
				add_modifier = {
					modifier = emex_comvas_trade_overlord
					multiplier = 2
				}
			}
		}
		else = {
			ROOT = {
				add_modifier = {
					modifier = emex_comvas_trade_subject
				}
			}
			custom_tooltip = double_newline
			FROM = {
				add_modifier = {
					modifier = emex_comvas_trade_overlord
				}
			}
		}
	}
	
	on_deal_ended_sender_effect = {
		remove_modifier = emex_comvas_trade_subject
	}
	
	on_deal_ended_recipient_effect = {
		remove_modifier = emex_comvas_trade_overlord
 	}
	
	ai_weight = {
		weight = 2

		modifier = {
			weight = 8
			OR = {
				AND = {
					is_specialist_subject_tier = {
						TYPE = community_vassal
						TIER = 3
					}
					has_monthly_income = {
						resource = unity
						value < 60
					}
				}
				AND = {
					is_specialist_subject_tier = {
						TYPE = community_vassal
						TIER = 2
					}
					has_monthly_income = {
						resource = unity
						value < 40
					}
				}
				has_monthly_income = {
					resource = unity
					value < 20
				}
			}
		}
	}
}