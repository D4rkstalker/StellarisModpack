complex_drone = {
	rank = 0
	clothes_texture_index = 2

	weight = {
		weight = 2
	}

	pop_modifier = {
		pop_housing_usage_base = 1
		pop_amenities_usage_no_happiness_base = 1
	}

	# scope: pop to be resettled
	allow_resettlement = {
		always = yes
	}

	resettlement_cost = {
		energy = 100
	}

	unemployment_resources = {
		category = unemployment_resources
	}

	resources = {
		category = pop_category_drones

		upkeep = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
			}
			food = @living_standard_food_normal
		}

		upkeep = {
			trigger = {
				is_organic_species = yes
				is_lithoid = yes
			}
			minerals = @living_standard_food_normal
		}

		upkeep = {
			trigger = {
				is_robotic_species = yes
			}
			energy = @living_standard_energy_normal
		}

		produces = {
			trigger = {
				is_lithoid = yes
				has_trait = trait_lithoid_scintillating
			}
			rare_crystals = @lithoid_trait_resource_production
		}

		produces = {
			trigger = {
				is_lithoid = yes
				has_trait = trait_lithoid_gaseous_byproducts
			}
			exotic_gases = @lithoid_trait_resource_production
		}

		produces = {
			trigger = {
				is_lithoid = yes
				has_trait = trait_lithoid_volatile_excretions
			}
			volatile_motes = @lithoid_trait_resource_production
		}

		#civic_machine_clockwork or civic_machine_synth_skin or civic_machine_rock_body
		upkeep = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				owner = {
					OR = {
						has_valid_civic = civic_machine_clockwork
						has_valid_civic = civic_machine_synth_skin
						has_valid_civic = civic_machine_rock_body
					}
				}
			}
			energy = -0.5
		}
		
		#civic_machine_clockwork or civic_machine_rock_body
		upkeep = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				owner = { 
					OR = {
						has_valid_civic = civic_machine_clockwork
						has_valid_civic = civic_machine_rock_body
					}
				}
			}
			minerals = 0.5
		}

		#civic_machine_synth_skin
		#upkeep = {
			#trigger = {
				#OR = {
					#is_robotic_species = yes
					#is_species_class = BIOROBOT
				#}
				#owner = { has_valid_civic = civic_machine_synth_skin }
			#}
			#food = 0.5
		#}

		#civic_machine_rock_body
		produces = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				has_trait = trait_machinedlc_lithoid_scintillating
			}
			rare_crystals = 0.04
		}

		produces = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				has_trait = trait_machinedlc_lithoid_gaseous_byproducts
			}
			exotic_gases = 0.04
		}

		produces = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				has_trait = trait_machinedlc_lithoid_volatile_excretions
			}
			volatile_motes = 0.04
		}
		
		#processing_power
		upkeep = {
			trigger = {
				owner = {
					OR = {
						has_global_flag = machinedlc_new_game_1 #will be removed
						has_global_flag = machinedlc_new_feature_1
					}
					has_authority = auth_machine_intelligence
					NOT = { has_valid_civic = civic_machine_clockwork }
				}
				NOT = { has_job = drone_processor }
			}
			processing_power = 0.7
		}

		#for bio robot
		upkeep = {
			trigger = {
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_balance }
			}
			energy = 1
			food = 1
		}
		upkeep = {
			trigger = {
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_energy_focus }
			}
			energy = 0.5
			food = 1.5
		}
		upkeep = {
			trigger = {
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_food_focus }
			}
			energy = 1.5
			food = 0.5
		}
	}
}

simple_drone = {
	rank = 0
	clothes_texture_index = 2

	# This is called whenever a Pop is created, moved to a different planet, or gets a new owner
	assign_to_pop = {
		exists = owner
		owner = { is_gestalt = yes }
	}
	weight = {
		weight = 1
	}

	pop_modifier = {
		pop_housing_usage_base = 1
		pop_amenities_usage_no_happiness_base = 1
	}

	# scope: pop to be resettled
	allow_resettlement = {
		always = yes
	}

	resettlement_cost = {
		energy = 100
	}

	unemployment_resources = {
		category = unemployment_resources
		produces = {
			trigger = {
				owner = {
					is_hive_empire = yes
				}
			}
			minerals = 1
		}
		upkeep = {
		}
	}

	resources = {
		category = pop_category_drones

		upkeep = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
			}
			food = @living_standard_food_normal
		}

		upkeep = {
			trigger = {
				is_organic_species = yes
				is_lithoid = yes
			}
			minerals = @living_standard_food_normal
		}

		upkeep = {
			trigger = {
				is_robotic_species = yes
				is_unemployed = no
			}
			energy = @living_standard_energy_normal
		}
		upkeep = {
			trigger = {
				is_robotic_species = yes
				is_unemployed = yes
			}
			energy = @living_standard_energy_unemployed
		}

		produces = {
			trigger = {
				is_lithoid = yes
				has_trait = trait_lithoid_scintillating
			}
			rare_crystals = @lithoid_trait_resource_production
		}

		produces = {
			trigger = {
				is_lithoid = yes
				has_trait = trait_lithoid_gaseous_byproducts
			}
			exotic_gases = @lithoid_trait_resource_production
		}

		produces = {
			trigger = {
				is_lithoid = yes
				has_trait = trait_lithoid_volatile_excretions
			}
			volatile_motes = @lithoid_trait_resource_production
		}

		#civic_machine_clockwork or civic_machine_synth_skin
		upkeep = {
			trigger = {
				is_robotic_species = yes
				is_unemployed = no
				owner = {
					OR = {
						has_valid_civic = civic_machine_clockwork
						has_valid_civic = civic_machine_synth_skin
						has_valid_civic = civic_machine_rock_body
					}
				}
			}
			energy = -0.5
		}
		upkeep = {
			trigger = {
				is_robotic_species = yes
				is_unemployed = yes
				owner = {
					OR = {
						has_valid_civic = civic_machine_clockwork
						has_valid_civic = civic_machine_synth_skin
						has_valid_civic = civic_machine_rock_body
					}
				}
			}
			energy = -0.125
		}

		#civic_machine_clockwork or civic_machine_rock_body or civic_machine_rock_body 
		upkeep = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				is_unemployed = no
				owner = { 
					OR = {
						has_valid_civic = civic_machine_clockwork
						has_valid_civic = civic_machine_rock_body
					}
				}
			}
			minerals = 0.5
		}
		upkeep = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				is_unemployed = yes
				owner = { 
					OR = {
						has_valid_civic = civic_machine_clockwork
						has_valid_civic = civic_machine_rock_body
					}
				}
			}
			minerals = 0.25
		}

		#civic_machine_synth_skin
		upkeep = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				is_unemployed = no
				owner = { has_valid_civic = civic_machine_synth_skin }
			}
			food = 0.5
		}
		upkeep = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				is_unemployed = yes
				owner = { has_valid_civic = civic_machine_synth_skin }
			}
			food = 0.25
		}
		
		#civic_machine_rock_body
		produces = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				has_trait = trait_machinedlc_lithoid_scintillating
			}
			rare_crystals = 0.04
		}

		produces = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				has_trait = trait_machinedlc_lithoid_gaseous_byproducts
			}
			exotic_gases = 0.04
		}

		produces = {
			trigger = {
				OR = {
					is_robotic_species = yes
					is_species_class = BIOROBOT
				}
				has_trait = trait_machinedlc_lithoid_volatile_excretions
			}
			volatile_motes = 0.04
		}

		#processing_power
		upkeep = {
			trigger = {
				is_unemployed = no
				owner = {
					OR = {
						has_global_flag = machinedlc_new_game_1 #will be removed
						has_global_flag = machinedlc_new_feature_1
					}
					has_authority = auth_machine_intelligence
					NOT = { has_valid_civic = civic_machine_clockwork }
				}
			}
			processing_power = 0.75
		}
		upkeep = {
			trigger = {
				is_unemployed = yes
				owner = {
					OR = {
						has_global_flag = machinedlc_new_game_1 #will be removed
						has_global_flag = machinedlc_new_feature_1
					}
					has_authority = auth_machine_intelligence
					NOT = { has_valid_civic = civic_machine_clockwork }
				}
			}
			processing_power = 0.25
		}
		upkeep = {
			trigger = { has_job = drone_inactive }
			processing_power = -0.75
		}

		#for bio robot
		#is_unemployed = no
		upkeep = {
			trigger = {
				is_unemployed = no
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_balance }
			}
			energy = 1
			food = 1
		}
		upkeep = {
			trigger = {
				is_unemployed = no
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_energy_focus }
			}
			energy = 0.5
			food = 1.5
		}
		upkeep = {
			trigger = {
				is_unemployed = no
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_food_focus }
			}
			energy = 1.5
			food = 0.5
		}

        #is_unemployed = yes
		upkeep = {
			trigger = {
				is_unemployed = yes
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_balance }
			}
			energy = 0.5
			food = 0.5
		}
		upkeep = {
			trigger = {
				is_unemployed = yes
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_energy_focus }
			}
			energy = 0.25
			food = 0.75
		}
		upkeep = {
			trigger = {
				is_unemployed = yes
				is_species_class = BIOROBOT
				owner = { has_policy_flag = hybrid_upkeep_food_focus }
			}
			energy = 0.75
			food = 0.25
		}
	}
}