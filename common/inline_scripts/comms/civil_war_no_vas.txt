# Civil War Without Vassalization Descriptions

desc = {
	trigger = {

		success_text = {
			text = civcom.1100.corrupt.desc
			event_target:civwar_rebels = {
				has_country_flag = corrupt_rebellion
				NOT = { has_country_flag = election_dispute_country }
			}
		}

		success_text = {
			text = civcom.1100.leader.desc
			NOT = { has_country_flag = rebs_help_eachother }
			event_target:civwar_rebels = {
				NOT = { has_country_flag = corrupt_rebellion }
				ruler = {
					OR = {
						has_leader_flag = civil_war_ruler_governor
						has_leader_flag = civil_war_ruler_admiral
						has_leader_flag = civil_war_ruler_general
						has_leader_flag = civil_war_ruler_scientist
					}
				}
			}
		}

		success_text = {
			text = civcom.1100.mult.leader.desc
			has_country_flag = rebs_help_eachother
			event_target:civwar_rebels.ruler = {
				OR = {
					has_leader_flag = civil_war_ruler_governor
					has_leader_flag = civil_war_ruler_admiral
					has_leader_flag = civil_war_ruler_general
					has_leader_flag = civil_war_ruler_scientist
				}
			}
		}

		success_text = { # New Nat Country, motherland will join war
			text = civcom.1100.nationalist.support.desc
			NOT = { has_country_flag = rebs_help_eachother }
			exists = event_target:nat_motherland_model
			event_target:nat_motherland_model = { has_country_flag = motherland_will_join_@event_target:civwar_rebels }
			event_target:civwar_rebels.ruler = {
				has_leader_flag = civil_war_ruler_nationalist
			}
		}

		success_text = { # Multiple New Nat Countries, motherland will join war
			text = civcom.1100.nationalist.mult.support.desc
			has_country_flag = rebs_help_eachother
			exists = event_target:nat_motherland_model
			event_target:nat_motherland_model = { has_country_flag = motherland_will_join_@event_target:civwar_rebels }
			event_target:civwar_rebels.ruler = {
				has_leader_flag = civil_war_ruler_nationalist
			}
		}

		success_text = { # New Nat Country, motherland wont join war
			text = civcom.1100.nationalist.no_support.desc
			NOT = { has_country_flag = rebs_help_eachother }
			exists = event_target:nat_motherland_model
			OR = {
				event_target:nat_motherland_model = { has_country_flag = motherland_wont_join_@event_target:civwar_rebels }
				event_target:nat_motherland_model = { is_exile_country = yes }
			}
			event_target:civwar_rebels = {
				NOT = { has_country_flag = exile_restored_country }
				ruler = { has_leader_flag = civil_war_ruler_nationalist }
			}
		}

		success_text = { # Multiple New Nat Countries, motherland wont join war
			text = civcom.1100.nationalist.mult.no_support.desc
			has_country_flag = rebs_help_eachother
			exists = event_target:nat_motherland_model
			OR = {
				event_target:nat_motherland_model = { has_country_flag = motherland_wont_join_@event_target:civwar_rebels }
				event_target:nat_motherland_model = { is_exile_country = yes }
			}
			event_target:civwar_rebels = {
				NOT = { has_country_flag = exile_restored_country }
				ruler = { has_leader_flag = civil_war_ruler_nationalist }
			}
		}

		success_text = { # Restored Country
			text = civcom.1100.nationalist.no_support.exile.reg.desc
			NOT = { has_country_flag = rebs_help_eachother }
			exists = event_target:nat_motherland_model
			OR = {
				event_target:nat_motherland_model = { has_country_flag = motherland_wont_join_@event_target:civwar_rebels }
				event_target:nat_motherland_model = { is_exile_country = yes }
			}
			event_target:civwar_rebels = {
				ruler = { has_leader_flag = civil_war_ruler_nationalist }
				has_country_flag = exile_restored_country
				is_imperial = no
			}
		}

		success_text = { # Restored Country, other states as well
			text = civcom.1100.nationalist.mult.no_support.exile.reg.desc
			has_country_flag = rebs_help_eachother
			exists = event_target:nat_motherland_model
			OR = {
				event_target:nat_motherland_model = { has_country_flag = motherland_wont_join_@event_target:civwar_rebels }
				event_target:nat_motherland_model = { is_exile_country = yes }
			}
			event_target:civwar_rebels = {
				ruler = { has_leader_flag = civil_war_ruler_nationalist }
				has_country_flag = exile_restored_country
				is_imperial = no
			}
		}

		success_text = { # Restored Country, Old Dynasty will take over
			text = civcom.1100.nationalist.no_support.exile.imp.desc
			NOT = { has_country_flag = rebs_help_eachother }
			exists = event_target:nat_motherland_model
			OR = {
				event_target:nat_motherland_model = { has_country_flag = motherland_wont_join_@event_target:civwar_rebels }
				event_target:nat_motherland_model = { is_exile_country = yes }
			}
			event_target:civwar_rebels = {
				is_imperial = yes
				has_country_flag = exile_restored_country
				ruler = { has_leader_flag = civil_war_ruler_nationalist }
			}
		}

		success_text = { # Restored Country, Old Dynasty will take over, other states as well
			text = civcom.1100.nationalist.mult.no_support.exile.imp.desc
			has_country_flag = rebs_help_eachother
			exists = event_target:nat_motherland_model
			OR = {
				event_target:nat_motherland_model = { has_country_flag = motherland_wont_join_@event_target:civwar_rebels }
				event_target:nat_motherland_model = { is_exile_country = yes }
			}
			event_target:civwar_rebels = {
				is_imperial = yes
				has_country_flag = exile_restored_country
				ruler = { has_leader_flag = civil_war_ruler_nationalist }
			}
		}

		success_text = {
			text = civcom.1100.leader.iso.sec.desc
			event_target:civwar_rebels.ruler = {
				OR = {
					has_leader_flag = civil_war_ruler_governor_isolated
					has_leader_flag = civil_war_ruler_admiral_isolated
					has_leader_flag = civil_war_ruler_general_isolated
					has_leader_flag = civil_war_ruler_scientist_isolated
				}
			}
		}

		success_text = {
			text = civcom.1100.heir.iso.sec.desc
			event_target:civwar_rebels.ruler = {
				has_leader_flag = civil_war_ruler_heir_isolated
			}
		}

		success_text = {
			text = civcom.1100.secession.dem.desc
			has_democratic_elections = yes
			event_target:civwar_rebels.ruler = { has_leader_flag = civil_war_ruler_secession }
		}

		success_text = {
			text = civcom.1100.secession.not_dem.desc
			has_democratic_elections = no
			event_target:civwar_rebels.ruler = { has_leader_flag = civil_war_ruler_secession }
		}

		success_text = {
			text = civcom.1100.dispute.dem.desc
			has_democratic_elections = yes
			event_target:civwar_rebels = { has_country_flag = election_dispute_country }
		}

		success_text = {
			text = civcom.1100.dispute.corp.desc
			is_megacorp = yes
			has_democratic_elections = no
			event_target:civwar_rebels = { has_country_flag = election_dispute_country }
		}

		success_text = {
			text = civcom.1100.dispute.other.desc
			OR = {
				is_oligarchy = yes
				is_dictatorial = yes
			}
			is_megacorp = no
			event_target:civwar_rebels = { has_country_flag = election_dispute_country }
		}

		success_text = {
			text = rebel_overlord_text_1
			event_target:civwar_rebels = {
				is_overlord = yes
				subjects = 1
			}
		}

		success_text = {
			text = rebel_overlord_text_2
			event_target:civwar_rebels = {
				is_overlord = yes
				subjects = 2
			}
		}

		success_text = {
			text = rebel_overlord_text_3
			event_target:civwar_rebels = {
				is_overlord = yes
				subjects = 3
			}
		}

		success_text = {
			text = rebel_overlord_text_4
			event_target:civwar_rebels = {
				is_overlord = yes
				subjects = 4
			}
		}

		success_text = {
			text = rebel_overlord_text_5
			event_target:civwar_rebels = {
				is_overlord = yes
				subjects = 5
			}
		}

		success_text = {
			text = rebel_overlord_text_more
			event_target:civwar_rebels = {
				is_overlord = yes
				subjects > 5
			}
		}

		success_text = {
			text = all_subjects_rebel_1
			OR = {
				AND = {
					is_overlord = no
					check_variable = { which = num_subjects value = 1 }
					event_target:civwar_rebels = { is_overlord = no }
				}
				AND = {
					is_overlord = yes
					count_country = {
						count = 1
						limit = { has_country_flag = subject_free_from_@root }
					}
				}
			}
		}

		success_text = {
			text = all_subjects_rebel_more
			is_overlord = no
			check_variable = { which = num_subjects value > 1 }
			event_target:civwar_rebels = { is_overlord = no }
		}

		success_text = {
			text = all_subjects_rebel_plus_fealty_more
			is_overlord = no
			check_variable = { which = num_subjects value > 2 }
			event_target:civwar_rebels = { is_overlord = yes }
		}

		success_text = {
			text = some_subjects_rebel
			is_overlord = yes
			count_country = {
				count > 1
				limit = { has_country_flag = subject_free_from_@root }
			}
		}
	}
}