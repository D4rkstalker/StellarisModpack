# Example Resolution Type
# NOTE: Remember to add Resolutions to a Resolution Category!

#example_resolution = {
#	icon = "name of the icon key"
#	resources = {} # cost and category
#	target = yes/no # if this resolution requires a target country
#	modifier = {} # modifier to be applied to all community members if passed
#	effect = {} # effect to be applied if passed, scope is proposer unless there is a target country - then scope is target country, with proposer in from scope
#	fail_effects = {} # effect to be applied if failed, scope is proposer unless there is a target country - then scope is target country, with proposer in from scope
#	potential = {} # potential trigger, scope is country
#	allow = {} # allow trigger, scope is country, from is target if valid
#	active = {} # can be active trigger, scope is country
#	breach = {} # in breach trigger, scope is country
#	valid_target = {} # valid target trigger, scope is country
#	ai_weight = {} # ai weight modifiers, scope is country
#}


@resolution_weight_hated = 3
@resolution_weight_disliked = 4
@resolution_weight_unpopular = 5
@resolution_weight_normal = 6
@resolution_weight_popular = 6.5
@resolution_weight_loved = 7

@resolution_cost_t1 = 100
@resolution_cost_t2 = 150
@resolution_cost_t3 = 200
@resolution_cost_t4 = 250
@resolution_cost_t5 = 300
@resolution_cost_denounce = 25

@resolution_flag_timer = 360

#example_resolution = {
#	icon = "name of the icon key"
#	resources = {} # cost and category
#	target = yes/no # if this resolution requires a target country
#	harmful = yes/no # if the AI should consider this harmful when choosing target
#	modifier = {} # modifier to be applied to all community members if passed
#	fire_and_forget = yes/no # if "yes", the resolution will not be added to the list of active/passed resolutions. Mainly used for repeal resolutions. Default: no
#	triggered_modifier = {} # triggered modifier to be applied, scope is country
#	effect = {} # effect to be applied if passed, scope is proposer unless there is a target country - then scope is target country, with proposer in from scope
#	fail_effects = {} # effect to be applied if failed, scope is proposer unless there is a target country - then scope is target country, with proposer in from scope
#	potential = {} # potential trigger, scope is country
#	allow = {} # allow trigger, scope is country
#	active = {} # Enacted resolutions are cancelled if this trigger fails
#
#	ai_weight = {} # ai weight modifiers, scope is country. from scope is the target country for targeted resolutions
#	NOTE: all ai_weight modifiers are multiplicative. The end result is also multiplied with a factor based on the opinion towards the proposer and/or target,
#	see RESOLUTION_TARGET_OPINION_MIN_FACTOR etc. in 00_defines.txt. Also see RESOLUTION_VOTE_SUPPORT_THRESHOLD etc. for balancing the values.
#
#	valid_target = {} # valid targets trigger, scope is country
#}

# NOTE: Remember to add Resolutions to a Resolution Category!

resolution_galactic_focus_crisis_PF22_primeflesh = {
	icon = "GFX_resolution_emergency_measure"

	resources = {
		category = resolutions
		cost = {
			influence = @resolution_cost_t1
		}
	}
	target = no

	effect = {
		custom_tooltip = resolution_galactic_focus_crisis_PF22_primeflesh_effect_success

		hidden_effect = {
			PF22_repeal_all_galactic_focus_resolutions = yes
			set_global_flag = galactic_focus_crisis_PF22_primeflesh
			set_global_flag = galactic_community_crisis_fighting

			set_global_flag = galactic_community_resolution_passed

			set_timed_country_flag = { flag = galactic_community_resolution_passed_general days = @resolution_flag_timer }
			add_modifier = {
				modifier = resolution_passed_diplomatic_weight
				days = 2200
			}
		}
	}

	fail_effects = {
		hidden_effect = {
			set_timed_country_flag = { flag = galactic_community_resolution_failed_general days = @resolution_flag_timer }
			add_modifier = {
				modifier = resolution_failed_diplomatic_weight
				days = 2200
			}
		}
	}

	potential = {
		has_global_flag = PF22_in_progress
		NOT = { has_global_flag = galactic_focus_crisis_PF22_primeflesh }
	}

	active = { # Resolution only in effect while this trigger is met
		has_global_flag = PF22_in_progress
	}

	ai_weight = {
		base = @resolution_weight_normal

		modifier = {
			factor = 2

			any_neighbor_country = {
				is_country_type = PF22_prime_flesh
			}
			desc = gal_com_neighboring_PF22_primeflesh
		}

		modifier = {
			factor = 0.75

			NOT = {
				any_country = {
					is_country_type = PF22_prime_flesh
					galaxy_percentage > 0.08
				}
			}
			desc = gal_com_PF22_primeflesh_size_smallest
		}

		modifier = {
			factor = 1.1

			any_country = {
				is_country_type = PF22_prime_flesh
				galaxy_percentage > 0.08
				galaxy_percentage <= 0.15
			}
			desc = gal_com_PF22_primeflesh_size_small
		}

		modifier = {
			factor = 1.5

			any_country = {
				is_country_type = PF22_prime_flesh
				galaxy_percentage > 0.15
				galaxy_percentage <= 0.25
			}
			desc = gal_com_PF22_primeflesh_size_medium
		}

		modifier = {
			factor = 2

			any_country = {
				is_country_type = PF22_prime_flesh
				galaxy_percentage > 0.25
				galaxy_percentage <= 0.35
			}
			desc = gal_com_PF22_primeflesh_size_large
		}

		modifier = {
			factor = 3

			any_country = {
				is_country_type = PF22_prime_flesh
				galaxy_percentage > 0.35
				galaxy_percentage <= 0.45
			}
			desc = gal_com_PF22_primeflesh_size_very_large
		}

		modifier = {
			factor = 10

			any_country = {
				is_country_type = PF22_prime_flesh
				galaxy_percentage > 0.45
			}
			desc = gal_com_PF22_primeflesh_size_huge
		}

		modifier = {
			factor = 10

			has_ascension_perk = ap_defender_of_the_galaxy
			desc = ap_defender_of_the_galaxy
		}

		modifier = {
			factor = 1.2
			is_militarist = yes
			desc = ethic_militarist
		}

		modifier = {
			factor = 1.2
			is_materialist = yes
			desc = ethic_materialist
		}

		modifier = {
			factor = 0.5
			is_xenophobe = yes

			NOT = {
				any_neighbor_country = {
					is_country_type = PF22_prime_flesh
				}
			}
			desc = ethic_xenophobe
		}
	}
}

