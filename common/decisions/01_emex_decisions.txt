# Transform into Bio-Mechanical World
decision_emex_biomech_transformation = {
	owned_planets_only = yes
	icon = decision_cybernetics

	enactment_time = 3600
	resources = {
		category = decisions
		cost = {
			alloys = 2000
			food = 1000
		}
	}
	
	potential = {
		NOR = {
			is_planet_class = pc_emex_bio_mechanical
			is_planet_class = pc_emex_processing_core
		}
		exists = owner
		owner = {
			has_origin = origin_born_of_knowledge
			has_technology = tech_emex_biomech_world
			check_variable = {
				which = bok_biomech_world_cap
				value > bok_biomech_world_amount
			}
		}
	}
	allow = {
		num_pops >= 15
		num_uncleared_blockers = 0
	}
	
	effect = {
		#custom_tooltip = decision_emex_biomech_transformation_effects
		change_pc = pc_emex_bio_mechanical
		add_modifier = {
			modifier = "bok_new_biomech_world"
			days = 1800 #5 years
		}
		hidden_effect = {		
			planet_event = { id = bok.9 }
			owner = {
				change_variable = {
					which = bok_biomech_world_amount
					value = 1
				}
			}
		}
	}
	
	ai_weight = {
		weight = 25
	}
}

decision_emex_processing_transformation = {
	owned_planets_only = yes
	icon = decision_arcology_project

	enactment_time = 1080
	resources = {
		category = decisions
		cost = {
			alloys = 2000
			minerals = 3000
		}
	}
	
	potential = {
		is_planet_class = pc_emex_bio_mechanical
		exists = owner
		owner = {
			has_origin = origin_born_of_knowledge
			has_technology = tech_emex_processing_world
			check_variable = {
				which = bok_pros_world_cap
				value > bok_pros_world_amount
			}
		}
	}
	allow = {
		num_pops >= 30
	}
	
	effect = {
		#custom_tooltip = decision_emex_processing_transformation_effects
		hidden_effect = {
			planet_event = { id = bok.10 }
			owner = {
				change_variable = {
					which = bok_pros_world_amount
					value = 1
				}
				subtract_variable = {
					which = bok_biomech_world_amount
					value = 1
				}
			}
		}
		change_pc = pc_emex_processing_core
		owner = {
			add_resource = {
				food = 5000
			}
		}
	}
	
	ai_weight = {
		weight = 15
	}
}

# Use Motes for Farming
decision_vfm_convert_planet = {
	owned_planets_only = yes
	icon = decision_resources
	sound = event_administrative_work

	enactment_time = 10
	resources = {
		category = decisions
		cost = {
			minerals = 250
			volatile_motes = 10
		}
	}
	
	potential = {
		exists = owner
		owner = {
			has_valid_civic = civic_volatile_farming_methods
		}
		NOT = {
			has_modifier = pm_mote_food_planet
		}
	}
	
	allow = {
	}
	
	effect = {
		add_modifier = { modifier = "pm_mote_food_planet" days = -1 }
	}
	
	ai_weight = {
		weight = 10
	}
}

# Revert to Mundane Farming
decision_vfm_convert_planet_back = {
	owned_planets_only = yes
	icon = decision_resources
	sound = event_administrative_work

	enactment_time = 5
	resources = {
		category = decisions
		cost = {
			minerals = 200
		}
	}
	
	potential = {
		has_modifier = pm_mote_food_planet
	}
	
	allow = {
	}
	
	effect = {	
		custom_tooltip = decision_vfm_pm_tt2
		hidden_effect = {
			remove_modifier = pm_mote_food_planet
		}
	}
	
	ai_weight = {
		weight = 1
	}
}

# Use Gases for Fracking
decision_gft_convert_planet = {
	owned_planets_only = yes
	icon = decision_drilling_for_gas
	sound = event_administrative_work

	enactment_time = 10
	resources = {
		category = decisions
		cost = {
			minerals = 250
			exotic_gases = 10
		}
	}
	
	potential = {
		exists = owner
		owner = {
			has_valid_civic = civic_gaseous_fracking_techniques
		}
		NOT = {
			has_modifier = pm_gas_minerals_planet
		}
	}
	
	allow = {
	}
	
	effect = {
		add_modifier = { modifier = "pm_gas_minerals_planet" days = -1 }
	}
	
	ai_weight = {
		weight = 10
	}
}

# Revert to Mundane Mining
decision_gtf_convert_planet_back = {
	owned_planets_only = yes
	icon = decision_drilling_for_gas
	sound = event_administrative_work

	enactment_time = 5
	resources = {
		category = decisions
		cost = {
			minerals = 200
		}
	}
	
	potential = {
		has_modifier = pm_gas_minerals_planet
	}
	
	allow = {
	}
	
	effect = {	
		custom_tooltip = decision_gft_pm_tt2
		hidden_effect = {
			remove_modifier = pm_gas_minerals_planet
		}
	}
	
	ai_weight = {
		weight = 1
	}
}

# Machinarchy: AA - Convene Heads
decision_machinarchy_aa = {
	owned_planets_only = yes
	icon = decision_deal
	sound = event_administrative_work

	enactment_time = 3
	resources = {
		category = decisions
		cost = {
			unity = 100
		}
	}
	
	potential = {
		owner = {
			has_valid_civic = civic_machinarchy
			has_policy_flag = artificial_aristocracy
		}
	}
	
	allow = {
		any_owned_pop = {
			has_job = head_of_operations_machine
		}
	}
	
	effect = {	
		custom_tooltip = decision_machinarchy_aa_tt
		hidden_effect = {
			planet_event = { id = emex_civic.10 }
			machinarchy_aa_reset = yes
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

# # Anarcho-Tyranny - Recruitment Campaign
# decision_anty_recruitment = {
# 	owned_planets_only = yes
# 	icon = decision_alien_propaganda
# 	sound = event_administrative_work

# 	enactment_time = 720
# 	resources = {
# 		category = decisions
# 		cost = {
# 			unity = 2000
# 			energy = 1000
# 		}
# 	}
	
# 	potential = {
# 		owner = {
# 			has_valid_civic = civic_anarcho_tyranny
# 		}
# 		any_owned_pop = { has_job = job_criminal }
# 	}
	
# 	allow = {
# 		num_assigned_jobs = {
# 			job = job_loyal_criminal
# 			value < 6
# 		}
# 	}
	
# 	effect = {	
# 		custom_tooltip = decision_anty_recruitment
# 		hidden_effect = {
# 			planet_event = { id = emex_civic.30 } #todo
# 		}
# 	}
	
# 	ai_weight = {
# 		weight = 1
# 	}
# }

# Sovereign Nations - Deal with Nation
decision_sn_dealwithnation = {
	owned_planets_only = yes
	icon = decision_galactic_senate
	sound = event_administrative_work

	enactment_time = 30
	resources = {
		category = decisions
		cost = {
			influence = 20
		}
	}
	
	potential = {
		owner = {
			has_valid_civic = civic_sovereign_nations
		}
	}
	
	allow = {
		NOT = { has_modifier = sn_dealing_with_nation }
	}
	
	effect = {	
		custom_tooltip = decision_sn_effect
		hidden_effect = {
			planet_event = { id = emex_civic.31 } 
		}
	}
	
	ai_weight = {
		weight = 10
	}
}

# Splintered Hives - Deal with Nation
decision_sn_dealwithnation_h = {
	owned_planets_only = yes
	icon = decision_galactic_senate
	sound = event_administrative_work

	enactment_time = 30
	resources = {
		category = decisions
		cost = {
			influence = 20
		}
	}
	
	potential = {
		owner = {
			has_valid_civic = civic_hive_splintered
		}
	}
	
	allow = {
		NOT = { has_modifier = sn_dealing_with_nation_h }
	}
	
	effect = {	
		custom_tooltip = decision_sn_effect
		hidden_effect = {
			planet_event = { id = emex_civic.31 } 
		}
	}
	
	ai_weight = {
		weight = 10
	}
}

# Defensive Policies - Fortify World
decision_df_fortify = {
	owned_planets_only = yes
	icon = decision_martial_law_hive
	sound = event_administrative_work

	enactment_time = 30
	resources = {
		category = decisions
		cost = {
			trigger = {
				count_planet_army = {
					count <= 5
				}
			}
			alloys = 750
		}
		cost = {
			trigger = {
				count_planet_army = {
					count > 5
				}
				count_planet_army = {
					count < 10
				}
			}
			alloys = 1000
		}
		cost = {
			trigger = {
				count_planet_army = {
					count > 10
				}
				count_planet_army = {
					count < 20
				}
			}
			alloys = 1500
		}
		cost = {
			trigger = {
				count_planet_army = {
					count > 20
				}
				count_planet_army = {
					count < 30
				}
			}
			alloys = 2000
		}
		cost = {
			trigger = {
				count_planet_army = {
					count > 30
				}
				count_planet_army = {
					count < 50
				}
			}
			alloys = 3000
		}
		cost = {
			trigger = {
				count_planet_army = {
					count > 50
				}
			}
			alloys = 5000
		}
	}
	
	potential = {
		owner = {
			OR = {
				has_valid_civic = civic_defensive_policies
				has_valid_civic = civic_machine_fortification_protocols
			}
		}
	}
	
	allow = {
		num_pops > 3
		NOT = { has_modifier = df_world_fortified }
	}
	
	effect = {	
		if = {
			limit = {
				owner = { is_gestalt = no }
			}
			add_modifier = { modifier = "df_world_fortified" days = -1 }
		}
		else = {
			add_modifier = { modifier = "df_world_fortified_gestalt" days = -1 }
		}
	}
	
	ai_weight = {
		weight = 10
	}
}

# Stop Fortification
decision_end_fortification = {
	owned_planets_only = yes
	icon = decision_end_martial_law_hive
	sound = event_administrative_work

	enactment_time = 5
	resources = {
		category = decisions
		cost = {
			influence = 5
		}
	}
	
	potential = {
		has_modifier = df_world_fortified
	}
	
	allow = {
	}
	
	effect = {	
		custom_tooltip = decision_end_fortify_tt
		hidden_effect = {
			remove_modifier = df_world_fortified
		}
	}
	
	ai_weight = {
		weight = 1
	}
}

# Feeding Frenzy (Hive)
decision_planet_feeding_frenzy = {
	owned_planets_only = yes
	sound = event_administrative_work
	icon = decision_resources

	resources = {
		category = decisions
		cost = {
			food = 1000
		}
	}

	potential = {
		owner = {
			has_valid_civic = civic_hive_food_focus
		}
	}

	allow = {
		NOR = {
			has_modifier = planet_growth_discouraged
			has_modifier = planet_population_control
			has_modifier = planet_food_boost
		}
	}

	effect = {
		add_modifier = { modifier = "planet_food_boost" days = 3600 }
	}

	ai_weight = {
		weight = 5

		# don't encourage growth if there is no free housing
		modifier = {
			factor = 0
			free_housing < 1
		}
	}
}


# Create Neutral Zone
decision_emex_neutral_expand = {
	icon = decision_star_pulsar
	
	enactment_time = 30
	resources = {
		category = decisions
		cost = {
			influence = 100
		}
		cost = {
			trigger = {
				from = { has_ascension_perk = ap_neutral_zones }
			}
			influence = -50
		}
	}
	
	potential = {
		# On Cooldown
		solar_system = { NOT = { has_star_flag = emex_removing_neutral_zone } }
		from = { #todo - change so it depends on variable num
			has_ascension_perk = ap_neutral_zones
		}
		# Meeting Limit
		from = {
			check_variable = {
				which = emex_neutralzone_num
				value <= emex_neutralzone_cap
			}
		}
		# Decision on Star
		is_star = yes
		exists = space_owner
		space_owner = {
			is_same_value = from
			is_ai = no # todo?
		}
	}
	
	allow = {
		# Border System OR Borders Neutral Sytem
		solar_system = {
			any_neighbor_system = {
				OR = {
					has_star_flag = emex_neutral_zone
					AND = {
						exists = space_owner
						space_owner = { 
							is_country_type = default
							NOT = { is_same_value = from }
						}
					}
				}
			}
		}
		# No Colony in System
		NOT = {
			solar_system = {
				any_system_planet = {
					is_colony = yes
				}
			}
		}
		# No Observation Post in System
		NOT = {
			solar_system = {
				any_ship_in_system = {
					is_ship_class = shipclass_observation_station
				}
			}
		}
	}
	
	on_queued = {
		solar_system = {
			set_timed_star_flag = {
				flag = emex_setting_neutral_zone
				days = 30
			}
		}
	}
	
	effect = {	
		custom_tooltip = neutralzone_tt
		hidden_effect = {
			planet_event = {
				id = ap.10
			}
			from = {
				change_variable = {
					which = emex_neutralzone_num
					value = 1
				}
			}
		}
	}
	
	ai_weight = {
		weight = 1
	}
}

# Remove Neutral Zone
decision_emex_neutral_remove = {
	icon = decision_star_pulsar
	
	enactment_time = 5
	resources = {
		category = decisions
		cost = {
			influence = 25
		}
	}
	
	potential = {
		is_star = yes
		solar_system = { NOT = { has_star_flag = emex_setting_neutral_zone } }
		OR = {
			solar_system = { has_star_flag = emex_neutral_zone }
			solar_system = {
				any_neighbor_system = {
					has_star_flag = emex_neutral_zone
				}
			}	
		}
	}
	
	allow = {
	}
	
	on_queued = {
		solar_system = {
			set_timed_star_flag = {
				flag = emex_removing_neutral_zone
				days = 30
			}
		}
	}
	
	effect = {	
		custom_tooltip = neutralzone_undo_tt
		hidden_effect = {
			from = {
				save_event_target_as = root_country
				subtract_variable = {
					which = emex_neutralzone_num
					value = 1
				}
			}
			solar_system = {
				every_neighbor_system = {
					limit = { 
						has_star_flag = emex_neutral_zone 
					}
					every_fleet_in_system = {
						limit = {
							or = {
								is_ship_class = shipclass_starbase
								is_ship_class = shipclass_military_station
								is_ship_class = shipclass_research_station
								is_ship_class = shipclass_mining_station
							}
						}
						set_controller = event_target:root_country
						set_owner = event_target:root_country
					}
					remove_star_flag = emex_neutral_zone
				}
			}
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

# Planetary Reprocessing
decision_emex_reprocessing = {
	owned_planets_only = yes
	sound = event_structural_collapse
	icon = decision_strip_mining
	
	enactment_time = 360
	resources = {
		category = decisions
	}

	potential = {
		owner = {
			has_valid_civic = civic_machine_destructive_programming
		}
		can_have_habitable_deposits = yes
		is_capital = no
	}

	allow = {
		num_free_districts = { type = any value > 0 }
	}

	effect = {
		custom_tooltip = decision_emex_reprocessing_tt
		
		if = {
			limit = { num_districts = { type = any value > 0 } }
			custom_tooltip = decision_machine_destructive_programming_destroy_district_desc

			hidden_effect = {
				random_list = {
					1 = {
						modifier = {
							factor = 0
							num_districts = { type = district_nexus value = 0 }
						}
						remove_district = district_nexus
					}
					1 = {
						modifier = {
							factor = 0
							num_districts = { type = district_generator value = 0 }
						}
						remove_district = district_generator
					}
					1 = {
						modifier = {
							factor = 0
							num_districts = { type = district_mining value = 0 }
						}
						remove_district = district_mining
					}
					3 = {
						modifier = {
							factor = 0
							num_districts = { type = district_farming value = 0 }
						}
						remove_district = district_farming
					}
				}
			}
		}
		
		hidden_effect = {
			random_list = {
				10 = {
					modifier = {
						factor = 0
						num_free_districts = { type = any value < 2 }
					}
					add_deposit = d_extraction_crater
					add_deposit = d_extraction_crater
					owner = {
						add_monthly_resource_mult = {
							resource = minerals
							value = 5
							min = @tier1materialmin
							max = @tier1materialmax
						}
					}
					add_planet_devastation = 20

					create_message = {
						type = MESSAGE_MACHINE_DESTRUCTION
						localization = MESSAGE_MACHINE_DESTRUCTION_MINERALS_TEXT
						days = 30
						target = this

						variable = {
							type = name
							localization = PLANET
							scope = this
						}
					}
				}
				10 = {
					modifier = {
						factor = 0
						num_free_districts = { type = any value < 2 }
					}
					add_deposit = d_extraction_crater
					add_deposit = d_extraction_crater
					owner = {
						add_monthly_resource_mult = {
							resource = alloys
							value = 3
							min = @tier1materialmin
							max = @tier1materialmax
						}
					}
					add_planet_devastation = 20

					create_message = {
						type = MESSAGE_MACHINE_DESTRUCTION
						localization = MESSAGE_MACHINE_DESTRUCTION_ALLOYS_TEXT
						days = 30
						target = this

						variable = {
							type = name
							localization = PLANET
							scope = this
						}
					}
				}
				10 = {
					# There's only one district slot left on the planet
					modifier = {
						factor = 0
						num_free_districts = { type = any value >= 2 }
					}
					add_deposit = d_extraction_crater
					owner = {
						add_monthly_resource_mult = {
							resource = minerals
							value = 3
							min = @tier1materialmin
							max = @tier1materialmax
						}
					}
					add_planet_devastation = 10

					create_message = {
						type = MESSAGE_MACHINE_DESTRUCTION
						localization = MESSAGE_MACHINE_DESTRUCTION_MINERALS_TEXT
						days = 30
						target = this

						variable = {
							type = name
							localization = PLANET
							scope = this
						}
					}
				}
			}

			# Abandon the planet if we've finished destroying the planet
			if = {
				owner = { country_event = { id = colony.185 days = 1 } }
			}
		}
	}

	ai_weight = {
		weight = 5
	}
}

# Nanite Inundation
decision_emex_nanite_inundation = {
	owned_planets_only = yes
	icon = decision_synth_sabotage
	sound = event_administrative_work

	enactment_time = 30
	resources = {
		category = decisions
		cost = {
			nanites = 200
		}
	}
	
	potential = {
		exists = owner
		owner = {
			has_valid_civic = civic_machine_selfreplicating_machines
		}
		NOT = {
			has_modifier = nanite_overload_emex
		}
	}
	
	allow = {
	}
	
	effect = {
		add_modifier = { modifier = "nanite_overload_emex" days = 1800 }
	}
	
	ai_weight = {
		weight = 10
	}
}