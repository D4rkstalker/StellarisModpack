#Lithoid Supremacy Decisions

#Geode World Project
decision_geode_world_project = {
	owned_planets_only = yes
	icon = decision_geode_world_project

	#Time increased to 1080 for balancing
	enactment_time = 1080
	resources = {
		category = decisions
		cost = {
			influence = 200
			minerals = 20000
			rare_crystals = 2500
			sr_dark_matter = 500
		}
	}

	potential = {
		NOR = {
			is_planet_class = pc_city
			is_planet_class = pc_relic
			is_planet_class = pc_geode
			has_modifier = resort_colony
			has_modifier = penal_colony
			has_modifier = slave_colony
			has_modifier = pm_wenkwort_custodian
		}
		is_artificial = no
		exists = owner
		owner = { has_ascension_perk = ap_geode_world_project }
		owner = {
			is_lithoid_empire = yes
		}
	}

	effect = {
		# Make geode-planet
		custom_tooltip = decision_geode_world_project_effects
		hidden_effect = {
			#Change to geode planet class
			change_pc = pc_geode

			#add geode world deposits
			add_deposit = d_expanded_lithosphere
			add_deposit = d_geode_world_maintenance

			owner = {
				country_event = { id = distar.201 } # port for living planet distar.197, triggers in event
			}
			planet_event = { id = mega.200 }
			if = {
				limit = {
					OR = {
						is_active_resolution = "resolution_ecology_environmental_control_board"
						is_active_resolution = "resolution_ecology_paradise_initiative"
					}
				}
				owner = {
					set_timed_country_flag = { flag = resolution_breached_terraformed days = 3600 }
				}
			}
			
			#Spawn shattered Sections
			create_ambient_object = {
				location = this
				type = "lithoid_supremacy_geode_object"
	
				use_3d_location = yes

				entity_offset = 0
				entity_offset_angle = 0
				entity_offset_height = 0
				base_angle_towards = star
				entity_face_object = star
	
				entity_scale_to_size = no #yes
				scale = 16
				#0.5 by default
				#0.3 is under planet mesh
			}

			#Add Modifier
			add_modifier = { modifier = geode_world days = -1 }
			add_modifier = { modifier = acclimating_lithosphere days = 640 }
			#Modifier time increased further for balancing

			#Blowing up planets hurts
			add_planet_devastation = 30
			#raised to 30% from 25% for balancing
		}
	}

	on_queued = {
		if = {
			limit = { owner = { is_ai = yes } }
			owner = { set_timed_country_flag = { flag = lithoid_supremacy_ai_geode days = 1081 } }
		}
	}

	on_unqueued = {
		if = {
			limit = { owner = { has_country_flag = lithoid_supremacy_ai_geode } }
			owner = { remove_country_flag = lithoid_supremacy_ai_geode }
		}
	}

	#AI Weight
	ai_weight = {
		weight = 80
		
		#If AI doesn't have enough dark matter or is already terraforming a geode, no more
		modifier = {
			factor = 0
			exists = owner
			owner = {
				OR = {
					has_monthly_income = {
						resource = sr_dark_matter
						value < 5
					}
					has_country_flag = lithoid_supremacy_ai_geode
				}
			}
		}

		#Double if capital planet
		modifier = {
			factor = 2
			is_capital = yes
		}
	}
}

#Arcology Project Overwrite (prevents using on Geode worlds)
decision_arcology_project = {
	owned_planets_only = yes
	icon = decision_arcology_project

	enactment_time = 3600
	resources = {
		category = decisions
		cost = {
			influence = 200
			minerals = 20000
		}
	}

	potential = {
		NOR = {
			is_planet_class = pc_city
			is_planet_class = pc_relic
			has_modifier = resort_colony
			has_modifier = penal_colony
			has_modifier = slave_colony
			has_modifier = pm_wenkwort_custodian
			
			#To use this in other mods, add this line
			is_planet_class = pc_geode
		}
		is_artificial = no
		exists = owner
		owner = { has_ascension_perk = ap_arcology_project }
	}

	allow = {
		num_uncleared_blockers < 1
	}

	effect = {
		# Make city-planet
		custom_tooltip = decision_arcology_project_effects
		hidden_effect = {
			clear_deposits = yes
			set_industrial_focus_flags = yes
			change_pc = pc_city
			relic_world_conversion_effect = {
				DISTRICT = district_arcology_housing
				VARIABLE = num_housing_districts
			}
			relic_world_conversion_effect = {
				DISTRICT = district_arcology_arms_industry
				VARIABLE = num_industrial_districts
			}
			set_ecu_industrial_districts_effect = yes
			set_planet_entity = {
				entity = "city_planet_entity"
				graphical_culture = owner
			}
			owner = {
				country_event = { id = distar.201 } # port for living planet distar.197, triggers in event
			}
			planet_event = { id = mega.200 }
			if = {
				limit = {
					OR = {
						is_active_resolution = "resolution_ecology_environmental_control_board"
						is_active_resolution = "resolution_ecology_paradise_initiative"
					}
				}
				owner = {
					set_timed_country_flag = { flag = resolution_breached_terraformed days = 3600 }
				}
			}
		}
	}

	ai_weight = {
		weight = 1
		modifier = {
			factor = 100
			exists = owner
			OR = {
				num_pops >= 70
				is_capital = yes
			}
		}
	}
}

#Habitat Asteroid Expansion
decision_asteroid_expansion = {
	owned_planets_only = yes
	icon = decision_satellite_in_orbit

	prerequisites = {
		"tech_asteroid_relocation_facility"
	}

	enactment_time = 720
	resources = {
		category = decisions
		cost = {
			energy = 2000
			alloys = 200
		}
	}

	potential = {
		is_planet_class = pc_habitat
		starbase = { has_starbase_building = asteroid_relocation_facility }
		NOT = { has_modifier = asteroid_habitat_expansion_1 }
	}

	effect = {
		hidden_effect = {
			add_modifier = {
				modifier = asteroid_habitat_expansion_1
			}
		}
	}
}


#Pyroviles Exaltation
decision_pyrovile_exaltation = {
	owned_planets_only = no
	icon = decision_molten_planet

	prerequisites = {
		"tech_pyrovile_exaltation"
	}

	enactment_time = 240
	resources = {
		category = decisions
		cost = {
			energy = 1000	#Doubled to 1000 for balance
		}
	}

	potential = {
		is_planet_class = pc_molten
		NOT = { has_planet_flag = lithoid_supremacy_exalted_world }
	}

	effect = {
		random_list = {
			20 = { add_deposit = d_unity_1 }
			20 = { add_deposit = d_unity_3 }
			15 = { add_deposit = d_unity_5 }
			10 = { add_deposit = d_alloys_1 }
			5 = { add_deposit = d_alloys_2 }
			20 = { add_deposit = d_minerals_3 }
			10 = { add_deposit = d_minerals_4 }
		}
		set_planet_flag = lithoid_supremacy_exalted_world
	}
}

#Pyroviles Volcanic Excitation
decision_pyrovile_excitation = {
	owned_planets_only = yes
	icon = decision_molten_planet

	prerequisites = {
		"tech_pyrovile_exaltation"
	}

	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			energy = 1000
			volatile_motes = 100
		}
	}

	potential = {
		NOR = {
			has_deposit = d_active_volcano
			is_planet_class = pc_city
			is_planet_class = pc_habitat
			is_planet_class = pc_ringworld_habitable
		}
		is_artificial = no
	}

	effect = {
		add_deposit = d_active_volcano
	}
}

#Create Orbital Defence Platform
decision_create_orbital_defence_platform = {
	owned_planets_only = no
	icon = decision_satellite_in_orbit

	prerequisites = {
		#Basic Tech requirements (Star Fort and Mountain Stronghold)
		"tech_mountain_stronghold"
	}

	#Same time cost as platforms
	enactment_time = 60
	resources = {
		category = ships
		cost = {
			trigger = {
				owner = {
					NOT = { has_ascension_perk = ap_eternal_vigilance }
				}
			}
			alloys = 550
			#Base cost roughly equal to a defense platform
		}
		cost = {
			trigger = {
				owner = {
					has_ascension_perk = ap_eternal_vigilance
				}
			}
			alloys = 450
			#Cheaper if you want to focus on protection
		}
	}
	
	potential = {
		#Planet requires correct building
		planet = {
			OR = {
				has_building = building_mountain_stronghold
				has_building = building_mountain_fortress
				has_building = building_mountain_bastion
				has_building = building_asteroid_stronghold
				has_building = building_asteroid_fortress
				has_building = building_asteroid_bastion
			}
		}
		#Fleet must not be full already
		NOT = {
			solar_system = {
				any_fleet_in_system = {
					has_fleet_flag = ls_orbital_defences@root
					#num_ships = 15
					num_ships = prevprev.value:lithoid_supremacy_planet_orbital_platforms_maximum
				} 
			}
		}
		owner = { is_ai = no }
	}

	effect = {
		custom_tooltip = decision_create_orbital_defence_platform_effects
		#Prevents text wall appearing in effects
		hidden_effect = {
			if = {
				limit = { 
					solar_system = {
						any_fleet_in_system = {
							has_fleet_flag = ls_orbital_defences@root
							#num_ships < 15
							num_ships < prevprev.value:lithoid_supremacy_planet_orbital_platforms_maximum
						} 
					}
				}
				solar_system = {
					every_fleet_in_system = {
						limit = {
							exists = owner
							has_fleet_flag = ls_orbital_defences@root
						}
						create_ship = {
							name = random
							prefix = yes
							random_existing_design = military_station_small
						}
						every_owned_ship = {
							limit = {
								is_ship_size = military_station_small
							}
							add_modifier = { modifier = "orbital_defence_platform_balance" days = -1 }
						}
						set_location = {
							target = root
							distance = -1
							angle = 0
							direction = in_system
						}
						
					}
				}
			}
			#If does not exist, create fleet
			else = {
				create_fleet = {
					name = { key = "Orbital Defence Platforms" }
					effect = {
						set_owner = prev
						set_fleet_flag = ls_orbital_defences@root
						set_formation_scale = 2
						create_ship = {
							name = random
							prefix = yes
							random_existing_design = military_station_small
						}
						set_location = {
							target = root
							distance = 0
							angle = 0
							direction = in_system
						}
						every_owned_ship = {
							limit = {
								is_ship_size = military_station_small
							}
							add_modifier = { modifier = "orbital_defence_platform_balance" days = -1 }
						}	
					}
					settings = {
						# can_upgrade = no
						# can_disband = no
						can_change_composition = no
						# can_change_leader = no
						# uses_naval_capacity = no
						# spawn_debris = yes
					}
				}
			}
		}
	}
}

#Create Orbital Ion Cannon
decision_create_orbital_ion_cannon = {
	owned_planets_only = no
	icon = decision_satellite_in_orbit

	prerequisites = {
		#Basic Tech requirements
		"tech_titans"
	}

	#Six times cost as platforms
	enactment_time = 360
	resources = {
		category = ships
		cost = {
			trigger = {
				owner = {
					NOT = { has_ascension_perk = ap_eternal_vigilance }
				}
			}
			alloys = 1250
			#Base cost roughly equal to an ion cannon
		}
		cost = {
			trigger = {
				owner = {
					has_ascension_perk = ap_eternal_vigilance
				}
			}
			alloys = 1000
			#Cheaper if you want to focus on protection
		}
	}
	
	potential = {
		#Planet requires correct building
		planet = {
			OR = {
				has_building = building_mountain_bastion
				has_building = building_asteroid_bastion
			}
		}
		#Fleet must not be full already
		NOT = {
			solar_system = {
				any_fleet_in_system = {
					has_fleet_flag = ls_orbital_defences@root
					OR = {
						num_ships = prevprev.value:lithoid_supremacy_planet_orbital_platforms_maximum
						count_controlled_ship = {
							limit = { is_ship_size = ion_cannon }
							count = prevprev.value:lithoid_supremacy_planet_orbital_cannons_maximum
						}
					}
				} 
			}
		}
		owner = { is_ai = no }
	}

	effect = {
		custom_tooltip = decision_create_orbital_defence_platform_effects
		#Prevents text wall appearing in effects
		hidden_effect = {
			if = {
				limit = { 
					solar_system = {
						any_fleet_in_system = {
							has_fleet_flag = ls_orbital_defences@root
							#num_ships < 15
							num_ships < prevprev.value:lithoid_supremacy_planet_orbital_platforms_maximum
							count_controlled_ship = {
								limit = { is_ship_size = ion_cannon }
								count < prevprev.value:lithoid_supremacy_planet_orbital_cannons_maximum
							}
						} 
					}
				}
				solar_system = {
					every_fleet_in_system = {
						limit = {
							exists = owner
							has_fleet_flag = ls_orbital_defences@root
						}
						create_ship = {
							name = random
							prefix = yes
							random_existing_design = ion_cannon
						}
						every_owned_ship = {
							limit = {
								is_ship_size = ion_cannon
							}
							add_modifier = { modifier = "orbital_defence_platform_balance" days = -1 }
						}
						set_location = {
							target = root
							distance = -1
							angle = 0
							direction = in_system
						}
						
					}
				}
			}
			#If does not exist, create fleet
			else = {
				create_fleet = {
					name = { key = "Orbital Defence Platforms" }
					effect = {
						set_owner = prev
						set_fleet_flag = ls_orbital_defences@root
						set_formation_scale = 2
						create_ship = {
							name = random
							prefix = yes
							random_existing_design = military_station_small
						}
						set_location = {
							target = root
							distance = 0
							angle = 0
							direction = in_system
						}
						every_owned_ship = {
							limit = {
								is_ship_size = military_station_small
							}
							add_modifier = { modifier = "orbital_defence_platform_balance" days = -1 }
						}	
					}
					settings = {
						# can_upgrade = no
						# can_disband = no
						can_change_composition = no
						# can_change_leader = no
						# uses_naval_capacity = no
						# spawn_debris = yes
					}
				}
			}
		}
	}
}

#Terravore extermination
decision_terravore_crystal_extermination = {
	owned_planets_only = yes
	icon = decision_burning_settlement

	prerequisites = {
		"tech_terravore_crystal_extermination"
	}

	enactment_time = 120
	resources = {
		category = decisions
		cost = {
			energy = 1000
		}
	}

	potential = {
		has_modifier = terravore_shard_seeds_1
	}

	effect = {
		remove_modifier = terravore_shard_seeds_1
	}
}