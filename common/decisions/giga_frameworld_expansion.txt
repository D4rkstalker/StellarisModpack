###############################################################################################################
###############################################################################################################
#          EXPANSION
###############################################################################################################
###############################################################################################################

# expand with alloys

giga_frameworld_expand = {
	icon = decision_frameworld_expand
	owned_planets_only = yes
	
	enactment_time = 360
	
	resources = {
		category = megastructures_frameworld
		cost = {
			alloys = @giga_frameworld_expansion_cost_base
			multiplier = giga_frameworld_expansion_cost_multiplier
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_2 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_2
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_3 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_3
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			has_origin = origin_frameworld
		}
		is_planet_class = pc_giga_frameworld
	}

	allow = {
		custom_tooltip_fail = {
			text = giga_frameworld_expand_concurrent
			not = { has_planet_flag = giga_frameworld_expand_queued }
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
		}
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_structure_expansion 
			VAR = giga_frameworld_structure_expansions
		}
		change_planet_size = 1

		# update entity and do all the math
		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}

		remove_planet_flag = giga_frameworld_expand_queued
	}

	on_queued = {
		set_planet_flag = giga_frameworld_expand_queued
	}
	on_unqueued = {
		remove_planet_flag = giga_frameworld_expand_queued
	}
	
	ai_weight = {
		weight = 10
		
		# more if we've got a lot of alloys
		modifier = {
			factor = 5
			exists = owner
			owner = {
				has_resource = {
					type = alloys
					amount > 5000 # prev.giga_frameworld_expansion_cost_buffer
				}
			}
		}
		
		# less if we have lots of free slots
		modifier = {
			factor = 0.1
			free_district_slots > 8
		}
		
		# more if we have no free slots
		modifier = {
			factor = 100
			free_district_slots = 0
		}
		
		# zero if we've NOT got a lot of alloys and we have free slots
		modifier = {
			factor = 0
			NOT = {
				owner = {
					has_resource = {
						type = alloys
						amount < 5000 # prev.giga_frameworld_expansion_cost_buffer
					}
				}
			}
			free_district_slots > 2
		}
	}
}

###############################################################################################################

# 5x bulk expand with alloys

giga_frameworld_expand_bulk_5 = {
	icon = decision_frameworld_expand_5
	owned_planets_only = yes
	
	enactment_time = 1728 # 1800 -> 360 * 4.8 to account for speed ups from expanding
	
	resources = {
		category = megastructures_frameworld
		cost = {
			alloys = @giga_frameworld_expansion_cost_base
			multiplier = giga_frameworld_expansion_bulk_5_cost_multiplier
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_2 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_2
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_3 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_3
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			has_origin = origin_frameworld
			has_technology = giga_tech_ringworld_behemoth
		}
		is_planet_class = pc_giga_frameworld
	}

	allow = {
		custom_tooltip_fail = {
			text = giga_frameworld_expand_concurrent
			not = { has_planet_flag = giga_frameworld_expand_queued }
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
			COUNT = 5
		}
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_structure_expansion 
			VAR = giga_frameworld_structure_expansions
			COUNT = 5
		}
		change_planet_size = 5

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}

		remove_planet_flag = giga_frameworld_expand_queued
	}

	on_queued = {
		set_planet_flag = giga_frameworld_expand_queued
	}
	on_unqueued = {
		remove_planet_flag = giga_frameworld_expand_queued
	}
	
	ai_weight = {
		weight = 10
	}
}

###############################################################################################################

# 10x bulk expand with alloys

giga_frameworld_expand_bulk_10 = {
	icon = decision_frameworld_expand_10
	owned_planets_only = yes
	
	enactment_time = 3312 # 3600 -> 360 * 9.2 to account for speed ups from expanding
	
	resources = {
		category = megastructures_frameworld
		cost = {
			alloys = @giga_frameworld_expansion_cost_base
			multiplier = giga_frameworld_expansion_bulk_10_cost_multiplier
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_2 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_2
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_3 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_3
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			has_origin = origin_frameworld
			has_technology = giga_tech_ringworld_behemoth
		}
		is_planet_class = pc_giga_frameworld
	}

	allow = {
		custom_tooltip_fail = {
			text = giga_frameworld_expand_concurrent
			not = { has_planet_flag = giga_frameworld_expand_queued }
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
			COUNT = 10
		}
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_structure_expansion 
			VAR = giga_frameworld_structure_expansions
			COUNT = 10
		}
		change_planet_size = 10

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}

		remove_planet_flag = giga_frameworld_expand_queued
	}

	on_queued = {
		set_planet_flag = giga_frameworld_expand_queued
	}
	on_unqueued = {
		remove_planet_flag = giga_frameworld_expand_queued
	}
	
	ai_weight = {
		weight = 10
	}
}

###############################################################################################################

# expand with planetary mass

giga_frameworld_expand_mass = {
	icon = decision_frameworld_expand_mass
	owned_planets_only = yes
	
	enactment_time = 360
	
	resources = {
		category = decisions
		cost = {
			sr_solar_energy = 2
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			has_origin = origin_frameworld
			has_technology = giga_tech_planetary_matter_harvesting
		}
		is_planet_class = pc_giga_frameworld
	}
	
	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
		}
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_planet
			VAR = giga_frameworld_planets
		}
		change_planet_size = 1

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# bulk expand x5 with planetary mass

giga_frameworld_expand_mass_bulk_5 = {
	icon = decision_frameworld_expand_mass_5
	owned_planets_only = yes
	
	enactment_time = 1728 # 1800 -> 360 * 4.8 to account for speed ups from expanding
	
	resources = {
		category = decisions
		cost = {
			sr_solar_energy = 10
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			has_origin = origin_frameworld
			has_technology = giga_tech_planetary_matter_harvesting
			has_technology = giga_tech_ringworld_behemoth
		}
		is_planet_class = pc_giga_frameworld
	}
	
	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
			COUNT = 5
		}
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_planet
			VAR = giga_frameworld_planets
			COUNT = 5
		}
		change_planet_size = 5

		hidden_effect = { 
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# bulk expand x10 with planetary mass

giga_frameworld_expand_mass_bulk_10 = {
	icon = decision_frameworld_expand_mass_10
	owned_planets_only = yes
	
	enactment_time = 3312 # 3600 -> 360 * 9.2 to account for speed ups from expanding
	
	resources = {
		category = decisions
		cost = {
			sr_solar_energy = 20
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			has_origin = origin_frameworld
			has_technology = giga_tech_planetary_matter_harvesting
			has_technology = giga_tech_ringworld_behemoth
		}
		is_planet_class = pc_giga_frameworld
	}
	
	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
			COUNT = 10
		}
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_planet
			VAR = giga_frameworld_planets
			COUNT = 10
		}
		change_planet_size = 10

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# expand with influence

giga_frameworld_reorganise = {
	icon = decision_frameworld_reorganise
	owned_planets_only = yes
	
	enactment_time = 360
	
	resources = {
		category = decisions
		cost = {
			influence = 200
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = {
					is_ai = no
				}
			}
			influence = 200
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = {
					has_technology = giga_tech_ringworld_titanic_2
				}
			}
			influence = -50
		}
	}
	
	potential = {
		exists = owner
		owner = {
			has_origin = origin_frameworld
		}
		is_planet_class = pc_giga_frameworld
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
		}
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_reorganise_expansion
			VAR = giga_frameworld_reorganise_expansions
		}
		change_planet_size = 1

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}
	
	ai_weight = {
		weight = 10

		# don't if we don't have a good chunk of influence
		modifier = {
			factor = 0
			exists = owner
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value < 500
				}
			}
		}
		
		# less if we have lots of free slots
		modifier = {
			factor = 0.1
			free_district_slots > 8
		}
		
		# more if we have no free slots
		modifier = {
			factor = 10
			free_district_slots = 0
		}
		
		# more if we are influence capped
		modifier = {
			factor = 1000
			exists = owner
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value >= 1000
				}
			}
		}
	}
}

