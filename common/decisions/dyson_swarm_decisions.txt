###########################
#upgrading the dyson swarm#
###########################

#scanning the system for "resources" and add them as deposits.
decision_dyson_swarm_initializer = {
	owned_planets_only = yes

	resources = {
		category = decisions
	}
	
	potential = {
		NOT = {
			has_planet_flag = dyson_init_decison_yes
		}
		is_planet_class = pc_dyson_swarm
	}
	
	allow = {
		NOT = {
			from = { has_country_flag = dyson_swarm_init }
		}
	}

	effect = {
		hidden_effect = {
			set_planet_flag = dyson_init_decison_yes
			from = {
				country_event = { id = dyson_swarm_other.2 }
			}
			planet_event = { id = dyson_swarm_other.3 days = 60 }
		}
	}
	
	ai_weight = {
		weight = 900000
	}
}

#module overview
decision_dyson_swarm_modules = {
	owned_planets_only = yes

	potential = {
		is_planet_class = pc_dyson_swarm
		owner = { 
			OR = {
				has_technology = tech_dyson_modular_districts
				has_ascension_perk = ap_home_in_the_sky
			}
		}
	}

	effect = {
		planet_event = { id = dyson_modular.01 }
	}
	
	ai_weight = {
		weight = 0
	}
}

#Buff for the AI: will start with citadel upgrade already built. This decision is only available to them, doesn't cost anything and they will always use it.
decision_upgrade_ai_buff_unplayable = {
	owned_planets_only = no

	enactment_time = 0
	resources = {
		category = decisions
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = {
			has_planet_flag = upgraded_tech_starbase_5
		}
		exists = space_owner
		space_owner = { 
			is_same_value = from 
			is_ai = yes
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
	}
	
	effect = {
		hidden_effect = { set_planet_flag = upgraded_tech_starbase_5 }
		change_planet_size = +2
	}
	
	ai_weight = {
		weight = 900000
	}
}

#Scrapping the dyson swarm and removing it from the system and getting some minerals/alloys back.
decision_uninhabitet_dyson_swarm_destroy = {
	resources = {
		category = decisions
		cost = {
			energy = 500
			influence = 15
			alloys = -500
		}
	}
	
	potential = {
		AND = {
			exists = space_owner
			space_owner = { is_same_value = from }
			is_planet_class = pc_dyson_swarm
			num_pops = 0
		}
	}
	
	effect = {
		planet_event = { id = dyson_swarm_other.19 }
	}
	
	ai_weight = {
		weight = 0
	}
}

# through tech: tech_starbase_3
decision_upgrade_tech_starbase_3 = {
	owned_planets_only = yes
	
	prerequisites = {
		"tech_starbase_3"		
	}

	enactment_time = 365
	resources = {
		category = decisions
		cost = {
			minerals = 2000
			alloys = 400
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = {
			has_planet_flag = upgraded_tech_starbase_3
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
	}
	
	effect = {
		hidden_effect = { set_planet_flag = upgraded_tech_starbase_3 }
		change_planet_size = +2
	}
	
	ai_weight = {
		weight = 1
		modifier = {
			weight = 2000
			free_district_slots < 1
		}
	}
}

# through tech: tech_starbase_4
decision_upgrade_tech_starbase_4 = {
	owned_planets_only = yes
	
	prerequisites = {
		"tech_starbase_4"		
	}

	enactment_time = 365
	resources = {
		category = decisions
		cost = {
			minerals = 4000
			alloys = 600
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = {
			has_planet_flag = upgraded_tech_starbase_4
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
	}
	
	effect = {
		hidden_effect = { set_planet_flag = upgraded_tech_starbase_4 }
		change_planet_size = +2
	}
	
	ai_weight = {
		weight = 1
		modifier = {
			weight = 2000
			free_district_slots < 1
		}
	}
}

decision_upgrade_tech_starbase_5 = {
	owned_planets_only = yes
	
	prerequisites = {
		"tech_starbase_5"		
	}

	enactment_time = 730
	resources = {
		category = decisions
		cost = {
			minerals = 8000
			alloys = 900
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = {
			has_planet_flag = upgraded_tech_starbase_5
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
	}
	
	effect = {
		hidden_effect = { set_planet_flag = upgraded_tech_starbase_5 }
		change_planet_size = +2
	}
	
	ai_weight = {
		weight = 1
		modifier = {
			weight = 2000
			free_district_slots < 1
		}
	}
}

decision_upgrade_tech_modular_engineering = {
	owned_planets_only = yes
	
	prerequisites = {
		"tech_modular_engineering"		
	}

	enactment_time = 730
	resources = {
		category = decisions
		cost = {
			minerals = 4000
			alloys = 400
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = {
			has_planet_flag = upgraded_tech_modular_engineering
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
	}
	
	effect = {
		hidden_effect = { set_planet_flag = upgraded_tech_modular_engineering }
		change_planet_size = +2
	}
	
	ai_weight = {
		weight = 1
		modifier = {
			weight = 2000
			free_district_slots < 1
		}
	}
}

#ascension perk upgrades
decision_upgrade_ap_grasp_the_void = {
	owned_planets_only = yes

	enactment_time = 730
	resources = {
		category = decisions
		cost = {
			minerals = 6000
			alloys = 1400
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = {
			has_planet_flag = upgraded_ap_grasp_the_void
		}
		from = {
			has_ascension_perk = ap_grasp_the_void
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
	}
	
	effect = {
		hidden_effect = { set_planet_flag = upgraded_ap_grasp_the_void }
		change_planet_size = +5
	}
	
	ai_weight = {
		weight = 1
		modifier = {
			weight = 2000
			free_district_slots < 1
		}
	}
}

decision_upgrade_ap_voidborn = {
	owned_planets_only = yes
	
	enactment_time = 730
	resources = {
		category = decisions
		cost = {
			minerals = 6000
			alloys = 1400
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = {
			has_planet_flag = upgraded_ap_voidborn
		}
		from = {
			has_ascension_perk = ap_voidborn
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
	}
	
	effect = {
		hidden_effect = { set_planet_flag = upgraded_ap_voidborn }
		change_planet_size = +5
	}
	
	ai_weight = {
		weight = 1
		modifier = {
			weight = 2000
			free_district_slots < 1
		}
	}
}

decision_upgrade_ap_master_builders = {
	owned_planets_only = yes
	
	enactment_time = 730
	resources = {
		category = decisions
		cost = {
			minerals = 4000
			alloys = 400
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = {
			has_planet_flag = upgraded_ap_master_builders
		}
		from = {
			has_ascension_perk = ap_master_builders
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
	}
	
	effect = {
		hidden_effect = { set_planet_flag = upgraded_ap_master_builders }
		change_planet_size = +2
	}
	
	ai_weight = {
		weight = 1
		modifier = {
			weight = 2000
			free_district_slots < 1
		}
	}
}

decision_upgrade_ap_home_in_the_sky = {
	owned_planets_only = yes
	
	enactment_time = 730
	resources = {
		category = decisions
		cost = {
			minerals = 8000
			alloys = 1000
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		FROM = {
			has_ascension_perk = ap_home_in_the_sky
		}
	}
	
	allow = {
		is_planet_class = pc_dyson_swarm
		custom_tooltip = {
			fail_text = "not_more_than_five_you_madman"
			NOT = {
				check_variable = { which = number_of_dyson_swarm_upgrades value = 6 }
			}
		}
	}
	
	effect = {
		hidden_effect = { 
			if = {
				limit = {
					NOT = {	
						has_planet_flag = started_home_in_the_sky_upgrading	
					}
				}
				set_planet_flag = started_home_in_the_sky_upgrading
				set_variable = { which = number_of_dyson_swarm_upgrades value = 1 }
			}
			if = {
				limit = {
					has_planet_flag = started_home_in_the_sky_upgrading	
				}
				change_variable = { which = number_of_dyson_swarm_upgrades value = 1 }
			}
		}
		change_planet_size = +2
	}
	
	ai_weight = {
		weight = 1
		modifier = {
			weight = 2000
			free_district_slots < 1
		}
	}
}

#install gravity generators, making all pops on it immune to the effects of low-grav
decision_install_gravity_generators_on_dyson_swarm = {
	owned_planets_only = yes
	
	enactment_time = 1200
	resources = {
		category = decisions
		cost = {
			minerals = 2000
			alloys = 200
		}
	}
	
	potential = {
		is_planet_class = pc_dyson_swarm
		NOT = { has_modifier = dyson_swarm_gravity_generators }
		FROM = { has_technology = tech_dyson_gravity_generators }
	}

	effect = {
		add_modifier = {
			modifier = dyson_swarm_gravity_generators
			days = -1
		}
	}
	
	ai_weight = {
		weight = 20
	}
}

#starscooping project
decision_starscooping_project = {
	enactment_time = 1200
	
	resources = {
		category = decisions
		cost = {
			minerals = 8000
			alloys = 800
		}
	}
	
	potential = {
		AND = {
			is_planet_class = pc_dyson_swarm
			FROM = {
				has_technology = tech_dyson_starscooping_project
			}
			NOR = {
				has_modifier = dyson_starscooping
				has_planet_flag = no_dyson_mining_bays
			}
		}
	}
	
	effect = {
		add_modifier = {
			modifier = dyson_starscooping
			days = -1
		}
		solar_system = {
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = dyson_swarm_mining_station
				}
				destroy_ambient_object = this
			}
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

#turn a habitable planet into terraforming experimental grounds
#decision_terraforming_experiment = {
#	resources = {
#		category = decisions
#		cost = {
#			influence = 100
#		}
#	}
#	
#	potential = {
#		exists = space_owner
#		space_owner = { is_same_value = from }
#		space_owner = { is_ai = no }
#		from = {
#			has_technology = tech_ecological_adaptation
#		}
#		num_pops = 0
#		is_star = no
#		habitable_structure = no
#		is_ringworld = no
#		colonizeable_planet = yes
#		NOR = {
#			has_modifier = consecrated_quality_1
#			has_modifier = consecrated_quality_2
#			has_modifier = consecrated_quality_3
#			has_modifier = consecrated_quality_4
#			has_planet_flag = has_dyson_miner
#		}
#	}
#
#	allow = {
#		custom_tooltip = {
#			from = {
#				NOT = {
#					has_country_flag = assigned_terraforming_planet
#				}
#			}
#			fail_text = only_one_terraforming_experiment
#		}
#		solar_system = {
#			any_system_planet = {
#				is_planet_class = pc_dyson_swarm
#			}
#		}
#	}
#
#	effect = {
#		add_modifier = {
#			modifier = "dyson_swarm_terrafroming_experiment_object"
#			days = -1
#		}
#		from = {
#			set_country_flag = assigned_terraforming_planet
#		}
#	}
#	ai_weight = {
#		weight = 0
#	}
#}

#decision to mine a planet (asteroids have a better, cheaper decision). slowly detracts planetsize from a planet and adds it to the dyson swarm until it becomes size two or lower.
decision_dyson_consume_planet = {
	resources = {
		category = decisions
		cost = {
			influence = 100
			alloys = 800
			minerals = 10000
		}
	}
	
	potential = {
		exists = space_owner
		space_owner = { is_same_value = from }
		from = {
			OR = {
				has_ascension_perk = ap_home_in_the_sky
				has_country_flag = dyson_reinfroced_building_directive
			}
		}
		is_star = no
		solar_system = {
			any_system_planet = {
				is_planet_class = pc_dyson_swarm
			}
		}
		NOR = {
			has_modifier = dyson_swarm_terrafroming_experiment_object
			has_modifier = dyson_mining_target
			has_planet_flag = has_dyson_miner
			dyson_is_asteroid = yes
			dyson_is_ice_asteroid = yes
			dyson_is_gas_giant = yes
			habitable_structure = yes
			is_planet_class = pc_habitable_gas_giant
			solar_system = {
				has_star_flag = ring_world_built
			}
		}
	}

	allow = {
		custom_tooltip = {
			fail_text = "requires_no_anomaly"
			NOT = { has_anomaly = yes }
		}
		custom_tooltip = {
			fail_text = "there_are_people_there_you_evil_person"
			NOR = {
				has_modifier = dyson_outcast_planet
				num_pops > 0
			}
		}
		custom_tooltip = {
			fail_text = "dyson_requres_no_megastructure"
			NOR = {
				has_planet_flag = megastructure
				has_planet_flag = habitat
				has_planet_flag = has_megastructure
			}
		}
	}

	effect = {
		every_deposit = {
			remove_deposit = yes
		}
		add_modifier = {
			modifier = "dyson_mining_target"
			days = -1
		}
		hidden_effect = {
	#to prevent building megastructures/habitats on mined planets
			set_planet_flag = has_megastructure
			FROM = {
				country_event = { id = dyson_swarm_other.24 }
			}
			planet_event = { id = dyson_swarm_other.23 }
		}
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 2500
			planet = { 
				space_owner = {
				#so the AI wont waste resources on upgrading if its income is bad.
					AND = {
						has_monthly_income = {
							resource = alloys
							value > 30
						}
						has_resource = { 
							type = alloys 
							amount > 1000
						}
					}
				}
			}
		}
	}
}

#decision to mine an asteroid
decision_dyson_consume_asteroid = {
	resources = {
		category = decisions
		cost = {
			influence = 20
			alloys = 200
			minerals = 1000
		}
	}
	
	potential = {
		exists = space_owner
		space_owner = { is_same_value = from }
		FROM = {
			OR = {
				has_ascension_perk = ap_home_in_the_sky
				has_country_flag = dyson_reinfroced_building_directive
			}
		}
		dyson_is_asteroid = yes
		solar_system = {
			any_system_planet = {
				is_planet_class = pc_dyson_swarm
			}
		}
		NOT = {
			has_planet_flag = has_dyson_miner
		}
	}

	allow = {
		custom_tooltip = {
			fail_text = "requires_no_anomaly"
			NOT = { has_anomaly = yes }
		}
		custom_tooltip = {
			fail_text = "there_are_people_there_you_evil_person"
			NOT = { num_pops > 0 }
		}
		custom_tooltip = {
			fail_text = "dyson_requres_no_megastructure"
			NOR = {
				has_planet_flag = megastructure
				has_planet_flag = habitat
				has_planet_flag = has_megastructure
			}
		}
	}

	effect = {
		hidden_effect = {
			FROM = {
				country_event = { id = dyson_swarm_other.38 }
			}
			planet_event = { id = dyson_swarm_other.37 }
			planet_event = { id = dyson_swarm_other.25 days = 360 }
		}
		every_deposit = {
			remove_deposit = yes
		}
	#to prevent building megastructures/habitats on mined planets
		set_planet_flag = has_megastructure
		add_modifier = {
			modifier = "dyson_mining_target"
			days = -1
		}
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 2500
			planet = { 
				space_owner = {
				#so the AI wont waste resources on upgrading if its income is bad.
					has_monthly_income = {
						resource = alloys
						value > 10
					}
				}
			}
		}
	}
}

#remove what is left of the planet
decision_mined_planet_destroy = {
	resources = {
		category = decisions
		cost = {
			minerals = 100
		}
	}
	
	potential = {
		AND = {
			exists = space_owner
			space_owner = { is_same_value = from }
			has_planet_flag = dyson_mined_out
		}
	}
	
	effect = {
		remove_planet = yes
	}
	
	ai_weight = {
		weight = 0
	}
}

#hostage Planet interaction menu
_decision_hostage_planet = {
	potential = {
		has_planet_flag = dyson_corperate_hq@owner
	}
	
	effect = {
		owner = {
			country_event = { id = dyson_starting.103 }
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

#sell shiny stuff to the natives
decision_sell_shiny_stuff = {
	potential = {
		has_planet_flag = dyson_corperate_hq@owner
		NOT = { has_planet_flag = no_more_shiny_stuff }
	}
	allow = {
		custom_tooltip = {
			fail_text = "sold_shiny_stuff_already_tooltip"
			NOT = { has_planet_flag = sold_shiny_stuff }
		}
	}
	
	resources = {
		category = decisions
		cost = {
			alloys = 20
			energy = -100
		}
	}
	
	effect = {
		set_timed_planet_flag = {
			flag = sold_shiny_stuff
			days = 180
		}
	}
	
	ai_weight = {
		weight = 0
	}
}
