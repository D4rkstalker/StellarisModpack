# Government Variety Pack
# Decisions
# Author: littleraskol

#Launch "Run Recursive Audit"
decision_lrsk_gov_var_rra = {
    owned_planets_only = yes
    icon = decision_glitchy_matrix
    
    resources = {
        category = decisions
        cost = {
            energy = 1000
            unity = 500
        }        
    }

    potential = {
        NOT = { has_modifier = lrsk_gov_var_statmod_planet_audit }
        owner = { has_valid_civic = lrsk_gov_var_civic_machine_distributed_planning_systems }
    }

	allow = {
		custom_tooltip = {
			fail_text = lrsk_gvp_rra_fail_cooldown_planet
			NOT = { has_planet_flag = lrsk_gov_var_rra_planet_cooldown }
		}
		custom_tooltip = {
			fail_text = lrsk_gvp_rra_fail_cooldown_empire
			NOT = { owner = { has_country_flag = lrsk_gov_var_rra_empire_cooldown } }
		}
	}

    effect = {
        custom_tooltip = decision_lrsk_gov_var_rra_effects
		hidden_effect = {
			add_modifier = { modifier = "lrsk_gov_var_statmod_planet_audit" days = 360 }
            planet_event = { id = lrsk_gov_var_distributed_planning_systems.1 }
		}
    }

    ai_weight = {
        weight = 1  #dunno
    }
}

##Create Chartered Colony vassal
##Considering the benefits of each such vassal, being able to make a bunch of tiny one planet vassals like this is bad.
#decision_lrsk_gov_var_charter_col = {
#    owned_planets_only = yes
#    icon = decision_victorious_army
#    
#    resources = {
#        category = decisions
#        cost = {
#            influence = 75
#        }        
#    }
#
#    potential = {
#        is_capital = no
#        owner = { has_valid_civic = lrsk_gov_var_civic_mc_chart_corp_board }
#    }
#
#    effect = {
#        custom_tooltip = decision_lrsk_gov_var_charter_col_effects
#		hidden_effect = {
#            planet_event = { id = lrsk_gov_var_chartered.1 }
#		}
#    }
#
#    ai_weight = {
#        weight = 0  # This option isn't strictly necessary as the on_become_subject events should catch it.
#    }
#}

decision_lrsk_gvp_work_allocation_plan = {
	owned_planets_only = yes
	icon = decision_expel_population

	resources = {
		category = decisions
		cost = {
            unity = 100
		}
	}

	potential = {
		owner = {
			has_valid_civic = lrsk_gov_var_civic_utilitarian_planning
		}
	}

	allow = {
		NOT = { has_modifier = lrsk_gvp_statmod_work_plan }
		count_owned_pop = {
			limit = { is_unemployed = yes  }
			count > 0
		}
	}

	effect = {
		custom_tooltip = decision_lrsk_gvp_work_allocation_plan_effects
		hidden_effect = {
			add_modifier = {
				modifier = lrsk_gvp_statmod_work_plan
				days = -1
			}
			# Check every 30 days if still needed.
			planet_event = {
				id = lrsk_government_variety_pack_backend.1000
				days = 30
			}
		}
	}

	ai_weight = {
		weight = 0
		modifier = {
			weight = 1
			count_owned_pop = {
				limit = { is_unemployed = yes  }
				count > 0
			}
		}
		modifier = {
			weight = 5
			count_owned_pop = {
				limit = { is_unemployed = yes  }
				count > 1
			}
		}
		modifier = {
			weight = 10
			count_owned_pop = {
				limit = { is_unemployed = yes  }
				count > 3
			}
		}
	}
}

decision_lrsk_gvp_end_work_allocation_plan = {
	owned_planets_only = yes

	resources = {
		category = decisions
	}

	potential = {
		has_modifier = lrsk_gvp_statmod_work_plan
	}

	allow  = {
		has_modifier = lrsk_gvp_statmod_work_plan
	}

	effect = {
		custom_tooltip = decision_lrsk_gvp_end_work_allocation_plan_effects
		hidden_effect = {
			remove_modifier = lrsk_gvp_statmod_work_plan
		}
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 50
			count_owned_pop = {
				limit = { is_unemployed = yes  }
				count < 1
			}
		}
	}
}

#Undo Opts
#Deprecated until I am sure I want to do this...
#decision_lrsk_gov_var_undo_rra = {
#    owned_planets_only = yes
#    
#    resources = {
#        category = decisions
#        cost = {
#            energy = 500
#            influence = 200
#        }        
#    }
#
#    potential = {
#        owner = { has_valid_civic = lrsk_gov_var_civic_machine_distributed_planning_systems }
#        OR = { 
#            has_modifier = lrsk_gov_var_statmod_planet_audit_continues
#            has_modifier = lrsk_gov_var_statmod_planet_audit_confused
#        }
#    }
#
#    effect = {
#        custom_tooltip = decision_lrsk_gov_var_undo_rra_effects
#        IF = {
#            limit = { has_modifier = "lrsk_gov_var_statmod_planet_audit_continues" }
#            remove_modifier = "lrsk_gov_var_statmod_planet_audit_continues"
#        }
#        ELSE_IF = {
#            limit = { has_modifier = "lrsk_gov_var_statmod_planet_audit_confused" }
#            remove_modifier = "lrsk_gov_var_statmod_planet_audit_confused"
#        }
#    }
#
#    ai_weight = {
#        weight = 0  #dunno
#        modifier = {
#            add = 1
#            has_modifier = "lrsk_gov_var_statmod_planet_audit_continues"
#        }
#        modifier = {
#            add = 1
#            has_modifier = "lrsk_gov_var_statmod_planet_audit_confused"
#        }
#    }
#}

#Launch "Otherworld Jaunt"
#Actually.... I'm rethinking adding the potential to just skip a bunch of ascension perks to get a near-endgame feature from the start!
#decision_lrsk_gov_var_owj = {
#    owned_planets_only = yes
#    
#    resources = {
#        category = decisions
#        cost = {
#            energy = 50
#            influence = 50
#        }        
#    }
#
#    potential = {
#        has_deposit = d_lrsk_gov_var_shroud_pockets
#    }
#
#    effect = {
#
#    }
#
#    ai_weight = {
#        weight = 1  #dunno
#    }
#}