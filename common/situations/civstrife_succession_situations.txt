
# Election Dispute
situation_civstrife_election = {
	picture = GFX_evt_three_sided_deal
	category = positive

	fail_icon = GFX_situation_outcome_negative
	fail_icon_frame = GFX_situation_outcome_frame_red
	complete_icon = GFX_situation_outcome_positive
	complete_icon_frame = GFX_situation_outcome_frame_green

	on_start = {
		random_list = {
			70 = { set_situation_flag = fraud_occurred }
			30 = { set_situation_flag = fraud_did_not_occur }
		}
		target = {

			export_trigger_value_to_variable = {
				trigger = resource_revenue_compare
				parameters = { resource = energy }
				variable = monthly_energy
			}

			export_trigger_value_to_variable = {
				trigger = resource_revenue_compare
				parameters = { resource = unity }
				variable = monthly_unity
			}
		}
	}

	on_progress_complete = {
		custom_tooltip = situation_civstrife_election_end
		situation_event = { id = civelect.2000 }
	}

	on_fail = { }

	on_abort = {
		target = {
			clear_variable = monthly_energy
			clear_variable = monthly_unity
		}
		owner = { country_event = { id = civelect.9000 } }
	}

	abort_trigger = {
		owner = { NOT = { any_pop_faction = { has_pop_faction_flag = disputed_election_faction } } }
	}

	start_value = 0

	stages = {
		election_stage_1 = {
			icon = GFX_situation_stage_1
			icon_background = GFX_situation_stage_frame_red
			modifier = { planet_stability_add = -1 }
			end = 100
		}
	}

	approach = {
		name = approach_election_do_nothing
		icon = GFX_situation_approach_scales
		icon_background = GFX_situation_approach_bg_green
		default = yes
		allow = { NOT = { current_situation_approach = approach_election_obstruct } }
		on_select = { custom_tooltip = election_nothing_tooltip }
		resources = {
			category = situations
			upkeep = {
				energy = 0.05
				multiplier = target.monthly_energy
			}
			upkeep = {
				unity = 0.05
				multiplier = target.monthly_unity
			}
		}
		ai_weight = {
			base = 5
		}
	}

	approach = {
		name = approach_election_obstruct
		icon = GFX_situation_approach_fist
		icon_background = GFX_situation_approach_bg_yellow
		on_select = { custom_tooltip = election_obstruction_tooltip }
		resources = {
			category = situations
			upkeep = {
				energy = 0.15
				multiplier = target.monthly_energy
			}
			upkeep = {
				unity = 0.15
				multiplier = target.monthly_unity
			}
		}
		modifier = { planet_stability_add = -5 }
		ai_weight = {
			base = 2
		}
	}

	on_monthly = {
		events = {
			civelect.1050			# Random Events
	    }
	    random_events = {
			91 = 0
			3 = unrest.101
			3 = unrest.105
			3 = unrest.110
		}
	}

	monthly_progress = {
		base = 15

		modifier = {
			add = -5
			desc = obstruction_hindering_investigation
			current_situation_approach = approach_election_obstruct
		}
	}
}

# Selection Dispute
situation_civstrife_selection = {
	picture = GFX_evt_three_sided_deal
	category = positive

	fail_icon = GFX_situation_outcome_negative
	fail_icon_frame = GFX_situation_outcome_frame_red
	complete_icon = GFX_situation_outcome_positive
	complete_icon_frame = GFX_situation_outcome_frame_green

	on_start = {
		random_list = {
			70 = { set_situation_flag = fraud_occurred }
			30 = { set_situation_flag = fraud_did_not_occur }
		}
		target = {

			export_trigger_value_to_variable = {
				trigger = resource_revenue_compare
				parameters = { resource = energy }
				variable = monthly_energy
			}

			export_trigger_value_to_variable = {
				trigger = resource_revenue_compare
				parameters = { resource = unity }
				variable = monthly_unity
			}
		}
	}

	on_progress_complete = {
		custom_tooltip = situation_civstrife_election_end
		situation_event = { id = civelect.2000 }
	}

	on_fail = { }

	on_abort = {
		target = {
			clear_variable = monthly_energy
			clear_variable = monthly_unity
		}
		owner = { country_event = { id = civelect.9000 } }
	}

	abort_trigger = {
		owner = { NOT = { any_pop_faction = { has_pop_faction_flag = succession_crisis_rebel_sector } } }
	}

	start_value = 0

	stages = {
		election_stage_1 = {
			icon = GFX_situation_stage_1
			icon_background = GFX_situation_stage_frame_red
			modifier = { planet_stability_add = -1 }
			end = 100
		}
	}

	approach = {
		name = approach_election_do_nothing
		icon = GFX_situation_approach_scales
		icon_background = GFX_situation_approach_bg_green
		default = yes
		allow = { NOT = { current_situation_approach = approach_election_obstruct } }
		on_select = { custom_tooltip = election_nothing_tooltip }
		resources = {
			category = situations
			upkeep = {
				energy = 0.05
				multiplier = target.monthly_energy
			}
			upkeep = {
				unity = 0.05
				multiplier = target.monthly_unity
			}
		}
		ai_weight = {
			base = 5
		}
	}

	approach = {
		name = approach_election_obstruct
		icon = GFX_situation_approach_fist
		icon_background = GFX_situation_approach_bg_yellow
		on_select = { custom_tooltip = election_obstruction_tooltip }
		resources = {
			category = situations
			upkeep = {
				energy = 0.15
				multiplier = target.monthly_energy
			}
			upkeep = {
				unity = 0.15
				multiplier = target.monthly_unity
			}
		}
		modifier = { planet_stability_add = -5 }
		ai_weight = {
			base = 2
		}
	}

	on_monthly = {
		events = {
			civelect.1050			# Random Events
	    }
	    random_events = {
			91 = 0
			3 = unrest.101
			3 = unrest.105
			3 = unrest.110
		}
	}

	monthly_progress = {
		base = 15

		modifier = {
			add = -5
			desc = obstruction_hindering_investigation
			current_situation_approach = approach_election_obstruct
		}
	}
}

# Succession Crisis
situation_civstrife_succession = {
	picture = GFX_evt_enclave_overlord
	category = positive

	fail_icon = GFX_situation_outcome_negative
	fail_icon_frame = GFX_situation_outcome_frame_red
	complete_icon = GFX_situation_outcome_positive
	complete_icon_frame = GFX_situation_outcome_frame_green

	on_start = {
		target = {

			export_trigger_value_to_variable = {
				trigger = resource_revenue_compare
				parameters = { resource = energy }
				variable = monthly_energy
			}

			export_trigger_value_to_variable = {
				trigger = resource_revenue_compare
				parameters = { resource = unity }
				variable = monthly_unity
			}

			export_trigger_value_to_variable = {
				trigger = resource_revenue_compare
				parameters = { resource = consumer_goods }
				variable = monthly_consumer_goods
			}
		}
	}

	on_progress_complete = {
		custom_tooltip = situation_civstrife_succession_end
		hidden_effect = {
			target = {
				clear_variable = monthly_energy
				clear_variable = monthly_unity
				clear_variable = monthly_consumer_goods
				every_owned_leader = {
					limit = { has_leader_flag = cannot_be_fired }
					remove_leader_flag = cannot_be_fired
				}
			}
		}
	}

	on_fail = { }

	on_abort = {
		target = {
			clear_variable = monthly_energy
			clear_variable = monthly_unity
			clear_variable = monthly_consumer_goods
			every_owned_leader = {
				limit = { has_leader_flag = cannot_be_fired }
				remove_leader_flag = cannot_be_fired
			}
		}
	}

	abort_trigger = {
		# owner = { NOT = { any_owned_sector = { has_sector_flag = succession_crisis_rebel_sector } } }
	}

	modifier = { planet_stability_add = -10 }

	start_value = 0

	stages = {
		succession_stage_1 = {
			icon = GFX_situation_stage_1
			icon_background = GFX_situation_stage_frame_blue
			end = 50
		}
		succession_stage_2 = {
			icon = GFX_situation_stage_2
			icon_background = GFX_situation_stage_frame_red
			end = 100
		}
	}

	approach = {
		name = approach_succession_propaganda
		icon = GFX_situation_approach_influence
		icon_background = GFX_situation_approach_bg_green
		default = yes
		on_select = { custom_tooltip = succession_propaganda_tooltip }
		resources = {
			category = situations
			upkeep = {
				energy = 0.15
				multiplier = target.monthly_energy
			}
			upkeep = {
				consumer_goods = 0.1
				multiplier = target.monthly_consumer_goods
			}
			upkeep = {
				unity = 0.1
				multiplier = target.monthly_unity
			}
		}
		ai_weight = {
			base = 5
		}
	}

	on_monthly = {
		events = {
			civroyal.1100			# Get Sector Loyalties
	    }
	    random_events = {
			91 = 0
			# 3 = unrest.101
			# 3 = unrest.105
			# 3 = unrest.110
		}
	}

	monthly_progress = {
		base = 15

		modifier = {
			add = -13
			desc = succession_crisis_is_difficult
			current_stage = succession_stage_2
		}
	}
}