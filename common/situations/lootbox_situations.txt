
#All scopes are this/root = situation. You can scope to owner for the country or target for the target.

# test_situation = {
# 	#Note on locs: it expects "test_situation", "test_situation_type", and "test_situation_desc"
# 		#The difference between the first and second keys is that the first is the name while the Situation exists
# 		#It can use [Target.GetName] and so on.
# 		#The _type key is used in cases where the Situation does not exist yet, specifically the start_situation effect's tooltip
# 		#Consequently, stuff like [Target.GetName] will not work there.

#	desc = { text = x triggers = { } } #default is <key>_desc, but you can do triggered overrides

#	picture = GFX_evt_alien_nature 		#Also supports triggered pictures like in events

#	complete_icon = GFX_icon
#	complete_icon_frame = GFX_icon_frame
#	fail_icon = GFX_icon
#	fail_icon_frame = GFX_icon_frame

# 	category = positive #positive/negative/neutral - this affects the tone of various UI elements
#	complete_category = positive #Only for progress_direction = bidirectional - only affects progress towards completetion (right)
#	fail_category = negative #Only for progress_direction = bidirectional - only affects progress towards fail (left)

#	progress_direction = bidirectional #monodirectional/bidirectional (defaults to monodirectional)

# 	on_start = { }				#Effects when the Situation is created
# 	on_progress_complete = {	#Effects when Situation's progress has reached 100
# 		#You should always call destroy_situation = this from here or from an event fired by here
# 	}
# 	on_fail = {					#Effects when Situation's total progress is below 0
# 		#You should always call destroy_situation = this from here or from an event fired by here
#	}
# 	on_abort = {}		#Effects when Situation is cancelled via abort_trigger trigger
# 	abort_trigger = {} 	#Trigger for when a Situation should abort, firing on_abort

#	 start_value = 20	#Situation will start at this number. Default is 0

# 	modifier = { } 			#Modifier applying to the country experiencing the situation
#	 triggered_modifier = {	#Triggered modifier applying to the country experiencing the situation, if the triggers are true
#	 	potential = { }
#	 	modifier = { }
#	 }

# 	target_modifier = { } 			#Modifier applying to the target planet of a Situation. Does not work on other scope types!
# 	triggered_target_modifier = {	#Modifier applying to the target planet of a Situation, if the triggers are true. Does not work on other scope types!
# 		potential = { }
# 		modifier = { }
#	}

# 	#This behaves like an on_action. Note: technically, this is an on_action called test_situation. So don't call your situation "on_monthly_pulse"!
# 	on_monthly = {
# 		events = {
#	    }
# 		random_events = {
#	    }
#	 }

#	stages = { #List all your stages here, in the correct order.
#	 	low_level = {
#			icon = GFX_asset_name
#	 		end = 20
#	    }

#	    medium_level = {
#		    icon = GFX_asset_name
#	 	    end = 40
#	    }

#	    high_level = { 					#Expects the key to be localised. You can also define <key>_desc and it will show on the tooltip, but this is optional.
#		    icon = GFX_asset_name
#			background = GFX_asset_name
#			end = 100
#			on_first_enter = { }		#Effect for the first time this stage fires
#			modifier/triggered_modifier/target_modifier/triggered_target_modifier = { } #as standard (applies only during this Stage)
#			custom_tooltip = x 			#this will print in the stage tooltip (on_first_enter will not, because spoilers; modifiers will)
#	    }
#	}

# 	approach = {
# 		name = approach_a 	#This is localised. If you add a loc key "approach_a_desc", it will also show, but this is optional.
# 		icon = GFX_asset_icon
#		icon_background = GFX_asset_icon_background
# 		allow = { } 		#If this fails, the Approach is greyed out
# 		potential = { } 	#If this fails, the Approach is not shown
#		on_select = { } 	#Effect when you pick the Approach.

#		default = yes 		#Sets the Approach to be the Situation's default. This means that it will be picked when the Situation starts, and if the current
#							#Approach is invalidated (fails potential or allow check). This won't happen while the Situation is locked, so events which demand
#							#a choice of Approach can lock the situation (set_situation_locked) in immediate (or the Situation's on_start) and unlock them in after.

#		modifier/triggered_modifier/target_modifier/triggered_target_modifier = { } #as standard (applies only when this Approach is picked)

# 		resources = { 				#Resource table as standard
# 			category = situations
# 			cost = { }
# 			upkeep = { }
# 			produces = { }
# 		}
# 		ai_weight = { } 			#AI will pick the one with the highest weight
# 	}

# 	approach = {
# 		name = approach_b #all approaches must have at least a name

# 		#They also need to display well in the UI. So the game will force you to at least add a custom tooltip if it cannot find any effects to localise.
#		on_select = { custom_tooltip = deficit_approach_do_nothing_tooltip }
# 	}

# 	monthly_progress = {
# 		base = 1
# 		modifier = { 	#Standard weight fields, you can do everything that common/script_values/00_script_values.txt tells you about
# 			add = 2
# 			desc = federation_acceptance_reduce_fleet 	#Do not forget to add loc tooltips (the game will scream at you otherwise)
# 			<triggers>
# 		}
# 	}
# }


lootbox_situation = {
	picture = GFX_evt_deficit
	complete_icon_frame = GFX_situation_outcome_frame_blue
	complete_icon = GFX_situation_outcome_unknown

	category = neutral

	on_start = {
	}

	on_monthly = {
		events = {
			lootbox_crisis.8 #Phase II
			lootbox_crisis.9 #Phase III
			lootbox_crisis.1010 #Notify you have quarantined it
		}
		random_events = {
			12 = 0
			7 = lootbox_crisis.1015 #become unstable and need extra donate
			7 = lootbox_crisis.1020 #Shifted
			4 = lootbox_crisis.1025 #reverse shift
			4 = lootbox_crisis.1035 #arr, pirate spawn
			1 = lootbox_crisis.1040 #arr, epic pirate battle
			6 = lootbox_crisis.1045 #Let's swap resources
			1 = lootbox_crisis.1055 #Time Bomb
			1 = lootbox_crisis.1070 #Evil Twins
			2 = lootbox_crisis.1075 #Treasure Titan
		}
	}

	on_abort = {
		owner = {
			country_event = {
				id = lootbox_crisis.15
			}
		}
	}

	abort_trigger = {
		target = {
			NOT = {
				is_owned_by = root.owner
			}
		}
	}

	modifier = {
		
	}



	stages = {
		lootbox_stage = {
			icon = GFX_situation_severity_level_lootbox_stage
			icon_background = GFX_situation_stage_frame_blue
			end = 100
		}
	}

	on_progress_complete = {
		custom_tooltip = lootbox_outcome_tooltip
		hidden_effect = {
			set_situation_locked = yes
			situation_event = { 
				id = lootbox_crisis.100
			}
		}
	}
	approach = {
		name = situation_lootbox_default_approach
		icon = GFX_situation_approach_this_is_fine
		icon_background = GFX_situation_approach_bg_yellow
		default = yes
		potential = {
			always = yes
		}
		allow = {

		}
		on_select = {
			custom_tooltip = situation_lootbox_default_approach_tooltip
		}
		resources = {
			category = situations
			produces = {
				society_research = 25
			}
		}
		ai_weight = {
			weight = 1
			modifier = {
				add = 1
				owner = {
					NOR = {
						is_xenophile = yes
						is_xenophobe = yes
					}
				}
				
			}
		}
	}

	approach = {
		name = situation_lootbox_angry_approach
		icon = GFX_situation_approach_fist
		icon_background = GFX_situation_approach_bg_yellow
		potential = {
			always = yes
		}
		allow = {

		}
		on_select = {
			custom_tooltip = situation_lootbox_angry_approach_tooltip
		}
		resources = {
			category = situations
			produces = {
				physics_research = 25
			}
		}
		ai_weight = {
			weight = 1
			modifier = {
				add = 1
				owner = {
					is_xenophobe = yes
				}
				
			}
		}
	}

	approach = {
		name = situation_lootbox_think_approach
		icon = GFX_situation_approach_handshake
		icon_background = GFX_situation_approach_bg_yellow
		potential = {
			always = yes
		}
		allow = {

		}
		on_select = {
			custom_tooltip = situation_lootbox_think_approach_tooltip
		}
		resources = {
			category = situations
			produces = {
				unity = 25
			}
		}
		ai_weight = {
			weight = 1
			modifier = {
				add = 1
				owner = {
					is_xenophile = yes
				}
				
			}
		}
	}
	monthly_progress = {
		base = 1
		modifier = { 	#Standard weight fields, you can do everything that common/script_values/00_script_values.txt tells you about
 			add = 3
 			desc = lootbox_situation_lootbox_no_more_event 	#Do not forget to add loc tooltips (the game will scream at you otherwise)
			owner = {
				has_country_flag = lootbox_crisis_no_further_events
			}
 		}
	}
}

lootbox_bomb_situation = {
	picture = GFX_evt_ship_in_orbit_3
	complete_icon_frame = GFX_situation_outcome_frame_red
	complete_icon = GFX_situation_outcome_negative

	category = negative

	on_start = {
	}

	on_monthly = {
	}

	on_abort = {
	}

	abort_trigger = {
		NOT = {
			exists = target
		}
	}

	modifier = {
	}



	stages = {
		lootbox_bomb_stage = {
			icon = GFX_situation_severity_level_lootbox_stage
			icon_background = GFX_situation_stage_frame_red
			end = 100
		}
	}

	on_progress_complete = {
		custom_tooltip = lootbox_bomb_outcome_tooltip
		hidden_effect = {
			destroy_situation = this
			owner = {
				country_event = {
					id = lootbox_crisis.1060
				}
			}
		}
	}
	approach = {
		name = situation_lootbox_bomb_approach
		icon = GFX_situation_approach_fleet
		icon_background = GFX_situation_approach_bg_yellow
		default = yes
		potential = {
			always = yes
		}
		allow = {

		}
		on_select = {
			custom_tooltip = situation_lootbox_bomb_approach_tooltip
		}
		resources = {
			category = situations
		}
	}


	monthly_progress = {
		base = 4
	}
}