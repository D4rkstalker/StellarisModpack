Tech_GAPS_Steam_Shrouding = {
	icon = "Tech_GAPS_Steam_Shrouding"
	area = society
	category = { new_worlds }
	cost = 0
	cost_per_level = 0
	tier = 0
	levels = 5
	weight = 0
	start_tech = no
	prerequisites = { "Tech_GAPS_Steam_Shrouding" }

	potential = {
		has_origin = Origin_GAPS_Aquaifiers
		not = { has_technology = Tech_GAPS_Steam_Shrouding } #this exists so that fallen empires don't get the tech since they get all non repeatable techs, this creates a false repeatable tech.
	}
	
	ai_weight = {
		factor = 0
	}
}

Tech_GAPS_Pure_Water_Collection_1 = {
	icon = "Tech_GAPS_Pure_Water_Collection"
	area = society
	category = { new_worlds }
	is_rare = yes
	is_dangerous = yes
	cost = 2000
	cost_per_level = 2000
	tier = 1
	levels = 4
	weight = 100
	prerequisites = { "Tech_GAPS_Steam_Shrouding" }


	potential = {
		has_origin = Origin_GAPS_Aquaifiers
		not = { has_technology = Tech_GAPS_Pure_Water_Collection_1 } #this exists so that fallen empires don't get the tech since they get all non repeatable techs, this creates a false repeatable tech.
	}
	modifier = {
		planet_jobs_sr_GAPS_water_produces_mult = 0.15
		planet_buildings_sr_GAPS_water_produces_mult = 0.15
	}
	weight_modifier = {
		factor = 1
	}

	ai_weight = {
		factor = 100
	}
}
Tech_GAPS_Pure_Water_Collection_2 = {
	icon = "Tech_GAPS_Pure_Water_Collection"
	area = society
	category = { new_worlds }
	is_rare = yes
	is_dangerous = yes
	cost = 4000
	cost_per_level = 4000
	tier = 1
	levels = 4
	weight = 85
	prerequisites = { "Tech_GAPS_Pure_Water_Collection_1" }


	potential = {
		has_origin = Origin_GAPS_Aquaifiers
		not = { has_technology = Tech_GAPS_Pure_Water_Collection_2 } #this exists so that fallen empires don't get the tech since they get all non repeatable techs, this creates a false repeatable tech.
	}
	modifier = {
		planet_jobs_sr_GAPS_water_produces_mult = 0.15
		planet_buildings_sr_GAPS_water_produces_mult = 0.15
	}
	weight_modifier = {
		factor = 1
	}

	ai_weight = {
		factor = 100
	}
}
Tech_GAPS_Pure_Water_Collection_3 = {
	icon = "Tech_GAPS_Pure_Water_Collection"
	area = society
	category = { new_worlds }
	is_rare = yes
	is_dangerous = yes
	cost = 8000
	cost_per_level = 8000
	tier = 1
	levels = 4
	weight = 65
	prerequisites = { "Tech_GAPS_Pure_Water_Collection_2" }


	potential = {
		has_origin = Origin_GAPS_Aquaifiers
		not = { has_technology = Tech_GAPS_Pure_Water_Collection_3 } #this exists so that fallen empires don't get the tech since they get all non repeatable techs, this creates a false repeatable tech.
	}
	modifier = {
		planet_jobs_sr_GAPS_water_produces_mult = 0.15
		planet_buildings_sr_GAPS_water_produces_mult = 0.15
	}
	weight_modifier = {
		factor = 1
	}

	ai_weight = {
		factor = 100
	}
}
Tech_GAPS_Pure_Water_Collection_4 = {
	icon = "Tech_GAPS_Pure_Water_Collection"
	area = society
	category = { new_worlds }
	is_rare = yes
	is_dangerous = yes
	cost = 16000
	cost_per_level = 16000
	tier = 1
	levels = 4
	weight = 45
	prerequisites = { "Tech_GAPS_Pure_Water_Collection_3" }

	potential = {
		has_origin = Origin_GAPS_Aquaifiers
		not = { has_technology = Tech_GAPS_Pure_Water_Collection_4 } #this exists so that fallen empires don't get the tech since they get all non repeatable techs, this creates a false repeatable tech.
	}
	modifier = {
		planet_jobs_sr_GAPS_water_produces_mult = 0.15
		planet_buildings_sr_GAPS_water_produces_mult = 0.15
	}
	weight_modifier = {
		factor = 1
	}

	ai_weight = {
		factor = 100
	}
}
Tech_GAPS_Pure_Water_Collection_5 = {
	icon = "Tech_GAPS_Pure_Water_Collection"
	area = society
	category = { new_worlds }
	is_rare = yes
	is_dangerous = yes
	cost = 32000
	cost_per_level = 32000
	tier = 1
	levels = 4
	weight = 30
	prerequisites = { "Tech_GAPS_Pure_Water_Collection_4" }

	potential = {
		has_origin = Origin_GAPS_Aquaifiers
		not = { has_technology = Tech_GAPS_Pure_Water_Collection_5 } #this exists so that fallen empires don't get the tech since they get all non repeatable techs, this creates a false repeatable tech.
	}
	modifier = {
		planet_jobs_sr_GAPS_water_produces_mult = 0.15
		planet_buildings_sr_GAPS_water_produces_mult = 0.15
	}
	weight_modifier = {
		factor = 1
	}

	ai_weight = {
		factor = 100
	}
}