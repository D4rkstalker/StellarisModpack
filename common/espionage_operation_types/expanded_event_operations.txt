# operation_type_name = {			# Key of the site, used for name lookup etc.
#   target = <target type>			# Valid target types are country, megastructure, starbase, fleet, army, pop_faction, spynetwork, federation and none (spy network target is the target then)
#	picture = <sprite key>			# GFX_* sprite key for the operation image
#	desc = <triggered event desc>	# Description generator for the operation, with scope this=spy network
#	stages = <int>					# Should match number of defined stages below.
#	potential = <trigger>			# Trigger checking if a scope with this=spy network is potential to use (this will add/remove this operation without giving the player a reason).
#	allow = <trigger>				# Trigger checking if a scope with this=spy network is allowed to use (this will toggle enable/disabled mode on buttons etc).
#	stage = {						# Stage definition, order dependent.
#		difficulty = <interval int>	# min max interval type. interval is defined either by '<int>' or '{ min = <int> max=<int> }' where the later will randomize a value between min and max.
#		icon = <string>				# icon gfx type.
#		event = <string>			# event to fire when finished the state.
#	}
#	stage = {...}					# Second stage, the total number of 'stage' entries should match value of 'stages'
#	on_roll_failed = <effect>		# Effect to fire when a roll fails, with scope this=spy operation.
#	on_create = <effect>			# Effect to fire upon operation creation, with scope this=spy operation.
#}

@diff_t0 = 4
@diff_t1 = 5
@diff_t2 = 6
@diff_t3 = 7
@diff_t4 = 8
@diff_t5 = 9
@diff_t6 = 10
@diff_t7 = 11
@diff_t8 = 12
@diff_t9 = 13

@operationTargetedByTimer = 10800 #30 years during which the effects of an operation may be felt by select Spy Network events

operation_awaken_worm = {
    target = none
    categories = { op_cat_provocation op_cat_technology }
    picture = GFX_evt_unspeakable_horror
    desc = operation_awaken_worm_desc
    stages = 3

	resources = {
        category = operations
        cost = {
            energy = 2500
        }
        upkeep = {
            energy = 14
        }
    }

    spy_power_cost = 70
    spy_network_lvl_requirement = 70
    potential = { owner = { has_technology = tech_hidden_worm } }
    allow = {
		custom_tooltip = {
            fail_text = operation_awaken_worm_existing_activity
            target = { NOT = { has_country_flag = target_of_operation_awaken_worm } }
        }
        custom_tooltip = {
            fail_text = operation_awaken_worm_no_known_worms
            target = {
				any_owned_planet = {
					is_artificial = no
					NOT = { has_planet_flag = has_no_worms@root.owner }
				}
            }
        }
        custom_tooltip = {
            fail_text = operation_awaken_worm_too_recent
            owner = {
                NOT = { has_country_flag = recently_awoke_worm@root.target }
            }
        }
        custom_tooltip = {
            is_running_espionage_operation = no
            fail_text = operation_one_at_a_time
        }
    }
    stage = {
        difficulty = @diff_t7
        icon = GFX_espionage_chapter_icon_surveillance
        event = expandedspy.1
    }
    stage = {
        difficulty = @diff_t7
        icon = GFX_espionage_chapter_icon_target
        event = expandedspy.2
    }
    stage = {
        difficulty = @diff_t7
        icon = GFX_espionage_chapter_icon_security
        event = expandedspy.5
    }
    on_roll_failed = {
        standard_espionage_operation_on_roll_failed = {
            RANDOM_EVENTS = operation_random_events_generic
        }
    }
    on_create = {
        target = {
            set_timed_country_flag = {
                flag = espionage_operation_targeted_by@root.owner #Used in random Spy Network events
                days = @operationTargetedByTimer
            }
        }
    }
}