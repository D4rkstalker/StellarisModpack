Starbase_Building_GAPS_Drone_Replication_Nexus = {
	icon = "GFX_Starbase_Building_GAPS_Drone_Replication_Nexus"
	construction_days = 180
	
	resources = {
		category = starbase_buildings
		cost = {
			alloys = 50
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 0 }
			}
			rare_crystals = 0.6
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 1 }
			}
			rare_crystals = 0.6
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 2 }
			}
			rare_crystals = 0.6
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 3 }
			}
			rare_crystals = 0.6
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 4 }
			}
			rare_crystals = 0.6
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 5 }
			}
			rare_crystals = 0.6
		}
	}
	potential = {
		exists = owner
		owner = { has_country_flag = CountryFlag_GAPS_Drone_Replicators_First_Choice has_origin = Origin_GAPS_Drone_Replicators }
	}

	possible = {
		count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 0 }
	}
	ai_build_at_chokepoint = yes
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 50
	}
}

Starbase_Building_GAPS_Drone_Constructors_1 = {
	icon = "GFX_Starbase_Building_GAPS_Drone_Constructors"
	construction_days = 180
	
	potential = {
		exists = owner
		owner = { has_country_flag = CountryFlag_GAPS_Drone_Replicators_Third_Choice has_origin = Origin_GAPS_Drone_Replicators }
		NOR = {			
			solar_system = { has_star_flag = manufactory_system }
			solar_system = { has_star_flag = drone_home_system }
			solar_system = { has_star_flag = wenkwort_system }
		}
	}
	resources = {
		category = starbase_buildings
		cost = {
			alloys = 50
		}

		upkeep = {
			rare_crystals = 1
		}
	}
	
	possible = {
		NOR = {			
			solar_system = { has_star_flag = manufactory_system }
			solar_system = { has_star_flag = drone_home_system }
			solar_system = { has_star_flag = wenkwort_system }
		}
	}
	equipped_component = "Aura_Starbase_GAPS_Drone_Constructors_1" 
	ai_build_at_chokepoint = yes
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 100
	}
}
Starbase_Building_GAPS_Drone_Constructors_2 = {
	icon = "GFX_Starbase_Building_GAPS_Drone_Constructors"
	construction_days = 180
	
	potential = {
		exists = owner
		owner = { has_country_flag = CountryFlag_GAPS_Drone_Replicators_Third_Choice has_origin = Origin_GAPS_Drone_Replicators }
		OR = {			
			solar_system = { has_star_flag = manufactory_system }
			solar_system = { has_star_flag = drone_home_system }
			solar_system = { has_star_flag = wenkwort_system }
		}
	}
	resources = {
		category = starbase_buildings
		cost = {
			alloys = 50
		}

		upkeep = {
			rare_crystals = 1
		}
	}
	
	possible = {
		OR = {			
			solar_system = { has_star_flag = manufactory_system }
			solar_system = { has_star_flag = drone_home_system }
			solar_system = { has_star_flag = wenkwort_system }
		}
	}
	equipped_component = "Aura_Starbase_GAPS_Drone_Constructors_2" 
	ai_build_at_chokepoint = yes
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 100
	}
}

Starbase_Building_GAPS_Drone_Orbital_Mining_Corps = {
	icon = "GFX_Starbase_Building_GAPS_Drone_Orbital_Mining_Corps"
	construction_days = 180
	
	resources = {
		category = starbase_buildings
		cost = {
			alloys = 50
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 0 }
			}
			energy = 5
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 1 }
			}
			energy = 5
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 2 }
			}
			energy = 5
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 3 }
			}
			energy = 5
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 4 }
			}
			energy = 5
		}
		upkeep = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 5 }
			}
			energy = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 0 }
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 1 }
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 2 }
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 3 }
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 4 }
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 5 }
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 0 }
				OR = {			
					solar_system = { has_star_flag = manufactory_system }
					solar_system = { has_star_flag = drone_home_system }
					solar_system = { has_star_flag = wenkwort_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 1 }
				OR = {			
					solar_system = { has_star_flag = manufactory_system }
					solar_system = { has_star_flag = drone_home_system }
					solar_system = { has_star_flag = wenkwort_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 2 }
				OR = {			
					solar_system = { has_star_flag = manufactory_system }
					solar_system = { has_star_flag = drone_home_system }
					solar_system = { has_star_flag = wenkwort_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 3 }
				OR = {			
					solar_system = { has_star_flag = manufactory_system }
					solar_system = { has_star_flag = drone_home_system }
					solar_system = { has_star_flag = wenkwort_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 4 }
				OR = {			
					solar_system = { has_star_flag = manufactory_system }
					solar_system = { has_star_flag = drone_home_system }
					solar_system = { has_star_flag = wenkwort_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 5 }
				OR = {			
					solar_system = { has_star_flag = manufactory_system }
					solar_system = { has_star_flag = drone_home_system }
					solar_system = { has_star_flag = wenkwort_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 0 }
				AND = {			
					owner = { has_country_flag = wenkwANDt_defiler }
					solar_system = { has_star_flag = wenkwANDt_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 1 }
				AND = {			
					owner = { has_country_flag = wenkwANDt_defiler }
					solar_system = { has_star_flag = wenkwANDt_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 2 }
				AND = {			
					owner = { has_country_flag = wenkwANDt_defiler }
					solar_system = { has_star_flag = wenkwANDt_system }
				}
			}

			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 3 }
				AND = {			
					owner = { has_country_flag = wenkwANDt_defiler }
					solar_system = { has_star_flag = wenkwANDt_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 4 }
				AND = {			
					owner = { has_country_flag = wenkwANDt_defiler }
					solar_system = { has_star_flag = wenkwANDt_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
		produces = {
			trigger = {
				count_starbase_modules = { type = Starbase_Module_GAPS_Drone_Signal_Station count > 5 }
				AND = {			
					owner = { has_country_flag = wenkwANDt_defiler }
					solar_system = { has_star_flag = wenkwANDt_system }
				}
			}
			rare_crystals = 1
			minerals = 10
			alloys = 5
		}
	}
	potential = {
		exists = owner
		owner = { has_country_flag = CountryFlag_GAPS_Drone_Replicators_Second_Choice has_origin = Origin_GAPS_Drone_Replicators }
	}

	possible = {	
		solar_system = { 
			OR = {		
				has_star_flag = GAPS_drone_system 
				has_star_flag = drone_system_4 
				has_star_flag = manufactory_system 
				has_star_flag = drone_system_1 
				has_star_flag = drone_system_2 
				has_star_flag = drone_destroyer_system 
				has_star_flag = drone_system_3 
				has_star_flag = drone_home_system 
				AND = {
					has_star_flag = wenkwort_system 
					owner = { has_country_flag = wenkwort_defiler }
				}
			}
		}
	}
	ai_build_at_chokepoint = yes
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 50
	}
}