# New Advanced Civics
# Agreement Term Values
# Author: littleraskol

### Discrete Terms ###

## ImpEcon Terms

# Only thing non-impecon overlords should see.
lrsk_gvp_special_service_null = {
	term = lrsk_gvp_impecon

	potential = {
		owner = { NOT = { has_valid_civic = lrsk_gov_var_civic_imperial_economy } }
	}
}

# No special service.
lrsk_gvp_special_service_none = {
	term = lrsk_gvp_impecon

	potential = {
		owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
	}

	# Clearly being favored somehow
	triggered_loyalty_change = {
 		trigger = {
 			owner = { OR = {
				check_variable = { which = lrsk_impecon_foundries value > 0 }
				check_variable = { which = lrsk_impecon_markets value > 0 }
				check_variable = { which = lrsk_impecon_trophies value > 0 }
				check_variable = { which = lrsk_impecon_prospectors value > 0 }
			} }
 		}
		loyalty_change = 15
	}
}

# Logistics ("Foundry")
lrsk_gvp_special_service_logistics = {
	term = lrsk_gvp_impecon

	potential = {
		owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
	}

	possible = {
		custom_tooltip = {
			fail_text = LRSK_IMPECON_TOO_MANY
			owner = { check_variable = { which = lrsk_impecon_foundries value < 10 } }
		}
	}

	loyalty_change = -10

	target_modifier = {
		monthly_loyalty = -1
		country_naval_cap_mult = -0.15
	}

	owner_modifier = {
		starbase_shipyard_build_cost_mult = -0.05
		ship_military_upkeep_mult = -0.05
		planet_stability_add = 1
	}

	unique_owner_modifier = {
		ship_fire_rate_mult = 0.05
	}

	activate_effect = {
		owner = {
			change_variable = { which = lrsk_impecon_foundries value = 1 }
		}
	}

	deactivate_effect = {
		owner = {
			subtract_variable = { which = lrsk_impecon_foundries value = 1 }
		}
	}
}

# Commerical ("Market")
lrsk_gvp_special_service_commerce = {
	term = lrsk_gvp_impecon

	potential = {
		owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
	}

	possible = {
		custom_tooltip = {
			fail_text = LRSK_IMPECON_TOO_MANY
			owner = { check_variable = { which = lrsk_impecon_markets value < 10 } }
		}
	}

	loyalty_change = -10

	target_modifier = {
		monthly_loyalty = -1
		country_trade_attractiveness = -0.15
	}

	owner_modifier = {
		trade_value_mult = 0.05
		country_trade_fee = -0.02
		planet_stability_add = 1
	}

	unique_owner_modifier = {
		pop_cat_specialist_happiness = 0.1
	}

	activate_effect = {
		owner = {
			change_variable = { which = lrsk_impecon_markets value = 1 }
		}
	}

	deactivate_effect = {
		owner = {
			subtract_variable = { which = lrsk_impecon_markets value = 1 }
		}
	}
}

# Diplomatic ("Trophy")
lrsk_gvp_special_service_diplomatic = {
	term = lrsk_gvp_impecon

	potential = {
		owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
	}

	possible = {
		custom_tooltip = {
			fail_text = LRSK_IMPECON_TOO_MANY
			owner = { check_variable = { which = lrsk_impecon_trophies value < 10 } }
		}
		custom_tooltip = {
			fail_text = preset_lrsk_gvp_vassal_trophy_no_gestalt
			target = { is_gestalt = no }
		}
	}

	loyalty_change = -10

	target_modifier = {
		monthly_loyalty = -1
		pop_happiness = -0.1
	}

	owner_modifier = {
		diplo_weight_mult = 0.05
		country_influence_produces_mult = 0.05
		planet_stability_add = 1
	}

	unique_owner_modifier = {
		envoys_add = 1
	}

	activate_effect = {
		owner = {
			change_variable = { which = lrsk_impecon_trophies value = 1 }
		}
	}

	deactivate_effect = {
		owner = {
			subtract_variable = { which = lrsk_impecon_trophies value = 1 }
		}
	}
}

# Provisions ("Prospector")
lrsk_gvp_special_service_provisions = {
	term = lrsk_gvp_impecon

	potential = {
		owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
	}

	possible = {
		custom_tooltip = {
			fail_text = LRSK_IMPECON_TOO_MANY
			owner = { check_variable = { which = lrsk_impecon_prospectors value < 10 } }
		}
	}

	loyalty_change = -10

	target_modifier = {
		monthly_loyalty = -1
		planet_building_build_speed_mult = -0.1
	}

	owner_modifier = {
		planet_structures_cost_mult = -0.05
		planet_structures_upkeep_mult = -0.05
		planet_stability_add = 1
	}

	unique_owner_modifier = {
		pop_cat_worker_happiness = 0.1
	}

	activate_effect = {
		owner = {
			change_variable = { which = lrsk_impecon_prospectors value = 1 }
		}
	}

	deactivate_effect = {
		owner = {
			subtract_variable = { which = lrsk_impecon_prospectors value = 1 }
		}
	}
}

## Colonial Chartering terms

# Default non-spec subject option.
lrsk_gvp_chartered_colony_null = {
	term = lrsk_gvp_chartering

	possible = {
		target = { NOT = { is_subject_with_preset = { PRESET = preset_lrsk_gov_var_subject_chartered_company } } }
	}
}

# Effects of being a chartered colony.
# They seem too negative overall, so I will give them a little boost and accompanying loyalty bonus
# This may be a scaling/non-hidden term in the future.
lrsk_gvp_chartered_colony_effects = {
	term = lrsk_gvp_chartering

	unique_target_modifier = {
		trade_value_mult = 0.1
		monthly_loyalty = 1
	}

	activate_effect = {
		owner = {
			country_event = { id = lrsk_gov_var_chartered.3 }
			set_relation_flag = { who = prev.target flag = lrsk_chartered_this_company }
			save_event_target_as = lrsk_chartering_agent
			species = { save_event_target_as = lrsk_chartering_agent_species }
		}
		target = {
			store_country_backup_data = {
				ethics = yes
				government = yes
				name = yes
			}

			switch = {
				trigger = has_ethic
				ethic_fanatic_authoritarian = {
					country_remove_ethic = ethic_fanatic_authoritarian
					shift_ethic = ethic_authoritarian
				}
				ethic_fanatic_egalitarian = {
					country_remove_ethic = ethic_fanatic_egalitarian
					shift_ethic = ethic_egalitarian
				}
			}
			change_government = {
				authority = auth_corporate
				civics = {
					civic = lrsk_gov_var_civic_mc_chartered_company
					civic = random
				}
			}
			set_name = random # Fixes some naming issues

			IF = { 
				limit = { NOT = { 
					has_opinion_modifier = {
						who = event_target:lrsk_chartering_agent
						modifier = opinion_lrsk_gov_var_colonial_mission
					}
				} }
				add_opinion_modifier = {
					who = event_target:lrsk_chartering_agent
					modifier = opinion_lrsk_gov_var_colonial_mission
				}
			}

			# This flag set when establishing foreign rule.
			# Change the dominant species and "add" a pop of that species to the home planet
			# Make xenophobic and replace ruler (with new dominant species ruler)
			IF = { limit = { has_country_flag = lrsk_alien_rule_puppet }
				save_event_target_as = lrsk_subject_to_charter
				species = { save_event_target_as = lrsk_chartering_usurped_species }
		
				# reaction of the usurped
				country_event = { id = lrsk_gov_var_chartered.21 }
		
				# This ensures a "ruler class" pop (if possible) of the new dominant species "displaces" a native pop
				capital_scope = {
					IF = {
						limit = {
							any_owned_pop = {
								has_job_category = ruler
								NOT = { is_same_species = event_target:lrsk_chartering_agent }
							}
						}
						random_owned_pop = {
							limit = {
								has_job_category = ruler
								NOT = { is_same_species = event_target:lrsk_chartering_agent }
							}
							change_species = event_target:lrsk_chartering_agent_species
						}
						create_pop = {
							species = event_target:lrsk_chartering_usurped_species
							ethos = {
								ethic = ethic_xenophile
							}
						}	
					}
					ELSE_IF = {
						limit = {
							any_owned_pop = {
								has_job_category = specialist
								NOT = { is_same_species = event_target:lrsk_chartering_agent }
							}
						}
						random_owned_pop = { 
							limit = {
								has_job_category = specialist
								NOT = { is_same_species = event_target:lrsk_chartering_agent }
							}
							change_species = event_target:lrsk_chartering_agent_species
						}
						create_pop = {
							species = event_target:lrsk_chartering_usurped_species
							ethos = {
								ethic = ethic_xenophile
							}
						}
					}
					ELSE_IF = {
						limit = { any_owned_pop = { NOT = { is_same_species = event_target:lrsk_chartering_agent } } }
						random_owned_pop = {
							limit = { NOT = { is_same_species = event_target:lrsk_chartering_agent } }
							change_species = event_target:lrsk_chartering_agent_species
						}
						create_pop = {
							species = event_target:lrsk_chartering_usurped_species
							ethos = {
								ethic = ethic_xenophile
							}
						}
					}
				}
		
				change_dominant_species = { species = event_target:lrsk_chartering_agent_species }
		
				shift_ethic = ethic_xenophobe
		
				ruler = {
					kill_leader = {
						show_notification = no
						fire = yes
					}
				}
		
				# prevents immediate mass enslavement of deposed species pops (fucking yikes)
				every_owned_pop = { limit = { NOT = { is_same_species = event_target:lrsk_chartering_agent } }		
					set_citizenship_type = {
						country = prev
						type = citizenship_limited
						cooldown = yes
					}
				}
			}			
		}
	}

	deactivate_effect = {
		owner = {
			country_event = { id = lrsk_gov_var_chartered.3 }
			remove_relation_flag = { who = prev.target flag = lrsk_chartered_this_company }
		}
		target = {
			restore_country_backup_data = yes
			IF = { 
				limit = {
					has_opinion_modifier = {
						who = this.overlord
						modifier = opinion_lrsk_gov_var_colonial_mission
					}
				}
				remove_opinion_modifier = {
					who = this.overlord
					modifier = opinion_lrsk_gov_var_colonial_mission
				}
			}

			# deal with alien rule stuff
			lrsk_clear_country_flag = { FLAG = lrsk_alien_rule_puppet }
			IF = { limit = { any_owned_species = { has_species_flag = lrsk_usurped_indigenes } }
				random_owned_species = { limit = { has_species_flag = lrsk_usurped_indigenes }
					save_event_target_as = lrsk_chartering_usurped_species
					remove_species_flag = lrsk_usurped_indigenes
				}

				change_dominant_species = { species = event_target:lrsk_chartering_usurped_species }
		
				ruler = {
					kill_leader = {
						show_notification = no
						fire = yes
					}
				}
			}
		}
	}

	possible = {
		target = { is_subject_with_preset = { PRESET = preset_lrsk_gov_var_subject_chartered_company } }
	}
}

## Alien rule terms

# Default (home rule)
lrsk_gvp_home_rule = {
	term = lrsk_gvp_alien_puppet_regime

	possible = {
		target = { NOT = { has_country_flag = lrsk_alien_rule_puppet } }
	}
}

# Foreign puppet regime
lrsk_gvp_foreign_regime = {
	term = lrsk_gvp_alien_puppet_regime

	possible = {
		target = { has_country_flag = lrsk_alien_rule_puppet }
	}

	target_modifier = {
		monthly_loyalty = 1.5
	}

	loyalty_change = 15
}

### Resource Terms ###

#lrsk_subsidy_multiplier = 0.15
#lrsk_subsidy_multiplier_trophy = 0.4
#lrsk_subsidy_multiplier_advanced = 0.25
#lrsk_subsidy_multiplier_strategic = 0.5
#
#lrsk_subsidy_monthly_multiplier = 1.5
#lrsk_subsidy_monthly_multiplier_trophy = 4
#lrsk_subsidy_monthly_multiplier_advanced = 2.5
#
#lrsk_min = 0.0
#lrsk_min_15 = 0.15
#lrsk_max = 0.6
#lrsk_spec_max = 0.75
#
# I think setting mins and max differently from the base game is messing things up...
#lrsk_subsidy_default_minimum = -0.75
#lrsk_subsidy_default_maximum = 0.75
#
#lrsk_gvp_special_resource_tax_influence = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		influence
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier_trophy
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier_trophy
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#	target = { has_modifier = lrsk_gov_var_empire_impecon_trophy_vs }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_trophy
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_trophy
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_unity = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		unity
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier_trophy
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier_trophy
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#	target = { has_modifier = lrsk_gov_var_empire_impecon_trophy_vs }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_trophy
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_trophy
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_minerals = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		minerals
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_prospector
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_prospector
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_food = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		food
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_market
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_market
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_energy = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		energy
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_foundry
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_foundry
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_alloys = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		alloys
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier_advanced
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier_advanced
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_foundry
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_foundry
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_consumer_goods = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		consumer_goods
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier_advanced
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier_advanced
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_market
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_market
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_volatile_motes = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		volatile_motes
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier_strategic
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_prospector
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_prospector
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_exotic_gases = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		exotic_gases
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier_strategic
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_prospector
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_prospector
#		}
#	}
#}
#
#lrsk_gvp_special_resource_tax_rare_crystals = {
#	term = lrsk_gvp_hidden_resources
#	resources = {
#		rare_crystals
#	}
#
#	subsidy_multiplier = @lrsk_subsidy_multiplier_strategic
#	subsidy_monthly_multiplier = @lrsk_subsidy_monthly_multiplier
#
#	#potential = {
#	#	owner = { has_valid_civic = lrsk_gov_var_civic_imperial_economy }
#	#}
#
#	resource_min = {
#		base = @lrsk_subsidy_default_minimum
#
#		modifier = {
#			set = @lrsk_min_15
#			agreement_preset = preset_lrsk_gvp_vassal_prospector
#		}
#	}
#
#	resource_max = {
#		base = @lrsk_subsidy_default_maximum
#
#		modifier = {
#			set = @lrsk_spec_max
#			agreement_preset = preset_lrsk_gvp_vassal_prospector
#		}
#	}
#}