p4_go = {
	set_star_flag = ehof_destination_system@root
	set_timed_star_flag = { flag = ehof_intended_destination@root days = @ehof_short_cooldown }
	root = {
		set_country_flag = ehof_skip_accuracy
		country_event = { id = ehof_megastructure.303 }
	}
}

ehof_mega_system = {
	random_system_within_border = {
		limit = { has_star_flag = ehof_megastructure_system@root }
		save_event_target_as = ehof_megastructure_system
	}
}

ehof_dest_system = {
	random_system = {
		limit = { has_star_flag = ehof_destination_system@root }
		save_event_target_as = ehof_destination_system
	}
}

ehof_go_back = {
	hidden_effect = {
		remove_country_flag = ehof_travel_diplomacy
		country_event = { id = ehof_megastructure.301 }
	}
}

ehof_leave_station = {
	hidden_effect = {
		remove_country_flag = ehof_travel_diplomacy
		if = {
			limit = {
				NOR = {
					has_country_flag = ehof_activated
					has_country_flag = ehof_is_upgrading
					has_country_flag = ehof_on_cooldown
					has_country_flag = ehof_malfunctioning
				}
			}
			country_event = { id = ehof_megastructure.201 } # Set to idle
		}
	}
}

ehof_calculate_refund = {
	random_list = {
		1 = { change_variable = { which = ehof_vessel_refund value = 80 } set_country_flag = ehof_refund_80 }
		1 = { change_variable = { which = ehof_vessel_refund value = 90 } set_country_flag = ehof_refund_90 }
		1 = { change_variable = { which = ehof_vessel_refund value = 100 } set_country_flag = ehof_refund_100 }
		1 = { change_variable = { which = ehof_vessel_refund value = 110 } set_country_flag = ehof_refund_110 }
	}
	random_list = {
		1 = {}
		1 = { change_variable = { which = ehof_vessel_refund value = 1 } set_country_flag = ehof_refund_1 }
		1 = { change_variable = { which = ehof_vessel_refund value = 2 } set_country_flag = ehof_refund_2 }
		1 = { change_variable = { which = ehof_vessel_refund value = 3 } set_country_flag = ehof_refund_3 }
		1 = { change_variable = { which = ehof_vessel_refund value = 4 } set_country_flag = ehof_refund_4 }
		1 = { change_variable = { which = ehof_vessel_refund value = 5 } set_country_flag = ehof_refund_5 }
		1 = { change_variable = { which = ehof_vessel_refund value = 6 } set_country_flag = ehof_refund_6 }
		1 = { change_variable = { which = ehof_vessel_refund value = 7 } set_country_flag = ehof_refund_7 }
		1 = { change_variable = { which = ehof_vessel_refund value = 8 } set_country_flag = ehof_refund_8 }
		1 = { change_variable = { which = ehof_vessel_refund value = 9 } set_country_flag = ehof_refund_9 }
	}
	multiply_variable = { which = ehof_vessel_refund value = ehof_refund_ships }
}

ehof_give_refund = {
	while = {
		limit = { check_variable = { which = ehof_refund_ships value > 0 } }
		subtract_variable = { which = ehof_refund_ships value = 1 }
		if = { limit = { has_country_flag = ehof_refund_1   } add_resource = { alloys = 1 } }
		if = { limit = { has_country_flag = ehof_refund_2   } add_resource = { alloys = 2 } }
		if = { limit = { has_country_flag = ehof_refund_3   } add_resource = { alloys = 3 } }
		if = { limit = { has_country_flag = ehof_refund_4   } add_resource = { alloys = 4 } }
		if = { limit = { has_country_flag = ehof_refund_5   } add_resource = { alloys = 5 } }
		if = { limit = { has_country_flag = ehof_refund_6   } add_resource = { alloys = 6 } }
		if = { limit = { has_country_flag = ehof_refund_7   } add_resource = { alloys = 7 } }
		if = { limit = { has_country_flag = ehof_refund_8   } add_resource = { alloys = 8 } }
		if = { limit = { has_country_flag = ehof_refund_9   } add_resource = { alloys = 9 } }
		if = { limit = { has_country_flag = ehof_refund_80  } add_resource = { alloys = 80 } }
		if = { limit = { has_country_flag = ehof_refund_90  } add_resource = { alloys = 90 } }
		if = { limit = { has_country_flag = ehof_refund_100 } add_resource = { alloys = 100 } }
		if = { limit = { has_country_flag = ehof_refund_110 } add_resource = { alloys = 110 } }
	}
	remove_country_flag = ehof_refund_1
	remove_country_flag = ehof_refund_2
	remove_country_flag = ehof_refund_3
	remove_country_flag = ehof_refund_4
	remove_country_flag = ehof_refund_5
	remove_country_flag = ehof_refund_6
	remove_country_flag = ehof_refund_7
	remove_country_flag = ehof_refund_8
	remove_country_flag = ehof_refund_9
	remove_country_flag = ehof_refund_80
	remove_country_flag = ehof_refund_90
	remove_country_flag = ehof_refund_100
	remove_country_flag = ehof_refund_110
}

c1_c00 = { add_resource = { energy = @ehof_p1_category_00_neg } }
c1_c01 = { add_resource = { energy = @ehof_p1_category_01_neg } }
c1_c02 = { add_resource = { energy = @ehof_p1_category_02_neg } }
c1_c03 = { add_resource = { energy = @ehof_p1_category_03_neg } }
c1_c05 = { add_resource = { energy = @ehof_p1_category_05_neg } }
c1_c06 = { add_resource = { energy = @ehof_p1_category_06_neg } }
c1_c07 = { add_resource = { energy = @ehof_p1_category_07_neg } }
c1_c08 = { add_resource = { energy = @ehof_p1_category_08_neg } }
c1_c09 = { add_resource = { energy = @ehof_p1_category_09_neg } }
c1_c10 = { add_resource = { energy = @ehof_p1_category_10_neg } }

c2_c00 = { add_resource = { energy = @ehof_p2_category_00_neg } }
c2_c01 = { add_resource = { energy = @ehof_p2_category_01_neg } }
c2_c02 = { add_resource = { energy = @ehof_p2_category_02_neg } }
c2_c03 = { add_resource = { energy = @ehof_p2_category_03_neg } }
c2_c05 = { add_resource = { energy = @ehof_p2_category_05_neg } }
c2_c06 = { add_resource = { energy = @ehof_p2_category_06_neg } }
c2_c07 = { add_resource = { energy = @ehof_p2_category_07_neg } }
c2_c08 = { add_resource = { energy = @ehof_p2_category_08_neg } }
c2_c09 = { add_resource = { energy = @ehof_p2_category_09_neg } }
c2_c10 = { add_resource = { energy = @ehof_p2_category_10_neg } }

c3_c00 = { add_resource = { sr_dark_matter = @ehof_p3_category_00_neg } }
c3_c01 = { add_resource = { sr_dark_matter = @ehof_p3_category_01_neg } }
c3_c02 = { add_resource = { sr_dark_matter = @ehof_p3_category_02_neg } }
c3_c03 = { add_resource = { sr_dark_matter = @ehof_p3_category_03_neg } }
c3_c05 = { add_resource = { sr_dark_matter = @ehof_p3_category_05_neg } }
c3_c06 = { add_resource = { sr_dark_matter = @ehof_p3_category_06_neg } }
c3_c07 = { add_resource = { sr_dark_matter = @ehof_p3_category_07_neg } }
c3_c08 = { add_resource = { sr_dark_matter = @ehof_p3_category_08_neg } }
c3_c09 = { add_resource = { sr_dark_matter = @ehof_p3_category_09_neg } }
c3_c10 = { add_resource = { sr_dark_matter = @ehof_p3_category_10_neg } }

c4_c00 = { add_resource = { sr_dark_matter = @ehof_p4_category_00_neg } }
c4_c01 = { add_resource = { sr_dark_matter = @ehof_p4_category_01_neg } }
c4_c02 = { add_resource = { sr_dark_matter = @ehof_p4_category_02_neg } }
c4_c03 = { add_resource = { sr_dark_matter = @ehof_p4_category_03_neg } }
c4_c05 = { add_resource = { sr_dark_matter = @ehof_p4_category_05_neg } }
c4_c06 = { add_resource = { sr_dark_matter = @ehof_p4_category_06_neg } }
c4_c07 = { add_resource = { sr_dark_matter = @ehof_p4_category_07_neg } }
c4_c08 = { add_resource = { sr_dark_matter = @ehof_p4_category_08_neg } }
c4_c09 = { add_resource = { sr_dark_matter = @ehof_p4_category_09_neg } }
c4_c10 = { add_resource = { sr_dark_matter = @ehof_p4_category_10_neg } }

ehof_arrival_effect = {
	set_fleet_flag = ehof_ready_for_travel@owner
	if = {
		limit = { owner = { NOT = { has_country_flag = ehof_malfunctioning } } }
		set_event_locked = yes
		owner = { change_variable = { which = ehof_amount_of_fleets_to_travel value = 1 } }
	}
}

ehof_calc_cost = {
	if = {		limit = { check_variable = { which = ehof_last_target value = 1 } }
		custom_tooltip = "ehof_category_00_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c00 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c00 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c00 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c00 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 2 } }
		custom_tooltip = "ehof_category_01_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c01 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c01 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c01 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c01 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 3 } }
		custom_tooltip = "ehof_category_02_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c02 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c02 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c02 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c02 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 4 } }
		custom_tooltip = "ehof_category_03_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c03 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c03 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c03 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c03 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 5 } }
		custom_tooltip = "ehof_category_05_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c05 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c05 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c05 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c05 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 6 } }
		custom_tooltip = "ehof_category_06_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c06 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c06 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c06 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c06 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 7 } }
		custom_tooltip = "ehof_category_07_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c07 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c07 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c07 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c07 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 8 } }
		custom_tooltip = "ehof_category_08_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c08 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c08 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c08 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c08 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 9 } }
		custom_tooltip = "ehof_category_09_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c09 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c09 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c09 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c09 = yes }
	}
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 10 } }
		custom_tooltip = "ehof_category_10_redo"
		if = { limit = { check_variable = { which = ehof_phase value = 4 } } c4_c10 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 3 } } c3_c10 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 2 } } c2_c10 = yes }
		if = { limit = { check_variable = { which = ehof_phase value = 1 } } c1_c10 = yes }
	}
}

estimate_accuracy = {
	set_variable = { which = ehof_mia_chance value = 0 }
	set_variable = { which = ehof_mia_debris_chance value = 0 }
	set_variable = { which = ehof_mia_damage_chance value = 0 }
	set_variable = { which = ehof_mia_detonate_chance value = 0 }
	set_variable = { which = ehof_cat_01_accuracy value = 0 }
	set_variable = { which = ehof_cat_02_accuracy value = 0 }
	set_variable = { which = ehof_cat_03_accuracy value = 0 }
	set_variable = { which = ehof_cat_05_accuracy value = 0 }
	set_variable = { which = ehof_cat_06_accuracy value = 0 }
	set_variable = { which = ehof_cat_07_accuracy value = 0 }
	set_variable = { which = ehof_cat_08_accuracy value = 0 }
	set_variable = { which = ehof_cat_09_accuracy value = 0 }
	set_variable = { which = ehof_cat_10_accuracy value = 0 }

	if = { limit = { check_variable = { which = ehof_phase value = 1 } }		set_variable = { which = ehof_mia_chance value = 10 } }
	if = { limit = { check_variable = { which = ehof_phase value = 2 } }		set_variable = { which = ehof_mia_chance value = 6 } }
	if = { limit = { check_variable = { which = ehof_phase value = 3 } }		set_variable = { which = ehof_mia_chance value = 3 } }
	if = { limit = { check_variable = { which = ehof_count_mia value = 2 } }	multiply_variable = { which = ehof_mia_chance value = 1.25 } }
	if = { limit = { check_variable = { which = ehof_count_mia value = 3 } }	multiply_variable = { which = ehof_mia_chance value = 1.5 } }
	if = { limit = { check_variable = { which = ehof_count_mia value = 4 } }	multiply_variable = { which = ehof_mia_chance value = 1.75 } }
	if = { limit = { check_variable = { which = ehof_count_mia value = 5 } }	multiply_variable = { which = ehof_mia_chance value = 2 } }
	if = { limit = { check_variable = { which = ehof_count_mia value = 6 } }	multiply_variable = { which = ehof_mia_chance value = 2.25 } }
	if = { limit = { check_variable = { which = ehof_count_mia value = 7 } }	multiply_variable = { which = ehof_mia_chance value = 2.5 } }
	if = { limit = { check_variable = { which = ehof_count_mia value = 8 } }	multiply_variable = { which = ehof_mia_chance value = 2.75 } }
	if = { limit = { check_variable = { which = ehof_count_mia value = 9 } }	multiply_variable = { which = ehof_mia_chance value = 3 } }
	if = { limit = { check_variable = { which = ehof_count_mia value >= 10 } }	multiply_variable = { which = ehof_mia_chance value = 3.25 } }
	if = { limit = { has_country_flag = ehof_first_time_immune }				set_variable = { which = ehof_mia_chance value = 0 } }
	if = { limit = { has_country_flag = ehof_mia_cooldown }						set_variable = { which = ehof_mia_chance value = 0 } }
	if = { limit = { has_country_flag = ehof_permanent }						set_variable = { which = ehof_mia_chance value = 0 } }
	if = { limit = { check_variable = { which = ehof_phase value = 4 } }		set_variable = { which = ehof_mia_chance value = 0 } }
	if = { limit = { has_country_flag = ehof_first_time_immune }				set_variable = { which = ehof_mia_chance value = 0 } }

	if = { limit = { NOT = { has_country_flag = ehof_fleet_recently_debris } }		set_variable = { which = ehof_mia_debris_chance value = 33 } }
	if = { limit = { check_variable = { which = count_debris value = 2 } }			multiply_variable = { which = ehof_mia_debris_chance value = 1.25 } }
	if = { limit = { check_variable = { which = count_debris value = 3 } }			multiply_variable = { which = ehof_mia_debris_chance value = 1.5 } }
	if = { limit = { check_variable = { which = count_debris value = 4 } }			multiply_variable = { which = ehof_mia_debris_chance value = 1.75 } }
	if = { limit = { check_variable = { which = count_debris value = 5 } }			multiply_variable = { which = ehof_mia_debris_chance value = 2 } }
	if = { limit = { check_variable = { which = count_debris value = 6 } }			multiply_variable = { which = ehof_mia_debris_chance value = 2.25 } }
	if = { limit = { check_variable = { which = count_debris value = 7 } }			multiply_variable = { which = ehof_mia_debris_chance value = 2.5 } }
	if = { limit = { check_variable = { which = count_debris value >= 8 } }			multiply_variable = { which = ehof_mia_debris_chance value = 2.75 } }
	if = { limit = { has_country_flag = ehof_first_time_immune }					set_variable = { which = ehof_mia_debris_chance value = 0 } }
	if = { limit = { check_variable = { which = ehof_mia_chance value = 0 } }		set_variable = { which = ehof_mia_debris_chance value = 0 } }

	if = { limit = { NOT = { has_country_flag = ehof_fleet_recently_damaged } }		set_variable = { which = ehof_mia_damage_chance value = 33 } }
	if = { limit = { check_variable = { which = count_damage value = 2 } }			multiply_variable = { which = ehof_mia_damage_chance value = 1.25 } }
	if = { limit = { check_variable = { which = count_damage value = 3 } }			multiply_variable = { which = ehof_mia_damage_chance value = 1.5 } }
	if = { limit = { check_variable = { which = count_damage value = 4 } }			multiply_variable = { which = ehof_mia_damage_chance value = 1.75 } }
	if = { limit = { check_variable = { which = count_damage value = 5 } }			multiply_variable = { which = ehof_mia_damage_chance value = 2 } }
	if = { limit = { check_variable = { which = count_damage value = 6 } }			multiply_variable = { which = ehof_mia_damage_chance value = 2.25 } }
	if = { limit = { check_variable = { which = count_damage value = 7 } }			multiply_variable = { which = ehof_mia_damage_chance value = 2.5 } }
	if = { limit = { check_variable = { which = count_damage value >= 8 } }			multiply_variable = { which = ehof_mia_damage_chance value = 2.75 } }
	if = { limit = { has_country_flag = ehof_first_time_immune }					set_variable = { which = ehof_mia_damage_chance value = 0 } }
	if = { limit = { check_variable = { which = ehof_mia_chance value = 0 } }		set_variable = { which = ehof_mia_damage_chance value = 0 } }

	if = { limit = { NOT = { has_country_flag = ehof_fleet_recently_detonated } }	set_variable = { which = ehof_mia_detonate_chance value = 33 } }
	if = { limit = { check_variable = { which = count_detonate value = 2 } }		multiply_variable = { which = ehof_mia_detonate_chance value = 1.25 } }
	if = { limit = { check_variable = { which = count_detonate value = 3 } }		multiply_variable = { which = ehof_mia_detonate_chance value = 1.5 } }
	if = { limit = { check_variable = { which = count_detonate value = 4 } }		multiply_variable = { which = ehof_mia_detonate_chance value = 1.75 } }
	if = { limit = { check_variable = { which = count_detonate value = 5 } }		multiply_variable = { which = ehof_mia_detonate_chance value = 2 } }
	if = { limit = { check_variable = { which = count_detonate value = 6 } }		multiply_variable = { which = ehof_mia_detonate_chance value = 2.25 } }
	if = { limit = { check_variable = { which = count_detonate value = 7 } }		multiply_variable = { which = ehof_mia_detonate_chance value = 2.5 } }
	if = { limit = { check_variable = { which = count_detonate value >= 8 } }		multiply_variable = { which = ehof_mia_detonate_chance value = 2.75 } }
	if = { limit = { has_country_flag = ehof_first_time_immune }					set_variable = { which = ehof_mia_detonate_chance value = 0 } }
	if = { limit = { check_variable = { which = ehof_mia_chance value = 0 } }		set_variable = { which = ehof_mia_detonate_chance value = 0 } }

	else_if = { limit = { check_variable = { which = ehof_phase value >= 3 } }	set_variable = { which = phase_accuracy value = 25 } }
	else_if = { limit = { check_variable = { which = ehof_phase value = 2 } }	set_variable = { which = phase_accuracy value = 21 } }
	else_if = { limit = { check_variable = { which = ehof_phase value = 1 } }	set_variable = { which = phase_accuracy value = 17 } }

	set_variable = { which = ehof_cat_01_rolls value = phase_accuracy }
	set_variable = { which = ehof_cat_02_rolls value = phase_accuracy }
	set_variable = { which = ehof_cat_03_rolls value = phase_accuracy }
	set_variable = { which = ehof_cat_05_rolls value = phase_accuracy }
	set_variable = { which = ehof_cat_06_rolls value = phase_accuracy }
	set_variable = { which = ehof_cat_07_rolls value = phase_accuracy }
	set_variable = { which = ehof_cat_08_rolls value = phase_accuracy }
	set_variable = { which = ehof_cat_09_rolls value = phase_accuracy }
	set_variable = { which = ehof_cat_10_rolls value = phase_accuracy }

	multiply_variable = { which = ehof_cat_01_rolls value = 1.5 }
	multiply_variable = { which = ehof_cat_02_rolls value = 1.4 }
	multiply_variable = { which = ehof_cat_03_rolls value = 1.2 }
	multiply_variable = { which = ehof_cat_05_rolls value = 0.7 }
	multiply_variable = { which = ehof_cat_06_rolls value = 0.9 }
	multiply_variable = { which = ehof_cat_07_rolls value = 0.8 }
	multiply_variable = { which = ehof_cat_08_rolls value = 1.0 }
	multiply_variable = { which = ehof_cat_09_rolls value = 1.2 }
	multiply_variable = { which = ehof_cat_10_rolls value = 1.3 }

	# Factor random
	while = {
		limit = { check_variable = { which = ehof_cat_01_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_01_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_01_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_01_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_01_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_01_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_01_accuracy value = 5 } }
		}
	}
	while = {
		limit = { check_variable = { which = ehof_cat_02_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_02_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_02_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_02_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_02_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_02_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_02_accuracy value = 5 } }
		}
	}
	while = {
		limit = { check_variable = { which = ehof_cat_03_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_03_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_03_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_03_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_03_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_03_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_03_accuracy value = 5 } }
		}
	}
	while = {
		limit = { check_variable = { which = ehof_cat_05_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_05_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_05_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_05_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_05_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_05_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_05_accuracy value = 5 } }
		}
	}
	while = {
		limit = { check_variable = { which = ehof_cat_06_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_06_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_06_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_06_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_06_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_06_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_06_accuracy value = 5 } }
		}
	}
	while = {
		limit = { check_variable = { which = ehof_cat_07_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_07_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_07_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_07_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_07_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_07_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_07_accuracy value = 5 } }
		}
	}
	while = {
		limit = { check_variable = { which = ehof_cat_08_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_08_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_08_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_08_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_08_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_08_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_08_accuracy value = 5 } }
		}
	}
	while = {
		limit = { check_variable = { which = ehof_cat_09_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_09_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_09_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_09_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_09_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_09_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_09_accuracy value = 5 } }
		}
	}
	while = {
		limit = { check_variable = { which = ehof_cat_10_rolls value > 1 } }
		subtract_variable = { which = ehof_cat_10_rolls value = 1 }
		random_list = {
			1 = { change_variable = { which = ehof_cat_10_accuracy value = 1 } }
			1 = { change_variable = { which = ehof_cat_10_accuracy value = 2 } }
			1 = { change_variable = { which = ehof_cat_10_accuracy value = 3 } }
			1 = { change_variable = { which = ehof_cat_10_accuracy value = 4 } }
			1 = { change_variable = { which = ehof_cat_10_accuracy value = 5 } }
		}
	}

	if = {
		limit = { check_variable = { which = ehof_bonus_accuracy value > 0 } }
		change_variable = { which = ehof_cat_01_accuracy value = ehof_bonus_accuracy }
		change_variable = { which = ehof_cat_02_accuracy value = ehof_bonus_accuracy }
		change_variable = { which = ehof_cat_03_accuracy value = ehof_bonus_accuracy }
		change_variable = { which = ehof_cat_05_accuracy value = ehof_bonus_accuracy }
		change_variable = { which = ehof_cat_06_accuracy value = ehof_bonus_accuracy }
		change_variable = { which = ehof_cat_07_accuracy value = ehof_bonus_accuracy }
		change_variable = { which = ehof_cat_08_accuracy value = ehof_bonus_accuracy }
		change_variable = { which = ehof_cat_09_accuracy value = ehof_bonus_accuracy }
		change_variable = { which = ehof_cat_10_accuracy value = ehof_bonus_accuracy }
	}

	if = {
		limit = { has_country_flag = ehof_failed_last_time }
		multiply_variable = { which = ehof_cat_01_accuracy value = 2 }
		multiply_variable = { which = ehof_cat_02_accuracy value = 2 }
		multiply_variable = { which = ehof_cat_03_accuracy value = 2 }
		multiply_variable = { which = ehof_cat_05_accuracy value = 2 }
		multiply_variable = { which = ehof_cat_06_accuracy value = 2 }
		multiply_variable = { which = ehof_cat_07_accuracy value = 2 }
		multiply_variable = { which = ehof_cat_08_accuracy value = 2 }
		multiply_variable = { which = ehof_cat_09_accuracy value = 2 }
		multiply_variable = { which = ehof_cat_10_accuracy value = 2 }
	}

	if = {
		limit = { has_country_flag = ehof_first_time_immune }
		set_variable = { which = ehof_cat_01_accuracy value = 100 }
		set_variable = { which = ehof_cat_02_accuracy value = 100 }
		set_variable = { which = ehof_cat_03_accuracy value = 100 }
		set_variable = { which = ehof_cat_05_accuracy value = 100 }
		set_variable = { which = ehof_cat_06_accuracy value = 100 }
		set_variable = { which = ehof_cat_07_accuracy value = 100 }
		set_variable = { which = ehof_cat_08_accuracy value = 100 }
		set_variable = { which = ehof_cat_09_accuracy value = 100 }
		set_variable = { which = ehof_cat_10_accuracy value = 100 }
	}

	if = { limit = { check_variable = { which = ehof_cat_01_accuracy value > 100 } } set_variable = { which = ehof_cat_01_accuracy value = 100 } }
	if = { limit = { check_variable = { which = ehof_cat_02_accuracy value > 100 } } set_variable = { which = ehof_cat_02_accuracy value = 100 } }
	if = { limit = { check_variable = { which = ehof_cat_03_accuracy value > 100 } } set_variable = { which = ehof_cat_03_accuracy value = 100 } }
	if = { limit = { check_variable = { which = ehof_cat_05_accuracy value > 100 } } set_variable = { which = ehof_cat_05_accuracy value = 100 } }
	if = { limit = { check_variable = { which = ehof_cat_06_accuracy value > 100 } } set_variable = { which = ehof_cat_06_accuracy value = 100 } }
	if = { limit = { check_variable = { which = ehof_cat_07_accuracy value > 100 } } set_variable = { which = ehof_cat_07_accuracy value = 100 } }
	if = { limit = { check_variable = { which = ehof_cat_08_accuracy value > 100 } } set_variable = { which = ehof_cat_08_accuracy value = 100 } }
	if = { limit = { check_variable = { which = ehof_cat_09_accuracy value > 100 } } set_variable = { which = ehof_cat_09_accuracy value = 100 } }
	if = { limit = { check_variable = { which = ehof_cat_10_accuracy value > 100 } } set_variable = { which = ehof_cat_10_accuracy value = 100 } }

	set_variable = { which = phase_accuracy value = 0 }
}

ehof_pre_flight = {
	country_event = { id = ehof_megastructure.202 } # Set to Firing
	if = { limit = { NOT = { has_country_flag = ehof_immunity_over } } set_country_flag = ehof_first_time_immune }
	estimate_accuracy = yes

	# Reset flags and variables
	remove_country_flag = ehof_skip_accuracy
	set_variable = { which = ehof_amount_of_fleets_to_travel value = 0 }
	every_owned_fleet = {
		limit = { has_fleet_flag = ehof_ready_for_travel@root }
		remove_fleet_flag = ehof_ready_for_travel@root
	}

	# Set cooldown days
	if = { limit = { check_variable = { which = ehof_phase value = 1 } } set_variable = { which = ehof_cooldown_days value = @ehof_phase1_cooldown_days } }
	if = { limit = { check_variable = { which = ehof_phase value = 2 } } set_variable = { which = ehof_cooldown_days value = @ehof_phase2_cooldown_days } }
	if = { limit = { check_variable = { which = ehof_phase value = 3 } } set_variable = { which = ehof_cooldown_days value = @ehof_phase3_cooldown_days } }
	if = { limit = { check_variable = { which = ehof_phase value = 4 } } set_variable = { which = ehof_cooldown_days value = @ehof_phase4_cooldown_days } }
	if = { limit = { check_variable = { which = ehof_phase value = 5 } } set_variable = { which = ehof_cooldown_days value = @ehof_phase3_cooldown_days } }

	random_system_within_border = {
		limit = { has_star_flag = ehof_megastructure_system@root }
		save_event_target_as = ehof_megastructure_system

		# Reset flags
		remove_star_flag = ehof_target_category_00
		remove_star_flag = ehof_target_category_01
		remove_star_flag = ehof_target_category_02
		remove_star_flag = ehof_target_category_03
		remove_star_flag = ehof_target_category_05
		remove_star_flag = ehof_target_category_06
		remove_star_flag = ehof_target_category_07
		remove_star_flag = ehof_target_category_08
		remove_star_flag = ehof_target_category_09
		remove_star_flag = ehof_target_category_10

		# Set EHOF location
		if = {
			limit = { root = { check_variable = { which = ehof_phase value = 5 } } }
			random_system_planet = {
				limit = { has_planet_flag = ehof_micro@root }
				save_event_target_as = ehof_move_to_wormhole
			}
		}
		else = { star = { save_event_target_as = ehof_move_to_wormhole } }

		# Move every fleet in system to wormhole
		every_fleet_in_system = {
			limit = {
				exists = owner
				owner = { is_same_value = root }
				NOR = {
					is_constructing = mining_station
					is_constructing = research_station
					is_constructing = observation_post
					is_constructing = megastructure
					is_constructing = starbase
					AND = {
						is_ship_class = shipclass_starbase
						NOT = { is_ship_size = juggernaut }
					}
					is_ship_class = shipclass_military_station
					is_ship_class = shipclass_mining_station
					is_ship_class = shipclass_research_station
					is_ship_class = shipclass_observation_station
					has_fleet_flag = ehof_is_at_wormhole
				}
			}

			set_fleet_flag = ehof_is_at_wormhole
			auto_move_to_planet = {
				target = event_target:ehof_move_to_wormhole
				clear_auto_move_on_arrival = no
				arrival_effect = ehof_arrival_effect
			}
		}
	}

	every_system = {
		if = { limit = { has_star_flag = ehof_destination_system@root } remove_star_flag = ehof_destination_system@root }
		if = { limit = { has_star_flag = ehof_intended_destination@root } remove_star_flag = ehof_intended_destination@root }

		# Count all unexplored isolated systems created by root
		if = {
			limit = {
				ehof_cohesive_system = yes
				ehof_category_01 = no
				has_star_flag = ehof_system_created_by_@root
				NOT = { has_star_flag = ehof_visited@root }
			}
			root = { change_variable = { which = ehof_unexplored_isolated	value = 1 } }
		}

		# Count all created isolated systems
		if = {
			limit = {
				ehof_cohesive_system = yes
				has_star_flag = ehof_system_created_by_@root
			}
			root = { change_variable = { which = ehof_total_isolated		value = 1 } }
		}

		# Halt spawning if max is reached
		if = {
			limit = { root = { check_variable = { which = ehof_total_isolated value >= @ehof_max_wormhole_systems } } }
			root = { set_country_flag = ehof_explored_all_isolated }
		}
	}

	# Spawn wormhole cohesive system if less than 1 left to explore
	if = {
		limit = {
			NOT = { has_country_flag = ehof_explored_all_isolated }
			check_variable = { which = ehof_unexplored_isolated	value <= 0 }
		}
		if = { limit = { check_variable = { which = ehof_phase value >= 3 } } set_global_flag = ehof_can_roll_advanced }
		if = { limit = { exists = event_target:ehof_system_creator } clear_global_event_target = ehof_system_creator }
		save_global_event_target_as = ehof_system_creator
		ehof_generate_system = yes

		# Traders
		if = {
			limit = {
				NOR = {
					has_global_flag = ehof_traders_spawned
					has_global_flag = compound_invasion_ongoing
					check_variable = { which = ehof_phase value < 3 }
				}
			}
			random_list = {
				4 = { change_variable = { which = ehof_spawn_traders value = 1 } }
				1 = {
					modifier = { factor = 2 check_variable = { which = ehof_spawn_traders value >= 4 } }
					modifier = { factor = 3 check_variable = { which = ehof_spawn_traders value >= 8 } }
					modifier = { factor = 4 check_variable = { which = ehof_spawn_traders value >= 12 } }
					country_event = { id = ehof_mega_trader.100 }
				}
			}
		}
	}
	set_variable = { which = ehof_unexplored_isolated value = 0 }
	set_variable = { which = ehof_total_isolated value = 0 }
}

ehof_dest_cat00 = { # Random
	set_variable = { which = ehof_last_target value = 1 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_00 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning
	random_system = {
		limit = { ehof_travel_conditions = yes }
		set_star_flag = ehof_destination_system@root
		set_star_flag = ehof_intended_destination@root
	}
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat01 = { # Point of Interest
	set_variable = { which = ehof_last_target value = 2 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_01 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning

	random_list = {
		0 = { # SA System
			modifier = { add = 10 has_global_flag = ehof_sa_system_spawned }
			modifier = {
				factor = 0.2
				any_system = {
					ehof_sa_system = yes
					NOT = { has_star_flag = ehof_new_system_poi@root }
				}
			}
			random_system = {
				limit = { ehof_sa_system = yes }
				set_star_flag = ehof_destination_system@root
				set_star_flag = ehof_intended_destination@root
			}
		}
		0 = { # Quest system
			modifier = { add = 10 has_country_flag = ehof_started_reality_code }
			modifier = {
				factor = 0.2
				any_system = {
					ehof_quest_system = yes
					NOT = { has_star_flag = ehof_new_system_poi@root }
				}
			}
			if = {
				limit = {
					any_system = {
						ehof_quest_system = yes
						has_star_flag = ehof_new_system_poi@root
					}
				}
				random_system = {
					limit = {
						ehof_quest_system = yes
						has_star_flag = ehof_new_system_poi@root
					}
					set_star_flag = ehof_destination_system@root
					set_star_flag = ehof_intended_destination@root
				}
			}
			else = {
				random_system = {
					limit = { ehof_quest_system = yes }
					set_star_flag = ehof_destination_system@root
					set_star_flag = ehof_intended_destination@root
				}
			}
		}
		0 = { # Trader hub
			modifier = {
				add = 10
				check_variable = { which = ehof_phase value >= 3 }
				has_global_flag = ehof_traders_spawned
				NOR = {
					has_global_flag = compound_invasion_ongoing
					any_owned_fleet = {
						exists = solar_system
						solar_system = { ehof_trader_system = yes }
					}
					has_country_flag = ehof_recently_visited_trader
				}
			}
			modifier = {
				factor = 0.2
				any_system = {
					ehof_trader_hub = yes
					NOT = { has_star_flag = ehof_new_system_poi@root }
				}
			}
			set_timed_country_flag = { flag = ehof_recently_visited_trader days = @ehof_trader_visiting_days }
			random_system = {
				limit = { ehof_trader_hub = yes }
				set_star_flag = ehof_destination_system@root
				set_star_flag = ehof_intended_destination@root
			}
		}
	}
	set_country_flag = ehof_skip_accuracy			# Guarentee travel
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat02 = { # Bountiful
	set_variable = { which = ehof_last_target value = 3 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_02 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning

	if = {
		limit = {
			any_system = {
				ehof_is_rare = yes
				has_star_flag = ehof_system_created_by_@root
				ehof_category_01 = no
				NOT = { has_star_flag = ehof_visited@root }
			}
		}
		random_system = {
			limit = {
				ehof_is_rare = yes
				has_star_flag = ehof_system_created_by_@root
				ehof_category_01 = no
				NOT = { has_star_flag = ehof_visited@root }
			}
			set_star_flag = ehof_destination_system@root
			set_star_flag = ehof_intended_destination@root
		}
	}
	else = {
		random_system = {
			limit = {
				ehof_is_rare = yes
				has_star_flag = ehof_system_created_by_@root
				ehof_category_01 = no
			}
			set_star_flag = ehof_destination_system@root
			set_star_flag = ehof_intended_destination@root
		}
	}
	set_country_flag = ehof_skip_accuracy			# Guarentee travel
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat03 = { # Wormhole Cohesive
	set_variable = { which = ehof_last_target value = 4 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_03 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning

	random_list = {
		1 = {	# Unexplored system
			modifier = { factor = 1.5	check_variable = { which = ehof_phase value = 2 } }				# Phase 2 bonus
			modifier = { factor = 2		check_variable = { which = ehof_phase value = 3 } }				# Phase 3 bonus
			modifier = { factor = 1.5	check_variable = { which = ehof_count_wcohesive value >= 5 } }	# bonus if hasn't been to unexplored system in 5 travels
			modifier = { factor = 1.5	check_variable = { which = ehof_count_wcohesive value >= 10 } }	# bonus if hasn't been to unexplored system in 10 travels
			set_variable = { which = ehof_count_wcohesive value = 0 }									# reset counter
			random_system = {
				limit = {
					ehof_cohesive_system = yes
					has_star_flag = ehof_system_created_by_@root
					ehof_category_01 = no
					NOT = { has_star_flag = ehof_visited@root }
				}
				set_star_flag = ehof_destination_system@root
				set_star_flag = ehof_intended_destination@root
			}
		}
		1 = {	# Explored system
			# Cannot happen if there is no system that has not been visited in the last 5 travels
			modifier = {
				factor = 0
				NOT = {
					any_system = {
						ehof_cohesive_system = yes
						has_star_flag = ehof_visited_anyone
						ehof_category_01 = no
						NOR = {
							has_star_flag = last_visited_system_01@root
							has_star_flag = last_visited_system_02@root
							has_star_flag = last_visited_system_03@root
							has_star_flag = last_visited_system_04@root
							has_star_flag = last_visited_system_05@root
						}
					}
				}
			}
			change_variable = { which = ehof_count_wcohesive value = 1 }
			random_system = {
				limit = {
					ehof_cohesive_system = yes
					has_star_flag = ehof_visited_anyone
					ehof_category_01 = no
					NOR = {
						has_star_flag = last_visited_system_01@root
						has_star_flag = last_visited_system_02@root
						has_star_flag = last_visited_system_03@root
						has_star_flag = last_visited_system_04@root
						has_star_flag = last_visited_system_05@root
					}
				}
				set_star_flag = ehof_destination_system@root
				set_star_flag = ehof_intended_destination@root
			}
		}
	}
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat05 = { # Stellar Remnant
	set_variable = { which = ehof_last_target value = 5 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_05 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning
	random_system = {
		limit = {
			has_star_flag = ehof_category_05
			ehof_travel_conditions = yes
		}
		set_star_flag = ehof_destination_system@root
		set_star_flag = ehof_intended_destination@root
	}
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat06 = { # Binary
	set_variable = { which = ehof_last_target value = 6 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_06 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning
	random_system = {
		limit = {
			has_star_flag = ehof_category_06
			ehof_travel_conditions = yes
		}
		set_star_flag = ehof_destination_system@root
		set_star_flag = ehof_intended_destination@root
	}
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat07 = { # Trinary
	set_variable = { which = ehof_last_target value = 7 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_07 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning
	random_system = {
		limit = {
			has_star_flag = ehof_category_07
			ehof_travel_conditions = yes
		}
		set_star_flag = ehof_destination_system@root
		set_star_flag = ehof_intended_destination@root
	}
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat08 = { # Giant Star
	set_variable = { which = ehof_last_target value = 8 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_08 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning
	random_system = {
		limit = {
			has_star_flag = ehof_category_08
			ehof_travel_conditions = yes
		}
		set_star_flag = ehof_destination_system@root
		set_star_flag = ehof_intended_destination@root
	}
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat09 = { # Fledgling Star
	set_variable = { which = ehof_last_target value = 9 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_09 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning
	random_system = {
		limit = {
			has_star_flag = ehof_category_09
			ehof_travel_conditions = yes
		}
		set_star_flag = ehof_destination_system@root
		set_star_flag = ehof_intended_destination@root
	}
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_dest_cat10 = { # Dwarf Star
	set_variable = { which = ehof_last_target value = 10 }																					# Save this as the last target
	random_system_within_border = { limit = { has_star_flag = ehof_megastructure_system@root } set_star_flag = ehof_target_category_10 }	# Save this on ehof star, so we can see what we were aiming for
	random_country = { limit = { is_country_type = global_event } change_variable = { which = counting_ehof_usage value = 1 } }				# Save this to global_event for crisis spawning
	random_system = {
		limit = {
			has_star_flag = ehof_category_10
			ehof_travel_conditions = yes
		}
		set_star_flag = ehof_destination_system@root
		set_star_flag = ehof_intended_destination@root
	}
	country_event = { id = ehof_megastructure.303 } # Accuracy + Generation
}

ehof_redo_button = {
	ehof_pre_flight = yes
	if = {		limit = { check_variable = { which = ehof_last_target value = 1  } } ehof_dest_cat00 = yes }
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 2  } } ehof_dest_cat01 = yes }
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 3  } } ehof_dest_cat02 = yes }
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 4  } } ehof_dest_cat03 = yes }
	
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 5  } } ehof_dest_cat05 = yes }
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 6  } } ehof_dest_cat06 = yes }
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 7  } } ehof_dest_cat07 = yes }
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 8  } } ehof_dest_cat08 = yes }
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 9  } } ehof_dest_cat09 = yes }
	else_if = {	limit = { check_variable = { which = ehof_last_target value = 10 } } ehof_dest_cat10 = yes }
}

###############################################################################################################################################################
######################################################################## Change States ########################################################################
###############################################################################################################################################################
ehof_set_to_idle = {
	if = {
		limit = { check_variable = { which = ehof_phase value = 1 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { OR = { has_megastructure_flag = ehof_phase_01 has_megastructure_flag = ehof_phase_01_decommissioned } } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { OR = { has_megastructure_flag = ehof_phase_01 has_megastructure_flag = ehof_phase_01_decommissioned } } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase1_idle"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = { set_megastructure_flag = ehof_phase_01 }
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 2 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { OR = { has_megastructure_flag = ehof_phase_02 has_megastructure_flag = ehof_phase_02_decommissioned } } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { OR = { has_megastructure_flag = ehof_phase_02 has_megastructure_flag = ehof_phase_02_decommissioned } } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase2_idle"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = { set_megastructure_flag = ehof_phase_02 }
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 3 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { OR = { has_megastructure_flag = ehof_phase_03 has_megastructure_flag = ehof_phase_03_decommissioned } } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { OR = { has_megastructure_flag = ehof_phase_03 has_megastructure_flag = ehof_phase_03_decommissioned } } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase3_idle"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = { set_megastructure_flag = ehof_phase_03 }
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 4 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { OR = { has_megastructure_flag = ehof_phase_04 has_megastructure_flag = ehof_phase_04_decommissioned } } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { OR = { has_megastructure_flag = ehof_phase_04 has_megastructure_flag = ehof_phase_04_decommissioned } } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase4_idle"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = { set_megastructure_flag = ehof_phase_04 }
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 5 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_05 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_05 } delete_megastructure = this }

			random_system_planet = { limit = { has_planet_flag = ehof_micro@root } save_event_target_as = ehof_micro }
			spawn_megastructure = {
				type = "ehof_megastructure_phase5_idle"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = event_target:ehof_micro
				init_effect = { set_megastructure_flag = ehof_phase_05 }
			}
		}
	}
}

ehof_set_to_activating = {
	if = {
		limit = { check_variable = { which = ehof_phase value = 1 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_01 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_01 } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase1_activating"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = { set_megastructure_flag = ehof_phase_01 }
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 2 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_02 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_02 } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase2_activating"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = { set_megastructure_flag = ehof_phase_02 }
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 3 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_03 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_03 } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase3_activating"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = { set_megastructure_flag = ehof_phase_03 }
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 4 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_04 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_04 } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase4_activating"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = { set_megastructure_flag = ehof_phase_04 }
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 5 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_05 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_05 } delete_megastructure = this }

			random_system_planet = { limit = { has_planet_flag = ehof_micro@root } save_event_target_as = ehof_micro }
			spawn_megastructure = {
				type = "ehof_megastructure_phase5_activating"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = event_target:ehof_micro
				init_effect = { set_megastructure_flag = ehof_phase_05 }
			}
		}
	}
}

ehof_set_to_activated = {
	if = {
		limit = { check_variable = { which = ehof_phase value = 1 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_01 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_01 } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase1_active"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = {
					set_megastructure_flag = ehof_wormhole_node
					set_megastructure_flag = ehof_phase_01
				}
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 2 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_02 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_02 } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase2_active"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = {
					set_megastructure_flag = ehof_wormhole_node
					set_megastructure_flag = ehof_phase_02
				}
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 3 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_03 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_03 } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase3_active"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = {
					set_megastructure_flag = ehof_wormhole_node
					set_megastructure_flag = ehof_phase_03
				}
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 4 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_04 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_04 } delete_megastructure = this }

			spawn_megastructure = {
				type = "ehof_megastructure_phase4_active"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = star
				init_effect = {
					set_megastructure_flag = ehof_wormhole_node
					set_megastructure_flag = ehof_phase_04
				}
			}
		}
	}

	else_if = {
		limit = { check_variable = { which = ehof_phase value = 5 } }
		random_system_within_border = {
			limit = { any_system_megastructure = { has_megastructure_flag = ehof_phase_05 } has_star_flag = ehof_megastructure_system@root }
			every_system_megastructure = { limit = { has_megastructure_flag = ehof_phase_05 } delete_megastructure = this }

			random_system_planet = { limit = { has_planet_flag = ehof_micro@root } save_event_target_as = ehof_micro }
			spawn_megastructure = {
				type = "ehof_megastructure_phase5_active"
				orbit_angle = 0
				orbit_distance = 0
				owner = root
				location = event_target:ehof_micro
				init_effect = {
					set_megastructure_flag = ehof_wormhole_node
					set_megastructure_flag = ehof_phase_05
				}
			}
		}
	}
}