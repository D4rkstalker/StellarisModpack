@resolution_flag_timer = 360

append_scrap_pile_build = {
	if = {
		limit = { is_variable_set = scrap_pile_build }
		change_variable = {
			which = scrap_pile_build
			value = 1
		}
		else = {
			set_variable = {
				which = scrap_pile_build
				value = 1
			}
		}
	}
}

remove_scrap_pile_build = {
	if = {
		limit = { is_variable_set = scrap_pile_build }
		subtract_variable = {
			which = scrap_pile_build
			value = 1
		}
		if = {
			limit = {
				check_variable = {
					which = scrap_pile_build
					value = 0
				}
			}
			clear_variable = scrap_pile_build
		}
	}
}

refresh_scrap_pile_build_modifier = {
	if = {
		limit = { has_modifier = holding_scrap_pile_build_modifier }
		remove_modifier = holding_scrap_pile_build_modifier
	}
	if = {
		limit = { is_variable_set = scrap_pile_build }
		add_modifier = {
			modifier = holding_scrap_pile_build_modifier
			multiplier = scrap_pile_build
		}
	}
}

pd_reset_ai_start = {
	set_origin = origin_default
	
	capital_scope = {
		set_planet_flag = gpm_has_planet_rings
		set_planet_size = 18
		random_list = {
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_tropical } }	change_pc = pc_tropical }
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_arid } }		change_pc = pc_arid }
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_continental } }	change_pc = pc_continental }
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_ocean } }		change_pc = pc_ocean }
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_tundra } }		change_pc = pc_tundra }
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_arctic } }		change_pc = pc_arctic }
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_alpine } }		change_pc = pc_alpine }
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_savannah } }	change_pc = pc_savannah }
			1 = { every_owned_pop = { limit = { is_robot_pop = no is_sapient = yes } modify_species = { ideal_planet_class = pc_desert } }		change_pc = pc_desert }
		}
		generate_start_deposits_and_blockers = yes
		remove_all_buildings = yes
		generate_start_buildings_and_districts = yes
		
		solar_system = {

			generate_home_system_resources = yes

			every_system_planet = {
				if = {
					limit = {
						has_deposit_for = shipclass_mining_station
						has_mining_station = no
					}
					create_mining_station = { owner = root }
				}
				else_if = {
					limit = {
						has_deposit_for = shipclass_research_station
						has_research_station = no
					}
					create_research_station = { owner = root }
				}
			}

			IF = {
				limit = {
					has_star_flag = pd_tiyanki_graveyard_system
				}
				event_target:pdtiyanki_country = {
					every_controlled_fleet = { delete_fleet = this }
					destroy_country = yes
				}
				every_system_ambient_object = {
					limit = {
						is_ambient_object_type = space_storm_2
					}
					destroy_ambient_object = this
				}
			}
		}
	}
}