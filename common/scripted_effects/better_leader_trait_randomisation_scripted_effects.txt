# leader scope - this is the overridden effect from base Stellaris
add_random_leader_trait = {
	add_random_leader_trait_inner = yes
}

# separate effect so that compat patches can just call this one if they also want to override add_random_leader_trait
# leader scope
add_random_leader_trait_inner = {
	switch = {
		trigger = leader_class
		scientist = { add_random_scientist_leader_trait = yes }
		admiral = { add_random_admiral_leader_trait = yes }
		governor = { add_random_governor_leader_trait = yes }
		general = { add_random_general_leader_trait = yes }
		ruler = { add_random_ruler_leader_trait = yes }
		# envoys don't have traits... yet
	}
}

# leader scope
add_random_scientist_leader_trait = {
	random_list = {
		# generic leader traits; NOTE: eager/newboot is purposely excluded, even in the built-in effect
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_xp_bonus_leader_trait = yes
					has_xp_penalty_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_bonus_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_resilient
					has_trait = leader_trait_substance_abuser
					is_robotic_species = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_resilient
			add_trait = leader_trait_resilient
			set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_xp_penalty_leader_trait = yes
					has_xp_bonus_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_penalty_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_substance_abuser
					has_trait = leader_trait_resilient
					is_robotic_species = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_substance_abuser
			add_trait = leader_trait_substance_abuser
			set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_arrested_development
					owner = { has_valid_civic = civic_hive_one_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_arrested_development
			add_trait = leader_trait_arrested_development
			set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		# begin scientist traits
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_meticulous
			}
			add_trait = leader_trait_meticulous
			set_timed_leader_flag = { flag = gained_leader_trait_meticulous days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_spark_of_genius
			}
			add_trait = leader_trait_spark_of_genius
			set_timed_leader_flag = { flag = gained_leader_trait_spark_of_genius days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_carefree 
			}
			add_trait = leader_trait_carefree
			set_timed_leader_flag = { flag = gained_leader_trait_carefree days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_roamer
					has_trait = leader_trait_cataloger
				}
			}
			if = {
				limit = {
					OR = {
						is_robotic_species = no
						has_synthethic_dawn = no
					}
				}
				add_trait = leader_trait_roamer
				set_timed_leader_flag = { flag = gained_leader_trait_roamer days = 7 }
			}
			else = {
				add_trait = leader_trait_cataloger
				set_timed_leader_flag = { flag = gained_leader_trait_cataloger days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_archaeologist
					has_trait = leader_trait_archaeologist_ancrel
				}
			}
			if = {
				limit = { has_ancrel = yes }
				add_trait = leader_trait_archaeologist_ancrel
				set_timed_leader_flag = { flag = leader_trait_archaeologist_ancrel days = 7 }
			}
			else = {
				add_trait = leader_trait_archaeologist
				set_timed_leader_flag = { flag = leader_trait_archaeologist days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_maniacal
			}
			add_trait = leader_trait_maniacal
			set_timed_leader_flag = { flag = gained_leader_trait_maniacal days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					owner = {
						OR = {
							NOT = { has_technology = tech_self_aware_logic }
							has_policy_flag = ai_outlawed
							is_gestalt = yes
						}
					}
					has_trait = leader_trait_sapient_AI_assistant
					has_trait = leader_trait_custom_AI_assistant
					is_robotic_species = yes
				}
			}
			if = {
				limit = { owner = { has_technology = tech_sapient_ai } }
				add_trait = leader_trait_sapient_AI_assistant
				set_timed_leader_flag = { flag = gained_leader_trait_sapient_AI_assistant days = 7 }
			}
			else = {
				add_trait = leader_trait_custom_AI_assistant
				set_timed_leader_flag = { flag = gained_leader_trait_custom_AI_assistant days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_materials
			}
			add_trait = leader_trait_expertise_materials
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_materials days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_propulsion
			}
			add_trait = leader_trait_expertise_propulsion
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_propulsion days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_voidcraft
			}
			add_trait = leader_trait_expertise_voidcraft
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_voidcraft days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_industry
			}
			add_trait = leader_trait_expertise_industry
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_industry days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_field_manipulation
			}
			add_trait = leader_trait_expertise_field_manipulation
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_field_manipulation days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_particles
			}
			add_trait = leader_trait_expertise_particles
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_particles days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_computing
			}
			add_trait = leader_trait_expertise_computing
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_computing days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_psionics
				is_robotic_species = yes
				species = { has_trait = trait_hive_mind }
			}
			add_trait = leader_trait_expertise_psionics
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_psionics days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_new_worlds
			}
			add_trait = leader_trait_expertise_new_worlds
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_new_worlds days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_statecraft
			}
			add_trait = leader_trait_expertise_statecraft
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_statecraft days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_biology
			}
			add_trait = leader_trait_expertise_biology
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_biology days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_expertise_military_theory
			}
			add_trait = leader_trait_expertise_military_theory
			set_timed_leader_flag = { flag = gained_leader_trait_expertise_military_theory days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_paranoid
					owner = { has_valid_civic = civic_hive_one_mind }
				}
			}
			add_trait = leader_trait_paranoid
			set_timed_leader_flag = { flag = gained_leader_trait_paranoid days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
	}
}

# leader scope
add_random_admiral_leader_trait = {
	random_list = {
		# generic leader traits; NOTE: eager/newboot is purposely excluded, even in the built-in effect
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_xp_bonus_leader_trait = yes
					has_xp_penalty_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_bonus_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_resilient
					has_trait = leader_trait_substance_abuser
					is_robotic_species = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_resilient
			add_trait = leader_trait_resilient
			set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_xp_penalty_leader_trait = yes
					has_xp_bonus_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_penalty_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_substance_abuser
					has_trait = leader_trait_resilient
					is_robotic_species = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_substance_abuser
			add_trait = leader_trait_substance_abuser
			set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_arrested_development
					owner = { has_valid_civic = civic_hive_one_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_arrested_development
			add_trait = leader_trait_arrested_development
			set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		# begin admiral traits
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_trickster
					has_trait = leader_trait_unyielding
				}
			}
			add_trait = leader_trait_trickster
			set_timed_leader_flag = { flag = gained_leader_trait_trickster days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_fleet_logistician
					has_trait = leader_trait_maintenance_loop
				}
			}
			if = {
				limit = {
					OR = {
						is_robotic_species = no
						has_synthethic_dawn = no
					}
				}
				add_trait = leader_trait_fleet_logistician
				set_timed_leader_flag = { flag = gained_leader_trait_fleet_logistician days = 7 }
			}
			else = {
				add_trait = leader_trait_maintenance_loop
				set_timed_leader_flag = { flag = gained_leader_trait_maintenance_loop days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_engineer
					owner = { NOT = { has_technology = tech_doctrine_fleet_size_3 } }
				}
			}
			add_trait = leader_trait_engineer
			set_timed_leader_flag = { flag = gained_leader_trait_engineer days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_aggressive
					has_trait = leader_trait_cautious
				}
			}
			add_trait = leader_trait_aggressive
			set_timed_leader_flag = { flag = gained_leader_trait_aggressive days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_cautious
					has_trait = leader_trait_aggressive
				}
			}
			add_trait = leader_trait_cautious
			set_timed_leader_flag = { flag = gained_leader_trait_cautious days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_scout
					owner = { NOT = { has_technology = tech_sensors_2 } }
				}
			}
			add_trait = leader_trait_scout
			set_timed_leader_flag = { flag = gained_leader_trait_scout days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_unyielding
					has_trait = leader_trait_trickster
					has_trait = leader_trait_nervous
					has_trait = leader_trait_unstable_code_base
				}
			}
			add_trait = leader_trait_unyielding
			set_timed_leader_flag = { flag = gained_leader_trait_unyielding days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_gale_speed
					has_trait = leader_trait_lethargic
				}
			}
			add_trait = leader_trait_gale_speed
			set_timed_leader_flag = { flag = gained_leader_trait_gale_speed days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_lethargic
					has_trait = leader_trait_gale_speed
					owner = { has_valid_civic = civic_hive_one_mind }
				}
			}
			add_trait = leader_trait_lethargic
			set_timed_leader_flag = { flag = gained_leader_trait_lethargic days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_restore_point
					is_robotic_species = no
					has_synthethic_dawn = no
				}
			}
			add_trait = leader_trait_restore_point
			set_timed_leader_flag = { flag = gained_leader_trait_restore_point days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
	}
}

# leader scope
add_random_governor_leader_trait = {
	random_list = {
		# generic leader traits; NOTE: eager/newboot is purposely excluded, even in the built-in effect
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_xp_bonus_leader_trait = yes
					has_xp_penalty_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_bonus_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_resilient
					has_trait = leader_trait_substance_abuser
					is_robotic_species = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_resilient
			add_trait = leader_trait_resilient
			set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_xp_penalty_leader_trait = yes
					has_xp_bonus_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					owner = { has_valid_civic = civic_philosopher_king }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_penalty_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_substance_abuser
					has_trait = leader_trait_resilient
					is_robotic_species = yes
					species = { has_trait = trait_hive_mind }
					owner = { has_valid_civic = civic_philosopher_king }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_substance_abuser
			add_trait = leader_trait_substance_abuser
			set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_arrested_development
					owner = {
						OR = {
							has_valid_civic = civic_philosopher_king
							has_valid_civic = civic_hive_one_mind
						}
					}
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_arrested_development
			add_trait = leader_trait_arrested_development
			set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		# begin governor traits
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_corrupt
					has_trait = leader_trait_righteous
					owner = {
						OR = {
							is_gestalt = yes
							has_valid_civic = civic_philosopher_king
						}
					}
				}
			}
			add_trait = leader_trait_corrupt
			set_timed_leader_flag = { flag = gained_leader_trait_corrupt days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_righteous
					has_trait = leader_trait_corrupt
					owner = { is_gestalt = yes }
				}
			}
			add_trait = leader_trait_righteous
			set_timed_leader_flag = { flag = gained_leader_trait_righteous days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_iron_fist
					owner = {
						OR = {
							allows_slavery = no
							is_machine_empire = yes
						}
					}
				}
			}
			add_trait = leader_trait_iron_fist
			set_timed_leader_flag = { flag = gained_leader_trait_iron_fist days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				has_trait = leader_trait_architectural_interest
			}
			add_trait = leader_trait_architectural_interest
			set_timed_leader_flag = { flag = gained_leader_trait_architectural_interest days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_intellectual
					has_trait = leader_trait_analytical
				}
			}
			if = {
				limit = {
					OR = {
						is_robotic_species = no
						has_synthethic_dawn = no
					}
				}
				add_trait = leader_trait_intellectual
				set_timed_leader_flag = { flag = gained_leader_trait_intellectual days = 7 }
			}
			else = {
				add_trait = leader_trait_analytical
				set_timed_leader_flag = { flag = gained_leader_trait_analytical days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_environmental_engineer
					has_trait = leader_trait_bulldozer
				}
			}
			if = {
				limit = {
					OR = {
						is_robotic_species = no
						has_synthethic_dawn = no
					}
				}
				add_trait = leader_trait_environmental_engineer
				set_timed_leader_flag = { flag = gained_leader_trait_environmental_engineer days = 7 }
			}
			else = {
				add_trait = leader_trait_bulldozer
				set_timed_leader_flag = { flag = gained_leader_trait_bulldozer days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_army_veteran
					has_trait = leader_trait_warbot_tinkerer
					has_trait = leader_trait_retired_fleet_officer
					has_trait = leader_trait_ai_aided_design
					owner = { NOT = { has_technology = tech_centralized_command } }
				}
			}
			if = {
				limit = {
					OR = {
						is_robotic_species = no
						has_synthethic_dawn = no
					}
				}
				add_trait = leader_trait_army_veteran
				set_timed_leader_flag = { flag = gained_leader_trait_army_veteran days = 7 }
			}
			else = {
				add_trait = leader_trait_warbot_tinkerer
				set_timed_leader_flag = { flag = gained_leader_trait_warbot_tinkerer days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_retired_fleet_officer
					has_trait = leader_trait_ai_aided_design
					has_trait = leader_trait_army_veteran
					has_trait = leader_trait_warbot_tinkerer
					owner = { NOT = { has_technology = tech_interstellar_fleet_traditions } }
				}
			}
			if = {
				limit = {
					OR = {
						is_robotic_species = no
						has_synthethic_dawn = no
					}
				}
				add_trait = leader_trait_retired_fleet_officer
				set_timed_leader_flag = { flag = gained_leader_trait_retired_fleet_officer days = 7 }
			}
			else = {
				add_trait = leader_trait_ai_aided_design
				set_timed_leader_flag = { flag = gained_leader_trait_ai_aided_design days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_agrarian_upbringing
					is_lithoid = yes
					owner = {
						is_machine_empire = yes
						NOR = {
							has_valid_civic = civic_machine_assimilator
							has_valid_civic = civic_machine_servitor
						}
					}
				}
			}
			add_trait = leader_trait_agrarian_upbringing
			set_timed_leader_flag = { flag = gained_leader_trait_agrarian_upbringing days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_bureaucrat
					has_trait = leader_trait_mindfulness
					has_trait = leader_trait_amplifier
				}
			}
			if = {
				limit = { owner = { is_machine_empire = yes } }
				add_trait = leader_trait_amplifier
				set_timed_leader_flag = { flag = gained_leader_trait_amplifier days = 7 }
			}
			else_if = {
				limit = { owner = { is_hive_empire = yes } }
				add_trait = leader_trait_mindfulness
				set_timed_leader_flag = { flag = gained_leader_trait_mindfulness days = 7 }
			}
			else = {
				add_trait = leader_trait_bureaucrat
				set_timed_leader_flag = { flag = gained_leader_trait_bureaucrat days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
	}
}

# leader scope
add_random_general_leader_trait = {
	random_list = {
		# generic leader traits; NOTE: eager/newboot is purposely excluded, even in the built-in effect
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_xp_bonus_leader_trait = yes
					has_xp_penalty_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_bonus_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_resilient
					has_trait = leader_trait_substance_abuser
					is_robotic_species = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_resilient
			add_trait = leader_trait_resilient
			set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_xp_penalty_leader_trait = yes
					has_xp_bonus_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_penalty_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_substance_abuser
					has_trait = leader_trait_resilient
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_substance_abuser
			add_trait = leader_trait_substance_abuser
			set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_arrested_development
					owner = { has_valid_civic = civic_hive_one_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_ruler_trait = leader_trait_arrested_development
			add_trait = leader_trait_arrested_development
			set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		# begin general traits
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_restrained
					has_trait = leader_trait_butcher
					has_trait = leader_trait_demoralizer
					owner = { is_machine_empire = yes }
				}
			}
			add_trait = leader_trait_restrained
			set_timed_leader_flag = { flag = gained_leader_trait_restrained days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_butcher
					has_trait = leader_trait_restrained
					has_trait = leader_trait_armchair_commander
					has_trait = leader_trait_erratic_morality_core
				}
			}
			add_trait = leader_trait_butcher
			set_timed_leader_flag = { flag = gained_leader_trait_butcher days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_demoralizer
					has_trait = leader_trait_restrained
					has_trait = leader_trait_erratic_morality_core
					has_trait = leader_trait_restrained
					is_robotic_species = no
					has_synthethic_dawn = no
				}
			}
			add_trait = leader_trait_demoralizer
			set_timed_leader_flag = { flag = gained_leader_trait_demoralizer days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_charismatic
					owner = { is_gestalt = yes }
				}
			}
			add_trait = leader_trait_charismatic
			set_timed_leader_flag = { flag = gained_leader_trait_charismatic days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_glory_seeker
					has_trait = leader_trait_armchair_commander
					owner = { is_gestalt = yes }
				}
			}
			add_trait = leader_trait_glory_seeker
			set_timed_leader_flag = { flag = gained_leader_trait_glory_seeker days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
			
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_armchair_commander
					has_trait = leader_trait_erratic_morality_core
					has_trait = leader_trait_glory_seeker
					has_trait = leader_trait_butcher
					has_trait = leader_trait_demoralizer
					owner = { has_valid_civic = civic_hive_one_mind }
				}
			}
			if = {
				limit = {
					OR = {
						is_robotic_species = no
						has_synthethic_dawn = no
					}
				}
				add_trait = leader_trait_armchair_commander
				set_timed_leader_flag = { flag = gained_leader_trait_armchair_commander days = 7 }
			}
			else = {
				add_trait = leader_trait_erratic_morality_core
				set_timed_leader_flag = { flag = gained_leader_trait_erratic_morality_core days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_army_logistician
					has_trait = leader_trait_parts_cannibalizer
				}
			}
			if = {
				limit = {
					OR = {
						is_robotic_species = no
						has_synthethic_dawn = no
					}
				}
				add_trait = leader_trait_army_logistician
				set_timed_leader_flag = { flag = gained_leader_trait_army_logistician days = 7 }
			}
			else = {
				add_trait = leader_trait_parts_cannibalizer
				set_timed_leader_flag = { flag = gained_leader_trait_parts_cannibalizer days = 7 }
			}
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
	}
}

# leader scope
add_random_ruler_leader_trait = {
	random_list = {
		# generic leader traits; NOTE: eager/newboot is purposely excluded, even in the built-in effect
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_xp_bonus_leader_trait = yes
					has_xp_penalty_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_bonus_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_trait = leader_trait_resilient
					has_trait = leader_trait_substance_abuser
					is_robotic_species = yes
					species = { has_trait = trait_hive_mind }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_trait = leader_trait_resilient
			set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_xp_penalty_leader_trait = yes
					has_xp_bonus_leader_trait = yes
					species = { has_trait = trait_hive_mind }
					owner = { has_valid_civic = civic_philosopher_king }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_xp_penalty_leader_trait = yes
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_substance_abuser
					has_trait = leader_trait_resilient
					species = { has_trait = trait_hive_mind }
					owner = { has_valid_civic = civic_philosopher_king }
					has_leader_flag = suppress_generic_traits
				}
			}
			add_trait = leader_trait_substance_abuser
			set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_skill <= 1
					has_trait = leader_trait_arrested_development
					owner = {
						OR = {
							has_valid_civic = civic_philosopher_king
							has_valid_civic = civic_hive_one_mind
						}
					}
					has_leader_flag = suppress_generic_traits
				}
			}
			add_trait = leader_trait_arrested_development
			set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		# begin ruler traits
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_corvette_focus
					has_trait = trait_ruler_corvette_focus
					has_ruler_trait = trait_ruler_destroyer_focus
					has_trait = trait_ruler_destroyer_focus
					has_ruler_trait = trait_ruler_cruiser_focus
					has_trait = trait_ruler_cruiser_focus
					has_ruler_trait = trait_ruler_battleship_focus
					has_trait = trait_ruler_battleship_focus
				}
				owner = { NOT = { has_technology = tech_destroyers } }
			}
			add_ruler_trait = trait_ruler_corvette_focus
			set_timed_leader_flag = { flag = gained_trait_ruler_corvette_focus days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
					OR = {
						has_ruler_trait = trait_ruler_corvette_focus
						has_trait = trait_ruler_corvette_focus
						has_ruler_trait = trait_ruler_destroyer_focus
						has_trait = trait_ruler_destroyer_focus
						has_ruler_trait = trait_ruler_cruiser_focus
						has_trait = trait_ruler_cruiser_focus
						has_ruler_trait = trait_ruler_battleship_focus
						has_trait = trait_ruler_battleship_focus
					}
					owner = { NOT = { has_technology = tech_destroyers } }
			}
			add_ruler_trait = trait_ruler_destroyer_focus
			set_timed_leader_flag = { flag = gained_trait_ruler_destroyer_focus days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_corvette_focus
					has_trait = trait_ruler_corvette_focus
					has_ruler_trait = trait_ruler_destroyer_focus
					has_trait = trait_ruler_destroyer_focus
					has_ruler_trait = trait_ruler_cruiser_focus
					has_trait = trait_ruler_cruiser_focus
					has_ruler_trait = trait_ruler_battleship_focus
					has_trait = trait_ruler_battleship_focus
				}
				owner = { NOT = { has_technology = tech_cruisers } }
			}
			add_ruler_trait = trait_ruler_cruiser_focus
			set_timed_leader_flag = { flag = gained_trait_ruler_cruiser_focus days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
					OR = {
						has_ruler_trait = trait_ruler_corvette_focus
						has_trait = trait_ruler_corvette_focus
						has_ruler_trait = trait_ruler_destroyer_focus
						has_trait = trait_ruler_destroyer_focus
						has_ruler_trait = trait_ruler_cruiser_focus
						has_trait = trait_ruler_cruiser_focus
						has_ruler_trait = trait_ruler_battleship_focus
						has_trait = trait_ruler_battleship_focus
					}
					owner = { NOT = { has_technology = tech_battleships } }
			}
			add_ruler_trait = trait_ruler_battleship_focus
			set_timed_leader_flag = { flag = gained_trait_ruler_battleship_focus days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
				has_ruler_trait = trait_ruler_recruiter
					has_trait = trait_ruler_recruiter
					owner = { NOT = { has_technology = tech_centralized_command } }
				}
			}
			add_ruler_trait = trait_ruler_recruiter
			set_timed_leader_flag = { flag = gained_trait_ruler_recruiter days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_from_the_ranks
					has_trait = trait_ruler_from_the_ranks
					owner = { NOT = { has_technology = tech_centralized_command } }
				}
			}
			add_ruler_trait = trait_ruler_from_the_ranks
			set_timed_leader_flag = { flag = gained_trait_ruler_from_the_ranks days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_fortifier
					has_trait = trait_ruler_fortifier
					owner = { NOT = { has_technology = tech_space_defense_station_1 } }
				}
			}
			add_ruler_trait = trait_ruler_fortifier
			set_timed_leader_flag = { flag = gained_trait_ruler_fortifier days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_logistic_understanding
					has_trait = trait_ruler_logistic_understanding
					owner = { NOT = { has_technology = tech_doctrine_navy_size_1 } }
				}
			}
			add_ruler_trait = trait_ruler_logistic_understanding
			set_timed_leader_flag = { flag = gained_trait_ruler_logistic_understanding days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_military_pioneer
					has_trait = trait_ruler_military_pioneer
					owner = { NOT = { has_technology = tech_refit_standards } }
				}
			}
			add_ruler_trait = trait_ruler_military_pioneer
			set_timed_leader_flag = { flag = gained_trait_ruler_military_pioneer days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_warlike
					has_trait = trait_ruler_warlike
				}
			}
			add_ruler_trait = trait_ruler_warlike
			set_timed_leader_flag = { flag = gained_trait_ruler_warlike days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_architectural_sense
					has_trait = trait_ruler_architectural_sense
				}
			}
			add_ruler_trait = trait_ruler_architectural_sense
			set_timed_leader_flag = { flag = gained_trait_ruler_architectural_sense days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_frontier_spirit
					has_trait = trait_ruler_frontier_spirit
					owner = { NOT = { has_technology = tech_colonization_1 } }
				}
			}
			add_ruler_trait = trait_ruler_frontier_spirit
			set_timed_leader_flag = { flag = gained_trait_ruler_frontier_spirit days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_world_shaper
					has_trait = trait_ruler_world_shaper
					owner = { NOT = { has_technology = tech_terrestrial_sculpting } }
				}
			}
			add_ruler_trait = trait_ruler_world_shaper
			set_timed_leader_flag = { flag = gained_trait_ruler_world_shaper days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_home_in_the_sky
					has_trait = trait_ruler_home_in_the_sky
				}
			}
			add_ruler_trait = trait_ruler_home_in_the_sky
			set_timed_leader_flag = { flag = gained_trait_ruler_home_in_the_sky days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_industrialist
					has_trait = trait_ruler_industrialist
				}
			}
			add_ruler_trait = trait_ruler_industrialist
			set_timed_leader_flag = { flag = gained_trait_ruler_industrialist days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		100 = { # yes the default file weights this one a lot higher
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_eye_for_talent
					has_trait = trait_ruler_eye_for_talent
					owner = { NOT = { has_technology = tech_galactic_administration } }
				}
			}
			add_ruler_trait = trait_ruler_eye_for_talent
			set_timed_leader_flag = { flag = gained_trait_ruler_eye_for_talent days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_deep_connections
					has_trait = trait_ruler_deep_connections
					owner = { NOT = { has_technology = tech_planetary_unification } }
				}
			}
			add_ruler_trait = trait_ruler_deep_connections
			set_timed_leader_flag = { flag = gained_trait_ruler_deep_connections days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_champion_of_the_people
					has_trait = trait_ruler_champion_of_the_people
				}
			}
			add_ruler_trait = trait_ruler_champion_of_the_people
			set_timed_leader_flag = { flag = gained_trait_ruler_champion_of_the_people days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_expansionist
					has_trait = trait_ruler_expansionist
				}
			}
			add_ruler_trait = trait_ruler_expansionist
			set_timed_leader_flag = { flag = gained_trait_ruler_expansionist days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_fertility_preacher
					has_trait = trait_ruler_fertility_preacher
				}
			}
			add_ruler_trait = trait_ruler_fertility_preacher
			set_timed_leader_flag = { flag = gained_trait_ruler_fertility_preacher days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_investor
					has_trait = trait_ruler_investor
				}
			}
			add_ruler_trait = trait_ruler_investor
			set_timed_leader_flag = { flag = gained_trait_ruler_investor days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_space_miner
					has_trait = trait_ruler_space_miner
				}
			}
			add_ruler_trait = trait_ruler_space_miner
			set_timed_leader_flag = { flag = gained_trait_ruler_space_miner days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_explorer
					has_trait = trait_ruler_explorer
				}
			}
			add_ruler_trait = trait_ruler_explorer
			set_timed_leader_flag = { flag = gained_trait_ruler_explorer days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = trait_ruler_charismatic
					has_trait = trait_ruler_charismatic
				}
			}
			add_ruler_trait = trait_ruler_charismatic
			set_timed_leader_flag = { flag = gained_trait_ruler_charismatic days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = leader_trait_fleet_organizer
					has_trait = leader_trait_fleet_organizer
					has_trait = leader_trait_nervous
					owner = { NOT = { has_technology = tech_doctrine_fleet_size_2 } }
				}
			}
			add_ruler_trait = leader_trait_fleet_organizer
			set_timed_leader_flag = { flag = gained_leader_trait_fleet_organizer days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
		5 = {
			modifier = {
				factor = 0
				OR = {
					has_ruler_trait = leader_trait_reformer
					has_trait = leader_trait_reformer
				}
			}
			add_ruler_trait = leader_trait_reformer
			set_timed_leader_flag = { flag = gained_leader_trait_reformer days = 7 }
			set_timed_leader_flag = { flag = has_gained_trait days = 7 }
		}
	}
}

# leader scope
add_xp_bonus_leader_trait = {
	if = {
		limit = {
			OR = {
				is_robotic_species = no
				has_synthethic_dawn = no
			}
		}
		add_ruler_trait = leader_trait_adaptable
		if = {
			limit = { NOT = { leader_class = ruler } }
			add_trait = leader_trait_adaptable
		}
		set_timed_leader_flag = { flag = gained_leader_trait_adaptable days = 7 }
	}
	else = {
		add_ruler_trait = leader_trait_flexible_programming
		if = {
			limit = { NOT = { leader_class = ruler } }
			add_trait = leader_trait_flexible_programming
		}
		set_timed_leader_flag = { flag = gained_leader_trait_flexible_programming days = 7 }
	}
	set_timed_leader_flag = { flag = has_gained_trait days = 7 }
}

# leader scope
add_xp_penalty_leader_trait = {
	if = {
		limit = {
			OR = {
				is_robotic_species = no
				has_synthethic_dawn = no
			}
		}
		add_ruler_trait = leader_trait_stubborn
		if = {
			limit = { NOT = { leader_class = ruler } }
			add_trait = leader_trait_stubborn
		}
		set_timed_leader_flag = { flag = gained_leader_trait_stubborn days = 7 }
	}
	else = {
		add_ruler_trait = leader_trait_rigid_programming
		if = {
			limit = { NOT = { leader_class = ruler } }
			add_trait = leader_trait_rigid_programming
		}
		set_timed_leader_flag = { flag = gained_leader_trait_rigid_programming days = 7 }
	}
	set_timed_leader_flag = { flag = has_gained_trait days = 7 }
}

# leader scope
ensure_appropriate_leader_traits = {
	if = {
		limit = { is_robotic_species = no }
		swap_leader_traits_machine_to_organic = yes
	}
	else_if = {
		limit = { has_synthethic_dawn = yes }
		swap_leader_traits_organic_to_machine = yes
	}
	remove_invalid_leader_traits = yes
	ensure_minimum_one_random_trait = yes
	resolve_conflicting_leader_traits = yes
	replace_ruler_generic_leader_traits_for_leaders_without_matching_regular_trait = yes
	add_ruler_generic_leader_traits_for_leaders_with_matching_regular_trait = yes
	resolve_conflicting_leader_traits = yes # call a second time in case adding ruler traits created a conflict
	convert_bureaucrat_leader_traits = yes
}

# leader scope
ensure_appropriate_leader_traits_demoted_ruler = {
	if = {
		limit = { is_robotic_species = no }
		swap_leader_traits_machine_to_organic = yes
	}
	else_if = {
		limit = { has_synthethic_dawn = yes }
		swap_leader_traits_organic_to_machine = yes
	}
	remove_invalid_leader_traits = yes
	set_timed_leader_flag = {
		flag = suppress_generic_traits
		days = 7
	}
	ensure_minimum_one_random_trait = yes
	# because the leader was previously a ruler, we do actually want to keep their generic ruler traits
	add_generic_leader_traits_for_leaders_with_matching_ruler_trait = yes
	resolve_conflicting_leader_traits = yes
	convert_bureaucrat_leader_traits = yes
}

# leader scope
swap_leader_traits_organic_to_machine = {
	if = {
		limit = { has_synthethic_dawn = yes }
		if = {
			limit = { has_trait = leader_trait_adaptable }
			remove_trait = leader_trait_adaptable
			add_trait = leader_trait_flexible_programming
		}
		if = {
			limit = { has_ruler_trait = leader_trait_adaptable }
			remove_ruler_trait = leader_trait_adaptable
			add_ruler_trait = leader_trait_flexible_programming
		}
		if = {
			limit = { has_trait = leader_trait_stubborn }
			remove_trait = leader_trait_stubborn
			add_trait = leader_trait_rigid_programming
		}
		if = {
			limit = { has_ruler_trait = leader_trait_stubborn }
			remove_ruler_trait = leader_trait_stubborn
			add_ruler_trait = leader_trait_rigid_programming
		}
		if = {
			limit = { has_trait = leader_trait_eager }
			remove_trait = leader_trait_eager
			add_trait = leader_trait_newboot
		}
		if = {
			limit = { has_trait = leader_trait_army_veteran }
			remove_trait = leader_trait_army_veteran
			add_trait = leader_trait_warbot_tinkerer
		}
		if = {
			limit = { has_trait = leader_trait_retired_fleet_officer }
			remove_trait = leader_trait_retired_fleet_officer
			add_trait = leader_trait_ai_aided_design
		}
		if = {
			limit = { has_trait = leader_trait_environmental_engineer }
			remove_trait = leader_trait_environmental_engineer
			add_trait = leader_trait_bulldozer
		}
		if = {
			limit = { has_trait = leader_trait_intellectual }
			remove_trait = leader_trait_intellectual
			add_trait = leader_trait_analytical
		}
		if = {
			limit = { has_trait = leader_trait_army_logistician }
			remove_trait = leader_trait_army_logistician
			add_trait = leader_trait_parts_cannibalizer
		}
		if = {
			limit = { has_trait = leader_trait_armchair_commander }
			remove_trait = leader_trait_armchair_commander
			add_trait = leader_trait_erratic_morality_core
		}
		if = {
			limit = { has_trait = leader_trait_fleet_logistician }
			remove_trait = leader_trait_fleet_logistician
			add_trait = leader_trait_maintenance_loop
		}
		if = {
			limit = { has_trait = leader_trait_nervous }
			remove_trait = leader_trait_nervous
			add_trait = leader_trait_unstable_code_base
		}
		if = {
			limit = { has_trait = leader_trait_roamer }
			remove_trait = leader_trait_roamer
			add_trait = leader_trait_cataloger
		}
	}
}

# leader scope
swap_leader_traits_machine_to_organic = {
	if = {
		limit = { has_trait = leader_trait_flexible_programming }
		remove_trait = leader_trait_flexible_programming
		add_trait = leader_trait_adaptable
	}
	if = {
		limit = { has_ruler_trait = leader_trait_flexible_programming }
		remove_ruler_trait = leader_trait_flexible_programming
		add_ruler_trait = leader_trait_adaptable
	}
	if = {
		limit = { has_trait = leader_trait_rigid_programming }
		remove_trait = leader_trait_rigid_programming
		add_trait = leader_trait_stubborn
	}
	if = {
		limit = { has_ruler_trait = leader_trait_rigid_programming }
		remove_ruler_trait = leader_trait_rigid_programming
		add_ruler_trait = leader_trait_stubborn
	}
	if = {
		limit = { has_trait = leader_trait_newboot }
		remove_trait = leader_trait_newboot
		add_trait = leader_trait_eager
	}
	if = {
		limit = { has_trait = leader_trait_warbot_tinkerer }
		remove_trait = leader_trait_warbot_tinkerer
		add_trait = leader_trait_army_veteran
	}
	if = {
		limit = { has_trait = leader_trait_ai_aided_design }
		remove_trait = leader_trait_ai_aided_design
		add_trait = leader_trait_retired_fleet_officer
	}
	if = {
		limit = { has_trait = leader_trait_bulldozer }
		remove_trait = leader_trait_bulldozer
		add_trait = leader_trait_environmental_engineer
	}
	if = {
		limit = { has_trait = leader_trait_analytical }
		remove_trait = leader_trait_analytical
		add_trait = leader_trait_intellectual
	}
	if = {
		limit = { has_trait = leader_trait_parts_cannibalizer }
		remove_trait = leader_trait_parts_cannibalizer
		add_trait = leader_trait_army_logistician
	}
	if = {
		limit = { has_trait = leader_trait_erratic_morality_core }
		remove_trait = leader_trait_erratic_morality_core
		add_trait = leader_trait_armchair_commander
	}
	if = {
		limit = { has_trait = leader_trait_maintenance_loop }
		remove_trait = leader_trait_maintenance_loop
		add_trait = leader_trait_fleet_logistician
	}
	if = {
		limit = { has_trait = leader_trait_unstable_code_base }
		remove_trait = leader_trait_unstable_code_base
		add_trait = leader_trait_nervous
	}
	if = {
		limit = { has_trait = leader_trait_cataloger }
		remove_trait = leader_trait_cataloger
		add_trait = leader_trait_roamer
	}
}

# leader scope - run after species change and after any trait conversion
remove_invalid_leader_traits = {
	# if you got one that your tech doesn't allow, you can keep it
	# this is just concerned with removing archetype-type inappropriate traits
	if = {
		limit = { is_robotic_species = no }
		# remove robotic traits
		if = {
			limit = { has_trait = leader_trait_ruler_machine_intelligence }
			remove_trait = leader_trait_ruler_machine_intelligence
		}
		if = {
			limit = { has_ruler_trait = leader_trait_ruler_machine_intelligence }
			remove_ruler_trait = leader_trait_ruler_machine_intelligence
		}
		if = {
			limit = { has_trait = leader_trait_flexible_programming }
			remove_trait = leader_trait_flexible_programming
		}
		if = {
			limit = { has_ruler_trait = leader_trait_flexible_programming }
			remove_ruler_trait = leader_trait_flexible_programming
		}
		if = {
			limit = { has_trait = leader_trait_rigid_programming }
			remove_trait = leader_trait_rigid_programming
		}
		if = {
			limit = { has_ruler_trait = leader_trait_rigid_programming }
			remove_ruler_trait = leader_trait_rigid_programming
		}
		if = {
			limit = { has_trait = leader_trait_newboot }
			remove_trait = leader_trait_newboot
		}
		if = {
			limit = { has_trait = leader_trait_warbot_tinkerer }
			remove_trait = leader_trait_warbot_tinkerer
		}
		if = {
			limit = { has_trait = leader_trait_ai_aided_design }
			remove_trait = leader_trait_ai_aided_design
		}
		if = {
			limit = { has_trait = leader_trait_bulldozer }
			remove_trait = leader_trait_bulldozer
		}
		if = {
			limit = { has_trait = leader_trait_analytical }
			remove_trait = leader_trait_analytical
		}
		if = {
			limit = { has_trait = leader_trait_parts_cannibalizer }
			remove_trait = leader_trait_parts_cannibalizer
		}
		if = {
			limit = { has_trait = leader_trait_erratic_morality_core }
			remove_trait = leader_trait_erratic_morality_core
		}
		if = {
			limit = { has_trait = leader_trait_maintenance_loop }
			remove_trait = leader_trait_maintenance_loop
		}
		if = {
			limit = { has_trait = leader_trait_unstable_code_base }
			remove_trait = leader_trait_unstable_code_base
		}
		if = {
			limit = { has_trait = leader_trait_cataloger }
			remove_trait = leader_trait_cataloger
		}
		if = {
			limit = { has_trait = leader_trait_restore_point }
			remove_trait = leader_trait_restore_point
		}
	}
	else = {
		if = {
			limit = { has_trait = leader_trait_resilient }
			remove_trait = leader_trait_resilient
		}
		if = {
			limit = { has_ruler_trait = leader_trait_resilient }
			remove_ruler_trait = leader_trait_resilient
		}
		if = {
			limit = { has_trait = leader_trait_shroud_age }
			remove_trait = leader_trait_shroud_age
		}
		if = {
			limit = { has_ruler_trait = leader_trait_shroud_age }
			remove_ruler_trait = leader_trait_shroud_age
		}
		if = {
			limit = { has_trait = leader_trait_substance_abuser }
			remove_trait = leader_trait_substance_abuser
		}
		if = {
			limit = { has_ruler_trait = leader_trait_substance_abuser }
			remove_ruler_trait = leader_trait_substance_abuser
		}
		if = {
			limit = { has_trait = leader_trait_maimed }
			remove_trait = leader_trait_maimed
		}
		if = {
			limit = { has_ruler_trait = leader_trait_maimed }
			remove_ruler_trait = leader_trait_maimed
		}
		# only purge bio traits if they have syndaw installed - otherwise we'll just be leaving them with traitless leaders
		if = {
			limit = { has_synthethic_dawn = yes }
			if = {
				limit = { has_trait = leader_trait_adaptable }
				remove_trait = leader_trait_adaptable
			}
			if = {
				limit = { has_ruler_trait = leader_trait_adaptable }
				remove_ruler_trait = leader_trait_adaptable
			}
			if = {
				limit = { has_trait = leader_trait_stubborn }
				remove_trait = leader_trait_stubborn
			}
			if = {
				limit = { has_ruler_trait = leader_trait_stubborn }
				remove_ruler_trait = leader_trait_stubborn
			}
			if = {
				limit = { has_trait = leader_trait_eager }
				remove_trait = leader_trait_eager
			}
			if = {
				limit = { has_trait = leader_trait_army_veteran }
				remove_trait = leader_trait_army_veteran
			}
			if = {
				limit = { has_trait = leader_trait_retired_fleet_officer }
				remove_trait = leader_trait_retired_fleet_officer
			}
			if = {
				limit = { has_trait = leader_trait_environmental_engineer }
				remove_trait = leader_trait_environmental_engineer
			}
			if = {
				limit = { has_trait = leader_trait_intellectual }
				remove_trait = leader_trait_intellectual
			}
			if = {
				limit = { has_trait = leader_trait_army_logistician }
				remove_trait = leader_trait_army_logistician
			}
			if = {
				limit = { has_trait = leader_trait_armchair_commander }
				remove_trait = leader_trait_armchair_commander
			}
			if = {
				limit = { has_trait = leader_trait_fleet_logistician }
				remove_trait = leader_trait_fleet_logistician
			}
			if = {
				limit = { has_trait = leader_trait_nervous }
				remove_trait = leader_trait_nervous
			}
			if = {
				limit = { has_trait = leader_trait_roamer }
				remove_trait = leader_trait_roamer
			}
		}
	}

	# remove philosopher king traits
	if = {
		limit = {
			OR = {
				leader_class = governor
				leader_class = ruler
			}
			owner = { has_valid_civic = civic_philosopher_king }
		}
		if = {
			limit = { has_trait = leader_trait_stubborn }
			remove_trait = leader_trait_stubborn
		}
		if = {
			limit = { has_ruler_trait = leader_trait_stubborn }
			remove_ruler_trait = leader_trait_stubborn
		}
		if = {
			limit = { has_trait = leader_trait_rigid_programming }
			remove_trait = leader_trait_rigid_programming
		}
		if = {
			limit = { has_ruler_trait = leader_trait_rigid_programming }
			remove_ruler_trait = leader_trait_rigid_programming
		}
		if = {
			limit = { has_trait = leader_trait_substance_abuser }
			remove_trait = leader_trait_substance_abuser
		}
		if = {
			limit = { has_ruler_trait = leader_trait_substance_abuser }
			remove_ruler_trait = leader_trait_substance_abuser
		}
		if = {
			limit = { has_trait = leader_trait_arrested_development }
			remove_trait = leader_trait_arrested_development
		}
		if = {
			limit = { has_ruler_trait = leader_trait_arrested_development }
			remove_ruler_trait = leader_trait_arrested_development
		}
		if = {
			limit = { has_trait = leader_trait_corrupt }
			remove_trait = leader_trait_corrupt
		}
	}

	# remove one mind traits
	if = {
		limit = { owner = { has_valid_civic = civic_hive_one_mind } }
		if = {
			limit = { has_trait = leader_trait_arrested_development }
			remove_trait = leader_trait_arrested_development
		}
		if = {
			limit = { has_ruler_trait = leader_trait_arrested_development }
			remove_ruler_trait = leader_trait_arrested_development
		}
		if = {
			limit = { has_trait = leader_trait_lethargic }
			remove_trait = leader_trait_lethargic
		}
		if = {
			limit = { has_trait = leader_trait_armchair_commander }
			remove_trait = leader_trait_armchair_commander
		}
		if = {
			limit = { has_trait = leader_trait_erratic_morality_core }
			remove_trait = leader_trait_erratic_morality_core
		}
		if = {
			limit = { has_trait = leader_trait_paranoid }
			remove_trait = leader_trait_paranoid
		}
	}

	if = {
		limit = { owner = { is_hive_empire = yes } }
		if = {
			limit = { has_trait = leader_trait_stubborn }
			remove_trait = leader_trait_stubborn
		}
		if = {
			limit = { has_ruler_trait = leader_trait_stubborn }
			remove_ruler_trait = leader_trait_stubborn
		}
		if = {
			limit = { has_trait = leader_trait_rigid_programming }
			remove_trait = leader_trait_rigid_programming
		}
		if = {
			limit = { has_ruler_trait = leader_trait_rigid_programming }
			remove_ruler_trait = leader_trait_rigid_programming
		}
		if = {
			limit = { has_trait = leader_trait_substance_abuser }
			remove_trait = leader_trait_substance_abuser
		}
		if = {
			limit = { has_ruler_trait = leader_trait_substance_abuser }
			remove_ruler_trait = leader_trait_substance_abuser
		}
	}

	if = {
		limit = {
			owner = { is_machine_empire = no }
			has_ruler_trait = leader_trait_ruler_machine_intelligence
		}
		remove_ruler_trait = leader_trait_ruler_machine_intelligence
	}

	if = {
		limit = {
			owner = { is_hive_empire = no }
			has_ruler_trait = leader_trait_ruler_hive_mind
		}
		remove_ruler_trait = leader_trait_ruler_hive_mind
	}

	if = {
		limit = { owner = { is_gestalt = yes } }
		if = {
			limit = { has_trait = leader_trait_iron_fist }
			remove_trait = leader_trait_iron_fist
		}
		if = {
			limit = { has_trait = leader_trait_custom_AI_assistant }
			remove_trait = leader_trait_custom_AI_assistant
		}
		if = {
			limit = { has_trait = leader_trait_sapient_AI_assistant }
			remove_trait = leader_trait_sapient_AI_assistant
		}
		if = {
			limit = { has_trait = leader_trait_righteous }
			remove_trait = leader_trait_righteous
		}
		if = {
			limit = { has_trait = leader_trait_corrupt }
			remove_trait = leader_trait_corrupt
		}
	}
}

# leader scope
ensure_minimum_one_random_trait = {
	set_variable = {
		which = species_leader_trait_accumulator
		value = 1
	}
	if = {
		limit = { is_leader_brainslugged = yes }
		change_variable = {
			which = species_leader_trait_accumulator
			value = 1
		}
	}
	if = {
		limit = { is_leader_psionic = yes }
		change_variable = {
			which = species_leader_trait_accumulator
			value = 1
		}
	}
	if = {
		limit = { is_leader_chosen = yes }
		change_variable = {
			which = species_leader_trait_accumulator
			value = 1
		}
	}
	if = {
		limit = { is_leader_erudite = yes }
		change_variable = {
			which = species_leader_trait_accumulator
			value = 1
		}
	}
	if = {
		limit = { is_leader_cyborg = yes }
		change_variable = {
			which = species_leader_trait_accumulator
			value = 1
		}
	}
	if = {
		limit = { is_leader_synthetic = yes }
		change_variable = {
			which = species_leader_trait_accumulator
			value = 1
		}
	}

	# if we ever get the ability to export triggers or compare them to variables, this can be simplified
	if = {
		limit = {
			check_variable = {
				which = species_leader_trait_accumulator
				value = 7
			}
		}
		while = {
			limit = { num_traits < 7 }
			add_random_leader_trait_inner = yes
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = species_leader_trait_accumulator
				value = 6
			}
		}
		while = {
			limit = { num_traits < 6 }
			add_random_leader_trait_inner = yes
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = species_leader_trait_accumulator
				value = 5
			}
		}
		while = {
			limit = { num_traits < 5 }
			add_random_leader_trait_inner = yes
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = species_leader_trait_accumulator
				value = 4
			}
		}
		while = {
			limit = { num_traits < 4 }
			add_random_leader_trait_inner = yes
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = species_leader_trait_accumulator
				value = 3
			}
		}
		while = {
			limit = { num_traits < 3 }
			add_random_leader_trait_inner = yes
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = species_leader_trait_accumulator
				value = 2
			}
		}
		while = {
			limit = { num_traits < 2 }
			add_random_leader_trait_inner = yes
		}
	}
	else_if = {
		limit = { num_traits < 1 }
		add_random_leader_trait_inner = yes
	}

	clear_variable = species_leader_trait_accumulator
}

# leader scope
resolve_conflicting_leader_traits = {
	# organic/universal traits
	if = {
		limit = {
			has_trait = leader_trait_resilient
			has_trait = leader_trait_substance_abuser
		}
		remove_trait = leader_trait_substance_abuser
	}
	if = {
		limit = {
			has_ruler_trait = leader_trait_resilient
			has_ruler_trait = leader_trait_substance_abuser
		}
		remove_ruler_trait = leader_trait_substance_abuser
	}
	if = {
		limit = {
			has_trait = leader_trait_adaptable
			has_trait = leader_trait_stubborn
		}
		remove_trait = leader_trait_stubborn
	}
	if = {
		limit = {
			has_ruler_trait = leader_trait_adaptable
			has_ruler_trait = leader_trait_stubborn
		}
		remove_ruler_trait = leader_trait_stubborn
	}
	if = {
		limit = {
			has_trait = leader_trait_custom_AI_assistant
			has_trait = leader_trait_sapient_AI_assistant
		}
		remove_trait = leader_trait_custom_AI_assistant
	}
	if = {
		limit = {
			has_trait = leader_trait_unyielding
			has_trait = leader_trait_nervous
		}
		remove_trait = leader_trait_nervous
	}
	if = {
		limit = {
			has_trait = leader_trait_gale_speed
			has_trait = leader_trait_lethargic
		}
		remove_trait = leader_trait_lethargic
	}
	if = {
		limit = {
			has_trait = leader_trait_army_veteran
			has_trait = leader_trait_retired_fleet_officer
		}
		remove_trait = leader_trait_army_veteran
	}
	if = {
		limit = {
			has_trait = leader_trait_corrupt
			has_trait = leader_trait_righteous
		}
		remove_trait = leader_trait_corrupt
	}
	if = {
		limit = {
			OR = {
				has_trait = leader_trait_butcher
				has_trait = leader_trait_glory_seeker
				has_trait = leader_trait_demoralizer
			}
			has_trait = leader_trait_armchair_commander
		}
		remove_trait = leader_trait_armchair_commander
	}
	# robotic traits
	if = {
		limit = {
			has_trait = leader_trait_flexible_programming
			has_trait = leader_trait_rigid_programming
		}
		remove_trait = leader_trait_rigid_programming
	}
	if = {
		limit = {
			has_ruler_trait = leader_trait_flexible_programming
			has_ruler_trait = leader_trait_rigid_programming
		}
		remove_ruler_trait = leader_trait_rigid_programming
	}
	if = {
		limit = {
			has_trait = leader_trait_warbot_tinkerer
			has_trait = leader_trait_ai_aided_design
		}
		remove_trait = leader_trait_warbot_tinkerer
	}
	if = {
		limit = {
			has_trait = leader_trait_unyielding
			has_trait = leader_trait_unstable_code_base
		}
		remove_trait = leader_trait_unstable_code_base
	}
	if = {
		limit = {
			OR = {
				has_trait = leader_trait_butcher
				has_trait = leader_trait_glory_seeker
				has_trait = leader_trait_demoralizer
			}
			has_trait = leader_trait_erratic_morality_core
		}
		remove_trait = leader_trait_erratic_morality_core
	}
}

# leader scope
replace_ruler_generic_leader_traits_for_leaders_without_matching_regular_trait = {
	if = {
		limit = { NOT = { leader_class = ruler } }
		if = {
			limit = {
				has_ruler_trait = leader_trait_adaptable
				NOT = { has_trait = leader_trait_adaptable }
			}
			set_timed_leader_flag = {
				flag = suppress_generic_traits
				days = 7
			}
			remove_ruler_trait = leader_trait_adaptable
			add_random_ruler_leader_trait = yes
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_flexible_programming
				NOT = { has_trait = leader_trait_flexible_programming }
			}
			set_timed_leader_flag = {
				flag = suppress_generic_traits
				days = 7
			}
			remove_ruler_trait = leader_trait_flexible_programming
			add_random_ruler_leader_trait = yes
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_stubborn
				NOT = { has_trait = leader_trait_stubborn }
			}
			set_timed_leader_flag = {
				flag = suppress_generic_traits
				days = 7
			}
			remove_ruler_trait = leader_trait_stubborn
			add_random_ruler_leader_trait = yes
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_rigid_programming
				NOT = { has_trait = leader_trait_rigid_programming }
			}
			set_timed_leader_flag = {
				flag = suppress_generic_traits
				days = 7
			}
			remove_ruler_trait = leader_trait_rigid_programming
			add_random_ruler_leader_trait = yes
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_resilient
				NOT = { has_trait = leader_trait_resilient }
			}
			set_timed_leader_flag = {
				flag = suppress_generic_traits
				days = 7
			}
			remove_ruler_trait = leader_trait_resilient
			add_random_ruler_leader_trait = yes
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_substance_abuser
				NOT = { has_trait = leader_trait_substance_abuser }
			}
			set_timed_leader_flag = {
				flag = suppress_generic_traits
				days = 7
			}
			remove_ruler_trait = leader_trait_substance_abuser
			add_random_ruler_leader_trait = yes
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_arrested_development
				NOT = { has_trait = leader_trait_arrested_development }
			}
			set_timed_leader_flag = {
				flag = suppress_generic_traits
				days = 7
			}
			remove_ruler_trait = leader_trait_arrested_development
			add_random_ruler_leader_trait = yes
		}
	}
}

# leader scope
add_generic_leader_traits_for_leaders_with_matching_ruler_trait = {
	if = {
		limit = { NOT = { leader_class = ruler } }
		if = {
			limit = {
				has_ruler_trait = leader_trait_adaptable
				NOT = { has_trait = leader_trait_adaptable }
			}
			add_trait = leader_trait_adaptable
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_flexible_programming
				NOT = { has_trait = leader_trait_flexible_programming }
			}
			add_trait = leader_trait_flexible_programming
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_stubborn
				NOT = { has_trait = leader_trait_stubborn }
			}
			add_trait = leader_trait_stubborn
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_rigid_programming
				NOT = { has_trait = leader_trait_rigid_programming }
			}
			add_trait = leader_trait_rigid_programming
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_resilient
				NOT = { has_trait = leader_trait_resilient }
			}
			add_trait = leader_trait_resilient
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_substance_abuser
				NOT = { has_trait = leader_trait_substance_abuser }
			}
			add_trait = leader_trait_substance_abuser
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_arrested_development
				NOT = { has_trait = leader_trait_arrested_development }
			}
			add_trait = leader_trait_arrested_development
		}
		if = {
			limit = {
				has_ruler_trait = leader_trait_maimed
				NOT = { has_trait = leader_trait_maimed }
			}
			add_trait = leader_trait_maimed
		}
	}
}

# leader scope
add_ruler_generic_leader_traits_for_leaders_with_matching_regular_trait = {
	if = {
		limit = { NOT = { leader_class = ruler } }
		if = {
			limit = {
				NOT = { has_ruler_trait = leader_trait_adaptable }
				has_trait = leader_trait_adaptable
			}
			add_ruler_trait = leader_trait_adaptable
		}
		if = {
			limit = {
				NOT = { has_ruler_trait = leader_trait_flexible_programming }
				has_trait = leader_trait_flexible_programming
			}
			add_ruler_trait = leader_trait_flexible_programming
		}
		if = {
			limit = {
				NOT = { has_ruler_trait = leader_trait_stubborn }
				has_trait = leader_trait_stubborn
			}
			add_ruler_trait = leader_trait_stubborn
		}
		if = {
			limit = {
				NOT = { has_ruler_trait = leader_trait_rigid_programming }
				has_trait = leader_trait_rigid_programming
			}
			add_ruler_trait = leader_trait_rigid_programming
		}
		if = {
			limit = {
				NOT = { has_ruler_trait = leader_trait_resilient }
				has_trait = leader_trait_resilient
			}
			add_ruler_trait = leader_trait_resilient
		}
		if = {
			limit = {
				NOT = { has_ruler_trait = leader_trait_substance_abuser }
				has_trait = leader_trait_substance_abuser
			}
			add_ruler_trait = leader_trait_substance_abuser
		}
		if = {
			limit = {
				NOT = { has_ruler_trait = leader_trait_arrested_development }
				has_trait = leader_trait_arrested_development
			}
			add_ruler_trait = leader_trait_arrested_development
		}
		if = {
			limit = {
				NOT = { has_ruler_trait = leader_trait_maimed }
				has_trait = leader_trait_maimed
			}
			add_ruler_trait = leader_trait_maimed
		}
	}
}

# leader scope
convert_bureaucrat_leader_traits = {
	if = {
		limit = {
			has_trait = leader_trait_amplifier
			owner = { is_machine_empire = no }
		}
		remove_trait = leader_trait_amplifier
		if = {
			limit = { owner = { is_hive_empire = yes } }
			add_trait = leader_trait_mindfulness
		}
		else_if = {
			limit = { owner = { is_regular_empire = yes } }
			add_trait = leader_trait_bureaucrat
		}
	}
	if = {
		limit = {
			has_trait = leader_trait_mindfulness
			owner = { is_hive_empire = no }
		}
		remove_trait = leader_trait_mindfulness
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_trait = leader_trait_amplifier
		}
		else_if = {
			limit = { owner = { is_regular_empire = yes } }
			add_trait = leader_trait_bureaucrat
		}
	}
	if = {
		limit = {
			has_trait = leader_trait_bureaucrat
			owner = { is_regular_empire = no }
		}
		remove_trait = leader_trait_bureaucrat
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_trait = leader_trait_amplifier
		}
		else_if = {
			limit = { owner = { is_hive_empire = yes } }
			add_trait = leader_trait_mindfulness
		}
	}
}