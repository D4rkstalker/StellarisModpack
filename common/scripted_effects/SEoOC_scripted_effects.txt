#######################################
#  highway
#######################################

create_malfunctioning_guards_country = {
	create_country = {
		name = "NAME_Malfunctioning_Guards_country"
		type = nep_malfunctioning_guards
		auto_delete = no
		flag = {
			icon = {
				category = "zoological"
				file = "flag_zoological_1.dds"
			}
			background= {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={
				"red"
				"red"
				"null"
				"null"
			}
		}
	}
	last_created_country = {
		set_country_flag = malfunctioning_guards
		save_global_event_target_as = malfunctioning_guards_country
		nep_easy_mod = yes
	}
	set_global_flag = malfunctioning_guards_created
}

malfunctioning_guards_spawn = {
	create_fleet = {
		name = "NAME_Malfunctioning_Guards"
		settings = {
			spawn_debris = no
		}
		effect = {		
			set_owner = event_target:malfunctioning_guards_country
			while = {
				count = 15
				create_ship = {
					name = "NAME_Malfunctioning_Guards"
					design = "NAME_Xeoh"
				}
			}
			while = {
				count = 30
				create_ship = {
					name = "NAME_Malfunctioning_Guards"
					design = "NAME_Tes"
				}
			}
			while = {
				count = 60
				create_ship = {
					name = "NAME_Malfunctioning_Guards"
					design = "NAME_Sekae"
				}
			}
			while = {
				count = 140
				create_ship = {
					name = "NAME_Malfunctioning_Guards"
					design = "NAME_Deek"
				}
			}
			
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			add_modifier = {
				modifier = fleet_force_disparity_effect
				days = -1
			}
			
			queue_actions = {	
				repeat = {
					find_closest_planet = {
						trigger = {
							id = "nep_Malfunctioning_Guards_temppoi.1"
							is_star = no
						}
						found_planet = {
							orbit_planet = THIS
						}
					}
					find_closest_planet = {
						trigger = {
							id = "nep_Malfunctioning_Guards_temppoi.2"
							is_star = yes
						}
						found_planet = {
							orbit_planet = THIS
						}
					}
				}
			}						
		}
	}
}

#######################################
#  seal
#######################################
malfunctioning_guards_spawn_2 = {
	create_fleet = {
		name = "NAME_Malfunctioning_Guards"
		settings = {
			spawn_debris = no 
		}
		effect = {		
			set_owner = event_target:malfunctioning_guards_country
			while = {
				count = 9
				create_ship = {
					name = "NAME_Malfunctioning_Guards"
					design = "NAME_Xeoh"
					
				}
			}
			while = {
				count = 18
				create_ship = {
					name = "NAME_Malfunctioning_Guards"
					design = "NAME_Tes"
				}
			}
			while = {
				count = 24
				create_ship = {
					name = "NAME_Malfunctioning_Guards"
					design = "NAME_Sekae"
				}
			}
			while = {
				count = 56
				create_ship = {
					name = "NAME_Malfunctioning_Guards"
					design = "NAME_Deek"
				}
			}
			
			set_location = {
				target = prev
				distance = 1
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			if = {
				limit = { NOT = { has_global_flag = nep_SEoOC_easy } }
				add_modifier = {
					modifier = nep_malfunctioning_guards_buff
					days = -1
				}
			}
		}
	}
	last_created_fleet = {
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_NNE } }
			queue_actions = {
				move_to = event_target:highway_note_NE
				move_to = event_target:highway_note_ENE
				move_to = event_target:highway_note_E
				move_to = event_target:highway_note_ESE
				move_to = event_target:highway_note_SE
				move_to = event_target:highway_note_SSE
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_NE } }
			queue_actions = {
				move_to = event_target:highway_note_ENE
				move_to = event_target:highway_note_E
				move_to = event_target:highway_note_ESE
				move_to = event_target:highway_note_SE
				move_to = event_target:highway_note_SSE
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_ENE } }
			queue_actions = {
				move_to = event_target:highway_note_E
				move_to = event_target:highway_note_ESE
				move_to = event_target:highway_note_SE
				move_to = event_target:highway_note_SSE
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_E } }
			queue_actions = {
				move_to = event_target:highway_note_ESE
				move_to = event_target:highway_note_SE
				move_to = event_target:highway_note_SSE
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_ESE } }
			queue_actions = {
				move_to = event_target:highway_note_SE
				move_to = event_target:highway_note_SSE
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_SE } }
			queue_actions = {
				move_to = event_target:highway_note_SSE
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_SSE } }
			queue_actions = {
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_S } }
			queue_actions = {
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_SSW } }
			queue_actions = {
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_SW } }
			queue_actions = {
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_WSW } }
			queue_actions = {
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_W } }
			queue_actions = {
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_WNW } }
			queue_actions = {
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_NW } }
			queue_actions = {
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N
			}
		}
		if = {
			limit = { solar_system = { is_same_value = event_target:highway_note_NNW } }
			queue_actions = {
				move_to = event_target:highway_note_N
			}
		}
		queue_actions = {
			repeat = {
				move_to = event_target:highway_note_NNE
				move_to = event_target:highway_note_NE
				move_to = event_target:highway_note_ENE
				move_to = event_target:highway_note_E
				move_to = event_target:highway_note_ESE
				move_to = event_target:highway_note_SE
				move_to = event_target:highway_note_SSE
				move_to = event_target:highway_note_S
				move_to = event_target:highway_note_SSW
				move_to = event_target:highway_note_SW
				move_to = event_target:highway_note_WSW
				move_to = event_target:highway_note_W
				move_to = event_target:highway_note_WNW
				move_to = event_target:highway_note_NW
				move_to = event_target:highway_note_NNW
				move_to = event_target:highway_note_N			
			}
		}
	}
}

create_seal_evil_country = {
	create_country = {
		name = "NAME_nep_Seal_Evil_country"
		type = nep_seal_evil_country
		auto_delete = no
		flag = {
			icon = {
				category = "spherical"
				file = "flag_spherical_11.dds"
			}
			background= {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={
				"black"
				"black"
				"null"
				"null"
			}
		}
	}
	last_created_country = {
		set_country_flag = seal_evil_country
		save_global_event_target_as = seal_evil_country
		nep_easy_mod = yes
	}
	set_global_flag = seal_evil_country_created
}

seal_boss_spawn = {
	create_fleet = {
		name = "NAME_nep_Seal_Evil"
		settings = {
			spawn_debris = no 
		}
		effect = {			
			set_owner = event_target:seal_evil_country
			create_ship = {
				name = "NAME_nep_Seal_Evil"
				design = "NAME_nep_Seal_evil"
			}
			create_ship = {
				name = "NAME_nep_Seal_Evil"
				design = "NAME_nep_Seal_evil"
			}
			set_location = {
				target = event_target:nep_grand_seal_planet
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			if = {
				limit = { NOT = { has_global_flag = nep_SEoOC_easy } }
				add_modifier = {
					modifier = nep_seal_evil_buff
					days = -1
				}
			}
		}
	}
}

#######################################
#  dragon
#######################################
create_dragon_babys = {
	create_fleet = {
		name = "NAME_Summoned_Babys"
		effect = {			
			set_owner = prev.owner
			while = {
				count = 20
				create_ship = {
					name = "NAME_Summoned_Babys"
					design = "NAME_Summoned_Babys_design"
				}
			}
			set_location = {
				target = prev
				distance = 10
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self	
			
		}
		settings = {
			spawn_debris = no
			can_upgrade = no
			uses_naval_capacity = no
			can_change_composition = no
			can_change_leader = no
		}
	}
	last_created_fleet = {
		if = {
			limit = {
				owner = {
					NOT = {
						is_country_type = nep_dragon_country
					}
				}
			}
			nep_easy_mod_reward = yes
		}
		fleet_event = { id = nep_dragon.999 days = 45 }
	}
}

#######################################
#  invasion
#######################################
create_Krahen_defender = {
	event_target:nep_Krahen_country = {
		create_leader = {
			class = admiral
			species = event_target:nep_Krahen_country
			name = random
			skill = 10
			traits = {
				trait = leader_trait_Krahen_admiral
				trait = leader_trait_aggressive
			}
		}
	}
	create_fleet = {
		name = "NAME_Krahen_Defender"
		effect = {		
			set_owner = event_target:nep_Krahen_country
			if = {
				limit = {
					has_global_flag = nep_SEoOC_hard
				}
				while = {
					count = 40
					create_ship = {
						name = "NAME_Krahen_Defender"
						design = "NAME_Krahen_Battleship_defender_HARD"
					}
				}
			}
			else = {
				while = {
					count = 40
					create_ship = {
						name = "NAME_Krahen_Defender"
						design = "NAME_Krahen_Battleship_defender"
					}
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_fleet_bombardment_stance = armageddon
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			set_fleet_flag = nep_Krahen_defender
			
			queue_actions = {
				repeat = {
					wait = {
						duration = 500
					}
				}
			}
		}
		settings = {
			garrison = yes
			can_change_leader = no
			uses_naval_capacity = no
			spawn_debris = no
		}
	}
}

create_Krahen_defender_gate = {
	event_target:nep_Krahen_country = {
		create_leader = {
			class = admiral
			species = event_target:nep_Krahen_country
			name = random
			skill = 10
			traits = {
				trait = leader_trait_Krahen_admiral
				trait = leader_trait_aggressive
			}
		}
	}
	create_fleet = {
		name = "NAME_Krahen_Defender"
		effect = {		
			set_owner = event_target:nep_Krahen_country
			if = {
				limit = {
					has_global_flag = nep_SEoOC_hard
				}
				while = {
					count = 25
					create_ship = {
						name = "NAME_Krahen_Defender"
						design = "NAME_Krahen_Battleship_defender_HARD"
					}
				}
			}
			else = {
				while = {
					count = 25
					create_ship = {
						name = "NAME_Krahen_Defender"
						design = "NAME_Krahen_Battleship_defender"
					}
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			set_fleet_bombardment_stance = armageddon
			
			set_fleet_flag = nep_Krahen_defender
			
			queue_actions = {
				repeat = {
					wait = {
						duration = 500
					}
				}
			}
		}
		settings = {
			garrison = yes
			can_change_leader = no
			uses_naval_capacity = no
			spawn_debris = no
		}
	}
}

create_Krahen_invader = {
	event_target:nep_Krahen_country = {
		create_leader = {
			class = admiral
			species = event_target:nep_Krahen_country
			name = random
			skill = 10
			traits = {
				trait = leader_trait_Krahen_admiral
				trait = leader_trait_aggressive
			}
		}
	}
	create_fleet = {
		name = "NAME_Krahen_Invader"
		effect = {
			set_owner = event_target:nep_Krahen_country			
			if = {
				limit = {
					has_global_flag = nep_SEoOC_hard
				}
				while = {
					count = 30
					create_ship = {
						name = "NAME_Krahen_Invader"
						design = "NAME_Krahen_Battleship_HARD"
					}
				}
			}
			else = {
				while = {
					count = 30
					create_ship = {
						name = "NAME_Krahen_Invader"
						design = "NAME_Krahen_Battleship"
					}
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			set_fleet_bombardment_stance = armageddon
			set_fleet_flag = nep_inva_fleet
			
			fleet_event = { id = nep_kai.5 days = 3 }
		}
		settings = {
			can_change_leader = no
			uses_naval_capacity = no
			spawn_debris = no
		}
	}
}

create_Krahen_follower = {
	event_target:nep_Krahen_country = {
		create_leader = {
			class = admiral
			species = event_target:nep_Krahen_country
			name = random
			skill = 10
			traits = {
				trait = leader_trait_Krahen_admiral
				trait = leader_trait_aggressive
			}
		}
	}
	create_fleet = {
		name = "NAME_Krahen_Defender"
		effect = {
			set_owner = event_target:nep_Krahen_country
			if = {
				limit = {
					has_global_flag = nep_SEoOC_hard
				}
				while = {
					count = 30
					create_ship = {
						name = "NAME_Krahen_Defender"
						design = "NAME_Krahen_Battleship_follower_HARD"
					}
				}
			}
			else = {
				while = {
					count = 30
					create_ship = {
						name = "NAME_Krahen_Defender"
						design = "NAME_Krahen_Battleship_follower"
					}
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			set_fleet_bombardment_stance = armageddon
			
			set_fleet_flag = nep_Krahen_follower
			
			fleet_event = { id = nep_kai.1210 days = 3 random = 5 }
		}
		settings = {
			can_change_leader = no
			uses_naval_capacity = no
			spawn_debris = no
		}
	}
}

create_Krahen_buildings = {
	while = {
		count = 5 
		create_pop = {
			species = event_target:nep_Krahen_country
		}
	}
	if = {
		limit = { NOT = { has_building = nep_adv_tank_factory } } 
		add_building = nep_adv_tank_factory
	}
	if = {
		limit = { NOT = { has_building = nep_heavy_fortress } } 
		add_building = nep_heavy_fortress
	}
	if = {
		limit = { NOT = { has_building = nep_heavy_fortress_2 } } 
		add_building = nep_heavy_fortress_2
	}
	if = {
		limit = { NOT = { has_building = nep_planetary_gun } }
		add_building = "nep_planetary_gun"
	}
}

create_Krahen_constructor = {
	create_fleet = {
		effect = {
			create_ship = {
				name = random
				design = "NAME_nep_Krahen_Constructor"
			}
			set_owner = event_target:nep_Krahen_country
			set_fleet_stance = passive
			set_location = {
				target = PREV
				distance = 20
				angle = random 
			}
			
			fleet_event = { id = nep_kai.5 days = 3 }
		}
	}
}

create_Krahen_colonizer = {
	create_fleet = {
		effect = {
			set_owner = event_target:nep_Krahen_country
			create_ship = {
				name = random
				design = "NAME_nep_Krahen_Colonizer"
				colonizer_species = owner_main_species
			}
			set_fleet_stance = evasive
			set_location = {
				target = PREV
				distance = 20
				angle = random 
			}
		}
	}
	last_created_fleet = {
		if = {
			limit = {
				event_target:nep_Krahen_country = {
					any_planet_within_border = {
						can_colonize = { who = event_target:nep_Krahen_country status = yes }
					}
				}
			}
			event_target:nep_Krahen_country = {
				random_planet_within_border = {
					limit = {
						can_colonize = { who = event_target:nep_Krahen_country status = yes }
					}
					save_event_target_as = nep_create_temp_poi_colonize
				}
			}
			auto_move_to_planet = {
				target = event_target:nep_create_temp_poi_colonize
				clear_auto_move_on_arrival = yes
			}
		}
	}
}

#######################################
#  phantom
#######################################
create_phantom_country = {
	create_country = {
		name = "NAME_nep_phantom_country"
		type = nep_phantom_passive
		species = random
		auto_delete = yes
		flag = {
			icon = {
				category = "zoological"
				file = "flag_zoological_17.dds"
			}
			background = {
				category = "backgrounds"
				file = "stripes.dds"
			}
			colors = {
				"black"
				"dark_grey"
				"null"
				"null"
			}
		}
	}
	last_created_country = {
		every_country = {
			limit = {
				has_country_flag = nep_can_build_repeller
			}
			establish_communications_no_message = prev
		}
		if = {
			limit = { has_global_flag = nep_code_ghost }
			set_name = "NAME_nep_ghost_country"
		}
		if = {
			limit = { has_global_flag = nep_code_illusion }
			set_name = "NAME_nep_illusion_country"
		}
		if = {
			limit = { has_global_flag = nep_code_blurs }
			set_name = "NAME_nep_blurs_country"
		}
		nep_easy_mod = yes
	}
}

create_phantom_fleet_passive_Krahen = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Krahen_Battleship_phantom"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

create_phantom_fleet_passive_fallen_empire_01 = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom"
					graphical_culture = "fallen_empire_01"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}		
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

create_phantom_fleet_passive_fallen_empire_02 = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom"
					graphical_culture = "fallen_empire_02"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

create_phantom_fleet_passive_humanoid = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom"
					graphical_culture = "humanoid_01"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

create_phantom_fleet_passive_mammalian = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom"
					graphical_culture = "mammalian_01"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

create_phantom_fleet_passive_molluscoid = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom"
					graphical_culture = "molluscoid_01"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

create_phantom_fleet_passive_reptilian = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom"
					graphical_culture = "reptilian_01"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

create_phantom_fleet_passive_arthropoid = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom"
					graphical_culture = "arthropoid_01"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

# create_phantom_fleet_passive_plantoid = {
	# create_fleet = {
		# name = "NAME_phantom_fleet_passive"
		# settings = {
			# spawn_debris = no 
			# can_change_leader = no
			# uses_naval_capacity = no
		# }
		# effect = {		
			# set_owner = last_created
			# while = {
				# count = 10
				# create_ship = {
					# name = "NAME_phantom_fleet"
					# design = "NAME_Battleship_phantom"
					# graphical_culture = "plantoid_01"
				# }
			# }
			# set_location = {
				# target = event_target:nep_sub_seal_3
				# distance = 0
				# angle = random
			# }
			# set_formation_scale = 2.0
			# set_fleet_stance = aggressive
			# set_aggro_range = 500
			# set_aggro_range_measure_from = self
		# }
	# }
	# last_created_fleet = {
		# target = prev
		# distance = 150
		# angle = random
	# }
# }

create_phantom_fleet_passive_pirate = {
	create_fleet = {
		name = "NAME_phantom_fleet_passive"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = last_created_country
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom"
					graphical_culture = "pirate_01"
				}
			}
			set_location = {
				target = event_target:nep_sub_seal_3
				distance = 0
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		set_location = {
			target = prev
			distance = 150
			angle = random
		}
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
	}
}

create_phantom_fleet_active_Krahen = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Krahen_Battleship_phantom_2"
				}
			}
			set_location = {
				target = prev
				distance = 30
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

create_phantom_fleet_active_fallen_empire_01 = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom_2"
					graphical_culture = "fallen_empire_01"
				}
			}
			set_location = {
				target = prev
				distance = 30
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

create_phantom_fleet_active_fallen_empire_02 = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {		
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom_2"
					graphical_culture = "fallen_empire_02"
				}
			}
			set_location = {
				target = prev
				distance = 30
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

create_phantom_fleet_active_humanoid = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {		
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom_2"
					graphical_culture = "humanoid_01"
				}
			}
			set_location = {
				target = prev
				distance = 150
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 30
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

create_phantom_fleet_active_mammalian = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {		
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom_2"
					graphical_culture = "mammalian_01"
				}
			}
			set_location = {
				target = prev
				distance = 30
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

create_phantom_fleet_active_molluscoid = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {		
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom_2"
					graphical_culture = "molluscoid_01"
				}
			}
			set_location = {
				target = prev
				distance = 30
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

create_phantom_fleet_active_reptilian = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {		
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom_2"
					graphical_culture = "reptilian_01"
				}
			}
			set_location = {
				target = prev
				distance = 30
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

create_phantom_fleet_active_arthropoid = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {		
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom_2"
					graphical_culture = "arthropoid_01"
				}
			}
			set_location = {
				target = prev
				distance = 30
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet_passive"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

# create_phantom_fleet_active_plantoid = {
	# create_fleet = {
		# name = "NAME_phantom_fleet_active"
		# settings = {
			# spawn_debris = no 
			# can_change_leader = no
			# uses_naval_capacity = no
		# }
		# effect = {		
			# set_owner = event_target:nep_phantom_active
			# while = {
				# count = 10
				# create_ship = {
					# name = "NAME_phantom_fleet"
					# design = "NAME_Battleship_phantom_2"
					# graphical_culture = "plantoid_01"
				# }
			# }
			# set_location = {
				# target = event_target:prev
				# distance = 0
				# angle = random
			# }
			# set_formation_scale = 2.0
			# set_fleet_stance = aggressive
			# set_aggro_range = 500
			# set_aggro_range_measure_from = self
		# }
	# }
	# last_created_fleet = {
		# auto_follow_fleet = { target = prev attack_fleet = yes }
	# }
# }

create_phantom_fleet_active_pirate = {
	create_fleet = {
		name = "NAME_phantom_fleet_active"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {		
			set_owner = event_target:nep_phantom_active
			while = {
				count = 10
				create_ship = {
					name = "NAME_phantom_fleet"
					design = "NAME_Battleship_phantom_2"
					graphical_culture = "pirate_01"
				}
			}
			set_location = {
				target = prev
				distance = 30
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	last_created_fleet = {
		owner = {
			if = {
				limit = { has_global_flag = nep_code_ghost }
				every_owned_fleet = {
					set_name = "NAME_nep_ghost_fleet"
				}
				every_owned_ship = {
					set_name = "NAME_nep_ghost_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_illusion }
				every_owned_fleet = {
					set_name = "NAME_nep_illusion_fleet"
				}
				every_owned_ship = {
					set_name = "NAME_nep_illusion_fleet"
				}
			}
			if = {
				limit = { has_global_flag = nep_code_blurs }
				every_owned_fleet = {
					set_name = "NAME_nep_blurs_fleet"
				}
				every_owned_ship = {
					set_name = "NAME_nep_blurs_fleet"
				}
			}
		}
		auto_follow_fleet = { target = prev attack_fleet = yes }
	}
}

create_phantom_fleet_active_random = {
	random_list = {
		3 = { create_phantom_fleet_active_Krahen = yes }
		5 = { create_phantom_fleet_active_fallen_empire_01 = yes }
		5 = { create_phantom_fleet_active_fallen_empire_02 = yes }
		10 = { create_phantom_fleet_active_humanoid = yes }
		10 = { create_phantom_fleet_active_mammalian = yes }
		10 = { create_phantom_fleet_active_molluscoid = yes }
		10 = { create_phantom_fleet_active_reptilian = yes }
		10 = { create_phantom_fleet_active_arthropoid = yes }
		#10 = { create_phantom_fleet_active_plantoid = yes } #To prevent DLC needed,rem it
		3 = { create_phantom_fleet_active_pirate = yes }
	}
}
#######################################
#  finalweapon
#######################################

create_finalweapon_fleet = {
	event_target:nep_finalweapon_country = {
		create_leader = {
			class = admiral
			species = prev.owner_species
			name = random
			skill = 10
			traits = {
				trait = leader_trait_aggressive
			}
		}
	}
	create_fleet = {
		name = "NAME_nep_corrupted_finalweapons"
		settings = {
			spawn_debris = no 
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:nep_finalweapon_country
			while = {
				count = 3
				create_ship = {
					name = "NAME_nep_corrupted_finalweapons"
					design = "NAME_nep_finalweapon_design"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = event_target:nep_grand_seal_planet
				distance = 30
				angle = random
			}
			
			add_modifier = {
				modifier = fleet_force_disparity_effect
				days = -1
			}
			
			set_formation_scale = 1.6
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			set_fleet_flag = nep_corrupted_finalweapons
		}
	}
}

create_finalweapon_bomb_fleet = {
	create_fleet = {
		name = "NAME_nep_star_bomb"
		settings = {
			spawn_debris = no
			can_change_leader = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:nep_finalweapon_country
			create_ship = {
				name = "NAME_nep_star_bomb"
				design = "NAME_nep_star_bomb_design"
			}
			set_location = {
				target = prev
				distance = 1
				angle = random
			}
			set_fleet_flag = nep_star_bomb
			set_event_locked = yes
		}
	}
}

#######################################
#  Easy Mode
#######################################

nep_easy_mod = {
	if = {
		limit = {
			has_global_flag = nep_SEoOC_easy
		}
		if = {
			limit = {
				is_country_type = nep_malfunctioning_guards
			}
			add_modifier = {
				modifier = nep_malfunctioning_guards_easy
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_seal_evil_country
			}
			add_modifier = {
				modifier = nep_seal_evil_easy
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_dragon_country
			}
			add_modifier = {
				modifier = nep_dragon_easy
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_Krahen_country
			}
			add_modifier = {
				modifier = nep_Krahen_easy
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_finalweapon_country
			}
			add_modifier = {
				modifier = nep_finalweapon_easy
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_Legnahcras_country
			}
			add_modifier = {
				modifier = nep_Legnahcras_easy
				days = -1
			}
		}
		if = {
			limit = {
				OR = {
					is_country_type = nep_phantom_active
					is_country_type = nep_phantom_passive
				}
			}
			add_modifier = {
				modifier = nep_phantom_easy
				days = -1
			}
		}
	}
	if = {
		limit = {
			has_global_flag = nep_SEoOC_hard
		}
		if = {
			limit = {
				is_country_type = nep_malfunctioning_guards
			}
			add_modifier = {
				modifier = nep_malfunctioning_guards_hard
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_seal_evil_country
			}
			add_modifier = {
				modifier = nep_seal_evil_hard
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_dragon_country
			}
			add_modifier = {
				modifier = nep_dragon_hard
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_Krahen_country
			}
			add_modifier = {
				modifier = nep_Krahen_hard
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_finalweapon_country
			}
			add_modifier = {
				modifier = nep_finalweapon_hard
				days = -1
			}
		}
		if = {
			limit = {
				is_country_type = nep_Legnahcras_country
			}
			add_modifier = {
				modifier = nep_Legnahcras_hard
				days = -1
			}
		}
		if = {
			limit = {
				OR = {
					is_country_type = nep_phantom_active
					is_country_type = nep_phantom_passive
				}
			}
			add_modifier = {
				modifier = nep_phantom_hard
				days = -1
			}
		}
	}
}

nep_easy_mod_reward = {
	if = {
		limit = {
			has_global_flag = nep_SEoOC_easy
		}
		if = {
			limit = {
				OR = {
					is_ship_size = nep_dragon_reward
					is_ship_size = nep_dragon_reward_kai
					is_ship_size = nep_dragon_baby
				}
			}
			add_modifier = {
				modifier = nep_dragon_easy
				days = -1
			}			
		}
		if = {
			limit = {
				is_ship_size = nep_finalweapon
			}
			add_modifier = {
				modifier = nep_finalweapon_easy
				days = -1
			}
		}
	}
}

# nep_easy_mod_reward_2 = {
	# if = {
		# limit = {
			# has_global_flag = nep_SEoOC_easy
		# }
		# add_modifier = {
			# modifier = nep_Legnahcras_easy
			# days = -1
		# }
	# }
# }

#######################################
# Side
#######################################
remove_all_global_flag_spawntime = {
	remove_global_flag = nep_whitegoo_2200
	remove_global_flag = nep_whitegoo_2250
	remove_global_flag = nep_whitegoo_2300
	remove_global_flag = nep_whitegoo_2350
	remove_global_flag = nep_whitegoo_2400
	remove_global_flag = nep_whitegoo_midgame
	remove_global_flag = nep_whitegoo_lategame
}

remove_all_global_flag_spawnmtth = {
	remove_global_flag = nep_whitegoo_15
	remove_global_flag = nep_whitegoo_40
	remove_global_flag = nep_whitegoo_110
	remove_global_flag = nep_whitegoo_225
	remove_global_flag = nep_whitegoo_470
	remove_global_flag = nep_whitegoo_1105
}

nep_whitegoo_1 = {
	random_list = {
		1 = {
			set_star_flag = nep_whitegoo_1
			add_modifier = { modifier = nep_whitegoo_system_1 }
			every_system_planet = {
				add_modifier = {
					modifier = nep_whitegoo_1
				}
			}
			# every_fleet_in_system = {
				# add_modifier = {
					# modifier = nep_whitegoo_fleet_1
				# }
			# }
			if = { 
				limit = { NOT = { has_global_flag = nep_whitegoo_no_visual_effect} }
				while = {
					count = 3
					create_ambient_object = {
						type = nep_whitegoo_space
						location = solar_system
					}
					last_created_ambient_object = {
						set_ambient_object_flag = nep_whitegoo_ambient_object
					}
				}
			}
			if = {
				limit = {
					exists = space_owner
					space_owner = {
						NOT = { has_country_flag = nep_whitegoo_noti }
					}
				}
				random_system_planet = {
					planet_event = { id = nep_whitegoo.5000 }
				}
			}
		}
		1 = {
			if = {
				limit = {
					OR = {
						NOT = { exists = space_owner }
						space_owner = {
							NOT = { has_technology = tech_nep_whitegoo_3_1 }
						}
					}
				}
				set_star_flag = nep_whitegoo_1
				every_system_planet = {
					limit = {
						OR = {
							NOT = { exists = owner }
							AND = {
								exists = owner
								owner = { NOT = { has_technology = tech_nep_whitegoo_3_2 } }
							}
						}
					}
					add_modifier = {
						modifier = nep_whitegoo_1
					}
				}
				# every_fleet_in_system = {
					# limit = {
						# OR = {
							# NOT = { exists = owner }
							# AND = {
								# exists = owner
								# owner = { NOT = { has_technology = tech_nep_whitegoo_3_3 }
								# }
							# }
						# }
					# }
					# add_modifier = {
						# modifier = nep_whitegoo_fleet_1
					# }
				# }
				if = {
					limit = { NOT = { has_global_flag = nep_whitegoo_no_visual_effect} }
					while = {
						count = 2
						create_ambient_object = {
							type = nep_whitegoo_space
							location = solar_system
						}
						last_created_ambient_object = {
							set_ambient_object_flag = nep_whitegoo_ambient_object
						}
					}
				}
				if = {
					limit = {
						exists = space_owner
						space_owner = {
							NOT = { has_country_flag = nep_whitegoo_noti }
						}
					}
					random_system_planet = {
						planet_event = { id = nep_whitegoo.5000 }
					}
				}
			}
		}
	}
}
nep_whitegoo_2 = {
	random_list = {
		1 = {
			set_star_flag = nep_whitegoo_2
			add_modifier = { modifier = nep_whitegoo_system_2 }
			every_system_planet = {
				add_modifier = {
					modifier = nep_whitegoo_2
				}
			}
			# every_fleet_in_system = {
				# add_modifier = {
					# modifier = nep_whitegoo_fleet_2
				# }
			# }
			if = { 
				limit = { NOT = { has_global_flag = nep_whitegoo_no_visual_effect} }
				while = {
					count = 3
					create_ambient_object = {
						type = nep_whitegoo_space
						location = solar_system
					}
					last_created_ambient_object = {
						set_ambient_object_flag = nep_whitegoo_ambient_object
					}
				}
			}
			if = {
				limit = {
					exists = space_owner
					space_owner = {
						NOT = { has_country_flag = nep_whitegoo_2_noti }
					}
				}
				random_system_planet = {
					planet_event = { id = nep_whitegoo.5001 }
				}
			}
		}
		1 = {
			if = {
				limit = {
					OR = {
						NOT = { exists = space_owner}
						space_owner = {
							NOT = { has_technology = tech_nep_whitegoo_3_1 }
						}
					}
				}
				set_star_flag = nep_whitegoo_2
				add_modifier = { modifier = nep_whitegoo_system_2 }
				every_system_planet = {
					add_modifier = {
						modifier = nep_whitegoo_2
					}
				}
				# every_fleet_in_system = {
					# add_modifier = {
						# modifier = nep_whitegoo_fleet_2
					# }
				# }
				if = { 
					limit = { NOT = { has_global_flag = nep_whitegoo_no_visual_effect} }
					while = {
						count = 4
						create_ambient_object = {
							type = nep_whitegoo_space
							location = solar_system
						}
						last_created_ambient_object = {
							set_ambient_object_flag = nep_whitegoo_ambient_object
						}
					}
				}
				if = {
					limit = {
						exists = space_owner
						space_owner = {
							NOT = { has_country_flag = nep_whitegoo_2_noti }
						}
					}
					random_system_planet = {
						planet_event = { id = nep_whitegoo.5001 }
					}
				}
			}
		}
	}
}
nep_whitegoo_3 = {
	random_list = {
		1 = {
			set_star_flag = nep_whitegoo_3
			add_modifier = { modifier = nep_whitegoo_system_3 }
			every_system_planet = {
				add_modifier = {
					modifier = nep_whitegoo_3
				}
			}
			# every_fleet_in_system = {
				# add_modifier = {
					# modifier = nep_whitegoo_fleet_3
				# }
			# }
			if = { 
				limit = { NOT = { has_global_flag = nep_whitegoo_no_visual_effect} }	
				while = {
					count = 5
					create_ambient_object = {
						type = nep_whitegoo_space
						location = solar_system
					}
					last_created_ambient_object = {
						set_ambient_object_flag = nep_whitegoo_ambient_object
					}
				}
			}
			if = {
				limit = {
					exists = space_owner
					space_owner = {
						NOT = { has_country_flag = nep_whitegoo_3_noti }
					}
				}
				random_system_planet = {
					planet_event = { id = nep_whitegoo.5002 }
				}
			}
		}
		1 = {
			if = {
				limit = {
					OR = {
						NOT = { exists = space_owner }
						space_owner = {
							NOT = { has_technology = tech_nep_whitegoo_3_1 }
						}
					}
				}
				set_star_flag = nep_whitegoo_3
				add_modifier = { modifier = nep_whitegoo_system_3 }
				every_system_planet = {
					add_modifier = {
						modifier = nep_whitegoo_3
					}
				}
				# every_fleet_in_system = {
					# add_modifier = {
						# modifier = nep_whitegoo_fleet_3
					# }
				# }
				if = { 
					limit = { NOT = { has_global_flag = nep_whitegoo_no_visual_effect} }
					while = {
						count = 4
						create_ambient_object = {
							type = nep_whitegoo_space
							location = solar_system
						}
						last_created_ambient_object = {
							set_ambient_object_flag = nep_whitegoo_ambient_object
						}
					}
				}
				if = {
					limit = {
						exists = space_owner
						space_owner = {
							NOT = { has_country_flag = nep_whitegoo_3_noti }
						}
					}
					random_system_planet = {
						planet_event = { id = nep_whitegoo.5002 }
					}
				}
			}
		}
	}
}