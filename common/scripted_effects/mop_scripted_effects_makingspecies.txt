mop_create_ran = {
	create_species = {
		name = random
		class = random
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_create_ma = {
	create_species = {
		name = random
		class = MAM
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_create_r = {
	create_species = {
		name = random
		class = REP
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_create_av = {
	create_species = {
		name = random
		class = AVI
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_create_ar = {
	create_species = {
		name = random
		class = ART
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_create_f = {
	create_species = {
		name = random
		class = FUN
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_create_mo = {
	create_species = {
		name = random
		class = MOL
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_create_p = {
	create_species = {
		name = random
		class = PLANT
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_create_h = {
	create_species = {
		name = random
		class = HUM
		portrait = random
		homeworld = THIS
		traits = {
			trait = trait_mop_created
			trait = random_traits
		}
	}
}

mop_creating = {
	every_owned_pop = {
		limit = {
			species = { has_species_flag = mop_recently_created_@root }
		}
		species = {
			remove_species_flag = mop_recently_created_@root
		}
	}
	last_created_species = {
		save_event_target_as = mop_newspecies
		set_species_flag = mop_recently_created_@root
	}
	create_pop = {
		species = last_created
	}
	while = {
		limit = {
			check_variable = { which = mop_chaingingnewspecies value > 0 }
		}
		change_variable = { which = mop_chaingingnewspecies value = -1 }
	}
}

mop_reset_traits = {
	species = {
		save_event_target_as = mop_changing_species	
	
		create_species = {
			is_mod = yes
			name = this
			plural = this
			class = this
			portrait = this
			traits = {
				trait = trait_mop_created
				trait = random_traits
			}
			homeworld = this
		}
	}
	
	owner = {
		every_owned_pop = {
			limit = { is_same_species = event_target:mop_changing_species }
			change_species = last_created
		}
		every_owned_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				is_same_species = event_target:mop_changing_species
			}
			change_species = last_created
		}
	}

	species = {
		save_event_target_as = mop_newspecies
		set_species_flag = mop_recently_created_@root
	}
}
