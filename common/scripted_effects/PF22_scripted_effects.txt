begin_crisis_PF22 = {
	set_global_flag = mid_game_crisis_happened 			# this must be set and not removed
	set_timed_global_flag = {							# this must be set and not removed
		flag = mid_game_crisis_happened_recently
		years = 12
	}
	set_global_flag = PF22_in_progress 				# must be removed when crisis is resolved
	set_global_flag = PF22_fired 					# (optional) only set this flag if you want your crisis to fire only once
	set_global_flag = midgame_crisis_ongoing			# must be removed when crisis is resolved
	
	# BOOM BOOM PEW PEW effects go here
	# this is in country scope, on global event country
	
	every_playable_country = {
		limit = {
			has_authority = auth_hive_mind
		}
		country_event = { id = PF22.2 days = 5 random = 15 }
	}
	country_event = { id = PF22.1 days = 50 random = 50 }
}

PF22_pf_spawn_attack_fleet = {
	create_leader = {
		class = admiral
		species = event_target:PF22_pf_species
		name = random
		skill = 3
		traits = {
			trait = leader_trait_PF22_admiral
		}
	}
	create_fleet = {
		settings = {
			spawn_debris = no
			is_boss = no
		}
		effect = {
			set_owner = event_target:PF22_pf_country
			while = {
				count = value:PF22_growth_multiplier_increase_rounded|VALUE|2|
				create_ship = {
					name = random
					prefix = no
					design = "NAME_pf_ship_large"
					graphical_culture = "swarm_01"
				}
			}
			assign_leader = last_created_leader
			while = {
				count = value:PF22_growth_multiplier_increase_rounded|VALUE|3|
				create_ship = {
					name = random
					prefix = no
					design = "NAME_pf_ship_carrier"
					graphical_culture = "swarm_01"
				}
			}
			while = {
				count = value:PF22_growth_multiplier_decrease_rounded|VALUE|7|
				create_ship = {
					name = random
					prefix = no
					design = "NAME_pf_small"
					graphical_culture = "swarm_01"
				}
			}
			set_location = {
				target = event_target:PF22_home_world
				distance = 20
				angle = random
			}
			if = {
				limit = { has_global_flag = ss_crisis_hardmode }
				add_modifier = {
					modifier = PF22_pf_speed_mod_hardmode
					days = -1
				}
				add_modifier = {
					modifier = ss_crisis_PF_hardmode_fleets
					days = -1
				}
			}
			else = {
				add_modifier = {
					modifier = PF22_pf_speed_mod
					days = -1
				}
			}
			set_fleet_flag = PF22_pf_attack_fleet
			event_target:PF22_pf_country = {
				if = {
					limit = { has_country_flag = PF22_pf_decayed }
					prev = { fleet_event = { id = PF22.302 days = 600 } } # Applies negative after some time if PF is decayed
				}
			}
			if = {
				limit = {
					AND = {
						has_global_flag = ss_solar_storm_installed
						event_target:global_event_country = { is_variable_set = ss_PF_strength }
					}
				}
				add_modifier = {
					modifier = ss_crisis_PF_diff_multiplier
					multiplier = event_target:global_event_country.ss_PF_strength
					days = -1
				}
			}
		}
	}
}

PF22_pf_spawn_big_attack_fleet = {
	create_leader = {
		class = admiral
		species = event_target:PF22_pf_species
		name = random
		skill = 6
		traits = {
			trait = leader_trait_PF22_elite
		}
	}
	create_fleet = {
		settings = {
			spawn_debris = no
			is_boss = no
		}
		effect = {
			set_owner = event_target:PF22_pf_country
			while = {
				count = value:PF22_growth_multiplier_increase_rounded|VALUE|1|
				create_ship = {
					name = random
					prefix = no
					design = "NAME_pf_ship_queen"
					graphical_culture = "swarm_01"
				}
			}
			assign_leader = last_created_leader
			while = {
				count = value:PF22_growth_multiplier_increase_rounded|VALUE|5|
				create_ship = {
					name = random
					prefix = no
					design = "NAME_pf_ship_large"
					graphical_culture = "swarm_01"
				}
			}
			while = {
				count = value:PF22_growth_multiplier_increase_rounded|VALUE|2|
				create_ship = {
					name = random
					prefix = no
					design = "NAME_pf_ship_carrier"
					graphical_culture = "swarm_01"
				}
			}
			while = {
				count = value:PF22_growth_multiplier_decrease_rounded|VALUE|10|
				create_ship = {
					name = random
					prefix = no
					design = "NAME_pf_small"
					graphical_culture = "swarm_01"
				}
			}
			set_location = {
				target = event_target:PF22_home_world
				distance = 20
				angle = random
			}
			if = {
				limit = { has_global_flag = ss_crisis_hardmode }
				add_modifier = {
					modifier = PF22_pf_speed_mod_hardmode
					days = -1
				}
				add_modifier = {
					modifier = ss_crisis_PF_hardmode_fleets
					days = -1
				}
			}
			else = {
				add_modifier = {
					modifier = PF22_pf_speed_mod
					days = -1
				}
			}
			set_fleet_flag = PF22_pf_attack_fleet
			event_target:PF22_pf_country = {
				if = {
					limit = { has_country_flag = PF22_pf_decayed }
					prev = { fleet_event = { id = PF22.302 days = 600 } } # Applies negative after some time if PF is decayed
				}
			}
			if = {
				limit = {
					AND = {
						has_global_flag = ss_solar_storm_installed
						event_target:global_event_country = { is_variable_set = ss_PF_strength }
					}
				}
				add_modifier = {
					modifier = ss_crisis_PF_diff_multiplier
					multiplier = event_target:global_event_country.ss_PF_strength
					days = -1
				}
			}
		}
	}
}

PF22_pf_spawn_transports = {
	create_fleet = {
		effect = {
			set_owner = event_target:PF22_pf_country
			while = {
				count = value:PF22_growth_multiplier_increase_rounded|VALUE|10|
				create_army_transport = {
					ship_name = "NAME_PF22_transport"
					graphical_culture = "swarm_01"
					army_name = "NAME_PF22_army"
					army_type = "PF22_pf_army"
					species = event_target:PF22_pf_species
				}
			}
			set_location = {
				target = PREV
				distance = 20
				angle = random
			}
		}
	}
}

PF22_assimilate_world = {
	#Scope is: planet
	if = {
		limit = { 
			AND = { 
				has_global_flag = PF22_in_progress 
				exists = event_target:PF22_pf_country
				exists = event_target:PF22_home_world
				NOT = { is_same_value = event_target:PF22_home_world }
			} 
		}
		set_timed_planet_flag = { flag = PF22_transforming days = 2500 }
		planet_event = { id = PF22.65 days = 2500 }
		owner = {
			if = {
				limit = { 
					NOT = { has_country_flag = PF22_assimilation_explained } 
					prev = { NOT = { has_planet_flag = PF22_captured_for_pf } }
				}
				set_country_flag = PF22_assimilation_explained
				country_event = { id = PF22.67 }
			}
			set_timed_country_flag = { flag = PF22_pf_planet_assimilated days = 900 }
			every_situation = {
				limit = {
					AND = {
						OR = {
							is_situation_type = situation_PF22_infestation
							is_situation_type = situation_PF22_cult
							is_situation_type = situation_PF22_cult_hive
						}
						target = { is_same_value = prevprev }
					}
				}
				destroy_situation = this
			}
		}
		set_planet_flag = PF22_former_owner_@owner
		set_owner = event_target:PF22_pf_country
		every_planet_army = {
			limit = {
				AND = {
					exists = event_target:PF22_pf_cultist_country 
					is_owned_by = event_target:PF22_pf_cultist_country 
				}
			}
			remove_army = yes
		}
		every_owned_species = {
			if = {
				limit = {
					NOT = { has_trait = trait_hive_mind }
				}
				set_citizenship_type = {
					country = event_target:PF22_pf_country
					type = citizenship_assimilation
				}
				modify_species = {
					species = this
					add_trait = trait_PF22_prime
				}
			}
		}
		create_pop = { species = event_target:PF22_pf_species }
		create_pop = { species = event_target:PF22_pf_species }
		create_pop = { species = event_target:PF22_pf_species }
		if = {
			limit = { NOT = { has_planet_flag = PF22_growth_extracted } }
			set_planet_flag = PF22_growth_extracted
			event_target:PF22_pf_country = {
				if = {
					limit = {
						AND = {
							check_variable = { which = PF22_pf_growth value < 95 }
							
						}
					}
					change_variable = { which = PF22_pf_growth value = 3 }
				}
				else = {
					set_variable = { which = PF22_pf_growth value = 100 }
				}
			}
		}
		#remove_all_buildings = yes
		#validate_planet_buildings_and_districts = yes
		add_modifier = {
			modifier = PF22_planet_converting
			days = 2500
		}
		set_colony_type = col_PF22_assimilating
		create_ambient_object = {
			type = PF22_pf_planet_converting
			scale = 1
			location = this
			use_3d_location = yes
			duration = 2500
		}
		if = {
			limit = { is_planet_class = pc_desert }
			set_planet_entity = { entity = PF22_corrupted_desert_planet_entity }
		}
		if = {
			limit = { is_planet_class = pc_arid }
			set_planet_entity = { entity = PF22_corrupted_arid_planet_entity }
		}
		if = {
			limit = { is_planet_class = pc_savannah }
			set_planet_entity = { entity = PF22_corrupted_savannah_planet_entity }
		}
		if = {
			limit = { is_planet_class = pc_tropical }
			set_planet_entity = { entity = PF22_corrupted_tropical_planet_entity }
		}
		if = {
			limit = { is_planet_class = pc_continental }
			set_planet_entity = { entity = PF22_corrupted_continental_planet_entity }
		}
		if = {
			limit = { is_planet_class = pc_ocean }
			set_planet_entity = { entity = PF22_corrupted_ocean_planet_entity }
		}
		if = {
			limit = { is_planet_class = pc_tundra }
			set_planet_entity = { entity = PF22_corrupted_tundra_planet_entity }
		}
		if = {
			limit = { is_planet_class = pc_arctic }
			set_planet_entity = { entity = PF22_corrupted_arctic_planet_entity }
		}
		if = {
			limit = { is_planet_class = pc_alpine }
			set_planet_entity = { entity = PF22_corrupted_alpine_planet_entity }
		}
	}
}

PF22_return_all_transforming_colonies = {
	#Scope is: any
	
	#Lord is this bit of code sinful... But it works!
	
	event_target:PF22_pf_country = {
		every_owned_planet = {
			limit = {
				has_modifier = PF22_planet_converting
			}
			every_playable_country = {
				limit = { prev = { has_planet_flag = PF22_former_owner_@prev } }
				prev = { 
					set_owner = prev 
					remove_modifier = PF22_planet_converting
					solar_system = {
						random_system_ambient_object = {
							limit = { is_ambient_object_type = PF22_pf_planet_converting }
							destroy_ambient_object = this
						}
					}
					every_owned_species = {
						limit = {
							NOT = { is_same_value = event_target:PF22_pf_species }
						}
						modify_species = {
							species = this
							remove_trait = trait_hive_mind
						}
						every_species_pop = {
							limit = {
								planet = {
									is_same_value = root
								}
							}
							add_modifier = {
								modifier = PF22_pop_unassimilating
								days = 720
							}
						}
					}
				}
			}
		}
	}
}

PF22_pf_declare_war = {
	# Scope is: defender country
	event_target:PF22_pf_country = {
		declare_war = {
			target = root
			attacker_war_goal = "wg_PF22_pf_assimilate"
			name = PF22_war_name
		}
		every_war = {
			limit = { NOT = { has_war_flag = PF22_pf_assimilate_war } }
			set_war_flag = PF22_pf_assimilate_war
		}
		
	}
	if = {
		limit = {
			AND = {
				NOT = { any_situation = { is_situation_type = situation_PF22_loot } }
				NOT = { has_country_flag = PF22_pf_loot_complete }
				NOT = { has_country_flag = PF22_loot_situation_gen }
			}
		}
		
		country_event = { id = PF22.220 days = 15 }
	}
	every_subject = {
		limit = { 
			AND = {
				NOT = { any_situation = { is_situation_type = situation_PF22_loot } }
				NOT = { has_country_flag = PF22_pf_loot_complete }
				NOT = { has_country_flag = PF22_loot_situation_gen }
				is_at_war_with = event_target:PF22_pf_country 
			}
		}
		country_event = { id = PF22.220 days = 15 }
	}
	if = {
		limit = {
			exists = overlord
			overlord = {
				NOT = { any_situation = { is_situation_type = situation_PF22_loot } }
				NOT = { has_country_flag = PF22_pf_loot_complete }
				NOT = { has_country_flag = PF22_loot_situation_gen }
				is_at_war_with = event_target:PF22_pf_country
			}	
		}
		country_event = { id = PF22.220 days = 15 }
	}
}

PF22_pf_settle_peace = {
	# Scope is: defender country
	every_war = {
		limit = {
			using_war_goal = { type = wg_PF22_pf_defence owner = prev }
		}
		end_war_effect = yes
	}
	country_event = { id = PF22.270 days = 10 }
	set_variable = { which = PF22_pf_patience value = 60 } # Add some patience, which will decrease very quickly.
	remove_country_flag = PF22_pf_target
	remove_country_flag = PF22_pf_convert_target
	remove_country_flag = PF22_patience_warning
	if = {
		limit = {
			has_country_flag = PF22_offer_received
		}
		remove_country_flag = PF22_offer_received
	}	
}

PF22_pf_create_rogue_country = {
	if = {
		limit = { NOT = { exists = event_target:PF22_pf_destroyed_country } }
			create_country = {
			name = "NAME_pf_country_destroyed"
			name_list = PF22_pf_namelist
			species = event_target:PF22_pf_species
			type = PF22_prime_flesh_destroyed
			flag = {
				icon= {
					category = "pointy"
					file = "flag_pointy_19.dds"
				}
				background= {
					category = "backgrounds"
					file = "circle.dds"
				}
				colors={
					"grey"
					"dark_grey"
					"null"
					"null"
				}
			}
			effect = {
				save_global_event_target_as = PF22_pf_destroyed_country
			}
		}
	}
}

PF22_pf_end_crisis = {
	#Scope is: any
	#The prime flesh here are destroyed
	every_playable_country = {
		PF22_pf_settle_peace = yes
		every_owned_leader = {
			limit = {
				species = { is_same_value = event_target:PF22_pf_species }
			}
			kill_leader = {
				show_notification = yes
			}
		}
		every_situation = { 
			limit = { 
				OR = {
					is_situation_type = situation_PF22_cult_hive
					is_situation_type = situation_PF22_cult
					is_situation_type = situation_PF22_infestation
				}
			} 
			destroy_situation = this
		}
	}
	PF22_pf_create_rogue_country = yes
	event_target:PF22_pf_country = {
		every_owned_planet = {
			limit = {
				has_modifier = PF22_planet_converting
			}
			remove_modifier = PF22_planet_converting
			solar_system = {
				random_system_ambient_object = {
					limit = { is_ambient_object_type = PF22_pf_planet_converting }
					destroy_ambient_object = this
				}
			}
		}
		every_owned_leader = {
			kill_leader = {
				show_notification = no
			}
		}
		every_owned_pop = {
			kill_pop = yes
		}
		every_owned_fleet = {
			set_owner = event_target:PF22_pf_destroyed_country
		}
		set_country_type = PF22_prime_flesh_destroyed
	}
	event_target:PF22_pf_destroyed_country = {
		every_owned_fleet = {
			queue_actions = {
				repeat = { 
					find_random_planet = {
						found_planet = {
							move_to = this
							orbit_planet = THIS
						}
					}
				}
			}
		}
		every_owned_starbase = {
			fleet = { destroy_fleet = this }
		}
	}
	every_country = {
		limit = { is_country_type = default }
		establish_communications_no_message = event_target:PF22_pf_destroyed_country
		if = {
			limit = { has_event_chain = PF22_pf_wormholes_chain }
			end_event_chain = PF22_pf_wormholes_chain
		}
		event_target:PF22_pf_destroyed_country = {
			set_closed_borders = {
				who = prev
				status = no
				forced = 999
			}
		}
		if = {
			limit = { has_special_project = PF22_VASSLIZE_PF }
			abort_special_project = { type = PF22_VASSLIZE_PF }
		}
		if = {
			limit = { has_special_project = PF22_OUTBREAK_RESEARCH }
			abort_special_project = { type = PF22_OUTBREAK_RESEARCH }
		}
		if = {
			limit = { has_special_project = PF22_PF_HOME_SYSTEM }
			abort_special_project = { type = PF22_PF_HOME_SYSTEM }
		}
		if = {
			limit = { any_pop_faction = { is_pop_faction_type = PF22_pf_sympathisers } }
			every_owned_pop = {
				limit = { species = { is_archetype = BIOLOGICAL } }
				set_pop_flag = PF22_pf_gone
			}
		}
	}
	clear_global_event_target = PF22_pf_country
	clear_global_event_target = PF22_pf_species
	clear_global_event_target = PF22_exp_1
	clear_global_event_target = PF22_exp_2
	clear_global_event_target = PF22_wm_system_1
	clear_global_event_target = PF22_wm_system_2
	clear_global_event_target = PF22_wm_system_3
	if = {
		limit = { exists = event_target:PF22_pf_cultist_country }
		clear_global_event_target = PF22_pf_cultist_country
	}
	remove_global_flag = PF22_in_progress
	remove_global_flag = midgame_crisis_ongoing
	
}

PF22_vassilize_pf = {
	#Scope is: Player country
	every_playable_country = {
		PF22_pf_settle_peace = yes
		every_owned_leader = {
			limit = {
				species = { is_same_value = event_target:PF22_pf_species }
			}
			kill_leader = {
				show_notification = yes
			}
		}
		every_situation = { 
			limit = { 
				OR = {
					is_situation_type = situation_PF22_cult_hive
					is_situation_type = situation_PF22_cult
					is_situation_type = situation_PF22_infestation
				}
			} 
			destroy_situation = this
		}
	}
	event_target:PF22_pf_country = {
		every_owned_planet = {
			limit = { NOT = { has_planet_flag = PF22_home_world } }
			if = {
				limit = { has_modifier = PF22_planet_converting }
				remove_modifier = PF22_planet_converting
				solar_system = {
					random_system_ambient_object = {
						limit = { is_ambient_object_type = PF22_pf_planet_converting }
						destroy_ambient_object = this
					}
				}
				every_owned_pop = {
					kill_pop = yes
				}
			}
		}
		every_owned_fleet = {
			destroy_fleet = this
		}
		set_country_flag = PF22_former_pf_country
		change_species = event_target:PF22_pf_species
		set_country_type = default
		change_government = {
			authority = auth_hive_mind
			civics = { civic = civic_PF22_pf_remnant civic = random }
		}
		create_leader = {
			class = governor
			species = event_target:PF22_pf_species
			name = NAME_PF22_pf_nascent_cortex
			skill = 1
		}
		set_leader = last_created_leader
		set_graphical_culture = arthropoid_01
		add_resource = {
			energy = 5000
			minerals = 10000
			food = 5000
			alloys = 2000
			volatile_motes = 1000
			exotic_gases = 1000
			rare_crystals = 1000
			influence = 300
		}
		add_modifier = {
			modifier = PF22_pf_remnant_cache
			days = -1
		}
		event_target:PF22_home_world = {
			set_capital = yes
			
			if = {
				limit = { planet_size < 15 }
				set_planet_size = 15
			}
		
			remove_building = building_expanded_warren
			remove_building = building_research_lab_3
			remove_building = building_PF22_pf_fortress
			remove_building = building_foundry_3
			add_building = building_research_lab_2
			add_building = building_foundry_2
			
			add_district = district_farming_uncapped
			add_district = district_farming_uncapped
			
			add_district = district_mining_uncapped
			add_district = district_mining_uncapped
			add_district = district_mining_uncapped
			add_district = district_mining_uncapped
			add_district = district_mining_uncapped
			
			add_district = district_generator_uncapped
			add_district = district_generator_uncapped
			add_district = district_generator_uncapped
			
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			create_pop = { species = event_target:PF22_pf_species }
			
			
		}
		#remove_ship_design = NAME_pf_science_ship
		#remove_ship_design = NAME_pf_defence_platform
		#remove_ship_design = NAME_pf_starbase
		#remove_ship_design = NAME_pf_ship_queen
		#remove_ship_design = NAME_pf_ship_large
		#remove_ship_design = NAME_pf_ship_carrier
		#remove_ship_design = NAME_pf_small
		remove_ship_design = NAME_Swarm_Transport
		set_subject_of = { 
			who = root
			preset = preset_vassal
		}
		remove_modifier = PF22_pf_country_mod 
	}
	every_country = {
		limit = { is_country_type = default }
		if = {
			limit = { has_event_chain = PF22_pf_wormholes_chain }
			end_event_chain = PF22_pf_wormholes_chain
		}
		country_event = { id = PF22.227 days = 20 }
		if = {
			limit = { AND = { NOT = { is_same_value = root } NOT = { is_same_value = event_target:PF22_pf_country } } }
			add_opinion_modifier = { 
				modifier = opinion_PF22_former_crisis
				who = event_target:PF22_pf_country
			}
		}
		else_if = {
			limit = { NOT = { is_same_value = event_target:PF22_pf_country } }
			add_opinion_modifier = { 
				modifier = opinion_PF22_pf_liberator
				who = event_target:PF22_pf_country
			}
		}
		if = {
			limit = { has_special_project = PF22_VASSLIZE_PF }
			abort_special_project = { type = PF22_VASSLIZE_PF }
		}
		if = {
			limit = { has_special_project = PF22_OUTBREAK_RESEARCH }
			abort_special_project = { type = PF22_OUTBREAK_RESEARCH }
		}
		if = {
			limit = { has_special_project = PF22_PF_HOME_SYSTEM }
			abort_special_project = { type = PF22_PF_HOME_SYSTEM }
		}
		if = {
			limit = { any_pop_faction = { is_pop_faction_type = PF22_pf_sympathisers } }
			every_owned_pop = {
				limit = { species = { is_archetype = BIOLOGICAL } }
				set_pop_flag = PF22_pf_gone
			}
		}
	}
	clear_global_event_target = PF22_pf_species
	clear_global_event_target = PF22_exp_1
	clear_global_event_target = PF22_exp_2
	clear_global_event_target = PF22_wm_system_1
	clear_global_event_target = PF22_wm_system_2
	clear_global_event_target = PF22_wm_system_3
	remove_global_flag = PF22_in_progress
	remove_global_flag = midgame_crisis_ongoing
	if = {
		limit = { exists = event_target:PF22_pf_cultist_country }
		clear_global_event_target = PF22_pf_cultist_country
	}
	set_global_flag = PF22_pf_vassilized
}

PF22_loot = {
	random_situation = {
		limit = {
			is_situation_type = situation_PF22_loot
		}
		add_situation_progress = 10
	}
}

PF22_pf_fleets_go_bezerk = {
	event_target:PF22_pf_country = {
		PF22_pf_create_rogue_country = yes
		while = {
			count = this.value:PF22_pf_num_fleets
			random_owned_fleet = {
				limit = { has_fleet_flag = PF22_pf_attack_fleet }
				set_fleet_flag = PF22_pf_lost_control
			}
		}
		
		every_owned_fleet = {
			limit = { has_fleet_flag = PF22_pf_lost_control }
			set_owner = event_target:PF22_pf_destroyed_country
			random_list = {
				10 = {
					prev = {
						random_owned_fleet = {
							limit = { AND = { has_fleet_flag = PF22_pf_attack_fleet NOT = { has_fleet_flag = PF22_pf_lost_control } } }
							prevprev = {
								auto_follow_fleet = {
									target = prev
									attack_fleet = yes
								}
							}
						}
					}
				}
				3 = {
					auto_move_to_planet = { 
						target = event_target:PF22_home_world
						clear_auto_move_on_arrival = yes 
					}
				}
			}
		}
	}
}

PF22_make_cultist_faction = {
	set_country_flag = PF22_cultist_faction_allowed
	random_owned_planet = {
		while = {
			count = 6
			random_owned_pop = {
				limit = { planet = { owner = { any_situation = { target = { is_same_value = prevprevprev } } } } }
				set_pop_flag = PF22_cultist
			}
		}
	}
	set_country_flag = PF22_pf_faction_spawn
	set_timed_country_flag = { flag = PF22_pf_faction_spawn_timed days = 955 }
	country_event = { id = PF22.236 days = 20 }
}

PF22_trigger_cult_event = {
	random_situation = {
		limit = { is_situation_type = situation_PF22_cult }
		situation_event = { id = PF22.238 }
	}
}

PF22_introduce = {
	every_playable_country = {
		establish_communications = prev
	}
}

PF22_repeal_all_galactic_focus_resolutions = {
	remove_global_flag = galactic_focus_crisis_prethoryn
	remove_global_flag = galactic_focus_crisis_contingency
	remove_global_flag = galactic_focus_crisis_unbidden
	remove_global_flag = galactic_focus_crisis_greatkhan
	remove_global_flag = galactic_focus_crisis_nanites
	remove_global_flag = galactic_focus_war_in_heaven
	remove_global_flag = galactic_focus_crisis_PF22_primeflesh
	cancel_resolution = resolution_galactic_focus_crisis_prethoryn
	cancel_resolution = resolution_galactic_focus_crisis_contingency
	cancel_resolution = resolution_galactic_focus_crisis_unbidden
	cancel_resolution = resolution_galactic_focus_crisis_greatkhan
	cancel_resolution = resolution_galactic_focus_crisis_nanites
	cancel_resolution = resolution_galactic_focus_crisis_PF22_primeflesh
	if = { #these are in IFs because the hidden description raises error messages on their names otherwise
		limit = {
			OR = {
				is_active_resolution = resolution_galactic_focus_war_in_heaven_support_side_1
				is_voting_on_resolution = resolution_galactic_focus_war_in_heaven_support_side_1
			}
		}
		cancel_resolution = resolution_galactic_focus_war_in_heaven_support_side_1
	}
	if = {
		limit = {
			OR = {
				is_active_resolution = resolution_galactic_focus_war_in_heaven_support_side_2
				is_voting_on_resolution = resolution_galactic_focus_war_in_heaven_support_side_2
			}
		}
		cancel_resolution = resolution_galactic_focus_war_in_heaven_support_side_2
	}
	cancel_resolution = resolution_galactic_focus_war_in_heaven_denounce_both
}

PF22_pf_cult_ground_assault = {
	# Scope is: planet
	if = {
		limit = { 
			AND = {
				has_global_flag = PF22_in_progress 
				owner = { NOT = { is_same_value = event_target:PF22_pf_country } }
				is_occupied_flag = no
			}
		}
		if = {
			limit = { NOT = { exists = event_target:PF22_pf_cultist_country } }
			create_country = {
				name = "NAME_pf_country_cultists"
				name_list = PF22_pf_namelist
				species = event_target:PF22_pf_species
				type = PF22_prime_flesh_destroyed
				flag = {
					icon= {
						category = "PF22_pf_flags"
						file = "PF22_pf_flag.dds"
					}
					background= {
						category = "backgrounds"
						file = "circle.dds"
					}
					colors={
						"dark_grey"
						"red"
						"null"
						"null"
					}
				}
				effect = {
					save_global_event_target_as = PF22_pf_cultist_country
				}
			}
		}
		while = {
			count = value:PF22_num_armies
			create_army = {
				name = "NAME_PF22_pf_cultist_army"
				owner = event_target:PF22_pf_cultist_country
				species = event_target:PF22_pf_species
				type = "PF22_pf_army"
			}
			random_owned_pop = { kill_pop = yes }
		}
	}
}
