# Create Planet-States

# Create Egalitarian Planet-State. Called from System scope.
create_planet_state_egalitarian = {
	set_star_flag = planet_state

	# Choose planet
	random_system_planet = {
		limit = {
			uninhabitable_regular_planet = yes
			has_anomaly = no
		}

		# Set Planet Size and Class
		prevent_anomaly = yes
		set_planet_size = 25
		change_pc = pc_city

		# Create Species and Country
		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			traits = {
				trait = trait_venerable
				trait = trait_communal
			}
		}
		last_created_species = {
			save_event_target_as = ps_egalitarian_main_species
		}
		create_country = {
			name = random
			type = planet_state
			authority = "auth_democratic"
			civics = {
				civic = civic_planet_state
				civic = civic_idealistic_foundation
				civic = civic_shared_burden
			}
			species = last_created
			flag = random
			ethos = {
				ethic = ethic_fanatic_egalitarian
			}
			ignore_initial_colony_error = yes
		}

		# Create Station and Leader
		last_created_country = {
			set_country_flag = ps_egalitarian
			save_event_target_as = target_ps_egalitarian
			create_fleet = {
				name = "NAME_PS_Egalitarian_Fleet"
				settings = { spawn_debris = no }
				effect = {
					set_owner = prev
					create_ship = {
						name = random
						design = "NAME_Planet_State_Station"
						graphical_culture = prev
					}
					set_location = {
						target = prevprev
						angle = random
						distance = 15
					}
				}
			}
			create_leader = {
				class = ruler
				species = prev
				name = random
				skill = 5
			}
			set_leader = last_created_leader
		}

		# Set Planet-State as Owner of the planet
		set_owner = event_target:target_ps_egalitarian
		set_controller = event_target:target_ps_egalitarian
		set_capital = yes

		# Add Builings, Districts, Pops
		add_building = building_ps_capitol
		add_building = building_hall_judgment
		add_building = building_ps_anti_matter_reactor
		add_building = building_ps_aeroponics_farms_complex
		add_building = building_ps_aeroponics_farms_complex
		add_building = building_ps_mineral_purification_complex
		add_building = building_ps_mineral_purification_complex
		add_building = building_ps_multidimensional_printers
		add_building = building_ps_multidimensional_printers
		add_building = building_ps_leisure_complex
		add_building = building_ps_leisure_complex
		add_building = building_ps_distillation_complex
		add_building = building_ps_chemical_complex
		add_building = building_ps_synthesizers_complex
		add_building = building_galactic_stock_exchange
		add_building = building_autocurating_vault
		while = {
			count = 25
			add_district = district_arcology_housing
		}
		while = {
			count = 400
			create_pop = {
				species = owner_main_species
				ethos = { ethic = ethic_fanatic_egalitarian }
			}
		}

		event_target:target_ps_egalitarian = {
			set_policy = {
				policy = food_policy
				option = food_policy_generous
				cooldown = no
			}
			set_policy = {
				policy = purge
				option = purge_not_allowed
				cooldown = no
			}
			set_policy = {
				policy = resettlement
				option = resettlement_not_allowed
				cooldown = no
			}
		}
	}
}

# Create Authoritarian Planet-State. Called from planet scope.
create_planet_state_authoritarian = {
	set_star_flag = planet_state

	# Choose planet
	random_system_planet = {
		limit = {
			uninhabitable_regular_planet = yes
			has_anomaly = no
		}

		# Set Planet Size and Class
		prevent_anomaly = yes
		set_planet_size = 25
		change_pc = pc_nuked
		clear_deposits = yes
		add_deposit = d_submerged_ore_veins
		add_deposit = d_submerged_ore_veins
		add_deposit = d_submerged_ore_veins
		add_deposit = d_submerged_ore_veins
		add_deposit = d_submerged_ore_veins
		add_deposit = d_lichen_fields
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
		add_deposit = d_fungal_caves
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
		add_deposit = d_fungal_caves
		add_deposit = d_fungal_caves

		# Create Species and Country
		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			homeworld = THIS
			traits = {
				trait = trait_survivor
				trait = trait_erudite
				trait = trait_decadent
			}
		}
		last_created_species = {
			save_event_target_as = ps_authoritarian_main_species
		}
		create_country = {
			name = random
			type = planet_state
			authority = "auth_imperial"
			civics = {
				civic = civic_planet_state
				civic = civic_aristocratic_elite
				civic = civic_functional_architecture
			}
			species = last_created
			flag = random
			ethos = {
				ethic = ethic_fanatic_authoritarian
			}
			ignore_initial_colony_error = yes
		}

		# Create Station and Leader
		last_created_country = {
			set_country_flag = ps_authoritarian
			save_event_target_as = target_ps_authoritarian
			create_fleet = {
				name = "NAME_PS_Authoritarian_Fleet"
				settings = { spawn_debris = no }
				effect = {
					set_owner = prev
					create_ship = {
						name = random
						design = "NAME_Planet_State_Station"
						graphical_culture = prev
					}
					set_location = {
						target = prevprev
						angle = random
						distance = 15
					}
				}
			}
			create_leader = {
				class = ruler
				species = prev
				name = random
				skill = 5
			}
			set_leader = last_created_leader
		}

		# Set Planet-State as Owner of the planet
		set_owner = event_target:target_ps_authoritarian
		set_controller = event_target:target_ps_authoritarian
		set_capital = yes

		# Add Builings, Districts, Pops
		add_building = building_ps_capitol
		add_building = building_ps_manorial_lands
		add_building = building_ps_manorial_lands
		add_building = building_ps_crowded_serf_houses
		add_building = building_ps_crowded_serf_houses
		add_building = building_ps_crowded_serf_houses
		add_building = building_ps_crowded_serf_houses
		add_building = building_ps_crowded_serf_houses
		add_building = building_ps_crowded_serf_houses
		add_building = building_ps_anti_matter_reactor
		add_building = building_ps_aeroponics_farms_complex
		add_building = building_ps_mineral_purification_complex
		add_building = building_ps_multidimensional_printers
		add_building = building_ps_distillation_complex
		add_building = building_ps_chemical_complex
		add_building = building_ps_synthesizers_complex
		while = {
			count = 12
			add_district = district_farming
		}
		while = {
			count = 13
			add_district = district_mining
		}

		while = {
			count = 27
			create_pop = {
				species = owner_main_species
				ethos = { ethic = ethic_fanatic_authoritarian }
			}
		}

		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			homeworld = THIS
			traits = {
				trait = trait_survivor
				trait = trait_uplifted
				trait = trait_presapient_proles
				trait = trait_robust
			}
		}
		last_created_species = {
			save_event_target_as = ps_authoritarian_specialist_species
		}
		while = {
			count = 53
			create_pop = {
				species = event_target:ps_authoritarian_specialist_species
				ethos = { ethic = ethic_fanatic_authoritarian }
			}
		}

		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			homeworld = THIS
			traits = {
				trait = trait_survivor
				trait = trait_uplifted
				trait = trait_presapient_proles
				trait = trait_charismatic
			}
		}
		last_created_species = {
			save_event_target_as = ps_authoritarian_servile_species
		}
		while = {
			count = 140
			create_pop = {
				species = event_target:ps_authoritarian_servile_species
				ethos = { ethic = ethic_fanatic_authoritarian }
			}
		}

		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			homeworld = THIS
			traits = {
				trait = trait_survivor
				trait = trait_syncretic_proles
				trait = trait_very_strong
				trait = trait_nerve_stapled
			}
		}
		last_created_species = {
			save_event_target_as = ps_authoritarian_slave_species
		}
		while = {
			count = 125
			create_pop = {
				species = event_target:ps_authoritarian_slave_species
				ethos = { ethic = ethic_fanatic_authoritarian }
			}
		}
	}
}

# Create Militarist Planet-State. Called from planet scope.
create_planet_state_militarist = {
	set_star_flag = planet_state

	# Choose planet
	random_system_planet = {
		limit = {
			uninhabitable_regular_planet = yes
			has_anomaly = no
		}

		# Set Planet Size and Class
		prevent_anomaly = yes
		set_planet_size = 25
		change_pc = rl_habitable_normal

		# Create Species and Country
		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			homeworld = THIS
			traits = {
				trait = trait_very_strong
				trait = trait_resilient
				trait = trait_quarrelsome
			}
		}
		last_created_species = {
			save_event_target_as = ps_militarist_main_species
		}
		create_country = {
			name = random
			type = planet_state
			authority = "auth_dictatorial"
			civics = {
				civic = civic_planet_state
				civic = civic_distinguished_admiralty
				civic = civic_warrior_culture
			}
			species = last_created
			flag = random
			ethos = {
				ethic = ethic_fanatic_militarist
			}
			ignore_initial_colony_error = yes
		}

		# Create Station and Leader
		last_created_country = {
			set_country_flag = ps_militarist
			save_event_target_as = target_ps_militarist
			create_fleet = {
				name = "NAME_PS_Militarist_Fleet"
				settings = { spawn_debris = no }
				effect = {
					set_owner = prev
					create_ship = {
						name = random
						design = "NAME_Planet_State_Station"
						graphical_culture = prev
					}
					set_location = {
						target = prevprev
						angle = random
						distance = 15
					}
				}
			}
			create_leader = {
				class = ruler
				species = prev
				name = random
				skill = 5
			}
			set_leader = last_created_leader
		}

		# Set Planet-State as Owner of the planet
		set_owner = event_target:target_ps_militarist
		set_controller = event_target:target_ps_militarist
		set_capital = yes

		# Add Builings, Districts, Pops
		add_building = building_ps_capitol
		add_building = building_ps_anti_matter_reactor
		add_building = building_ps_aeroponics_farms_complex
		add_building = building_ps_mineral_purification_complex
		add_building = building_ps_multidimensional_printers
		add_building = building_ps_leisure_complex
		add_building = building_ps_distillation_complex
		add_building = building_ps_chemical_complex
		add_building = building_ps_synthesizers_complex
		add_building = building_ps_bastion
		add_building = building_ps_bastion
		add_building = building_ps_bastion
		add_building = building_ps_bastion
		add_building = building_ps_bastion
		add_building = building_ps_bastion
		add_building = building_ps_bastion
		while = {
			count = 25
			add_district = district_city
		}
		while = {
			count = 85
			create_pop = {
				species = owner_main_species
				ethos = { ethic = ethic_fanatic_militarist }
			}
		}

		create_species = {
			name = "NAME_Synthetic"
			plural = "NAME_Synthetics"
			class = ROBOT
			portrait = "default_robot"
			namelist = random
			traits = {
				trait = "trait_mechanical"
				trait = "trait_robot_efficient_processors"
				trait = "trait_robot_loyalty_circuits"
			}
		}
		last_created_species = {
			save_event_target_as = ps_militarist_robot_species
		}
		while = {
			count = 168
			create_pop = {
				species = event_target:ps_militarist_robot_species
			}
		}
	}
}

# Create Pacifist Planet-State. Called from planet scope.
create_planet_state_pacifist = {
	set_star_flag = planet_state

	# Choose planet
	random_system_planet = {
		limit = {
			uninhabitable_regular_planet = yes
			has_anomaly = no
		}

		# Set Planet Size and Class
		prevent_anomaly = yes
		set_planet_size = 25
		change_pc = pc_gaia
		clear_deposits = yes
		add_deposit = d_buzzing_plains
		add_deposit = d_searing_desert
		add_deposit = d_frozen_gas_lake
		add_deposit = d_underwater_vent
		add_deposit = d_tempestous_mountain
		add_deposit = d_prosperous_mesa
		add_deposit = d_ore_rich_caverns
		add_deposit = d_mineral_striations
		add_deposit = d_rich_mountain
		add_deposit = d_submerged_ore_veins
		add_deposit = d_natural_farmland
		add_deposit = d_bountiful_plains
		add_deposit = d_lush_jungle
		add_deposit = d_fertile_lands
		add_deposit = d_black_soil
		add_deposit = d_teeming_reef
		add_deposit = d_crystalline_caverns
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit
		add_deposit = d_alien_pets_deposit

		# Create Species and Country
		create_species = {
			name = random
			class = random_non_machine
			portrait = random
			homeworld = THIS
			traits = {
				trait = trait_conservational
				trait = trait_traditional
				trait = trait_agrarian
				trait = trait_communal
				trait = trait_nonadaptive
			}
		}
		create_country = {
			name = random
			type = planet_state
			authority = "auth_oligarchic"
			civics = {
				civic = civic_planet_state
				civic = civic_agrarian_idyll
				civic = civic_environmentalist
			}
			species = last_created
			flag = random
			ethos = {
				ethic = ethic_fanatic_pacifist
			}
			ignore_initial_colony_error = yes
		}

		# Create Station and Leader
		last_created_country = {
			set_country_flag = ps_pacifist
			save_event_target_as = target_ps_pacifist
			create_fleet = {
				name = "NAME_PS_Pacifist_Fleet"
				settings = { spawn_debris = no }
				effect = {
					set_owner = prev
					create_ship = {
						name = random
						design = "NAME_Planet_State_Station"
						graphical_culture = prev
					}
					set_location = {
						target = prevprev
						angle = random
						distance = 15
					}
				}
			}
			create_leader = {
				class = ruler
				species = prev
				name = random
				skill = 5
			}
			set_leader = last_created_leader
		}

		# Set Planet-State as Owner of the planet
		set_owner = event_target:target_ps_pacifist
		set_controller = event_target:target_ps_pacifist
		set_capital = yes

		# Add Builings, Districts, Pops
		add_building = building_ps_capitol
		add_building = building_hall_judgment
		add_building = building_ps_multidimensional_printers
		add_building = building_paradise_dome
		add_building = building_paradise_dome
		add_building = building_crystal_mines
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		add_building = building_xeno_zoo
		while = {
			count = 5
			add_district = district_farming
		}
		while = {
			count = 10
			add_district = district_mining
		}
		while = {
			count = 10
			add_district = district_generator
		}
		while = {
			count = 126
			create_pop = {
				species = owner_main_species
				ethos = { ethic = ethic_fanatic_pacifist }
			}
		}
	}
}

# Remove Egalitarian PS Trade Deals
remove_ps_egalitarian_trade_deal = {
	if = {
		limit = { has_modifier = modifier_ps_egalitarian_trade_deal_1 }
		remove_modifier = modifier_ps_egalitarian_trade_deal_1
	}
	if = {
		limit = { has_modifier = modifier_ps_egalitarian_trade_deal_2 }
		remove_modifier = modifier_ps_egalitarian_trade_deal_2
	}
	if = {
		limit = { has_modifier = modifier_ps_egalitarian_trade_deal_3 }
		remove_modifier = modifier_ps_egalitarian_trade_deal_3
	}
	if = {
		limit = { has_modifier = modifier_ps_egalitarian_trade_deal_4 }
		remove_modifier = modifier_ps_egalitarian_trade_deal_4
	}
	if = {
		limit = { has_modifier = modifier_ps_egalitarian_trade_deal_5 }
		remove_modifier = modifier_ps_egalitarian_trade_deal_5
	}
}
# Remove Egalitarian PS Trade Deals + Pact
remove_all_ps_egalitarian_deals = {
	remove_ps_egalitarian_trade_deal = yes
	if = {
		limit = { has_modifier = modifier_ps_egalitarian_commercial_pact }
		remove_modifier = modifier_ps_egalitarian_commercial_pact
	}
}

# Remove Authoritarian PS Trade Deals
remove_ps_authoritarian_trade_deal = {
	if = {
		limit = { has_modifier = modifier_ps_authoritarian_trade_deal_1 }
		remove_modifier = modifier_ps_authoritarian_trade_deal_1
	}
	if = {
		limit = { has_modifier = modifier_ps_authoritarian_trade_deal_2 }
		remove_modifier = modifier_ps_authoritarian_trade_deal_2
	}
	if = {
		limit = { has_modifier = modifier_ps_authoritarian_trade_deal_3 }
		remove_modifier = modifier_ps_authoritarian_trade_deal_3
	}
	if = {
		limit = { has_modifier = modifier_ps_authoritarian_trade_deal_4 }
		remove_modifier = modifier_ps_authoritarian_trade_deal_4
	}
	if = {
		limit = { has_modifier = modifier_ps_authoritarian_trade_deal_5 }
		remove_modifier = modifier_ps_authoritarian_trade_deal_5
	}
}
# Remove Authoritarian PS Trade Deals + Pact
remove_all_ps_authoritarian_deals = {
	remove_ps_authoritarian_trade_deal = yes
	if = {
		limit = { has_modifier = modifier_ps_authoritarian_commercial_pact }
		remove_modifier = modifier_ps_authoritarian_commercial_pact
	}
}

# Remove Militarist PS Trade Deals
remove_ps_militarist_trade_deal = {
	if = {
		limit = { has_modifier = modifier_ps_militarist_trade_deal_1 }
		remove_modifier = modifier_ps_militarist_trade_deal_1
	}
	if = {
		limit = { has_modifier = modifier_ps_militarist_trade_deal_2 }
		remove_modifier = modifier_ps_militarist_trade_deal_2
	}
	if = {
		limit = { has_modifier = modifier_ps_militarist_trade_deal_3 }
		remove_modifier = modifier_ps_militarist_trade_deal_3
	}
	if = {
		limit = { has_modifier = modifier_ps_militarist_trade_deal_4 }
		remove_modifier = modifier_ps_militarist_trade_deal_4
	}
	if = {
		limit = { has_modifier = modifier_ps_militarist_trade_deal_5 }
		remove_modifier = modifier_ps_militarist_trade_deal_5
	}
}
# Remove Militarist PS Trade Deals + Pact
remove_all_ps_militarist_deals = {
	remove_ps_militarist_trade_deal = yes
	if = {
		limit = { has_modifier = modifier_ps_militarist_commercial_pact }
		remove_modifier = modifier_ps_militarist_commercial_pact
	}
}

# Remove Pacifist PS Trade Deals
remove_ps_pacifist_trade_deal = {
	if = {
		limit = { has_modifier = modifier_ps_pacifist_trade_deal_1 }
		remove_modifier = modifier_ps_pacifist_trade_deal_1
	}
	if = {
		limit = { has_modifier = modifier_ps_pacifist_trade_deal_2 }
		remove_modifier = modifier_ps_pacifist_trade_deal_2
	}
	if = {
		limit = { has_modifier = modifier_ps_pacifist_trade_deal_3 }
		remove_modifier = modifier_ps_pacifist_trade_deal_3
	}
	if = {
		limit = { has_modifier = modifier_ps_pacifist_trade_deal_4 }
		remove_modifier = modifier_ps_pacifist_trade_deal_4
	}
	if = {
		limit = { has_modifier = modifier_ps_pacifist_trade_deal_5 }
		remove_modifier = modifier_ps_pacifist_trade_deal_5
	}
}
# Remove Pacifist PS Trade Deals + Pact
remove_all_ps_pacifist_deals = {
	remove_ps_pacifist_trade_deal = yes
	if = {
		limit = { has_modifier = modifier_ps_pacifist_commercial_pact }
		remove_modifier = modifier_ps_pacifist_commercial_pact
	}
}
