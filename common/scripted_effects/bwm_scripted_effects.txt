#Misc

bwm_throne_nuked_tiles = {
	#add_building = "bwm_building_ancient_ruin_2"
	# add_deposit = d_rich_mineral_energy_deposit
	add_building = "building_nourishment_center"
	# add_deposit = d_rich_farmland_deposit
	add_building = "building_class_4_singularity"
	# add_deposit = d_rich_energy_deposit 
	add_building = "building_class_4_singularity"
	# add_deposit = d_rich_energy_deposit 
	add_building = "building_dimensional_fabricator"
	add_building = "building_nano_forge"
	# add_deposit = d_rich_mineral_deposit
	add_building = "bwm_building_ancient_monolith_0"
	# add_deposit = "tb_ancient_ruins"
	# add_deposit = d_vast_engineering_deposit
	# add_deposit = "tb_ancient_ruins"	
	# add_deposit = d_vast_society_deposit
	# add_deposit = "tb_ancient_ruins"
	# add_deposit = d_vast_physics_deposit
	# add_deposit = "tb_bomb_crater"
	# add_deposit = d_energy_deposit
	# add_deposit = "tb_bomb_crater"
	# add_deposit = d_energy_deposit
}

bwm_throne_science_tiles = {
	#add_building = "bwm_building_ancient_ruin_2"
	# add_deposit = d_rich_mineral_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_farmland_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_farmland_deposit
	add_building = "bwm_building_ancient_monolith_0"
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_engineering_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_society_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_physics_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_engineering_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_society_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_physics_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_engineering_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_society_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_physics_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_engineering_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_society_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_physics_deposit
}

bwm_throne_energy_tiles = {
	#add_building = "bwm_building_ancient_ruin_2"
	# add_deposit = d_rich_mineral_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_farmland_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_farmland_deposit
	add_building = "bwm_building_ancient_monolith_0"
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_energy_deposit
}

bwm_throne_mineral_tiles = {
	#add_building = "bwm_building_ancient_ruin_2"
	# add_deposit = d_rich_mineral_energy_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_farmland_deposit			
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_farmland_deposit			
	add_building = "bwm_building_ancient_monolith_0"	
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
	add_building = "bwm_building_ancient_ruin_1"
	# add_deposit = d_vast_mineral_deposit
}

bwm_primitives_spawn = {
	create_species = {
		name = random
		class = random
		portrait = random
		homeworld = THIS
		traits = {
			trait = random_traits
		}
	}
	create_country = {
		name = random
		authority = random
		civics = {
			civic = civic_landed_nobility
			civic = civic_flat_world_theory
		}
		species = last_created
		ethos = random
		flag = {
			icon = {
				category = "special"
				file = "primitive.dds"
			}
			background= {
				category = "backgrounds"
				file = "new_dawn.dds"
			}
			colors={
				"turquoise"
				"green"
				"null"
				"null"
			}
		}
		type = primitive
	}
	last_created_country = {
		set_graphical_culture = preindustrial_01
		random_list = {
			25 = {
				set_country_flag = bronze_age 
				set_primitive_age = bronze_age
				change_government = {
					authority = random
					civics = {
						civic = civic_secret_of_fire
						civic = civic_the_wheel
					}
				}
				change_country_flag = {
					icon = {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors={
						"green"
						"dark_green"
						"null"
						"null"
					}
				}
			}
			25 = {
				set_country_flag = iron_age 
				set_primitive_age = iron_age
				change_country_flag = {
					icon = {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors={
						"purple"
						"dark_purple"
						"null"
						"null"
					}
				}
			}
			25 = {
				set_country_flag = late_medieval_age 
				set_primitive_age = late_medieval_age
				change_country_flag = {
					icon = {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors={
						"light_blue"
						"blue"
						"null"
						"null"
					}
				}
			}
			25 = {
				set_country_flag = renaissance_age 
				set_primitive_age = renaissance_age
				change_country_flag = {
					icon = {
						category = "special"
						file = "primitive.dds"
					}
					background= {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors={
						"pink"
						"burgundy"
						"null"
						"null"
					}
				}
			}
		}
	}
	create_colony = {
		owner = last_created_country
		species = last_created
		ethos = owner
	}
	while = {
		count = 2
		create_pop = {
			species = last_created
		}
	}
	if = {
		limit = {
			last_created_country = {
				has_country_flag = renaissance_age
			}
		}
		while = {
			count = 2
			create_pop = {
				species = last_created
			}
		}						
	}
	if = {
		limit = { has_building = "building_colony_shelter" }
		remove_building = building_colony_shelter
	}					
	while = {
		count = 4
		add_district = district_farming
		add_building = "building_primitive_farm"
		# add_deposit = d_vast_farmland_deposit
	}
	if = {
		limit = {
			last_created_country = {
				OR = {
					has_country_flag = iron_age 
					has_country_flag = late_medieval_age 									
					has_country_flag = renaissance_age
				}
			}
		}
		while = {
			count = 2
			create_pop = {
				species = last_created
			}
		}		
		while = {
			count = 2
			add_district = district_farming
	#		random_tile = {
	#			limit = { 
	#				has_building = no 
	#				has_grown_pop = yes
	#			}
	#			if = {
	#				limit = {
	#					has_blocker = yes
	#				}
	#				remove_blocker = yes
	#			}
			add_building = "building_primitive_farm"
			# add_deposit = d_vast_farmland_deposit
	#		}
		}						
	}					
	if = {
		limit = {
			last_created_country = {
				has_country_flag = renaissance_age
			}
		}
		while = {
			count = 2
			add_district = district_farming
	#		random_tile = {
	#			limit = { 
	#				has_building = no 
	#				has_grown_pop = yes
	#			}
	#			if = {
	#				limit = {
	#					has_blocker = yes
	#				}
	#				remove_blocker = yes
	#			}
			add_building = "building_primitive_farm"
			# add_deposit = d_vast_farmland_deposit
	#		}
		}						
	}				
	last_created_country = {				
		if = {
			limit = { has_country_flag = bronze_age }
			PREV = {
				while = {
					count = 2
					create_army = {
						name = "NAME_Primitive_Army"
						owner = last_created
						species = last_created
						type = "primitive_army"
					}
				}
			}
			break = yes
		}
		if = {
			limit = { has_country_flag = iron_age }
			PREV = {
				while = {
					count = 4
					create_army = {
						name = "NAME_Primitive_Army"
						owner = last_created
						species = last_created
						type = "primitive_army"
					}
				}
			}
			break = yes
		}
		if = {
			limit = { has_country_flag = late_medieval_age }
			PREV = {
				while = {
					count = 6
					create_army = {
						name = "NAME_Primitive_Army"
						owner = last_created
						species = last_created
						type = "primitive_army"
					}
				}
			}
			break = yes
		}
		if = {
			limit = { has_country_flag = renaissance_age }
			PREV = {
				while = {
					count = 8
					create_army = {
						name = "NAME_Primitive_Army"
						owner = last_created
						species = last_created
						type = "primitive_army"
					}
				}
			}
			break = yes
		}
	}
}

bwm_megastructure_swap = {
	every_system_megastructure = {
		if = {
			limit = {
				OR = {
					is_megastructure_type = habitat_0
					is_megastructure_type = bwm_solar_envoy_project_00
					is_megastructure_type = bwm_gravekeeper_project_00
					is_megastructure_type = bwm_magma_diver_project_00
					is_megastructure_type = bwm_ancient_weapon_project_00
					is_megastructure_type = bwm_conduit_shipyard_00
				}
			}
			this.planet = {
				if = {
					limit = {
						has_planet_flag = has_megastructure
					}
					remove_planet_flag = has_megastructure
				}
			}
			remove_megastructure = this
		}
		if = {
			limit = {
				is_megastructure_type = ring_world_1
			}
			prev = {
				if = {
					limit = {
						has_star_flag = ring_world_built
					}
					remove_star_flag = ring_world_built
				}
			}
			remove_megastructure = this
		}
		if = {
			limit = {
				is_megastructure_type = dyson_sphere_0
			}
			prev = {
				if = {
					limit = {
						has_star_flag = dyson_sphere_built
					}
					remove_star_flag = dyson_sphere_built
				}
			}
			remove_megastructure = this
		}
		if = {
			limit = {
				OR = {
					is_megastructure_type = dyson_sphere_5
					is_megastructure_type = dyson_sphere_restored
				}
			}
			this.planet = {
				save_event_target_as = bwm_megastructure_dyson_loc
			}
			prev = {
				if = {
					limit = {
						has_star_flag = dyson_sphere_built
					}
					remove_star_flag = dyson_sphere_built
				}
				spawn_megastructure = { 
					type = "dyson_sphere_ruined" 
					coords_from = event_target:bwm_megastructure_dyson_loc
				}
			}
			remove_megastructure = this
		}
		if = {
			limit = {
				is_megastructure_type = spy_orb_0
			}
			prev = {
				if = {
					limit = {
						has_star_flag = spy_orb_built
					}
					remove_star_flag = spy_orb_built
				}
			}
			remove_megastructure = this
		}
		if = {
			limit = {
				OR = {
					is_megastructure_type = spy_orb_4
					is_megastructure_type = spy_orb_restored
				}
			}
			this.planet = {
				save_event_target_as = bwm_megastructure_spy_loc
			}
			prev = {
				if = {
					limit = {
						has_star_flag = spy_orb_built
					}
					remove_star_flag = spy_orb_built
				}
				spawn_megastructure = { 
					type = "spy_orb_ruined" 
					coords_from = event_target:bwm_megastructure_spy_loc
				}
			}
			remove_megastructure = this
		}
		if = {
			limit = {
				is_megastructure_type = think_tank_0
			}
			prev = {
				if = {
					limit = {
						has_star_flag = think_tank_built
					}
					remove_star_flag = think_tank_built
				}
			}
			this.planet = {
				if = {
					limit = {
						has_planet_flag = has_megastructure
					}
					remove_planet_flag = has_megastructure
				}
			}
			remove_megastructure = this
		}
		if = {
			limit = {
				OR = {
					is_megastructure_type = think_tank_3
					is_megastructure_type = think_tank_4
					is_megastructure_type = think_tank_restored
				}
			}
			this.planet = {
				if = {
					limit = {
						has_planet_flag = has_megastructure
					}
					remove_planet_flag = has_megastructure
				}
				save_event_target_as = bwm_megastructure_think_loc
			}
			prev = {
				if = {
					limit = {
						has_star_flag = think_tank_built
					}
					remove_star_flag = think_tank_built
				}
				spawn_megastructure = { 
					type = "think_tank_ruined" 
					coords_from = event_target:bwm_megastructure_think_loc
				}
			}
			remove_megastructure = this
		}
	}
}

bwm_megastructure_erase = {
	every_system_megastructure = {
		if = {
			limit = {
				exists = this
			}
			remove_megastructure = this
		}
	}
}

bwm_awaken = {
	random_list = {
		50 = {
			if = {
				limit = {
					NOT = {
						has_global_flag = high_awaken_chance
					}
				}
				set_global_flag = high_awaken_chance
			}
		}
		50 = {
		}
	}
}

bwm_overdrive = {
	if = {
		limit = {
			NOT = {
				has_modifier = bwm_leviathan_cooldown
			}
		}
		add_modifier = {
			modifier = "bwm_leviathan_overdrive"
			days = -1
		}
	}
}

bwm_overdrive_cd = {
	if = {
		limit = {
			has_modifier = bwm_leviathan_overdrive
		}
		remove_modifier = "bwm_leviathan_overdrive"
	}
	if = {
		limit = {
			NOT = {
				has_modifier = bwm_leviathan_cooldown
			}
		}
		add_modifier = {
			modifier = "bwm_leviathan_cooldown"
			days = 30
		}
	}
}

### EFFECT SNIPPETS

bwm_effect_explosion_small_2 = {
	create_ambient_object = {
		type = bwm_effect_explosion_small_1
		location = THIS
		duration = 10
			
		use_3d_location = yes
			
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
			
		entity_scale_to_size = yes
		scale = 5
	}
}

bwm_effect_explosion_small_1 = {
	create_ambient_object = {
		type = bwm_effect_explosion_small
		location = THIS
		duration = 10
			
		use_3d_location = yes
			
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
			
		entity_scale_to_size = yes
		scale = 1
	}
}

bwm_effect_explosion_1 = {
	create_ambient_object = {
		type = bwm_effect_explosion_1_object
		location = THIS
		duration = 10
			
		use_3d_location = yes
			
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
			
		entity_scale_to_size = yes
		scale = 10
	}
}

bwm_effect_explosion_2 = {
	create_ambient_object = {
		type = bwm_effect_explosion_2_object
		location = THIS
		duration = 10
		
		use_3d_location = yes
		
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 10
	}
}

bwm_effect_explosion_2_big = {
	create_ambient_object = {
		type = bwm_effect_explosion_2_object
		location = THIS
		duration = 10
		
		use_3d_location = yes
		
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 100
	}
}

bwm_effect_explosion_4 = {
	create_ambient_object = {
		type = bwm_effect_explosion_4_object
			location = THIS
			duration = 10
				
			use_3d_location = yes
				
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
				
			entity_scale_to_size = yes
			scale = 100
	}
}

bwm_effect_explosion_5_big = {
	create_ambient_object = {
		type = bwm_effect_explosion_5_object
		location = THIS
		duration = 10
		
		use_3d_location = yes
		
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 100
	}
}

bwm_effect_explosion_6_small = {
	create_ambient_object = {
		type = bwm_effect_explosion_6_object
		duration = 10
		
		location = this
		
		use_3d_location = yes
		
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 5
	}
}

bwm_effect_explosion_6_big = {
	create_ambient_object = {
		type = bwm_effect_explosion_6_object
		duration = 10
		
		location = this
		
		use_3d_location = yes
		
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 100
	}
}

bwm_effect_explosion_7 = {
	create_ambient_object = {
		type = bwm_effect_explosion_7_object
		location = THIS
		duration = 10
			
		use_3d_location = yes
			
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
			
		entity_scale_to_size = yes
		scale = 1.0
	}
}

bwm_effect_explosion_8 = {
	create_ambient_object = {
		type = bwm_effect_explosion_8_object
		location = THIS
		duration = 10
			
		use_3d_location = yes
			
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
			
		entity_scale_to_size = yes
		scale = 5.0
	}
}

bwm_effect_explosion_AOE = {
	create_ambient_object = {
	type = bwm_effect_explosion_AOE_object
	location = THIS
	duration = 10
		
	use_3d_location = yes
		
	entity_offset = { min = 0 max = 0 }
	entity_offset_angle = { min = 0 max = 0 }
	entity_offset_height = { min = 0 max = 0 }
		
	entity_scale_to_size = yes
	scale = 100
	}
}

###bwm CONDUIT EFFECTS
bwm_conduit_pillar_stations = {
	create_fleet = {
		name = "First Tower"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Ptah"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_conduit_pillar_1_station
				}
			}
			set_location = {
				target = event_target:bwm_conduit_pillar_1_spawn
				distance = -1
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Second Tower"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Ptah"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_conduit_pillar_2_station
				}
			}
			set_location = {
				target = event_target:bwm_conduit_pillar_2_spawn
				distance = 0
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Third Tower"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Ptah"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_conduit_pillar_3_station
				}
			}
			set_location = {
				target = event_target:bwm_conduit_pillar_3_spawn
				distance = 0
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Fourth Tower"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Ptah"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_conduit_pillar_4_station
				}
			}
			set_location = {
				target = event_target:bwm_conduit_pillar_4_spawn
				distance = 0
				angle = 0
			}
		}
	}
}

bwm_conduit_anchor_1 = {
	create_fleet = {
		name = "Eternal Crucible"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Atum"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_1_crucible
					while = {
						count = 4
						add_modifier = {
							modifier = "bwm_conduit_crucible_buff"
							days = -1
						}
					}
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = -1
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_1_fortress_1
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 120
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_1_fortress_2
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 120
				angle = 90
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_1_fortress_3
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 120
				angle = 180
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_1_fortress_4
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 120
				angle = 270
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 25
				angle = 60
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 25
				angle = 180
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 25
				angle = 300
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Seth"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 25
				angle = 0
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Osiris"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 25
				angle = 120
			}
			set_formation_scale = 3.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Anhur"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_1_spawn
				distance = 25
				angle = 240
			}
			set_formation_scale = 4.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

bwm_conduit_anchor_2 = {
	create_fleet = {
		name = "Eternal Crucible"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Atum"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_2_crucible
					while = {
						count = 4
						add_modifier = {
							modifier = "bwm_conduit_crucible_buff"
							days = -1
						}
					}
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = -1
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_2_fortress_1
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 120
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_2_fortress_2
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 120
				angle = 90
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_2_fortress_3
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 120
				angle = 180
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_2_fortress_4
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 120
				angle = 270
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 25
				angle = 60
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 25
				angle = 180
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 25
				angle = 300
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Seth"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 25
				angle = 0
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Osiris"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 25
				angle = 120
			}
			set_formation_scale = 3.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Anhur"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_2_spawn
				distance = 25
				angle = 240
			}
			set_formation_scale = 4.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

bwm_conduit_anchor_3 = {
	create_fleet = {
		name = "Eternal Crucible"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Atum"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_3_crucible
					while = {
						count = 4
						add_modifier = {
							modifier = "bwm_conduit_crucible_buff"
							days = -1
						}
					}
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = -1
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_3_fortress_1
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 120
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_3_fortress_2
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 120
				angle = 90
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_3_fortress_3
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 120
				angle = 180
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_3_fortress_4
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 120
				angle = 270
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 25
				angle = 60
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 25
				angle = 180
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 25
				angle = 300
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Seth"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 25
				angle = 0
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Osiris"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 25
				angle = 120
			}
			set_formation_scale = 3.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Anhur"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_3_spawn
				distance = 25
				angle = 240
			}
			set_formation_scale = 4.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

bwm_conduit_anchor_4 = {
	create_fleet = {
		name = "Eternal Crucible"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Atum"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_4_crucible
					while = {
						count = 4
						add_modifier = {
							modifier = "bwm_conduit_crucible_buff"
							days = -1
						}
					}
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = -1
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_4_fortress_1
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 120
				angle = 0
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_4_fortress_2
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 120
				angle = 90
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_4_fortress_3
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 120
				angle = 180
			}
		}
	}
	create_fleet = {
		name = "Eternal Holdfast"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Aten"
				graphical_culture = "fallen_empire_01"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_anchor_4_fortress_4
				}
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 120
				angle = 270
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 25
				angle = 60
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 25
				angle = 180
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 25
				angle = 300
			}
			set_formation_scale = 1.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Seth"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 25
				angle = 0
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Osiris"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 25
				angle = 120
			}
			set_formation_scale = 3.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Anhur"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_anchor_4_spawn
				distance = 25
				angle = 240
			}
			set_formation_scale = 4.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

bwm_conduit_bulwark = {
	create_fleet = {
		name = "Eternal Bulwark"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Kheru'ur"
				graphical_culture = "fallen_empire_03"
				prefix = no
				
				effect = {
					set_disable_at_health = 0.05
					while = {
					count = 4
						add_modifier = {
							modifier = "bwm_conduit_pillar_buff"
							days = -1
						}
					}
				}
			}
			set_location = {
					target = event_target:bwm_conduit_eye_spawn
					distance = 15
					angle = 45 
			}
			save_global_event_target_as = bwm_conduit_fortress_spawn
		}
	}
}

bwm_conduit_fleet_1 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}	
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.1a
						has_planet_flag = bwm_arcadia_patrol_1
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Seth"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.1b
						has_planet_flag = bwm_arcadia_patrol_1
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Osiris"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.1c
						has_planet_flag = bwm_arcadia_patrol_1
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Anhur"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.1d
						has_planet_flag = bwm_arcadia_patrol_1
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
}

bwm_conduit_fleet_2 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}	
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.2a
						has_planet_flag = bwm_arcadia_patrol_2
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Seth"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.2b
						has_planet_flag = bwm_arcadia_patrol_2
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Osiris"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.2c
						has_planet_flag = bwm_arcadia_patrol_2
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Anhur"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.2d
						has_planet_flag = bwm_arcadia_patrol_2
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
}

bwm_conduit_fleet_3 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}	
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.3a
						has_planet_flag = bwm_arcadia_patrol_3
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Seth"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.3b
						has_planet_flag = bwm_arcadia_patrol_3
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Osiris"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.3c
						has_planet_flag = bwm_arcadia_patrol_3
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Anhur"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
					
					effect = {
						while = {
						count = 4
							add_modifier = {
								modifier = "bwm_conduit_pillar_buff"
								days = -1
							}
						}
					}
				}	
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			queue_actions = {
				find_closest_planet  = {
					trigger = {
						id = bwm_conduit_gather.3d
						has_planet_flag = bwm_arcadia_patrol_3
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}	
			}
		}
	}
}

bwm_conduit_fleet_boss = {
	create_fleet = {
		name = "Eternal Vanguard"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			create_ship = {
				name = "Conduit"
				design = "Matet"
				graphical_culture = "fallen_empire_03"
				prefix = no
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_fleet_flag = bwm_conduit_boss_fleet
			set_formation_scale = 3.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_fleet_roaming_1 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_fleet_flag = bwm_conduit_fleet
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_fleet_roaming_2 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Seth"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_fleet_flag = bwm_conduit_fleet
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_fleet_roaming_3 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Osiris"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_fleet_flag = bwm_conduit_fleet
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_fleet_roaming_4 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Anhur"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = {
				target = event_target:bwm_conduit_fortress_spawn
				distance = 5
				angle = random
			}
			set_fleet_flag = bwm_conduit_fleet
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_summon_1 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = event_target:bwm_conduit_summon
			set_fleet_flag = bwm_conduit_fleet
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_summon_2 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Seth"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = event_target:bwm_conduit_summon
			set_fleet_flag = bwm_conduit_fleet
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_summon_3 = {
	create_fleet = {
		name = "Eternal Flotilla"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Osiris"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = event_target:bwm_conduit_summon
			set_fleet_flag = bwm_conduit_fleet
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_summon_4 = {
	create_fleet = {
		name = "Eternal Vanguard"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_conduit_country
			while = {
				count = 1
				create_ship = {
					name = "Conduit"
					design = "Anhur"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			while = {
				count = 6
				create_ship = {
					name = "Conduit"
					design = "Nephtys"
					graphical_culture = "fallen_empire_03"
					prefix = no
				}
			}
			set_location = event_target:bwm_conduit_summon
			set_fleet_flag = bwm_conduit_fleet
			set_formation_scale = 2.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

bwm_conduit_owner_swap = {
	every_fleet_in_system = {
		if = {
			limit = {
				NOT = {
					OWNER = {
						is_country_type = bwm_conduit_guardian
					}
				}
			}
			set_owner = event_target:bwm_conduit_country
			set_fleet_flag = bwm_conduit_fleet

			fleet_event = { id = bwm_the_conduit.57 }
		}
	}
}

###bwm ANCESTOR EFFECTS

#bwm ancestor star spawn templates 1

bwm_ancestor_infant = {
	create_fleet = {
		name = "Infant Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner
			create_ship = {
				name = "Fler"
				design = "Alpan I"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn
			set_fleet_flag = bwm_ancestor_infant_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}		
}

bwm_ancestor_young = {
	create_fleet = {
		name = "Young Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner
			create_ship = {
				name = "Fler"
				design = "Alpan II"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn
			set_fleet_flag = bwm_ancestor_infant_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}	
	}
}

bwm_ancestor_adult = {
	create_fleet = {
		name = "Adult Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner
			create_ship = {
				name = "Fler"
				design = "Alpan III"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn
			set_fleet_flag = bwm_ancestor_adult_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_elder = {
	create_fleet = {
		name = "Elder Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner
			create_ship = {
				name = "Fler"
				design = "Alpan IV"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn
			set_fleet_flag = bwm_ancestor_elder_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_immortal = {
	create_fleet = {
		name = "Dying Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner
			create_ship = {
				name = "Fler"
				design = "Alpan V"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn
			
			set_fleet_flag = bwm_ancestor_dying_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.9 }
		}
	}
}

#bwm_ancestor star spawn templates 2

bwm_ancestor_infant_1 = {
	create_fleet = {
		name = "Infant Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_1
			create_ship = {
				name = "Fler"
				design = "Alpan I"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_1
			set_fleet_flag = bwm_ancestor_infant_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_young_1 = {
	create_fleet = {
		name = "Young Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_1
			create_ship = {
				name = "Fler"
				design = "Alpan II"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_1
			set_fleet_flag = bwm_ancestor_young_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_adult_1 = {
	create_fleet = {
		name = "Adult Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_1
			create_ship = {
				name = "Fler"
				design = "Alpan III"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_1
			set_fleet_flag = bwm_ancestor_adult_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_elder_1 = {
	create_fleet = {
		name = "Elder Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_1
			create_ship = {
				name = "Fler"
				design = "Alpan IV"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_1
			set_fleet_flag = bwm_ancestor_elder_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_immortal_1 = {
	create_fleet = {
		name = "Dying Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_1
			create_ship = {
				name = "Fler"
				design = "Alpan V"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_1
			
			set_fleet_flag = bwm_ancestor_dying_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.9 }
		}
	}
}

#bwm_ancestor star spawn templates 3

bwm_ancestor_infant_2 = {
	create_fleet = {
		name = "Infant Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_2
			create_ship = {
				name = "Fler"
				design = "Alpan I"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_2
			set_fleet_flag = bwm_ancestor_infant_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_young_2 = {
	create_fleet = {
		name = "Young Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_2
			create_ship = {
				name = "Fler"
				design = "Alpan II"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_2
			set_fleet_flag = bwm_ancestor_young_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_adult_2 = {
	create_fleet = {
		name = "Adult Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_2
			create_ship = {
				name = "Fler"
				design = "Alpan III"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_2
			set_fleet_flag = bwm_ancestor_adult_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_elder_2 = {
	create_fleet = {
		name = "Elder Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_2
			create_ship = {
				name = "Fler"
				design = "Alpan IV"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_2
			set_fleet_flag = bwm_ancestor_elder_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

bwm_ancestor_immortal_2 = {
	create_fleet = {
		name = "Dying Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_2
			create_ship = {
				name = "Fler"
				design = "Alpan V"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_2
			
			set_fleet_flag = bwm_ancestor_dying_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.9 }
		}
	}
}


# ancestor star spawn templates 4

bwm_ancestor_ward = {
	create_fleet = {
		name = "Warden of Thesan"
		settings = {
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_3
			create_ship = {
				name = "Capra"
				design = "Tmia"
				prefix = no
			}
			set_location = {
					target = event_target:bwm_ancestor_spawn_3
					distance = 20
					angle = random
			}
		}
	}
}

# ancestor star spawn templates 5

bwm_ancestor_immortal_3 = {
	create_fleet = {
		name = "Dying Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_4
			create_ship = {
				name = "Fler"
				design = "Alpan V"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_4
			
			set_fleet_flag = bwm_ancestor_dying_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.9 }
		}
	}
}

# ancestor star spawn templates 6

bwm_ancestor_infant_6 = {
	create_fleet = {
		name = "Infant Star Spawn"
		settings = {
			spawn_debris = no 
		}
		effect = {
			set_owner = event_target:bwm_ancestor_swarm_owner_6
			create_ship = {
				name = "Fler"
				design = "Alpan I"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_spawn_6
			set_fleet_flag = bwm_ancestor_infant_spawn
			
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

# ancestor initial spawn templates

bwm_ancestor_herald_1 = {
	create_fleet = {
		name = "Herald of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_country
			create_ship = {
				name = "Favi"
				design = "Eita"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_ancestor_herald_1
				}
			}
			set_location = event_target:bwm_ancestor_escape
			set_fleet_flag = bwm_ancestor_herald_1_fleet
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.10 }
		}
	}
}

bwm_ancestor_herald_2 = {
	create_fleet = {
		name = "Herald of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_country
			create_ship = {
				name = "Favi"
				design = "Eita"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_ancestor_herald_2
				}
			}
			set_location = event_target:bwm_ancestor_escape
			set_fleet_flag = bwm_ancestor_herald_2_fleet
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.10 }
		}
	}
}

bwm_ancestor_herald_3 = {
	create_fleet = {
		name = "Herald of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_country
			create_ship = {
				name = "Favi"
				design = "Eita"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_ancestor_herald_3
				}
			}
			set_location = event_target:bwm_ancestor_escape
			set_fleet_flag = bwm_ancestor_herald_3_fleet
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.10 }
		}
	}
}

bwm_ancestor_herald_4 = {
	create_fleet = {
		name = "Herald of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_country
			create_ship = {
				name = "Favi"
				design = "Eita"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_ancestor_herald_4
				}
			}
			set_location = event_target:bwm_ancestor_escape
			set_fleet_flag = bwm_ancestor_herald_4_fleet
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.10 }
		}
	}
}

bwm_ancestor_herald_5 = {
	create_fleet = {
		name = "Herald of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_country
			create_ship = {
				name = "Favi"
				design = "Eita"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_ancestor_herald_5
				}
			}
			set_location = event_target:bwm_ancestor_escape
			set_fleet_flag = bwm_ancestor_herald_5_fleet
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.10 }
		}
	}
}

bwm_ancestor_herald_6 = {
	create_fleet = {
		name = "Herald of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_country
			create_ship = {
				name = "Favi"
				design = "Eita"
				prefix = no
				
				effect = {
					set_ship_flag = bwm_ancestor_herald_6
				}
			}
			set_location = event_target:bwm_ancestor_escape
			set_fleet_flag = bwm_ancestor_herald_6_fleet
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			
			fleet_event = { id = bwm_ancestor.10 }
		}
	}
}

bwm_ancestor_vessel_init = {
	create_fleet = {
		name = "Vessel of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_country
			create_ship = {
				name = "Fanu"
				design = "Persipnei I"
				prefix = no
			}
			set_fleet_flag = bwm_ancestor_boss_1_fleet
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
			
			set_location = {
			target = event_target:bwm_ancestor_escape
			distance = 0
			angle = random 
			}
			queue_actions = {
				repeat = {
					find_closest_system = {
						trigger = {
							id = bwm_ancestor_boss.roam.1a
							NOT = {
								OR = {
									has_star_flag = enclave
									has_star_flag = guardian
									has_star_flag = bwm_ring_system
									has_star_flag = bwm_grave_system
									has_star_flag = bwm_garden_system
									has_star_flag = bwm_prison_system
									has_star_flag = bwm_gate_system
								}
								any_ship_in_system = {
									OR = {
										is_ship_size = bwm_artifact_ship
										is_ship_size = bwm_artifact_relic_frame
										is_ship_size = bwm_artifact_bomb_1
										is_ship_size = bwm_artifact_bomb_2 
										is_ship_size = bwm_titan
										is_ship_size = bwm_grave_awakened_pc
										is_ship_size = bwm_conduit_avatar
										is_ship_size = bwm_ancient_weapon
										is_ship_size = bwm_apostle_scout
										is_ship_size = bwm_apostle_1 
									}
								}
							}
							OR = {
								any_ship_in_system = {
									exists = owner
									NOT = {
										owner = {
											is_same_value = event_target:bwm_ancestor_country
										}
									}
								}
								AND = {
									exists = space_owner
									any_system_planet = {
										OR = {
											has_observation_outpost = yes
											has_mining_station = yes
											has_research_station = yes 
										}
									}
									NOT = {
										space_owner = {
											OR = {
												is_same_value = event_target:bwm_ancestor_country
												fleet_power > 1000000
											}
										}
									}
								}
							}
						}
						found_system = {
							move_to = this
							
							find_closest_planet = {
								trigger = {
									id = bwm_ancestor_boss.roam.1b
									OR = {
										is_star = yes
										has_observation_outpost = yes
										has_mining_station = yes
										has_research_station = yes
									}
								}
								found_planet = {
									move_to = this
									wait = {
										duration = 90
										random = 45
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# ancestor init spawn

bwm_ancestor_target = {
	if = {
		limit = {
			any_country = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
		}
		random_system = {
			limit = {
				exists = space_owner
				AND = {
					space_owner = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
					any_system_planet = {
						is_capital = yes
						owner = {
							is_primitive = no
						}
					}
				}
			}
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = bwm_ancestor_escape
			}
		}
	}
	else_if = {
		limit = {
			any_country = {
				is_country_type = default
			}
		}
		random_system = {
			limit = {
				exists = space_owner
				AND = {
					space_owner = {
						is_ai = yes
						is_country_type = default
					}
					any_system_planet = {
						is_capital = yes
						owner = {
							is_primitive = no
						}
					}
				}
			}
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = bwm_ancestor_escape
			}
		}
	}
	else = {
		random_system = {
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = bwm_ancestor_escape
			}
		}
	}
	
	if = {
		limit = {
			NOT = { exists = event_target:bwm_ancestor_escape }
		}
		random_system = {
			limit = {
				has_star_flag = bwm_prison_system
			}
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = bwm_ancestor_escape
			}
		}
	}
}

# ancestor leviathan templates

bwm_ancestor_fanu_1 = {
	create_fleet = {
		name = "Vessel of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_evolve_owner
			create_ship = {
				name = "Fanu"
				design = "Persipnei II"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_evolve_spawn
			
			set_fleet_flag = bwm_ancestor_boss_2_fleet
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
			
			queue_actions = {
				repeat = {
					find_closest_system = {
						trigger = {
							id = bwm_ancestor_boss.roam.2a
							NOT = {
								OR = {
									has_star_flag = enclave
									has_star_flag = guardian
									has_star_flag = bwm_ring_system
									has_star_flag = bwm_grave_system
									has_star_flag = bwm_garden_system
									has_star_flag = bwm_prison_system
									has_star_flag = bwm_gate_system
								}
								any_ship_in_system = {
									OR = {
										is_ship_size = bwm_artifact_ship
										is_ship_size = bwm_artifact_relic_frame
										is_ship_size = bwm_artifact_bomb_1
										is_ship_size = bwm_artifact_bomb_2
										is_ship_size = bwm_titan
										is_ship_size = bwm_grave_awakened_pc
										is_ship_size = bwm_conduit_avatar
										is_ship_size = bwm_ancient_weapon
										is_ship_size = bwm_apostle_scout
										is_ship_size = bwm_apostle_2
									}
								}
							}
							OR = {
								any_ship_in_system = {
									exists = owner
									NOT = {
										owner = {
											is_same_value = event_target:bwm_ancestor_country
										}
									}
								}
								AND = {
									exists = space_owner
									any_system_planet = {
										OR = {
											has_observation_outpost = yes
											has_mining_station = yes
											has_research_station = yes 
										}
									}
									NOT = {
										space_owner = {
											OR = {
												is_same_value = event_target:bwm_ancestor_country
												fleet_power > 500000
											}
										}
									}
								}
							}
						}
						found_system = {
							move_to = this
							
							find_closest_planet = {
								trigger = {
									id = bwm_ancestor_boss.roam.2b
									OR = {
										is_star = yes
										has_observation_outpost = yes
										has_mining_station = yes
										has_research_station = yes 
									}
								}
								found_planet = {
									move_to = this
									wait = {
										duration = 180
										random = 90
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

bwm_ancestor_fanu_2 = {
	create_fleet = {
		name = "Vessel of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_evolve_owner
			create_ship = {
				name = "Fanu"
				design = "Persipnei III"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_evolve_spawn
			
			set_fleet_flag = bwm_ancestor_boss_3_fleet
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000

			queue_actions = {
				repeat = {
					find_closest_system = {
						trigger = {
							id = bwm_ancestor_boss.roam.3a
							NOT = {
								OR = {
									has_star_flag = enclave
									has_star_flag = guardian
									has_star_flag = bwm_ring_system
									has_star_flag = bwm_grave_system
									has_star_flag = bwm_garden_system
									has_star_flag = bwm_prison_system
									has_star_flag = bwm_gate_system
								}
								any_ship_in_system = {
									OR = {
										is_ship_size = bwm_artifact_ship
										is_ship_size = bwm_artifact_relic_frame
										is_ship_size = bwm_artifact_bomb_1
										is_ship_size = bwm_artifact_bomb_2
										is_ship_size = bwm_titan
										is_ship_size = bwm_grave_awakened_pc
										is_ship_size = bwm_conduit_avatar
										is_ship_size = bwm_ancient_weapon
										is_ship_size = bwm_apostle_scout
										is_ship_size = bwm_apostle_3 
									}
								}
							}
							OR = {
								any_ship_in_system = {
									exists = owner
									NOT = {
										owner = {
											is_same_value = event_target:bwm_ancestor_country
										}
									}
								}
								AND = {
									exists = space_owner
									any_system_planet = {
										OR = { 
											has_observation_outpost = yes
											has_mining_station = yes
											has_research_station = yes 
										}
									}
									NOT = {
										space_owner = {
											OR = {
												is_same_value = event_target:bwm_ancestor_country
												fleet_power > 500000
											}
										}
									}
								}
							}
						}
						found_system = {
							move_to = this
							
							find_closest_planet = {
								trigger = {
									id = bwm_ancestor_boss.roam.3b
									OR = {
										is_star = yes
										has_observation_outpost = yes
										has_mining_station = yes
										has_research_station = yes 
									}
								}
								found_planet = {
									move_to = this
									wait = {
										duration = 270
										random = 135
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

bwm_ancestor_fanu_3 = {
	create_fleet = {
		name = "Vessel of Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_evolve_owner
			create_ship = {
				name = "Fanu"
				design = "Persipnei IV"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_evolve_spawn
			
			set_fleet_flag = bwm_ancestor_boss_decay
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000

			queue_actions = {
				repeat = {
					find_closest_system = {
						trigger = {
							id = bwm_ancestor_boss.roam.4a
							NOT = {
								OR = {
									has_star_flag = enclave
									has_star_flag = guardian
									has_star_flag = bwm_ring_system
									has_star_flag = bwm_grave_system
									has_star_flag = bwm_garden_system
									has_star_flag = bwm_prison_system
									has_star_flag = bwm_gate_system
								}
								any_ship_in_system = {
									OR = {
										is_ship_size = bwm_artifact_ship
										is_ship_size = bwm_artifact_relic_frame
										is_ship_size = bwm_artifact_bomb_1
										is_ship_size = bwm_artifact_bomb_2
										is_ship_size = bwm_titan
										is_ship_size = bwm_grave_awakened_pc
										is_ship_size = bwm_conduit_avatar
										is_ship_size = bwm_ancient_weapon
										is_ship_size = bwm_apostle_scout
										is_ship_size =	bwm_apostle_4
										is_ship_size =	bwm_apostle_egg
										is_ship_size =	bwm_apostle_child
									} 
								}
							}
							OR = {
								any_ship_in_system = {
									exists = owner
									NOT = {
										owner = {
											is_same_value = event_target:bwm_ancestor_country
										}
									}
								}
								AND = {
									exists = space_owner
									any_system_planet = {
										OR = {
											has_observation_outpost = yes
											has_mining_station = yes
											has_research_station = yes 
										}
									}
									NOT = {
										space_owner = {
											OR = {
												is_same_value = event_target:bwm_ancestor_country
												fleet_power > 500000
											}
										}
									}
								}
							}
						}
						found_system = {
							move_to = this
							
							find_closest_planet = {
								trigger = {
									id = bwm_ancestor_boss.roam.4b
									OR = {
										is_star = yes
										has_observation_outpost = yes
										has_mining_station = yes
										has_research_station = yes
									}
								}
								found_planet = {
									move_to = this
									wait = {
										duration = 360
										random = 180
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

bwm_ancestor_thesan_1 = {
	create_fleet = {
		name = "Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_evolve_owner
			create_ship = {
				name = "Ais"
				design = "Tinia I"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_evolve_spawn
			
			set_fleet_flag = bwm_ancestor_boss_final_1_fleet
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
			
			queue_actions = {
				repeat = {
					find_closest_system = {
						trigger = {
							id = bwm_ancestor_boss.roam.5a
							NOT = {
								OR = {
									has_star_flag = enclave
									has_star_flag = guardian
									has_star_flag = bwm_ring_system
									has_star_flag = bwm_grave_system
									has_star_flag = bwm_garden_system
									has_star_flag = bwm_prison_system
									has_star_flag = bwm_gate_system
								}
								any_ship_in_system = {
									OR = {
										is_ship_size = bwm_artifact_ship
										is_ship_size = bwm_artifact_relic_frame
										is_ship_size = bwm_artifact_bomb_1
										is_ship_size = bwm_artifact_bomb_2
										is_ship_size = bwm_titan
										is_ship_size = bwm_grave_awakened_pc
										is_ship_size = bwm_conduit_avatar
										is_ship_size = bwm_ancient_weapon
										is_ship_size = bwm_apostle_scout
										is_ship_size =	bwm_apostle_4
										is_ship_size =	bwm_apostle_egg
									} 
								}
							}
							OR = {
								any_ship_in_system = {
									exists = owner
									NOT = {
										owner = {
											is_same_value = event_target:bwm_ancestor_country
										}
									}
								}
								AND = {
									exists = space_owner
									any_system_planet = {
										OR = {
											has_observation_outpost = yes
											has_mining_station = yes
											has_research_station = yes 
										}
									}
									NOT = {
										space_owner = {
											OR = {
												is_same_value = event_target:bwm_ancestor_country
												fleet_power > 1000000
											}
										}
									}
								}
							}
						}
						found_system = {
							move_to = this
							
							find_closest_planet = {
								trigger = {
									id = bwm_ancestor_boss.roam.5b
									OR = {
										is_star = yes
										has_observation_outpost = yes
										has_mining_station = yes
										has_research_station = yes
									}
								}
								found_planet = {
									move_to = this
									wait = {
										duration = 90
										random = 45
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

bwm_ancestor_thesan_2 = {
	create_fleet = {
		name = "Thesan"
		settings = {
			spawn_debris = no 
			is_boss = yes
		}
		effect = {
			set_owner = event_target:bwm_ancestor_evolve_owner
			create_ship = {
				name = "Ais"
				design = "Tinia II"
				prefix = no
			}
			set_location = event_target:bwm_ancestor_evolve_spawn
			
			set_fleet_flag = bwm_ancestor_boss_final_2_fleet
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
			
			queue_actions = {
				repeat = {
					find_closest_system = {
						trigger = {
							id = bwm_ancestor_boss.roam.6a
							NOT = {
								OR = {
									has_star_flag = enclave
									has_star_flag = guardian
									has_star_flag = bwm_ring_system
									has_star_flag = bwm_grave_system
									has_star_flag = bwm_garden_system
									has_star_flag = bwm_prison_system
									has_star_flag = bwm_gate_system
								}
								any_ship_in_system = {
									OR = {
										is_ship_size = bwm_artifact_ship
										is_ship_size = bwm_artifact_relic_frame
										is_ship_size = bwm_artifact_bomb_1
										is_ship_size = bwm_artifact_bomb_2
										is_ship_size = bwm_titan
										is_ship_size = bwm_grave_awakened_pc
										is_ship_size = bwm_conduit_avatar
										is_ship_size = bwm_ancient_weapon
										is_ship_size = bwm_apostle_scout
										is_ship_size =	bwm_apostle_4
										is_ship_size =	bwm_apostle_child
									} 
								}
							}
							OR = {
								any_ship_in_system = {
									exists = owner
									NOT = {
										owner = {
											is_same_value = event_target:bwm_ancestor_country
										}
									}
								}
								AND = {
									exists = space_owner
									any_system_planet = {
										OR = {
											has_observation_outpost = yes
											has_mining_station = yes
											has_research_station = yes 
										}
									}
									NOT = {
										space_owner = {
											OR = {
												is_same_value = event_target:bwm_ancestor_country
												fleet_power > 1000000
											}
										}
									}
								}
							}
						}
						found_system = {
							move_to = this
							
							find_closest_planet = {
								trigger = {
									id = bwm_ancestor_boss.roam.6b
									OR = {
										is_star = yes
										has_observation_outpost = yes
										has_mining_station = yes
										has_research_station = yes
									}
								}
								found_planet = {
									move_to = this
									wait = {
										duration = 45
										random = 25
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# Doom Clock - 100 Years

bwm_ancestor_seal_trigger = {
	if = {
		limit = {
			has_global_flag = bwm_ancestor_system_seed
		}
		country_event = { id = bwm_ancestor.30 days = 36000 }
	}
}

# pop seal chainreaction

bwm_ancestor_seal_chain = {
	every_country = {
		if = {
			limit = {
				has_country_flag = bwm_ancestor_seal_destroyer
			}
			country_event = { id = bwm_ancestor.30 days = 1800 }
		}
	}
}

# Pop seals

bwm_ancestor_seal_change_1 = {
	if = {
		limit =  {
			has_ship_flag = bwm_ancestor_seal_1
		}
		this = {
			save_event_target_as = bwm_ancestor_seal_1_loc
		}
		create_ambient_object = {
			type = "bwm_seal_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_1_loc
			set_ambient_object_flag = bwm_ancestor_seal_1_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_1_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_prison_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_planet_1
				}
				#orbital_deposit_tile = {
					add_deposit = d_bwm_seal
				#}
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_star
				}
				planet_event = { id = bwm_ancestor.21 days = 1800 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_ancestor_seal_change_2 = {
	if = {
		limit =  {
			has_ship_flag = bwm_ancestor_seal_2
		}
		this = {
			save_event_target_as = bwm_ancestor_seal_2_loc
		}
		create_ambient_object = {
			type = "bwm_seal_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_2_loc
			set_ambient_object_flag = bwm_ancestor_seal_2_burst
		}
		create_ambient_object = {
			type = bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_2_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_prison_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_planet_2
				}
				#orbital_deposit_tile = {
					add_deposit = d_bwm_seal
				#}
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_star
				}
				planet_event = { id = bwm_ancestor.21 days = 1800 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_ancestor_seal_change_3 = {
	if = {
		limit =  {
			has_ship_flag = bwm_ancestor_seal_3
		}
		this = {
			save_event_target_as = bwm_ancestor_seal_3_loc
		}
		create_ambient_object = {
			type = "bwm_seal_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_3_loc
			set_ambient_object_flag = bwm_ancestor_seal_3_burst
		}
		create_ambient_object = {
			type = bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_3_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_prison_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_planet_3
				}
				#orbital_deposit_tile = {
					add_deposit = d_bwm_seal
				#}
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_star
				}
				planet_event = { id = bwm_ancestor.21 days = 1800 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_ancestor_seal_change_4 = {
	if = {
		limit =  {
			has_ship_flag = bwm_ancestor_seal_4
		}
		this = {
			save_event_target_as = bwm_ancestor_seal_4_loc
		}
		create_ambient_object = {
			type = "bwm_seal_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_4_loc
			set_ambient_object_flag = bwm_ancestor_seal_4_burst
		}
		create_ambient_object = {
			type = bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_4_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_prison_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_planet_4
				}
				#orbital_deposit_tile = {
					add_deposit = d_bwm_seal
				#}
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_star
				}
				planet_event = { id = bwm_ancestor.21 days = 1800 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_ancestor_seal_change_5 = {
	if = {
		limit =  {
			has_ship_flag = bwm_ancestor_seal_5
		}
		this = {
			save_event_target_as = bwm_ancestor_seal_5_loc
		}
		create_ambient_object = {
			type = "bwm_seal_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_5_loc
			set_ambient_object_flag = bwm_ancestor_seal_5_burst
		}
		create_ambient_object = {
			type = bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_5_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_prison_system
			}
			every_system_planet= {
				limit = {
					has_planet_flag = bwm_ancestor_prison_planet_5
				}
				#orbital_deposit_tile = {
					add_deposit = d_bwm_seal
				#}
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_star
				}
				planet_event = { id = bwm_ancestor.21 days = 1800 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_ancestor_seal_change_6 = {
	if = {
		limit =  {
			has_ship_flag = bwm_ancestor_seal_6
		}
		this = {
			save_event_target_as = bwm_ancestor_seal_6_loc
		}
		create_ambient_object = {
			type = "bwm_seal_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_6_loc
			set_ambient_object_flag = bwm_ancestor_seal_6_burst
		}
		create_ambient_object = {
			type = bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_ancestor_seal_6_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_prison_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_planet_6
				}
				#orbital_deposit_tile = {
					add_deposit = d_bwm_seal
				#}
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_ancestor_prison_star
				}
				planet_event = { id = bwm_ancestor.21 days = 1800 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

#delete orbital station 

bwm_ancestor_clear_station = {
	if = {
		limit = {
			has_research_station = yes 
		}
		random_research_station = {
				destroy_fleet = this
		}
	}
}

bwm_ancestor_delayed_conversion = {
	this = {
		solar_system = {
			if = {
				limit = {
					NOT = {
						any_ship_in_system = { 
							is_ship_size = bwm_apostle_station
						}
					}
				}
				random_system_planet = {
					limit = { is_star = yes }
					save_event_target_as = bwm_ancestor_spawn_fix
					create_fleet = {
						name = "Warden of Thesan"
						settings = {
							spawn_debris = no
							is_boss = yes
						}
						effect = {
							set_owner = event_target:bwm_ancestor_country
							create_ship = {
								name = "Capra"
								design = "Tmia"
								prefix = no
							}
							set_location = {
									target = event_target:bwm_ancestor_spawn_fix
									distance = 20
									angle = random
							}
						}
					}
				}
			}
		}
	}
	create_ambient_object = {
		type = bwm_effect_explosion_6_object
		location = THIS
		duration = 10
			
		use_3d_location = yes
			
		entity_offset = { min = 0 max = 0 }
		entity_offset_angle = { min = 0 max = 0 }
		entity_offset_height = { min = 0 max = 0 }
			
		entity_scale_to_size = yes
		scale = 100
	}
	random_list = {
		25 = {
			create_ambient_object = {
			type = "small_debris_object"
			location = THIS
			}
		}
		25 = {
			create_ambient_object = {
			type = "medium_debris_01_object"
			location = THIS
			}
		}
		25 = {
			create_ambient_object = {
			type = "medium_debris_02_object"
			location = THIS
			}
		}
		25 = {
			create_ambient_object = {
			type = "large_debris_object"
			location = THIS
			}
		}
	}
}

bwm_ancestor_terraform = {
	if = {
		limit = { has_modifier = hazardous_weather }
		remove_modifier = hazardous_weather
	}
	if = {
		limit = { has_modifier = dangerous_wildlife }
		remove_modifier = dangerous_wildlife
	}
	if = {
		limit = { has_modifier = weak_magnetic_field }
		remove_modifier = weak_magnetic_field
	}
	if = {
		limit = { has_modifier = strong_magnetic_field }
		remove_modifier = strong_magnetic_field
	}
	if = {
		limit = { has_modifier = unstable_tectonics }
		remove_modifier = unstable_tectonics
	}
	if = {
		limit = { has_modifier = tidal_locked }
		remove_modifier = tidal_locked
	}
	if = {
		limit = { has_modifier = chthonian_planet }
		remove_modifier = chthonian_planet
	}
	if = {
		limit = { has_modifier = asteroid_impacts }
		remove_modifier = asteroid_impacts
	}
	if = {
		limit = { has_modifier = extensive_moon_system }
		remove_modifier = extensive_moon_system
	}
	if = {
		limit = { has_modifier = carbon_world }
		remove_modifier = carbon_world
	}
	if = {
		limit = { has_modifier = wild_storms }
		remove_modifier = wild_storms
	}
	if = {
		limit = { has_modifier = low_gravity }
		remove_modifier = low_gravity
	}
	if = {
		limit = { has_modifier = high_gravity }
		remove_modifier = high_gravity
	}
	if = {
		limit = { has_modifier = mineral_rich }
		remove_modifier = mineral_rich
	}
	if = {
		limit = { has_modifier = ultra_rich }
		remove_modifier = ultra_rich
	}
	if = {
		limit = { has_modifier = mineral_poor }
		remove_modifier = mineral_poor
	}
	if = {
		limit = { has_modifier = titanic_life }
		remove_modifier = titanic_life
	}
	if = {
		limit = { has_modifier = mineral_poor }
		remove_modifier = mineral_poor
	}
	if = {
		limit = { has_modifier = asteroid_belt }
		remove_modifier = asteroid_belt
	}
	if = {
		limit = { has_modifier = natural_beauty }
		remove_modifier = natural_beauty
	}
	if = {
		limit = { has_modifier = atmospheric_aphrodisiac }
		remove_modifier = atmospheric_aphrodisiac
	}
	if = {
		limit = { has_modifier = atmospheric_hallucinogen }
		remove_modifier = atmospheric_hallucinogen
	}
	if = {
		limit = { has_modifier = lush_planet }
		remove_modifier = lush_planet
	}
	if = {
		limit = { has_modifier = bleak_planet }
		remove_modifier = bleak_planet
	}
	if = {
		limit = { has_modifier = irradiated_planet }
		remove_modifier = irradiated_planet
	}
}

bwm_ancestor_chain_check = {
	if = {
		limit = {
			NOT = {
				has_event_chain = bwm_lex_ancestor_chain
			}
		}
		begin_event_chain = {
			event_chain = "bwm_lex_ancestor_chain"
			target = this
		}
	}
}

# Artifact Snippets

#Cipher 1 System

bwm_artifact_seal_change_1_1 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_1_pillar_1
		}
		this = {
			save_event_target_as = bwm_cipher_lock_1_pillar_1_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_1_loc
			set_ambient_object_flag = bwm_cipher_lock_1_pillar_1_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_1_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_1_star
				}
				set_planet_flag = bwm_cipher_system_1_pillar_1_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_1_2 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_1_pillar_2
		}
		this = {
			save_event_target_as = bwm_cipher_lock_1_pillar_2_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_2_loc
			set_ambient_object_flag = bwm_cipher_lock_1_pillar_2_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_2_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_1_star
				}
				set_planet_flag = bwm_cipher_system_1_pillar_2_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_1_3 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_1_pillar_3
		}
		this = {
			save_event_target_as = bwm_cipher_lock_1_pillar_3_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_3_loc
			set_ambient_object_flag = bwm_cipher_lock_1_pillar_3_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_3_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_1_star
				}
				set_planet_flag = bwm_cipher_system_1_pillar_3_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_1_4 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_1_pillar_4
		}
		this = {
			save_event_target_as = bwm_cipher_lock_1_pillar_4_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_4_loc
			set_ambient_object_flag = bwm_cipher_lock_1_pillar_4_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_4_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_1_star
				}
				set_planet_flag = bwm_cipher_system_1_pillar_4_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_1_5 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_1_pillar_5
		}
		this = {
			save_event_target_as = bwm_cipher_lock_1_pillar_5_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_5_loc
			set_ambient_object_flag = bwm_cipher_lock_1_pillar_5_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_5_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_1_star
				}
				set_planet_flag = bwm_cipher_system_1_pillar_5_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_1_6 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_1_pillar_6
		}
		this = {
			save_event_target_as = bwm_cipher_lock_1_pillar_6_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_6_loc
			set_ambient_object_flag = bwm_cipher_lock_1_pillar_6_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_1_pillar_6_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_1_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_1_star
				}
				set_planet_flag = bwm_cipher_system_1_pillar_6_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

#Cipher 2 System

bwm_artifact_seal_change_2_1 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_2_pillar_1
		}
		this = {
			save_event_target_as = bwm_cipher_lock_2_pillar_1_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_1_loc
			set_ambient_object_flag = bwm_cipher_lock_2_pillar_1_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_1_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_2_star
				}
				set_planet_flag = bwm_cipher_system_2_pillar_1_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_2_2 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_2_pillar_2
		}
		this = {
			save_event_target_as = bwm_cipher_lock_2_pillar_2_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_2_loc
			set_ambient_object_flag = bwm_cipher_lock_2_pillar_2_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_2_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_2_star
				}
				set_planet_flag = bwm_cipher_system_2_pillar_2_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_2_3 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_2_pillar_3
		}
		this = {
			save_event_target_as = bwm_cipher_lock_2_pillar_3_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_3_loc
			set_ambient_object_flag = bwm_cipher_lock_2_pillar_3_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_3_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_2_star
				}
				set_planet_flag = bwm_cipher_system_2_pillar_3_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_2_4 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_2_pillar_4
		}
		this = {
			save_event_target_as = bwm_cipher_lock_2_pillar_4_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_4_loc
			set_ambient_object_flag = bwm_cipher_lock_2_pillar_4_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_4_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_2_star
				}
				set_planet_flag = bwm_cipher_system_2_pillar_4_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_2_5 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_2_pillar_5
		}
		this = {
			save_event_target_as = bwm_cipher_lock_2_pillar_5_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_5_loc
			set_ambient_object_flag = bwm_cipher_lock_2_pillar_5_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_5_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_2_star
				}
				set_planet_flag = bwm_cipher_system_2_pillar_5_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_2_6 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_2_pillar_6
		}
		this = {
			save_event_target_as = bwm_cipher_lock_2_pillar_6_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_6_loc
			set_ambient_object_flag = bwm_cipher_lock_2_pillar_6_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_2_pillar_6_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_2_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_2_star
				}
				set_planet_flag = bwm_cipher_system_2_pillar_6_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

#Cipher 3 System

bwm_artifact_seal_change_3_1 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_3_pillar_1
		}
		this = {
			save_event_target_as = bwm_cipher_lock_3_pillar_1_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_1_loc
			set_ambient_object_flag = bwm_cipher_lock_3_pillar_1_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_1_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_3_star
				}
				set_planet_flag = bwm_cipher_system_3_pillar_1_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_3_2 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_3_pillar_2
		}
		this = {
			save_event_target_as = bwm_cipher_lock_3_pillar_2_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_2_loc
			set_ambient_object_flag = bwm_cipher_lock_3_pillar_2_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_2_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_3_star
				}
				set_planet_flag = bwm_cipher_system_3_pillar_2_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_3_3 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_3_pillar_3
		}
		this = {
			save_event_target_as = bwm_cipher_lock_3_pillar_3_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_3_loc
			set_ambient_object_flag = bwm_cipher_lock_3_pillar_3_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_3_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_3_star
				}
				set_planet_flag = bwm_cipher_system_3_pillar_3_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_3_4 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_3_pillar_4
		}
		this = {
			save_event_target_as = bwm_cipher_lock_3_pillar_4_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_4_loc
			set_ambient_object_flag = bwm_cipher_lock_3_pillar_4_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_4_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_3_star
				}
				set_planet_flag = bwm_cipher_system_3_pillar_4_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_3_5 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_3_pillar_5
		}
		this = {
			save_event_target_as = bwm_cipher_lock_3_pillar_5_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_5_loc
			set_ambient_object_flag = bwm_cipher_lock_3_pillar_5_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_5_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_3_star
				}
				set_planet_flag = bwm_cipher_system_3_pillar_5_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 30 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_artifact_seal_change_3_6 = {
	if = {
		limit =  {
			has_ship_flag = bwm_cipher_lock_3_pillar_6
		}
		this = {
			save_event_target_as = bwm_cipher_lock_3_pillar_6_loc
		}
		create_ambient_object = {
			type = "bwm_artifact_pillar_damaged_object"
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_6_loc
			set_ambient_object_flag = bwm_cipher_lock_3_pillar_6_burst
		}
		create_ambient_object = {
			type =bwm_effect_explosion_1_object
			duration = 10
			
			use_3d_location = yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 0 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 10
		}
		last_created_ambient_object = {
			set_location = event_target:bwm_cipher_lock_3_pillar_6_loc
		}
		fleet = {
			delete_fleet = this
		}
		random_system = {
			limit = {
				has_star_flag = bwm_cipher_3_system
			}
			every_system_planet = {
				limit = {
					has_planet_flag = bwm_cipher_3_star
				}
				set_planet_flag = bwm_cipher_system_3_pillar_6_lock
				planet_event = { id = bwm_artifact.101 days = 60 }
				planet_event = { id = bwm_artifact.114 days = 5 }
			}
		}
		owner = {
			destroy_country = yes
		}
		break = yes
	}
}

bwm_ancient_nova_locator = {
	solar_system = {
		save_event_target_as = bwm_ancient_nova_debuff_loc
	}
	owner = {
		every_owned_ship = {
			limit = {
				exists = this
				is_ship_size = bwm_ancient_weapon
			}
			fleet = {
				save_event_target_as = bwm_ancient_weapon_fleet_loc
			}
		}
	}
}

bwm_ancient_nova_star_flag_remover = {
	if = {
		limit = {
			has_star_flag = bwm_ancient_weapon_ftl_scramble_1_star
		}
		remove_star_flag = bwm_ancient_weapon_ftl_scramble_1_star
	}
	if = {
		limit = {
			has_star_flag = bwm_ancient_weapon_ftl_scramble_2_star
		}
		remove_star_flag = bwm_ancient_weapon_ftl_scramble_2_star
	}
	if = {
		limit = {
			has_star_flag = bwm_ancient_weapon_ftl_scramble_3_star
		}
		remove_star_flag = bwm_ancient_weapon_ftl_scramble_3_star
	}
}