create_envoys = {		create_ship = { name = random graphical_culture = "ehof_01" design = "NAME_Compound_Envoy" } }
create_stalkers = {		create_ship = { name = random graphical_culture = "ehof_01" design = "NAME_Compound_Stalker" } }
create_humiliators = {	create_ship = { name = random graphical_culture = "ehof_01" design = "NAME_Compound_Humiliator" } }
create_apex = {			create_ship = { name = random graphical_culture = "ehof_01" design = "NAME_Compound_Apex" } }
create_sovereign = {	create_ship = { name = random graphical_culture = "ehof_01" design = "NAME_Compound_Sovereign" } }
create_ehof_admiral = {
	event_target:compound_country = {
		create_leader = {
			class = admiral
			species = event_target:compound_species
			name = random
			skill = 10
			immortal = yes
			effect = { save_event_target_as = compound_fleet_leader }
		}
	}
}
create_ehof_general = {
	event_target:compound_country = {
		create_leader = {
			class = general
			species = event_target:compound_species
			name = random
			skill = 10
			traits = { trait = random_trait }
			immortal = yes
			effect = { save_event_target_as = compound_army_leader }
		}
	}
}

create_reward_envoys = {
	random_list = {
		30 = { while = { count = 5  create_envoys = yes } }
		25 = { while = { count = 10 create_envoys = yes } }
		20 = { while = { count = 15 create_envoys = yes } }
		15 = { while = { count = 20 create_envoys = yes } }
		10 = { while = { count = 25 create_envoys = yes } }
	}
	random_list = {
		1 = {}
		1 = { while = { count = 1 create_envoys = yes } }
		1 = { while = { count = 2 create_envoys = yes } }
		1 = { while = { count = 3 create_envoys = yes } }
		1 = { while = { count = 4 create_envoys = yes } }
	}
}

create_reward_stalkers = {
	random_list = {
		30 = { while = { count = 4	create_stalkers = yes } }
		25 = { while = { count = 8	create_stalkers = yes } }
		20 = { while = { count = 12	create_stalkers = yes } }
		15 = { while = { count = 16	create_stalkers = yes } }
		10 = { while = { count = 20	create_stalkers = yes } }
	}
	random_list = {
		1 = {}
		1 = { while = { count = 1 create_stalkers = yes } }
		1 = { while = { count = 2 create_stalkers = yes } }
		1 = { while = { count = 3 create_stalkers = yes } }
	}
}

create_reward_humiliators = {
	random_list = {
		30 = { while = { count = 3	create_humiliators = yes } }
		25 = { while = { count = 6	create_humiliators = yes } }
		20 = { while = { count = 9	create_humiliators = yes } }
		15 = { while = { count = 12	create_humiliators = yes } }
		10 = { while = { count = 15	create_humiliators = yes } }
	}
	random_list = {
		1 = {}
		1 = { while = { count = 1 create_humiliators = yes } }
		1 = { while = { count = 2 create_humiliators = yes } }
	}
}

create_reward_apex = {
	random_list = {
		30 = { while = { count = 2	create_apex = yes } }
		25 = { while = { count = 4	create_apex = yes } }
		20 = { while = { count = 8	create_apex = yes } }
		15 = { while = { count = 10 create_apex = yes } }
		10 = { while = { count = 12	create_apex = yes } }
	}
	random_list = {
		1 = {}
		1 = { while = { count = 1 create_apex = yes } }
	}
}

create_reward_sovereign = {
	random_list = {
		85 = { while = { count = 1 create_sovereign = yes } }
		15 = { while = { count = 2 create_sovereign = yes } }
	}
	random_list = {
		2 = {}
		1 = { while = { count = 1 create_sovereign = yes } }
	}
}

create_compound_evnoys = {
	random_list = {
		30 = { while = { count = 30 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		25 = { while = { count = 40 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		20 = { while = { count = 50 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		15 = { while = { count = 60 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		10 = { while = { count = 70 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
	}
	random_list = {
		1 = {}
		1 = { while = { count = 1 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		1 = { while = { count = 2 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		1 = { while = { count = 3 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		1 = { while = { count = 4 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		1 = { while = { count = 5 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		1 = { while = { count = 6 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		1 = { while = { count = 7 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		1 = { while = { count = 8 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
		1 = { while = { count = 9 create_envoys = yes event_target:compound_country = { change_variable = { which = compound_envoys value = 1 } } } }
	}
}

create_compound_stalkers = {
	random_list = {
		30 = { while = { count = 15	create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
		25 = { while = { count = 20	create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
		20 = { while = { count = 25	create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
		15 = { while = { count = 30	create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
		10 = { while = { count = 35	create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
	}
	random_list = {
		1 = {}
		1 = { while = { count = 1 create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
		1 = { while = { count = 2 create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
		1 = { while = { count = 3 create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
		1 = { while = { count = 4 create_stalkers = yes event_target:compound_country = { change_variable = { which = compound_stalkers value = 1 } } } }
	}
}

create_compound_humiliators = {
	random_list = {
		30 = { while = { count = 5	create_humiliators = yes event_target:compound_country = { change_variable = { which = compound_humiliators value = 1 } } } }
		25 = { while = { count = 8	create_humiliators = yes event_target:compound_country = { change_variable = { which = compound_humiliators value = 1 } } } }
		20 = { while = { count = 10	create_humiliators = yes event_target:compound_country = { change_variable = { which = compound_humiliators value = 1 } } } }
		15 = { while = { count = 12	create_humiliators = yes event_target:compound_country = { change_variable = { which = compound_humiliators value = 1 } } } }
		10 = { while = { count = 15	create_humiliators = yes event_target:compound_country = { change_variable = { which = compound_humiliators value = 1 } } } }
	}
	random_list = {
		1 = {}
		1 = { while = { count = 1 create_humiliators = yes event_target:compound_country = { change_variable = { which = compound_humiliators value = 1 } } } }
		1 = { while = { count = 2 create_humiliators = yes event_target:compound_country = { change_variable = { which = compound_humiliators value = 1 } } } }
		1 = { while = { count = 3 create_humiliators = yes event_target:compound_country = { change_variable = { which = compound_humiliators value = 1 } } } }
	}
}

create_compound_apex = {
	random_list = {
		30 = { while = { count = 4	create_apex = yes event_target:compound_country = { change_variable = { which = compound_apex value = 1 } } } }
		25 = { while = { count = 5	create_apex = yes event_target:compound_country = { change_variable = { which = compound_apex value = 1 } } } }
		20 = { while = { count = 6	create_apex = yes event_target:compound_country = { change_variable = { which = compound_apex value = 1 } } } }
		15 = { while = { count = 7	create_apex = yes event_target:compound_country = { change_variable = { which = compound_apex value = 1 } } } }
		10 = { while = { count = 8	create_apex = yes event_target:compound_country = { change_variable = { which = compound_apex value = 1 } } } }
	}
	random_list = {
		1 = {}
		1 = { while = { count = 1 create_apex = yes event_target:compound_country = { change_variable = { which = compound_apex value = 1 } } } }
		1 = { while = { count = 2 create_apex = yes event_target:compound_country = { change_variable = { which = compound_apex value = 1 } } } }
	}
}

create_compound_sovereign = {
	create_sovereign = yes
	event_target:compound_country = { change_variable = { which = compound_sovereigns value = 1 } }
	random_list = {
		3 = {}
		1 = { create_sovereign = yes event_target:compound_country = { change_variable = { which = compound_sovereigns value = 1 } } }
	}
}

compound_set_fleet_spawn = {
	if = { limit = { exists = event_target:compound_fleet_spawn } clear_global_event_target = compound_fleet_spawn }
	event_target:compound_country = {
		if = {
			limit = {
				any_system_within_border = {
					any_fleet_in_system = {
						exists = owner
						owner = { NOT = { is_country_type = compound_empire } }
					}
				}
			}
			event_target:compound_capital_system.star = { save_global_event_target_as = compound_fleet_spawn }
		}
		else = { event_target:compound_invasion_entry.star = { save_global_event_target_as = compound_fleet_spawn } }
	}
}

create_large_compound_fleet = {
	create_ehof_admiral = yes
	create_fleet = {
		settings = {
			uses_naval_capacity = no
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			create_compound_evnoys = yes
			create_compound_stalkers = yes
			create_compound_humiliators = yes
			create_compound_apex = yes
			create_compound_sovereign = yes
			set_owner = event_target:compound_country
			assign_leader = event_target:compound_fleet_leader
			set_fleet_stance = aggressive
			set_location = {
				target = event_target:compound_fleet_spawn
				distance = 35
				angle = random
			}
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
		}
	}
}

create_medium_compound_fleet = {
	create_ehof_admiral = yes
	create_fleet = {
		settings = {
			uses_naval_capacity = no
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			create_compound_evnoys = yes
			create_compound_stalkers = yes
			create_compound_humiliators = yes
			create_compound_apex = yes
			set_owner = event_target:compound_country
			assign_leader = event_target:compound_fleet_leader
			set_fleet_stance = aggressive
			set_location = {
				target = event_target:compound_fleet_spawn
				distance = 35
				angle = random
			}
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
		}
	}
}

create_small_compound_fleet = {
	create_ehof_admiral = yes
	create_fleet = {
		settings = {
			uses_naval_capacity = no
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			create_compound_evnoys = yes
			create_compound_stalkers = yes
			set_owner = event_target:compound_country
			assign_leader = event_target:compound_fleet_leader
			set_fleet_stance = aggressive
			set_location = {
				target = event_target:compound_fleet_spawn
				distance = 35
				angle = random
			}
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
		}
	}
}

create_compound_fleet = {
	compound_set_fleet_spawn = yes
	event_target:compound_fleet_spawn = {
		random_list = {
			45 = { create_small_compound_fleet = yes }
			35 = { create_medium_compound_fleet = yes }
			20 = { create_large_compound_fleet = yes }
		}
	}
}

create_reshaper_compound_fleet = {
	compound_set_fleet_spawn = yes
	event_target:compound_country = {
		change_variable = { which = current_reshapers value = 1 }
		create_fleet = {
			settings = {
				uses_naval_capacity = no
				spawn_debris = no
			}
			effect = {
				set_owner = event_target:compound_country
				create_ship = {
					name = "NAME_Compound_Reshaper"
					design = "NAME_Compound_Reshaper"
					graphical_culture = "ehof_01"
				}
				set_fleet_stance = evasive
				set_location = {
					target = event_target:compound_fleet_spawn
					distance = 75
					angle = random
				}
			}
		}
	}
}

create_compound_army = {
	create_ehof_general = yes
	event_target:compound_country = {
		random_owned_fleet = {
			limit = {
				is_ship_class = shipclass_military
				NOT = { has_fleet_flag = compound_transport_following }
			}
			set_fleet_flag = compound_transport_following
			save_event_target_as = compound_transport_following
		}
		create_fleet = {
			settings = {
				uses_naval_capacity = no
				spawn_debris = no
			}
			effect = {
				set_owner = event_target:compound_country
				while = {
					count = 20
					create_army_transport = {
						graphical_culture = "ehof_01"
						army_type = "compound_assault"
					}
				}
				set_location = {
					target = event_target:compound_transport_following
					distance = 35
					angle = random
				}
				auto_follow_fleet = {
					target = event_target:compound_transport_following
					attack_fleet = no
				}
			}
		}
		last_created_army =  { assign_leader = event_target:compound_army_leader }
	}
}

create_architect_compound_fleet = {
	compound_set_fleet_spawn = yes
	change_variable = { which = current_architects value = 1 }
	event_target:compound_country = {
		create_fleet = {
			settings = {
				uses_naval_capacity = no
				spawn_debris = no
			}
			effect = {
				set_owner = event_target:compound_country
				create_ship = {
					name = "NAME_Architect"
					design = "NAME_Architect"
					graphical_culture = "ehof_01"
				}
				set_fleet_stance = evasive
				set_location = {
					target = event_target:compound_fleet_spawn
					distance = 35
					angle = random
				}
			}
		}
	}
}

create_compound_military_station = {
	random_list = {
		40 = { create_fleet = { settings = { spawn_debris = no is_boss = yes } effect = { set_owner = event_target:compound_country create_ship = { name = random design = "NAME_Barricade"	graphical_culture = "ehof_01" } set_location = { target = event_target:spawn_military_station distance = 15 angle = random } } } }
		30 = { create_fleet = { settings = { spawn_debris = no is_boss = yes } effect = { set_owner = event_target:compound_country create_ship = { name = random design = "NAME_Garrison"		graphical_culture = "ehof_01" } set_location = { target = event_target:spawn_military_station distance = 15 angle = random } } } }
		20 = { create_fleet = { settings = { spawn_debris = no is_boss = yes } effect = { set_owner = event_target:compound_country create_ship = { name = random design = "NAME_Bastion"		graphical_culture = "ehof_01" } set_location = { target = event_target:spawn_military_station distance = 15 angle = random } } } }
		10 = { create_fleet = { settings = { spawn_debris = no is_boss = yes } effect = { set_owner = event_target:compound_country create_ship = { name = random design = "NAME_Bulwark"		graphical_culture = "ehof_01" } set_location = { target = event_target:spawn_military_station distance = 15 angle = random } } } }
	}
}

create_compound_system_stations = {
	if = {
		limit = { count_planets = { count <= 9 } }
		while = {
			count = 2
			random_system_planet = {
				limit = {
					NOR = {
						has_planet_flag = compound_home_sphere
						has_planet_flag = compound_military_station
						is_primary_star = yes
					}
				}
				set_planet_flag = compound_military_station
				save_event_target_as = spawn_military_station
				create_compound_military_station = yes
			}
		}
	}
	else_if = {
		limit = {
			count_planets = { count >= 10 }
			count_planets = { count <= 15 }
		}
		while = {
			count = 4
			random_system_planet = {
				limit = {
					NOR = {
						has_planet_flag = compound_home_sphere
						has_planet_flag = compound_military_station
						is_primary_star = yes
					}
				}
				set_planet_flag = compound_military_station
				save_event_target_as = spawn_military_station
				create_compound_military_station = yes
			}
		}
	}
	else = {
		while = {
			count = 6
			random_system_planet = {
				limit = {
					NOR = {
						has_planet_flag = compound_home_sphere
						has_planet_flag = compound_military_station
						is_primary_star = yes
					}
				}
				set_planet_flag = compound_military_station
				save_event_target_as = spawn_military_station
				create_compound_military_station = yes
			}
		}
	}
	every_system_planet = {
		limit = { has_planet_flag = compound_military_station }
		remove_planet_flag = compound_military_station
	}
}

save_discoverer = {
	if = { limit = { exists = event_target:discoverer_country }	clear_global_event_target = discoverer_country }
	if = { limit = { exists = event_target:discoverer_fleet }	clear_global_event_target = discoverer_fleet }
	if = { limit = { exists = event_target:discoverer_system }	clear_global_event_target = discoverer_system }
	if = {
		limit = { any_country = { has_country_flag = annihilator_discoverer } }
		random_country = {
			limit = { has_country_flag = annihilator_discoverer }
			remove_country_flag = annihilator_discoverer
		}
	}

	save_global_event_target_as = discoverer_country
	set_country_flag = annihilator_discoverer
	random_owned_fleet = {
		limit = {
			NOR = {
				is_ship_class = shipclass_starbase
				is_ship_class = shipclass_military_special
				is_ship_class = shipclass_military_station
				is_ship_class = shipclass_transport
			}
			fleet_power > 50
		}
		save_global_event_target_as = discoverer_fleet
	}
	capital_scope.solar_system = { save_global_event_target_as = discoverer_system }
}

annihilator_rewards = {
	every_country = {
		limit = {
			OR = {
				is_country_type = default
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
		}
		random_list = {
			1 = { set_variable = { which = sa_lootbox value = 1 } }
			1 = { set_variable = { which = sa_lootbox value = 2 } }
			1 = { set_variable = { which = sa_lootbox value = 3 } }
			1 = { set_variable = { which = sa_lootbox value = 4 } }
			1 = { modifier = { factor = 0 has_ancrel = no } set_variable = { which = sa_lootbox value = 5 } }
			1 = { set_variable = { which = sa_lootbox value = 6 } }
			1 = { set_variable = { which = sa_lootbox value = 7 } }
			1 = { set_variable = { which = sa_lootbox value = 8 } }
			1 = { set_variable = { which = sa_lootbox value = 9 } }
			1 = { modifier = { factor = 0 host_has_dlc = Apocalypse } set_variable = { which = sa_lootbox value = 10 } }
		}
		country_event = { id = annihilator_dialog.010 }
	}
}

destroy_annihilator = {
	set_timed_global_flag = { flag = annihilator_shroud_cd days = @annihilator_shroud_cd }			# Shroud CD
	set_timed_global_flag = { flag = annihilator_returning days = @ehof_ui_notification_time }		# UI Global
	remove_global_flag = annihilator_returned
	event_target:ehof_annihilator = {
		if = { limit = { exists = leader } leader = { unassign_leader = this } }
		destroy_fleet = { target = this }
	}
}

delete_annihilator = {
	event_target:ehof_annihilator = {
		if = { limit = { exists = leader } leader = { unassign_leader = this } }
		delete_fleet = { target = this }
	}
}

set_annihilator_location = {
	if = { limit = { exists = event_target:annihilator_location } clear_global_event_target = annihilator_location }
	save_global_event_target_as = annihilator_location
}

set_annihilator_spawn = {
	set_annihilator_location = yes
	if = { limit = { exists = event_target:annihilator_spawn_here } clear_global_event_target = annihilator_spawn_here }
	save_global_event_target_as = annihilator_spawn_here
}

create_annihilator = {
	if = { limit = { exists = event_target:ehof_annihilator } clear_global_event_target = ehof_annihilator }
	create_fleet = {
		name = NAME_Stellar_Annihilator
		settings = {
			uses_naval_capacity = no
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			create_ship = {
				name = "NAME_Stellar_Annihilator"
				design = NAME_Stellar_Annihilator
				graphical_culture = "creators_01"
			}
			assign_leader = event_target:annihilator_admiral
			set_formation_scale = 1
			save_global_event_target_as = ehof_annihilator
			set_owner = event_target:creators_country
		}
	}
}

annihilator_death = {
	set_annihilator_spawn = yes
	delete_annihilator = yes
	create_annihilator = yes
	last_created_fleet = {
		assign_leader = event_target:annihilator_admiral
		set_formation_scale = 1
		set_fleet_stance = passive
		set_aggro_range_measure_from = self
		set_aggro_range = 500
		set_location = {
			target = event_target:annihilator_spawn_here
			distance = 0
			angle = 0
		}
	}
}

annihilator_spawn = {
	remove_global_flag = annihilator_returning													# UI Global
	set_timed_global_flag = { flag = annihilator_returned days = @annihilator_shroud_cd }		# UI Global
	set_timed_global_flag = { flag = annihilator_shroud_cd days = @annihilator_shroud_cd }		# Shroud CD
	create_annihilator = yes
	last_created_fleet = {
		assign_leader = event_target:annihilator_admiral
		set_formation_scale = 1
		set_fleet_stance = aggressive
		set_aggro_range_measure_from = self
		set_aggro_range = 500
		set_location = {
			target = event_target:annihilator_spawn_here
			distance = 75
			angle = random
		}
	}
}

annihilator_attack = {
	if = { limit = { has_global_flag = sa_target_defend }	remove_global_flag = sa_target_defend }
	if = { limit = { has_global_flag = sa_target_compound }	remove_global_flag = sa_target_compound }
	if = { limit = { has_global_flag = sa_target_sphere }	remove_global_flag = sa_target_sphere }
	if = { limit = { has_global_flag = sa_target_follow }	remove_global_flag = sa_target_follow }
	set_global_flag = sa_target_compound

	# Save a target
	event_target:annihilator_location.solar_system = {
		closest_system = {
			limit = { has_star_flag = ehof_compound_system }
			if = {
				limit = { exists = event_target:sa_attack_compound }
				clear_global_event_target = sa_attack_compound
			}
			star = { save_global_event_target_as = sa_attack_compound }
		}
	}

	# Go to target and then reset
	event_target:ehof_annihilator = {
		clear_fleet_actions = this
		clear_orders = yes
		remove_auto_move_target = yes

		auto_move_to_planet = {
			target = event_target:sa_attack_compound
			clear_auto_move_on_arrival = no
			arrival_effect = annihilator_attack
		}
	}
}

annihilator_sphere = {
	if = { limit = { has_global_flag = sa_target_defend }	remove_global_flag = sa_target_defend }
	if = { limit = { has_global_flag = sa_target_compound }	remove_global_flag = sa_target_compound }
	if = { limit = { has_global_flag = sa_target_sphere }	remove_global_flag = sa_target_sphere }
	if = { limit = { has_global_flag = sa_target_follow }	remove_global_flag = sa_target_follow }
	set_global_flag = sa_target_sphere

	# Save a target
	event_target:compound_capital_system.star = {
		if = {
			limit = { exists = event_target:sa_attack_sphere }
			clear_global_event_target = sa_attack_sphere
		}
		save_global_event_target_as = sa_attack_sphere
	}

	# Go to target and then reset
	event_target:ehof_annihilator = {
		clear_fleet_actions = this
		clear_orders = yes
		remove_auto_move_target = yes

		auto_move_to_planet = {
			target = event_target:sa_attack_sphere
			clear_auto_move_on_arrival = no
			arrival_effect = annihilator_sphere
		}
	}
}

annihilator_follow = {
	if = { limit = { has_global_flag = sa_target_defend }	remove_global_flag = sa_target_defend }
	if = { limit = { has_global_flag = sa_target_compound }	remove_global_flag = sa_target_compound }
	if = { limit = { has_global_flag = sa_target_sphere }	remove_global_flag = sa_target_sphere }
	if = { limit = { has_global_flag = sa_target_follow }	remove_global_flag = sa_target_follow }
	set_global_flag = sa_target_follow

	# Set fleet to follow
	if = {
		limit = { NOT = { exists = event_target:discoverer_fleet } }
		event_target:discoverer_country = {
			random_owned_fleet = {
				limit = {
					is_ship_class = shipclass_military
					fleet_power > 1
				}
				save_global_event_target_as = discoverer_fleet
			}
		}
	}

	event_target:discoverer_country = {
		if = {
			limit = {
				NAND = {
					has_global_flag = annihilator_shroud_cd
					has_global_flag = annihilator_firing
					has_global_flag = annihilator_shroud
					event_target:annihilator_location.solar_system = { is_same_value = event_target:discoverer_fleet.solar_system }
				}
			}
			set_global_flag = annihilator_shroud
			destroy_annihilator = yes
			country_event = { id = annihilator.016 days = @annihilator_shroud_time }				# Respawn in x days at fleet location
		}
		else = {
			# Follow fleet
			event_target:ehof_annihilator = {
				clear_fleet_actions = this
				clear_orders = yes
				remove_auto_move_target = yes
				auto_follow_fleet = {
					target = event_target:discoverer_fleet
					attack_fleet = no
				}
			}
		}
	}
}

annihilator_defend = {
	if = { limit = { has_global_flag = sa_target_defend }	remove_global_flag = sa_target_defend }
	if = { limit = { has_global_flag = sa_target_compound }	remove_global_flag = sa_target_compound }
	if = { limit = { has_global_flag = sa_target_sphere }	remove_global_flag = sa_target_sphere }
	if = { limit = { has_global_flag = sa_target_follow }	remove_global_flag = sa_target_follow }
	set_global_flag = sa_target_defend

	# Save a target
	event_target:discoverer_system = {
		closest_system = {
			limit = {
				any_fleet_in_system = {
					exists = owner
					owner = { is_country_type = compound_empire }
				}
			}
			if = {
				limit = { exists = event_target:sa_defend_discoverer }
				clear_global_event_target = sa_defend_discoverer
			}
			star = { save_global_event_target_as = sa_defend_discoverer }
		}
	}

	event_target:annihilator_location.solar_system = {
		if = {
			limit = { NOT = { distance = { source = event_target:discoverer_system max_jumps = 10 } } }
			event_target:creators_country = {
				set_global_flag = annihilator_shroud
				destroy_annihilator = yes
				country_event = { id = annihilator.005 days = @annihilator_shroud_time }	# Respawn Annihalor at discoverer capital
			}
		}
	}

	# Go to target and then reset
	event_target:ehof_annihilator = {
		clear_fleet_actions = this
		clear_orders = yes
		remove_auto_move_target = yes

		auto_move_to_planet = {
			target = event_target:sa_defend_discoverer
			clear_auto_move_on_arrival = no
			arrival_effect = annihilator_defend
		}
	}
}