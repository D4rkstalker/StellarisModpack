### Vanilla ###

# for follow-up events
# use in AFTER or OPTION for timing reasons
# this = country getting a clue
pop_lcluster_event = {
	hidden_effect = {
		# pop follow-up if valid
		if = {
			limit = {
				has_distar = yes
				has_country_flag = encountered_first_lgate
				NOR = {
					has_global_flag = l_cluster_opened
					has_completed_event_chain_counter = {
						event_chain = l_cluster_chain
						counter = clues
					}
				}
			}
			random_list = {
				7 = {
					switch = {
						trigger = has_country_flag
						lcluster_clue_sonic = { remove_country_flag = lcluster_clue_sonic }
						lcluster_clue_desc_1 = { remove_country_flag = lcluster_clue_desc_1 }
						lcluster_clue_desc_2 = { remove_country_flag = lcluster_clue_desc_2 }
						lcluster_clue_desc_3 = { remove_country_flag = lcluster_clue_desc_3 }
						lcluster_clue_pirate = { remove_country_flag = lcluster_clue_pirate }
						lcluster_clue_battle = { remove_country_flag = lcluster_clue_battle }
						lcluster_clue_graveyard = { remove_country_flag = lcluster_clue_graveyard }
						lcluster_clue_dark_flow = { remove_country_flag = lcluster_clue_dark_flow }
						lcluster_clue_clones = { remove_country_flag = lcluster_clue_clones }
						lcluster_clue_junkyard = { remove_country_flag = lcluster_clue_junkyard }
						lcluster_clue_junkball = { remove_country_flag = lcluster_clue_junkball }
						lcluster_clue_ratling = { remove_country_flag = lcluster_clue_ratling }
						lcluster_clue_bunker_bot = { remove_country_flag = lcluster_clue_bunker_bot }
						lcluster_clue_asteroid_gate = { remove_country_flag = lcluster_clue_asteroid_gate }
						lcluster_clue_mineral_processing = { remove_country_flag = lcluster_clue_mineral_processing }
					}
				}
				3 = { country_event = { id = distar.9000 days = 10 } }
			}
		}
	}
}

setup_primitive_planet = {
	set_owner = last_created_country
	set_capital = yes
	
	last_created_country = {
		if = {
			limit = { has_country_flag = stone_age }
			prev = {
				while = {
					count = 4
					create_pop = {
						species = last_created
					}					
				}
				add_building = building_crude_huts
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = bronze_age }
			prev = {
				while = {
					count = 8
					create_pop = {
						species = last_created
					}					
				}
				add_building = building_primitive_dwellings
				add_building = building_stone_palace
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = iron_age }
			prev = {
				while = {
					count = 9
					create_pop = {
						species = last_created
					}
				}
				add_building = building_primitive_dwellings
				add_building = building_stone_palace
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = late_medieval_age }
			prev = {
				while = {
					count = 10
					create_pop = {
						species = last_created
					}
				}
				add_building = building_primitive_dwellings
				add_building = building_primitive_dwellings
				add_building = building_stone_palace
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = renaissance_age }
			prev = {
				while = {
					count = 12
					create_pop = {
						species = last_created
					}
				}
				add_building = building_primitive_dwellings
				add_building = building_primitive_dwellings
				add_building = building_stone_palace
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = steam_age }
			prev = {
				while = {
					count = 16
					create_pop = {
						species = last_created
					}
				}
				add_building = building_urban_dwellings
				add_building = building_primitive_factory
				add_building = building_primitive_mine
				add_building = building_stone_palace
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = industrial_age }
			prev = {
				while = {
					count = 22
					create_pop = {
						species = last_created
					}
				}
				add_building = building_primitive_farm
				add_building = building_primitive_factory
				add_building = building_primitive_mine
				add_building = building_primitive_power_plant
				add_building = building_primitive_capital
				add_building = building_urban_dwellings
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = machine_age }
			prev = {
				while = {
					count = 24
					create_pop = {
						species = last_created
					}
				}
				add_building = building_primitive_farm
				add_building = building_primitive_factory
				add_building = building_primitive_mine
				add_building = building_primitive_power_plant
				add_building = building_primitive_capital
				add_building = building_urban_dwellings
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = atomic_age }
			prev = {
				while = {
					count = 26
					create_pop = {
						species = last_created
					}
				}
				add_building = building_primitive_farm
				add_building = building_primitive_factory
				add_building = building_primitive_mine
				add_building = building_primitive_power_plant
				add_building = building_primitive_capital
				add_building = building_urban_dwellings
				remove_building = building_colony_shelter
			}
		}
		if = {
			limit = { has_country_flag = early_space_age }
			prev = {
				while = {
					count = 28
					create_pop = {
						species = last_created
					}
				}
				add_building = building_primitive_farm
				add_building = building_primitive_factory
				add_building = building_primitive_mine
				add_building = building_primitive_power_plant
				add_building = building_primitive_capital
				add_building = building_urban_dwellings
				remove_building = building_colony_shelter
			}
		}
	}
	
	if = {
		limit = {
			last_created_country = {
				OR = {
					has_country_flag = machine_age
					has_country_flag = atomic_age
					has_country_flag = early_space_age
				}
			}
		}
		create_primitive_blockers = yes
	}
	if = {
		limit = { is_planet_class = pc_ringworld_habitable }
		last_created_country = { set_origin = origin_shattered_ring }
		every_deposit = {
			limit = { is_blocker = yes }
			clear_blocker = yes
		}
		add_deposit = d_arcane_generator
		add_deposit = d_decrepit_tunnels_1
		add_deposit = d_decrepit_tunnels_2
		add_deposit = d_decrepit_tunnels_3
	}
	if = {
		limit = { is_planet_class = pc_gaia }
		last_created_country = { set_origin = origin_life_seeded }
		add_deposit = d_dust_caverns
		add_deposit = d_bubbling_swamp
		add_deposit = d_crystalline_caverns
	}
	if = {
		limit = { is_planet_class = pc_nuked }
		last_created_country = { set_origin = origin_post_apocalyptic }
		every_deposit = {
			limit = { is_blocker = yes }
			clear_blocker = yes
		}
		add_deposit = d_tomb_world_ruins
		add_deposit = d_tomb_world_wasteland
	}
	if = {
		limit = {
			last_created_country = { is_lithoid_empire = yes }
		}
		random_list = {
			2 = {
				while = {
					count = 4
					add_deposit = d_hibernating_lithoids
				}
			}
			1 = {
				modifier = {
					factor = 0
					OR = {
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_gaia
						is_planet_class = pc_nuked
					}
				}
				last_created_country = { set_origin = origin_lithoid }
				while = {
					count = 4
					add_deposit = d_buried_lithoids
				}
				add_deposit = d_lithoid_crater
				add_modifier = { modifier = lithoid_crater }
			}
		}
	}
}

add_alloys = {
	random_list = {
		16 = { set_deposit = d_alloys_1 }
		4 = { set_deposit = d_alloys_2 }
		1 = { set_deposit = d_alloys_3 }
	}
}

add_volatile_motes = {
	random_list = {
		16 = { set_deposit = d_volatile_motes_1 }
		4 = { set_deposit = d_volatile_motes_2 }
		1 = { set_deposit = d_volatile_motes_3 }
	}
}

add_exotic_gases = {
	random_list = {
		16 = { set_deposit = d_exotic_gases_1 }
		4 = { set_deposit = d_exotic_gases_2 }
		1 = { set_deposit = d_exotic_gases_3 }
	}
}

add_rare_crystals = {
	random_list = {
		16 = { set_deposit = d_rare_crystals_1 }
		4 = { set_deposit = d_rare_crystals_2 }
		1 = { set_deposit = d_rare_crystals_3 }
	}
}