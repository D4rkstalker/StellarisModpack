### First round of generation uses vanilla weights to determine which initializer to use. For basic/massive generation, exotic/life signs uses another.

htm_system_generate = {
	random_list = {
		20 = { htm_system_generate_2 = { initializer = "basic_init_01" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ class = $class$ } }
		20 = { htm_system_generate_2 = { initializer = "basic_init_02" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ class = $class$ } }
		10 = { htm_system_generate_2 = { initializer = "basic_init_03" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ class = $class$ } }
		10 = { htm_system_generate_2 = { initializer = "basic_init_04" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ class = $class$ } }
		6  = { htm_system_generate_2 = { initializer = "basic_init_05" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ class = $class$ } }
		4  = { htm_system_generate_2 = { initializer = "basic_init_06" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ class = $class$ } }
	}
}

### Take values and do generation.

htm_system_generate_2 = {
	event_target:htm_system = {
		spawn_system = { 
			min_orientation_angle = $min_orientation_angle$ 
			max_orientation_angle = $max_orientation_angle$
			min_distance >= $min_distance$ 
			max_distance <= $max_distance$ 
			initializer = $initializer$ 
			max_jumps = 0 
		}
	}
	last_created_system = { set_star_class = $class$ }
}

### This generates systems that don't need the star class modified (Exotics/Life Signs)

htm_system_generate_exotic = {
	event_target:htm_system = {
		spawn_system = { 
			min_orientation_angle = $min_orientation_angle$ 
			max_orientation_angle = $max_orientation_angle$
			min_distance >= $min_distance$ 
			max_distance <= $max_distance$ 
			initializer = $initializer$ 
			max_jumps = 0 
		}
	}
}

### Fauna need a randomizer before running the exotic gen. Legend:
# 02 - Blue Crystals
# 04 - Green Crystals
# 06 - Red Crystals
# 08 - Void Cloud
# 10 - Amoebas
# 15 - Tiyanki

htm_system_generate_fauna = {
	random_list = {
		3 = { htm_system_generate_exotic = { initializer = "hostile_init_02" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ } }
		3 = { htm_system_generate_exotic = { initializer = "hostile_init_04" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ } }
		3 = { htm_system_generate_exotic = { initializer = "hostile_init_06" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ } }
		5 = { htm_system_generate_exotic = { initializer = "hostile_init_08" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ } }
		10  = { htm_system_generate_exotic = { initializer = "hostile_init_10" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ } }
		5  = { htm_system_generate_exotic = { initializer = "hostile_init_10_small_amoeba_pack" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ } }
		7  = { htm_system_generate_exotic = { initializer = "hostile_init_15" min_orientation_angle = $min_orientation_angle$ max_orientation_angle = $max_orientation_angle$ min_distance = $min_distance$ max_distance = $max_distance$ } }
	}
}

### Dowser appends 1-2 hyperlanes

htm_dowse = {
	random_list = {
		1 = { while = { count = 1 add_extra_hyperlane_to_spawned_system_effect = yes } }
		1 = { while = { count = 2 add_extra_hyperlane_to_spawned_system_effect = yes } }
	}
}

### Wormhole Stuff

htm_wormhole_generate = {
	last_created_system = { isolate_system = yes }
	event_target:htm_system.solar_system = {
		last_created_system = {
			prev = { # Yes, this is convoluted, but it's the Paradox method to ensure no orphan wormhole
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
			}
			spawn_natural_wormhole = {
				bypass_type = wormhole
				random_pos = yes
				orbit_angle = 360
			}
			link_wormholes = prev
		}
	}
}



### Truncator Operations

htm_truncator_list_save = {
	if = { limit = { NOT = { exists = event_target:htm_t01 } } save_event_target_as = htm_t01 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t02 } } save_event_target_as = htm_t02 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t03 } } save_event_target_as = htm_t03 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t04 } } save_event_target_as = htm_t04 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t05 } } save_event_target_as = htm_t05 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t06 } } save_event_target_as = htm_t06 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t07 } } save_event_target_as = htm_t07 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t08 } } save_event_target_as = htm_t08 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t09 } } save_event_target_as = htm_t09 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t10 } } save_event_target_as = htm_t10 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t11 } } save_event_target_as = htm_t11 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t12 } } save_event_target_as = htm_t12 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t13 } } save_event_target_as = htm_t13 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t14 } } save_event_target_as = htm_t14 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t15 } } save_event_target_as = htm_t15 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t16 } } save_event_target_as = htm_t16 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t17 } } save_event_target_as = htm_t17 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t18 } } save_event_target_as = htm_t18 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t19 } } save_event_target_as = htm_t19 }
	else_if = {	limit = { NOT = { exists = event_target:htm_t20 } } save_event_target_as = htm_t20 }
}

htm_truncator_run = {
	save_event_target_as = htm_truncate_target
	system_event = { id = htm_event.303 }
}

### Connector Operations

htm_connector_list_save = {
	if = { limit = { NOT = { exists = event_target:htm_c01 } } save_event_target_as = htm_c01 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c02 } } save_event_target_as = htm_c02 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c03 } } save_event_target_as = htm_c03 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c04 } } save_event_target_as = htm_c04 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c05 } } save_event_target_as = htm_c05 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c06 } } save_event_target_as = htm_c06 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c07 } } save_event_target_as = htm_c07 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c08 } } save_event_target_as = htm_c08 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c09 } } save_event_target_as = htm_c09 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c10 } } save_event_target_as = htm_c10 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c11 } } save_event_target_as = htm_c11 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c12 } } save_event_target_as = htm_c12 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c13 } } save_event_target_as = htm_c13 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c14 } } save_event_target_as = htm_c14 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c15 } } save_event_target_as = htm_c15 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c16 } } save_event_target_as = htm_c16 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c17 } } save_event_target_as = htm_c17 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c18 } } save_event_target_as = htm_c18 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c19 } } save_event_target_as = htm_c19 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c20 } } save_event_target_as = htm_c20 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c21 } } save_event_target_as = htm_c21 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c22 } } save_event_target_as = htm_c22 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c23 } } save_event_target_as = htm_c23 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c24 } } save_event_target_as = htm_c24 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c25 } } save_event_target_as = htm_c25 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c26 } } save_event_target_as = htm_c26 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c27 } } save_event_target_as = htm_c27 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c28 } } save_event_target_as = htm_c28 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c29 } } save_event_target_as = htm_c29 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c30 } } save_event_target_as = htm_c30 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c31 } } save_event_target_as = htm_c31 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c32 } } save_event_target_as = htm_c32 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c33 } } save_event_target_as = htm_c33 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c34 } } save_event_target_as = htm_c34 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c35 } } save_event_target_as = htm_c35 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c36 } } save_event_target_as = htm_c36 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c37 } } save_event_target_as = htm_c37 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c38 } } save_event_target_as = htm_c38 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c39 } } save_event_target_as = htm_c39 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c40 } } save_event_target_as = htm_c40 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c41 } } save_event_target_as = htm_c41 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c42 } } save_event_target_as = htm_c42 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c43 } } save_event_target_as = htm_c43 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c44 } } save_event_target_as = htm_c44 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c45 } } save_event_target_as = htm_c45 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c46 } } save_event_target_as = htm_c46 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c47 } } save_event_target_as = htm_c47 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c48 } } save_event_target_as = htm_c48 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c49 } } save_event_target_as = htm_c49 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c50 } } save_event_target_as = htm_c50 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c51 } } save_event_target_as = htm_c51 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c52 } } save_event_target_as = htm_c52 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c53 } } save_event_target_as = htm_c53 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c54 } } save_event_target_as = htm_c54 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c55 } } save_event_target_as = htm_c55 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c56 } } save_event_target_as = htm_c56 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c57 } } save_event_target_as = htm_c57 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c58 } } save_event_target_as = htm_c58 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c59 } } save_event_target_as = htm_c59 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c60 } } save_event_target_as = htm_c60 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c61 } } save_event_target_as = htm_c61 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c62 } } save_event_target_as = htm_c62 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c63 } } save_event_target_as = htm_c63 }
	else_if = {	limit = { NOT = { exists = event_target:htm_c64 } } save_event_target_as = htm_c64 }
}

htm_connector_run = {
	save_event_target_as = htm_connect_target
	system_event = { id = htm_event.403 }
}