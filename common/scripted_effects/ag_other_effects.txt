
ag_lost_ancient_ship_debuff = {
	optimize_memory
	set_variable = { which = ag_scaled_difficulty_temp value = event_target:global_event_country.ag_scaled_difficulty }
	set_variable = { which = ag_scaled_difficulty_2x_temp value = event_target:global_event_country.ag_scaled_difficulty_2x }
	remove_modifier = ag_lost_ancient_ship_debuff_1x
	remove_modifier = ag_lost_ancient_ship_debuff_2x
	if = {
		limit = { check_variable = { which = ag_scaled_difficulty_temp value > 0 } }
		add_modifier = { modifier = ag_lost_ancient_ship_debuff_1x multiplier = ag_scaled_difficulty_temp days = -1 }
		add_modifier = { modifier = ag_lost_ancient_ship_debuff_2x multiplier = ag_scaled_difficulty_2x_temp days = -1 }
	}
	clear_variable = ag_scaled_difficulty_temp
	clear_variable = ag_scaled_difficulty_2x_temp
}

ag_create_precursor_databank_site = {
	optimize_memory
	solar_system = {
		if = {
			limit = {
				any_system_planet = {
					NOT = {
						is_same_value = from.planet
					}
					OR = {
						is_planet_class = pc_barren
						is_planet_class = pc_barren_cold
						is_planet_class = pc_frozen
					}
				}
			}
			random_system_planet = {
				limit = {
					NOT = {
						is_same_value = from.planet
					}
					OR = {
						is_planet_class = pc_barren
						is_planet_class = pc_barren_cold
						is_planet_class = pc_frozen
					}
				}
				create_archaeological_site = ag_precursor_databank_site
			}
		}
		else_if = {
			limit = {
				any_neighbor_system = {
					any_system_planet = {
						OR = {
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
							is_planet_class = pc_frozen
						}
					}
				}
			}
			random_neighbor_system = {
				limit = {
					any_system_planet = {
						OR = {
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
							is_planet_class = pc_frozen
						}
					}
				}
				random_system_planet = {
					limit = {
						OR = {
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
							is_planet_class = pc_frozen
						}
					}
					create_archaeological_site = ag_precursor_databank_site
				}
			}
		}
		else_if = {
			limit = { always = yes }
			from.planet = {
				create_archaeological_site = ag_precursor_databank_site
			}
		}
	}
}

ag_set_beacon_of_prosperity_relic = {
	optimize_memory
	ag_change_pc = { ag_planet_class = pc_relic }
	clear_deposits = yes
	add_deposit = d_city_ruins
	add_deposit = d_city_ruins
	add_deposit = d_city_ruins
	add_deposit = d_city_ruins
	add_deposit = d_city_ruins
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_ruined_arcology
	add_deposit = d_relic_dense_ruins
	add_deposit = d_collapsed_spire
	add_deposit = d_massive_crevice
	add_deposit = d_shattered_solar_array
	add_deposit = d_flooded_reactor_pits
	add_deposit = d_crumbling_mining_tunnels
	add_deposit = d_relic_metal_boneyard
}
ag_set_beacon_of_prosperity_barren = {
	optimize_memory
	ag_change_pc = { ag_planet_class = pc_barren }
}
ag_set_kae_interaction_ringworlds = {
	optimize_memory
	star = { ag_spawn_explosion_effect = { ag_scale = xl ag_color = red } }
	random_list = {
		25 = {
			modifier = { factor = 0 has_star_flag = ag_ringworld_color_changed_1 }
			set_star_flag = ag_ringworld_color_changed_1
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_1 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_2 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_3 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
		}
		25 = {
			modifier = { factor = 0 has_star_flag = ag_ringworld_color_changed_2 }
			set_star_flag = ag_ringworld_color_changed_2
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_4 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_5 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_6 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
		}
		25 = {
			modifier = { factor = 0 has_star_flag = ag_ringworld_color_changed_3 }
			set_star_flag = ag_ringworld_color_changed_3
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_7 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_8 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_9 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
		}
		25 = {
			modifier = { factor = 0 has_star_flag = ag_ringworld_color_changed_4 }
			set_star_flag = ag_ringworld_color_changed_4
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_10 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_11 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
			random_system_planet = {
				limit = { has_planet_flag = kuat_system_ring_12 }
				switch = {
					trigger = is_planet_class
					pc_ringworld_habitable = {
						ag_set_ancient_ringworld = {
							ag_color = red
							ag_type = habitable
							ag_surface_type = gaia
						}
					}
					pc_ringworld_tech = { ag_set_ancient_ringworld = { ag_color = red ag_type = tech } }
					default = { ag_set_ancient_ringworld = { ag_color = red ag_type = seam } }
				}
			}
		}
	}
}

ag_lost_ancient_ship_clear_failed_flags = {
	optimize_memory
	remove_country_flag = ag_lost_ancient_ship_target_guardian_dragon_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_fortress_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_stellarite_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_horror_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_hiver_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_sphere_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_dreadnought_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_wraith_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_hatchling_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_scavenger_bot_failed
	remove_country_flag = ag_lost_ancient_ship_target_guardian_elderly_tiyanki_failed
}
ag_lost_ancient_ship_clear_guardians_flags = {
	optimize_memory
	remove_country_flag = ag_exists_guardian_dragon
	remove_country_flag = ag_exists_guardian_fortress
	remove_country_flag = ag_exists_guardian_stellarite
	remove_country_flag = ag_exists_guardian_horror
	remove_country_flag = ag_exists_guardian_hiver
	remove_country_flag = ag_exists_guardian_sphere
	remove_country_flag = ag_exists_guardian_dreadnought
	remove_country_flag = ag_exists_guardian_wraith
	remove_country_flag = ag_exists_guardian_hatchling
	remove_country_flag = ag_exists_guardian_scavenger_bot
	remove_country_flag = ag_exists_guardian_elderly_tiyanki
}
ag_lost_ancient_ship_set_guardians_flag = {
	optimize_memory
	every_country = {
		if = { limit = { is_country_type = guardian_dragon has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_dragon } }
		else_if = { limit = { is_country_type = guardian_fortress has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_fortress } }
		else_if = { limit = { is_country_type = guardian_stellarite has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_stellarite } }
		else_if = { limit = { is_country_type = guardian_horror has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_horror } }
		else_if = { limit = { is_country_type = guardian_hiver has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_hiver } }
		else_if = { limit = { is_country_type = guardian_sphere has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_sphere } }
		else_if = { limit = { is_country_type = guardian_dreadnought has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_dreadnought } }
		else_if = { limit = { is_country_type = guardian_wraith has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_wraith } }
		else_if = { limit = { is_country_type = guardian_hatchling has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_hatchling } }
		else_if = { limit = { is_country_type = guardian_scavenger_bot has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_scavenger_bot } }
		else_if = { limit = { is_country_type = guardian_elderly_tiyanki has_communications = prev.owner } prev.owner = { set_country_flag = ag_exists_guardian_elderly_tiyanki } }
	}
}
ag_lost_ancient_ship_change_guardians_protection = {
	optimize_memory
	if = {
		limit = { has_country_flag = ag_lost_ancient_ship_target_$ag_target_guardian$_protected }
		remove_country_flag = ag_lost_ancient_ship_target_$ag_target_guardian$_protected
	}
	else = { set_country_flag = ag_lost_ancient_ship_target_$ag_target_guardian$_protected }
}

ag_lost_ancient_ship_reset_special_dialog_flag = {
	optimize_memory
	if = {
		limit = { has_country_flag = ag_lost_ancient_ship_zeta_guardian_destroyed_recent }
		remove_country_flag = ag_lost_ancient_ship_zeta_guardian_destroyed_recent
		if = {
			limit = { has_country_flag = ag_lost_ancient_ship_zeta_guardian_destroyed_response }
			remove_country_flag = ag_lost_ancient_ship_zeta_guardian_destroyed_response
		}
	}
	else = {
		if = {
			limit = { has_country_flag = ag_lost_ancient_ship_subsystem_repaired_recent }
			remove_country_flag = ag_lost_ancient_ship_subsystem_repaired_recent
		}
	}
}

ag_get_repeatable_tech_max_buff = {
	optimize_memory
	# 1, Energy
	set_variable = { which = ag_$ag_index$_id value = 1 }
	export_modifier_to_variable = { modifier = weapon_type_energy_weapon_damage_mult variable = ag_$ag_index$_damage_value }
	export_modifier_to_variable = { modifier = weapon_type_energy_weapon_fire_rate_mult variable = ag_$ag_index$_temp_var }
	change_variable = { which = ag_$ag_index$_damage_value value = ag_$ag_index$_temp_var }
	# 2, Kinetic
	export_modifier_to_variable = { modifier = weapon_type_kinetic_weapon_damage_mult variable = ag_$ag_index$_fire_rate_value }
	export_modifier_to_variable = { modifier = weapon_type_kinetic_weapon_fire_rate_mult variable = ag_$ag_index$_temp_var }
	change_variable = { which = ag_$ag_index$_fire_rate_value value = ag_$ag_index$_temp_var }
	if = {
		limit = { check_variable = { which = ag_$ag_index$_damage_value value < ag_$ag_index$_fire_rate_value } }
		set_variable = { which = ag_$ag_index$_damage_value value = ag_$ag_index$_fire_rate_value }
		set_variable = { which = ag_$ag_index$_id value = 2 }
	}
	# 3, Explosive
	export_modifier_to_variable = { modifier = weapon_type_explosive_weapon_damage_mult variable = ag_$ag_index$_fire_rate_value }
	export_modifier_to_variable = { modifier = weapon_type_explosive_weapon_fire_rate_mult variable = ag_$ag_index$_temp_var }
	change_variable = { which = ag_$ag_index$_fire_rate_value value = ag_$ag_index$_temp_var }
	if = {
		limit = { check_variable = { which = ag_$ag_index$_damage_value value < ag_$ag_index$_fire_rate_value } }
		set_variable = { which = ag_$ag_index$_damage_value value = ag_$ag_index$_fire_rate_value }
		set_variable = { which = ag_$ag_index$_id value = 3 }
	}
	# 4, Strike Craft
	export_modifier_to_variable = { modifier = weapon_type_strike_craft_weapon_damage_mult variable = ag_$ag_index$_fire_rate_value }
	export_modifier_to_variable = { modifier = weapon_type_strike_craft_weapon_fire_rate_mult variable = ag_$ag_index$_temp_var }
	change_variable = { which = ag_$ag_index$_fire_rate_value value = ag_$ag_index$_temp_var }
	if = {
		limit = { check_variable = { which = ag_$ag_index$_damage_value value < ag_$ag_index$_fire_rate_value } }
		set_variable = { which = ag_$ag_index$_damage_value value = ag_$ag_index$_fire_rate_value }
		set_variable = { which = ag_$ag_index$_id value = 4 }
	}
	# 5, Gravity
	export_modifier_to_variable = { modifier = weapon_type_gravity_weapon_damage_mult variable = ag_$ag_index$_fire_rate_value }
	export_modifier_to_variable = { modifier = weapon_type_gravity_weapon_fire_rate_mult variable = ag_$ag_index$_temp_var }
	change_variable = { which = ag_$ag_index$_fire_rate_value value = ag_$ag_index$_temp_var }
	if = {
		limit = { check_variable = { which = ag_$ag_index$_damage_value value < ag_$ag_index$_fire_rate_value } }
		set_variable = { which = ag_$ag_index$_damage_value value = ag_$ag_index$_fire_rate_value }
		set_variable = { which = ag_$ag_index$_id value = 5 }
	}
	# 6, Psionic
	export_modifier_to_variable = { modifier = weapon_type_psionic_weapon_damage_mult variable = ag_$ag_index$_fire_rate_value }
	export_modifier_to_variable = { modifier = weapon_type_psionic_weapon_fire_rate_mult variable = ag_$ag_index$_temp_var }
	change_variable = { which = ag_$ag_index$_fire_rate_value value = ag_$ag_index$_temp_var }
	if = {
		limit = { check_variable = { which = ag_$ag_index$_damage_value value < ag_$ag_index$_fire_rate_value } }
		set_variable = { which = ag_$ag_index$_damage_value value = ag_$ag_index$_fire_rate_value }
		set_variable = { which = ag_$ag_index$_id value = 6 }
	}
	# 7, Anti Psionic
	export_modifier_to_variable = { modifier = weapon_type_anti_psionic_weapon_damage_mult variable = ag_$ag_index$_fire_rate_value }
	export_modifier_to_variable = { modifier = weapon_type_anti_psionic_weapon_fire_rate_mult variable = ag_$ag_index$_temp_var }
	change_variable = { which = ag_$ag_index$_fire_rate_value value = ag_$ag_index$_temp_var }
	if = {
		limit = { check_variable = { which = ag_$ag_index$_damage_value value < ag_$ag_index$_fire_rate_value } }
		set_variable = { which = ag_$ag_index$_damage_value value = ag_$ag_index$_fire_rate_value }
		set_variable = { which = ag_$ag_index$_id value = 7 }
	}
	clear_variable = ag_$ag_index$_temp_var
	# 1, Energy
	if = {
		limit = { check_variable = { which = ag_$ag_index$_id value = 1 } }
		export_modifier_to_variable = { modifier = weapon_type_energy_weapon_damage_mult variable = ag_$ag_index$_damage_value }
		export_modifier_to_variable = { modifier = weapon_type_energy_weapon_fire_rate_mult variable = ag_$ag_index$_fire_rate_value }
	}
	# 2, Kinetic
	else_if = {
		limit = { check_variable = { which = ag_$ag_index$_id value = 2 } }
		export_modifier_to_variable = { modifier = weapon_type_kinetic_weapon_damage_mult variable = ag_$ag_index$_damage_value }
		export_modifier_to_variable = { modifier = weapon_type_kinetic_weapon_fire_rate_mult variable = ag_$ag_index$_fire_rate_value }
	}
	# 3, Explosive
	else_if = {
		limit = { check_variable = { which = ag_$ag_index$_id value = 3 } }
		export_modifier_to_variable = { modifier = weapon_type_explosive_weapon_damage_mult variable = ag_$ag_index$_damage_value }
		export_modifier_to_variable = { modifier = weapon_type_explosive_weapon_fire_rate_mult variable = ag_$ag_index$_fire_rate_value }
	}
	# 4, Strike Craft
	else_if = {
		limit = { check_variable = { which = ag_$ag_index$_id value = 4 } }
		export_modifier_to_variable = { modifier = weapon_type_strike_craft_weapon_damage_mult variable = ag_$ag_index$_damage_value }
		export_modifier_to_variable = { modifier = weapon_type_strike_craft_weapon_fire_rate_mult variable = ag_$ag_index$_fire_rate_value }
	}
	# 5, Gravity
	else_if = {
		limit = { check_variable = { which = ag_$ag_index$_id value = 5 } }
		export_modifier_to_variable = { modifier = weapon_type_gravity_weapon_damage_mult variable = ag_$ag_index$_damage_value }
		export_modifier_to_variable = { modifier = weapon_type_gravity_weapon_fire_rate_mult variable = ag_$ag_index$_fire_rate_value }
	}
	# 6, Psionic
	else_if = {
		limit = { check_variable = { which = ag_$ag_index$_id value = 6 } }
		export_modifier_to_variable = { modifier = weapon_type_psionic_weapon_damage_mult variable = ag_$ag_index$_damage_value }
		export_modifier_to_variable = { modifier = weapon_type_psionic_weapon_fire_rate_mult variable = ag_$ag_index$_fire_rate_value }
	}
	# 7, Anti Psionic
	else_if = {
		limit = { check_variable = { which = ag_$ag_index$_id value = 7 } }
		export_modifier_to_variable = { modifier = weapon_type_anti_psionic_weapon_damage_mult variable = ag_$ag_index$_damage_value }
		export_modifier_to_variable = { modifier = weapon_type_anti_psionic_weapon_fire_rate_mult variable = ag_$ag_index$_fire_rate_value }
	}
}

ag_add_repeatable_tech_max_buff = {
	optimize_memory
	every_controlled_ship = {
		ag_spawn_buff_effect = { ag_type = 2 ag_color = red ag_scale = s }
		# 1, Energy
		if = {
			limit = { root = { check_variable = { which = ag_$ag_index$_id value = 1 } } }
			remove_modifier = "ag_[[ag_index]$ag_index$]_energy_damage"
			remove_modifier = "ag_[[ag_index]$ag_index$]_energy_fire_rate"
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_energy_damage" multiplier = root.ag_$ag_index$_damage_value days = $ag_days$ }
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_energy_fire_rate" multiplier = root.ag_$ag_index$_fire_rate_value days = $ag_days$ }
		}
		# 2, Kinetic
		else_if = {
			limit = { root = { check_variable = { which = ag_$ag_index$_id value = 2 } } }
			remove_modifier = "ag_[[ag_index]$ag_index$]_kinetic_damage"
			remove_modifier = "ag_[[ag_index]$ag_index$]_kinetic_fire_rate"
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_kinetic_damage" multiplier = root.ag_$ag_index$_damage_value days = $ag_days$ }
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_kinetic_fire_rate" multiplier = root.ag_$ag_index$_fire_rate_value days = $ag_days$ }
		}
		# 3, Explosive
		else_if = {
			limit = { root = { check_variable = { which = ag_$ag_index$_id value = 3 } } }
			remove_modifier = "ag_[[ag_index]$ag_index$]_explosive_damage"
			remove_modifier = "ag_[[ag_index]$ag_index$]_explosive_fire_rate"
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_explosive_damage" multiplier = root.ag_$ag_index$_damage_value days = $ag_days$ }
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_explosive_fire_rate" multiplier = root.ag_$ag_index$_fire_rate_value days = $ag_days$ }
		}
		# 4, Strike Craft
		else_if = {
			limit = { root = { check_variable = { which = ag_$ag_index$_id value = 4 } } }
			remove_modifier = "ag_[[ag_index]$ag_index$]_strike_craft_damage"
			remove_modifier = "ag_[[ag_index]$ag_index$]_strike_craft_fire_rate"
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_strike_craft_damage" multiplier = root.ag_$ag_index$_damage_value days = $ag_days$ }
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_strike_craft_fire_rate" multiplier = root.ag_$ag_index$_fire_rate_value days = $ag_days$ }
		}
		# 5, Gravity
		else_if = {
			limit = { root = { check_variable = { which = ag_$ag_index$_id value = 5 } } }
			remove_modifier = "ag_[[ag_index]$ag_index$]_gravity_damage"
			remove_modifier = "ag_[[ag_index]$ag_index$]_gravity_fire_rate"
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_gravity_damage" multiplier = root.ag_$ag_index$_damage_value days = $ag_days$ }
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_gravity_fire_rate" multiplier = root.ag_$ag_index$_fire_rate_value days = $ag_days$ }
		}
		# 6, Psionic
		else_if = {
			limit = { root = { check_variable = { which = ag_$ag_index$_id value = 6 } } }
			remove_modifier = "ag_[[ag_index]$ag_index$]_psionic_damage"
			remove_modifier = "ag_[[ag_index]$ag_index$]_psionic_fire_rate"
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_psionic_damage" multiplier = root.ag_$ag_index$_damage_value days = $ag_days$ }
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_psionic_fire_rate" multiplier = root.ag_$ag_index$_fire_rate_value days = $ag_days$ }
		}
		# 7, Anti Psionic
		else_if = {
			limit = { root = { check_variable = { which = ag_$ag_index$_id value = 7 } } }
			remove_modifier = "ag_[[ag_index]$ag_index$]_anti_psionic_damage"
			remove_modifier = "ag_[[ag_index]$ag_index$]_anti_psionic_fire_rate"
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_anti_psionic_damage" multiplier = root.ag_$ag_index$_damage_value days = $ag_days$ }
			add_modifier = { modifier = "ag_[[ag_index]$ag_index$]_anti_psionic_fire_rate" multiplier = root.ag_$ag_index$_fire_rate_value days = $ag_days$ }
		}
	}
}

ag_repeal_all_crisis_resolutions = {
	optimize_memory
	remove_global_flag = galactic_focus_crisis_ag_ancient_gamma_guardian
	remove_global_flag = galactic_focus_crisis_ag_zeta_crisis
	cancel_resolution = resolution_galactic_focus_crisis_ag_ancient_gamma_guardian
	cancel_resolution = resolution_galactic_focus_crisis_ag_zeta_crisis
}

ag_clear_ancient_fortress_effect = {
	optimize_memory
	if = { limit = { is_variable_set = ag_planet_devastation_temp } clear_variable = ag_planet_devastation_temp }
	if = { limit = { is_variable_set = ag_ancient_fortress_planetary_shield_effect } clear_variable = ag_ancient_fortress_planetary_shield_effect }
	if = { limit = { has_planet_flag = ag_ancient_fortress_actived } remove_planet_flag = ag_ancient_fortress_actived }
	if = { limit = { has_planet_flag = ag_ancient_fortress_planetary_shield_cooldown } remove_planet_flag = ag_ancient_fortress_planetary_shield_cooldown }
	solar_system = { every_system_ambient_object = {
		limit = { has_ambient_object_flag = ag_advanced_planetary_shield has_ambient_object_flag = ag_advanced_planetary_shield_@prevprev }
		destroy_ambient_object = this
	} }
}

ag_create_fallen_habitat_object = {
	optimize_memory
	set_planet_flag = ag_fallen_habitat_orbit_planet
	random_list = {
		10 = { create_ambient_object = { type = "ag_mammalian_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_reptilian_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_avian_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_molluscoid_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_fungoid_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_arthropoid_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_humanoid_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_plantoid_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_lithoid_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_necroid_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_nemesis_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_aquatic_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
		10 = { create_ambient_object = { type = "ag_toxoid_01_fallen_habitat_object" location = this use_3d_location = yes entity_offset = 9.899 entity_offset_angle = 45 entity_offset_height = 0 duration = -1 scale = 1.0 } }
	}
	last_created_ambient_object = { set_ambient_object_flag = ag_fallen_habitat_object set_ambient_object_flag = ag[[ag_type]_$ag_type$]_habitat_planet }
}

ag_create_fallen_habitat_planet = {
	optimize_memory
	random_system_ambient_object = {
		limit = { has_ambient_object_flag = ag_fallen_habitat_object }
		if = {
			limit = { has_ambient_object_flag = ag_volatile_motes_habitat_planet }
			prev = { random_system_planet = {
				limit = { has_planet_flag = ag_volatile_motes_habitat_planet }
				save_event_target_as = ag_fallen_habitat_planet
				prev = { spawn_planet = {
					class = "pc_habitat"
					location = prev
					orbit_location = yes
					orbit_angle_offset = 45
					orbit_distance_offset = 9.899
					size = 17
					has_ring = no
					init_effect = {
						# set_name = "NAME_ag_fallen_habitat"
						set_name = { key = NAME_ag_fallen_habitat variable_string = "\[ag_fallen_habitat_planet.GetName\]" }
						prevprevprevprev = {
							switch = {
								trigger = is_ambient_object_type
								ag_mammalian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "mammalian_01_habitat_phase_03_entity" } } }
								ag_reptilian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "reptilian_01_habitat_phase_03_entity" } } }
								ag_avian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "avian_01_habitat_phase_03_entity" } } }
								ag_molluscoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "molluscoid_01_habitat_phase_03_entity" } } }
								ag_fungoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "fungoid_01_habitat_phase_03_entity" } } }
								ag_arthropoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "arthropoid_01_habitat_phase_03_entity" } } }
								ag_humanoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "humanoid_01_habitat_phase_03_entity" } } }
								ag_plantoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "plantoid_01_habitat_phase_03_entity" } } }
								ag_lithoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "lithoid_01_habitat_phase_03_entity" } } }
								ag_necroid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "necroid_01_habitat_phase_03_entity" } } }
								ag_nemesis_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "nemesis_01_habitat_phase_03_entity" } } }
								ag_aquatic_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "aquatic_01_habitat_phase_03_entity" } } }
								ag_toxoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "toxoid_01_habitat_phase_03_entity" } } }
							}
						}
						clear_blockers = yes
						set_planet_flag = megastructure
						set_planet_flag = habitat
						set_planet_flag = research_habitat
						set_planet_flag = ag_volatile_motes_habitat
						while = { count = 16 add_deposit = ag_fallen_station_damaged_deposit }
					}
				} }
			} }
		}
		else_if = {
			limit = { has_ambient_object_flag = ag_exotic_gases_habitat_planet }
			prev = { random_system_planet = {
				limit = { has_planet_flag = ag_exotic_gases_habitat_planet }
				save_event_target_as = ag_fallen_habitat_planet
				prev = { spawn_planet = {
					class = "pc_habitat"
					location = prev
					orbit_location = yes
					orbit_angle_offset = 45
					orbit_distance_offset = 9.899
					size = 17
					has_ring = no
					init_effect = {
						# set_name = "NAME_ag_fallen_habitat"
						set_name = { key = NAME_ag_fallen_habitat variable_string = "\[ag_fallen_habitat_planet.GetName\]" }
						prevprevprevprev = {
							switch = {
								trigger = is_ambient_object_type
								ag_mammalian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "mammalian_01_habitat_phase_03_entity" } } }
								ag_reptilian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "reptilian_01_habitat_phase_03_entity" } } }
								ag_avian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "avian_01_habitat_phase_03_entity" } } }
								ag_molluscoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "molluscoid_01_habitat_phase_03_entity" } } }
								ag_fungoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "fungoid_01_habitat_phase_03_entity" } } }
								ag_arthropoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "arthropoid_01_habitat_phase_03_entity" } } }
								ag_humanoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "humanoid_01_habitat_phase_03_entity" } } }
								ag_plantoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "plantoid_01_habitat_phase_03_entity" } } }
								ag_lithoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "lithoid_01_habitat_phase_03_entity" } } }
								ag_necroid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "necroid_01_habitat_phase_03_entity" } } }
								ag_nemesis_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "nemesis_01_habitat_phase_03_entity" } } }
								ag_aquatic_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "aquatic_01_habitat_phase_03_entity" } } }
								ag_toxoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "toxoid_01_habitat_phase_03_entity" } } }
							}
						}
						clear_blockers = yes
						set_planet_flag = megastructure
						set_planet_flag = habitat
						set_planet_flag = research_habitat
						set_planet_flag = ag_exotic_gases_habitat
						add_modifier = { modifier = "ag_fallen_habitat_atmospheric_hallucinogen" days = -1 }
						add_deposit = ag_fallen_station_damaged_deposit
						add_deposit = ag_fallen_station_damaged_deposit
						add_deposit = ag_fallen_station_damaged_deposit
						while = { count = 7 random_list = { 50 = { } 50 = { add_deposit = ag_fallen_station_damaged_deposit } } reroll_random = yes }
					}
				} }
			} }
		}
		else_if = {
			limit = { has_ambient_object_flag = ag_rare_crystals_habitat_planet }
			prev = { random_system_planet = {
				limit = { has_planet_flag = ag_rare_crystals_habitat_planet }
				save_event_target_as = ag_fallen_habitat_planet
				prev = { spawn_planet = {
					class = "pc_habitat"
					location = prev
					orbit_location = yes
					orbit_angle_offset = 45
					orbit_distance_offset = 9.899
					size = 17
					has_ring = no
					init_effect = {
						# set_name = "NAME_ag_fallen_habitat"
						set_name = { key = NAME_ag_fallen_habitat variable_string = "\[ag_fallen_habitat_planet.GetName\]" }
						prevprevprevprev = {
							switch = {
								trigger = is_ambient_object_type
								ag_mammalian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "mammalian_01_habitat_phase_03_entity" } } }
								ag_reptilian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "reptilian_01_habitat_phase_03_entity" } } }
								ag_avian_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "avian_01_habitat_phase_03_entity" } } }
								ag_molluscoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "molluscoid_01_habitat_phase_03_entity" } } }
								ag_fungoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "fungoid_01_habitat_phase_03_entity" } } }
								ag_arthropoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "arthropoid_01_habitat_phase_03_entity" } } }
								ag_humanoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "humanoid_01_habitat_phase_03_entity" } } }
								ag_plantoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "plantoid_01_habitat_phase_03_entity" } } }
								ag_lithoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "lithoid_01_habitat_phase_03_entity" } } }
								ag_necroid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "necroid_01_habitat_phase_03_entity" } } }
								ag_nemesis_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "nemesis_01_habitat_phase_03_entity" } } }
								ag_aquatic_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "aquatic_01_habitat_phase_03_entity" } } }
								ag_toxoid_01_fallen_habitat_object = { prev = { set_planet_entity = { entity = "toxoid_01_habitat_phase_03_entity" } } }
							}
						}
						clear_blockers = yes
						set_planet_flag = megastructure
						set_planet_flag = habitat
						set_planet_flag = research_habitat
						set_planet_flag = ag_rare_crystals_habitat
						add_deposit = ag_fallen_station_crystalized_deposit
						add_deposit = ag_fallen_station_damaged_deposit
						add_deposit = ag_fallen_station_damaged_deposit
						while = { count = 4 random_list = { 50 = { } 50 = { add_deposit = ag_fallen_station_damaged_deposit } } reroll_random = yes }
					}
				} }
			} }
		}
		destroy_ambient_object = this
	}
}

ag_lost_ancient_ship_diplo_window_open_effect = {
	optimize_memory
	set_country_flag = ag_special_leader_diplomacy_engaged
	from = { export_trigger_value_to_variable = {
		trigger = their_opinion
		parameters = { who = root }
		variable = ag_special_leader_attitude
		rounded = no
	} }
	set_variable = { which = ag_special_leader_attitude value = from.ag_special_leader_attitude }
	from = { clear_variable = ag_special_leader_attitude }
	if = { limit = { exists = event_target:ag_special_leader_diplo_target } clear_global_event_target = ag_special_leader_diplo_target }
	if = { limit = { exists = event_target:ag_starlight_2_ship } event_target:ag_starlight_2_ship = { save_global_event_target_as = ag_special_leader_diplo_target } }
}
ag_lost_ancient_ship_diplo_window_close_effect = {
	optimize_memory
	remove_country_flag = ag_special_leader_diplomacy_engaged
	clear_variable = ag_special_leader_attitude
	clear_global_event_target = ag_special_leader_diplo_target
}
