generate_start_pops = {
	optimize_memory
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_syncretic_evolution
					has_origin = origin_necrophage
					has_valid_civic = civic_machine_servitor
					has_valid_civic = civic_machine_assimilator
					is_bugged_evolutionary_architects = yes #Bug Branch
					is_bugged_slave_race = yes #Bug Branch
				}
			}
		}

		if = { limit = { last_created_species = { is_species_class = MACHINE } }
			modify_species = {
				species = last_created_species
				add_trait = trait_machine_unit
				add_traits_at_start_of_list = yes
			}
			last_created_species = { save_event_target_as = last_created_species }
		}

		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_syncretic_evolution
						has_origin = origin_necrophage
                        is_bugged_evolutionary_architects = yes #Bug Branch
						is_bugged_slave_race = yes #Bug Branch
					}
				}
			}

			last_created_species = {
				set_species_flag = syncretic_species@root.owner
				if = {
					limit = {
						prev.owner = {
							has_origin = origin_syncretic_evolution
                            is_bugged_evolutionary_architects = yes #Bug Branch
							is_bugged_slave_race = yes #Bug Branch
						}
					}
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
				}
			}
			if = {
				limit = {
					owner = {
						has_origin = origin_necrophage
						OR = {
							has_valid_civic = civic_fanatic_purifiers
							has_valid_civic = civic_hive_devouring_swarm
							is_gestalt = yes
						}
					}
				}
				while = {
					count = 6
					create_pop = {
						species = last_created_species
						ethos = random
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						has_origin = origin_necrophage
						is_gestalt = yes
					}
				}
				while = {
					count = 9
					create_pop = {
						species = last_created_species
						ethos = random
					}
				}
			}
			else = {
				while = {
					count = 12
					create_pop = {
						species = last_created_species
						ethos = random
					}
				}
			}
		}

		if = {
			limit = {
				owner = { has_valid_civic = civic_machine_servitor }
			}
			last_created_species = {
				if = {
					limit = {
						ROOT = { is_planet_class = pc_shattered_ring_habitable }
					}
					modify_species = {
						species = this
						ideal_planet_class = home_planet
					}
				}
				set_citizenship_type = {
					country = root.owner
					type = citizenship_limited
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_organic_trophy
				}
			}
			while = {
				count = 5
				create_pop = {
					species = last_created_species
					ethos = random
				}
				last_created_pop = {
					clear_ethos = yes
				}
			}
		}

		if = {
			limit = {
				owner = { has_valid_civic = civic_machine_assimilator }
			}
			last_created_species = {
				if = {
					limit = {
						ROOT = { is_planet_class = pc_shattered_ring_habitable }
					}
					modify_species = {
						species = this
						ideal_planet_class = home_planet
					}
				}
				set_citizenship_type = {
					country = root.owner
					type = citizenship_full_machine
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_hive_mind
				}
			}
			while = {
				count = 10
				create_pop = {
					species = last_created_species
					ethos = random
				}
				last_created_pop = {
					clear_ethos = yes
				}
			}
			owner = {
				country_event = {
					id = syndaw.1
					days = 1
				}
			}
		}
	}

	if = {
		limit = {
			owner = {
				OR = {
	 				has_origin = origin_mechanists
	 				is_bugged_industrial_mechanization = yes #Bug Branch
	 			}
			}
		}
		owner = {
			create_built_robot_species = yes
		}
		while = {
			count = 8
			create_pop = {
				species = last_created_species
			}
		}
		every_owned_pop = {
			limit = {
				has_job = miner
				is_robotic_species = yes
			}
			modify_species = {
				species = this
				add_trait = trait_robot_power_drills
				add_trait = trait_robot_bulky
				add_trait = trait_robot_high_maintenance
				add_traits_at_start_of_list = yes
			}
		}
		every_owned_pop = {
			limit = {
				has_job = farmer
				is_robotic_species = yes
			}
			modify_species = {
				species = this
				add_trait = trait_robot_harvesters
				add_trait = trait_robot_bulky
				add_trait = trait_robot_high_maintenance
				add_traits_at_start_of_list = yes
			}
		}
		every_owned_pop = {
			limit = {
				has_job = technician
				is_robotic_species = yes
			}
			modify_species = {
				species = this
				add_trait = trait_robot_superconductive
				add_trait = trait_robot_bulky
				add_trait = trait_robot_high_maintenance
				add_traits_at_start_of_list = yes
			}
		}

		add_building = building_robot_assembly_plant
		add_district_and_planet_size_if_needed_effect = {
			district = district_generator
		}
		while = {
			limit = { num_pops < 27 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = { #Bug Branch - Entire IF
		limit = {
			owner = {
				is_bugged_machine_cult = yes
			}
		}
		owner = {
			create_built_robot_species = yes
		}
		while = {
			count = 4
			create_pop = {
				species = last_created_species
			}
		}
		every_owned_pop = {
			limit = {
				has_job = miner
				is_robotic_species = yes
			}
			modify_species = {
				species = this
				add_trait = trait_robot_power_drills
				add_trait = trait_robot_bulky
				add_trait = trait_robot_high_maintenance
				add_traits_at_start_of_list = yes
			}
		}
		every_owned_pop = {
			limit = {
				has_job = farmer
				is_robotic_species = yes
			}
			modify_species = {
				species = this
				add_trait = trait_robot_harvesters
				add_trait = trait_robot_bulky
				add_trait = trait_robot_high_maintenance
				add_traits_at_start_of_list = yes
			}
		}
		every_owned_pop = {
			limit = {
				has_job = technician
				is_robotic_species = yes
			}
			modify_species = {
				species = this
				add_trait = trait_robot_superconductive
				add_trait = trait_robot_bulky
				add_trait = trait_robot_high_maintenance
				add_traits_at_start_of_list = yes
			}
		}

		add_district_and_planet_size_if_needed_effect = {
			district = district_generator
		}
		while = {
			limit = { num_pops < 27 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_necrophage
				NOR = { #purges them instead
					has_civic = civic_fanatic_purifiers
					has_civic = civic_hive_devouring_swarm
				}
			}
		}
		if = {
			limit = {
				owner = { has_valid_civic = civic_agrarian_idyll } # Needs an extra building slot
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_city
			}
		}

		add_building = building_necrophage_elevation_chamber
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_necrophage
				has_valid_civic = civic_hive_devouring_swarm #purges them instead
				is_lithoid_empire = no
			}
		}
		add_building = building_spawning_pool
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_necrophage
				has_valid_civic = civic_hive_devouring_swarm
				is_lithoid_empire = yes
			}
		}
		add_district_and_planet_size_if_needed_effect = { district = district_mining }
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_clone_army
			}
		}
		add_building = building_clone_army_clone_vat
		add_building = building_clone_army_clone_vat
		planet_event = { id = clones.10 days = 1095 random = 730 }
	}
	if = {
		limit = {
			owner = {
				is_hive_empire = yes
			}
		}
		while = {
			limit = { num_pops < 33 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		while = {
			limit = { num_pops < 33 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_machine_empire = yes } }
		while = {
			limit = { num_pops < 29 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_megacorp = yes
				has_reduced_pop_origin = no
			}
		}
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_broken_shackles }
			num_pops < 6
		}

		while = {
			limit = { num_pops < 6 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_regular_empire = yes
				has_reduced_pop_origin = no
			}
		}
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_payback }
			num_pops < 18
		}
		while = {
			limit = { num_pops < 18 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_fear_of_the_dark }
		}
		while = {
			count = 20
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { #homicidal necrophages lose 1/4 of their necrophytes to fleeing
			owner = {
				has_origin = origin_necrophage
				is_homicidal = yes
			}
		}
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
		}
		while = {
			count = 4
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_eager_explorer_empire = yes
			}
		}
		while = {
			count = 10
			random_owned_pop = {
				limit = {
					is_same_species = root.owner.species
				}
				kill_pop = yes
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_civic = civic_permanent_employment
			}
		}
		while = {
			count = 4
			random_owned_pop = {
				limit = {
					OR = {
						has_job = clerk
						has_job = technician
						has_job = miner
						has_job = farmer
					}
					is_robotic_species = no
				}
				modify_species = {
					species = this
					add_trait = trait_zombie
					add_traits_at_start_of_list = yes
				}
				if = {
					limit = {
						has_trait = trait_syncretic_proles
					}
					modify_species = {
						species = this
						remove_trait = trait_syncretic_proles
					}
				}
			}
		}
	}
}

void_dweller_home_planet_setup = {
	optimize_memory
	owner = {
		give_starting_resources_effect = yes
		save_event_target_as = void_dweller_owner
		give_technology = {
			tech = tech_habitat_1
			message = no
		}
		add_research_option = tech_habitat_2

		if = {
			limit = {
				OR = {
					is_lithoid_empire = no
					is_catalytic_empire = yes
				}
			}
			give_technology = {
				tech = tech_eco_simulation
				message = no
			}
			give_technology = {
				tech = tech_hydroponics
				message = no
			}
		}
		else = {
			give_technology = {
				tech = tech_powered_exoskeletons
				message = no
			}
			give_technology = {
				tech = tech_space_mining_1
				message = no
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_eager_explorer_empire = no
			}
		}
		while = {
			count = 10
			create_pop = {
				species = owner_main_species
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				is_bugged_machine_cult = yes
			}
		}
		owner = { create_built_robot_species = yes }
		while = {
			count = 4
			create_pop = {
				species = last_created_species
			}
		}
		while = {
			count = 6
			create_pop = {
				species = owner_main_species
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				is_bugged_slave_race = yes
			}
		}
		while = {
			count = 4
			create_pop = {
				species = last_created_species
			}
		}
		last_created_species = {
			set_species_flag = syncretic_species@root.owner
			if = {
				limit = {
					prev.owner = {
						is_bugged_slave_race = yes
					}
				}
				set_citizenship_type = {
					country = root.owner
					type = citizenship_slavery
				}
			}
		}
		while = {
			count = 6
			create_pop = {
				species = owner_main_species
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				is_bugged_evolutionary_architects = yes
			}
		}
		while = {
			count = 4
			create_pop = {
				species = last_created_species
			}
		}
		while = {
			count = 6
			create_pop = {
				species = owner_main_species
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				# 	is_bugged_machine_cult = yes
				is_bugged_industrial_mechanization = yes

			}
		}
		owner = { create_built_robot_species = yes }
		while = {
			count = 4
			create_pop = {
				species = last_created_species
			}
		}
		add_building = building_robot_assembly_plant
		while = {
			count = 5
			create_pop = {
				species = owner_main_species
			}
		}
	}
	else = {
		while = {
			count = 6
			create_pop = {
				species = owner_main_species
			}
		}
	}
    
	set_planet_entity = {
		entity = "habitat_phase_02_entity"
		graphical_culture = event_target:void_dweller_owner
	}
	set_planet_size = 6
	set_planet_flag = advanced_habitat
	add_district_and_planet_size_if_needed_effect = {
		district = district_hab_housing
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_hab_industrial
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_hab_industrial
	}

	add_building = building_hab_major_capital

	# 2 jobs
	if = {
		limit = { owner = { is_spiritualist = no } }
		add_building = building_bureaucratic_1
	}
	# 2 jobs
	if = {
		limit = {
			owner = {
				is_spiritualist = yes
				OR = {
					has_valid_civic = civic_death_cult
					has_valid_civic = civic_death_cult_corporate
				}
			}
		}
		add_building = building_sacrificial_temple_1
	}
	# 2 jobs
	if = {
		limit = { 
			owner = { 
				is_spiritualist = yes
				NOR = {
					is_bugged_cult = yes #Bug Beanch
					has_valid_civic = civic_death_cult
					has_valid_civic = civic_death_cult_corporate
				}
			} 
		}
		add_building = building_temple
	}
	#Physics Cults - Bug Branch
	#Gravity Is Crucial
	if = {
		limit = {
			owner = {
				is_spiritualist = yes
				is_bugged_gravity_cult = yes
			}
		}
		add_building = building_bugged_gravity_monastery
	}
	#Luminosity Cult
	if = {
		limit = {
			owner = {
				is_spiritualist = yes
				is_bugged_luminosity_cult = yes
			}
		}
		add_building = building_bugged_light_temple_1
	}
	#Society Cults - Bug Branch
	#Life Cult
	if = {
		limit = {
			owner = {
				is_spiritualist = yes
				is_bugged_life_cult = yes
			}
		}
		add_building = building_bugged_life_monastery
	}
	#Engineering Cults - Bug Branch
	#Machine Cult
	if = {
		limit = {
			owner = {
				is_spiritualist = yes
				is_bugged_machine_cult = yes
			}
		}
		add_building = building_bugged_mecha_monastery
	}
	#War Cult
	if = {
		limit = {
			owner = {
				is_spiritualist = yes
				is_bugged_war_cult = yes
			}
		}
		add_building = building_bugged_war_temple_1
	}
	if = {
		limit = { 
			owner = {
				has_valid_civic = civic_permanent_employment
			}
			free_building_slots > 0
		}
		add_building = building_posthumous_employment_center
	}
	else = {
		add_building = building_holo_theatres
	}
	if = {
		limit = {
			owner = {
				is_eager_explorer_empire = no
			}
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_reanimated_armies
				}
			}
			add_building = building_dread_encampment
	
			solar_system = { #Necromancers do not give engineering. So make sure there's some readily-accessible engineering
				while = {
					count = 2
					random_system_planet = {
						limit = {
							has_deposit_for = shipclass_research_station
							NOT = { has_deposit = d_engineering_6 }
						}
						clear_deposits = yes
						add_deposit = d_engineering_6
					}
				}
			}
		}
		else = {
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_science
			}
		}
	}

	add_deposit = d_arcane_replicator

	solar_system = {
		random_system_planet = {
			limit = { has_planet_flag = void_dweller_habitat_2 }
			set_owner = event_target:void_dweller_owner
			if = {
				limit = {
					owner = {
						is_eager_explorer_empire = no
					}
				}
				while = {
					count = 9
					create_pop = {
						species = owner_main_species
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						# 	is_bugged_machine_cult = yes
						is_bugged_industrial_mechanization = yes

					}
				}
				owner = { create_built_robot_species = yes }
				while = {
					count = 4
					create_pop = {
						species = last_created_species
					}
				}
				add_building = building_robot_assembly_plant
				while = {
					count = 5
					create_pop = {
						species = owner_main_species
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						is_bugged_slave_race = yes
					}
				}
				while = {
					count = 3
					create_pop = {
						species = last_created_species
					}
				}
				last_created_species = {
					set_species_flag = syncretic_species@root.owner
					if = {
						limit = {
							prev.owner = {
								is_bugged_slave_race = yes
							}
						}
						set_citizenship_type = {
							country = root.owner
							type = citizenship_slavery
						}
					}
				}
				while = {
					count = 6
					create_pop = {
						species = owner_main_species
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						is_bugged_evolutionary_architects = yes
					}
				}
				while = {
					count = 3
					create_pop = {
						species = last_created_species
					}
				}
				while = {
					count = 6
					create_pop = {
						species = owner_main_species
					}
				}
			}
			else = {
				while = {
					count = 6
					create_pop = {
						species = owner_main_species
					}
				}
			}
			set_planet_entity = {
				entity = "habitat_phase_01_entity"
				graphical_culture = event_target:void_dweller_owner
			}
			set_planet_size = 4
			set_planet_flag = mining_habitat
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_housing
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_mining
			}

			if = {
				limit = {
					owner = {
						OR = {
							is_lithoid_empire = no
							is_catalytic_empire = yes
						}
					}
				}
				add_building = building_hydroponics_farm
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_commercial
				}
			}
			else = {
				add_building = building_commercial_zone
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_mining
				}
			}
		}

		random_system_planet = {
			limit = { has_planet_flag = void_dweller_habitat_3 }
			set_owner = event_target:void_dweller_owner
			if = {
				limit = {
					owner = {
						is_eager_explorer_empire = no
					}
				}
				while = {
					count = 9
					create_pop = {
						species = owner_main_species
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						is_bugged_slave_race = yes
					}
				}
				while = {
					count = 3
					create_pop = {
						species = last_created_species
					}
				}
				last_created_species = {
					set_species_flag = syncretic_species@root.owner
					if = {
						limit = {
							prev.owner = {
								is_bugged_slave_race = yes
							}
						}
						set_citizenship_type = {
							country = root.owner
							type = citizenship_slavery
						}
					}
				}
				while = {
					count = 6
					create_pop = {
						species = owner_main_species
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						is_bugged_evolutionary_architects = yes
					}
				}
				while = {
					count = 3
					create_pop = {
						species = last_created_species
					}
				}
				while = {
					count = 6
					create_pop = {
						species = owner_main_species
					}
				}
			}
			else = {
				while = {
					count = 6
					create_pop = {
						species = owner_main_species
					}
				}
			}
			set_planet_entity = {
				entity = "habitat_phase_01_entity"
				graphical_culture = event_target:void_dweller_owner
			}
			set_planet_size = 4
			set_planet_flag = energy_habitat
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_housing
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_energy
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_commercial
			}

			if = {
				limit = {
					owner = {
						is_lithoid_empire = no
					}
				}
				add_building = building_hydroponics_farm
			}
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
						is_spiritualist = no
					}
				}
				add_building = building_bureaucratic_1
			}
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
						is_spiritualist = yes
						NOT = { has_valid_civic = civic_death_cult }
					}
				}
				add_building = building_temple
			}
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
						is_spiritualist = yes
						OR = {
							has_valid_civic = civic_death_cult
							has_valid_civic = civic_death_cult_corporate
						}
					}
				}
				add_building = building_sacrificial_temple_1
			}
			if = {
				limit = {
					owner = {
						has_valid_civic = civic_permanent_employment
					}
				}
				while = {
					count = 4
					random_owned_pop = {
						limit = {
							OR = {
								has_job = clerk
								has_job = technician
								has_job = miner
								has_job = farmer
							}
							is_robotic_species = no
						}
						modify_species = {
							species = this
							add_trait = trait_zombie
							add_traits_at_start_of_list = yes
						}
						if = {
							limit = {
								has_trait = trait_syncretic_proles
							}
							modify_species = {
								species = this
								remove_trait = trait_syncretic_proles
							}
						}
					}
				}
			}
		}
		every_system_planet = {
			limit = { has_planet_flag = mining_planet }
			create_mining_station = { owner = event_target:void_dweller_owner }
		}
	}
}

central_crystal_country_spawn_effect = {
	create_species = {
		name = "NAME_Central_Crystal_Species"
		plural = "NAME_Central_Crystal_Species"
		class = PRE_ART
		portrait = art20
		namelist = "ART4"
		traits = {
			trait = trait_pc_habitat_preference
			trait = trait_void_dweller_1
			trait = trait_intelligent
			trait = trait_docile
		}
		homeworld = this

		effect = {
			save_global_event_target_as = crystalline_empire_species
		}
	}

	create_country = {
		name = "NAME_Central_Crystal_Country"
		type = enclave
		authority = auth_imperial
		civics = {
			civic = civic_imperial_cult
			civic = civic_bugged_spiritual_seekers
			civic = civic_bugged_ornamentarian
		}
		species = last_created_species
		ethos = {
			ethic = "ethic_authoritarian"
			ethic = "ethic_fanatic_pacifist"
			ethic = "ethic_fanatic_spiritualist"
		}
		flag = {
			icon = {
				file = "flag_spherical_5.dds"
				category = spherical
			}
			background = {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors ={
				"blue"
				"blue"
				"null"
				"null"
			}
		}

		ignore_initial_colony_error = yes

		effect = {
			create_leader = {
				class = random_ruler
				species = this
				name = random
				skill = 5
				immortal = yes
			}
			set_leader = last_created_leader
		}
	}
	last_created_country = {
		save_global_event_target_as = central_crystal_empire
		set_country_flag = central_crystal_country

		set_graphical_culture = mammalian_01

		set_male_ruler_title = "Commander"
		set_female_ruler_title = "Commander"

		create_fleet = {
			name = "NAME_Central_Crystal_Enclave"
			settings = { spawn_debris = no }
			effect = {
				set_owner = prev
				create_ship = {
					name = random
					design = "NAME_Central_Crystal_Station"
					graphical_culture = prev
				}
				set_location = {
					target = prevprev
					angle = random
					distance = 100
				}
				save_event_target_as = CustomCapital
				prev = {
					set_custom_capital_location = event_target:CustomCapital
				}
			}
		}
	}
	solar_system = {
		save_global_event_target_as = the_outer_gate
	}
}