@eac_pdf_build_days_1 = 60

eac_calculate_max_fleet_size = {
    set_variable = { which = Planetary_Defense_Force_Max value = @pdf_starting_fleet_size }
    if = { limit = { num_pops > 29 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 34 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 39 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 44 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 49 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 54 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 59 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 64 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 69 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 74 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 79 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 84 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 89 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 94 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 99 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 104 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 109 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 114 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 119 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 124 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 129 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 134 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 139 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 144 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 149 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 154 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 159 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 164 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 169 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 174 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 179 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 184 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 189 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 194 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
    if = { limit = { num_pops > 199 } change_variable = { which = Planetary_Defense_Force_Max value = 1 } }
}

# This = Planet
eac_calc_ship_cost_and_build_speed = {
    owner = {
        if = { limit = { has_technology = eac_tech_patrol_craft_1 }
            set_variable = { which = Planetary_Defense_Ship_Cost value = @pdf_ship_alloy_cost_1 }
            set_variable = { which = Planetary_Defense_Ship_Build_Speed value = @pdf_construction_speed_1 }
        }
        # if = { limit = { has_technology = eac_tech_patrol_craft_hull_1 }
        #     set_variable = { which = Planetary_Defense_Ship_Cost value = @pdf_ship_alloy_cost_2 }
        # }
        # if = { limit = { has_technology = eac_tech_patrol_craft_hull_2 }
        #     set_variable = { which = Planetary_Defense_Ship_Cost value = @pdf_ship_alloy_cost_3 }
        # }
        if = { limit = { has_technology = eac_tech_patrol_craft_2 }
            set_variable = { which = Planetary_Defense_Ship_Cost value = @pdf_ship_alloy_cost_4 }
        }
        if = { limit = { has_technology = eac_tech_patrol_craft_hull_3 }
            set_variable = { which = Planetary_Defense_Ship_Cost value = @pdf_ship_alloy_cost_6 }
        }
        # if = { limit = { has_technology = eac_tech_patrol_craft_hull_4 }
        #     set_variable = { which = Planetary_Defense_Ship_Cost value = @pdf_ship_alloy_cost_6 }
        # }
        if = { limit = { has_technology = eac_tech_patrol_craft_build_speed_1 }
            set_variable = { which = Planetary_Defense_Ship_Build_Speed value = @pdf_construction_speed_2 }
        }
        # if = { limit = { has_technology = eac_tech_patrol_craft_build_speed_2 }
        #     set_variable = { which = Planetary_Defense_Ship_Build_Speed value = @pdf_construction_speed_3 }
        # }
    }
}

# This = Planet
eac_calculate_planetary_defense_force_values = {
    eac_calculate_max_fleet_size = yes
    eac_calc_ship_cost_and_build_speed = yes
    set_variable = { which = Planetary_Defense_Ship_Cost value = owner }
    set_variable = { which = PDF_Maximum_Storage value = Planetary_Defense_Force_Max }
    multiply_variable = { which = PDF_Maximum_Storage value = Planetary_Defense_Ship_Cost }
    set_variable = { which = Alloy_Monthly_Gain value = 0 }
    set_variable = { which = Total_Fleet_Ships value = Planetary_Defense_Force_Size }
    set_variable = { which = Deployed_Ship_Count value = 0 }

    if = { limit = { has_planet_flag = PDF_Force_Deployed }
        # solar_system = {
            # random_fleet_in_system = {
            #     limit = { has_fleet_flag = PDF_Force_Home@root }
            owner = { 
                every_owned_ship = {
                    limit = {
                        exists = fleet
                        fleet = { has_fleet_flag = PDF_Force_Home@root }
                    } 
                    root = { 
                        change_variable = { which = Total_Fleet_Ships value = 1 } 
                        change_variable = { which = Deployed_Ship_Count value = 1 } 
                    }
                }
            }
            # }
        # }
    }
    
    if = {
        limit = {
            check_variable = { which = Deployed_Ship_Count value = 0 }
        }
        remove_planet_flag = PDF_Force_Deployed
    }
    
    if = { # Cannot transdfer resources with the empire during bombardment
        limit = { has_orbital_bombardment = no }

        every_owned_pop = {
            limit = {
                OR = {
                    has_job = eac_pdf_shipbuilder
                    has_job = eac_pdf_drone_shipbuilder
                }
            }
            # job uses 5 alloy - 4 go to the production bank and 1 is for upkeep
            if = { 
                limit = { 
                    planet = { 
                        check_variable = { which = Alloy_Storage value < PDF_Maximum_Storage } 
                    }
                }
                planet = { 
                    change_variable = { which = Alloy_Storage value = 2 } 
                    change_variable = { which = Alloy_Monthly_Gain value = 2 }
                }   
            }
            else = { # return to the empire if over storage limit
                owner = {
                    add_resource = {
                        alloys = 2
                    }
                }
            }
        }
        
    }
    if = { # can build ships while planet devastation is less than 100%
        limit = { 
            OR = {
                has_orbital_bombardment = no
                AND = {
                    has_orbital_bombardment = yes 
                    planet_devastation < 1
                }
            }
        }

        if = { 
            limit = { 
                check_variable = { which = Total_Fleet_Ships value < Planetary_Defense_Force_Max }
                check_variable = { which = Alloy_Storage value >= Planetary_Defense_Ship_Cost } 
                NOT = { has_planet_flag = EAC_PDF_Shipyard_Active }
            }
            # build a ship
            subtract_variable = { which = Alloy_Storage value = Planetary_Defense_Ship_Cost }
            if = { limit = { owner = { has_technology = eac_tech_patrol_craft_build_speed_2 } }
                set_timed_planet_flag = { flag = EAC_PDF_Shipyard_Active days = @pdf_construction_speed_3 }
                planet_event = { id = eac_pdf_events.20 days = @pdf_construction_speed_3 }
            }
            else_if = { limit = { owner = { has_technology = eac_tech_patrol_craft_build_speed_1 } }
                set_timed_planet_flag = { flag = EAC_PDF_Shipyard_Active days = @pdf_construction_speed_2 }
                planet_event = { id = eac_pdf_events.20 days = @pdf_construction_speed_2 }
            }
            else = {
                set_timed_planet_flag = { flag = EAC_PDF_Shipyard_Active days = @pdf_construction_speed_1 }
                planet_event = { id = eac_pdf_events.20 days = @pdf_construction_speed_1 }
            }
        }
    }

    # calculations
    set_variable = { which = PDF_Reinforce_Cost value = Planetary_Defense_Force_Max }
    subtract_variable = { which = PDF_Reinforce_Cost value = Total_Fleet_Ships }
    multiply_variable = { which = PDF_Reinforce_Cost value = Planetary_Defense_Ship_Cost }

    set_variable = { which = PDF_Reinforce_Cost_Needed value = PDF_Reinforce_Cost }
    subtract_variable = { which = PDF_Reinforce_Cost_Needed value = Alloy_Storage }

    set_variable = { which = PDF_Reinforce_Ships value = Planetary_Defense_Force_Max }
    subtract_variable = { which = PDF_Reinforce_Ships value = Total_Fleet_Ships }

    if = { limit = { has_planet_flag = EAC_PDF_Shipyard_Active }
        set_variable = { which = PDF_Shipyard_Status value = 1 } # Active
    }
    else = {
        set_variable = { which = PDF_Shipyard_Status value = 2 } # Idle
    }
}

# This = Planet
eac_transfer_out_alloy_storage = {
    while = {
        limit = { 
            check_variable = { which = Alloy_Storage value > 0 } 
        }
        if = { 
            limit = { 
                check_variable = { which = Alloy_Storage value >= 1000 } 
            }
            change_variable = { which = Alloy_Storage value = -1000 }
            owner = { add_resource = { alloys = 1000 } }
        }
        else_if = { 
            limit = { 
                check_variable = { which = Alloy_Storage value >= 500 } 
            }
            change_variable = { which = Alloy_Storage value = -500 }
            owner = { add_resource = { alloys = 500 } }
        }
        else_if = { 
            limit = { 
                check_variable = { which = Alloy_Storage value >= 100 } 
            }
            change_variable = { which = Alloy_Storage value = -100 }
            owner = { add_resource = { alloys = 100 } }
        }
        else_if = {
             limit = { 
                 check_variable = { which = Alloy_Storage value >= 50 } 
            }
            change_variable = { which = Alloy_Storage value = -50 }
            owner = { add_resource = { alloys = 50 } }
        }
        else_if = { 
            limit = { 
                check_variable = { which = Alloy_Storage value >= 10 } 
            }
            change_variable = { which = Alloy_Storage value = -10 }
            owner = { add_resource = { alloys = 10 } }
        }
        else_if = { 
            limit = { 
                check_variable = { which = Alloy_Storage value >= 1 } 
            }
            change_variable = { which = Alloy_Storage value = -1 }
            owner = { add_resource = { alloys = 1 } }
        }
    }
}

# This = Planet
eac_transfer_in_fleet_reinforce_alloy_storage = {
    set_variable = { which = PDF_Reinforce_Cost_Needed value = PDF_Reinforce_Cost }
    subtract_variable = { which = PDF_Reinforce_Cost_Needed value = Alloy_Storage }

    while = {
        limit = { check_variable = { which = PDF_Reinforce_Cost_Needed value > 0 } }

        if = { limit = { check_variable = { which = PDF_Reinforce_Cost_Needed value >= 1000 } }
            change_variable = { which = Alloy_Storage value = 1000 }
            change_variable = { which = PDF_Reinforce_Cost_Needed value = -1000 }
            owner = { add_resource = { alloys = -1000 } }
        }
        else_if = { limit = { check_variable = { which = PDF_Reinforce_Cost_Needed value >= 500 } }
            change_variable = { which = Alloy_Storage value = 500 }
            change_variable = { which = PDF_Reinforce_Cost_Needed value = -500 }
            owner = { add_resource = { alloys = -500 } }
        }
        else_if = { limit = { check_variable = { which = PDF_Reinforce_Cost_Needed value >= 100 } }
            change_variable = { which = Alloy_Storage value = 100 }
            change_variable = { which = PDF_Reinforce_Cost_Needed value = -100 }
            owner = { add_resource = { alloys = -100 } }
        }
        else_if = { limit = { check_variable = { which = PDF_Reinforce_Cost_Needed value >= 50 } }
            change_variable = { which = Alloy_Storage value = 50 }
            change_variable = { which = PDF_Reinforce_Cost_Needed value = -50 }
            owner = { add_resource = { alloys = -50 } }
        }
        else_if = { limit = { check_variable = { which = PDF_Reinforce_Cost_Needed value >= 10 } }
            change_variable = { which = Alloy_Storage value = 10 }
            change_variable = { which = PDF_Reinforce_Cost_Needed value = -10 }
            owner = { add_resource = { alloys = -10 } }
        }
        else_if = { limit = { check_variable = { which = PDF_Reinforce_Cost_Needed value >= 1 } }
            change_variable = { which = Alloy_Storage value = 1 }
            change_variable = { which = PDF_Reinforce_Cost_Needed value = -1 }
            owner = { add_resource = { alloys = -1 } }
        }
    }
}

# This = Planet
eac_deploy_pdf = {
    owner = {
        create_fleet = {
            settings = {
                can_change_composition = no
            }
            effect = {
                set_variable = { which = Planetary_Defense_Force_Size value = PREVPREV }
                set_owner = prev
                while = {
                    count = Planetary_Defense_Force_Size
                    if = { limit = { NOT = { owner = { has_technology = eac_tech_patrol_craft_2 } } }
                        create_ship = {
                            name = random
                            random_existing_design = eac_pdf_patrol_craft_1
                            graphical_culture = owner
                        }
                    }
                    else = {
                        create_ship = {
                            name = random
                            random_existing_design = eac_pdf_patrol_craft_2
                            graphical_culture = owner
                        }                            
                    }
                }
                if = { limit = { check_variable = { which = Planetary_Defense_Force_Size value = 1 } }
                    last_created_ship = {
                        set_disable_at_health = 0
                    }
                }
                set_location = {
                    target = prevprev
                    distance = 0
                    angle = random
                }
            }
        }
        last_created_fleet = {
            set_fleet_flag = PDF_Force
            set_fleet_flag = PDF_Force_Home@PREVPREV
        }
    }
    set_variable = { which = Deployed_Ship_Count value = Planetary_Defense_Force_Size }
    set_variable = { which = Planetary_Defense_Force_Size value = 0 } # Deployed
    set_planet_flag = PDF_Force_Deployed

    if = { limit = { check_variable = { which = Planetary_Fleet_Stance value = 2 } }
        last_created_fleet = {
            set_fleet_flag = PDF_Force_Planet
            set_fleet_stance = passive
        }
    }
    else = { 
        last_created_fleet = {
            set_fleet_flag = PDF_Force_System
            set_fleet_stance = aggressive
        }         
    }
}

# This = Planet
eac_deploy_pdf_planet_stance = {
    owner = {
        create_fleet = {
            effect = {
                set_variable = { which = Planetary_Defense_Force_Size value = PREVPREV }
                set_owner = prev
                while = {
                    count = Planetary_Defense_Force_Size
                    create_ship = {
                        name = random
                        random_existing_design = eac_pdf_patrol_craft_1
                        graphical_culture = owner
                    }
                }
                set_location = {
                    target = prevprev
                    distance = 0
                    angle = random
                }
            }
        }
        last_created_fleet = {
            set_fleet_flag = PDF_Force
            set_fleet_flag = PDF_Force_Home@PREVPREV
            set_fleet_flag = PDF_Force_Planet
            set_fleet_stance = passive
        }
    }
    set_variable = { which = Planetary_Defense_Force_Size value = 0 } # Deployed
    set_planet_flag = PDF_Force_Deployed
}

eac_deploy_pdf_system_stance = {
    owner = {
        create_fleet = {
            effect = {
                set_variable = { which = Planetary_Defense_Force_Size value = PREVPREV }
                # log = "PDF Events.80 Create Fleet, Size [This.Planetary_Defense_Force_Size]"
                set_owner = prev
                while = {
                    count = Planetary_Defense_Force_Size
                    # log = "PDF Events.80 Create Ship"
                    create_ship = {
                        name = random
                        random_existing_design = eac_pdf_patrol_craft_1
                        graphical_culture = owner
                    }
                }
                set_location = {
                    target = prevprev
                    distance = 0
                    angle = random
                }
            }
        }
        last_created_fleet = {
            set_fleet_flag = PDF_Force
            set_fleet_flag = PDF_Force_Home@PREVPREV
            set_fleet_flag = PDF_Force_System
            set_fleet_stance = aggressive
        }
    }
    set_variable = { which = Planetary_Defense_Force_Size value = 0 } # Deployed
    set_planet_flag = PDF_Force_Deployed
}

eac_send_notifications = {

}