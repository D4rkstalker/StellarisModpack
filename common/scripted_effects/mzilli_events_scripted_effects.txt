is_mzilli_shadow = {
	is_planet_class = pc_mzilli_shadow
}

apply_frail_fusion_effect = {
	if = {
		limit = {
			OR = {
				is_colonizable = yes
				exists = owner
			}
			NOR = {
				is_artificial = yes
				is_planet_class = pc_city
				is_planet_class = pc_machine
			}
		}
		set_planet_flag = frail_fusion
		if = {
			limit = { NOT = { has_modifier = bleak_planet } }
			add_modifier = { modifier = bleak_planet }
		}
	}
}

setup_multiplanetary_system = {
	every_system_planet = { prevent_anomaly = yes }
	every_system_planet = {
		limit = { is_colonizable = yes }
		if = {
			limit = { NOT = { has_planet_flag = civ_1_planet_1 } }
			if = {
				limit = { planet_size > 23 }
				set_planet_size = 23
			}
			else_if = {
				limit = { planet_size < 9 }
				set_planet_size = 9
			}
			change_pc = last_created_species
			reroll_planet = yes
			if = {
				limit = { has_modifier = lush_planet }
				remove_modifier = lush_planet
			}
			if = {
				limit = { NOT = { has_modifier = bleak_planet } }
				add_modifier = { modifier = bleak_planet }
			}
		}
		if = {
			limit = { has_planet_flag = civ_1_planet_1 }
			create_country = {
				name = random
				authority = random
				civics = {
					civic = civic_increasing_urbanization
					civic = civic_atmospheric_pollution
				}
				species = last_created_species
				ethos = random
				name_list = MAM3
				origin = "origin_default"
				type = primitive
				effect = {
					set_country_flag = multiplanetary_primitives
					set_country_flag = tech_frozen
				}
			}
		}
		else_if = {
			limit = { has_planet_flag = civ_2_planet_3 }
			create_country = {
				name = random
				authority = random
				civics = {
					civic = civic_increasing_urbanization
					civic = civic_atmospheric_pollution
				}
				species = last_created_species
				ethos = random
				name_list = HUM3
				origin = "origin_default"
				type = primitive
				effect = {
					set_country_flag = multiplanetary_primitives
					set_country_flag = tech_frozen
				}
			}
		}
		else = {
			create_country = {
				name = random
				authority = random
				civics = {
					civic = civic_increasing_urbanization
					civic = civic_atmospheric_pollution
				}
				species = last_created_species
				ethos = random
				name_list = REP1
				origin = "origin_default"
				type = primitive
				effect = {
					set_country_flag = multiplanetary_primitives
					set_country_flag = tech_frozen
				}
			}
		}
		set_name = random
		last_created_country = {
			set_name = random
			set_country_flag = early_space_age
			set_pre_ftl_age = early_space_age
		}
		setup_pre_ftl_planet = yes
		if = {
			limit = { NOT = { has_planet_flag = civ_1_planet_1 } }
			last_created_country = {
				random_owned_pop = { kill_pop = yes }
				random_owned_pop = { kill_pop = yes }
				random_owned_pop = { kill_pop = yes }
			}
			if = {
				limit = { has_planet_flag = civ_3_planet_2 }
				last_created_country = {
					save_global_event_target_as = multiplanet_civ_3
					random_owned_pop = { kill_pop = yes }
					random_owned_pop = { kill_pop = yes }
					random_owned_pop = { kill_pop = yes }
				}
			}
			else = { last_created_country = { save_global_event_target_as = multiplanet_civ_2 } }
		}
		else = {
			last_created_country = {
				save_global_event_target_as = multiplanet_civ_1
				owner_species = { save_global_event_target_as = multiplan_species }
			}
			remove_planet_flag = civ_1_planet_1
			orbit = { set_planet_flag = civ_1_planet_1 }
		}
	}
	every_system_planet = {
		limit = {
			OR = {
				has_planet_flag = civ_1_planet_1
				has_planet_flag = civ_1_planet_3
				has_planet_flag = civ_1_planet_4
			}
		}
		event_target:multiplanet_civ_1 = {
			create_leader = {
				class = admiral
				species = last_created_species
				name = random
				skill = 3
			}
			create_fleet = {
				effect = {
					set_fleet_flag = fleet_of_@prevprev
					set_owner = event_target:multiplanet_civ_1
					create_ship = {
						name = random
						design = "NAME_multiplan_battleship"
						graphical_culture = "nemesis_01"
					}
					while = {
						count = 3
						create_ship = {
							name = random
							design = "NAME_multiplan_cruiser"
							graphical_culture = "nemesis_01"
						}
					}
					while = {
						count = 7
						create_ship = {
							name = random
							design = "NAME_multiplan_destroyer"
							graphical_culture = "nemesis_01"
						}
					}
					while = {
						count = 12
						create_ship = {
							name = random
							design = "NAME_multiplan_corvette"
							graphical_culture = "nemesis_01"
						}
					}
					set_location = {
						target = prevprev
						distance = 10
					}
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 350
					assign_leader = last_created_leader
				}
				settings = { garrison = yes }
			}
		}
	}
	every_system_planet = {
		limit = {
			OR = {
				has_planet_flag = civ_2_planet_2
				has_planet_flag = civ_2_planet_3
			}
		}
		event_target:multiplanet_civ_2 = {
			create_leader = {
				class = admiral
				species = last_created_species
				name = random
				skill = 3
			}
			create_fleet = {
				effect = {
					set_fleet_flag = fleet_of_@prevprev
					set_owner = event_target:multiplanet_civ_2
					create_ship = {
						name = random
						design = "NAME_multiplan_battleship"
						graphical_culture = "nemesis_01"
					}
					while = {
						count = 3
						create_ship = {
							name = random
							design = "NAME_multiplan_cruiser"
							graphical_culture = "nemesis_01"
						}
					}
					while = {
						count = 7
						create_ship = {
							name = random
							design = "NAME_multiplan_destroyer"
							graphical_culture = "nemesis_01"
						}
					}
					while = {
						count = 12
						create_ship = {
							name = random
							design = "NAME_multiplan_corvette"
							graphical_culture = "nemesis_01"
						}
					}
					set_location = {
						target = prevprev
						distance = 10
					}
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 350
					assign_leader = last_created_leader
				}
				settings = { garrison = yes }
			}
		}
	}
	every_system_planet = {
		limit = {
			OR = {
				has_planet_flag = civ_3_planet_2
				has_planet_flag = civ_3_planet_3
			}
		}
		event_target:multiplanet_civ_3 = {
			create_leader = {
				class = admiral
				species = last_created_species
				name = random
				skill = 3
			}
			create_fleet = {
				effect = {
					set_fleet_flag = fleet_of_@prevprev
					set_owner = event_target:multiplanet_civ_3
					create_ship = {
						name = random
						design = "NAME_multiplan_battleship"
						graphical_culture = "nemesis_01"
					}
					while = {
						count = 3
						create_ship = {
							name = random
							design = "NAME_multiplan_cruiser"
							graphical_culture = "nemesis_01"
						}
					}
					while = {
						count = 7
						create_ship = {
							name = random
							design = "NAME_multiplan_destroyer"
							graphical_culture = "nemesis_01"
						}
					}
					while = {
						count = 12
						create_ship = {
							name = random
							design = "NAME_multiplan_corvette"
							graphical_culture = "nemesis_01"
						}
					}
					set_location = {
						target = prevprev
						distance = 10
					}
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 350
					assign_leader = last_created_leader
				}
				settings = { garrison = yes }
			}
		}
	}
}

recall_deterrent_fleet = {
	event_target:deterrent_fleet = {
		auto_move_to_planet = {
			target = event_target:fleet_berth
			clear_auto_move_on_arrival = yes
		}
	}
	clear_global_event_target = deterrent_fleet
	clear_global_event_target = fleet_berth
}

infect_nearby_systems = {
	every_system = {
		limit = {
			star = { is_valid_star_for_infection = yes }
			solar_system = {
				distance = {
					source = ROOT.solar_system
					min_distance >= 0
					max_distance <= 30
					type = euclidean
					same_solar_system = no
				}
			}
		}
		star = {
			planet_event = {
				id = mzilli_star_crisis_events.8
				#days = 1800
				#random = 300
				days = 50
				random = 20
			}
		}
		if = {
			limit = { NOT = { has_star_flag = mzilli_soon_to_be_infected_system } }
			set_star_flag = mzilli_soon_to_be_infected_system
		}
	}
}

mzilli_events_supernova_planet_effect = {
	if = {
		limit = {
			OR = {
				is_asteroid = yes
				is_planet_class = pc_habitat
			}
		}
		remove_planet = yes
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_gas_giant
				is_planet_class = pc_ice_giant
				is_planet_class = pc_bespin
			}
		}
		if = {
			limit = { is_planet_class = pc_bespin }
			change_pc = pc_gas_giant
		}
		set_planet_entity = { entity = "gas_giant_y_dwarf_entity" }
	}
	else = {
		if = {
			limit = {
				is_planet_class = pc_ai
				NOT = { has_planet_flag = machine_lair }
			}
			destroy_machine_world = yes
		}
		else_if = {
			limit = {
				is_planet_class = pc_ai
				has_planet_flag = machine_lair
			}
			from.owner = { save_event_target_as = final_machine_world_destroyer }
			stop_crisis_sound = yes
			planet_event = { id = crisis.2046 }
		}
		if = {
			limit = { has_modifier = terraforming_candidate }
			remove_modifier = terraforming_candidate
		}
		if = {
			limit = { has_modifier = toxic_terraforming_candidate }
			remove_modifier = toxic_terraforming_candidate
		}
		if = {
			limit = { has_modifier = frozen_terraforming_candidate }
			remove_modifier = frozen_terraforming_candidate
		}
		reset_planet = yes
		if = {
			limit = {
				OR = {
					AND = {
						exists = orbit
						orbit = { is_same_value = ROOT }
					}
					NOR = {
						exists = orbit
						ROOT = { has_moon = yes }
					}
				}
			}
			change_pc = pc_shattered
			set_deposit = d_minerals_2
			every_moon = {
				change_pc = pc_shattered
				set_deposit = d_minerals_2
				every_moon = {
					change_pc = pc_shattered
					set_deposit = d_minerals_2
				}
			}
		}
		else_if = {
			limit = { NOT = { is_planet_class = pc_shattered } }
			change_pc = pc_molten
		}
	}
}

red_giant_growth_flags = {
	if = {
		limit = { has_planet_flag = red_giant_49x }
		remove_planet_flag = red_giant_49x
		set_planet_flag = red_giant_50x
		red_giant_planet_effects_1 = yes
	}
	else_if = {
		limit = { has_planet_flag = red_giant_48x }
		remove_planet_flag = red_giant_48x
		set_planet_flag = red_giant_49x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_47x }
		remove_planet_flag = red_giant_47x
		set_planet_flag = red_giant_48x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_46x }
		remove_planet_flag = red_giant_46x
		set_planet_flag = red_giant_47x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_45x }
		remove_planet_flag = red_giant_45x
		set_planet_flag = red_giant_46x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_44x }
		remove_planet_flag = red_giant_44x
		set_planet_flag = red_giant_45x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_43x }
		remove_planet_flag = red_giant_43x
		set_planet_flag = red_giant_44x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_42x }
		remove_planet_flag = red_giant_42x
		set_planet_flag = red_giant_43x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_41x }
		remove_planet_flag = red_giant_41x
		set_planet_flag = red_giant_42x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_40x }
		remove_planet_flag = red_giant_40x
		set_planet_flag = red_giant_41x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_39x }
		remove_planet_flag = red_giant_39x
		set_planet_flag = red_giant_40x
		red_giant_planet_effects_1 = yes
		if = {
			limit = { has_moon = yes }
			every_moon = {
				limit = { is_planet_class = pc_city }
				planet_event = { id = mzilli_star_crisis_events.17 }
				change_pc = pc_barren
				set_planet_entity = { entity = "relic_world_entity_01" }
			}
		}
		else = {
			solar_system = {
				every_system_planet = {
					limit = { is_planet_class = pc_city }
					planet_event = { id = mzilli_star_crisis_events.17 }
					change_pc = pc_barren
					set_planet_entity = { entity = "relic_world_entity_01" }
				}
			}
		}
	}
	else_if = {
		limit = { has_planet_flag = red_giant_38x }
		remove_planet_flag = red_giant_38x
		set_planet_flag = red_giant_39x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_37x }
		remove_planet_flag = red_giant_37x
		set_planet_flag = red_giant_38x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_36x }
		remove_planet_flag = red_giant_36x
		set_planet_flag = red_giant_37x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_35x }
		remove_planet_flag = red_giant_35x
		set_planet_flag = red_giant_36x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_34x }
		remove_planet_flag = red_giant_34x
		set_planet_flag = red_giant_35x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_33x }
		remove_planet_flag = red_giant_33x
		set_planet_flag = red_giant_34x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_32x }
		remove_planet_flag = red_giant_32x
		set_planet_flag = red_giant_33x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_31x }
		remove_planet_flag = red_giant_31x
		set_planet_flag = red_giant_32x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_30x }
		remove_planet_flag = red_giant_30x
		set_planet_flag = red_giant_31x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_29x }
		remove_planet_flag = red_giant_29x
		set_planet_flag = red_giant_30x
		red_giant_planet_effects_1 = yes
		if = {
			limit = { has_moon = yes }
			every_moon = {
				limit = {
					OR = {
						is_planet_class = pc_gas_giant
						is_planet_class = pc_ice_giant
						is_planet_class = pc_bespin
					}
					distance = {
						source = ROOT
						min_distance >= 0
						max_distance <= 101
						type = euclidean
						same_solar_system = yes
					}
				}
				if = {
					limit = { is_planet_class = pc_bespin }
					planet_event = { id = mzilli_star_crisis_events.17 }
					change_pc = pc_gas_giant
					every_country = {
						limit = { has_event_chain = mzilli_star_crisis_chain }
						add_event_chain_counter = {
							event_chain = "mzilli_star_crisis_chain"
							counter = "mzilli_dead_infected_planets"
							amount = 1
						}
					}
				}
				set_planet_entity = { entity = "gas_giant_y_dwarf_entity" }
			}
		}
		else = {
			solar_system = {
				every_system_planet = {
					limit = {
						OR = {
							is_planet_class = pc_gas_giant
							is_planet_class = pc_ice_giant
							is_planet_class = pc_bespin
						}
						distance = {
							source = ROOT
							min_distance >= 0
							max_distance <= 101
							type = euclidean
							same_solar_system = yes
						}
					}
					if = {
						limit = { is_planet_class = pc_bespin }
						planet_event = { id = mzilli_star_crisis_events.17 }
						change_pc = pc_gas_giant
						every_country = {
							limit = { has_event_chain = mzilli_star_crisis_chain }
							add_event_chain_counter = {
								event_chain = "mzilli_star_crisis_chain"
								counter = "mzilli_dead_infected_planets"
								amount = 1
							}
						}
					}
					set_planet_entity = { entity = "gas_giant_y_dwarf_entity" }
				}
			}
		}
	}
	else_if = {
		limit = { has_planet_flag = red_giant_28x }
		remove_planet_flag = red_giant_28x
		set_planet_flag = red_giant_29x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_27x }
		remove_planet_flag = red_giant_27x
		set_planet_flag = red_giant_28x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_26x }
		remove_planet_flag = red_giant_26x
		set_planet_flag = red_giant_27x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_25x }
		remove_planet_flag = red_giant_25x
		set_planet_flag = red_giant_26x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_24x }
		remove_planet_flag = red_giant_24x
		set_planet_flag = red_giant_25x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_23x }
		remove_planet_flag = red_giant_23x
		set_planet_flag = red_giant_24x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_22x }
		remove_planet_flag = red_giant_22x
		set_planet_flag = red_giant_23x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_21x }
		remove_planet_flag = red_giant_21x
		set_planet_flag = red_giant_22x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_20x }
		remove_planet_flag = red_giant_20x
		set_planet_flag = red_giant_21x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_19x }
		remove_planet_flag = red_giant_19x
		set_planet_flag = red_giant_20x
		red_giant_planet_effects_1 = yes
		if = {
			limit = { has_moon = yes }
			every_moon = {
				limit = {
					OR = {
						is_planet_class = pc_gas_giant
						is_planet_class = pc_ice_giant
						is_planet_class = pc_bespin
					}
					distance = {
						source = ROOT
						min_distance >= 0
						max_distance <= 81
						type = euclidean
						same_solar_system = yes
					}
				}
				if = {
					limit = { is_planet_class = pc_bespin }
					planet_event = { id = mzilli_star_crisis_events.17 }
					change_pc = pc_gas_giant
					every_country = {
						limit = { has_event_chain = mzilli_star_crisis_chain }
						add_event_chain_counter = {
							event_chain = "mzilli_star_crisis_chain"
							counter = "mzilli_dead_infected_planets"
							amount = 1
						}
					}
				}
				set_planet_entity = { entity = "gas_giant_y_dwarf_entity" }
			}
		}
		else = {
			solar_system = {
				every_system_planet = {
					limit = {
						OR = {
							is_planet_class = pc_gas_giant
							is_planet_class = pc_ice_giant
							is_planet_class = pc_bespin
						}
						distance = {
							source = ROOT
							min_distance >= 0
							max_distance <= 81
							type = euclidean
							same_solar_system = yes
						}
					}
					if = {
						limit = { is_planet_class = pc_bespin }
						planet_event = { id = mzilli_star_crisis_events.17 }
						change_pc = pc_gas_giant
						every_country = {
							limit = { has_event_chain = mzilli_star_crisis_chain }
							add_event_chain_counter = {
								event_chain = "mzilli_star_crisis_chain"
								counter = "mzilli_dead_infected_planets"
								amount = 1
							}
						}
					}
					set_planet_entity = { entity = "gas_giant_y_dwarf_entity" }
				}
			}
		}
	}
	else_if = {
		limit = { has_planet_flag = red_giant_18x }
		remove_planet_flag = red_giant_18x
		set_planet_flag = red_giant_19x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_17x }
		remove_planet_flag = red_giant_17x
		set_planet_flag = red_giant_18x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_16x }
		remove_planet_flag = red_giant_16x
		set_planet_flag = red_giant_17x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_15x }
		remove_planet_flag = red_giant_15x
		set_planet_flag = red_giant_16x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_14x }
		remove_planet_flag = red_giant_14x
		set_planet_flag = red_giant_15x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_13x }
		remove_planet_flag = red_giant_13x
		set_planet_flag = red_giant_14x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_12x }
		remove_planet_flag = red_giant_12x
		set_planet_flag = red_giant_13x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_11x }
		remove_planet_flag = red_giant_11x
		set_planet_flag = red_giant_12x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_10x }
		remove_planet_flag = red_giant_10x
		set_planet_flag = red_giant_11x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_9x }
		remove_planet_flag = red_giant_9x
		set_planet_flag = red_giant_10x
		red_giant_planet_effects_1 = yes
		if = {
			limit = { has_moon = yes }
			every_moon = {
				limit = {
					OR = {
						is_planet_class = pc_gas_giant
						is_planet_class = pc_ice_giant
						is_planet_class = pc_bespin
					}
					distance = {
						source = ROOT
						min_distance >= 0
						max_distance <= 61
						type = euclidean
						same_solar_system = yes
					}
				}
				if = {
					limit = { is_planet_class = pc_bespin }
					planet_event = { id = mzilli_star_crisis_events.17 }
					change_pc = pc_gas_giant
					every_country = {
						limit = { has_event_chain = mzilli_star_crisis_chain }
						add_event_chain_counter = {
							event_chain = "mzilli_star_crisis_chain"
							counter = "mzilli_dead_infected_planets"
							amount = 1
						}
					}
				}
				set_planet_entity = { entity = "gas_giant_y_dwarf_entity" }
			}
		}
		else = {
			solar_system = {
				every_system_planet = {
					limit = {
						OR = {
							is_planet_class = pc_gas_giant
							is_planet_class = pc_ice_giant
							is_planet_class = pc_bespin
						}
						distance = {
							source = ROOT
							min_distance >= 0
							max_distance <= 61
							type = euclidean
							same_solar_system = yes
						}
					}
					if = {
						limit = { is_planet_class = pc_bespin }
						planet_event = { id = mzilli_star_crisis_events.17 }
						change_pc = pc_gas_giant
						every_country = {
							limit = { has_event_chain = mzilli_star_crisis_chain }
							add_event_chain_counter = {
								event_chain = "mzilli_star_crisis_chain"
								counter = "mzilli_dead_infected_planets"
								amount = 1
							}
						}
					}
					set_planet_entity = { entity = "gas_giant_y_dwarf_entity" }
				}
			}
		}
	}
	else_if = {
		limit = { has_planet_flag = red_giant_8x }
		remove_planet_flag = red_giant_8x
		set_planet_flag = red_giant_9x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_7x }
		remove_planet_flag = red_giant_7x
		set_planet_flag = red_giant_8x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_6x }
		remove_planet_flag = red_giant_6x
		set_planet_flag = red_giant_7x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_5x }
		remove_planet_flag = red_giant_5x
		set_planet_flag = red_giant_6x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_4x }
		remove_planet_flag = red_giant_4x
		set_planet_flag = red_giant_5x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_3x }
		remove_planet_flag = red_giant_3x
		set_planet_flag = red_giant_4x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_2x }
		remove_planet_flag = red_giant_2x
		set_planet_flag = red_giant_3x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_1x }
		remove_planet_flag = red_giant_1x
		set_planet_flag = red_giant_2x
	}
	else = {
		set_planet_flag = red_giant_1x
		change_pc = pc_m_giant_star
		solar_system = {
			if = {
				limit = {
					count_system_planet = {
						limit = { is_star = yes }
						count = 1
					}
				}
				set_star_class = sc_m_giant
			}
		}
	}
}

red_giant_planet_effects_1 = {
	if = {
		limit = { has_moon = yes }
		every_moon = {
			red_giant_planet_effects_2 = yes
			if = {
				limit = { has_moon = yes }
				every_moon = {
					red_giant_planet_effects_2 = yes
					if = {
						limit = { has_moon = yes }
						every_moon = { red_giant_planet_effects_2 = yes }
					}
				}
			}
		}
	}
	else = {
		solar_system = {
			every_system_planet = {
				limit = {
					NAND = {
						exists = orbit
						orbit = { is_star = yes }
					}
				}
				red_giant_planet_effects_2 = yes
			}
		}
	}
}

red_giant_planet_effects_2 = {
	if = {
		limit = { is_planet_class = pc_molten }
		change_pc = pc_shattered
		set_deposit = d_minerals_2
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_toxic
				is_planet_class = pc_toxoid
			}
		}
		if = {
			limit = { is_planet_class = pc_toxoid }
			planet_event = { id = mzilli_star_crisis_events.17 }
		}
		if = {
			limit = { has_modifier = toxic_terraforming_candidate }
			remove_modifier = toxic_terraforming_candidate
		}
		change_pc = pc_molten
		set_deposit = d_minerals_2
	}
	else_if = {
		limit = { is_planet_class = pc_barren }
		if = {
			limit = { planet_size > 1 }
			change_planet_size = -1
		}
		if = {
			limit = { has_modifier = terraforming_candidate }
			remove_modifier = terraforming_candidate
		}
		change_pc = pc_toxic
	}
	else_if = {
		limit = { is_planet_class = pc_barren_cold }
		if = {
			limit = { planet_size > 1 }
			change_planet_size = -1
		}
		change_pc = pc_barren
	}
	else_if = {
		limit = { is_planet_class = pc_frozen }
		if = {
			limit = { planet_size > 1 }
			change_planet_size = -1
		}
		if = {
			limit = { has_modifier = frozen_terraforming_candidate }
			remove_modifier = frozen_terraforming_candidate
		}
		change_pc = pc_barren_cold
	}
	else_if = {
		limit = {
			OR = {
				exists = owner
				is_colonizable = yes
			}
			NOT = { is_artificial = yes }
		}
		else_if = {
			limit = { is_planet_class = pc_relic }
			planet_event = { id = mzilli_star_crisis_events.17 }
			reset_planet = yes
			change_pc = pc_barren
		}
		else_if = {
			limit = { is_planet_class = pc_nuked }
			planet_event = { id = mzilli_star_crisis_events.17 }
			reset_planet = yes
			change_pc = pc_barren_cold
		}
		else_if = {
			limit = { has_climate = cold }
			change_pc = pc_ocean
		}
		else_if = {
			limit = { has_climate = wet }
			random_list = {
				10 = { change_pc = pc_arid }
				10 = { change_pc = pc_desert }
				10 = { change_pc = pc_savannah }
			}
		}
		else_if = {
			limit = { has_climate = dry }
			change_pc = pc_nuked
		}
	}
}

red_dwarf_contraction_flags = {
	if = {
		limit = { has_planet_flag = red_giant_50x }
		remove_planet_flag = red_giant_50x
		set_planet_flag = red_giant_49x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_49x }
		remove_planet_flag = red_giant_49x
		set_planet_flag = red_giant_48x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_48x }
		remove_planet_flag = red_giant_48x
		set_planet_flag = red_giant_47x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_47x }
		remove_planet_flag = red_giant_47x
		set_planet_flag = red_giant_46x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_46x }
		remove_planet_flag = red_giant_46x
		set_planet_flag = red_giant_45x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_45x }
		remove_planet_flag = red_giant_45x
		set_planet_flag = red_giant_44x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_44x }
		remove_planet_flag = red_giant_44x
		set_planet_flag = red_giant_43x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_43x }
		remove_planet_flag = red_giant_43x
		set_planet_flag = red_giant_42x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_42x }
		remove_planet_flag = red_giant_42x
		set_planet_flag = red_giant_41x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_41x }
		remove_planet_flag = red_giant_41x
		set_planet_flag = red_giant_40x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_40x }
		remove_planet_flag = red_giant_40x
		set_planet_flag = red_giant_39x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_39x }
		remove_planet_flag = red_giant_39x
		set_planet_flag = red_giant_38x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_38x }
		remove_planet_flag = red_giant_38x
		set_planet_flag = red_giant_37x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_37x }
		remove_planet_flag = red_giant_37x
		set_planet_flag = red_giant_36x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_36x }
		remove_planet_flag = red_giant_36x
		set_planet_flag = red_giant_35x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_35x }
		remove_planet_flag = red_giant_35x
		set_planet_flag = red_giant_34x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_34x }
		remove_planet_flag = red_giant_34x
		set_planet_flag = red_giant_33x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_33x }
		remove_planet_flag = red_giant_33x
		set_planet_flag = red_giant_32x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_32x }
		remove_planet_flag = red_giant_32x
		set_planet_flag = red_giant_31x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_31x }
		remove_planet_flag = red_giant_31x
		set_planet_flag = red_giant_30x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_30x }
		remove_planet_flag = red_giant_30x
		set_planet_flag = red_giant_29x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_29x }
		remove_planet_flag = red_giant_29x
		set_planet_flag = red_giant_28x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_28x }
		remove_planet_flag = red_giant_28x
		set_planet_flag = red_giant_27x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_27x }
		remove_planet_flag = red_giant_27x
		set_planet_flag = red_giant_26x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_26x }
		remove_planet_flag = red_giant_26x
		set_planet_flag = red_giant_25x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_25x }
		remove_planet_flag = red_giant_25x
		set_planet_flag = red_giant_24x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_24x }
		remove_planet_flag = red_giant_24x
		set_planet_flag = red_giant_23x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_23x }
		remove_planet_flag = red_giant_23x
		set_planet_flag = red_giant_22x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_22x }
		remove_planet_flag = red_giant_22x
		set_planet_flag = red_giant_21x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_21x }
		remove_planet_flag = red_giant_21x
		set_planet_flag = red_giant_20x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_20x }
		remove_planet_flag = red_giant_20x
		set_planet_flag = red_giant_19x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_19x }
		remove_planet_flag = red_giant_19x
		set_planet_flag = red_giant_18x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_18x }
		remove_planet_flag = red_giant_18x
		set_planet_flag = red_giant_17x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_17x }
		remove_planet_flag = red_giant_17x
		set_planet_flag = red_giant_16x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_16x }
		remove_planet_flag = red_giant_16x
		set_planet_flag = red_giant_15x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_15x }
		remove_planet_flag = red_giant_15x
		set_planet_flag = red_giant_14x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_14x }
		remove_planet_flag = red_giant_14x
		set_planet_flag = red_giant_13x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_13x }
		remove_planet_flag = red_giant_13x
		set_planet_flag = red_giant_12x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_12x }
		remove_planet_flag = red_giant_12x
		set_planet_flag = red_giant_11x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_11x }
		remove_planet_flag = red_giant_11x
		set_planet_flag = red_giant_10x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_10x }
		remove_planet_flag = red_giant_10x
		set_planet_flag = red_giant_9x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_9x }
		remove_planet_flag = red_giant_9x
		set_planet_flag = red_giant_8x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_8x }
		remove_planet_flag = red_giant_8x
		set_planet_flag = red_giant_7x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_7x }
		remove_planet_flag = red_giant_7x
		set_planet_flag = red_giant_6x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_6x }
		remove_planet_flag = red_giant_6x
		set_planet_flag = red_giant_5x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_5x }
		remove_planet_flag = red_giant_5x
		set_planet_flag = red_giant_4x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_4x }
		remove_planet_flag = red_giant_4x
		set_planet_flag = red_giant_3x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_3x }
		remove_planet_flag = red_giant_3x
		set_planet_flag = red_giant_2x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_2x }
		remove_planet_flag = red_giant_2x
		set_planet_flag = red_giant_1x
	}
	else_if = {
		limit = { has_planet_flag = red_giant_1x }
		remove_planet_flag = red_giant_1x
		set_planet_flag = red_giant_0x
	}
}