ehof_balance_planets = {
	every_system_planet = {
		if = { limit = { is_planet_class = "pc_rare_crystal_asteroid" } random_list = { 2 = {} 1 = { change_pc = "pc_crystal_asteroid" } } }
		else_if = {
			limit = {
				ehof_is_habitable = yes
				solar_system = { NOT = { ehof_is_rare = yes } }
			}
			if = { limit = { is_planet_class = pc_superhabitable } set_planet_size = 30 }
			else = {
				random_list = {
					1 = { set_planet_size = 15 }
					1 = { set_planet_size = 16 }
					1 = { set_planet_size = 17 }
					1 = { set_planet_size = 18 }
					1 = { set_planet_size = 19 }
					1 = { set_planet_size = 20 }
					1 = { set_planet_size = 21 }
					1 = { set_planet_size = 22 }
					1 = { set_planet_size = 23 }
					1 = { set_planet_size = 24 }
					1 = { set_planet_size = 25 }
				}
			}
		}
		else_if = {
			limit = { ehof_is_habitable = yes }
			if = { limit = { is_planet_class = pc_superhabitable } set_planet_size = 35 }
			else = {
				random_list = {
					1 = { set_planet_size = 20 }
					1 = { set_planet_size = 21 }
					1 = { set_planet_size = 22 }
					1 = { set_planet_size = 23 }
					1 = { set_planet_size = 24 }
					1 = { set_planet_size = 25 }
					1 = { set_planet_size = 26 }
					1 = { set_planet_size = 27 }
					1 = { set_planet_size = 28 }
					1 = { set_planet_size = 29 }
					1 = { set_planet_size = 30 }
				}
			}
		}
	}
}

ehof_generate_megastructures = {
	random_list = {
		98 = {}
		2 = {
			modifier = { factor = 85 ehof_is_rare = yes }
			modifier = { factor = 0 ehof_trader_system = yes }
			modifier = { factor = 0 ehof_quest_system = yes }
			modifier = { factor = 0 ehof_compound_cluster = yes }
			random_list = {

				######################################################################################################################################
				########################################################### GIGASTRUCTURES ###########################################################
				######################################################################################################################################
				############################################## Kugelblitz Containment Silo
				5 = {
					modifier = { factor = 0 OR = { has_global_flag = kugel_disabled NOT = { has_global_flag = gigastructures_enabled } } }
					modifier = {
						factor = 0
						NOT = { any_system_planet = { ehof_is_habitable = no	is_star = no } }
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = blackhole_generator_restored
										is_megastructure_type = blackhole_generator_ruined
										is_megastructure_type = blackhole_generator_0
										is_megastructure_type = blackhole_generator_1
										is_megastructure_type = blackhole_generator_2
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_kugelblitz_system
					ehof_field_system_debris = yes

					random_system_planet = {
						limit = { ehof_is_habitable = no	is_star = no }
						set_planet_flag = has_giga
						set_planet_flag = has_megastructure
						save_event_target_as = spawn_giga_ruined_kugelblitz
						ehof_field_debris = yes
					}
					spawn_megastructure = { type = "blackhole_generator_ruined" location = event_target:spawn_giga_ruined_kugelblitz }
				}
				############################################## Engineering Test Site
				5 = {
					modifier = { factor = 0 OR = { has_global_flag = megabase_disabled NOT = { has_global_flag = gigastructures_enabled } } }
					modifier = {
						factor = 0
						OR = {
							is_star_class = sc_black_hole
							is_star_class = sc_ehof_black_hole
							NOT = { any_system_planet = { OR = { is_planet_class = pc_machine is_planet_class = pc_broken is_planet_class = pc_shattered } } }
						}
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = engineering_megabase_restored
										is_megastructure_type = engineering_megabase_ruined
										is_megastructure_type = engineering_megabase_0
										is_megastructure_type = engineering_megabase_1
										is_megastructure_type = engineering_megabase_1_dismantle
										is_megastructure_type = engineering_megabase_1_restored_dismantle
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_engineering_system
					ehof_field_system_debris = yes

					random_system_planet = {
						limit = { OR = { is_planet_class = pc_machine is_planet_class = pc_broken is_planet_class = pc_shattered } }
						set_planet_flag = has_giga
						set_planet_flag = has_megastructure
						save_event_target_as = spawn_giga_ruined_engineering
						ehof_field_debris = yes
					}
					spawn_megastructure = { type = "engineering_megabase_ruined" location = event_target:spawn_giga_ruined_engineering }
				}
				############################################## Neutronium Gigaforge
				5 = {
					modifier = { factor = 0 OR = { has_global_flag = gigaforge_disabled NOT = { has_global_flag = gigastructures_enabled } } }
					modifier = {
						factor = 0
						OR = {
							is_star_class = sc_black_hole
							is_star_class = sc_ehof_black_hole
							NOT = { any_system_planet = { OR = { is_planet_class = pc_neutron_star is_planet_class = pc_pulsar } } }
						}
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = neutronium_gigaforge_restored
										is_megastructure_type = neutronium_gigaforge_ruined
										is_megastructure_type = neutronium_gigaforge_0
										is_megastructure_type = neutronium_gigaforge_1
										is_megastructure_type = neutronium_gigaforge_2
										is_megastructure_type = neutronium_gigaforge_3
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_neutroniumgigaforge_system
					ehof_field_system_debris = yes

					random_system_planet = {
						limit = { OR = { is_planet_class = pc_neutron_star is_planet_class = pc_pulsar } }
						set_planet_flag = has_giga
						set_planet_flag = has_megastructure
						save_event_target_as = spawn_giga_ruined_neutroniumgigaforge
						ehof_field_debris = yes
					}
					spawn_megastructure = { type = "neutronium_gigaforge_ruined" location = event_target:spawn_giga_ruined_neutroniumgigaforge }
				}
				############################################## Particle Accelerator
				5 = {
					modifier = { factor = 0 OR = { has_global_flag = accelerator_disabled NOT = { has_global_flag = gigastructures_enabled } } }
					modifier = {
						factor = 0
						OR = {
							is_star_class = sc_black_hole
							is_star_class = sc_neutron_star
							is_star_class = sc_pulsar
						}
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = particle_accelerator_restored
										is_megastructure_type = particle_accelerator_ruined
										is_megastructure_type = particle_accelerator_0
										is_megastructure_type = particle_accelerator_1
										is_megastructure_type = particle_accelerator_1_dismantle
										is_megastructure_type = particle_accelerator_1_restored_dismantle
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_accelerator_system
					ehof_field_system_debris = yes

					random_system_planet = {
						limit = { is_star = yes }
						set_planet_flag = has_giga
						set_planet_flag = has_megastructure
						save_event_target_as = spawn_giga_ruined_accelerator
						ehof_field_debris = yes
					}
					spawn_megastructure = { type = "particle_accelerator_ruined" location = event_target:spawn_giga_ruined_accelerator }
				}
				############################################## Massive Zoo
				5 = {
					modifier = { factor = 0 OR = { has_global_flag = zoo_disabled NOT = { has_global_flag = gigastructures_enabled } } }
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = massive_zoo_restored
										is_megastructure_type = massive_zoo_ruined
										is_megastructure_type = massive_zoo_0
										is_megastructure_type = massive_zoo_1
										is_megastructure_type = massive_zoo_1_dismantle
										is_megastructure_type = massive_zoo_1_restored_dismantle
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_ecosystem_system
					ehof_field_system_debris = yes

					random_system_planet = {
						limit = { is_star = no }
						set_planet_flag = has_giga
						set_planet_flag = has_megastructure
						save_event_target_as = spawn_giga_ruined_massive_zoo
						ehof_field_debris = yes
					}
					spawn_megastructure = { type = "massive_zoo_ruined" location = event_target:spawn_giga_ruined_massive_zoo }
				}
				############################################## Yggdrasil Orchid
				5 = {
					modifier = { factor = 0 OR = { has_global_flag = orchid_disabled NOT = { has_global_flag = gigastructures_enabled } } }
					modifier = {
						factor = 0
						NOT = { any_system_planet = { is_planet_class = pc_gas_giant } }
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = giant_orchid_restored
										is_megastructure_type = giant_orchid_ruined
										is_megastructure_type = giant_orchid_0
										is_megastructure_type = giant_orchid_1
										is_megastructure_type = giant_orchid_2
										is_megastructure_type = giant_orchid_3
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_orchid_system
					ehof_field_system_debris = yes

					random_system_planet = {
						limit = { is_planet_class = pc_gas_giant }
						set_planet_flag = has_giga
						set_planet_flag = has_megastructure
						save_event_target_as = spawn_giga_ruined_yggdrasil_orchid
						ehof_field_debris = yes
					}
					spawn_megastructure = { type = "giant_orchid_ruined" location = event_target:spawn_giga_ruined_yggdrasil_orchid }
				}
				######################################################################################################################################
				######################################################################################################################################
				######################################################################################################################################
				############################################## Dyson_sphere
				5 = {
					modifier = { factor = 0 NOT = { host_has_dlc = "Utopia" } }
					modifier = {
						factor = 0
						OR = {
							ehof_is_binary_star = yes
							ehof_is_trinary_star = yes
							is_star_class = sc_black_hole
							is_star_class = sc_ehof_black_hole
							is_star_class = sc_neutron_star
							is_star_class = sc_pulsar
							star = {
								planet_size > 35
								planet_size < 50
							}
						}
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = dyson_sphere_ruined
										is_megastructure_type = dyson_sphere_restored
										is_megastructure_type = dyson_sphere_0
										is_megastructure_type = dyson_sphere_1
										is_megastructure_type = dyson_sphere_2
										is_megastructure_type = dyson_sphere_3
										is_megastructure_type = dyson_sphere_4
										is_megastructure_type = dyson_sphere_5
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_dyson_system
					ehof_remove_habitable_planets = yes
					ehof_field_system_debris = yes
					spawn_megastructure = { type = "dyson_sphere_ruined" location = star }
				}
				############################################## Mega Shipyard
				5 = {
					modifier = { factor = 0 NOT = { host_has_dlc = "Federations" } }
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = mega_shipyard_ruined
										is_megastructure_type = mega_shipyard_restored
										is_megastructure_type = mega_shipyard_0
										is_megastructure_type = mega_shipyard_1
										is_megastructure_type = mega_shipyard_2
										is_megastructure_type = mega_shipyard_3
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_mega_shipyard_system
					ehof_field_system_debris = yes
					spawn_megastructure = { type = "mega_shipyard_ruined" location = star }
				}
				############################################## Matter Decompressor
				5 = {
					modifier = { factor = 0 NOT = { host_has_dlc = "Megacorp" } }
					modifier = {
						factor = 0
						NOR = {
							is_star_class = sc_ehof_black_hole
							is_star_class = sc_black_hole
						}
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = matter_decompressor_ruined
										is_megastructure_type = matter_decompressor_restored
										is_megastructure_type = matter_decompressor_0
										is_megastructure_type = matter_decompressor_1
										is_megastructure_type = matter_decompressor_2
										is_megastructure_type = matter_decompressor_3
										is_megastructure_type = matter_decompressor_4
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_matter_decompressor_system
					ehof_remove_habitable_planets = yes
					ehof_field_system_debris = yes
					spawn_megastructure = { type = "matter_decompressor_ruined" location = star }
				}
				############################################## Ringworld
				5 = {
					modifier = {
						factor = 0
						OR = {
							ehof_is_trinary_star = yes
							ehof_is_binary_star = yes
							is_star_class = sc_black_hole
							is_star_class = sc_ehof_black_hole
							is_star_class = sc_neutron_star
							is_star_class = sc_pulsar
						}
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = ring_world_ruined
										is_megastructure_type = ring_world_restored
										is_megastructure_type = ring_world_1
										is_megastructure_type = ring_world_2
										is_megastructure_type = ring_world_2_intermediate
										is_megastructure_type = ring_world_3_intermediate
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_ring_system
					ehof_remove_habitable_planets = yes
					every_system_planet = {
						limit = { has_planet_flag = ehof_warm_planet }
						remove_planet = yes
					}
					ehof_field_system_debris = yes

					spawn_megastructure = {
						type = "ring_world_ruined"
						orbit_angle = 0
						orbit_distance = 45
						location = star
					}
					spawn_megastructure = {
						type = "ring_world_ruined"
						orbit_angle = 90
						orbit_distance = 45
						location = star
					}
					spawn_megastructure = {
						type = "ring_world_ruined"
						orbit_angle = 180
						orbit_distance = 45
						location = star
					}
					spawn_megastructure = {
						type = "ring_world_ruined"
						orbit_angle = 270
						orbit_distance = 45
						location = star
					}
				}
				############################################## Science Nexus
				5 = {
					modifier = { factor = 0 NOT = { host_has_dlc = "Utopia" } }
					modifier = {
						factor = 0
						NOT = { any_system_planet = { ehof_is_habitable = no	is_moon = no	is_asteroid = no	is_star = no } }
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = think_tank_ruined
										is_megastructure_type = think_tank_restored
										is_megastructure_type = think_tank_0
										is_megastructure_type = think_tank_1
										is_megastructure_type = think_tank_2
										is_megastructure_type = think_tank_3
										is_megastructure_type = think_tank_4
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_nexus_system
					ehof_field_system_debris = yes
					random_system_planet = { limit = { ehof_is_habitable = no	is_moon = no	is_asteroid = no	is_star = no } save_event_target_as = science_nexus_target ehof_field_debris = yes }
					spawn_megastructure = { type = "think_tank_ruined" location = event_target:science_nexus_target }
				}
				############################################## Sentry Array
				5 = {
					modifier = { factor = 0 NOT = { host_has_dlc = "Utopia" } }
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = spy_orb_ruined
										is_megastructure_type = spy_orb_restored
										is_megastructure_type = spy_orb_0
										is_megastructure_type = spy_orb_1
										is_megastructure_type = spy_orb_2
										is_megastructure_type = spy_orb_3
										is_megastructure_type = spy_orb_4
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_sentry_system
					ehof_field_system_debris = yes
					random_system_planet = { save_event_target_as = sentry_array_target ehof_field_debris = yes }
					spawn_megastructure = { type = "spy_orb_ruined" location = event_target:sentry_array_target }
				}
				############################################## Strategic Coordination Center
				5 = {
					modifier = { factor = 0 NOT = { host_has_dlc = "Megacorp" } }
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = strategic_coordination_center_ruined
										is_megastructure_type = strategic_coordination_center_restored
										is_megastructure_type = strategic_coordination_center_0
										is_megastructure_type = strategic_coordination_center_1
										is_megastructure_type = strategic_coordination_center_2
										is_megastructure_type = strategic_coordination_center_3
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_strategic_coordination_center_system
					ehof_field_system_debris = yes
					random_system_planet = { save_event_target_as = coordination_target ehof_field_debris = yes }
					spawn_megastructure = { type = "strategic_coordination_center_ruined" location = event_target:coordination_target }
				}
				############################################## Mega Art Installation
				5 = {
					modifier = { factor = 0 NOT = { host_has_dlc = "Megacorp" } }
					modifier = {
						factor = 0
						NOT = { any_system_planet = { ehof_is_habitable = yes } }
					}
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = mega_art_installation_ruined
										is_megastructure_type = mega_art_installation_restored
										is_megastructure_type = mega_art_installation_restored_2
										is_megastructure_type = mega_art_installation_0
										is_megastructure_type = mega_art_installation_1
										is_megastructure_type = mega_art_installation_2
										is_megastructure_type = mega_art_installation_3
										is_megastructure_type = mega_art_installation_4
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_mega_art_installation_system
					ehof_field_system_debris = yes
					random_system_planet = { limit = { ehof_is_habitable = yes } save_event_target_as = mega_art_installation_target ehof_field_debris = yes }
					spawn_megastructure = { type = "mega_art_installation_ruined" location = event_target:mega_art_installation_target }
				}
				############################################## Interstellar Assembly
				5 = {
					modifier = { factor = 0 NOT = { host_has_dlc = "Megacorp" } }
					modifier = {
						factor = 0.1
						event_target:ehof_system_creator = {
							count_owned_megastructure = {
								limit = {
									OR = {
										is_megastructure_type = interstellar_assembly_ruined
										is_megastructure_type = interstellar_assembly_restored
										is_megastructure_type = interstellar_assembly_0
										is_megastructure_type = interstellar_assembly_1
										is_megastructure_type = interstellar_assembly_2
										is_megastructure_type = interstellar_assembly_3
										is_megastructure_type = interstellar_assembly_4
									}
								}
								count > 0
							}
						}
					}
					set_star_flag = ruined_interstellar_assembly_system
					ehof_field_system_debris = yes
					spawn_megastructure = { type = "interstellar_assembly_ruined" location = star }
				}
			}
		}
	}
}

ehof_generate_system = {
	event_target:ehof_system_creator = {
		if = {
			limit = { NOT = { has_country_flag = ehof_spawned_sector_system } }
			set_country_flag = ehof_spawned_sector_system
			set_global_flag = ehof_spawning_sector_system
			random_list = {
				1 = { modifier = { factor = 0 has_global_flag = ehof_10_taken	} set_global_flag = ehof_10_taken	set_country_flag = ehof_10_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_40_taken	} set_global_flag = ehof_40_taken	set_country_flag = ehof_40_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_70_taken	} set_global_flag = ehof_70_taken	set_country_flag = ehof_70_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_100_taken	} set_global_flag = ehof_100_taken	set_country_flag = ehof_100_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_130_taken	} set_global_flag = ehof_130_taken	set_country_flag = ehof_130_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_160_taken	} set_global_flag = ehof_160_taken	set_country_flag = ehof_160_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_190_taken	} set_global_flag = ehof_190_taken	set_country_flag = ehof_190_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_220_taken	} set_global_flag = ehof_220_taken	set_country_flag = ehof_220_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_250_taken	} set_global_flag = ehof_250_taken	set_country_flag = ehof_250_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_280_taken	} set_global_flag = ehof_280_taken	set_country_flag = ehof_280_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_310_taken	} set_global_flag = ehof_310_taken	set_country_flag = ehof_310_taken }
				1 = { modifier = { factor = 0 has_global_flag = ehof_340_taken	} set_global_flag = ehof_340_taken	set_country_flag = ehof_340_taken }
			}
			if = {		limit = { has_country_flag = ehof_10_taken	} remove_country_flag = ehof_10_taken	no_scope = { spawn_system = { min_orientation_angle = 10	max_orientation_angle = 10	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_40_taken	} remove_country_flag = ehof_40_taken	no_scope = { spawn_system = { min_orientation_angle = 40	max_orientation_angle = 40	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_70_taken	} remove_country_flag = ehof_70_taken	no_scope = { spawn_system = { min_orientation_angle = 70	max_orientation_angle = 70	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_100_taken	} remove_country_flag = ehof_100_taken	no_scope = { spawn_system = { min_orientation_angle = 100	max_orientation_angle = 100	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_130_taken	} remove_country_flag = ehof_130_taken	no_scope = { spawn_system = { min_orientation_angle = 130	max_orientation_angle = 130	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_160_taken	} remove_country_flag = ehof_160_taken	no_scope = { spawn_system = { min_orientation_angle = 160	max_orientation_angle = 160	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_190_taken	} remove_country_flag = ehof_190_taken	no_scope = { spawn_system = { min_orientation_angle = 190	max_orientation_angle = 190	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_220_taken	} remove_country_flag = ehof_220_taken	no_scope = { spawn_system = { min_orientation_angle = 220	max_orientation_angle = 220	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_250_taken	} remove_country_flag = ehof_250_taken	no_scope = { spawn_system = { min_orientation_angle = 250	max_orientation_angle = 250	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_280_taken	} remove_country_flag = ehof_280_taken	no_scope = { spawn_system = { min_orientation_angle = 280	max_orientation_angle = 280	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_310_taken	} remove_country_flag = ehof_310_taken	no_scope = { spawn_system = { min_orientation_angle = 310	max_orientation_angle = 310	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
			else_if = {	limit = { has_country_flag = ehof_340_taken	} remove_country_flag = ehof_340_taken	no_scope = { spawn_system = { min_orientation_angle = 340	max_orientation_angle = 340	min_distance >= 480 max_distance <= 490 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } } }
		}
		else = {
			random_list = {
				30 = {
					random_list = {
						70 = { random_rim_system = { save_event_target_as = ehof_system_source } }
						30 = { random_system = { save_event_target_as = ehof_system_source } }
					}
				}
				70 = {
					random_list = {
						70 = {
							set_global_flag = ehof_spawning_sector_system
							random_system = {
								limit = { has_star_flag = ehof_sector_system_@event_target:ehof_system_creator }
								save_event_target_as = ehof_system_source
							}
						}
						30 = {
							modifier = {
								factor = 0																				# can not happen if
								NOT = {																					# there is not
									any_system_within_border = {														# any system within border that is
										ehof_cohesive_system = no 														# not an isolated system
										NOT = {																			# that does not
											any_neighbor_system = {														# have any neighboring system
												exists = owner															# that has an owner
												owner = { NOT = { is_same_value = event_target:ehof_system_creator } }	# that is not us
											}
										}
									}
								}
							}
							random_system_within_border = {																# random system within border
								limit = {																				# that is
									ehof_cohesive_system = no 															# not an isolated system
									NOT = {																				# that does not
										any_neighbor_system = {															# have any neighboring system
											exists = owner																# that has an owner
											owner = { NOT = { is_same_value = event_target:ehof_system_creator } }		# that is not us
										}
									}
								}
								save_event_target_as = ehof_system_source
							}
						}
					}
				}
			}
			event_target:ehof_system_source = {
				random_list = {
					5 = {
						modifier = { factor = 0 event_target:ehof_system_creator = { has_country_flag = ehof_explored_all_isolated } }
						modifier = {
							factor = 0
							NAND = {
								has_global_flag = has_real_space_mod
								has_global_flag = planetarydiversity
							}
						}
						random_list = {
							7 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_rs_standard_systems_01" } }
							4 = { modifier = { factor = 0 has_global_flag = ehof_spawning_reality_code } spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_rs_blackhole_systems_01" } }
							5 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_rs_binary_systems_01" } }
							4 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_rs_binary_systems_02" } }
							5 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_rs_trinary_systems_01" } }
							4 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_rs_trinary_systems_02" } }
						}
					}
					5 = {
						modifier = { factor = 0 event_target:ehof_system_creator = { has_country_flag = ehof_explored_all_isolated } }
						modifier = {
							factor = 0
							NOT = { has_global_flag = has_real_space_mod }
						}
						random_list = {
							7 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_rs_standard_systems_01" } }
							4 = { modifier = { factor = 0 has_global_flag = ehof_spawning_reality_code } spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_rs_blackhole_systems_01" } }
							5 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_rs_binary_systems_01" } }
							4 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_rs_binary_systems_02" } }
							5 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_rs_trinary_systems_01" } }
							4 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_rs_trinary_systems_02" } }
						}
					}
					5 = {
						modifier = { factor = 0 event_target:ehof_system_creator = { has_country_flag = ehof_explored_all_isolated } }
						modifier = {
							factor = 0
							NOT = { has_global_flag = planetarydiversity }
						}
						random_list = {
							7 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_standard_systems_01" } }
							4 = { modifier = { factor = 0 has_global_flag = ehof_spawning_reality_code } spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_blackhole_systems_01" } }
							5 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_binary_systems_01" } }
							4 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_binary_systems_02" } }
							5 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_trinary_systems_01" } }
							4 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_pd_trinary_systems_02" } }
						}
					}
					5 = {
						modifier = { factor = 0 event_target:ehof_system_creator = { has_country_flag = ehof_explored_all_isolated } }
						modifier = {
							factor = 0
							OR = {
								has_global_flag = planetarydiversity
								has_global_flag = has_real_space_mod
							}
						}
						random_list = {
							7 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_standard_systems_01" } }
							4 = { modifier = { factor = 0 has_global_flag = ehof_spawning_reality_code } spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_blackhole_systems_01" } }
							5 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_binary_systems_01" } }
							4 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_binary_systems_02" } }
							5 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_trinary_systems_01" } }
							4 = { spawn_system = { min_distance >= 30 max_distance <= 50 hyperlane = no is_discovered = yes initializer = "ehof_trinary_systems_02" } }
						}
					}
					# Common
					2 = { modifier = { factor = 0 OR = { has_global_flag = ehof_spawning_reality_code event_target:ehof_system_creator = { is_ai = yes } exists = event_target:s_c03_999 } } spawn_system = { min_distance >= 10 max_distance <= 30 hyperlane = no is_discovered = yes initializer = "ehof_isolated_systems_1" } }
					2 = { modifier = { factor = 0 OR = { has_global_flag = ehof_spawning_reality_code event_target:ehof_system_creator = { is_ai = yes } exists = event_target:s_c03_998 } } spawn_system = { min_distance >= 10 max_distance <= 30 hyperlane = no is_discovered = yes initializer = "ehof_isolated_systems_4" } }

					# Rare
					1 = { modifier = { factor = 0 OR = { has_global_flag = ehof_spawning_reality_code event_target:ehof_system_creator = { is_ai = yes } root = { check_variable = { which = ehof_phase value < 3 } } exists = event_target:s_c02_999 } } spawn_system = { min_distance >= 10 max_distance <= 30 hyperlane = no is_discovered = yes initializer = "ehof_isolated_systems_2" } }
					1 = { modifier = { factor = 0 OR = { has_global_flag = ehof_spawning_reality_code event_target:ehof_system_creator = { is_ai = yes } root = { check_variable = { which = ehof_phase value < 3 } } exists = event_target:s_c02_998 } } spawn_system = { min_distance >= 10 max_distance <= 30 hyperlane = no is_discovered = yes initializer = "ehof_isolated_systems_3" } }
				}
			}
		}
	}
	remove_global_flag = ehof_spawning_sector_system
}

ehof_spawn_do_districts = {
	if = {
		limit = { has_global_flag = districtoverhaul2_active }
		do_system_spawn_districts = yes
	}
}