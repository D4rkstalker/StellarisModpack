#################################
### Deposits and blockers
#################################

eo_deposits_and_blockers = {
 #####Irradiated Evolution
	if = {
		limit = {
			owner = {
				has_origin = origin_irradiated_evolution		
			}
		}
		clear_deposits = yes

		if = {
			limit = {
				owner = {
					has_authority = auth_hive_mind
				}
			}
			add_deposit = d_crowded_burrows
		}
		else = {
			add_deposit = d_repurposed_ancient_settlement
		}

		add_deposit = d_tomb_world_wasteland
		add_deposit = d_radioactive_ruins
		add_deposit = d_bomb_crater

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent

		# 3 + 4 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins

		# 3 + 2 farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
		add_deposit = d_fungal_forest
	}
 #####Starship Graveyard
	if = {
		limit = {
			owner = {
				has_origin = origin_starship_graveyard
			}
		}
		add_deposit = d_irreparable_wreckage
		while = {
			count = 5
			add_deposit = d_starship_graveyard
		}
	}
  #####Long Sleep and Reactivated pop blocker clearing
	if = {
		limit = {
			OR = {
				owner = { has_origin = origin_long_sleep }
				owner = { has_origin = origin_reactivated }
			}
		}
		remove_deposit = d_decrepit_dwellings
		remove_deposit = d_tomb_world_ruins
		remove_deposit = d_unsupervised_settlement
		remove_deposit = d_collapsed_burrows
	}
 #####The Long Sleep
	if = {
		limit = {
			owner = { has_origin = origin_long_sleep }
		}
		if = {
			limit = {
				owner = { is_hive_empire = yes }
			}
			while = {
				count = 9
				add_deposit = d_cryo_facilities
			}
		}
		else_if = {
			limit = {
				owner = { is_megacorp = yes }
			}
			while = {
				count = 8
				add_deposit = d_cryo_facilities
			}
		}
		else_if = {
			limit = {
				owner = { is_regular_empire = yes }
			}
			while = {
				count = 7
				add_deposit = d_cryo_facilities
			}
		}
	}
 #####Reactivated
	if = {
		limit = {
			owner = { has_origin = origin_reactivated }
		}
		if = {
			limit = {
				owner = { has_valid_civic = civic_machine_assimilator }
			}
			while = {
				count = 3
				add_deposit = d_cryo_facilities
			}
			while = {
				count = 5
				add_deposit = d_machine_storage
			}
		}
		else_if = {
			limit = {
				owner = { has_valid_civic = civic_machine_servitor }
			}
			while = {
				count = 4
				add_deposit = d_cryo_facilities
			}
			while = {
				count = 7
				add_deposit = d_machine_storage
			}
		}
		else = {
			while = {
				count = 7
				add_deposit = d_machine_storage
			}
		}
	}
 #####Monster Tamers
	if = {
		limit = {
			owner = {
				has_origin = origin_monster_tamers
			}
		}
		add_deposit = d_titan_hunting_grounds
		set_planet_flag = titanic_life_can_build
		owner = {
			set_country_flag = titanic_life_soldiers
		}
		while = {
			count = 3
			create_army = {
				name = "NAME_Titanic_Guardian"
				owner = root.owner
				type = "titanic_guardian_army"
			}
		}
		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
				}
			}
			set_planet_flag = lithoid_kaiju
		}
	}
 #####Genius Loci
	if = {
		limit = {
			owner = {
				has_origin = origin_genius_loci		
			}
		}
		clear_deposits = yes
		add_deposit = d_unassimilated_drone_settlement
		while = {
			count = 5
			add_deposit = d_unassimilated_growth
		}
	}
 #####Survival of the Fittest
	if = {
		limit = {
			owner = {
				has_origin = origin_survival_of_the_fittest
			}
		}
		
		clear_deposits = yes

		add_deposit = d_fungal_forest # 3 food
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_veiny_cliffs # 1 minerals
			add_deposit = d_submerged_ore_veins # 3 minerals
		}
		else = {
			add_deposit = d_lush_jungle # 2 food
			add_deposit = d_tropical_island # 3 food
		}
		add_deposit = d_hot_springs # 1 energy
		add_deposit = d_rushing_waterfalls # 2 energy
		add_deposit = d_tempestous_mountain # 3 energy
		add_deposit = d_mineral_fields # 1 minerals
		add_deposit = d_great_river # 2 food
		add_deposit = d_ore_rich_caverns # 2 minerals
		add_deposit = d_submerged_ore_veins # 3 minerals
		
		add_deposit = d_alien_pets_deposit

		add_deposit = d_dangerous_wildlife_blocker
		add_deposit = d_dense_jungle
		add_deposit = d_noxious_swamp
		add_deposit = d_toxic_kelp
	}
 #####AI Uprising
	if = {
		limit = {
			owner = {
				has_origin = origin_ai_uprising
			}
		}
		remove_deposit = d_machine_empire_ruins
		add_deposit = d_organic_battlefield_ruins
		while = {
			count = 2
			add_deposit = d_organic_holdouts
		}
	}
 #####Next Generation
	if = {
		limit = {
			owner = {
				has_origin = origin_next_generation
			}
		}
		add_deposit = d_alien_pets_deposit
	}
}

#################################
### Buildings and districts
#################################

eo_buildings_and_districts = {
 #####Biomedical Renaissance
	if = {
		limit = { owner = { has_origin = origin_biomedical_renaissance } }
		
		#Cities
		if = {
			limit = {
				owner = {
					NOT = { has_valid_civic = civic_agrarian_idyll }
				}
			}
			remove_district = district_city
			if = {
				limit = {
					is_megacorp = yes
				}
				remove_district = district_city
			}
		}

		#Generator
		remove_district = district_generator

		#Mining
		if = {
			limit = {
				owner = {
					NOT = { has_valid_civic = civic_agrarian_idyll }
				}
			}
			remove_district = district_mining
		}

		#Farming
		if = {
			limit = {
				owner = {
					NOT = { has_valid_civic = civic_agrarian_idyll }
				}
			}
			remove_district = district_farming
		}
	}
 #####Monster Tamers
	if = {
		limit = {
			owner = { has_origin = origin_monster_tamers }
		}
		if = {
			limit = {
				owner = { is_lithoid_empire = no }
			}
			remove_district = district_farming
		}
		else = {
			remove_district = district_mining
		}
	}
 #####Long Sleep/Reactivated
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_long_sleep
					has_origin = origin_reactivated
				}
			}
		}
		remove_all_buildings = yes
		if = {
			limit = { owner = { is_regular_empire = yes } }
			add_building = building_capital
		}
		else_if = {
			limit = { owner = { is_machine_empire = yes } }
			add_building = building_machine_capital
			if = {
				limit = { owner = { has_valid_civic = civic_machine_servitor } }
				add_building = building_organic_sanctuary
			}
			else = {
				add_building = building_machine_assembly_plant
			}
		}
		else = {
			add_building = building_hive_capital
			add_building = building_hive_warren
		}
		add_building = building_research_lab_1
	#####Districts

		#Cities
		while = {
			count = 2
			remove_district = district_city
			remove_district = district_hive
			remove_district = district_nexus
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_machine_servitor
						NAND = {
							is_megacorp = yes
							is_lithoid_empire = yes
						}
					}
				}
			}
			remove_district = district_city
			remove_district = district_nexus
		}

		#Industrial
		if = {
			limit = {
				owner = { has_valid_civic = civic_agrarian_idyll }
			}
			remove_district = district_industrial
		}

		#Generator
		while= {
			count = 1
			remove_district = district_generator
		}
		if = {
			limit = {
				OWNER = {
					is_machine_empire = yes
					NAND = {
						has_country_flag = lithoid_subspecies
						has_valid_civic = civic_machine_assimilator
					}
				}
			}
			remove_district = district_generator
			if = {
				limit = {
					OWNER = {
						has_valid_civic = civic_machine_servitor
						NOT = {
							has_country_flag = lithoid_subspecies
						}
					}
				}
				remove_district = district_generator
			}
		}

		#Mining
		if = {
			limit = {
				OWNER = {
					NAND = {
						is_machine_empire = yes
						NOT = {
							has_country_flag = lithoid_subspecies
						}
					}
				}
			}
			remove_district = district_mining
			if = {
				limit = {
					OWNER = { is_lithoid_empire = yes }
				}
				remove_district = district_mining
			}
		}

		#Farming
		if = {
			limit = {
				OWNER = { is_machine_empire = no }
			}
			remove_district = district_farming
		}
	}
 #####Genius Loci
	if = {
		limit = {
			owner = {
				has_origin = origin_genius_loci
			}
		}
		while = {
			limit = {
				num_districts = {
					type = district_farming
					value > 0
				}
			}
			remove_district = district_farming
			add_district = district_farming_uncapped
		}
		while = {
			limit = {
				num_districts = {
					type = district_mining
					value > 0
				}
			}
			remove_district = district_mining
			add_district = district_mining_uncapped
		}
		while = {
			limit = {
				num_districts = {
					type = district_generator
					value > 0
				}
			}
			remove_district = district_generator
			add_district = district_generator_uncapped
		}
		while = {
			limit = {
				num_districts = {
					type = district_hive
					value > 1
				}
			}
			remove_district = district_hive
		}
	}
 #####AI Uprising
	if = {
		limit = { 
			owner = { has_origin = origin_ai_uprising }
		}
		while = {
			limit = {
				num_districts = {
					type = district_generator
					value > 0
				}
			}
			remove_district = district_generator
		}
		while = {
			count = 2
			add_district = district_farming
		}
		add_district = district_nexus
		owner = { add_resource = { food = 100 } }
	}
 #####Stellar Cornucopia
	if = {
		limit = {
			owner = {
				has_origin = origin_stellar_cornucopia
			}
		}
		owner = {
			capital_scope = {
				change_planet_size = 3
				add_planetary_features_with_planet_size = yes
			}
		}
	}
 #####Living planet
	if = {
		limit = {
			owner = {
				has_origin = origin_living_planet
			}
		}
		while = {
			limit = {
				num_districts = {
					type = district_farming
					value > 0
				}
			}
			remove_district = district_farming
			add_district = district_farming_uncapped
		}
		while = {
			limit = {
				num_districts = {
					type = district_mining
					value > 0
				}
			}
			remove_district = district_mining
			add_district = district_mining_uncapped
		}
		while = {
			limit = {
				num_districts = {
					type = district_generator
					value > 0
				}
			}
			remove_district = district_generator
			add_district = district_generator_uncapped
		}
	}
 #####Exiles
	if = {
		limit = {
			owner = {
				has_origin = origin_exiles
			}
		}
		remove_all_buildings = yes
		remove_all_districts = yes
		if = {
			limit = {
				owner = { is_regular_empire = yes }
			}
			add_building = building_colony_shelter
		}
		else_if = {
			limit = {
				owner = { is_hive_empire = yes }
			}
			add_building = building_hive_capital
		}
		else_if = {
			limit = {
				owner = { is_machine_empire = yes }
			}
			add_building = building_deployment_post
		}
		add_district = district_mining
		if = {
			limit = {
				owner = {
					is_lithoid_empire = no
					is_machine_empire = no
				}
			}
			add_district = district_farming
		}
		else_if = {
			limit = {
				owner = { is_lithoid_empire = yes }
			}
			add_district = district_mining
		}
		else_if = {
			limit = {
				owner = { is_machine_empire = yes }
			}
			add_district = district_generator
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_machine_assimilator
						has_valid_civic = civic_machine_servitor
					}
				}
				last_created_species = {
					NOT = { is_species_class = LITHOID }
				}
			}
			remove_district = district_mining
			add_district = district_farming
		}
	}
}

#################################
### Pops
#################################

eo_pops = {
 #####Biomedical Renaissance
	if = {
		limit = {
			owner = { has_origin = origin_biomedical_renaissance }
		}
		while = {
			count = 5
			random_owned_pop = {
				kill_pop = yes
			}
		}
	}
 #####The Long Sleep
	if = {
		limit = {
			owner = { has_origin = origin_long_sleep }
		}
		owner_species = {
			save_global_event_target_as = hibernating_organic_species_of_@root
			set_species_flag = saved_planet_species
		}
		if = {
			limit = {
				owner = { is_hive_empire = yes }
			}
			while = {
				limit = { num_pops > 17 }
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
		else_if = {
			limit = {
				owner = { is_megacorp = yes }
			}
			while = {
				limit = { num_pops > 15 }
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
		else_if = {
			limit = {
				owner = { is_regular_empire = yes }
			}
			while = {
				limit = { num_pops > 15 }
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
	}
 #####Reactivated
	if = {
		limit = {
			owner = { has_origin = origin_reactivated }
		}
		owner_species = {
			save_global_event_target_as = deactivated_machine_species_of_@root
			set_species_flag = saved_planet_species
		}
		if = {
			limit = {
				owner = { has_valid_civic = civic_machine_servitor }
			}
			last_created_species = {
				save_global_event_target_as = hibernating_organic_species_of_@root
				set_species_flag = saved_planet_species
			}
			while = {
				limit = { num_pops > 30 }
				random_owned_pop = {
					limit = {
						NOT = {
							is_species_class = MACHINE
						}
					}
					kill_pop = yes
				}
			}
			while = {
				limit = { num_pops > 16 }
				random_owned_pop = {
					limit = {
						is_species_class = MACHINE
					}
					kill_pop = yes
				}
			}
		}
		else_if = {
			limit = {
				owner = { has_valid_civic = civic_machine_assimilator }
			}
			last_created_species = {
				save_global_event_target_as = hibernating_organic_species_of_@root
				set_species_flag = saved_planet_species
			}
			while = {
				limit = { num_pops > 24 }
				random_owned_pop = {
					limit = {
						NOT = {
							is_species_class = MACHINE
						}
					}
					kill_pop = yes
				}
			}
			while = {
				limit = { num_pops > 15 }
				random_owned_pop = {
					limit = {
						is_species_class = MACHINE
					}
					kill_pop = yes
				}
			}
		}
		else = {
			while = {
				limit = { num_pops > 15 }
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
	}
 #####AI Uprising
	if = {
		limit = {
			owner = { has_origin = origin_ai_uprising }
		}
		while = {
			count = 8
			random_owned_pop = {
				limit = {
					is_species_class = MACHINE
				}
				kill_pop = yes
			}
		}
		while = {
			count = 14
			create_pop = {
				species = last_created_species
			}
		}
		last_created_species = {
			save_global_event_target_as = oppressed_organic_of_@root
			set_species_flag = saved_planet_species
		}
	}
 #####Infiltrators
	if = {
		limit = {
			owner = {
				has_origin = origin_infiltrators
			}
		}
		owner = {
			set_country_flag = main_species_concealed
		}
		#owner_species = { #TODO
		#	set_citizenship_type = {
		#		country = root.owner
		#		type = citizenship_concealment
		#	}
		#}
		set_variable = {
			which = num_natives
			value = 0
		}
		while = {
			limit = {
				num_pops > 5
			}
			random_owned_pop = {
				kill_pop = yes
			}
			change_variable = {
				which = num_natives
				value = 1
			}
		}
		while = {
			count = num_natives
			create_pop = {
				species = last_created_species
			}
		}
		clear_variable = num_natives
		last_created_species = {
			if = {
				limit = {
					NOR = {
						has_citizenship_type = { type = citizenship_full country = root.owner }
						has_citizenship_type = { type = citizenship_limited country = root.owner }
					}
				}
				set_citizenship_type = {
					country = root.owner
					type = citizenship_limited
					cooldown = yes
				}
			}
		}
		owner = { #TODO
		#	country_event = {
		#		id = eo_infiltrators.9 #TODO
		#		days = 5
		#	}
		}
	}
 #####Symbiosis
	if = {
		limit = {
			owner = {
				has_origin = origin_symbiosis
			}
		}
		set_variable = {
			which = num_symbiotes
			value = root.trigger:num_pops
		}
		multiply_variable = {
			which = num_symbiotes
			value = 0.5
		}
		round_variable = num_symbiotes
		while = {
			count = num_symbiotes
			random_owned_pop = {
				kill_pop = yes
			}
		}
		while = {
			count = num_symbiotes
			create_pop = {
				species = last_created_species
			}
		}
		if = {
			limit = {
				owner = {
					has_authority = auth_hive_mind
				}
			}
			last_created_species = {
				change_species_characteristics = {
					add_trait = trait_hive_mind
				}
			}
		}
		clear_variable = num_symbiotes
	}
 #####Next Generation
	if = {
		limit = { owner = { has_origin = origin_next_generation } }
		if = {
			limit = {
				last_created_species = {
					OR = {
						is_species_class = PRE_MAM_SELECTABLE
						is_species_class = PRE_REP_SELECTABLE
						is_species_class = PRE_AVI_SELECTABLE
						is_species_class = PRE_ART_SELECTABLE
						is_species_class = PRE_MOL_SELECTABLE
						is_species_class = PRE_FUN_SELECTABLE
					}
				}
			}
			generate_next_generation_presapients = yes
		}
		else_if = {
			limit = {
				has_planet_flag = planet_earth
			}
			create_species = {
				name = "NAME_Ape"
				plural = "NAME_Ape_plural"
				class = PRE_MAM
				portrait = "pre_mam13"
				homeworld = root
				traits = random
				sapient = no
			}
		}
		else = {
			random_list = {
				10 = {
					create_species = {
						name = random
						class = PRE_MAM
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				10 = {
					create_species = {
						name = random
						class = PRE_REP
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				10 = {
					create_species = {
						name = random
						class = PRE_AVI
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				10 = {
					create_species = {
						name = random
						class = PRE_ART
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				10 = {
					create_species = {
						name = random
						class = PRE_MOL
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				10 = {
					create_species = {
						name = random
						class = PRE_FUN
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				10 = {
					create_species = {
						name = random
						class = PRE_PLANT
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				10 = {
					create_species = {
						name = random
						class = PRE_LITHOID
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				#10 = {
				#	create_species = {
				#		name = random
				#		class = PRE_NECROID
				#		portrait = random
				#		homeworld = root
				#		traits = random
				#		sapient = no
				#	}
				#}
				10 = {
					create_species = {
						name = random
						class = PRE_AQUATIC
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
				10 = {
					create_species = {
						name = random
						class = PRE_TOX
						portrait = random
						homeworld = root
						traits = random
						sapient = no
					}
				}
			}
		}
		if = {
			limit = {
				last_created_species = {
					NOR = {
						has_trait = trait_presapient_starborn
						has_trait = trait_presapient_earthbound
						has_trait = trait_presapient_natural_intellectuals
						has_trait = trait_presapient_proles
						has_trait = trait_presapient_conservative
					}
				}
			}
			last_created_species = {
				random_list = {
					20 = {
						change_species_characteristics ={
							add_trait = trait_presapient_starborn
						}
					}
					20 = {
						change_species_characteristics ={
							add_trait = trait_presapient_earthbound
						}
					}
					20 = {
						change_species_characteristics ={
							add_trait = trait_presapient_natural_intellectuals
						}
					}
					20 = {
						change_species_characteristics ={
							add_trait = trait_presapient_proles
						}
					}
					20 = {
						change_species_characteristics ={
							add_trait = trait_presapient_conservative
						}
					}
				}
			}
		}

 		####Create pops
		while = {
			count = 4
			create_pop = {
				species = last_created_species
			}
		}

		owner = {
			set_country_flag = found_presapients
			if = {
				limit = {
					has_ai_personality_behaviour = multispecies
				}
				set_policy = {
					policy = pre_sapients
					option = pre_sapients_protect
					cooldown = no
				}
			}
			else = {
				set_policy = {
					policy = pre_sapients
					option = pre_sapients_allow
					cooldown = no
				}
			}
		}
	}
 #####Sibling Rivalry
	if = {
		limit = {
			owner = {
				has_origin = origin_sibling_rivalry
			}
		}
		while = {
			count = 3
			random_owned_pop = {
				kill_pop = yes
			}
		}
		last_created_species = {
			set_species_flag = subjugated_species_of_@root.owner
		}
	}
 #####Exiles
	if = {
		limit = {
			owner = {
				has_origin = origin_exiles
			}
		}
		if = {
			limit = {
				owner = { has_valid_civic = civic_machine_assimilator }
			}
			while = {
				limit = {
					count_owned_pop = {
						count > 3
						limit = {
							is_species_class = MACHINE
						}
					}
				}
				random_owned_pop = {
					limit = {
						is_species_class = MACHINE
					}
					kill_pop = yes
				}
			}
			while = {
				limit = {
					count_owned_pop = {
						count > 2
						limit = {
							NOT = { is_species_class = MACHINE }
						}
					}
				}
				random_owned_pop = {
					limit = {
						NOT = { is_species_class = MACHINE }
					}
					kill_pop = yes
				}
			}
		}
		else_if = {
			limit = {
				owner = { has_valid_civic = civic_machine_servitor }
			}
			while = {
				limit = {
					count_owned_pop = {
						count > 4
						limit = {
							is_species_class = MACHINE
						}
					}
				}
				random_owned_pop = {
					limit = {
						is_species_class = MACHINE
					}
					kill_pop = yes
				}
			}
			while = {
				limit = {
					count_owned_pop = {
						count > 1
						limit = {
							NOT = { is_species_class = MACHINE }
						}
					}
				}
				random_owned_pop = {
					limit = {
						NOT = { is_species_class = MACHINE }
					}
					kill_pop = yes
				}
			}
		}
		else = {
			while = {
				limit = {
					num_pops > 5
				}
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
		every_owned_pop = {
			clear_pop_category = yes
		}
	}
 #####Survival of the Fittest
	if = {
		limit = {
			owner = { has_origin = origin_survival_of_the_fittest }
		}
		owner_species = {
			save_global_event_target_as = native_species_of_@root
			set_species_flag = saved_planet_species
		}
	}
 #####Machine creator
	if = {
		limit = {
			owner = { has_origin = origin_machine_creator }
		}
		last_created_species = {
			save_event_target_as = organic_creator_species
		}
		owner = {
			create_leader = {
				class = scientist
				species = event_target:organic_creator_species
				name = random
				skill = 10
				gender = random
				event_leader = no # Leader is allowed to lead factions and win elections
				background_ethic = ethic_materialist
				skip_background_generation = yes
				custom_description = organic_creator_desc
				custom_catch_phrase = organic_creator_catch_phrase
				immortal = no
				hide_age = no

				randomize_traits = yes
				effect = {
					#set_skill = $LEVEL$
					#save_event_target_as = ethic_leader
					set_leader_flag = renowned_leader
					#set_leader_flag = is_in_recruit_window
					#set_variable = { which = leader_pending_negative_traits_unmodified value = 1 }
				}
			}
		}
	}
}

#################################
### Planetary Modifiers and Planets
#################################

eo_modifiers_and_planets = {
 #####Irradiated Evolution
	if = {
		limit = {
			owner = {
				has_origin = origin_irradiated_evolution
			}
		}
		owner = {
			every_owned_planet = {
				limit = { is_capital = no }
				change_pc = rl_habitable_normal
			}
		}
	}
 #####Monster Tamers
	if = {
		limit = {
			owner = {
				has_origin = origin_monster_tamers
			}
		}
		owner = {
			capital_scope = {
				add_modifier = { modifier = titanic_life }
			}
		}
	}
 #####Surival of the Fittest
	if = {
		limit = {
			owner = {
				has_origin = origin_survival_of_the_fittest
			}
		}
		owner = {
			capital_scope = {
				add_modifier = { modifier = death_world }
			}
		}
	}
 #####Stellar Cornucopia
	if = {
		limit = {
			owner = {
				has_origin = origin_stellar_cornucopia
			}
		}
		owner = {
			capital_scope = {
				solar_system = {
				#####Terraforming Candidate
					while = {
						limit = {
							count_system_planet = {
								limit = {
									has_modifier = terraforming_candidate
								}
								count < 2
							}
						}
						eo_assign_terraforming_candidates = yes
					}
					if = {
						limit = {
							has_toxoids = yes
							any_system_planet = {
								is_planet_class = pc_toxic
							}
						}
						random_system_planet = {
							limit = {
								is_planet_class = pc_toxic
							}
							add_modifier = {
								modifier = toxic_terraforming_candidate
							}
						}
					}
				#####Resources
				#####Energy
					system_star = {
						clear_deposits = yes
						set_deposit = d_energy_10
					}
					every_system_planet = {
						limit = {
							has_deposit = d_energy_5
						}
						set_deposit = d_energy_8
					}
					every_system_planet = {
						limit = {
							OR = {
								has_deposit = d_energy_2
								has_deposit = d_energy_3
							}
						}
						random_list = {
							50 = { set_deposit = d_energy_5 }
							50 = { set_deposit = d_energy_6 }
						}
					}
				#####Minerals
					every_system_planet = {
						limit = {
							has_deposit = d_minerals_5
						}
						set_deposit = d_minerals_8
					}
					every_system_planet = {
						limit = {
							OR = {
								has_deposit = d_minerals_2
								has_deposit = d_minerals_3
							}
						}
						random_list = {
							50 = { set_deposit = d_minerals_5 }
							50 = { set_deposit = d_minerals_6 }
						}
					}
				#####Physics
					every_system_planet = {
						limit = {
							OR = {
								has_deposit = d_physics_2
								has_deposit = d_physics_3
							}
						}
						random_list = {
							50 = { set_deposit = d_physics_5 }
							50 = { set_deposit = d_physics_6 }
						}
					}
				#####Society
					every_system_planet = {
						limit = {
							OR = {
								has_deposit = d_society_2
								has_deposit = d_society_3
							}
						}
						random_list = {
							50 = { set_deposit = d_society_5 }
							50 = { set_deposit = d_society_6 }
						}
					}
				#####Engineering
					every_system_planet = {
						limit = {
							OR = {
								has_deposit = d_engineering_2
								has_deposit = d_engineering_3
							}
						}
						random_list = {
							50 = { set_deposit = d_engineering_5 }
							50 = { set_deposit = d_engineering_6 }
						}
					}
				#####Alloys
					random_system_planet = {
						limit = {
							has_deposit = yes
							NOT = { has_planet_flag = ignore_startup_effect }
							OR = {
								has_deposit = d_minerals_5
								has_deposit = d_minerals_6
								has_deposit = d_minerals_8
							}
						}
						add_deposit = d_alloys_2
					}
				#####Exotic Gases
					random_system_planet = {
						limit = {
							has_deposit = no
							NOT = { has_planet_flag = ignore_startup_effect }
							NOR = {
								has_modifier = terraforming_candidate
								has_modifier = toxic_terraforming_candidate
							}
							is_homeworld = no
						}
						random_list = {
							70 = { add_deposit = d_exotic_gases_1 }
							30 = { add_deposit = d_exotic_gases_2 }
						}
						set_planet_flag = stellar_cornucopia_rare_resource_deposit
					}
				#####Rare Crystals
					if = {
						limit = {
							any_system_planet = {
								has_deposit = no
								NOT = { has_planet_flag = ignore_startup_effect }
								NOR = {
									has_modifier = terraforming_candidate
									has_modifier = toxic_terraforming_candidate
								}
								is_homeworld = no
								NOT = { has_planet_flag = stellar_cornucopia_rare_resource_deposit }
							}
						}
						random_system_planet = {
							limit = {
								has_deposit = no
								NOT = { has_planet_flag = ignore_startup_effect }
								NOR = {
									has_modifier = terraforming_candidate
									has_modifier = toxic_terraforming_candidate
								}
								is_homeworld = no
								NOT = { has_planet_flag = stellar_cornucopia_rare_resource_deposit }
							}
							random_list = {
								70 = { add_deposit = d_rare_crystals_1 }
								30 = { add_deposit = d_rare_crystals_2 }
							}
							set_planet_flag = stellar_cornucopia_rare_resource_deposit
						}
					}
					else = {
						random_system_planet = {
							limit = {
								has_planet_flag = stellar_cornucopia_rare_resource_deposit
								NOT = { has_planet_flag = ignore_startup_effect }
								NOR = {
									has_modifier = terraforming_candidate
									has_modifier = toxic_terraforming_candidate
								}
								is_homeworld = no
							}
							random_list = {
								70 = { add_deposit = d_rare_crystals_1 }
								30 = { add_deposit = d_rare_crystals_2 }
							}
							set_planet_flag = stellar_cornucopia_rare_resource_deposit
						}
					}
				#####Volatile Motes
					if = {
						limit = {
							any_system_planet = {
								has_deposit = no
								NOT = { has_planet_flag = ignore_startup_effect }
								NOR = {
									has_modifier = terraforming_candidate
									has_modifier = toxic_terraforming_candidate
								}
								is_homeworld = no
								NOT = { has_planet_flag = stellar_cornucopia_rare_resource_deposit }
							}
						}
						random_system_planet = {
							limit = {
								has_deposit = no
								NOT = { has_planet_flag = ignore_startup_effect }
								NOR = {
									has_modifier = terraforming_candidate
									has_modifier = toxic_terraforming_candidate
								}
								is_homeworld = no
								NOT = { has_planet_flag = stellar_cornucopia_rare_resource_deposit }
							}
							random_list = {
								70 = { add_deposit = d_volatile_motes_1 }
								30 = { add_deposit = d_volatile_motes_2 }
							}
						}
					}
					else = {
						random_system_planet = {
							limit = {
								has_planet_flag = stellar_cornucopia_rare_resource_deposit
								NOT = { has_planet_flag = ignore_startup_effect }
								NOR = {
									has_modifier = terraforming_candidate
									has_modifier = toxic_terraforming_candidate
								}
								is_homeworld = no
							}
							random_list = {
								70 = { add_deposit = d_volatile_motes_1 }
								30 = { add_deposit = d_volatile_motes_2 }
							}
						}
					}
				#####Ensure research deposits
				#####Physics
					if = {
						limit = {
							NOT = {
								any_system_planet = {
									OR = {
										has_deposit = d_physics_5
										has_deposit = d_physics_6
									}
								}
							}
						}
						if = {
							limit = {
								any_system_planet = {
									has_deposit = no
									NOR = {
										has_modifier = terraforming_candidate
										has_modifier = toxic_terraforming_candidate
									}
									is_homeworld = no
								}
							}
							random_system_planet = {
								limit = {
									has_deposit = no
									NOR = {
										has_modifier = terraforming_candidate
										has_modifier = toxic_terraforming_candidate
									}
									is_homeworld = no
								}
								random_list = {
									50 = { add_deposit = d_physics_5 }
									50 = { add_deposit = d_physics_6 }
								}
							}
						}
						else = {
							random_system_planet = {
								limit = {
									has_deposit_for = shipclass_research_station
								}
								random_list = {
									50 = { add_deposit = d_physics_5 }
									50 = { add_deposit = d_physics_6 }
								}
							}
						}
					}
				#####Society
					if = {
						limit = {
							NOT = {
								any_system_planet = {
									OR = {
										has_deposit = d_society_5
										has_deposit = d_society_6
									}
								}
							}
						}
						if = {
							limit = {
								any_system_planet = {
									has_deposit = no
									NOR = {
										has_modifier = terraforming_candidate
										has_modifier = toxic_terraforming_candidate
									}
									is_homeworld = no
								}
							}
							random_system_planet = {
								limit = {
									has_deposit = no
									NOR = {
										has_modifier = terraforming_candidate
										has_modifier = toxic_terraforming_candidate
									}
									is_homeworld = no
								}
								random_list = {
									50 = { add_deposit = d_society_5 }
									50 = { add_deposit = d_society_6 }
								}
							}
						}
						else = {
							random_system_planet = {
								limit = {
									has_deposit_for = shipclass_research_station
								}
								random_list = {
									50 = { add_deposit = d_society_5 }
									50 = { add_deposit = d_society_6 }
								}
							}
						}
					}
				#####Engineering
					if = {
						limit = {
							NOT = {
								any_system_planet = {
									OR = {
										has_deposit = d_engineering_5
										has_deposit = d_engineering_6
									}
								}
							}
						}
						if = {
							limit = {
								any_system_planet = {
									has_deposit = no
									NOR = {
										has_modifier = terraforming_candidate
										has_modifier = toxic_terraforming_candidate
									}
									is_homeworld = no
								}
							}
							random_system_planet = {
								limit = {
									has_deposit = no
									NOR = {
										has_modifier = terraforming_candidate
										has_modifier = toxic_terraforming_candidate
									}
									is_homeworld = no
								}
								random_list = {
									50 = { add_deposit = d_engineering_5 }
									50 = { add_deposit = d_engineering_6 }
								}
							}
						}
						else = {
							random_system_planet = {
								limit = {
									has_deposit_for = shipclass_research_station
								}
								random_list = {
									50 = { add_deposit = d_engineering_5 }
									50 = { add_deposit = d_engineering_6 }
								}
							}
						}
					}
				}
			}
		}
	}
 #####Genius Loci
	#if = {
	#	limit = {
	#		owner = {
	#			has_origin = origin_genius_loci
	#		}
	#	}
	#	owner = {
	#		add_modifier = {
	#			modifier = foreign_biosphere_acclimatization
	#			days = 9125
	#		}
	#	}
	#}
 #####Dragon's Lair
	if = {
		limit = {
			owner = {
				has_origin = origin_dragon_lair
			}
		}
		owner = {
			set_country_flag = dragons_lair_country
		}
		set_planet_flag = ravinax_world
		save_global_event_target_as = ravinax_world
		set_planet_flag = dragon_feed_0
		#planet_event = { id = eo_starship_graveyard.16 days = 27375 random = 3650}
		solar_system = {
			random_system_planet = {
				limit = {
					OR = {
						has_deposit = d_minerals_2
						has_deposit = d_minerals_3
					}
				}
				set_name = "NAME_Ravinax_Nest"
				set_planet_flag = ravinax_lair
				set_planet_flag = ravinax_alive
				save_global_event_target_as = ravinax_lair
				clear_deposits = yes
				add_deposit = d_ravinax_hoard

				create_country = {
					name = "NAME_Ravinax"
					type = guardian_dragon
					flag = {
						icon = {
							category = "zoological"
							file = "flag_zoological_6.dds"
						}
						background= {
							category = "backgrounds"
							file = "00_solid.dds"
						}
						colors={
							"dark_green"
							"dark_green"
							"null"
							"null"
						}
					}
					effect = {
						set_faction_hostility = {
							target = root.owner
							set_hostile = no
							set_neutral = yes
							set_friendly = no
						}
						set_faction_hostility = {
							target = event_target:caravaneer_home_country
							set_hostile = no
							set_neutral = yes
							set_friendly = no
						}
						set_faction_hostility = {
							target = event_target:caravaneer_fleet1_country
							set_hostile = no
							set_neutral = yes
							set_friendly = no
						}
						set_faction_hostility = {
							target = event_target:caravaneer_fleet2_country
							set_hostile = no
							set_neutral = yes
							set_friendly = no
						}
						set_faction_hostility = {
							target = event_target:caravaneer_fleet3_country
							set_hostile = no
							set_neutral = yes
							set_friendly = no
						}
						save_global_event_target_as = ravinax_country
						set_country_flag = ravinax_country
						every_playable_country = {
							establish_communications_no_message = event_target:ravinax_country
						}

						create_fleet = {
							name = "NAME_Ravinax"
							settings = {
								spawn_debris = no
								is_boss = yes
							}
							effect = {
								set_owner = event_target:ravinax_country
								create_ship = {
									name = "NAME_Ravinax"
									design = "NAME_Ravinax"
								}
								save_global_event_target_as = ravinax_fleet
								set_fleet_flag = ravinax
								set_location = {
									target = event_target:ravinax_lair
									distance = 10
									angle = 90
									direction = in_system
								}
								set_fleet_stance = aggressive
								set_aggro_range_measure_from = self
								set_aggro_range = 400
								event_target:ravinax_lair = {
									planet_event = { id = eo_dragons_lair.1 }
								}
								queue_actions = {
									repeat = {
										find_closest_planet = {
											trigger = {
												id = ravinax.1
												is_star = no
												has_planet_flag = ravinax_patrol_1
											}
											found_planet = {
												move_to = this
												orbit_planet = this
												wait = {
													duration = 40
													random = 20
												}
											}
										}
										find_closest_planet = {
											trigger = {
												id = ravinax.2
												is_star = no
												has_planet_flag = ravinax_patrol_2
											}
											found_planet = {
												move_to = this
												orbit_planet = this
												wait = {
													duration = 40
													random = 20
												}
											}
										}
										find_closest_planet = {
											trigger = {
												id = ravinax.3
												is_star = no
												has_planet_flag = ravinax_patrol_3
											}
											found_planet = {
												move_to = this
												orbit_planet = this
												wait = {
													duration = 40
													random = 20
												}
											}
										}
										find_closest_planet = {
											trigger = {
												id = ravinax.4
												has_planet_flag = ravinax_world
											}
											found_planet = {
												move_to = this
												orbit_planet = this
												wait = {
													duration = 70
													random = 20
												}
											}
										}
										find_closest_planet = {
											trigger = {
												id = ravinax.5
												is_star = no
												has_planet_flag = ravinax_patrol_4
											}
											found_planet = {
												move_to = this
												orbit_planet = this
												wait = {
													duration = 40
													random = 20
												}
											}
										}
										find_closest_planet = {
											trigger = {
												id = ravinax.6
												is_star = no
												has_planet_flag = ravinax_patrol_5
											}
											found_planet = {
												move_to = this
												orbit_planet = this
												wait = {
													duration = 40
													random = 20
												}
											}
										}
										find_closest_planet = {
											trigger = {
												id = ravinax.7
												has_planet_flag = ravinax_lair
											}
											found_planet = {
												move_to = this
												orbit_planet = this
												wait = {
													duration = 100
													random = 80
												}
											}
										}
									}
								}
							}
						}
					}
				}
				create_ambient_object = {
					type = "medium_debris_01_object"
					#entity_offset_height = { min = -0 max = -25 }
					location = this
				}
				create_ambient_object = {
					type = "abandoned_ship_object"
					location = this
				}
			}
			create_ambient_object = {
				type = "medium_debris_02_object"
				#entity_offset_height = { min = -0 max = -25 }
				location = this
			}
			create_ambient_object = {
				type = "small_debris_object"
				#entity_offset_height = { min = -0 max = -25 }
				location = this
			}
			create_ambient_object = {
				type = "small_debris_object"
				#entity_offset_height = { min = -0 max = -25 }
				location = this
			}
		}
	}
 #####Starship Graveyard
	if = {
		limit = {
			owner = {
				has_origin = origin_starship_graveyard
			}
		}
		create_ambient_object = {
			type = "medium_debris_01_object"
			#entity_offset_height = { min = -0 max = -25 }
			location = this
		}
	}
 #####Living Planet
	if = {
		limit = {
			owner = {
				has_origin = origin_living_planet
			}
		}
		owner = {
			capital_scope = {
				add_modifier = { modifier = living_planet }
				create_country = {
					name = random
					type = living_planet
					flag = random
					effect = {
						set_name = {
							key = NAME_Living_Planet_2
							variable_string = "[root.GetName]"
						}
						set_custom_capital_location = root
						set_country_flag = suppress_first_contact_comms
						establish_communications_no_message = root.owner
						set_country_flag = living_planet_@root
						root = {
							set_planet_flag = living_planet_of_@prev
						}
						add_trust = {
							amount = 20
							who = root.owner
						}
					}
				}
			}
		}
	}
 #####The Wormhole
	if = {
		limit = {
			owner = {
				has_origin = origin_wormhole
			}
		}
		solar_system = {
			set_star_flag = wormhole_home_of_@root.owner
			set_star_flag = wormhole_origin_home_system
			random_system = {
				limit = {
					distance = {
						min_jumps = 5
					}
					NOT = { has_star_flag = empire_home_system }
				}
				prev = { # done this way to ensure we don't spawn "orphan wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = no
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = no
					orbit_angle = 270
				}
				link_wormholes = prev
				set_star_flag = connected_system_of_@prev
			}
		}
		owner = {
			set_country_flag = encountered_first_wormhole
			add_seen_bypass_type = wormhole
			country_event = { id = eo_wormhole.1 days = 1080 random = 360 }
		}
	}
 #####Sibling Rivalry
	if = {
		limit = {
			owner = {
				has_origin = origin_sibling_rivalry
			}
		}
		add_planet_devastation = 20
		remove_deposit = d_decrepit_dwellings
		if = {###The drawbacks of militarism
			limit = {
				owner = {
					OR = {
						has_ethic = ethic_militarist
						has_ethic = ethic_fanatic_militarist
					}
				}
			}
			add_planet_devastation = 20
			random_deposit = {
				limit = {
					NOR = {
						is_deposit_type = d_bomb_crater
						is_blocker = yes
					}
				}
				remove_deposit = yes
			}
			add_deposit = d_bomb_crater
			if = {
				limit = {
					owner = {
						has_ethic = ethic_fanatic_militarist
					}
				}
				add_planet_devastation = 40
				while = {
					count = 2
					random_deposit = {
						limit = {
							NOR = {
								is_deposit_type = d_bomb_crater
								is_blocker = yes
							}
						}
						remove_deposit = yes
					}
					add_deposit = d_bomb_crater
				}
			}
		}
		solar_system = {
			if = { # Mars
				limit = {
					has_star_flag = sol_system
				}
				random_system_planet = {
					limit = {
						has_modifier = terraforming_candidate
					}
					change_pc = pc_arid
					remove_modifier = terraforming_candidate
					save_event_target_as = sister_planet
				}
			}
			else_if = { # Wet
				limit = {
					root = {
						is_wet = yes
					}
				}
				if = {
					limit = {
						any_system_planet = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_molten
								is_planet_class = pc_toxic
								is_planet_class = pc_frozen
								is_planet_class = pc_barren_cold
							}
						}
					}
					random_system_planet = {
						limit = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_molten
								is_planet_class = pc_toxic
								is_planet_class = pc_frozen
								is_planet_class = pc_barren_cold
							}
						}
						save_event_target_as = sister_planet
					}
				}
				else = {
					random_system_planet = {
						limit = {
							NOR = {
								is_asteroid = yes
								is_star = yes
								is_colonizable = yes
							}
						}
						save_event_target_as = sister_planet
					}
				}
				event_target:sister_planet = {
					if = {
						limit = {
							is_planet_class = pc_molten
						}
						change_pc = pc_desert
					}
					else_if = {
						limit = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_toxic
							}
						}
						random_list = {
							10 = { change_pc = pc_arid }
							10 = { change_pc = pc_desert }
							10 = { change_pc = pc_savannah }
						}
					}
					else = {
						random_list = {
							10 = { change_pc = pc_alpine }
							10 = { change_pc = pc_arctic }
							10 = { change_pc = pc_tundra }
						}
					}
					if = {
						limit = {
							planet_size > 25
						}
						set_planet_size = 25
					}
				}
			}
			else_if = { # Dry
				limit = {
					root = {
						is_dry = yes
					}
				}
				if = {
					limit = {
						any_system_planet = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_toxic
								is_planet_class = pc_frozen
								is_planet_class = pc_barren_cold
							}
						}
					}
					random_system_planet = {
						limit = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_toxic
								is_planet_class = pc_frozen
								is_planet_class = pc_barren_cold
							}
						}
						save_event_target_as = sister_planet
					}
				}
				else = {
					random_system_planet = {
						limit = {
							NOR = {
								is_asteroid = yes
								is_star = yes
								is_colonizable = yes
							}
						}
						save_event_target_as = sister_planet
					}
				}
				event_target:sister_planet = {
					if = {
						limit = {
							is_planet_class = pc_molten
						}
						change_pc = pc_tropical
					}
					else_if = {
						limit = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_toxic
							}
						}
						random_list = {
							10 = { change_pc = pc_continental }
							10 = { change_pc = pc_ocean }
							10 = { change_pc = pc_tropical }
						}
					}
					else_if = {
						limit = {
							is_planet_class = pc_frozen
						}
						random_list = {
							10 = { change_pc = pc_arctic }
							10 = { change_pc = pc_ocean }
						}
					}
					else = {
						random_list = {
							10 = { change_pc = pc_alpine }
							10 = { change_pc = pc_arctic }
							10 = { change_pc = pc_tundra }
						}
					}
					if = {
						limit = {
							planet_size > 25
						}
						set_planet_size = 25
					}
				}
			}
			else = { # Cold
				if = {
					limit = {
						any_system_planet = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_molten
								is_planet_class = pc_toxic
							}
						}
					}
					random_system_planet = {
						limit = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_molten
								is_planet_class = pc_toxic
							}
						}
						save_event_target_as = sister_planet
					}
				}
				else = {
					random_system_planet = {
						limit = {
							NOR = {
								is_asteroid = yes
								is_star = yes
								is_colonizable = yes
							}
						}
						save_event_target_as = sister_planet
					}
				}
				event_target:sister_planet = {
					if = {
						limit = {
							is_planet_class = pc_molten
						}
						change_pc = pc_desert
					}
					else_if = {
						limit = {
							is_planet_class = pc_frozen
						}
						change_pc = pc_ocean
					}
					else_if = {
						limit = {
							OR = {
								is_planet_class = pc_barren_cold
							}
						}
						random_list = {
							10 = { change_pc = pc_continental }
							10 = { change_pc = pc_ocean }
						}
					}
					else_if = {
						limit = {
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_toxic
							}
						}
						random_list = {
							10 = { change_pc = pc_arid }
							10 = { change_pc = pc_desert }
							10 = { change_pc = pc_savannah }
							10 = { change_pc = pc_continental }
							10 = { change_pc = pc_ocean }
							10 = { change_pc = pc_tropical }
						}
					}
					else = {
						random_list = {
							10 = { change_pc = pc_continental }
							10 = { change_pc = pc_ocean }
							10 = { change_pc = pc_tropical }
						}
					}
					if = {
						limit = {
							planet_size > 25
						}
						set_planet_size = 25
					}
				}
			}
			last_created_species = {
				save_event_target_as = conquered_species
				change_species_homeworld = {
					HOMEWORLD = event_target:sister_planet
				}
			}
			### Add trait
			event_target:sister_planet = {
				while = {
					count = 15
					create_pop = {
						species = event_target:conquered_species
					}
					last_created_pop = {
						add_modifier = { modifier = sibling_rivalry_pop_recently_conquered days = 3600 }
						set_pop_flag = needs_ethos_set
					}
				}
				set_owner = root.owner
				set_colony_type = col_default
				generate_start_deposits_and_blockers = yes
				generate_start_buildings_and_districts = yes
				add_planet_devastation = 40
				remove_deposit = d_decrepit_dwellings
				random_deposit = {
					limit = {
						NOR = {
							is_deposit_type = d_bomb_crater
							is_blocker = yes
						}
					}
					remove_deposit = yes
				}
				add_deposit = d_bomb_crater
				if = {###The drawbacks of militarism
					limit = {
						root.owner = {
							OR = {
								has_ethic = ethic_militarist
								has_ethic = ethic_fanatic_militarist
							}
						}
					}
					add_planet_devastation = 40
					random_deposit = {
						limit = {
							NOR = {
								is_deposit_type = d_bomb_crater
								is_blocker = yes
							}
						}
						remove_deposit = yes
					}
					add_deposit = d_bomb_crater
					if = {
						limit = {
							root.owner = {
								has_ethic = ethic_fanatic_militarist
							}
						}
						add_planet_devastation = 40
						while = {
							count = 2
							random_deposit = {
								limit = {
									NOR = {
										is_deposit_type = d_bomb_crater
										is_blocker = yes
									}
								}
								remove_deposit = yes
							}
							add_deposit = d_bomb_crater
						}
					}
				}
				planet_event = { id = eo_sibling_rivalry.1 days = 2 }
				#####################
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_fanatic_materialist
						}
					}
					while = {
						count = 10
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_spiritualist
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_fanatic_spiritualist
						}
					}
					while = {
						count = 10
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_materialist
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_fanatic_spiritualist
						}
					}
					while = {
						count = 10
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_materialist
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_fanatic_xenophile
						}
					}
					while = {
						count = 10
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_xenophobe
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_fanatic_xenophobe
						}
					}
					while = {
						count = 10
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_xenophile
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_fanatic_authoritarian
						}
					}
					while = {
						count = 10
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_egalitarian
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_fanatic_egalitarian
						}
					}
					while = {
						count = 10
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_authoritarian
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_fanatic_militarist
						}
					}
					while = {
						count = 10
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_militarist
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				####################################################
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_materialist
						}
					}
					while = {
						count = 5
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_spiritualist
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_spiritualist
						}
					}
					while = {
						count = 5
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_materialist
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_spiritualist
						}
					}
					while = {
						count = 5
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_materialist
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_xenophile
						}
					}
					while = {
						count = 5
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_xenophobe
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_xenophobe
						}
					}
					while = {
						count = 5
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_xenophile
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_authoritarian
						}
					}
					while = {
						count = 5
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_egalitarian
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_egalitarian
						}
					}
					while = {
						count = 5
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_authoritarian
							remove_pop_flag = needs_ethos_set
						}
					}
				}
				if = {
					limit = {
						root.owner = {
							has_ethic = ethic_militarist
						}
					}
					while = {
						count = 5
						random_owned_pop = {
							limit = {
								has_pop_flag = needs_ethos_set
							}
							pop_change_ethic = ethic_militarist
							remove_pop_flag = needs_ethos_set
						}
					}
				}
			}
		}
	}
 #####Gray Goo
	if = {
		limit = {
			owner = {
				has_origin = origin_gray_goo
			}
		}
		solar_system = {
			random_system_planet = {
				limit = {
					is_asteroid = no
					is_colony = no
					is_star = no
					NOT = { is_planet_class = pc_gas_giant }
				}
				change_pc = pc_gray_goo
				set_name = containment_site_alpha
				clear_deposits = yes
				add_deposit = d_gray_goo_resources_test_site
			}
		}
	}
 #####Exiles
	if = {
		limit = {
			owner = {
				has_origin = origin_exiles
			}
		}
		owner = {
			save_event_target_as = exiles_empire
			random_owned_starbase = {
				save_event_target_as = exile_outpost
			}
			capital_scope = {
				if = {
					limit = {
						is_wet = yes
					}
					while = {
						limit = {
							is_wet = yes
						}
						reroll_random = yes
						change_pc = rl_habitable_normal
					}
				}
				else_if = {
					limit = {
						is_dry = yes
					}
					while = {
						limit = {
							is_dry = yes
						}
						reroll_random = yes
						change_pc = rl_habitable_normal
					}
				}
				else_if = {
					limit = {
						is_cold = yes
					}
					while = {
						limit = {
							is_cold = yes
						}
						reroll_random = yes
						change_pc = rl_habitable_normal
					}
				}
				if = {
					limit = {
						owner = {
							has_country_flag = eo_prescripted_empire_bajeen_fleets
						}
					}
					change_pc = pc_arid
				}
				reroll_deposits = yes
				if = {
					limit = {
						owner = {
							is_machine_empire = no
						}
					}
					add_modifier = { modifier = exile_colonized years = 15 }
				}
				else = {
					add_modifier = { modifier = exile_colonized_machine years = 15 }
				}
				solar_system = {
					every_system_planet = {
						limit = {
							has_planet_flag = starting_mining_target
						}
						remove_planet_flag = starting_mining_target
					}
					every_system_planet = {
						limit = {
							has_planet_flag = starting_research_target
						}
						remove_planet_flag = starting_research_target
					}
					while = {
						count = 5
						create_fleet = {
							effect = {
								set_owner = event_target:exiles_empire
								create_ship = {
									name = random
									design = "NAME_Exile_Ark_Colonizer"
								}
								last_created_ship = {
									set_ship_flag = exiles_ark_fleet
									set_timed_ship_flag = {
										flag = recently_constructed_ark_ship
										years = 25
									}
								}
								set_location = {
									target = event_target:exile_outpost
								}
							}
						}
					}
					if = {
						limit = {
							owner = {
								has_valid_civic = civic_machine_assimilator
							}
						}
						while = {
							count = 2
							random_ship_in_system = {
								limit = {
									is_ship_size = exile_ark_colonizer
								}
								change_species = last_created_species
							}
						}
					}
				}
			}
			random_owned_starbase = {
				set_starbase_size = starbase_outpost
				remove_random_starbase_module = {
					count = 2
				}
				remove_random_starbase_building = {
					count = 1
				}
			}
		}
	}
}