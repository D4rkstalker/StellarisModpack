
ag_alpha_ringworld_swap = {
	optimize_memory
	if = {
		limit = { is_planet_class = pc_ag_ringworld_shrouded }
		ag_change_pc = { ag_planet_class = pc_ag_ringworld_arctic }
		ag_set_ancient_ringworld = {
			ag_color = damaged
			ag_type = habitable
			ag_surface_type = arctic_02
			ag_generate_ruins = yes
		}
		if = { limit = { NOT = { has_deposit = ag_alpha_archive_deposit } } add_deposit = ag_alpha_archive_deposit }
		if = {
			limit = { always = $ag_random_primitives|yes$ }
			reroll_random = yes
			random_list = { 80 = { } 20 = { ag_alpha_ringworld_generate_primitives = yes } }
		}
	}
	else = {
		ag_alpha_ringworld_destroy_colony = yes
		ag_change_pc = { ag_planet_class = pc_ag_ringworld_shrouded }
		ag_set_ancient_ringworld = {
			ag_color = damaged
			ag_type = habitable
			ag_surface_type = shrouded
		}
	}
	ag_alpha_random_reset_locked_system = yes
	if = {
		limit = { solar_system = { exists = space_owner } }
		space_owner = {
			remove_country_flag = ag_alpha_system_locked_value_l_0
			remove_country_flag = ag_alpha_system_locked_value_l_1
			remove_country_flag = ag_alpha_system_locked_value_l_2
			remove_country_flag = ag_alpha_system_locked_value_r_0
			remove_country_flag = ag_alpha_system_locked_value_r_1
			remove_country_flag = ag_alpha_system_locked_value_r_2
		}
	}
}
ag_alpha_ringworld_generate_primitives = {
	optimize_memory
	ag_special_species_exisence_check = yes
	create_country = {
		name = "NAME_ag_alpha_ringworld_primitive_country"
		authority = auth_imperial
		civics = {
			civic = "civic_landed_nobility"
			civic = "civic_flat_world_theory"
		}
		species = event_target:ag_alpha_ringworld_primitive_species
		ethos = {
			ethic = "ethic_authoritarian"
			ethic = "ethic_spiritualist"
			ethic = "ethic_militarist"
		}
		flag = {
			icon = {
				category = "pre_ftl"
				file = "preftl_medieval_age.dds"
			}
			background = {
				category = "backgrounds"
				file = "new_dawn.dds"
			}
			colors = {
				"light_blue"
				"blue"
				"null"
				"null"
			}
		}
		origin = "origin_enlightened"
		type = primitive
	}
	last_created_country = {
		set_country_flag = ag_alpha_ringworld_primitive
		set_country_flag = recently_advanced
		set_country_flag = tech_frozen
		set_country_flag = ag_no_random_devastating_pre_ftl_events
		prev = { set_owner = prev set_controller = prev }
		reroll_random = yes
		random_list = {
			10 = {
				set_country_flag = late_medieval_age
				set_pre_ftl_age = late_medieval_age
				set_graphical_culture = preindustrial_01
				change_country_flag = {
					icon = {
						category = "pre_ftl"
						file = "preftl_medieval_age.dds"
					}
					background = {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors = {
						"light_blue"
						"blue"
						"null"
						"null"
					}
				}
				prev = {
					add_building = ag_primitive_dwellings_3
					add_building = ag_primitive_dwellings_3
					reroll_random = yes
					random_list = {
						90 = { while = { count = 10 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } } }
						10 = {
							while = { count = 9 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } }
							create_pop = { species = event_target:ag_primitive_species }
						}
					}
					while = { count = 3 create_army = { name = "NAME_Primitive_Army" owner = last_created_country species = event_target:ag_alpha_ringworld_primitive_species type = "ag_primitive_army_alt" } }
				}
			}
			10 = {
				set_country_flag = renaissance_age
				set_pre_ftl_age = renaissance_age
				set_graphical_culture = preindustrial_01
				change_country_flag = {
					icon = {
						category = "pre_ftl"
						file = "preftl_renaissance_age.dds"
					}
					background = {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors = {
						"pink"
						"burgundy"
						"null"
						"null"
					}
				}
				prev = {
					add_building = ag_primitive_dwellings_3
					add_building = ag_primitive_dwellings_3
					reroll_random = yes
					random_list = {
						90 = { while = { count = 12 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } } }
						10 = {
							while = { count = 11 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } }
							create_pop = { species = event_target:ag_primitive_species }
						}
					}
					while = { count = 4 create_army = { name = "NAME_Primitive_Army" owner = last_created_country species = event_target:ag_alpha_ringworld_primitive_species type = "ag_primitive_army_alt" } }
				}
			}
			10 = {
				set_country_flag = steam_age
				set_pre_ftl_age = steam_age
				set_graphical_culture = preindustrial_01
				change_country_flag = {
					icon = {
						category = "pre_ftl"
						file = "preftl_steam_age.dds"
					}
					background = {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors = {
						"orange"
						"red"
						"null"
						"null"
					}
				}
				prev = {
					add_building = ag_urban_dwellings_3
					add_building = ag_primitive_mine_3
					add_building = ag_primitive_factory_3
					reroll_random = yes
					random_list = {
						90 = { while = { count = 16 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } } }
						10 = {
							while = { count = 15 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } }
							create_pop = { species = event_target:ag_primitive_species }
						}
					}
					while = { count = 3 create_army = { name = "NAME_Industrial_Army" owner = last_created_country species = event_target:ag_alpha_ringworld_primitive_species type = "ag_primitive_army_2_alt" } }
				}
			}
			10 = {
				set_country_flag = industrial_age
				set_pre_ftl_age = industrial_age
				set_graphical_culture = industrial_01
				change_country_flag = {
					icon = {
						category = "pre_ftl"
						file = "preftl_industrial_age.dds"
					}
					background = {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors = {
						"beige"
						"yellow"
						"null"
						"null"
					}
				}
				prev = {
					add_building = ag_urban_dwellings_3
					add_building = ag_primitive_farm_3
					add_building = ag_primitive_power_plant_3
					add_building = ag_primitive_mine_3
					add_building = ag_primitive_factory_3
					reroll_random = yes
					random_list = {
						90 = { while = { count = 22 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } } }
						10 = {
							while = { count = 20 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } }
							while = { count = 2 create_pop = { species = event_target:ag_primitive_species } }
						}
					}
					create_pre_ftl_blockers = yes
					while = { count = 4 create_army = { name = "NAME_Industrial_Army" owner = last_created_country species = event_target:ag_alpha_ringworld_primitive_species type = "ag_primitive_army_2_alt" } }
				}
			}
			10 = {
				set_country_flag = machine_age
				set_pre_ftl_age = machine_age
				set_graphical_culture = industrial_01
				change_country_flag = {
					icon = {
						category = "pre_ftl"
						file = "preftl_machine_age.dds"
					}
					background = {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors = {
						"yellow"
						"orange"
						"null"
						"null"
					}
				}
				prev = {
					add_building = ag_urban_dwellings_3
					add_building = ag_primitive_farm_3
					add_building = ag_primitive_power_plant_3
					add_building = ag_primitive_mine_3
					add_building = ag_primitive_factory_3
					reroll_random = yes
					random_list = {
						90 = { while = { count = 24 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } } }
						10 = {
							while = { count = 22 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } }
							while = { count = 2 create_pop = { species = event_target:ag_primitive_species } }
						}
					}
					create_pre_ftl_blockers = yes
					while = { count = 5 create_army = { name = "NAME_Industrial_Army" owner = last_created_country species = event_target:ag_alpha_ringworld_primitive_species type = "ag_primitive_army_2_alt" } }
				}
			}
			10 = {
				set_country_flag = atomic_age
				set_pre_ftl_age = atomic_age
				set_graphical_culture = industrial_01
				change_country_flag = {
					icon = {
						category = "pre_ftl"
						file = "preftl_atomic_age.dds"
					}
					background = {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors = {
						"beige"
						"brown"
						"null"
						"null"
					}
				}
				prev = {
					add_building = ag_urban_dwellings_3
					add_building = ag_primitive_farm_3
					add_building = ag_primitive_power_plant_3
					add_building = ag_primitive_mine_3
					add_building = ag_primitive_factory_3
					reroll_random = yes
					random_list = {
						90 = { while = { count = 26 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } } }
						10 = {
							while = { count = 24 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } }
							while = { count = 2 create_pop = { species = event_target:ag_primitive_species } }
						}
					}
					create_pre_ftl_blockers = yes
					while = { count = 4 create_army = { name = "NAME_Industrial_Army" owner = last_created_country species = event_target:ag_alpha_ringworld_primitive_species type = "ag_primitive_army_3_alt" } }
				}
			}
			10 = {
				set_country_flag = early_space_age
				set_pre_ftl_age = early_space_age
				set_graphical_culture = industrial_01
				change_country_flag = {
					icon = {
						category = "pre_ftl"
						file = "preftl_early_space_age.dds"
					}
					background = {
						category = "backgrounds"
						file = "new_dawn.dds"
					}
					colors = {
						"grey"
						"dark_grey"
						"null"
						"null"
					}
				}
				prev = {
					add_building = ag_urban_dwellings_3
					add_building = ag_primitive_farm_3
					add_building = ag_primitive_power_plant_3
					add_building = ag_primitive_mine_3
					add_building = ag_primitive_factory_3
					reroll_random = yes
					random_list = {
						90 = { while = { count = 28 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } } }
						10 = {
							while = { count = 26 create_pop = { species = event_target:ag_alpha_ringworld_primitive_species } }
							while = { count = 2 create_pop = { species = event_target:ag_primitive_species } }
						}
					}
					create_pre_ftl_blockers = yes
					while = { count = 5 create_army = { name = "NAME_Industrial_Army" owner = last_created_country species = event_target:ag_alpha_ringworld_primitive_species type = "ag_primitive_army_3_alt" } }
				}
			}
		}
	}
	add_building = ag_ancient_structure_primitive_3
	if = {
		limit = { NOT = { has_building = ag_ancient_unknown_building } }
		reroll_random = yes
		random_list = { 25 = { add_building = ag_ancient_unknown_building } 75 = { } }
	}
	if = {
		limit = { NOR = { has_building = ag_class_5_singularity has_building = ag_matter_generator has_building = ag_fabrication_facility } }
		reroll_random = yes
		random_list = { 5 = { add_building = ag_class_5_singularity } 5 = { add_building = ag_matter_generator } 5 = { add_building = ag_fabrication_facility } 85 = { } }
	}
	remove_building = building_colony_shelter
	if = {
		limit = { has_planet_flag = ag_alpha_ringworld_extra_species }
		every_galaxy_species = {
			limit = { prev = { has_planet_flag = ag_alpha_ringworld_extra_species_@prev } }
			prev = {
				create_pop = { species = prev }
				last_created_pop = {
					if = { limit = { has_trait = trait_latent_psionic } modify_species = { species = this remove_trait = trait_latent_psionic } }
					if = { limit = { NOT = { has_trait = trait_psionic } } modify_species = { species = this add_trait = trait_psionic } }
					modify_species = { species = this add_trait = trait_presapient_forcefully_devolved add_traits_at_start_of_list = yes effect = { change_species_characteristics = { sapient = no } } }
				}
			}
		}
	}
}
ag_alpha_ringworld_destroy_colony = {
	optimize_memory
	if = {
		limit = {
			is_colony = yes
			num_pops > 0
			any_owned_pop = {
				is_sapient = yes
				NOR = {
					has_trait = trait_hive_mind
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
					species = { OR = {
						has_species_flag = ag_special_species
						prevprev = { has_planet_flag = ag_alpha_ringworld_extra_species_@prev }
					} }
				}
			}
		}
		every_owned_pop = {
			limit = {
				is_sapient = yes
				NOR = {
					has_trait = trait_hive_mind
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
					species = { OR = {
						has_species_flag = ag_special_species
						prevprev = { has_planet_flag = ag_alpha_ringworld_extra_species_@prev }
					} }
				}
			}
			species = { prevprev = {
				if = { limit = { NOT = { has_planet_flag = ag_alpha_ringworld_extra_species } } set_planet_flag = ag_alpha_ringworld_extra_species }
				set_planet_flag = ag_alpha_ringworld_extra_species_@prev
			} }
		}
	}
	remove_all_armies = yes
	add_planet_devastation = -100
	clear_planet_modifiers = yes
	remove_all_buildings = yes
	remove_all_districts = yes
	clear_deposits = yes
	if = { limit = { has_branch_office = yes } close_branch_office = yes }
	destroy_colony = yes
}

ag_alpha_random_reset_locked_system = {
	optimize_memory
	if = {
		limit = { NOT = { has_global_flag = ag_ancient_alpha_guardian_awaken } }
		reroll_random = yes
		random_list = {
			50 = { }
			50 = { every_playable_country = {
				limit = { OR = {
					has_country_flag = ag_alpha_system_locked_value_l_0
					has_country_flag = ag_alpha_system_locked_value_l_1
					has_country_flag = ag_alpha_system_locked_value_l_2
					has_country_flag = ag_alpha_system_locked_value_r_0
					has_country_flag = ag_alpha_system_locked_value_r_1
					has_country_flag = ag_alpha_system_locked_value_r_2
				} }
				remove_country_flag = ag_alpha_system_locked_value_l_0
				remove_country_flag = ag_alpha_system_locked_value_l_1
				remove_country_flag = ag_alpha_system_locked_value_l_2
				remove_country_flag = ag_alpha_system_locked_value_r_0
				remove_country_flag = ag_alpha_system_locked_value_r_1
				remove_country_flag = ag_alpha_system_locked_value_r_2
				remove_country_flag = ag_alpha_system_locator_flag
				remove_country_flag = ag_alpha_system_locator_invert
				set_variable = { which = ag_alpha_system_locator_l_value value = 0 }
				set_variable = { which = ag_alpha_system_locator_r_value value = 0 }
				if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_0_poi } } remove_point_of_interest = ag_alpha_locked_system_0_poi }
				if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_1_poi } } remove_point_of_interest = ag_alpha_locked_system_1_poi }
				if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_2_poi } } remove_point_of_interest = ag_alpha_locked_system_2_poi }
				if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_3_poi } } remove_point_of_interest = ag_alpha_locked_system_3_poi }
				if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_4_poi } } remove_point_of_interest = ag_alpha_locked_system_4_poi }
				if = { limit = { has_event_chain = "ag_alpha_locked_system_chain" } end_event_chain = "ag_alpha_locked_system_chain" }
				country_event = { id = ag_alpha.33 }
			} }
		}
	}
}
ag_randomize_alpha_locked_system_color = {
	optimize_memory
	reroll_random = yes
	random_list = {
		25 = { set_variable = { which = ag_alpha_system_color value = 0 } }
		25 = { set_variable = { which = ag_alpha_system_color value = 1 } }
		25 = { set_variable = { which = ag_alpha_system_color value = 2 } }
		25 = { set_variable = { which = ag_alpha_system_color value = 3 } }
	}
}
ag_alpha_system_locator_find_systems = {
	optimize_memory
	if = {
		limit = { OR = {
			AND = { NOT = { has_country_flag = ag_alpha_system_locator_invert } check_variable = { which = ag_alpha_system_locator_l_value value = 0 } }
			AND = { has_country_flag = ag_alpha_system_locator_invert check_variable = { which = ag_alpha_system_locator_r_value value = 0 } }
		} }
		set_country_flag = ag_alpha_system_locked_value_l_0
	}
	if = {
		limit = { OR = {
			AND = { NOT = { has_country_flag = ag_alpha_system_locator_invert } check_variable = { which = ag_alpha_system_locator_l_value value = 1 } }
			AND = { has_country_flag = ag_alpha_system_locator_invert check_variable = { which = ag_alpha_system_locator_r_value value = 1 } }
		} }
		set_country_flag = ag_alpha_system_locked_value_l_1
	}
	if = {
		limit = { OR = {
			AND = { NOT = { has_country_flag = ag_alpha_system_locator_invert } check_variable = { which = ag_alpha_system_locator_l_value value = 2 } }
			AND = { has_country_flag = ag_alpha_system_locator_invert check_variable = { which = ag_alpha_system_locator_r_value value = 2 } }
		} }
		set_country_flag = ag_alpha_system_locked_value_l_2
	}
	if = {
		limit = { OR = {
			AND = { NOT = { has_country_flag = ag_alpha_system_locator_invert } check_variable = { which = ag_alpha_system_locator_r_value value = 0 } }
			AND = { has_country_flag = ag_alpha_system_locator_invert check_variable = { which = ag_alpha_system_locator_l_value value = 0 } }
		} }
		set_country_flag = ag_alpha_system_locked_value_r_0
	}
	if = {
		limit = { OR = {
			AND = { NOT = { has_country_flag = ag_alpha_system_locator_invert } check_variable = { which = ag_alpha_system_locator_r_value value = 1 } }
			AND = { has_country_flag = ag_alpha_system_locator_invert check_variable = { which = ag_alpha_system_locator_l_value value = 1 } }
		} }
		set_country_flag = ag_alpha_system_locked_value_r_1
	}
	if = {
		limit = { OR = {
			AND = { NOT = { has_country_flag = ag_alpha_system_locator_invert } check_variable = { which = ag_alpha_system_locator_r_value value = 2 } }
			AND = { has_country_flag = ag_alpha_system_locator_invert check_variable = { which = ag_alpha_system_locator_l_value value = 2 } }
		} }
		set_country_flag = ag_alpha_system_locked_value_r_2
	}
	if = {
		limit = { OR = {
			NAND = { exists = event_target:ag_ancient_alpha_shielded_world exists = event_target:ag_ancient_alpha_shielded_world_2 }
			AND = {
				event_target:ag_ancient_alpha_shielded_world = { is_planet_class = pc_ag_ringworld_shrouded }
				event_target:ag_ancient_alpha_shielded_world_2 = { is_planet_class = pc_ag_ringworld_shrouded }
				OR = {
					AND = {
						NOT = { has_country_flag = ag_alpha_system_locator_invert }
						check_variable = { which = ag_alpha_system_locator_l_value value = 0 }
						check_variable = { which = ag_alpha_system_locator_r_value value = 2 }
					}
					AND = {
						has_country_flag = ag_alpha_system_locator_invert
						check_variable = { which = ag_alpha_system_locator_l_value value = 2 }
						check_variable = { which = ag_alpha_system_locator_r_value value = 0 }
					}
				}
			}
			AND = {
				event_target:ag_ancient_alpha_shielded_world = { is_planet_class = pc_ag_ringworld_arctic }
				event_target:ag_ancient_alpha_shielded_world_2 = { is_planet_class = pc_ag_ringworld_arctic }
				OR = {
					AND = {
						NOT = { has_country_flag = ag_alpha_system_locator_invert }
						check_variable = { which = ag_alpha_system_locator_l_value value = 2 }
						check_variable = { which = ag_alpha_system_locator_r_value value = 0 }
					}
					AND = {
						has_country_flag = ag_alpha_system_locator_invert
						check_variable = { which = ag_alpha_system_locator_l_value value = 0 }
						check_variable = { which = ag_alpha_system_locator_r_value value = 2 }
					}
				}
			}
			AND = {
				OR = {
					AND = {
						event_target:ag_ancient_alpha_shielded_world = { is_planet_class = pc_ag_ringworld_arctic }
						event_target:ag_ancient_alpha_shielded_world_2 = { is_planet_class = pc_ag_ringworld_shrouded }
					}
					AND = {
						event_target:ag_ancient_alpha_shielded_world = { is_planet_class = pc_ag_ringworld_shrouded }
						event_target:ag_ancient_alpha_shielded_world_2 = { is_planet_class = pc_ag_ringworld_arctic }
					}
				}
				check_variable = { which = ag_alpha_system_locator_l_value value = 1 }
				check_variable = { which = ag_alpha_system_locator_r_value value = 1 }
			}
		} }
		set_country_flag = ag_alpha_system_locator_flag
	}
	else = { remove_country_flag = ag_alpha_system_locator_flag }
	if = { limit = { exists = event_target:ag_alpha_locked_system_0 } event_target:ag_alpha_locked_system_0 = { remove_star_flag = ag_alpha_locked_system_0 clear_variable = ag_alpha_system_color } clear_global_event_target = ag_alpha_locked_system_0 }
	if = { limit = { exists = event_target:ag_alpha_locked_system_1 } event_target:ag_alpha_locked_system_1 = { remove_star_flag = ag_alpha_locked_system_1 clear_variable = ag_alpha_system_color } clear_global_event_target = ag_alpha_locked_system_1 }
	if = { limit = { exists = event_target:ag_alpha_locked_system_2 } event_target:ag_alpha_locked_system_2 = { remove_star_flag = ag_alpha_locked_system_2 clear_variable = ag_alpha_system_color } clear_global_event_target = ag_alpha_locked_system_2 }
	if = { limit = { exists = event_target:ag_alpha_locked_system_3 } event_target:ag_alpha_locked_system_3 = { remove_star_flag = ag_alpha_locked_system_3 clear_variable = ag_alpha_system_color } clear_global_event_target = ag_alpha_locked_system_3 }
	if = { limit = { exists = event_target:ag_alpha_locked_system_4 } event_target:ag_alpha_locked_system_4 = { remove_star_flag = ag_alpha_locked_system_4 clear_variable = ag_alpha_system_color } clear_global_event_target = ag_alpha_locked_system_4 }
	random_system = {
		limit = { ag_alpha_system_locator_trigger = yes }
		save_global_event_target_as = ag_alpha_locked_system_0
		set_star_flag = ag_alpha_locked_system_0
	}
	if = {
		limit = { NOT = { exists = event_target:ag_alpha_locked_system_0 } }
		random_system = {
			limit = { ag_alpha_system_locator_trigger_fallback = yes }
			save_global_event_target_as = ag_alpha_locked_system_0
			set_star_flag = ag_alpha_locked_system_0
		}
		if = {
			limit = { NOT = { exists = event_target:ag_alpha_locked_system_0 } }
			random_system = {
				limit = { ag_is_ancient_system = no ag_is_mod_special_system = no }
				save_global_event_target_as = ag_alpha_locked_system_0
				set_star_flag = ag_alpha_locked_system_0
			}
			if = {
				limit = { NOT = { exists = event_target:ag_alpha_locked_system_0 } }
				random_system = { save_global_event_target_as = ag_alpha_locked_system_0 set_star_flag = ag_alpha_locked_system_0 }
			}
		}
	}
	random_system = {
		limit = {
			NOT = { has_star_flag = ag_alpha_locked_system_0 }
			ag_alpha_system_locator_trigger = yes
		}
		save_global_event_target_as = ag_alpha_locked_system_1
		set_star_flag = ag_alpha_locked_system_1
	}
	if = {
		limit = { NOT = { exists = event_target:ag_alpha_locked_system_1 } }
		random_system = {
			limit = {
				NOT = { has_star_flag = ag_alpha_locked_system_0 }
				ag_alpha_system_locator_trigger_fallback = yes
			}
			save_global_event_target_as = ag_alpha_locked_system_1
			set_star_flag = ag_alpha_locked_system_1
		}
		if = {
			limit = { NOT = { exists = event_target:ag_alpha_locked_system_1 } }
			random_system = {
				limit = {
					NOT = { has_star_flag = ag_alpha_locked_system_0 }
					ag_is_ancient_system = no ag_is_mod_special_system = no
				}
				save_global_event_target_as = ag_alpha_locked_system_1
				set_star_flag = ag_alpha_locked_system_1
			}
			if = {
				limit = { NOT = { exists = event_target:ag_alpha_locked_system_1 } }
				random_system = {
					limit = { NOT = { has_star_flag = ag_alpha_locked_system_0 } }
					save_global_event_target_as = ag_alpha_locked_system_1
					set_star_flag = ag_alpha_locked_system_1
				}
			}
		}
	}
	random_system = {
		limit = {
			NOR = {
				has_star_flag = ag_alpha_locked_system_0
				has_star_flag = ag_alpha_locked_system_1
			}
			ag_alpha_system_locator_trigger = yes
		}
		save_global_event_target_as = ag_alpha_locked_system_2
		set_star_flag = ag_alpha_locked_system_2
	}
	if = {
		limit = { NOT = { exists = event_target:ag_alpha_locked_system_2 } }
		random_system = {
			limit = {
				NOR = {
					has_star_flag = ag_alpha_locked_system_0
					has_star_flag = ag_alpha_locked_system_1
				}
				ag_alpha_system_locator_trigger_fallback = yes
			}
			save_global_event_target_as = ag_alpha_locked_system_2
			set_star_flag = ag_alpha_locked_system_2
		}
		if = {
			limit = { NOT = { exists = event_target:ag_alpha_locked_system_2 } }
			random_system = {
				limit = {
					NOR = {
						has_star_flag = ag_alpha_locked_system_0
						has_star_flag = ag_alpha_locked_system_1
					}
					ag_is_ancient_system = no ag_is_mod_special_system = no
				}
				save_global_event_target_as = ag_alpha_locked_system_2
				set_star_flag = ag_alpha_locked_system_2
			}
			if = {
				limit = { NOT = { exists = event_target:ag_alpha_locked_system_2 } }
				random_system = {
					limit = { NOR = {
						has_star_flag = ag_alpha_locked_system_0
						has_star_flag = ag_alpha_locked_system_1
					} }
					save_global_event_target_as = ag_alpha_locked_system_2
					set_star_flag = ag_alpha_locked_system_2
				}
			}
		}
	}
	random_system = {
		limit = {
			NOR = {
				has_star_flag = ag_alpha_locked_system_0
				has_star_flag = ag_alpha_locked_system_1
				has_star_flag = ag_alpha_locked_system_2
			}
			ag_alpha_system_locator_trigger = yes
		}
		save_global_event_target_as = ag_alpha_locked_system_3
		set_star_flag = ag_alpha_locked_system_3
	}
	if = {
		limit = { NOT = { exists = event_target:ag_alpha_locked_system_3 } }
		random_system = {
			limit = {
				NOR = {
					has_star_flag = ag_alpha_locked_system_0
					has_star_flag = ag_alpha_locked_system_1
					has_star_flag = ag_alpha_locked_system_2
				}
				ag_alpha_system_locator_trigger_fallback = yes
			}
			save_global_event_target_as = ag_alpha_locked_system_3
			set_star_flag = ag_alpha_locked_system_3
		}
		if = {
			limit = { NOT = { exists = event_target:ag_alpha_locked_system_3 } }
			random_system = {
				limit = {
					NOR = {
						has_star_flag = ag_alpha_locked_system_0
						has_star_flag = ag_alpha_locked_system_1
						has_star_flag = ag_alpha_locked_system_2
					}
					ag_is_ancient_system = no ag_is_mod_special_system = no
				}
				save_global_event_target_as = ag_alpha_locked_system_3
				set_star_flag = ag_alpha_locked_system_3
			}
			if = {
				limit = { NOT = { exists = event_target:ag_alpha_locked_system_3 } }
				random_system = {
					limit = { NOR = {
						has_star_flag = ag_alpha_locked_system_0
						has_star_flag = ag_alpha_locked_system_1
						has_star_flag = ag_alpha_locked_system_2
					} }
					save_global_event_target_as = ag_alpha_locked_system_3
					set_star_flag = ag_alpha_locked_system_3
				}
			}
		}
	}
	random_system = {
		limit = {
			NOR = {
				has_star_flag = ag_alpha_locked_system_0
				has_star_flag = ag_alpha_locked_system_1
				has_star_flag = ag_alpha_locked_system_2
				has_star_flag = ag_alpha_locked_system_3
			}
			ag_alpha_system_locator_trigger = yes
		}
		save_global_event_target_as = ag_alpha_locked_system_4
		set_star_flag = ag_alpha_locked_system_4
	}
	if = {
		limit = { NOT = { exists = event_target:ag_alpha_locked_system_4 } }
		random_system = {
			limit = {
				NOR = {
					has_star_flag = ag_alpha_locked_system_0
					has_star_flag = ag_alpha_locked_system_1
					has_star_flag = ag_alpha_locked_system_2
					has_star_flag = ag_alpha_locked_system_3
				}
				ag_alpha_system_locator_trigger_fallback = yes
			}
			save_global_event_target_as = ag_alpha_locked_system_4
			set_star_flag = ag_alpha_locked_system_4
		}
		if = {
			limit = { NOT = { exists = event_target:ag_alpha_locked_system_4 } }
			random_system = {
				limit = {
					NOR = {
						has_star_flag = ag_alpha_locked_system_0
						has_star_flag = ag_alpha_locked_system_1
						has_star_flag = ag_alpha_locked_system_2
						has_star_flag = ag_alpha_locked_system_3
					}
					ag_is_ancient_system = no ag_is_mod_special_system = no
				}
				save_global_event_target_as = ag_alpha_locked_system_4
				set_star_flag = ag_alpha_locked_system_4
			}
			if = {
				limit = { NOT = { exists = event_target:ag_alpha_locked_system_4 } }
				random_system = {
					limit = { NOR = {
						has_star_flag = ag_alpha_locked_system_0
						has_star_flag = ag_alpha_locked_system_1
						has_star_flag = ag_alpha_locked_system_2
						has_star_flag = ag_alpha_locked_system_3
					} }
					save_global_event_target_as = ag_alpha_locked_system_4
					set_star_flag = ag_alpha_locked_system_4
				}
			}
		}
	}
	event_target:ag_alpha_locked_system_0 = { ag_randomize_alpha_locked_system_color = yes }
	event_target:ag_alpha_locked_system_1 = { ag_randomize_alpha_locked_system_color = yes }
	event_target:ag_alpha_locked_system_2 = { ag_randomize_alpha_locked_system_color = yes }
	event_target:ag_alpha_locked_system_3 = { ag_randomize_alpha_locked_system_color = yes }
	event_target:ag_alpha_locked_system_4 = { ag_randomize_alpha_locked_system_color = yes }
	if = { limit = { NOT = { has_event_chain = "ag_alpha_locked_system_chain" } } begin_event_chain = { event_chain = "ag_alpha_locked_system_chain" target = this } }
	if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_0_poi } } remove_point_of_interest = ag_alpha_locked_system_0_poi }
	if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_1_poi } } remove_point_of_interest = ag_alpha_locked_system_1_poi }
	if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_2_poi } } remove_point_of_interest = ag_alpha_locked_system_2_poi }
	if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_3_poi } } remove_point_of_interest = ag_alpha_locked_system_3_poi }
	if = { limit = { has_point_of_interest = { poi = ag_alpha_locked_system_4_poi } } remove_point_of_interest = ag_alpha_locked_system_4_poi }
	create_point_of_interest = {
		id = ag_alpha_locked_system_0_poi
		name = ag_alpha_locked_system_0_poi
		desc = ag_alpha_locked_system_desc
		event_chain = "ag_alpha_locked_system_chain"
		location = event_target:ag_alpha_locked_system_0.star
	}
	create_point_of_interest = {
		id = ag_alpha_locked_system_1_poi
		name = ag_alpha_locked_system_1_poi
		desc = ag_alpha_locked_system_desc
		event_chain = "ag_alpha_locked_system_chain"
		location = event_target:ag_alpha_locked_system_1.star
	}
	create_point_of_interest = {
		id = ag_alpha_locked_system_2_poi
		name = ag_alpha_locked_system_2_poi
		desc = ag_alpha_locked_system_desc
		event_chain = "ag_alpha_locked_system_chain"
		location = event_target:ag_alpha_locked_system_2.star
	}
	create_point_of_interest = {
		id = ag_alpha_locked_system_3_poi
		name = ag_alpha_locked_system_3_poi
		desc = ag_alpha_locked_system_desc
		event_chain = "ag_alpha_locked_system_chain"
		location = event_target:ag_alpha_locked_system_3.star
	}
	create_point_of_interest = {
		id = ag_alpha_locked_system_4_poi
		name = ag_alpha_locked_system_4_poi
		desc = ag_alpha_locked_system_desc
		event_chain = "ag_alpha_locked_system_chain"
		location = event_target:ag_alpha_locked_system_4.star
	}
}
ag_alpha_randomize_ancient_record = {
	optimize_memory
	if = { limit = { has_country_flag = ag_alpha_titan_record_1 } remove_country_flag = ag_alpha_titan_record_1 }
	if = { limit = { has_country_flag = ag_alpha_titan_record_2 } remove_country_flag = ag_alpha_titan_record_2 }
	if = { limit = { has_country_flag = ag_alpha_titan_record_3 } remove_country_flag = ag_alpha_titan_record_3 }
	if = { limit = { has_country_flag = ag_alpha_titan_record_4 } remove_country_flag = ag_alpha_titan_record_4 }
	if = { limit = { has_country_flag = ag_alpha_titan_record_5 } remove_country_flag = ag_alpha_titan_record_5 }
	if = { limit = { has_country_flag = ag_alpha_titan_record_6 } remove_country_flag = ag_alpha_titan_record_6 }
	if = { limit = { has_country_flag = ag_alpha_titan_record_7 } remove_country_flag = ag_alpha_titan_record_7 }
	reroll_random = yes
	random_list = {
		10 = { while = { count = 3 ag_alpha_randomize_ancient_record_round = yes } }
		10 = { while = { count = 4 ag_alpha_randomize_ancient_record_round = yes } }
		10 = { while = { count = 5 ag_alpha_randomize_ancient_record_round = yes } }
		10 = { while = { count = 6 ag_alpha_randomize_ancient_record_round = yes } }
	}
	if = {
		limit = { NOR = {
			has_country_flag = ag_alpha_titan_record_1
			has_country_flag = ag_alpha_titan_record_2
			has_country_flag = ag_alpha_titan_record_3
			has_country_flag = ag_alpha_titan_record_4
			has_country_flag = ag_alpha_titan_record_5
			has_country_flag = ag_alpha_titan_record_6
			has_country_flag = ag_alpha_titan_record_7
		} }
		reroll_random = yes
		random_list = {
			10 = { set_country_flag = ag_alpha_titan_record_1 clear_variable = ag_alpha_titan_record_1 }
			10 = { set_country_flag = ag_alpha_titan_record_2 clear_variable = ag_alpha_titan_record_2 }
			10 = { set_country_flag = ag_alpha_titan_record_3 clear_variable = ag_alpha_titan_record_3 }
			10 = { set_country_flag = ag_alpha_titan_record_4 clear_variable = ag_alpha_titan_record_4 }
			10 = { set_country_flag = ag_alpha_titan_record_5 clear_variable = ag_alpha_titan_record_5 }
			10 = { set_country_flag = ag_alpha_titan_record_6 clear_variable = ag_alpha_titan_record_6 }
			10 = { set_country_flag = ag_alpha_titan_record_7 clear_variable = ag_alpha_titan_record_7 }
		}
	}
}
ag_alpha_randomize_ancient_record_round = {
	optimize_memory
	reroll_random = yes
	random_list = {
		10 = { modifier = { factor = 0.25 has_country_flag = ag_alpha_titan_record_1 } ag_alpha_randomize_ancient_record_round_1 = { ag_index = 1 } }
		10 = { modifier = { factor = 0.25 has_country_flag = ag_alpha_titan_record_2 } ag_alpha_randomize_ancient_record_round_1 = { ag_index = 2 } }
		10 = { modifier = { factor = 0.25 has_country_flag = ag_alpha_titan_record_3 } ag_alpha_randomize_ancient_record_round_1 = { ag_index = 3 } }
		10 = { modifier = { factor = 0.25 has_country_flag = ag_alpha_titan_record_4 } ag_alpha_randomize_ancient_record_round_1 = { ag_index = 4 } }
		10 = { modifier = { factor = 0.25 has_country_flag = ag_alpha_titan_record_5 } ag_alpha_randomize_ancient_record_round_1 = { ag_index = 5 } }
		10 = { modifier = { factor = 0.25 has_country_flag = ag_alpha_titan_record_6 } ag_alpha_randomize_ancient_record_round_1 = { ag_index = 6 } }
		10 = { modifier = { factor = 0.25 has_country_flag = ag_alpha_titan_record_7 } ag_alpha_randomize_ancient_record_round_1 = { ag_index = 7 } }
	}
}
ag_alpha_randomize_ancient_record_round_1 = {
	optimize_memory
	reroll_random = yes
	random_list = {
		50 = { change_variable = { which = ag_alpha_titan_record_$ag_index$ value = 1 } }
		50 = {
			modifier = { add = 50 is_variable_set = ag_alpha_titan_record_$ag_index$ check_variable = { which = ag_alpha_titan_record_$ag_index$ value = 1 } }
			modifier = { add = 50 is_variable_set = ag_alpha_titan_record_$ag_index$ check_variable = { which = ag_alpha_titan_record_$ag_index$ value = 2 } }
			modifier = { add = 50 is_variable_set = ag_alpha_titan_record_$ag_index$ check_variable = { which = ag_alpha_titan_record_$ag_index$ value = 3 } }
			modifier = { add = 50 is_variable_set = ag_alpha_titan_record_$ag_index$ check_variable = { which = ag_alpha_titan_record_$ag_index$ value = 4 } }
			set_country_flag = ag_alpha_titan_record_$ag_index$
			clear_variable = ag_alpha_titan_record_$ag_index$
		}
	}
}

ag_alpha_pop_gain_psionic_trait = {
	optimize_memory
	random_owned_pop = {
		limit = {
			is_sapient = yes
			NOR = {
				has_trait = trait_machine_unit
				has_trait = trait_mechanical
				has_trait = trait_hive_mind
				has_trait = trait_psionic
				has_trait = trait_latent_psionic
				has_trait = trait_cybernetic
			}
		}
		reroll_random = yes
		random_list = {
			10 = { modify_species = { species = this add_trait = trait_latent_psionic } }
			10 = { modify_species = { species = this add_trait = trait_psionic } }
		}
	}
}
ag_alpha_psionic_pop_side_effect = {
	optimize_memory
	random_owned_pop = {
		limit = {
			is_sapient = yes
			OR = {
				has_trait = trait_psionic
				has_trait = trait_latent_psionic
			}
			NAND = {
				has_trait = trait_intelligent
				has_trait = trait_venerable
				has_trait = trait_delicious
				has_trait = trait_decadent
				has_trait = trait_nerve_stapled
				has_trait = trait_syncretic_proles
			}
		}
		reroll_random = yes
		random_list = {
			10 = { if = { limit = { NOT = { has_trait = trait_intelligent } } modify_species = { species = this add_trait = trait_intelligent } } }
			10 = {
				if = {
					limit = { OR = { has_trait = trait_fleeting has_trait = trait_fleeting_lithoid } }
					if = { limit = { has_trait = trait_fleeting } modify_species = { species = this remove_trait = trait_fleeting } }
					if = { limit = { has_trait = trait_fleeting_lithoid } modify_species = { species = this remove_trait = trait_fleeting_lithoid } }
				}
				else_if = { limit = { NOT = { has_trait = trait_enduring } } modify_species = { species = this add_trait = trait_enduring } }
				else_if = { limit = { NOT = { has_trait = trait_venerable } } modify_species = { species = this add_trait = trait_venerable } }
			}
			10 = { if = { limit = { NOT = { has_trait = trait_delicious } } modify_species = { species = this add_trait = trait_delicious } } }
			10 = { if = { limit = { NOT = { has_trait = trait_decadent } } modify_species = { species = this add_trait = trait_decadent } } }
			10 = { if = { limit = { NOT = { has_trait = trait_nerve_stapled } } modify_species = { species = this add_trait = trait_nerve_stapled } } }
			10 = { if = { limit = { NOT = { has_trait = trait_syncretic_proles } } modify_species = { species = this add_trait = trait_syncretic_proles } } }
			10 = { modify_species = { species = this add_trait = trait_presapient_forcefully_devolved add_traits_at_start_of_list = yes effect = { change_species_characteristics = { sapient = no } } } }
		}
	}
}

ag_alpha_psionic_conduit_produce_switch = {
	optimize_memory
	event_target:ag_psionic_conduit_megastructure = { 
		change_variable = { which = ag_alpha_psionic_conduit_stability value = value:ag_alpha_psionic_conduit_unstability|ag_resource|$ag_resource$| }
		if = {
			limit = { is_variable_set = ag_alpha_psionic_conduit_$ag_resource$_percent }
			set_variable = { which = ag_alpha_psionic_conduit_$ag_resource$_percent_bak value = ag_alpha_psionic_conduit_$ag_resource$_percent }
			clear_variable = ag_alpha_psionic_conduit_$ag_resource$_percent
			set_megastructure_flag = ag_psionic_conduit_no_produce_$ag_resource$
			subtract_variable = { which = ag_alpha_psionic_conduit_used_capacity value = ag_alpha_psionic_conduit_$ag_resource$_percent_bak }
		}
		else_if = {
			limit = { is_variable_set = ag_alpha_psionic_conduit_$ag_resource$_percent_bak }
			set_variable = { which = ag_alpha_psionic_conduit_$ag_resource$_percent value = ag_alpha_psionic_conduit_$ag_resource$_percent_bak }
			clear_variable = ag_alpha_psionic_conduit_$ag_resource$_percent_bak
			remove_megastructure_flag = ag_psionic_conduit_no_produce_$ag_resource$
			change_variable = { which = ag_alpha_psionic_conduit_used_capacity value = ag_alpha_psionic_conduit_$ag_resource$_percent }
			if = {
				limit = { check_variable = { which = ag_alpha_psionic_conduit_used_capacity value > 100 } }
				while = {
					limit = { check_variable = { which = ag_alpha_psionic_conduit_used_capacity value > 100 } }
					subtract_variable = { which = ag_alpha_psionic_conduit_used_capacity value = 1 }
					subtract_variable = { which = ag_alpha_psionic_conduit_$ag_resource$_percent value = 1 }
				}
			}
		}
		else_if = {
			limit = { always = yes }
			set_variable = { which = ag_alpha_psionic_conduit_$ag_resource$_percent value = 0 }
			remove_megastructure_flag = ag_psionic_conduit_no_produce_$ag_resource$
		}
		subtract_variable = { which = ag_alpha_psionic_conduit_stability value = value:ag_alpha_psionic_conduit_unstability|ag_resource|$ag_resource$| }
		ag_alpha_psionic_conduit_refresh = yes
	}
}
ag_alpha_psionic_conduit_produce_switch_alt = {
	optimize_memory
	event_target:ag_psionic_conduit_megastructure = { 
		if = {
			limit = { is_variable_set = ag_alpha_psionic_conduit_$ag_resource$_spend }
			set_variable = { which = ag_alpha_psionic_conduit_$ag_resource$_spend_bak value = ag_alpha_psionic_conduit_$ag_resource$_spend }
			clear_variable = ag_alpha_psionic_conduit_$ag_resource$_spend
			set_megastructure_flag = ag_psionic_conduit_no_produce_$ag_resource$
			subtract_variable = { which = ag_alpha_psionic_conduit_used_capacity value = ag_alpha_psionic_conduit_$ag_resource$_spend_bak }
		}
		else_if = {
			limit = { is_variable_set = ag_alpha_psionic_conduit_$ag_resource$_spend_bak }
			set_variable = { which = ag_alpha_psionic_conduit_$ag_resource$_spend value = ag_alpha_psionic_conduit_$ag_resource$_spend_bak }
			clear_variable = ag_alpha_psionic_conduit_$ag_resource$_spend_bak
			remove_megastructure_flag = ag_psionic_conduit_no_produce_$ag_resource$
			change_variable = { which = ag_alpha_psionic_conduit_used_capacity value = ag_alpha_psionic_conduit_$ag_resource$_spend }
			if = {
				limit = { check_variable = { which = ag_alpha_psionic_conduit_used_capacity value > value:ag_alpha_psionic_conduit_capacity } }
				while = {
					limit = { check_variable = { which = ag_alpha_psionic_conduit_used_capacity value > value:ag_alpha_psionic_conduit_capacity } }
					subtract_variable = { which = ag_alpha_psionic_conduit_used_capacity value = 1 }
					subtract_variable = { which = ag_alpha_psionic_conduit_$ag_resource$_spend value = 1 }
				}
			}
		}
		else_if = {
			limit = { always = yes }
			set_variable = { which = ag_alpha_psionic_conduit_$ag_resource$_spend value = 0 }
			remove_megastructure_flag = ag_psionic_conduit_no_produce_$ag_resource$
		}
		ag_alpha_psionic_conduit_refresh = yes
	}
}
ag_alpha_psionic_conduit_calculate_unstable_effect = {
	optimize_memory
	if = {
		limit = { is_variable_set = ag_alpha_psionic_conduit_$ag_resource$_percent }
		subtract_variable = { which = ag_alpha_psionic_conduit_stability value = value:ag_alpha_psionic_conduit_unstability|ag_resource|$ag_resource$| }
	}
}
ag_alpha_psionic_conduit_calculate_stability = {
	optimize_memory
	set_variable = { which = ag_alpha_psionic_conduit_stability value = @ag_alpha_psionic_conduit_base_stability }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = energy }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = minerals }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = food }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = consumer_goods }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = alloys }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = volatile_motes }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = exotic_gases }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = rare_crystals }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = sr_living_metal }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = nanites }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = sr_dark_matter }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = sr_zro }
	ag_alpha_psionic_conduit_calculate_unstable_effect = { ag_resource = minor_artifacts }
	change_variable = { which = ag_alpha_psionic_conduit_stability value = value:ag_alpha_psionic_conduit_stability_buff }
	if = {
		limit = { check_variable = { which = ag_alpha_psionic_conduit_stability value <= 0 } }
		set_variable = { which = ag_alpha_psionic_conduit_stability value = 0 }
	}
	if = {
		limit = { check_variable = { which = ag_alpha_psionic_conduit_stability value >= 100 } }
		set_variable = { which = ag_alpha_psionic_conduit_stability value = 100 }
	}
}
ag_alpha_psionic_conduit_refresh = {
	optimize_memory
	set_variable = { which = ag_alpha_psionic_conduit_stability_spend_expectation value = value:ag_alpha_psionic_conduit_stability_buff }
	set_variable = { which = ag_alpha_psionic_conduit_energy_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|energy| }
	set_variable = { which = ag_alpha_psionic_conduit_minerals_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|minerals| }
	set_variable = { which = ag_alpha_psionic_conduit_food_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|food| }
	set_variable = { which = ag_alpha_psionic_conduit_consumer_goods_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|consumer_goods| }
	set_variable = { which = ag_alpha_psionic_conduit_alloys_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|alloys| }
	set_variable = { which = ag_alpha_psionic_conduit_volatile_motes_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|volatile_motes| }
	set_variable = { which = ag_alpha_psionic_conduit_exotic_gases_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|exotic_gases| }
	set_variable = { which = ag_alpha_psionic_conduit_rare_crystals_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|rare_crystals| }
	set_variable = { which = ag_alpha_psionic_conduit_sr_living_metal_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|sr_living_metal| }
	set_variable = { which = ag_alpha_psionic_conduit_nanites_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|nanites| }
	set_variable = { which = ag_alpha_psionic_conduit_sr_dark_matter_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|sr_dark_matter| }
	set_variable = { which = ag_alpha_psionic_conduit_sr_zro_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|sr_zro| }
	set_variable = { which = ag_alpha_psionic_conduit_minor_artifacts_expectation value = value:ag_alpha_psionic_conduit_produce|ag_resource|minor_artifacts| }
}

ag_alpha_situation_reward = {
	optimize_memory
	if = {
		limit = { NOT = { has_country_flag = ag_alpha_131_fired } }
		set_country_flag = ag_alpha_131_fired
		country_event = { id = ag_alpha.131 days = 5 random = 5 }
	}
	else = {
		reroll_random = yes
		random_list = {
			10 = {
				modifier = { factor = 0 has_country_flag = ag_alpha_132_fired }
				set_country_flag = ag_alpha_132_fired
				country_event = { id = ag_alpha.132 days = 5 random = 5 }
			}
			10 = {
				modifier = { factor = 0 has_country_flag = ag_alpha_135_fired }
				set_country_flag = ag_alpha_135_fired
				country_event = { id = ag_alpha.135 days = 5 random = 5 }
			}
			10 = {
				modifier = { factor = 0 has_country_flag = ag_alpha_138_fired }
				set_country_flag = ag_alpha_138_fired
				country_event = { id = ag_alpha.138 days = 5 random = 5 }
			}
		}
	}
	if = {
		limit = {
			has_country_flag = ag_alpha_131_fired
			has_country_flag = ag_alpha_132_fired
			has_country_flag = ag_alpha_135_fired
			has_country_flag = ag_alpha_138_fired
			NOT = { has_country_flag = ag_alpha_151_fired }
		}
		set_country_flag = ag_alpha_151_fired
		country_event = { id = ag_alpha.151 days = 15 random = 5 }
	}
	else_if = {
		limit = { NOT = { has_country_flag = ag_alpha_151_fired } }
		reroll_random = yes
		random_list = {
			50 = { }
			50 = {
				set_country_flag = ag_alpha_151_fired
				country_event = { id = ag_alpha.151 days = 15 random = 5 }
			}
		}
	}
}
