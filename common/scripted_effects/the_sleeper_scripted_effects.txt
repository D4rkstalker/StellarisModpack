#create species
create_sleeper_food_1 = {
	create_species = {
		name = random
		class = random_non_machine
		portrait = random
		traits = {
			trait = random_traits
			trait = "trait_maximum_food_yield"
			trait = "trait_fertile"
			trait = "trait_delicious"
		}
	}
	last_created_species = {
		set_species_flag = hive_livestock
	}
}

create_sleeper_food_2 = {
	create_species = {
		name = random
		class = random_non_machine
		portrait = random
		traits = {
			trait = random_traits
			trait = "trait_tasty_smartipants"
			trait = "trait_delicious"
		}
	}
	last_created_species = {
		set_species_flag = hive_livestock
	}
}

create_sleeper_food_3 = {
	create_species = {
		name = random
		class = random_non_machine
		portrait = random
		traits = {
			trait = random_traits
			trait = "trait_tasty_psionics"
			trait = "trait_delicious"
		}
	}
	last_created_species = {
		set_species_flag = hive_livestock
	}
}

create_sleeper_food_4 = {
	create_species = {
		name = random
		class = random_non_machine
		portrait = random
		traits = {
			trait = random_traits
			trait = "trait_tasty_nutritious"
			trait = "trait_delicious"
		}
	}
	last_created_species = {
		set_species_flag = hive_livestock
	}
}

#deposit randomizer for the drone countries
create_random_drone_deposit = {
	random_list = {
		30 = {
			add_deposit = d_sleeper_hive_remnants
			add_deposit = d_betharian_deposit
		}
		10 = {
			add_deposit = d_sleeper_hive_remnants
			add_deposit = d_alien_pets_deposit
		}
		10 = {
			add_deposit = d_dust_caverns
			add_deposit = d_bubbling_swamp
		}
		10 = {
			add_deposit = d_bubbling_swamp
			add_deposit = d_crystalline_caverns
		}
		10 = {
			add_deposit = d_crystalline_caverns
			add_deposit = d_dust_caverns
		}
		10 = {
			add_deposit = d_dust_desert
		}
		10 = {
			add_deposit = d_fuming_bog
		}
		10 = {
			add_deposit = d_crystal_forest
		}
		20 = {
			add_deposit = d_dust_caverns
			add_deposit = d_bubbling_swamp
			add_deposit = d_crystalline_caverns
		}
		5 = {
			add_deposit = d_sleeper_hive_remnants
			add_deposit = d_betharian_deposit
			add_deposit = d_betharian_deposit
		}
		5 = {
			add_deposit = d_crystalline_caverns
			add_deposit = d_fuming_bog
			add_deposit = d_dust_desert
		}
	}
}

#starbases
create_sleeper_platform = {
	create_ship = {
		name = random
		design = "NAME_Eye"
		graphical_culture = owner
	}
}

create_sleeper_home_citadel = {
	create_starbase = {
		size = "starbase_citadel"

		module = "shipyard"
		module = "shipyard"
		module = "shipyard"			
		module = "hangar_bay"
		module = "gun_battery"
		module = "gun_battery"		

		building = "target_uplink_computer"
		building = "defense_grid"
		building = "colossus_yards"
		building = "titan_yards"
		
		effect = {
			while = {
				count = 10
				create_sleeper_platform = yes
			}	
		}
	}
}

create_sleeper_citadel = {
	create_starbase = {
		size = "starbase_citadel"

		module = "shipyard"
		module = "anchorage"
		module = "anchorage"
		module = "hangar_bay"
		module = "gun_battery"
		module = "gun_battery"

		building = "crew_quarters"
		building = "command_center"
		building = "target_uplink_computer"
		building = "listening_post"
		
		effect = {
			while = {
				count = 4
				create_sleeper_platform = yes
			}	
		}			
	}
}

create_sleeper_outpost = {
	create_starbase = {
		size = "starbase_outpost"
		effect = {
			while = {
				count = 2
				create_sleeper_platform = yes
			}	
		}		
	}
}

#mission randomizer for TN-3
add_random_tony_mission = {
	set_timed_country_flag = {
		flag = tony_missions_blocked_timed 
		days = 1800
	}
	random_list = {
	#let your biologists collaborate with tony
		10 = {
			country_event = { id = sleeper_tony.03 }
			modifier = {
				factor = 0
				check_variable = { 
					which = num_mission_3
					value > 2
				}
			}
		}
	#special project on a drone planet, if the empire owns one
		30 = {
			country_event = { id = sleeper_tony.06 }
			modifier = {
				factor = 0
				NOT = {
					any_owned_planet = {
						OR = {
							has_planet_flag = sleeper_drone_planet_1
							has_planet_flag = sleeper_drone_planet_2
							has_planet_flag = sleeper_drone_planet_3
							has_planet_flag = sleeper_drone_planet_4
							has_planet_flag = sleeper_secondary_core_world
						}
					}
				}
			}
			modifier = {
				factor = 0
				has_country_flag = sleeper_did_drone_planet_mission
			}
		}
	#search a random planet. always available.
		10 = {
			country_event = { id = sleeper_tony.08 }
		}
	#TN-3 wants the empire to take in some drones that broke free of the hives will. Unique event.
		5 = {
			country_event = { id = sleeper_tony.10 }
			modifier = {
				factor = 0
				event_target:contact_empire = {
					has_country_flag = sleeper_freed_drone_mission_done
				}
			}
		}
	#TN-3 needs some repairs
		10 = {
			country_event = { id = sleeper_tony.17 }
		}
	#TN-3 asks for spare parts
		10 = {
			country_event = { id = sleeper_tony.21 }
		}
	#TN-3 asks a hivemind to test how it thinks
		10 = {
			country_event = { id = sleeper_tony.23 }
			modifier = {
				factor = 0
				NOT = {
					has_authority = auth_hive_mind
				}
			}
		}
	#TN-3 wants to lower the sleepers agitaton
		50 = {
			country_event = { id = sleeper_tony.25 }
			modifier = {
				factor = 0
				event_target:contact_empire = {
					has_country_flag = sleeper_agitation_mission_done
				}
			}
			modifier = {
				factor = 0
				their_opinion = {
					who = event_target:contact_empire
					value < 41
				}
			}
			modifier = {
				factor = 0
				any_country = {
					AND = {
						is_sleeper = yes
						check_variable = {
							which = sleeper_agitation 
							value < 75
						}
					}
				}
			}
		}
	}
}

#spawn leaders
spawn_sleeper_admiral = {
	create_leader = {
		class = admiral
		species = owner_main_species
		name = random
		skill = 2
		leader_age_min = 25
		leader_age_max = 45
		traits = {
			trait = random_trait
			trait = random_trait
		}
	}
}

spawn_sleeper_berserk_admiral = {
	create_leader = {
		class = admiral
		species = owner_main_species
		name = random
		skill = 2
		leader_age_min = 25
		leader_age_max = 45
		traits = {
			trait = leader_trait_feral_admiral
			trait = random_trait
		}
	}
}

spawn_sleeper_berserk_general = {
	create_leader = {
		class = general
		species = owner_main_species
		name = random
		event_leader = yes
		skill = 3
		leader_age_min = 25
		leader_age_max = 45
		traits = {
			trait = leader_trait_feral_general
			trait = random_trait
		}
	}
}

#ship spawns
sleeper_spawn_construction_ship = {
	create_ship = {
		name = random
		design = "NAME_Construction_drone"
		graphical_culture = owner
	}
}

#on a planet!
sleeper_spawn_construction_ship_full = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			sleeper_spawn_construction_ship = yes
			set_location = {
				target = prev
				distance = 60
				angle = random 
			}				
		}
	}
}

spawn_sleeper_colossus = {
	if = {
		limit = { 
			host_has_dlc = "Apocalypse"
		}
		create_fleet = {
			effect = {
				set_owner = prev.owner
				create_ship = {
					name = random
					design = "NAME_Integrator"
					graphical_culture = owner
				}
				set_location = {
					target = prev
					distance = 60
					angle = random 
				}
			}
		}
	}
}


sleeper_spawn_platform = {
	create_ship = {
		name = random
		design = "NAME_Eye"
		graphical_culture = owner
	}						
}


sleeper_spawn_titan = {
	create_ship = {
		name = random
		design = "NAME_Mothership"
		graphical_culture = owner
	}						
}


sleeper_spawn_large_ship = {
	create_ship = {
		name = random
		design = "NAME_Carrier"
		graphical_culture = owner
	}
}


sleeper_spawn_small_ship = {
	create_ship = {
		name = random
		design = "NAME_Fighter_Drone"
		graphical_culture = owner
	}						
}


spawn_sleeper_fleet = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			while = {
				count = 6
				sleeper_spawn_large_ship = yes
			}
			while = {
				count = 16
				sleeper_spawn_small_ship = yes
			}
			random_list = {
				25 = {
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 45
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 60
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 75
						angle = random 
					}				
				}				
			}
		}
	}					
}

spawn_sleeper_fleet_with_titan = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			while = {
				count = 8
				sleeper_spawn_large_ship = yes
			}
			while = {
				count = 18
				sleeper_spawn_small_ship = yes
			}
			sleeper_spawn_titan = yes
			random_list = {
				25 = {
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 45
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 60
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 75
						angle = random 
					}				
				}				
			}
		}
	}					
}

#spawn starting fleets. remember to create a leader before using this command.
#reminder: has to be spawned on a planet
spawn_sleeper_starting_navy_part_one = {
	while = {
		count = 3
		create_fleet = {
			effect = {
				set_owner = prev.owner
				sleeper_spawn_construction_ship = yes
				set_location = {
					target = prev
					distance = 60
					angle = random 
				}				
			}
		}
	}
	owner = {
		spawn_sleeper_admiral = yes
	}
	spawn_sleeper_fleet_with_titan = yes
	last_created_fleet = {
		set_fleet_flag = sleeper_core_fleet
		assign_leader = last_created_leader
	}
	owner = {
		spawn_sleeper_admiral = yes
	}
	spawn_sleeper_fleet = yes
	last_created_fleet = {
		set_fleet_flag = sleeper_core_fleet
		assign_leader = last_created_leader
	}
	owner = {
		spawn_sleeper_admiral = yes
	}
	spawn_sleeper_fleet = yes
	last_created_fleet = {
		set_fleet_flag = sleeper_core_fleet
		assign_leader = last_created_leader
	}
}


spawn_sleeper_starting_navy_part_two = {
	owner = {
		spawn_sleeper_admiral = yes
	}
	spawn_sleeper_fleet = yes
	last_created_fleet = {
		set_fleet_flag = sleeper_core_fleet_unbound
		assign_leader = last_created_leader
	}
	sleeper_spawn_construction_ship_full = yes
}

spawn_sleeper_reinforcements = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			while = {
				count = 4
				sleeper_spawn_large_ship = yes
			}
			while = {
				count = 8
				sleeper_spawn_small_ship = yes
			}
			random_list = {
				25 = {
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 45
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 60
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 75
						angle = random 
					}				
				}				
			}
		}
	}					
}

#used for drone countries
spawn_sleeper_drone_country_fleet = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			while = {
				count = 7
				sleeper_berserker_spawn_makeshift_escort = yes
			}
			while = {
				count = 5
				sleeper_berserker_spawn_small_ship_two = yes
			}
			assign_leader = last_created_leader
			random_list = {
				25 = {
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 45
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 60
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 75
						angle = random 
					}				
				}				
			}
		}
		settings = {
			can_upgrade = no 
			can_disband = no
			uses_naval_capacity = no
			can_change_composition = no
		}
	}					
}

#ships used for berserker awakening. spawns small, underdeveloped ships
sleeper_berserker_spawn_small_ship_one = {
	create_ship = {
		name = random
		design = "NAME_Rushed_Fighter_Drone"
		graphical_culture = owner
	}						
}

sleeper_berserker_spawn_small_ship_two = {
	create_ship = {
		name = random
		design = "NAME_damaged_patrol_ship"
		graphical_culture = owner
	}						
}

sleeper_berserker_spawn_makeshift_escort = {
	create_ship = {
		name = random
		design = "NAME_Makeshift_Escort"
		graphical_culture = owner
	}						
}

sleeper_berserker_spawn_makeshift_cruiser = {
	create_ship = {
		name = random
		design = "NAME_Makeshift_Sleeper_Cruiser"
		graphical_culture = owner
	}						
}

sleeper_berserker_spawn_decrepit_mothership = {
	create_ship = {
		name = random
		design = "NAME_Decrepit_Mothership"
		graphical_culture = owner
	}						
}

#berserker raiding fleet - large. only spawns at the hives awakening, then never again.
spawn_sleeper_berserker_fleet_large = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			while = {
				count = 8
				sleeper_berserker_spawn_makeshift_cruiser = yes
			}
			while = {
				count = 8
				sleeper_berserker_spawn_makeshift_escort = yes
			}
			while = {
				count = 14
				sleeper_berserker_spawn_small_ship_one = yes
			}
			while = {
				count = 6
				sleeper_berserker_spawn_small_ship_two = yes
			}
			sleeper_berserker_spawn_decrepit_mothership = yes
			assign_leader = last_created_leader
			random_list = {
				25 = {
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 45
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 60
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 75
						angle = random 
					}				
				}				
			}
			last_created_fleet = {
				set_fleet_flag = sleeper_berserker_fleet
			}
		}
		settings = {
			can_upgrade = no 
			can_disband = no
			can_change_leader = no 
			uses_naval_capacity = no
			can_change_composition = no
		}
	}					
}

#fleets are randomized to give a better feeling of disorganization within the hive
#berserker raiding fleet - small one
spawn_sleeper_berserker_fleet_small_random = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			random_list = {
				15 = {
					while = {
						count = 6
						sleeper_berserker_spawn_makeshift_cruiser = yes
					}
					while = {
						count = 2
						sleeper_berserker_spawn_makeshift_escort = yes
					}
					while = {
						count = 8
						sleeper_berserker_spawn_small_ship_one = yes
					}
					while = {
						count = 2
						sleeper_berserker_spawn_small_ship_two = yes
					}				
				}
				15 = {
					while = {
						count = 2
						sleeper_berserker_spawn_makeshift_cruiser = yes
					}
					while = {
						count = 2
						sleeper_berserker_spawn_makeshift_escort = yes
					}
					while = {
						count = 16
						sleeper_berserker_spawn_small_ship_one = yes
					}
					while = {
						count = 6
						sleeper_berserker_spawn_small_ship_two = yes
					}				
				}
				10 = {
					while = {
						count = 2
						sleeper_berserker_spawn_makeshift_cruiser = yes
					}
					while = {
						count = 12
						sleeper_berserker_spawn_makeshift_escort = yes
					}
					while = {
						count = 4
						sleeper_berserker_spawn_small_ship_one = yes
					}
					while = {
						count = 4
						sleeper_berserker_spawn_small_ship_two = yes
					}			
				}
				10 = {
					while = {
						count = 10
						sleeper_berserker_spawn_makeshift_escort = yes
					}
					while = {
						count = 12
						sleeper_berserker_spawn_small_ship_one = yes
					}			
				}
				10 = {
					while = {
						count = 6
						sleeper_berserker_spawn_makeshift_cruiser = yes
					}
					while = {
						count = 18
						sleeper_berserker_spawn_small_ship_one = yes
					}
					while = {
						count = 2
						sleeper_berserker_spawn_small_ship_two = yes
					}				
				}
				10 = {
					while = {
						count = 2
						sleeper_berserker_spawn_makeshift_cruiser = yes
					}
					while = {
						count = 8
						sleeper_berserker_spawn_makeshift_escort = yes
					}
					while = {
						count = 6
						sleeper_berserker_spawn_small_ship_one = yes
					}
					while = {
						count = 6
						sleeper_berserker_spawn_small_ship_two = yes
					}				
				}
				10 = {
					while = {
						count = 6
						sleeper_berserker_spawn_makeshift_cruiser = yes
					}
					while = {
						count = 11
						sleeper_berserker_spawn_makeshift_escort = yes
					}
					while = {
						count = 6
						sleeper_berserker_spawn_small_ship_one = yes
					}			
				}
				10 = {
					while = {
						count = 8
						sleeper_berserker_spawn_makeshift_cruiser = yes
					}
					while = {
						count = 12
						sleeper_berserker_spawn_makeshift_escort = yes
					}
					while = {
						count = 12
						sleeper_berserker_spawn_small_ship_one = yes
					}
				}
				5 = {
					while = {
						count = 22
						sleeper_berserker_spawn_small_ship_one = yes
					}			
				}
				5 = {
					sleeper_berserker_spawn_decrepit_mothership = yes
					while = {
						count = 2
						sleeper_berserker_spawn_small_ship_one = yes
					}					
				}
			}
			assign_leader = last_created_leader
			random_list = {
				25 = {
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 45
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 60
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 75
						angle = random 
					}				
				}				
			}
			last_created_fleet = {
				set_fleet_flag = sleeper_berserker_fleet
			}
		}
		settings = {
			can_upgrade = no 
			can_disband = no
			can_change_leader = no 
			uses_naval_capacity = no
			can_change_composition = no
		}
	}				
}
