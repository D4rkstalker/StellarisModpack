generate_second_species = {
	if = {
		limit = { owner = { has_origin = origin_codominant_evolution } }
			last_created_species = {
			set_species_flag = syncretic_species@root.owner
			set_citizenship_type = {
				country = root.owner
				type = citizenship_full
			}
		}
		while = {
			count = 14
			random_pop = {
				limit = { NOT = { is_same_species = last_created_species } }
				change_species = last_created
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_second_species_slavery } }
			last_created_species = {
			set_species_flag = syncretic_species@root.owner
			set_citizenship_type = {
				country = root.owner
				type = citizenship_slavery
			}
		}
		while = {
			count = 8
			random_pop = {
				limit = { NOT = { is_same_species = last_created_species } }
				change_species = last_created
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_wave_of_refugees } }
			last_created_species = {
			set_species_flag = syncretic_species@root.owner 
			set_citizenship_type = {
				country = root.owner
				type = citizenship_full
			}
		}
		while = {
			count = 6
			create_pop = {
			species = last_created_species
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_overcrowded } }		
		while = {
			count = 41
			create_pop = {
			species = owner_main_species
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_rogue_colony_npc } }
		while = {
			count = 18
			create_pop = {
			species = event_target:rogue_colony_npc_planet_species
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_early_colonization } }
		while = {
			count = 5
			create_pop = {
			species = owner_main_species
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_primitive_assimilisation } }
		while = {
			count = 6
			create_pop = {
			species = event_target:ndo_primitive_species
			}
		}
	}
}

generate_oppressor_species = {
	if = {
		limit = {
			owner = { has_origin = origin_machine_uprising }
			AND = {
			owner = { has_valid_civic = civic_machine_terminator } }
		}
		last_created_species = { 
			set_citizenship_type = {
				country = root.owner
				type = citizenship_full
			}
		}
		while = {
			count = 6
			create_pop = {
			species = last_created
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_machine_uprising }
			AND = {
			owner = { has_valid_civic = civic_machine_assimilator } }
			}
		last_created_species = { 
			set_citizenship_type = {
				country = root.owner
				type = citizenship_full
			}
		}
		while = {
			count = 4
			random_pop = {
				limit = {
					NOT = { is_same_species = owner_species }
				}
				kill_pop = yes
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_machine_uprising }
			AND = {
			owner = { has_valid_civic = civic_machine_servitor } }
		}
		last_created_species = { 
			set_citizenship_type = {
				country = root.owner
				type = citizenship_full
			}
		}
		while = {
			count = 1
			create_pop = {
			species = last_created
			}
		}
	}
}

generate_refugees_species = {
	if = {
		limit = { owner = { has_origin = origin_technological_enlightenment } }
		while = {
			count = 6
			create_pop = {
			species = event_target:ndo_first_refugees_species
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_technological_enlightenment } }
		while = {
			count = 3
			create_pop = {
			species = event_target:ndo_second_refugees_species
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_technological_enlightenment } }
		while = {
			count = 3
			create_pop = {
			species = event_target:ndo_third_refugees_species
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_technological_enlightenment } }
		while = {
			count = 2
			create_pop = {
			species = event_target:ndo_fourth_refugees_species
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_technological_enlightenment } }
		while = {
			count = 10
			random_owned_pop = {
				limit = {
					is_same_species = owner.species
				}
				kill_pop = yes
			}
		}
	}
}

ndo_massive_homeworld_size = {
	random_list = {
		1 = { set_planet_size = 30 }
		1 = { set_planet_size = 31 }
		1 = { set_planet_size = 32 }
		1 = { set_planet_size = 33 }
		1 = { set_planet_size = 34 }
		1 = { set_planet_size = 35 }
		1 = { set_planet_size = 36 }
		1 = { set_planet_size = 37 }
	    1 = { set_planet_size = 38 }
		1 = { set_planet_size = 39 }
		1 = { set_planet_size = 40 }
	}
}