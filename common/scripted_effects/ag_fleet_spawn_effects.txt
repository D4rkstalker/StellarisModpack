
#######################################
###				Beta
#######################################

ag_ancient_beta_drone_type1_spawn = {
	create_ship = {
		name = "NAME_ag_beta_drone_type1_ship"
		design = "NAME_ag_beta_drone_type1_hostile"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}
ag_ancient_beta_drone_type2_spawn = {
	create_ship = {
		name = "NAME_ag_beta_drone_type2_ship"
		design = "NAME_ag_beta_drone_type2_hostile"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}

ag_beta_guardian_drone_squadron_spawn = {
	create_fleet = {
		name = "NAME_ag_beta_drone_squadron"
		settings = {
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			set_owner = $ag_target_owner$
			set_fleet_bombardment_stance = ag_ancient_bombardment
			random_list = {
				25 = { while = { count = 7 ag_ancient_beta_drone_type1_spawn = yes } }
				25 = { while = { count = 11 ag_ancient_beta_drone_type1_spawn = yes } }
				25 = { while = { count = 13 ag_ancient_beta_drone_type1_spawn = yes } }
				25 = { while = { count = 17 ag_ancient_beta_drone_type1_spawn = yes } }
			}
			random_list = {
				25 = { while = { count = 7 ag_ancient_beta_drone_type2_spawn = yes } }
				25 = { while = { count = 11 ag_ancient_beta_drone_type2_spawn = yes } }
				25 = { while = { count = 13 ag_ancient_beta_drone_type2_spawn = yes } }
				25 = { while = { count = 17 ag_ancient_beta_drone_type2_spawn = yes } }
			}
			random_list = {
				33 = { set_location = { target = prev distance = 5 angle = random } }
				33 = { set_location = { target = prev distance = 10 angle = random } }
				33 = { set_location = { target = prev distance = 15 angle = random } }
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

ag_beta_source_station_spawn = {
	set_star_flag = ag_beta_station_hostility
	ag_create_ancient_guardian = {
		ag_country_name = "NAME_ag_ancient_signal_station_guardian"
		ag_country_type = ag_ancient_beta_signal_station_guardian
	}
	last_created_country = {
		save_event_target_as = ag_target_ancient_guardian_country
		ag_ancient_country_friendly_to_each_other = yes
	}
	every_country = { establish_communications_no_message = event_target:ag_target_ancient_guardian_country }
	random_system_planet = {
		limit = {
			is_primary_star = yes
		}
		ag_spawn_explosion_effect = { ag_scale = l ag_color = red }
		create_fleet = {
			name = "NAME_ag_beta_station"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_owner = event_target:ag_target_ancient_guardian_country
				create_ship = {
					name = "NAME_ag_beta_station_type2_ship"
					design = "NAME_ag_beta_station_type2_hostile"
					prefix = no
					
					effect = {
						ag_difficulty_bonus = yes
					}
				}
				set_location = {
					target = prev
					distance = -1
					angle = 0
				}
			}
		}
	}
	random_system_ambient_object = {
		limit = {
			has_ambient_object_flag = ag_beta_station_source
		}
		destroy_ambient_object = this
	}
	random_list = {
		25 = { }
		75 = {
			random_system_planet = {
				limit = {
					is_star = no
				}
				ag_beta_guardian_drone_squadron_spawn = {
					ag_target_owner = event_target:ag_target_ancient_guardian_country
				}
			}
		}
	}
}

ag_beta_relay_station_spawn_effect = {
	set_global_flag = ag_ancient_beta_guradian_awaken
	ag_create_ancient_guardian = {
		ag_country_name = "NAME_ag_ancient_beta_guardian"
		ag_country_type = ag_ancient_beta_guardian
	}
	last_created_country = {
		save_global_event_target_as = ag_ancient_beta_guardian_country
		set_country_flag = ag_ancient_beta_guardian_country
		ag_ancient_country_friendly_to_each_other = yes
	}
	every_country = { establish_communications_no_message = event_target:ag_ancient_beta_guardian_country }
	event_target:ag_ancient_beta_star = {
		solar_system = {
			every_system_ambient_object = {
				limit = {
					OR = {
						has_ambient_object_flag = ag_beta_station_1
						has_ambient_object_flag = ag_beta_station_2
						has_ambient_object_flag = ag_beta_station_3
					}
				}
				destroy_ambient_object = this
			}
			create_fleet = {
				name = "NAME_ag_beta_station"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_beta_guardian_country
					create_ship = {
						name = "NAME_ag_beta_station_type1_ship"
						design = "NAME_ag_beta_station_type1_hostile"
						prefix = no
						effect = {
							set_ship_flag = ag_beta_station_1
							ag_set_disable_at_health = { ag_value = 0.05 }
							if = {
								limit = {
									has_global_flag = ag_ancient_beta_relay_station_hostility
								}
								add_modifier = {
									modifier = "ag_beta_station_power"
									days = -1
								}
							}
							ag_difficulty_bonus = yes
						}
					}
					set_location = {
						target = event_target:ag_ancient_beta_star
						distance = 150
						angle = 0
					}
					ag_spawn_explosion_effect = { ag_scale = l ag_color = red }
				}
			}
			create_fleet = {
				name = "NAME_ag_beta_station"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_beta_guardian_country
					create_ship = {
						name = "NAME_ag_beta_station_type1_ship"
						design = "NAME_ag_beta_station_type1_hostile"
						prefix = no
						effect = {
							set_ship_flag = ag_beta_station_2
							ag_set_disable_at_health = { ag_value = 0.05 }
							if = {
								limit = {
									has_global_flag = ag_ancient_beta_relay_station_hostility
								}
								add_modifier = {
									modifier = "ag_beta_station_power"
									days = -1
								}
							}
							ag_difficulty_bonus = yes
						}
					}
					set_location = {
						target = event_target:ag_ancient_beta_star
						distance = 150
						angle = 120
					}
					ag_spawn_explosion_effect = { ag_scale = l ag_color = red }
				}
			}
			create_fleet = {
				name = "NAME_ag_beta_station"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_beta_guardian_country
					create_ship = {
						name = "NAME_ag_beta_station_type1_ship"
						design = "NAME_ag_beta_station_type1_hostile"
						prefix = no
						effect = {
							set_ship_flag = ag_beta_station_3
							ag_set_disable_at_health = { ag_value = 0.05 }
							if = {
								limit = {
									has_global_flag = ag_ancient_beta_relay_station_hostility
								}
								add_modifier = {
									modifier = "ag_beta_station_power"
									days = -1
								}
							}
							ag_difficulty_bonus = yes
						}
					}
					set_location = {
						target = event_target:ag_ancient_beta_star
						distance = 150
						angle = 240
					}
					ag_spawn_explosion_effect = { ag_scale = l ag_color = red }
				}
			}
		}
	}
}

ag_player_relay_station_spawn = {
	$ag_owner$ = { subtract_variable = { which = ag_num_beta_station_type1_cores value = 1 } }
	if = {
		limit = { $ag_owner$ = { has_country_flag = ag_beta_ships_unlocked } }
		create_fleet = {
			name = "NAME_ag_beta_station_type1_fleet"
			settings = {
				can_upgrade = no 
				can_change_composition = no 
				can_change_leader = no 
				spawn_debris = no 
			}
			effect = {
				set_owner = $ag_owner$
				create_ship = {
					name = "NAME_ag_beta_station_type1_ship"
					design = "NAME_ag_beta_station_type1_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						set_ship_flag = $ag_ship_flag$
					}
				}
				set_location = {
					target = prev
					distance = 30
					angle = $ag_angle$
				}
			}
		}
	}
	else = {
		create_fleet = {
			name = "NAME_ag_beta_station_type1_fleet"
			settings = {
				can_upgrade = no 
				can_change_composition = no 
				can_change_leader = no 
				spawn_debris = no 
			}
			effect = {
				set_owner = $ag_owner$
				create_ship = {
					name = "NAME_ag_beta_station_type1_ship"
					design = "NAME_ag_beta_station_type1_0"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						set_ship_flag = $ag_ship_flag$
					}
				}
				set_location = {
					target = prev
					distance = 30
					angle = $ag_angle$
				}
			}
		}
	}
}

#######################################
###				Gamma
#######################################

ag_gamma_battlecruiser_spawn = {
	create_ship = {
		name = "NAME_ag_gamma_battlecruiser_ship"
		design = "NAME_ag_gamma_battlecruiser_hostile"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}

ag_gamma_escort_spawn = {
	create_ship = {
		name = "NAME_ag_gamma_escort_ship"
		design = "NAME_ag_gamma_escort_hostile"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}

ag_gamma_guardian_fleet_spawn = {
	create_fleet = {
		name = "NAME_ag_gamma_guardian_fleet"
		settings = {
			spawn_debris = no
			[[ag_is_boss]is_boss = $ag_is_boss$]
		}
		effect = {
			ag_spawn_explosion_effect = { ag_scale = l ag_color = red }
			set_owner = event_target:ag_ancient_gamma_guardian_country
			set_fleet_bombardment_stance = ag_ancient_bombardment
			[[ag_fleet_flag]set_fleet_flag = $ag_fleet_flag$]
			[[ag_num_battlecruisers]
				while = {
					count = $ag_num_battlecruisers$
					ag_gamma_battlecruiser_spawn = yes
				}
			]
			[[ag_num_escorts]
				while = {
					count = $ag_num_escorts$
					ag_gamma_escort_spawn = yes
				}
			]
			[[ag_num_extra_battlecruisers]
				if = {
					limit = {
						event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
					}
					while = {
						count = $ag_num_extra_battlecruisers$
						ag_gamma_battlecruiser_spawn = yes
					}
				}
			]
			[[ag_num_extra_escorts]
				if = {
					limit = {
						event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
					}
					while = {
						count = $ag_num_extra_escorts$
						ag_gamma_escort_spawn = yes
					}
				}
			]
			set_location = {
				target = $ag_target_location$
				distance = 25
				angle = 60
			}
			set_formation_scale = 5.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			[[ag_action_event]fleet_event = { id = $ag_action_event$ }]
		}
	}
}

ag_spawn_gamma_guardian_fleet_garrison = {
	ag_gamma_guardian_fleet_spawn = {
		ag_num_battlecruisers = @ag_gamma_guardian_fleet_num_battlecruisers
		ag_num_escorts = @ag_gamma_guardian_fleet_num_escorts
		ag_num_extra_battlecruisers = @ag_gamma_guardian_fleet_extra_battlecruisers_hard_2
		ag_num_extra_escorts = @ag_gamma_guardian_fleet_extra_escorts_hard_2
		ag_target_location = event_target:ag_gamma_ring_2
	}
	ag_gamma_guardian_fleet_spawn = {
		ag_num_battlecruisers = @ag_gamma_guardian_fleet_num_battlecruisers
		ag_num_escorts = @ag_gamma_guardian_fleet_num_escorts
		ag_num_extra_battlecruisers = @ag_gamma_guardian_fleet_extra_battlecruisers_hard_2
		ag_num_extra_escorts = @ag_gamma_guardian_fleet_extra_escorts_hard_2
		ag_target_location = event_target:ag_gamma_ring_6
	}
	ag_gamma_guardian_fleet_spawn = {
		ag_num_battlecruisers = @ag_gamma_guardian_fleet_num_battlecruisers
		ag_num_escorts = @ag_gamma_guardian_fleet_num_escorts
		ag_num_extra_battlecruisers = @ag_gamma_guardian_fleet_extra_battlecruisers_hard_2
		ag_num_extra_escorts = @ag_gamma_guardian_fleet_extra_escorts_hard_2
		ag_target_location = event_target:ag_gamma_ring_10
	}
}

ag_spawn_gamma_guardian_fleet_jumped_garrison = {
	solar_system = {
		random_system_planet = {
			limit = {
				is_star = yes
			}
			save_event_target_as = ag_gamma_guardian_garrison_fleet_spawn_loc
		}
	}
	ag_gamma_guardian_fleet_spawn = {
		ag_num_battlecruisers = @ag_gamma_assault_fleet_num_battlecruisers
		ag_num_escorts = @ag_gamma_assault_fleet_num_escorts
		ag_num_extra_battlecruisers = @ag_gamma_assault_fleet_extra_battlecruisers_hard_2
		ag_num_extra_escorts = @ag_gamma_assault_fleet_extra_escorts_hard_2
		ag_target_location = event_target:ag_gamma_guardian_garrison_fleet_spawn_loc
	}
}

ag_spawn_gamma_guardian_fleet_jumped = {
	solar_system = {
		random_system_planet = {
			limit = {
				is_star = yes
			}
			save_event_target_as = ag_gamma_guardian_assault_fleet_spawn_loc
		}
	}
	ag_gamma_guardian_fleet_spawn = {
		ag_fleet_flag = ag_ancient_gamma_guardian_assault_fleet
		ag_num_battlecruisers = @ag_gamma_assault_fleet_num_battlecruisers
		ag_num_escorts = @ag_gamma_assault_fleet_num_escorts
		ag_num_extra_battlecruisers = @ag_gamma_assault_fleet_extra_battlecruisers_hard_2
		ag_num_extra_escorts = @ag_gamma_assault_fleet_extra_escorts_hard_2
		ag_target_location = event_target:ag_gamma_guardian_assault_fleet_spawn_loc
		ag_action_event = ag_gamma.27
	}
}

ag_gamma_station_player_spawn = {
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_fleet = {
			name = "NAME_ag_gamma_station_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_gamma_station_player
				set_owner = $ag_owner$
				create_ship = {
					name = "NAME_ag_gamma_station_ship"
					design = "NAME_ag_gamma_station_1"
					prefix = no
					effect = {
						set_ship_flag = ag_gamma_station_player
						set_ship_flag = ag_gamma_station_protection_enabled
						set_ship_flag = ag_gamma_station_protection_1
						ag_set_disable_at_health = { ag_value = 0.75 }
						ag_difficulty_bonus = yes
						ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 301 }
					}
				}
				set_location = {
					target = $ag_location_target$
					distance = $ag_location_distance|-1$
					angle = $ag_location_angle|0$
				}
			}
		}
	}
	else = {
		create_fleet = {
			name = "NAME_ag_gamma_station_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_gamma_station_player
				set_owner = $ag_owner$
				create_ship = {
					name = "NAME_ag_gamma_station_ship"
					design = "NAME_ag_gamma_station_0"
					prefix = no
					effect = {
						set_ship_flag = ag_gamma_station_player
						set_ship_flag = ag_gamma_station_protection_enabled
						set_ship_flag = ag_gamma_station_protection_1
						ag_set_disable_at_health = { ag_value = 0.75 }
						ag_difficulty_bonus = yes
						ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 301 }
					}
				}
				set_location = {
					target = $ag_location_target$
					distance = $ag_location_distance|-1$
					angle = $ag_location_angle|0$
				}
			}
		}
	}
}

ag_gamma_station_drones_spawn = {
	if = {
		limit = { fromfrom.solar_system = { NOT = { any_fleet_in_system = { exists = owner owner = { is_country_type = ag_zeta_crisis_country } } } } }
		if = {
			limit = { OR = { is_country_type = ag_ancient_gamma_guardian has_country_flag = ag_gamma_ships_unlocked } }
			while = {
				count = 2
				limit = { fromfrom.solar_system = { count_fleet_in_system = { limit = { has_fleet_flag = ag_gamma_station_drones_fleet } count < $ag_drones_max|2$ } } }
				create_fleet = {
					name = "NAME_ag_gamma_station_aux_drone_fleet"
					settings = {
						can_change_composition = no
						uses_naval_capacity = no
						can_change_leader = no
						spawn_debris = no
						can_disband = no
						can_upgrade = no
						is_boss = yes
					}
					effect = {
						set_owner = $ag_owner$
						set_fleet_flag = ag_gamma_station_drones_fleet
						set_fleet_flag = ag_has_ancient_ship_in_fleet
						set_fleet_bombardment_stance = ag_ancient_bombardment
						while = {
							count = 7
							create_ship = {
								name = "NAME_ag_gamma_station_aux_drone_ship"
								design = "NAME_ag_gamma_station_aux_drone_1"
								prefix = no
								effect = { ag_difficulty_bonus = yes }
							}
						}
						random_list = {
							20 = { set_location = { target = $ag_location$ distance = 10 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 15 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 20 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 25 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 30 angle = random } }
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 500
						fleet_event = { id = ag_subsystem.35 days = 30 random = 15 }
					}
				}
			}
		}
		else = {
			while = {
				count = 2
				limit = { fromfrom.solar_system = { count_fleet_in_system = { limit = { has_fleet_flag = ag_gamma_station_drones_fleet } count < $ag_drones_max|2$ } } }
				create_fleet = {
					name = "NAME_ag_gamma_station_aux_drone_fleet"
					settings = {
						can_change_composition = no
						uses_naval_capacity = no
						can_change_leader = no
						spawn_debris = no
						can_disband = no
						can_upgrade = no
						is_boss = yes
					}
					effect = {
						set_owner = $ag_owner$
						set_fleet_flag = ag_gamma_station_drones_fleet
						set_fleet_flag = ag_has_ancient_ship_in_fleet
						set_fleet_bombardment_stance = ag_ancient_bombardment
						while = {
							count = 7
							create_ship = {
								name = "NAME_ag_gamma_station_aux_drone_ship"
								design = "NAME_ag_gamma_station_aux_drone_0"
								prefix = no
								effect = { ag_difficulty_bonus = yes }
							}
						}
						random_list = {
							20 = { set_location = { target = $ag_location$ distance = 10 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 15 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 20 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 25 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 30 angle = random } }
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 500
						fleet_event = { id = ag_subsystem.35 days = 30 random = 15 }
					}
				}
			}
		}
	}
}

#######################################
###				Delta
#######################################

ag_create_delta_titan_player = {
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_delta_titan_ship"
			design = "NAME_ag_delta_titan_1"
			prefix = no
			effect = {
				set_ship_flag = ag_delta_titan_player
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 401 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_delta_titan_ship"
			design = "NAME_ag_delta_titan_0"
			prefix = no
			effect = {
				set_ship_flag = ag_delta_titan_player
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 401 }
			}
		}
	}
}
ag_delta_titan_player_spawn = {
	create_fleet = {
		name = "NAME_ag_delta_titan_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_delta_titan_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

#######################################
###				Epsilon
#######################################

ag_create_fallen_empire_guardian = {
	create_fleet = {
		name = "NAME_ag_fallen_empire_epsilon_guardian_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = event_target:ag_fallen_empire_epsilon_guardian
			create_ship = {
				name = "NAME_ag_epsilon_defensive_station_large[[ag_seq]_$ag_seq$]"
				design = "NAME_ag_epsilon_defensive_station_large[[ag_graphical_culture]_$ag_graphical_culture$]_hostile"
				graphical_culture = "fallen_empire[[ag_graphical_culture]_$ag_graphical_culture$]"
			}
			create_ship = {
				name = "NAME_ag_epsilon_defensive_station_small[[ag_seq]_$ag_seq$1]"
				design = "NAME_ag_epsilon_defensive_station_small[[ag_graphical_culture]_$ag_graphical_culture$]_hostile"
				graphical_culture = "fallen_empire[[ag_graphical_culture]_$ag_graphical_culture$]"
			}
			create_ship = {
				name = "NAME_ag_epsilon_defensive_station_small[[ag_seq]_$ag_seq$2]"
				design = "NAME_ag_epsilon_defensive_station_small[[ag_graphical_culture]_$ag_graphical_culture$]_hostile"
				graphical_culture = "fallen_empire[[ag_graphical_culture]_$ag_graphical_culture$]"
			}
			create_ship = {
				name = "NAME_ag_epsilon_defensive_station_small[[ag_seq]_$ag_seq$3]"
				design = "NAME_ag_epsilon_defensive_station_small[[ag_graphical_culture]_$ag_graphical_culture$]_hostile"
				graphical_culture = "fallen_empire[[ag_graphical_culture]_$ag_graphical_culture$]"
			}
			ag_set_fallen_empire_guardian_formation = yes
			event_target:ag_fallen_empire_epsilon_guardian = {
				set_variable = { which = ag_seq_temp value = 6 }
				if = {
					limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
					prev = { set_location = { target = prevprevprev distance = 45 angle = 300 } }
				}
				else = {
					subtract_variable = { which = ag_seq_temp value = 1 }
					if = {
						limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
						prev = { set_location = { target = prevprevprev distance = 45 angle = 240 } }
					}
					else = {
						subtract_variable = { which = ag_seq_temp value = 1 }
						if = {
							limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
							prev = { set_location = { target = prevprevprev distance = 45 angle = 180 } }
						}
						else = {
							subtract_variable = { which = ag_seq_temp value = 1 }
							if = {
								limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
								prev = { set_location = { target = prevprevprev distance = 45 angle = 120 } }
							}
							else = {
								subtract_variable = { which = ag_seq_temp value = 1 }
								if = {
									limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
									prev = { set_location = { target = prevprevprev distance = 45 angle = 60 } }
								}
								else = { prev = { set_location = { target = prevprevprev distance = 45 angle = 0 } } }
							}
						}
					}
				}
				clear_variable = ag_seq_temp
			}
		}
	}
}

ag_create_epsilon_titan_player = {
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_epsilon_titan_ship"
			design = "NAME_ag_epsilon_titan_1"
			prefix = no
			effect = {
				set_ship_flag = ag_epsilon_titan_player
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 501 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_epsilon_titan_ship"
			design = "NAME_ag_epsilon_titan_0"
			prefix = no
			effect = {
				set_ship_flag = ag_epsilon_titan_player
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 501 }
			}
		}
	}
}
ag_epsilon_titan_player_spawn = {
	create_fleet = {
		name = "NAME_ag_epsilon_titan_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_epsilon_titan_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

#######################################
###				Zeta
#######################################

ag_zeta_titan_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_titan_ship"
		design = "NAME_ag_zeta_titan"
		prefix = no
		effect = {
			ag_set_disable_at_health = { ag_value = 0.02 }
			ag_difficulty_bonus = yes
		}
	}
}
ag_zeta_battleship_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_battleship_ship"
		design = "NAME_ag_zeta_battleship"
		prefix = no
		effect = {
			ag_set_disable_at_health = { ag_value = 0.02 }
			ag_difficulty_bonus = yes
		}
	}
}
ag_zeta_destroyer_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_destroyer_ship"
		design = "NAME_ag_zeta_destroyer"
		prefix = no
		effect = {
			ag_set_disable_at_health = { ag_value = 0.02 }
			ag_difficulty_bonus = yes
		}
	}
}
ag_zeta_crisis_small_ship_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_small_ship_ship"
		design = "NAME_ag_zeta_crisis_small_ship"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			# if = {
			# 	limit = {
			# 		event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
			# 	}
			# 	ag_set_disable_at_health = { ag_value = 0.5 }
			# 	set_ship_flag = ag_ancient_empire_mod_difficulty_hard_2_ship
			# }
		}
	}
}
ag_zeta_crisis_medium_ship_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_medium_ship_ship"
		design = "NAME_ag_zeta_crisis_medium_ship"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			# if = {
			# 	limit = {
			# 		event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
			# 	}
			# 	ag_set_disable_at_health = { ag_value = 0.5 }
			# 	set_ship_flag = ag_ancient_empire_mod_difficulty_hard_2_ship
			# }
		}
	}
}
ag_zeta_crisis_large_ship_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_large_ship_ship"
		design = "NAME_ag_zeta_crisis_large_ship"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			# if = {
			# 	limit = {
			# 		event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
			# 	}
			# 	ag_set_disable_at_health = { ag_value = 0.5 }
			# 	set_ship_flag = ag_ancient_empire_mod_difficulty_hard_2_ship
			# }
		}
	}
}
ag_zeta_crisis_support_ship_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_support_ship_ship"
		design = "NAME_ag_zeta_crisis_support_ship"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			# if = {
			# 	limit = {
			# 		event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
			# 	}
			# 	ag_set_disable_at_health = { ag_value = 0.5 }
			# 	set_ship_flag = ag_ancient_empire_mod_difficulty_hard_2_ship
			# }
		}
	}
}
ag_zeta_crisis_construction_ship_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_construction_ship_ship"
		design = "NAME_ag_zeta_crisis_construction_ship"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			# if = {
			# 	limit = {
			# 		event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
			# 	}
			# 	ag_set_disable_at_health = { ag_value = 0.5 }
			# 	set_ship_flag = ag_ancient_empire_mod_difficulty_hard_2_ship
			# }
		}
	}
}
ag_zeta_crisis_avatar_t1_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t1_ship"
		design = "NAME_ag_zeta_crisis_avatar_t1"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}
ag_zeta_crisis_avatar_t2_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t2_ship"
		design = "NAME_ag_zeta_crisis_avatar_t2"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}
ag_zeta_crisis_avatar_t3_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t3_ship"
		design = "NAME_ag_zeta_crisis_avatar_t3"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}
ag_zeta_crisis_avatar_t4_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t4_ship"
		design = "NAME_ag_zeta_crisis_avatar_t4"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}
ag_zeta_crisis_avatar_t5_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t5_ship"
		design = "NAME_ag_zeta_crisis_avatar_t5"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}
ag_zeta_crisis_defensive_platform_spawn = {
	create_ship = {
		name = "NAME_ag_zeta_crisis_defensive_platform_ship"
		design = "NAME_ag_zeta_crisis_defensive_platform"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			# if = {
			# 	limit = {
			# 		event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
			# 	}
			# 	ag_set_disable_at_health = { ag_value = 0.5 }
			# 	set_ship_flag = ag_ancient_empire_mod_difficulty_hard_2_ship
			# }
		}
	}
}

ag_zeta_crisis_avatar_t1_fleet_spawn = {
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t1_ship"
				design = "NAME_ag_zeta_crisis_avatar_t1"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			fleet_event = { id = ag_zeta_crisis.42 days = 1080 random = 360 }
			fleet_event = { id = ag_zeta_crisis.74 }
		}
	}
}
ag_zeta_crisis_avatar_t2_fleet_spawn = {
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t2_ship"
				design = "NAME_ag_zeta_crisis_avatar_t2"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			fleet_event = { id = ag_zeta_crisis.42 days = 1080 random = 360 }
			fleet_event = { id = ag_zeta_crisis.74 }
		}
	}
}
ag_zeta_crisis_avatar_t3_fleet_spawn = {
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t3_ship"
				design = "NAME_ag_zeta_crisis_avatar_t3"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			fleet_event = { id = ag_zeta_crisis.42 days = 1080 random = 360 }
			fleet_event = { id = ag_zeta_crisis.74 }
		}
	}
}
ag_zeta_crisis_avatar_t4_fleet_spawn = {
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t4_ship"
				design = "NAME_ag_zeta_crisis_avatar_t4"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			fleet_event = { id = ag_zeta_crisis.42 days = 1080 random = 360 }
			fleet_event = { id = ag_zeta_crisis.74 }
		}
	}
}
ag_zeta_crisis_avatar_t5_fleet_spawn = {
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t5_ship"
				design = "NAME_ag_zeta_crisis_avatar_t5"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
			fleet_event = { id = ag_zeta_crisis.42 days = 1080 random = 360 }
			fleet_event = { id = ag_zeta_crisis.74 }
		}
	}
}

ag_create_zeta_crisis_starbase = {
	if = {
		limit = { NOT = { exists = starbase } }
		create_starbase = {
			size = starbase_ag_zeta_crisis
			owner = event_target:ag_zeta_crisis_country
			effect = {
				if = {
					limit = {
						solar_system = {
							has_star_flag = ag_ancient_zeta_system
						}
					}
					while = {
						count = @ag_zeta_crisis_home_starbase_num_platforms
						ag_zeta_crisis_defensive_platform_spawn = yes
					}
				}
				else_if = {
					limit = {
						solar_system = {
							any_system_planet = {
								has_planet_flag = ag_zeta_crisis_core_planet
							}
						}
					}
					while = {
						count = @ag_zeta_crisis_gate_starbase_num_platforms
						ag_zeta_crisis_defensive_platform_spawn = yes
					}
					solar_system = {
						if = {
							limit = {
								any_ship_in_system = {
									fleet = {
										has_fleet_flag = ag_zeta_crisis_gate_portal
										exists = owner
										owner = {
											is_country_type = ag_zeta_crisis_country
										}

									}
								}
							}
							every_fleet_in_system = {
								limit = {
									has_fleet_flag = ag_zeta_crisis_gate_portal
									exists = owner
									owner = {
										is_country_type = ag_zeta_crisis_country
									}
								}
								set_owner = event_target:ag_zeta_crisis_portal_holder
								set_event_locked = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						always = yes
					}
					solar_system = {
						every_neighbor_system = {
							limit = {
								exists = starbase
								starbase = {
									exists = owner
									owner = {
										is_country_type = ag_zeta_crisis_country
									}
								}
								NOT = {
									any_ship_in_system = {
										fleet = {
											has_fleet_flag = ag_zeta_crisis_portal
										}
									}
								}
							}
							random_list = {
								75 = {
								}
								25 = {
									prevprev = {
										ag_zeta_crisis_defensive_platform_spawn = yes
									}
								}
							}
						}
					}
				}
				solar_system = {
					every_neighbor_system = {
						limit = {
							any_ship_in_system = {
								fleet = {
									has_fleet_flag = ag_zeta_crisis_gate_portal
									exists = owner
									owner = {
										is_country_type = ag_zeta_crisis_country
									}

								}
							}
						}
						every_fleet_in_system = {
							limit = {
								has_fleet_flag = ag_zeta_crisis_gate_portal
								exists = owner
								owner = {
									is_country_type = ag_zeta_crisis_country
								}
							}
							set_owner = event_target:ag_zeta_crisis_portal_holder
							set_event_locked = yes
						}
					}
				}
			}
		}
		every_fleet_in_system = {
			limit = {
				any_owned_ship = {
					is_ship_size = starbase_ag_zeta_crisis
				}
			}
			random_owned_ship = {
				limit = {
					is_ship_size = starbase_ag_zeta_crisis
				}
				ag_difficulty_bonus = yes
			}
		}
		if = {
			limit = {
				OR = {
					has_star_flag = ag_ancient_zeta_system
					any_system_planet = {
						has_planet_flag = ag_zeta_crisis_core_planet
					}
				}
			}
			random_system_planet = {
				limit = {
					is_primary_star = yes
				}
				create_ambient_object = {
					type = "ag_zeta_crisis_system_effect_thick"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = ag_zeta_crisis_system_effect_thick
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
		}
		else = {
			random_system_planet = {
				limit = {
					is_primary_star = yes
				}
				create_ambient_object = {
					type = "ag_zeta_crisis_system_effect_thin"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = ag_zeta_crisis_system_effect_thin
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
		}
	}
}

ag_spawn_zeta_crisis_guardian_fleet = {
	if = {
		limit = {
			solar_system = {
				has_star_flag = ag_ancient_zeta_system
			}
		}
		create_fleet = {
			name = "NAME_ag_zeta_crisis_guardian_fleet"
			settings = {
				spawn_debris = no
			}
			effect = {
				set_fleet_flag = ag_zeta_crisis_guardian_fleet
				set_fleet_flag = ag_zeta_crisis_home_guardian_fleet
				set_owner = event_target:ag_zeta_crisis_country
				set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
				
				while = {
					count = @ag_zeta_crisis_home_guardian_fleet_num_large_ships
					ag_zeta_crisis_large_ship_spawn = yes
				}
				while = {
					count = @ag_zeta_crisis_home_guardian_fleet_num_medium_ships
					ag_zeta_crisis_medium_ship_spawn = yes
				}
				while = {
					count = @ag_zeta_crisis_home_guardian_fleet_num_small_ships
					ag_zeta_crisis_small_ship_spawn = yes
				}
				while = {
					count = @ag_zeta_crisis_home_guardian_fleet_num_support_ships
					ag_zeta_crisis_support_ship_spawn = yes
				}
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
				set_formation_scale = 5.0
				set_fleet_stance = aggressive
				set_aggro_range = 1000
				set_aggro_range_measure_from = self
			}
		}
	}
	else = {
		create_fleet = {
			name = "NAME_ag_zeta_crisis_guardian_fleet"
			settings = {
				spawn_debris = no
			}
			effect = {
				set_fleet_flag = ag_zeta_crisis_guardian_fleet
				set_fleet_flag = ag_zeta_crisis_gate_guardian_fleet
				set_owner = event_target:ag_zeta_crisis_country
				set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
				
				while = {
					count = @ag_zeta_crisis_gate_guardian_fleet_num_large_ships
					ag_zeta_crisis_large_ship_spawn = yes
				}
				while = {
					count = @ag_zeta_crisis_gate_guardian_fleet_num_medium_ships
					ag_zeta_crisis_medium_ship_spawn = yes
				}
				while = {
					count = @ag_zeta_crisis_gate_guardian_fleet_num_small_ships
					ag_zeta_crisis_small_ship_spawn = yes
				}
				while = {
					count = @ag_zeta_crisis_gate_guardian_fleet_num_support_ships
					ag_zeta_crisis_support_ship_spawn = yes
				}
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
				set_formation_scale = 5.0
				set_fleet_stance = aggressive
				set_aggro_range = 1000
				set_aggro_range_measure_from = self
			}
		}
	}
}

ag_spawn_zeta_crisis_assault_fleet = {
	random_list = {
		50 = {
			create_fleet = {
				name = "NAME_ag_zeta_crisis_assault_fleet"
				settings = {
					spawn_debris = no
				}
				effect = {
					set_fleet_flag = ag_zeta_crisis_assault_fleet
					set_fleet_flag = ag_zeta_crisis_assault_fleet_1
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					
					while = {
						count = @ag_zeta_crisis_assault_fleet_1_num_large_ships
						ag_zeta_crisis_large_ship_spawn = yes
					}
					while = {
						count = @ag_zeta_crisis_assault_fleet_1_num_medium_ships
						ag_zeta_crisis_medium_ship_spawn = yes
					}
					while = {
						count = @ag_zeta_crisis_assault_fleet_1_num_small_ships
						ag_zeta_crisis_small_ship_spawn = yes
					}
					while = {
						count = @ag_zeta_crisis_assault_fleet_1_num_support_ships
						ag_zeta_crisis_support_ship_spawn = yes
					}
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
					set_formation_scale = 5.0
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
					
					fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
				}
			}
		}
		50 = {
			create_fleet = {
				name = "NAME_ag_zeta_crisis_assault_fleet"
				settings = {
					spawn_debris = no
				}
				effect = {
					set_fleet_flag = ag_zeta_crisis_assault_fleet
					set_fleet_flag = ag_zeta_crisis_assault_fleet_2
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					
					while = {
						count = @ag_zeta_crisis_assault_fleet_2_num_large_ships
						ag_zeta_crisis_large_ship_spawn = yes
					}
					while = {
						count = @ag_zeta_crisis_assault_fleet_2_num_medium_ships
						ag_zeta_crisis_medium_ship_spawn = yes
					}
					while = {
						count = @ag_zeta_crisis_assault_fleet_2_num_small_ships
						ag_zeta_crisis_small_ship_spawn = yes
					}
					while = {
						count = @ag_zeta_crisis_assault_fleet_2_num_support_ships
						ag_zeta_crisis_support_ship_spawn = yes
					}
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
					set_formation_scale = 5.0
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
					
					fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
				}
			}
		}
	}
}

ag_spawn_zeta_crisis_patrol_fleet = {
	create_fleet = {
		name = "NAME_ag_zeta_crisis_patrol_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_patrol_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			
			while = {
				count = @ag_zeta_crisis_patrol_fleet_num_large_ships
				ag_zeta_crisis_large_ship_spawn = yes
			}
			while = {
				count = @ag_zeta_crisis_patrol_fleet_num_medium_ships
				ag_zeta_crisis_medium_ship_spawn = yes
			}
			while = {
				count = @ag_zeta_crisis_patrol_fleet_num_small_ships
				ag_zeta_crisis_small_ship_spawn = yes
			}
			while = {
				count = @ag_zeta_crisis_patrol_fleet_num_support_ships
				ag_zeta_crisis_support_ship_spawn = yes
			}
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
			set_formation_scale = 5.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
					
			fleet_event = { id = ag_zeta_crisis.72 days = 3 random = 2 }
		}
	}
}

ag_spawn_zeta_crisis_protector_fleet = {
	create_fleet = {
		name = "NAME_ag_zeta_crisis_protector_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_protector_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			
			while = {
				count = @ag_zeta_crisis_protector_fleet_num_large_ships
				ag_zeta_crisis_large_ship_spawn = yes
			}
			while = {
				count = @ag_zeta_crisis_protector_fleet_num_medium_ships
				ag_zeta_crisis_medium_ship_spawn = yes
			}
			while = {
				count = @ag_zeta_crisis_protector_fleet_num_small_ships
				ag_zeta_crisis_small_ship_spawn = yes
			}
			while = {
				count = @ag_zeta_crisis_protector_fleet_num_support_ships
				ag_zeta_crisis_support_ship_spawn = yes
			}
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
			set_formation_scale = 5.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
					
			fleet_event = { id = ag_zeta_crisis.73 days = 2 random = 2 }
		}
	}
}

ag_spawn_zeta_crisis_construction_ship = {
	create_fleet = {
		name = "NAME_ag_zeta_crisis_construction_ship_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_construction_ship_fleet
			set_owner = event_target:ag_zeta_crisis_country
			ag_zeta_crisis_construction_ship_spawn = yes
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
			set_fleet_stance = passive
					
			fleet_event = { id = ag_zeta_crisis.81 days = 4 random = 2 }
		}
	}
}

ag_psi_titan_spawn = {
	create_ship = {
		name = "NAME_ag_psi_titan_ship"
		design = "NAME_ag_zeta_titan"
		prefix = no
		effect = {
			if = {
				limit = { always = $ag_is_player|no$ }
				set_ship_flag = ag_zeta_titan_player
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 701 }
			}
			ag_set_disable_at_health = { ag_value = 0.02 }
			ag_difficulty_bonus = yes
		}
	}
}
ag_psi_battleship_spawn = {
	create_ship = {
		name = "NAME_ag_psi_battleship_ship"
		design = "NAME_ag_zeta_battleship"
		prefix = no
		effect = {
			ag_set_disable_at_health = { ag_value = 0.02 }
			ag_difficulty_bonus = yes
		}
	}
}
ag_psi_destroyer_spawn = {
	create_ship = {
		name = "NAME_ag_psi_destroyer_ship"
		design = "NAME_ag_zeta_destroyer"
		prefix = no
		effect = {
			ag_set_disable_at_health = { ag_value = 0.02 }
			ag_difficulty_bonus = yes
		}
	}
}

ag_spawn_psi_area_reinforcement = {
	create_fleet = {
		name = "NAME_ag_psi_guardian_fleet"
		settings = {
			spawn_debris = no
			can_change_composition = no
			uses_naval_capacity = no
			can_disband = no
		}
		effect = {
			set_fleet_flag = ag_ancient_psi_guardian_fleet
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_owner = $ag_fleet_owner$
			set_fleet_bombardment_stance = ag_ancient_bombardment
			while = {
				count = @ag_psi_guardian_assault_fleet_num_titans
				ag_psi_titan_spawn = { ag_is_player = $ag_is_player|no$ ag_owner = $ag_fleet_owner$ }
			}
			while = {
				count = @ag_psi_guardian_assault_fleet_num_battleships
				ag_psi_battleship_spawn = yes
			}
			while = {
				count = @ag_psi_guardian_assault_fleet_num_destroyers
				ag_psi_destroyer_spawn = yes
			}
			set_location = {
				target = $ag_fleet_location$
				distance = 5
				angle = random 
			}
			set_formation_scale = 5.0
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
		}
	}
}

ag_ancient_psi_guardian_damaged_fleet_reinforcement = {
	every_owned_fleet = {
		limit = {
			has_fleet_flag = ag_ancient_psi_guardian_fleet
			is_in_combat = no
			any_owned_ship = {
				OR = {
					is_ship_size = ag_zeta_titan
					is_ship_size = ag_zeta_titan_psi
				}
			}
		}
		if = {
			limit = {
				count_owned_ship = {
					limit = {
						OR = {
							is_ship_size = ag_zeta_battleship
							is_ship_size = ag_zeta_battleship_psi
						}
					}
					count < @ag_psi_guardian_assault_fleet_num_battleships
				}
			}
			if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_battleship
								is_ship_size = ag_zeta_battleship_psi
							}
						}
						count < @ag_psi_guardian_assault_fleet_num_battleships_1
					}
				}
				random_list = {
					50 = {
						while = {
							count = 2
							ag_zeta_battleship_spawn = yes
						}
					}
					50 = {
						ag_zeta_battleship_spawn = yes
					}
				}
			}
			else = {
				ag_zeta_battleship_spawn = yes
			}
		}
		if = {
			limit = {
				count_owned_ship = {
					limit = {
						OR = {
							is_ship_size = ag_zeta_destroyer
							is_ship_size = ag_zeta_destroyer_psi
						}
					}
					count < @ag_psi_guardian_assault_fleet_num_destroyers
				}
			}
			if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_assault_fleet_num_destroyers_3
					}
				}
				random_list = {
					25 = {
						while = {
							count = 4
							ag_zeta_destroyer_spawn = yes
						}
					}
					25 = {
						while = {
							count = 3
							ag_zeta_destroyer_spawn = yes
						}
					}
					25 = {
						while = {
							count = 2
							ag_zeta_destroyer_spawn = yes
						}
					}
					25 = {
						ag_zeta_destroyer_spawn = yes
					}
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_assault_fleet_num_destroyers_2
					}
				}
				random_list = {
					33 = {
						while = {
							count = 3
							ag_zeta_destroyer_spawn = yes
						}
					}
					33 = {
						while = {
							count = 2
							ag_zeta_destroyer_spawn = yes
						}
					}
					33 = {
						ag_zeta_destroyer_spawn = yes
					}
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_assault_fleet_num_destroyers_1
					}
				}
				random_list = {
					50 = {
						while = {
							count = 2
							ag_zeta_destroyer_spawn = yes
						}
					}
					50 = {
						ag_zeta_destroyer_spawn = yes
					}
				}
			}
			else_if = {
				limit = {
					always = yes
				}
				ag_zeta_destroyer_spawn = yes
			}
		}
	}
	every_owned_fleet = {
		limit = {
			has_fleet_flag = ag_ancient_psi_guardian_home_fleet
			any_owned_ship = {
				OR = {
					is_ship_size = ag_zeta_titan
					is_ship_size = ag_zeta_titan_psi
				}
			}
		}
		if = {
			limit = {
				count_owned_ship = {
					limit = {
						OR = {
							is_ship_size = ag_zeta_battleship
							is_ship_size = ag_zeta_battleship_psi
						}
					}
					count < @ag_psi_guardian_fleet_num_battleships
				}
			}
			if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_battleship
								is_ship_size = ag_zeta_battleship_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_battleships_3
					}
				}
				while = {
					count = 4
					ag_zeta_battleship_spawn = yes
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_battleship
								is_ship_size = ag_zeta_battleship_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_battleships_2
					}
				}
				while = {
					count = 3
					ag_zeta_battleship_spawn = yes
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_battleship
								is_ship_size = ag_zeta_battleship_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_battleships_1
					}
				}
				while = {
					count = 2
					ag_zeta_battleship_spawn = yes
				}
			}
			else_if = {
				limit = {
					always = yes
				}
				ag_zeta_battleship_spawn = yes
			}
		}
		if = {
			limit = {
				count_owned_ship = {
					limit = {
						OR = {
							is_ship_size = ag_zeta_destroyer
							is_ship_size = ag_zeta_destroyer_psi
						}
					}
					count < @ag_psi_guardian_fleet_num_destroyers
				}
			}
			if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_destroyers_7
					}
				}
				while = {
					count = 8
					ag_zeta_destroyer_spawn = yes
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_destroyers_6
					}
				}
				while = {
					count = 7
					ag_zeta_destroyer_spawn = yes
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_destroyers_5
					}
				}
				while = {
					count = 6
					ag_zeta_destroyer_spawn = yes
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_destroyers_4
					}
				}
				while = {
					count = 5
					ag_zeta_destroyer_spawn = yes
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_destroyers_3
					}
				}
				while = {
					count = 4
					ag_zeta_destroyer_spawn = yes
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_destroyers_2
					}
				}
				while = {
					count = 3
					ag_zeta_destroyer_spawn = yes
				}
			}
			else_if = {
				limit = {
					count_owned_ship = {
						limit = {
							OR = {
								is_ship_size = ag_zeta_destroyer
								is_ship_size = ag_zeta_destroyer_psi
							}
						}
						count < @ag_psi_guardian_fleet_num_destroyers_1
					}
				}
				while = {
					count = 2
					ag_zeta_destroyer_spawn = yes
				}
			}
			else_if = {
				limit = {
					always = yes
				}
				ag_zeta_destroyer_spawn = yes
			}
		}
	}
}

#######################################
###				Theta
#######################################

ag_ancient_primitive_country_ships = {
	random_list = {
		33 = {
			while = {
				count = @ag_ancient_starfish_fleet_num_ships_1
				create_ship = {
					name = "NAME_ag_ancient_primitive_country_ship"
					design = "NAME_ag_experiment_ship_hostile"
					prefix = no
					
					effect = {
						ag_difficulty_bonus = yes
						create_ambient_object = {
							location = this
							type = horror_spawn_object
						}
					}
				}
			}
		}
		33 = {
			while = {
				count = @ag_ancient_starfish_fleet_num_ships_2
				create_ship = {
					name = "NAME_ag_ancient_primitive_country_ship"
					design = "NAME_ag_experiment_ship_hostile"
					prefix = no
					
					effect = {
						ag_difficulty_bonus = yes
						create_ambient_object = {
							location = this
							type = horror_spawn_object
						}
					}
				}
			}
		}
		33 = {
			while = {
				count = @ag_ancient_starfish_fleet_num_ships_3
				create_ship = {
					name = "NAME_ag_ancient_primitive_country_ship"
					design = "NAME_ag_experiment_ship_hostile"
					prefix = no
					
					effect = {
						ag_difficulty_bonus = yes
						create_ambient_object = {
							location = this
							type = horror_spawn_object
						}
					}
				}
			}
		}
	}
	if = {
		limit = {
			event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty_temp value > 3 } }
		}
		while = {
			count = @ag_ancient_starfish_fleet_extra_ships_hard_2
			create_ship = {
				name = "NAME_ag_ancient_primitive_country_ship"
				design = "NAME_ag_experiment_ship_hostile"
				prefix = no
				
				effect = {
					ag_difficulty_bonus = yes
					create_ambient_object = {
						location = this
						type = horror_spawn_object
					}
				}
			}
		}
	}
}

#######################################
###				Wanderer
#######################################

ag_ancient_wandering_ship_spawn = {
	create_fleet = {
		name = "NAME_ag_ancient_wandering_ship_fleet"
		settings = {
			is_boss = yes
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_ancient_wandering_ship_fleet
			save_global_event_target_as = ag_ancient_wandering_ship_fleet
			set_owner = event_target:ag_ancient_wanderer_country
			set_fleet_bombardment_stance = ag_ancient_bombardment
			set_variable = {
				which = ag_num_disabled_anchor_stations
				value = 0
			}
			create_ship = {
				name = "NAME_ag_ancient_wandering_ship_ship"
				design = "NAME_ag_ancient_wandering_ship_hostile"
				prefix = no
				effect = {
					set_ship_flag = ag_ancient_wandering_ship
					ag_set_disable_at_health = { ag_value = 0.05 }
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target$
				distance = $ag_distance$
				angle = random
			}
			auto_move_to_planet = {
				target = $ag_target$
				clear_auto_move_on_arrival = yes
			}
			set_fleet_stance = passive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}
ag_ancient_anchor_station_spawn = {
	create_fleet = {
		name = "NAME_ag_ancient_anchor_station_fleet"
		settings = {
			is_boss = yes
			spawn_debris = no
		}
		effect = {
			set_owner = event_target:ag_ancient_anchor_station_country
			create_ship = {
				name = "NAME_ag_ancient_anchor_station_ship"
				design = "NAME_ag_ancient_anchor_station_hostile"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = fromfrom
				distance = -1
				angle = 0
			}
		}
	}
}
ag_create_ancient_wandering_ship_player = {
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_ancient_wandering_ship_ship"
			design = "NAME_ag_ancient_wandering_ship_1"
			prefix = no
			effect = {
				set_ship_flag = ag_ancient_wandering_ship_player
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 2601 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_ancient_wandering_ship_ship"
			design = "NAME_ag_ancient_wandering_ship_0"
			prefix = no
			effect = {
				set_ship_flag = ag_ancient_wandering_ship_player
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 2601 }
			}
		}
	}
}
ag_ancient_wandering_ship_player_spawn = {
	create_fleet = {
		name = "NAME_ag_ancient_wandering_ship_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_ancient_wandering_ship_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self
		}
	}
}

#######################################
###				Others
#######################################

ag_lost_ancient_ship_player_spawn = {
	if = {
		limit = { always = $ag_is_battleship|yes$ }
		if = {
			limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
			random_owned_ship = {
				limit = { has_ship_flag = ag_lost_ancient_ship }
				fleet = {
					if = {
						limit = { exists = leader }
						leader = {
							save_event_target_as = ag_target_leader
							unassign_leader = this
						}
					}
					create_ship = {
						name = "NAME_ag_lost_ancient_ship"
						design = "NAME_ag_lost_ancient_ship_battleship_form[[ag_target_ftl_drive]$ag_target_ftl_drive$]"
						prefix = no
						effect = {
							set_ship_flag = ag_lost_ancient_ship
							ag_difficulty_bonus = yes
							ag_lost_ancient_ship_debuff = yes
							ag_ship_subsystem_effect_check = { ag_owner = prevprevprev ag_ship_id = 2501 }
						}
					}
				}
				delete_ship = this
				if = {
					limit = { exists = event_target:ag_target_leader }
					fleet = { assign_leader = event_target:ag_target_leader }
				}
			}
		}
		else = {
			remove_country_flag = ag_lost_ancient_ship_science_ship_form_active
			set_country_flag = ag_lost_ancient_ship_battleship_form_active
			random_owned_ship = {
				limit = { has_ship_flag = ag_lost_ancient_ship }
				fleet = {
					if = {
						limit = { exists = leader }
						leader = {
							save_event_target_as = ag_target_leader
							unassign_leader = this
						}
					}
					save_event_target_as = ag_lost_ancient_ship_loc
				}
			}
			create_fleet = {
				name = event_target:ag_lost_ancient_ship_loc
				settings = {
					spawn_debris = no
					can_upgrade = no
					uses_naval_capacity = no
				}
				effect = {
					set_owner = prev
					if = {
						limit = { exists = event_target:ag_target_leader }
						fleet = { assign_leader = event_target:ag_target_leader }
					}
					create_ship = {
						name = "NAME_ag_lost_ancient_ship"
						design = "NAME_ag_lost_ancient_ship_battleship_form[[ag_target_ftl_drive]$ag_target_ftl_drive$]"
						prefix = no
						effect = {
							set_ship_flag = ag_lost_ancient_ship
							ag_difficulty_bonus = yes
							ag_lost_ancient_ship_debuff = yes
							ag_ship_subsystem_effect_check = { ag_owner = prevprev ag_ship_id = 2501 }
							if = {
								limit = { exists = event_target:ag_starlight_2_ship }
								clear_global_event_target = ag_starlight_2_ship
							}
							save_global_event_target_as = ag_starlight_2_ship
						}
					}
					set_location = {
						target = event_target:ag_lost_ancient_ship_loc
						distance = -1
						angle = 0
					}
				}
			}
			event_target:ag_lost_ancient_ship_loc = { random_owned_ship = {
				limit = { has_ship_flag = ag_lost_ancient_ship }
				delete_ship = this
			} }
		}
	}
	else = {
		remove_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		random_owned_ship = {
			limit = { has_ship_flag = ag_lost_ancient_ship }
			fleet = {
				if = {
					limit = { exists = leader }
					leader = {
						save_event_target_as = ag_target_leader
						unassign_leader = this
					}
				}
				save_event_target_as = ag_lost_ancient_ship_loc
			}
		}
		create_fleet = {
			name = event_target:ag_lost_ancient_ship_loc
			settings = {
				spawn_debris = no
				can_upgrade = no
				uses_naval_capacity = no
			}
			effect = {
				set_owner = prev
				if = {
					limit = { exists = event_target:ag_target_leader }
					fleet = { assign_leader = event_target:ag_target_leader }
				}
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_science_ship_form[[ag_target_ftl_drive]$ag_target_ftl_drive$]"
					prefix = no
					effect = {
						set_ship_flag = ag_lost_ancient_ship
						ag_difficulty_bonus = yes
						ag_lost_ancient_ship_debuff = yes
						ag_ship_subsystem_effect_check = { ag_owner = prevprev ag_ship_id = 2501 }
						if = {
							limit = { exists = event_target:ag_starlight_2_ship }
							clear_global_event_target = ag_starlight_2_ship
						}
						save_global_event_target_as = ag_starlight_2_ship
					}
				}
				set_location = {
					target = event_target:ag_lost_ancient_ship_loc
					distance = -1
					angle = 0
				}
			}
		}
		event_target:ag_lost_ancient_ship_loc = { random_owned_ship = {
			limit = { has_ship_flag = ag_lost_ancient_ship }
			delete_ship = this
		} }
	}
}
ag_lost_ancient_ship_to_science_ship = {
	if = {
		limit = { exists = event_target:ag_starlight_2_ship }
		event_target:ag_starlight_2_ship = {
			if = { limit = { has_component = ag_ancient_ftl_drive_1 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no } }
			}
			else_if = { limit = { has_component = PSI_JUMP_DRIVE_1 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _psi_jumpdrive_1 } }
			}
			else_if = { limit = { has_component = JUMP_DRIVE_1 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _jumpdrive_1 } }
			}
			else_if = { limit = { has_component = HYPER_DRIVE_3 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_3 } }
			}
			else_if = { limit = { has_component = HYPER_DRIVE_2 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_2 } }
			}
			else_if = { limit = { always = yes }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_1 } }
			}
		}
	}
}
ag_lost_ancient_ship_to_battleship = {
	if = {
		limit = { exists = event_target:ag_starlight_2_ship }
		event_target:ag_starlight_2_ship = {
			if = { limit = { has_component = ag_ancient_ftl_drive_1 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes } }
			}
			else_if = { limit = { has_component = PSI_JUMP_DRIVE_1 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _psi_jumpdrive_1 } }
			}
			else_if = { limit = { has_component = JUMP_DRIVE_1 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _jumpdrive_1 } }
			}
			else_if = { limit = { has_component = HYPER_DRIVE_3 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_3 } }
			}
			else_if = { limit = { has_component = HYPER_DRIVE_2 }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_2 } }
			}
			else_if = { limit = { always = yes }
				prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_1 } }
			}
		}
	}
}

ag_spawn_lost_ancient_ship_via_tech = {
	if = {
		limit = { always = $ag_is_battleship|yes$ }
		remove_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_battleship_form_active
		create_fleet = {
			name = "NAME_ag_lost_ancient_ship_fleet"
			settings = {
				spawn_debris = no
				can_upgrade = no
				can_change_composition = no
				uses_naval_capacity = no
			}
			effect = {
				set_owner = prev
				prev = {
					if = {
						limit = {
							OR = {
								NOT = { has_country_flag = ag_lost_ancient_ship_ftl_unusable }
								has_country_flag = ag_lost_ancient_ship_restored
							}
						}
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship } }
					}
					else_if = {
						limit = { has_technology = tech_psi_jump_drive_1 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _psi_jumpdrive_1 } }
					}
					else_if = {
						limit = { has_technology = tech_jump_drive_1 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _jumpdrive_1 } }
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_3 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _hyperdrive_3 } }
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_2 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _hyperdrive_2 } }
					}
					else_if = {
						limit = { always = yes }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _hyperdrive_1 } }
					}
				}
				set_location = {
					target = $ag_location_target$
					distance = -1
					angle = 0
				}
			}
		}
	}
	else = {
		remove_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		create_fleet = {
			name = "NAME_ag_lost_ancient_ship_fleet"
			settings = {
				spawn_debris = no
				can_upgrade = no
				can_change_composition = no
				uses_naval_capacity = no
			}
			effect = {
				set_owner = prev
				prev = {
					if = {
						limit = {
							OR = {
								NOT = { has_country_flag = ag_lost_ancient_ship_ftl_unusable }
								has_country_flag = ag_lost_ancient_ship_restored
							}
						}
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science } }
					}
					else_if = {
						limit = { has_technology = tech_psi_jump_drive_1 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science ag_target_ftl_drive = _psi_jumpdrive_1 } }
					}
					else_if = {
						limit = { has_technology = tech_jump_drive_1 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science ag_target_ftl_drive = _jumpdrive_1 } }
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_3 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science ag_target_ftl_drive = _hyperdrive_3 } }
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_2 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science ag_target_ftl_drive = _hyperdrive_2 } }
					}
					else_if = {
						limit = { always = yes }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science ag_target_ftl_drive = _hyperdrive_1 } }
					}
				}
				set_location = {
					target = $ag_location_target$
					distance = -1
					angle = 0
				}
			}
		}
	}
}
ag_spawn_lost_ancient_ship_via_tech_1 = {
	create_ship = {
		name = "NAME_ag_lost_ancient_ship"
		design = "NAME_ag_lost_ancient_ship_[[ag_target_ship_size]$ag_target_ship_size$]_ship_form[[ag_target_ftl_drive]$ag_target_ftl_drive$]"
		prefix = no
		effect = {
			set_ship_flag = ag_lost_ancient_ship
			ag_difficulty_bonus = yes
			ag_lost_ancient_ship_debuff = yes
			ag_ship_subsystem_effect_check = { ag_owner = root.owner ag_ship_id = 2501 }
			if = {
				limit = { exists = event_target:ag_starlight_2_ship }
				clear_global_event_target = ag_starlight_2_ship
			}
			save_global_event_target_as = ag_starlight_2_ship
		}
	}
}