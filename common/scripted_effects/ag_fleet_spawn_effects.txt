
#######################################
###			   Primitive
#######################################

ag_9102_preserved_world_drones_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_ancient_fleet"
		settings = { spawn_debris = no is_boss = yes }
		effect = {
			set_owner = event_target:ag_ancient_primitive_monitor_country
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|ancient_monitor_drone_squardron|ag_ship_index|drones|
				create_ship = {
					name = random
					design = "NAME_ag_ancient_monitor_drone_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
			}
			set_location = { target = event_target:ag_primitive_broken_world distance = 0 angle = random }
		}
	}
}

#######################################
###				Alpha
#######################################

ag_create_alpha_titan_player = {
	optimize_memory
	if = {
		limit = { $ag_owner$ = { has_country_flag = ag_ship_subsystem_enabled_101_41 } }
		if = {
			limit = { always = $ag_unlock_ship|no$ }
			create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_1_alt"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_alpha_titan_psi_weapon_enabled
					[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 401 }
					if = {
						limit = { $ag_owner$ = { has_country_flag = ag_ship_subsystem_enabled_101_42 } }
						set_variable = { which = ag_alpha_psi_shield_charge value = 0 }
						ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
					}
				}
			}
		}
		else = {
			create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_0_alt"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_alpha_titan_psi_weapon_enabled
					[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 401 }
					if = {
						limit = { $ag_owner$ = { has_country_flag = ag_ship_subsystem_enabled_101_42 } }
						set_variable = { which = ag_alpha_psi_shield_charge value = 0 }
						ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
					}
				}
			}
		}
	}
	else = {
		if = {
			limit = { always = $ag_unlock_ship|no$ }
			create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_1"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 401 }
					if = {
						limit = { $ag_owner$ = { has_country_flag = ag_ship_subsystem_enabled_101_42 } }
						set_variable = { which = ag_alpha_psi_shield_charge value = 0 }
						ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
					}
				}
			}
		}
		else = {
			create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_0"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 401 }
					if = {
						limit = { $ag_owner$ = { has_country_flag = ag_ship_subsystem_enabled_101_42 } }
						set_variable = { which = ag_alpha_psi_shield_charge value = 0 }
						ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
					}
				}
			}
		}
	}
}
ag_alpha_titan_player_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_alpha_titan_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_alpha_titan_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

ag_create_event_alpha_titan_player = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_alpha_titan_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = root.owner
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_0"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_event_alpha_titan
					save_global_event_target_as = ag_event_alpha_titan
					ag_difficulty_bonus = yes
					ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = event }
					if = { limit = { root.owner = { has_country_flag = ag_alpha_22_fired } } ship_event = { id = ag_alpha.23 days = 180 random = 180 } }
				}
			}
			set_location = { target = root distance = -1 angle = 0 }
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
	root.owner = { ag_alpha_randomize_ancient_record = yes }
}

ag_alpha_titan_player_psi_shield_effect = {
	optimize_memory
	save_event_target_as = ag_alpha_titan_effect_target
	if = {
		limit = { is_ship_size = ag_alpha_titan_0 }
		ag_spawn_explosion_effect = { ag_color = blue ag_scale = l }
		if = {
			limit = { has_ship_flag = ag_alpha_titan_psi_weapon_enabled }
			fleet = { create_ship = {
				name = prev
				design = "NAME_ag_alpha_titan_0_alt_shielded"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_alpha_titan_psi_weapon_enabled
					set_ship_flag = ag_alpha_titan_psi_shield_enabled
					copy_flags_and_variables_from = event_target:ag_alpha_titan_effect_target
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = event_target:ag_alpha_titan_effect_target.owner ag_ship_id = 401 }
					ag_set_ship_invincible = yes
					set_variable = { which = ag_alpha_psi_shield_days value = event_target:ag_alpha_titan_effect_target.$ag_days$ }
					set_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_charge }
					subtract_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.$ag_days$ }
					ship_event = { id = ag_subsystem.101 days = 1 }
				}
			} }
		}
		else = {
			fleet = { create_ship = {
				name = prev
				design = "NAME_ag_alpha_titan_0_shielded"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_alpha_titan_psi_shield_enabled
					copy_flags_and_variables_from = event_target:ag_alpha_titan_effect_target
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = event_target:ag_alpha_titan_effect_target.owner ag_ship_id = 401 }
					ag_set_ship_invincible = yes
					set_variable = { which = ag_alpha_psi_shield_days value = event_target:ag_alpha_titan_effect_target.$ag_days$ }
					set_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_charge }
					subtract_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.$ag_days$ }
					ship_event = { id = ag_subsystem.101 days = 1 }
				}
			} }
		}
	}
	else = {
		ag_spawn_explosion_effect = { ag_color = red ag_scale = l }
		if = {
			limit = { has_ship_flag = ag_alpha_titan_psi_weapon_enabled }
			fleet = { create_ship = {
				name = prev
				design = "NAME_ag_alpha_titan_1_alt_shielded"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_alpha_titan_psi_weapon_enabled
					set_ship_flag = ag_alpha_titan_psi_shield_enabled
					copy_flags_and_variables_from = event_target:ag_alpha_titan_effect_target
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = event_target:ag_alpha_titan_effect_target.owner ag_ship_id = 401 }
					ag_set_ship_invincible = yes
					set_variable = { which = ag_alpha_psi_shield_days value = event_target:ag_alpha_titan_effect_target.$ag_days$ }
					set_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_charge }
					subtract_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.$ag_days$ }
					ship_event = { id = ag_subsystem.101 days = 1 }
				}
			} }
		}
		else = {
			fleet = { create_ship = {
				name = prev
				design = "NAME_ag_alpha_titan_1_shielded"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_alpha_titan_psi_shield_enabled
					copy_flags_and_variables_from = event_target:ag_alpha_titan_effect_target
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = event_target:ag_alpha_titan_effect_target.owner ag_ship_id = 401 }
					ag_set_ship_invincible = yes
					set_variable = { which = ag_alpha_psi_shield_days value = event_target:ag_alpha_titan_effect_target.$ag_days$ }
					set_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_charge }
					subtract_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.$ag_days$ }
					ship_event = { id = ag_subsystem.101 days = 1 }
				}
			} }
		}
	}
	delete_ship = this
}
ag_alpha_titan_player_remove_psi_shield_effect = {
	optimize_memory
	save_event_target_as = ag_alpha_titan_effect_target
	if = {
		limit = { is_ship_size = ag_alpha_titan_0 }
		ag_spawn_explosion_effect = { ag_color = blue ag_scale = l }
		if = {
			limit = { has_ship_flag = ag_alpha_titan_psi_weapon_enabled }
			fleet = { create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_0_alt"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_alpha_titan_psi_weapon_enabled
					copy_flags_and_variables_from = event_target:ag_alpha_titan_effect_target
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = event_target:ag_alpha_titan_effect_target.owner ag_ship_id = 401 }
					set_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_charge }
					if = {
						limit = { event_target:ag_alpha_titan_effect_target = { is_variable_set = ag_alpha_psi_shield_days check_variable = { which = ag_alpha_psi_shield_days value > 0 } } }
						change_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_days }
					}
					ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
				}
			} }
		}
		else = {
			fleet = { create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_0"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					copy_flags_and_variables_from = event_target:ag_alpha_titan_effect_target
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = event_target:ag_alpha_titan_effect_target.owner ag_ship_id = 401 }
					set_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_charge }
					if = {
						limit = { event_target:ag_alpha_titan_effect_target = { is_variable_set = ag_alpha_psi_shield_days check_variable = { which = ag_alpha_psi_shield_days value > 0 } } }
						change_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_days }
					}
					ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
				}
			} }
		}
	}
	else = {
		ag_spawn_explosion_effect = { ag_color = red ag_scale = l }
		if = {
			limit = { has_ship_flag = ag_alpha_titan_psi_weapon_enabled }
			fleet = { create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_1_alt"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					set_ship_flag = ag_alpha_titan_psi_weapon_enabled
					copy_flags_and_variables_from = event_target:ag_alpha_titan_effect_target
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = event_target:ag_alpha_titan_effect_target.owner ag_ship_id = 401 }
					set_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_charge }
					if = {
						limit = { event_target:ag_alpha_titan_effect_target = { is_variable_set = ag_alpha_psi_shield_days check_variable = { which = ag_alpha_psi_shield_days value > 0 } } }
						change_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_days }
					}
					ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
				}
			} }
		}
		else = {
			fleet = { create_ship = {
				name = "NAME_ag_alpha_titan_ship"
				design = "NAME_ag_alpha_titan_1"
				prefix = no
				effect = {
					set_ship_flag = ag_alpha_titan_player
					copy_flags_and_variables_from = event_target:ag_alpha_titan_effect_target
					ag_difficulty_bonus = yes
					ag_ship_subsystem_effect_check = { ag_owner = event_target:ag_alpha_titan_effect_target.owner ag_ship_id = 401 }
					set_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_charge }
					if = {
						limit = { event_target:ag_alpha_titan_effect_target = { is_variable_set = ag_alpha_psi_shield_days check_variable = { which = ag_alpha_psi_shield_days value > 0 } } }
						change_variable = { which = ag_alpha_psi_shield_charge value = event_target:ag_alpha_titan_effect_target.ag_alpha_psi_shield_days }
					}
					ship_event = { id = ag_subsystem.102 days = @ag_alpha_psi_shield_charge_delay }
				}
			} }
		}
	}
	delete_ship = this
}

ag_create_random_shielded_alpha_titan_hostile = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_alpha_titan_fleet"
		settings = { spawn_debris = no is_boss = yes }
		effect = {
			set_fleet_flag = ag_alpha_titan_hostile_fleet
			set_owner = event_target:ag_ancient_alpha_guardian_country
			save_global_event_target_as = ag_alpha_titan_hostile_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment

			reroll_random = yes
			random_list = {
				25 = {
					set_variable = { which = ag_alpha_titan_hostile_color value = 0 }
					create_ship = {
						name = "NAME_ag_alpha_titan_ship"
						design = "NAME_ag_alpha_titan_hostile_psi_violet"
						prefix = no
						effect = {
							set_ship_flag = ag_alpha_titan_hostile_psi_shield_enabled
							ag_difficulty_bonus = yes
							ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = event }
						}
					}
				}
				25 = {
					set_variable = { which = ag_alpha_titan_hostile_color value = 1 }
					create_ship = {
						name = "NAME_ag_alpha_titan_ship"
						design = "NAME_ag_alpha_titan_hostile_psi_red"
						prefix = no
						effect = {
							set_ship_flag = ag_alpha_titan_hostile_psi_shield_enabled
							ag_difficulty_bonus = yes
							ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = event }
						}
					}
				}
				25 = {
					set_variable = { which = ag_alpha_titan_hostile_color value = 2 }
					create_ship = {
						name = "NAME_ag_alpha_titan_ship"
						design = "NAME_ag_alpha_titan_hostile_psi_yellow"
						prefix = no
						effect = {
							set_ship_flag = ag_alpha_titan_hostile_psi_shield_enabled
							ag_difficulty_bonus = yes
							ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = event }
						}
					}
				}
				25 = {
					set_variable = { which = ag_alpha_titan_hostile_color value = 3 }
					create_ship = {
						name = "NAME_ag_alpha_titan_ship"
						design = "NAME_ag_alpha_titan_hostile_psi_teal"
						prefix = no
						effect = {
							set_ship_flag = ag_alpha_titan_hostile_psi_shield_enabled
							ag_difficulty_bonus = yes
							ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = event }
						}
					}
				}
			}

			set_location = { target = root.fleet distance = -1 angle = 0 }

			set_fleet_stance = aggressive
			set_aggro_range = 1000
			set_aggro_range_measure_from = self

			ag_spawn_explosion_effect = { ag_color = red ag_scale = xl }
		}
	}
}

ag_alpha_psionic_ships_spawn = {
	optimize_memory
	reroll_random = yes
	random_list = {
		8 = { create_ship = {
			name = "NAME_ag_alpha_psionic_cruiser_ship"
			design = "NAME_ag_alpha_psionic_cruiser"
			prefix = no
			effect = { ag_difficulty_bonus = yes }
		} }
		12 = { create_ship = {
			name = "NAME_ag_alpha_psionic_destroyer_ship"
			design = "NAME_ag_alpha_psionic_destroyer"
			prefix = no
			effect = { ag_difficulty_bonus = yes }
		} }
		20 = { create_ship = {
			name = "NAME_ag_alpha_psionic_corvette_ship"
			design = "NAME_ag_alpha_psionic_corvette"
			prefix = no
			effect = { ag_difficulty_bonus = yes }
		} }
	}
}

#######################################
###				Beta
#######################################

ag_ancient_beta_drone_type1_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_beta_drone_type1_ship"
		design = "NAME_ag_beta_drone_type1_hostile"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}
ag_ancient_beta_drone_type2_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_beta_drone_type2_ship"
		design = "NAME_ag_beta_drone_type2_hostile"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
		}
	}
}

ag_beta_guardian_drone_squadron_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_beta_drone_squadron"
		settings = {
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			set_owner = $ag_target_owner$
			set_fleet_bombardment_stance = ag_ancient_bombardment
			
			reroll_random = yes
			random_list = {
				25 = { while = { count = value:ag_num_ships_spawn|ag_fleet_index|beta|ag_ship_index|drone_type1|ag_ship_variant_b|1| ag_ancient_beta_drone_type1_spawn = yes } }
				25 = { while = { count = value:ag_num_ships_spawn|ag_fleet_index|beta|ag_ship_index|drone_type1|ag_ship_variant_b|2| ag_ancient_beta_drone_type1_spawn = yes } }
				25 = { while = { count = value:ag_num_ships_spawn|ag_fleet_index|beta|ag_ship_index|drone_type1|ag_ship_variant_b|3| ag_ancient_beta_drone_type1_spawn = yes } }
				25 = { while = { count = value:ag_num_ships_spawn|ag_fleet_index|beta|ag_ship_index|drone_type1|ag_ship_variant_b|4| ag_ancient_beta_drone_type1_spawn = yes } }
			}
			reroll_random = yes
			random_list = {
				25 = { while = { count = value:ag_num_ships_spawn|ag_fleet_index|beta|ag_ship_index|drone_type2|ag_ship_variant_b|1| ag_ancient_beta_drone_type2_spawn = yes } }
				25 = { while = { count = value:ag_num_ships_spawn|ag_fleet_index|beta|ag_ship_index|drone_type2|ag_ship_variant_b|2| ag_ancient_beta_drone_type2_spawn = yes } }
				25 = { while = { count = value:ag_num_ships_spawn|ag_fleet_index|beta|ag_ship_index|drone_type2|ag_ship_variant_b|3| ag_ancient_beta_drone_type2_spawn = yes } }
				25 = { while = { count = value:ag_num_ships_spawn|ag_fleet_index|beta|ag_ship_index|drone_type2|ag_ship_variant_b|4| ag_ancient_beta_drone_type2_spawn = yes } }
			}

			random_list = {
				33 = { set_location = { target = prev distance = 5 angle = random } }
				33 = { set_location = { target = prev distance = 10 angle = random } }
				33 = { set_location = { target = prev distance = 15 angle = random } }
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

ag_beta_source_station_spawn = {
	optimize_memory
	set_star_flag = ag_beta_station_hostility
	ag_create_ancient_guardian = {
		ag_country_name = "NAME_ag_ancient_signal_station_guardian"
		ag_country_type = ag_ancient_beta_signal_station_guardian
	}
	last_created_country = {
		save_event_target_as = ag_target_ancient_guardian_country
		ag_ancient_country_friendly_to_each_other = yes
	}
	every_country = { establish_communications_no_message = event_target:ag_target_ancient_guardian_country }
	random_system_planet = {
		limit = { is_primary_star = yes }
		create_fleet = {
			name = "NAME_ag_beta_station"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_owner = event_target:ag_target_ancient_guardian_country
				create_ship = {
					name = "NAME_ag_beta_station_type2_ship"
					design = "NAME_ag_beta_station_type2_hostile"
					prefix = no
					
					effect = {
						ag_difficulty_bonus = yes
						random_list = {
							10 = { modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } } }
							10 = { ag_set_ship_invincible = { ag_days = 1 } }
							10 = {
								modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
								ag_set_ship_invincible = { ag_days = 2 }
							}
						}
					}
				}
				set_location = { target = prev distance = -1 angle = 0 }
			}
		}
	}
	random_system_ambient_object = {
		limit = { has_ambient_object_flag = ag_beta_station_source }
		destroy_ambient_object = this
	}
	random_list = {
		25 = { }
		75 = { random_system_planet = {
			limit = { is_star = no }
			ag_beta_guardian_drone_squadron_spawn = { ag_target_owner = event_target:ag_target_ancient_guardian_country }
		} }
	}
}

ag_beta_relay_station_spawn_effect = {
	optimize_memory
	set_global_flag = ag_ancient_beta_guradian_awaken
	ag_create_ancient_guardian = {
		ag_country_name = "NAME_ag_ancient_beta_guardian"
		ag_country_type = ag_ancient_beta_guardian
	}
	last_created_country = {
		save_global_event_target_as = ag_ancient_beta_guardian_country
		set_country_flag = ag_ancient_beta_guardian_country
		ag_ancient_country_friendly_to_each_other = yes
	}
	every_country = { establish_communications_no_message = event_target:ag_ancient_beta_guardian_country }
	event_target:ag_ancient_beta_star = {
		solar_system = {
			every_system_ambient_object = {
				limit = {
					OR = {
						has_ambient_object_flag = ag_beta_station_1
						has_ambient_object_flag = ag_beta_station_2
						has_ambient_object_flag = ag_beta_station_3
					}
				}
				destroy_ambient_object = this
			}
			create_fleet = {
				name = "NAME_ag_beta_station"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_beta_guardian_country
					create_ship = {
						name = "NAME_ag_beta_station_type1_ship"
						design = "NAME_ag_beta_station_type1_hostile"
						prefix = no
						effect = {
							set_ship_flag = ag_beta_station_1
							if = {
								limit = { has_global_flag = ag_ancient_beta_relay_station_hostility }
								add_modifier = { modifier = "ag_beta_station_power" days = -1 }
							}
							ag_difficulty_bonus = yes
							ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = event }
							random_list = {
								10 = {
									modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
									ag_set_ship_invincible = { ag_days = 1 }
								}
								10 = { ag_set_ship_invincible = { ag_days = 2 } }
								10 = {
									modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
									ag_set_ship_invincible = { ag_days = 3 }
								}
							}
						}
					}
					set_location = { target = event_target:ag_ancient_beta_star distance = 150 angle = 0 }
				}
			}
			create_fleet = {
				name = "NAME_ag_beta_station"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_beta_guardian_country
					create_ship = {
						name = "NAME_ag_beta_station_type1_ship"
						design = "NAME_ag_beta_station_type1_hostile"
						prefix = no
						effect = {
							set_ship_flag = ag_beta_station_2
							if = {
								limit = { has_global_flag = ag_ancient_beta_relay_station_hostility }
								add_modifier = { modifier = "ag_beta_station_power" days = -1 }
							}
							ag_difficulty_bonus = yes
							ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = event }
							random_list = {
								10 = {
									modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
									ag_set_ship_invincible = { ag_days = 1 }
								}
								10 = { ag_set_ship_invincible = { ag_days = 2 } }
								10 = {
									modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
									ag_set_ship_invincible = { ag_days = 3 }
								}
							}
						}
					}
					set_location = { target = event_target:ag_ancient_beta_star distance = 150 angle = 120 }
				}
			}
			create_fleet = {
				name = "NAME_ag_beta_station"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:ag_ancient_beta_guardian_country
					create_ship = {
						name = "NAME_ag_beta_station_type1_ship"
						design = "NAME_ag_beta_station_type1_hostile"
						prefix = no
						effect = {
							set_ship_flag = ag_beta_station_3
							if = {
								limit = { has_global_flag = ag_ancient_beta_relay_station_hostility }
								add_modifier = { modifier = "ag_beta_station_power" days = -1 }
							}
							ag_difficulty_bonus = yes
							ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = event }
							random_list = {
								10 = {
									modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
									ag_set_ship_invincible = { ag_days = 1 }
								}
								10 = { ag_set_ship_invincible = { ag_days = 2 } }
								10 = {
									modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
									ag_set_ship_invincible = { ag_days = 3 }
								}
							}
						}
					}
					set_location = { target = event_target:ag_ancient_beta_star distance = 150 angle = 240 }
				}
			}
		}
	}
}

ag_player_relay_station_spawn = {
	optimize_memory
	$ag_owner$ = { subtract_variable = { which = ag_num_beta_station_type1_cores value = 1 } }
	if = {
		limit = { $ag_owner$ = { has_country_flag = ag_beta_ships_unlocked } }
		create_fleet = {
			name = "NAME_ag_beta_station_type1_fleet"
			settings = {
				can_upgrade = no 
				can_change_composition = no 
				can_change_leader = no 
				spawn_debris = no 
			}
			effect = {
				set_owner = $ag_owner$
				create_ship = {
					name = "NAME_ag_beta_station_type1_ship"
					design = "NAME_ag_beta_station_type1_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						set_ship_flag = $ag_ship_flag$
					}
				}
				set_location = { target = prev distance = 30 angle = $ag_angle$ }
			}
		}
	}
	else = {
		create_fleet = {
			name = "NAME_ag_beta_station_type1_fleet"
			settings = {
				can_upgrade = no 
				can_change_composition = no 
				can_change_leader = no 
				spawn_debris = no 
			}
			effect = {
				set_owner = $ag_owner$
				create_ship = {
					name = "NAME_ag_beta_station_type1_ship"
					design = "NAME_ag_beta_station_type1_0"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						set_ship_flag = $ag_ship_flag$
					}
				}
				set_location = { target = prev distance = 30 angle = $ag_angle$ }
			}
		}
	}
}

#######################################
###				Gamma
#######################################

ag_gamma_titan_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_gamma_titan_ship"
		design = "NAME_ag_gamma_titan_hostile"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}

ag_gamma_battlecruiser_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_gamma_battlecruiser_ship"
		design = "NAME_ag_gamma_battlecruiser_hostile"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}

ag_gamma_escort_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_gamma_escort_ship"
		design = "NAME_ag_gamma_escort_hostile"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}

ag_spawn_gamma_crisis_leader = {
	optimize_memory
	create_leader = {
		class = admiral
		species = event_target:ag_ancient_gamma_guardian_leader_species
		name = "NAME_ag_gamma_crisis_leader"
		skill = 1
		randomize_traits = no
		hide_age = yes
		immortal = yes
		event_leader = yes
		skip_background_generation = yes
		custom_catch_phrase = ag_gamma_crisis_catch_phrase
		custom_description = ag_gamma_crisis_backstory
		background_ethic = ethic_gestalt_consciousness
	}
	last_created_leader = {
		add_skill = value:ag_gamma_crisis_leader_skill
		reroll_random = yes
		random_list = { 50 = { } 40 = { add_skill = 1 } 10 = { add_skill = 2 } }
		remove_all_traits = yes
		add_trait_no_notify = leader_trait_ag_ancient_ai_gamma_crisis
		add_trait_no_notify = subclass_admiral_aggressor
		add_trait_no_notify = leader_trait_artillery_specialization_3
		reroll_random = yes
		random_list = {
			10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_annihilator } if = { limit = { NOT = { has_trait = leader_trait_annihilator } } add_trait_no_notify = leader_trait_annihilator } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_demolisher_3 } if = { limit = { NOT = { has_trait = leader_trait_demolisher_3 } } add_trait_no_notify = leader_trait_demolisher_3 } }
		}
		if = {
			limit = { has_skill >= 3 }
			reroll_random = yes
			random_list = {
				10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_annihilator } if = { limit = { NOT = { has_trait = leader_trait_annihilator } } add_trait_no_notify = leader_trait_annihilator } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_demolisher_3 } if = { limit = { NOT = { has_trait = leader_trait_demolisher_3 } } add_trait_no_notify = leader_trait_demolisher_3 } }
			}
		}
		if = {
			limit = { has_skill >= 6 }
			reroll_random = yes
			random_list = {
				10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_annihilator } if = { limit = { NOT = { has_trait = leader_trait_annihilator } } add_trait_no_notify = leader_trait_annihilator } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_demolisher_3 } if = { limit = { NOT = { has_trait = leader_trait_demolisher_3 } } add_trait_no_notify = leader_trait_demolisher_3 } }
			}
		}
		if = {
			limit = { has_skill >= 8 }
			reroll_random = yes
			random_list = {
				10 = { add_trait_no_notify = leader_trait_fanatic }
				10 = { add_trait_no_notify = leader_trait_supreme_admiral }
				10 = { add_trait_no_notify = leader_trait_master_gunner }
				10 = { add_trait_no_notify = leader_trait_demolisher_destiny }
				10 = { add_trait_no_notify = leader_trait_destiny_engineer }
			}
		}
		set_leader_flag = ag_ancient_leader
	}
}
ag_gamma_guardian_fleet_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_gamma_guardian_fleet"
		settings = {
			spawn_debris = no
			[[ag_is_boss]is_boss = $ag_is_boss$]
		}
		effect = {
			set_owner = event_target:ag_ancient_gamma_guardian_country
			set_fleet_bombardment_stance = ag_ancient_bombardment
			[[ag_fleet_flag]set_fleet_flag = $ag_fleet_flag$]

			if = {
				limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 1 } } }
				reroll_random = yes
				random_list = {
					100 = {
						modifier = {
							add = @ag_gamma_[[ag_fleet_type]$ag_fleet_type$]_fleet_no_titan_chance
							event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } }
						}
						modifier = {
							add = @ag_gamma_[[ag_fleet_type]$ag_fleet_type$]_fleet_no_titan_chance
							event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } }
						}
					}
					100 = {
						ag_gamma_titan_spawn = yes
						change_variable = { which = ag_num_gamma_titans value = 1 }
					}
				}
			}

			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|gamma_[[ag_fleet_type]$ag_fleet_type$]_fleet|ag_ship_index|battlecruisers|
				ag_gamma_battlecruiser_spawn = yes
				change_variable = { which = ag_num_gamma_battlecruisers value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|gamma_[[ag_fleet_type]$ag_fleet_type$]_fleet|ag_ship_index|escorts|
				ag_gamma_escort_spawn = yes
				change_variable = { which = ag_num_gamma_escorts value = 1 }
			}

			reroll_random = yes
			random_list = {
				10 = { set_location = { target = $ag_target_location$ distance = 0 angle = 0 } }
				10 = { set_location = { target = $ag_target_location$ distance = 10 angle = 0 } }
				10 = { set_location = { target = $ag_target_location$ distance = 10 angle = 60 } }
				10 = { set_location = { target = $ag_target_location$ distance = 10 angle = 120 } }
				10 = { set_location = { target = $ag_target_location$ distance = 10 angle = 180 } }
				10 = { set_location = { target = $ag_target_location$ distance = 10 angle = 240 } }
				10 = { set_location = { target = $ag_target_location$ distance = 10 angle = 300 } }
				10 = { set_location = { target = $ag_target_location$ distance = 25 angle = 0 } }
				10 = { set_location = { target = $ag_target_location$ distance = 25 angle = 60 } }
				10 = { set_location = { target = $ag_target_location$ distance = 25 angle = 120 } }
				10 = { set_location = { target = $ag_target_location$ distance = 25 angle = 180 } }
				10 = { set_location = { target = $ag_target_location$ distance = 25 angle = 240 } }
				10 = { set_location = { target = $ag_target_location$ distance = 25 angle = 300 } }
				10 = { set_location = { target = $ag_target_location$ distance = 40 angle = 0 } }
				10 = { set_location = { target = $ag_target_location$ distance = 40 angle = 60 } }
				10 = { set_location = { target = $ag_target_location$ distance = 40 angle = 120 } }
				10 = { set_location = { target = $ag_target_location$ distance = 40 angle = 180 } }
				10 = { set_location = { target = $ag_target_location$ distance = 40 angle = 240 } }
				10 = { set_location = { target = $ag_target_location$ distance = 40 angle = 300 } }
			}
			
			event_target:ag_ancient_gamma_guardian_country = {
				ag_spawn_gamma_crisis_leader = yes
				prev = { assign_leader = last_created_leader }
			}
			
			set_formation_scale = 5.0
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			[[ag_action_event]fleet_event = { id = $ag_action_event$ }]
			[[ag_action_delay]set_timed_fleet_flag = { flag = ag_gamma_fleet_action_locked days = $ag_action_delay$ }]
		}
	}
}

ag_spawn_gamma_guardian_fleet_garrison = {
	optimize_memory
	ag_gamma_guardian_fleet_spawn = {
		ag_fleet_type = guardian
		ag_target_location = event_target:ag_gamma_ring_2
	}
	ag_gamma_guardian_fleet_spawn = {
		ag_fleet_type = guardian
		ag_target_location = event_target:ag_gamma_ring_6
	}
	ag_gamma_guardian_fleet_spawn = {
		ag_fleet_type = guardian
		ag_target_location = event_target:ag_gamma_ring_10
	}
	if = {
		limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 0 } } }
		create_fleet = {
			name = "NAME_ag_gamma_guardian_fleet"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_owner = event_target:ag_ancient_gamma_guardian_country
				set_fleet_bombardment_stance = ag_ancient_bombardment

				ag_gamma_titan_spawn = yes
				change_variable = { which = ag_num_gamma_titans value = 1 }
				
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|gamma_guardian_fleet|ag_ship_index|battlecruisers|
					ag_gamma_battlecruiser_spawn = yes
					change_variable = { which = ag_num_gamma_battlecruisers value = 1 }
				}
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|gamma_guardian_fleet|ag_ship_index|escorts|
					ag_gamma_escort_spawn = yes
					change_variable = { which = ag_num_gamma_escorts value = 1 }
				}
				
				event_target:ag_ancient_gamma_guardian_country = {
					ag_spawn_gamma_crisis_leader = yes
					prev = { assign_leader = last_created_leader }
				}

				set_location = { target = event_target:ag_ancient_gamma_shielded_world distance = 0 angle = 0 }
				set_formation_scale = 5.0
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
			}
		}
	}
}

ag_spawn_gamma_guardian_fleet_jumped_garrison = {
	optimize_memory
	solar_system = {
		random_system_planet = {
			limit = { is_star = yes }
			save_event_target_as = ag_gamma_guardian_garrison_fleet_spawn_loc
		}
	}
	ag_gamma_guardian_fleet_spawn = {
		ag_fleet_type = assault
		ag_target_location = event_target:ag_gamma_guardian_garrison_fleet_spawn_loc
	}
}

ag_spawn_gamma_guardian_fleet_jumped = {
	optimize_memory
	solar_system = {
		random_system_planet = {
			limit = { is_star = yes }
			save_event_target_as = ag_gamma_guardian_assault_fleet_spawn_loc
		}
	}
	ag_gamma_guardian_fleet_spawn = {
		ag_fleet_flag = ag_ancient_gamma_guardian_assault_fleet
		ag_fleet_type = assault
		ag_target_location = event_target:ag_gamma_guardian_assault_fleet_spawn_loc
		ag_action_event = ag_gamma.27
	}
}

ag_gamma_station_player_spawn = {
	optimize_memory
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_fleet = {
			name = "NAME_ag_gamma_station_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_gamma_station_player
				set_owner = $ag_owner$
				create_ship = {
					name = "NAME_ag_gamma_station_ship"
					design = "NAME_ag_gamma_station_1"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
						[[!ag_clone_disable_info]
							set_ship_flag = ag_gamma_station_player
							set_ship_flag = ag_gamma_station_protection_enabled
							set_ship_flag = ag_gamma_station_protection_1
							ag_set_disable_at_health = { ag_value = 0.75 ag_disable_type = gamma_station }
						]
						ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 301 }
					}
				}
				set_location = {
					target = $ag_location_target$
					distance = $ag_location_distance|-1$
					angle = $ag_location_angle|0$
				}
			}
		}
	}
	else = {
		create_fleet = {
			name = "NAME_ag_gamma_station_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_gamma_station_player
				set_owner = $ag_owner$
				create_ship = {
					name = "NAME_ag_gamma_station_ship"
					design = "NAME_ag_gamma_station_0"
					prefix = no
					effect = {
						ag_difficulty_bonus = yes
						[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
						[[!ag_clone_disable_info]
							set_ship_flag = ag_gamma_station_player
							set_ship_flag = ag_gamma_station_protection_enabled
							set_ship_flag = ag_gamma_station_protection_1
							ag_set_disable_at_health = { ag_value = 0.75 ag_disable_type = gamma_station }
						]
						ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 301 }
					}
				}
				set_location = {
					target = $ag_location_target$
					distance = $ag_location_distance|-1$
					angle = $ag_location_angle|0$
				}
			}
		}
	}
}

ag_create_gamma_titan_player = {
	optimize_memory
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_gamma_titan_ship"
			design = "NAME_ag_gamma_titan_1"
			prefix = no
			effect = {
				set_ship_flag = ag_gamma_titan_player
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 304 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_gamma_titan_ship"
			design = "NAME_ag_gamma_titan_0"
			prefix = no
			effect = {
				set_ship_flag = ag_gamma_titan_player
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 304 }
			}
		}
	}
}
ag_gamma_titan_player_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_gamma_titan_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_gamma_titan_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

ag_gamma_station_drones_spawn = {
	optimize_memory
	if = {
		limit = { fromfrom.solar_system = { NOT = { any_fleet_in_system = { exists = owner owner = { is_country_type = ag_zeta_crisis_country } } } } }
		if = {
			limit = { OR = { is_country_type = ag_ancient_gamma_guardian has_country_flag = ag_gamma_ships_unlocked } }
			while = {
				count = @ag_sub_support_drones_combat
				limit = { fromfrom.solar_system = { count_fleet_in_system = { limit = { has_fleet_flag = ag_gamma_station_drones_fleet } count < $ag_drones_max|@ag_sub_support_drones_combat$ } } }
				create_fleet = {
					name = "NAME_ag_gamma_station_aux_drone_fleet"
					settings = {
						can_change_composition = no
						uses_naval_capacity = no
						can_change_leader = no
						spawn_debris = no
						can_disband = no
						can_upgrade = no
						is_boss = yes
					}
					effect = {
						set_owner = $ag_owner$
						set_fleet_flag = ag_gamma_station_drones_fleet
						set_fleet_flag = ag_has_ancient_ship_in_fleet
						set_fleet_bombardment_stance = ag_ancient_bombardment
						while = {
							count = 7
							create_ship = {
								name = "NAME_ag_gamma_station_aux_drone_ship"
								design = "NAME_ag_gamma_station_aux_drone_1"
								prefix = no
								effect = { ag_difficulty_bonus = yes ag_spawn_jumpdrive_effect = { ag_color = red } }
							}
						}
						random_list = {
							20 = { set_location = { target = $ag_location$ distance = 10 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 15 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 20 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 25 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 30 angle = random } }
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 500
						fleet_event = { id = ag_subsystem.35 days = @ag_sub_support_drones_effect_days random = @ag_sub_support_drones_effect_random }
					}
				}
			}
		}
		else = {
			while = {
				count = @ag_sub_support_drones_combat
				limit = { fromfrom.solar_system = { count_fleet_in_system = { limit = { has_fleet_flag = ag_gamma_station_drones_fleet } count < $ag_drones_max|@ag_sub_support_drones_combat$ } } }
				create_fleet = {
					name = "NAME_ag_gamma_station_aux_drone_fleet"
					settings = {
						can_change_composition = no
						uses_naval_capacity = no
						can_change_leader = no
						spawn_debris = no
						can_disband = no
						can_upgrade = no
						is_boss = yes
					}
					effect = {
						set_owner = $ag_owner$
						set_fleet_flag = ag_gamma_station_drones_fleet
						set_fleet_flag = ag_has_ancient_ship_in_fleet
						set_fleet_bombardment_stance = ag_ancient_bombardment
						while = {
							count = 7
							create_ship = {
								name = "NAME_ag_gamma_station_aux_drone_ship"
								design = "NAME_ag_gamma_station_aux_drone_0"
								prefix = no
								effect = { ag_difficulty_bonus = yes }
							}
						}
						random_list = {
							20 = { set_location = { target = $ag_location$ distance = 10 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 15 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 20 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 25 angle = random } }
							20 = { set_location = { target = $ag_location$ distance = 30 angle = random } }
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 500
						fleet_event = { id = ag_subsystem.35 days = @ag_sub_support_drones_effect_days random = @ag_sub_support_drones_effect_random }
					}
				}
			}
		}
	}
}

#######################################
###				Delta
#######################################

ag_create_delta_titan_player = {
	optimize_memory
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_delta_titan_ship"
			design = "NAME_ag_delta_titan_1"
			prefix = no
			effect = {
				set_ship_flag = ag_delta_titan_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 401 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_delta_titan_ship"
			design = "NAME_ag_delta_titan_0"
			prefix = no
			effect = {
				set_ship_flag = ag_delta_titan_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 401 }
			}
		}
	}
}
ag_delta_titan_player_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_delta_titan_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_delta_titan_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}
ag_delta_area_drones_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_delta_drone_fleet"
		settings = {
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			set_owner = event_target:ag_ancient_delta_guardian_country
			
			reroll_random = yes
			random_list = {
				40 = { while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|delta_guardian_drone_squardron|ag_ship_index|drones|ag_ship_variant_b|1|
					create_ship = {
						name = random
						design = "NAME_ag_delta_drone_hostile"
						prefix = no
						effect = {
							ag_difficulty_bonus = yes
						}
					}
				} }
				40 = { while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|delta_guardian_drone_squardron|ag_ship_index|drones|ag_ship_variant_b|2|
					create_ship = {
						name = random
						design = "NAME_ag_delta_drone_hostile"
						prefix = no
						effect = {
							ag_difficulty_bonus = yes
						}
					}
				} }
				20 = { while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|delta_guardian_drone_squardron|ag_ship_index|drones|ag_ship_variant_b|3|
					create_ship = {
						name = random
						design = "NAME_ag_delta_drone_hostile"
						prefix = no
						effect = {
							ag_difficulty_bonus = yes
						}
					}
				} }
			}
			
			set_location = { target = root.from distance = 30 angle = random }
			set_fleet_stance = aggressive
			set_aggro_range = 500
		}
	}
}

#######################################
###				Epsilon
#######################################

ag_create_fallen_empire_guardian = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_epsilon_fallen_empire_guardian_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = event_target:ag_epsilon_fallen_empire_guardian
			create_ship = {
				name = "NAME_ag_epsilon_defensive_station_large[[ag_seq]_$ag_seq$]"
				design = "NAME_ag_epsilon_defensive_station_large[[ag_graphical_culture]_$ag_graphical_culture$]_hostile"
				graphical_culture = "fallen_empire[[ag_graphical_culture]_$ag_graphical_culture$]"
			}
			create_ship = {
				name = "NAME_ag_epsilon_defensive_station_small[[ag_seq]_$ag_seq$1]"
				design = "NAME_ag_epsilon_defensive_station_small[[ag_graphical_culture]_$ag_graphical_culture$]_hostile"
				graphical_culture = "fallen_empire[[ag_graphical_culture]_$ag_graphical_culture$]"
			}
			create_ship = {
				name = "NAME_ag_epsilon_defensive_station_small[[ag_seq]_$ag_seq$2]"
				design = "NAME_ag_epsilon_defensive_station_small[[ag_graphical_culture]_$ag_graphical_culture$]_hostile"
				graphical_culture = "fallen_empire[[ag_graphical_culture]_$ag_graphical_culture$]"
			}
			create_ship = {
				name = "NAME_ag_epsilon_defensive_station_small[[ag_seq]_$ag_seq$3]"
				design = "NAME_ag_epsilon_defensive_station_small[[ag_graphical_culture]_$ag_graphical_culture$]_hostile"
				graphical_culture = "fallen_empire[[ag_graphical_culture]_$ag_graphical_culture$]"
			}
			ag_set_fallen_empire_guardian_formation = yes
			event_target:ag_epsilon_fallen_empire_guardian = {
				set_variable = { which = ag_seq_temp value = 6 }
				if = {
					limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
					prev = { set_location = { target = prevprevprev distance = 45 angle = 300 } }
				}
				else = {
					subtract_variable = { which = ag_seq_temp value = 1 }
					if = {
						limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
						prev = { set_location = { target = prevprevprev distance = 45 angle = 240 } }
					}
					else = {
						subtract_variable = { which = ag_seq_temp value = 1 }
						if = {
							limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
							prev = { set_location = { target = prevprevprev distance = 45 angle = 180 } }
						}
						else = {
							subtract_variable = { which = ag_seq_temp value = 1 }
							if = {
								limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
								prev = { set_location = { target = prevprevprev distance = 45 angle = 120 } }
							}
							else = {
								subtract_variable = { which = ag_seq_temp value = 1 }
								if = {
									limit = { check_variable = { which = ag_seq_temp value = $ag_seq|0$ } }
									prev = { set_location = { target = prevprevprev distance = 45 angle = 60 } }
								}
								else = { prev = { set_location = { target = prevprevprev distance = 45 angle = 0 } } }
							}
						}
					}
				}
				clear_variable = ag_seq_temp
			}
		}
	}
}

ag_epsilon_obelisk_hostile_spawn = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:ag_ancient_epsilon_obelisk_guardian } }
		ag_create_ancient_guardian = {
			ag_country_name = "NAME_ag_ancient_zeta_guardian"
			ag_country_type = ag_ancient_epsilon_obelisk_guardian
		}
		last_created_country = {
			save_global_event_target_as = ag_ancient_epsilon_obelisk_guardian
			set_country_flag = ag_ancient_epsilon_obelisk_guardian
			ag_ancient_country_friendly_to_each_other = yes
			every_country = {
				limit = { NOR = { is_same_value = prev has_communications = prev } }
				establish_communications_no_message = prev
			}
		}
	}
	create_fleet = {
		name = "NAME_ag_epsilon_obelisk_fleet"
		settings = {
			spawn_debris = no
			is_boss = yes
		}
		effect = {
			set_owner = event_target:ag_ancient_epsilon_obelisk_guardian
			create_ship = {
				name = "NAME_ag_epsilon_obelisk_ship[[ag_obelisk_seq]_$ag_obelisk_seq$]"
				design = "NAME_ag_epsilon_obelisk_hostile"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
					set_ship_flag = ag_epsilon_obelisk[[ag_obelisk_seq]_$ag_obelisk_seq$]
					ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = event }
				}
			}
			set_location = {
				target = prev
				distance = 0
				angle = $ag_angle$
			}
		}
	}
}

ag_create_epsilon_titan_player = {
	optimize_memory
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_epsilon_titan_ship"
			design = "NAME_ag_epsilon_titan_1"
			prefix = no
			effect = {
				set_ship_flag = ag_epsilon_titan_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 501 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_epsilon_titan_ship"
			design = "NAME_ag_epsilon_titan_0"
			prefix = no
			effect = {
				set_ship_flag = ag_epsilon_titan_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 501 }
			}
		}
	}
}
ag_epsilon_titan_player_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_epsilon_titan_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_epsilon_titan_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}
ag_create_epsilon_titan_windup = {
	optimize_memory
	create_ship = {
		name = this
		design = "NAME_ag_epsilon_titan_1_star_killer_windup"
		prefix = no
		effect = {
			set_ship_flag = ag_epsilon_titan_player
			copy_flags_and_variables_from = prevprev
			ag_difficulty_bonus = yes
			ag_ship_subsystem_effect_check = { ag_owner = fleet.owner ag_ship_id = 501 }
			set_ship_flag = ag_ship_weapon_range_mult_locked
			set_ship_flag = ag_epsilon_firing_star_killer_weapon
			add_modifier = { modifier = "ag_epsilon_firing_star_killer_weapon_windup" days = -1 }
		}
	}
}
ag_create_epsilon_titan_firing = {
	optimize_memory
	create_ship = {
		name = this
		design = "NAME_ag_epsilon_titan_1_star_killer_firing"
		prefix = no
		effect = {
			set_ship_flag = ag_epsilon_titan_player
			copy_flags_and_variables_from = prevprev
			ag_difficulty_bonus = yes
			ag_ship_subsystem_effect_check = { ag_owner = fleet.owner ag_ship_id = 501 }
			set_ship_flag = ag_ship_weapon_range_mult_locked
			set_ship_flag = ag_epsilon_firing_star_killer_weapon
			add_modifier = { modifier = "ag_epsilon_firing_star_killer_weapon_windup" days = -1 }
		}
	}
}
ag_create_epsilon_titan_closing = {
	optimize_memory
	create_ship = {
		name = this
		design = "NAME_ag_epsilon_titan_1_star_killer_closing"
		prefix = no
		effect = {
			set_ship_flag = ag_epsilon_titan_player
			copy_flags_and_variables_from = prevprev
			ag_difficulty_bonus = yes
			ag_ship_subsystem_effect_check = { ag_owner = fleet.owner ag_ship_id = 501 }
			set_ship_flag = ag_ship_weapon_range_mult_locked
			set_ship_flag = ag_epsilon_firing_star_killer_weapon
			add_modifier = { modifier = "ag_epsilon_firing_star_killer_weapon_windup" days = -1 }
			ship_event = { id = ag_epsilon.134 days = 5 }
		}
	}
}
ag_create_epsilon_titan_cooldown = {
	optimize_memory
	create_ship = {
		name = this
		design = "NAME_ag_epsilon_titan_1"
		prefix = no
		effect = {
			set_ship_flag = ag_epsilon_titan_player
			copy_flags_and_variables_from = prevprev
			ag_difficulty_bonus = yes
			ag_ship_subsystem_effect_check = { ag_owner = fleet.owner ag_ship_id = 501 }
			set_timed_ship_flag = { flag = ag_epsilon_star_weapon_remote_target_cooldown days = @ag_epsilon_star_weapon_remote_target_cooldown_time }
			owner = { country_event = { id = ag_epsilon.137 days = @ag_epsilon_star_weapon_remote_target_cooldown_time_1 } }
		}
	}
}

ag_epsilon_titan_leader_adm_spawn = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:ag_epsilon_titan_diplo_species } }
		create_species = {
			name = "NAME_ag_epsilon_titan_ship"
			class = "ag_ancient_class_dummy"
			portrait = "ag_ancient_ai_red_alt"
			immortal = yes
			traits = random
			effect = { save_global_event_target_as = ag_epsilon_titan_diplo_species }
		}
		event_target:ag_epsilon_titan_diplo_species = {
			if = { limit = { prev = { always = no } } change_species_portrait = ag_StarInAurora_anim_portrait }
			else = { change_species_portrait = ag_ancient_ai_red_alt }
		}
	}
	create_leader = {
		name = "NAME_ag_epsilon_titan_ship"
		species = event_target:ag_epsilon_titan_diplo_species
		class = admiral
		skill = 10
		gender = indeterminable
		set_age = 17
		hide_age = yes
		immortal = yes
		randomize_traits = no
		event_leader = yes
		skip_background_generation = yes
		custom_catch_phrase = ag_epsilon_titan_catch_phrase
		custom_description = ag_epsilon_titan_backstory
		background_ethic = ethic_militarist
		effect = {
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = leader_death_events_blocked
			set_leader_flag = has_gained_level_trait
			set_leader_flag = ag_epsilon_titan_leader
			set_leader_flag = ag_ancient_leader
			if = { limit = { owner = { always = no } } change_leader_portrait = ag_StarInAurora_anim_portrait }
			else = { change_leader_portrait = ag_ancient_ai_red_alt }
			set_variable = { which = ag_anim_StarInAurora_clothes_diff value = 1 }
			set_variable = { which = ag_anim_StarInAurora_face_diff value = 1 }
			if = {
				limit = { always = $ag_save_global_event_target|yes$ }
				if = { limit = { exists = event_target:ag_epsilon_titan_leader } clear_global_event_target = ag_epsilon_titan_leader }
				save_global_event_target_as = ag_epsilon_titan_leader
			}
		}
	}
	last_created_leader = {
		remove_all_traits = yes
		add_trait_no_notify = leader_trait_ag_ancient_ai_StarInAurora
		add_trait_no_notify = leader_trait_ag_ancient_ai_StarInAurora_councilor
		add_trait_no_notify = subclass_admiral_aggressor
		add_trait_no_notify = leader_trait_supreme_admiral
		add_trait_no_notify = leader_trait_artillery_specialization_3
		add_trait_no_notify = leader_trait_artillerist_3
		add_trait_no_notify = leader_trait_surgical_bombardment_2
		inline_script = "ag_player_StarInAurora_leader_spawn_effect"
	}
}

#######################################
###				Zeta
#######################################

ag_spawn_zeta_guardian_leader = {
	optimize_memory
	create_leader = {
		class = admiral
		species = event_target:ag_ancient_zeta_guardian_leader_species
		name = "NAME_ag_zeta_guardian_leader"
		skill = 1
		randomize_traits = no
		hide_age = yes
		immortal = yes
		event_leader = yes
		skip_background_generation = yes
		custom_catch_phrase = ag_zeta_guardian_catch_phrase
		custom_description = ag_zeta_guardian_backstory
		background_ethic = ethic_gestalt_consciousness
	}
	last_created_leader = {
		add_skill = value:ag_zeta_guardian_leader_skill
		reroll_random = yes
		random_list = { 75 = { } 25 = { add_skill = 1 } }
		remove_all_traits = yes
		add_trait_no_notify = leader_trait_ag_ancient_ai_zeta_guardian
		add_trait_no_notify = subclass_admiral_aggressor
		add_trait_no_notify = leader_trait_artillery_specialization_3
		reroll_random = yes
		random_list = {
			10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
		}
		if = {
			limit = { has_skill >= 3 }
			reroll_random = yes
			random_list = {
				10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
			}
		}
		if = {
			limit = { has_skill >= 6 }
			reroll_random = yes
			random_list = {
				10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
			}
		}
		if = {
			limit = { has_skill >= 8 }
			reroll_random = yes
			random_list = {
				10 = { add_trait_no_notify = leader_trait_fanatic }
				10 = { add_trait_no_notify = leader_trait_supreme_admiral }
				10 = { add_trait_no_notify = leader_trait_master_gunner }
				10 = { add_trait_no_notify = leader_trait_destiny_engineer }
			}
		}
		set_leader_flag = ag_ancient_leader
	}
}
ag_zeta_titan_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_titan_ship"
		design = "NAME_ag_zeta_titan"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			ag_set_disable_at_health = { ag_value = 0.02 ag_disable_type = zeta_ship }
		}
	}
}
ag_zeta_battleship_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_battleship_ship"
		design = "NAME_ag_zeta_battleship"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			ag_set_disable_at_health = { ag_value = 0.02 ag_disable_type = zeta_ship }
		}
	}
}
ag_zeta_destroyer_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_destroyer_ship"
		design = "NAME_ag_zeta_destroyer"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			ag_set_disable_at_health = { ag_value = 0.02 ag_disable_type = zeta_ship }
		}
	}
}
ag_zeta_crisis_small_ship_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_small_ship_ship"
		design = "NAME_ag_zeta_crisis_small_ship"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_medium_ship_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_medium_ship_ship"
		design = "NAME_ag_zeta_crisis_medium_ship"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_large_ship_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_large_ship_ship"
		design = "NAME_ag_zeta_crisis_large_ship"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_support_ship_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_support_ship_ship"
		design = "NAME_ag_zeta_crisis_support_ship"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_construction_ship_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_construction_ship_ship"
		design = "NAME_ag_zeta_crisis_construction_ship"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_avatar_t1_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t1_ship"
		design = "NAME_ag_zeta_crisis_avatar_t1"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_avatar_t2_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t2_ship"
		design = "NAME_ag_zeta_crisis_avatar_t2"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_avatar_t3_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t3_ship"
		design = "NAME_ag_zeta_crisis_avatar_t3"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_avatar_t4_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t4_ship"
		design = "NAME_ag_zeta_crisis_avatar_t4"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_avatar_t5_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_avatar_t5_ship"
		design = "NAME_ag_zeta_crisis_avatar_t5"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}
ag_zeta_crisis_defensive_platform_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_zeta_crisis_defensive_platform_ship"
		design = "NAME_ag_zeta_crisis_defensive_platform"
		prefix = no
		effect = { ag_difficulty_bonus = yes }
	}
}

ag_zeta_crisis_avatar_t1_fleet_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t1_ship"
				design = "NAME_ag_zeta_crisis_avatar_t1"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = ag_zeta_crisis.74 }
			random_list = {
				10 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_long random = @ag_zeta_crisis_avatar_life_random_long } }
				90 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_short random = @ag_zeta_crisis_avatar_life_random_short } }
			}
		}
	}
}
ag_zeta_crisis_avatar_t2_fleet_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t2_ship"
				design = "NAME_ag_zeta_crisis_avatar_t2"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			fleet_event = { id = ag_zeta_crisis.74 }
			random_list = {
				10 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_long random = @ag_zeta_crisis_avatar_life_random_long } }
				90 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_short random = @ag_zeta_crisis_avatar_life_random_short } }
			}
		}
	}
}
ag_zeta_crisis_avatar_t3_fleet_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t3_ship"
				design = "NAME_ag_zeta_crisis_avatar_t3"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = ag_zeta_crisis.74 }
			random_list = {
				10 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_long random = @ag_zeta_crisis_avatar_life_random_long } }
				90 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_short random = @ag_zeta_crisis_avatar_life_random_short } }
			}
		}
	}
}
ag_zeta_crisis_avatar_t4_fleet_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t4_ship"
				design = "NAME_ag_zeta_crisis_avatar_t4"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = ag_zeta_crisis.74 }
			random_list = {
				10 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_long random = @ag_zeta_crisis_avatar_life_random_long } }
				90 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_short random = @ag_zeta_crisis_avatar_life_random_short } }
			}
		}
	}
}
ag_zeta_crisis_avatar_t5_fleet_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_avatar_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			create_ship = {
				name = "NAME_ag_zeta_crisis_avatar_t5_ship"
				design = "NAME_ag_zeta_crisis_avatar_t5"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = $ag_target_name$
				distance = $ag_distance_to_target$
				angle = random
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			fleet_event = { id = ag_zeta_crisis.74 }
			random_list = {
				10 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_long random = @ag_zeta_crisis_avatar_life_random_long } }
				90 = { fleet_event = { id = ag_zeta_crisis.42 days = @ag_zeta_crisis_avatar_life_time_short random = @ag_zeta_crisis_avatar_life_random_short } }
			}
		}
	}
}

ag_create_zeta_crisis_starbase = {
	optimize_memory
	if = {
		limit = { NOT = { exists = starbase } }
		create_starbase = {
			size = starbase_ag_zeta_crisis
			owner = event_target:ag_zeta_crisis_country
			effect = {
				fleet = {
					# set_name = "NAME_ag_zeta_crisis_starbase"
					set_name = { key = NAME_ag_zeta_crisis_starbase variable_string = "\[This.solar_system.GetName\]" }
					random_owned_ship = {
						limit = { is_ship_class = shipclass_starbase }
						set_name = "NAME_ag_zeta_crisis_starbase_ship"
						ag_difficulty_bonus = yes
					}
				}
				if = {
					limit = { solar_system = { has_star_flag = ag_ancient_zeta_system } }
					while = {
						count = @ag_zeta_crisis_home_starbase_num_platforms
						ag_zeta_crisis_defensive_platform_spawn = yes
					}
				}
				else_if = {
					limit = { solar_system = { any_system_planet = { has_planet_flag = ag_zeta_crisis_core_planet } } }
					while = {
						count = @ag_zeta_crisis_gate_starbase_num_platforms
						ag_zeta_crisis_defensive_platform_spawn = yes
					}
					solar_system = { if = {
						limit = { any_ship_in_system = {
							fleet = {
								has_fleet_flag = ag_zeta_crisis_gate_portal
								exists = owner
								owner = { is_country_type = ag_zeta_crisis_country }
							}
						} }
						every_fleet_in_system = {
							limit = {
								has_fleet_flag = ag_zeta_crisis_gate_portal
								exists = owner
								owner = { is_country_type = ag_zeta_crisis_country }
							}
							set_owner = event_target:ag_zeta_crisis_portal_holder
							set_event_locked = yes
						}
					} }
				}
				else_if = {
					limit = { always = yes }
					solar_system = {
						every_neighbor_system = {
							limit = {
								exists = starbase
								starbase = {
									exists = owner
									owner = { is_country_type = ag_zeta_crisis_country }
								}
								NOT = { any_ship_in_system = { fleet = { has_fleet_flag = ag_zeta_crisis_portal } } }
							}
							random_list = {
								75 = { }
								25 = { prevprev = { ag_zeta_crisis_defensive_platform_spawn = yes } }
							}
						}
					}
				}
				solar_system = {
					every_neighbor_system = {
						limit = { any_ship_in_system = { fleet = {
							has_fleet_flag = ag_zeta_crisis_gate_portal
							exists = owner
							owner = { is_country_type = ag_zeta_crisis_country }
						} } }
						every_fleet_in_system = {
							limit = {
								has_fleet_flag = ag_zeta_crisis_gate_portal
								exists = owner
								owner = { is_country_type = ag_zeta_crisis_country }
							}
							set_owner = event_target:ag_zeta_crisis_portal_holder
							set_event_locked = yes
						}
					}
				}
			}
		}
		if = {
			limit = { OR = {
				has_star_flag = ag_ancient_zeta_system
				any_system_planet = { has_planet_flag = ag_zeta_crisis_core_planet }
			} }
			add_modifier = { modifier = "ag_zeta_psionic_environment_thick" days = -1 }
			random_system_planet = {
				limit = { is_primary_star = yes }
				create_ambient_object = {
					type = "ag_zeta_crisis_system_effect_thick"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = ag_zeta_crisis_system_effect_thick
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
		}
		else = {
			add_modifier = { modifier = "ag_zeta_psionic_environment_thin" days = -1 }
			random_system_planet = {
				limit = { is_primary_star = yes }
				create_ambient_object = {
					type = "ag_zeta_crisis_system_effect_thin"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = ag_zeta_crisis_system_effect_thin
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
		}
		every_system_planet = { limit = { has_orbital_station = yes } orbital_station = { dismantle = yes } }
	}
}

ag_spawn_zeta_crisis_leader = {
	optimize_memory
	create_leader = {
		class = admiral
		species = event_target:ag_zeta_crisis_leader_species
		name = "NAME_ag_hallucination"
		skill = 1
		randomize_traits = no
		hide_age = yes
		immortal = yes
		event_leader = yes
		skip_background_generation = yes
		custom_catch_phrase = ag_shroud_invader_catch_phrase
		custom_description = ag_shroud_invader_backstory
		background_ethic = ethic_spiritualist
	}
	last_created_leader = {
		set_leader_flag = ag_leader_trait_shroud_invader_$ag_index$
		add_skill = value:ag_zeta_crisis_leader_skill
		if = {
			limit = { OR = {
				has_leader_flag = ag_leader_trait_shroud_invader_08
				has_leader_flag = ag_leader_trait_shroud_invader_09
				has_leader_flag = ag_leader_trait_shroud_invader_10
				has_leader_flag = ag_leader_trait_shroud_invader_11
				has_leader_flag = ag_leader_trait_shroud_invader_12
			} }
			add_skill = 1
			reroll_random = yes
			random_list = { 25 = { } 50 = { add_skill = 1 } 25 = { add_skill = 2 } }
		}
		remove_all_traits = yes
		add_trait_no_notify = ag_leader_trait_shroud_invader_$ag_index$
		add_trait_no_notify = subclass_admiral_aggressor
		add_trait_no_notify = leader_trait_artillery_specialization_3
		reroll_random = yes
		random_list = {
			10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_annihilator } if = { limit = { NOT = { has_trait = leader_trait_annihilator } } add_trait_no_notify = leader_trait_annihilator } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
			10 = { modifier = { factor = 0 has_trait = leader_trait_demolisher_3 } if = { limit = { NOT = { has_trait = leader_trait_demolisher_3 } } add_trait_no_notify = leader_trait_demolisher_3 } }
		}
		if = {
			limit = { has_skill >= 3 }
			reroll_random = yes
			random_list = {
				10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_annihilator } if = { limit = { NOT = { has_trait = leader_trait_annihilator } } add_trait_no_notify = leader_trait_annihilator } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_demolisher_3 } if = { limit = { NOT = { has_trait = leader_trait_demolisher_3 } } add_trait_no_notify = leader_trait_demolisher_3 } }
			}
		}
		if = {
			limit = { has_skill >= 6 }
			reroll_random = yes
			random_list = {
				10 = { modifier = { factor = 0 has_trait = leader_trait_artillerist_2 } if = { limit = { NOT = { has_trait = leader_trait_artillerist_2 } } add_trait_no_notify = leader_trait_artillerist_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_annihilator } if = { limit = { NOT = { has_trait = leader_trait_annihilator } } add_trait_no_notify = leader_trait_annihilator } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_unyielding_2 } if = { limit = { NOT = { has_trait = leader_trait_unyielding_2 } } add_trait_no_notify = leader_trait_unyielding_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_engineer_2 } if = { limit = { NOT = { has_trait = leader_trait_engineer_2 } } add_trait_no_notify = leader_trait_engineer_2 } }
				10 = { modifier = { factor = 0 has_trait = leader_trait_demolisher_3 } if = { limit = { NOT = { has_trait = leader_trait_demolisher_3 } } add_trait_no_notify = leader_trait_demolisher_3 } }
			}
		}
		if = {
			limit = { has_skill >= 8 }
			reroll_random = yes
			random_list = {
				10 = { add_trait_no_notify = leader_trait_fanatic }
				10 = { add_trait_no_notify = leader_trait_supreme_admiral }
				10 = { add_trait_no_notify = leader_trait_master_gunner }
				10 = { add_trait_no_notify = leader_trait_demolisher_destiny }
				10 = { add_trait_no_notify = leader_trait_destiny_engineer }
			}
		}
		set_leader_flag = ag_shroud_leader
	}
}
ag_assign_zeta_crisis_guardian_fleet_leader = {
	optimize_memory
	if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 0 } } }
		if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 60
				ag_minor_leader_chance = 40
				ag_major_leader_chance = 0
			}
		}
		else_if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 2.5 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 30
				ag_minor_leader_chance = 55
				ag_major_leader_chance = 15
			}
		}
		else_if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value <= 4 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 0
				ag_minor_leader_chance = 25
				ag_major_leader_chance = 75
			}
		}
		else_if = { limit = { always = yes }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 0
				ag_minor_leader_chance = 0
				ag_major_leader_chance = 100
			}
		}
	}
}
ag_assign_zeta_crisis_assault_fleet_leader = {
	optimize_memory
	if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 0 } } }
		if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 80
				ag_minor_leader_chance = 20
				ag_major_leader_chance = 0
			}
		}
		else_if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 2.5 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 50
				ag_minor_leader_chance = 50
				ag_major_leader_chance = 0
			}
		}
		else_if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value <= 4 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 20
				ag_minor_leader_chance = 70
				ag_major_leader_chance = 10
			}
		}
		else_if = { limit = { always = yes }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 0
				ag_minor_leader_chance = 75
				ag_major_leader_chance = 25
			}
		}
	}
}
ag_assign_zeta_crisis_patrol_fleet_leader = {
	optimize_memory
	if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 0 } } }
		if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 90
				ag_minor_leader_chance = 10
				ag_major_leader_chance = 0
			}
		}
		else_if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 2.5 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 65
				ag_minor_leader_chance = 35
				ag_major_leader_chance = 0
			}
		}
		else_if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value <= 4 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 30
				ag_minor_leader_chance = 65
				ag_major_leader_chance = 5
			}
		}
		else_if = { limit = { always = yes }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 0
				ag_minor_leader_chance = 80
				ag_major_leader_chance = 20
			}
		}
	}
}
ag_assign_zeta_crisis_protector_fleet_leader = {
	optimize_memory
	if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 1 } } }
		if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 2.5 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 75
				ag_minor_leader_chance = 25
				ag_major_leader_chance = 0
			}
		}
		else_if = { limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value <= 4 } } }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 50
				ag_minor_leader_chance = 45
				ag_major_leader_chance = 5
			}
		}
		else_if = { limit = { always = yes }
			ag_create_zeta_crisis_fleet_leader = {
				ag_no_leader_chance = 10
				ag_minor_leader_chance = 75
				ag_major_leader_chance = 15
			}
		}
	}
}
ag_create_zeta_crisis_fleet_leader = {
	optimize_memory
	event_target:ag_zeta_crisis_country = { random_list = {
		$ag_no_leader_chance$ = { }
		$ag_minor_leader_chance$ = { random_list = {
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 01 }
				prev = {
					assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_1
					add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_01" days = -1 }
				}
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 02 }
				prev = {
					assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_2
					add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_02" days = -1 }
				}
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 03 }
				prev = {
					assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_3
					add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_03" days = -1 }
				}
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 04 }
				prev = {
					assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_4
					add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_04" days = -1 }
				}
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 05 }
				prev = {
					assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_5
					add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_05" days = -1 }
				}
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 06 }
				prev = {
					assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_6
					add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_06" days = -1 }
				}
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 07 }
				prev = {
					assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_7
					add_modifier = { modifier = "ag_zeta_crisis_leader_modifier_07" days = -1 }
				}
			}
		} }
		$ag_major_leader_chance$ = { random_list = {
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 08 }
				prev = { assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_8 }
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 09 }
				prev = { assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_9 }
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 10 }
				prev = { assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_10 }
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 11 }
				prev = { assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_11 }
			}
			10 = {
				ag_spawn_zeta_crisis_leader = { ag_index = 12 }
				prev = { assign_leader = last_created_leader set_fleet_flag = ag_zeta_crisis_leader set_fleet_flag = ag_zeta_crisis_leader_12 }
			}
		} }
	} }
}

ag_spawn_zeta_crisis_guardian_fleet = {
	optimize_memory
	if = {
		limit = { solar_system = { has_star_flag = ag_ancient_zeta_system } }
		create_fleet = {
			name = "NAME_ag_zeta_crisis_guardian_fleet"
			settings = { spawn_debris = no }
			effect = {
				set_fleet_flag = ag_zeta_crisis_guardian_fleet
				set_fleet_flag = ag_zeta_crisis_home_guardian_fleet
				set_owner = event_target:ag_zeta_crisis_country
				set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
				
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_home_guardian_fleet|ag_ship_index|large_ships|
					ag_zeta_crisis_large_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
				}
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_home_guardian_fleet|ag_ship_index|medium_ships|
					ag_zeta_crisis_medium_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
				}
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_home_guardian_fleet|ag_ship_index|small_ships|
					ag_zeta_crisis_small_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
				}
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_home_guardian_fleet|ag_ship_index|support_ships|
					ag_zeta_crisis_support_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_support_ships value = 1 }
				}

				set_location = { target = prev distance = 0 angle = random }
				set_formation_scale = 2.5
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
				ag_assign_zeta_crisis_guardian_fleet_leader = yes
			}
		}
	}
	else = {
		create_fleet = {
			name = "NAME_ag_zeta_crisis_guardian_fleet"
			settings = {
				spawn_debris = no
			}
			effect = {
				set_fleet_flag = ag_zeta_crisis_guardian_fleet
				set_fleet_flag = ag_zeta_crisis_gate_guardian_fleet
				set_owner = event_target:ag_zeta_crisis_country
				set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
				
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_gate_guardian_fleet|ag_ship_index|large_ships|
					ag_zeta_crisis_large_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
				}
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_gate_guardian_fleet|ag_ship_index|medium_ships|
					ag_zeta_crisis_medium_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
				}
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_gate_guardian_fleet|ag_ship_index|small_ships|
					ag_zeta_crisis_small_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
				}
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_gate_guardian_fleet|ag_ship_index|support_ships|
					ag_zeta_crisis_support_ship_spawn = yes
					change_variable = { which = ag_num_zeta_crisis_support_ships value = 1 }
				}

				set_location = { target = prev distance = 0 angle = random }
				set_formation_scale = 2.5
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
				ag_assign_zeta_crisis_guardian_fleet_leader = yes
			}
		}
	}
}

ag_spawn_zeta_crisis_assault_fleet = {
	optimize_memory
	random_list = {
		50 = {
			create_fleet = {
				name = "NAME_ag_zeta_crisis_assault_fleet"
				settings = {
					spawn_debris = no
				}
				effect = {
					set_fleet_flag = ag_zeta_crisis_assault_fleet
					set_fleet_flag = ag_zeta_crisis_assault_fleet_1
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_assault_fleet|ag_ship_index|large_ships|ag_fleet_variant_b|1|
						ag_zeta_crisis_large_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
					}
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_assault_fleet|ag_ship_index|medium_ships|ag_fleet_variant_b|1|
						ag_zeta_crisis_medium_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
					}
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_assault_fleet|ag_ship_index|small_ships|ag_fleet_variant_b|1|
						ag_zeta_crisis_small_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
					}
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_assault_fleet|ag_ship_index|support_ships|ag_fleet_variant_b|1|
						ag_zeta_crisis_support_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_support_ships value = 1 }
					}
					
					set_location = { target = prev distance = 0 angle = random }
					set_formation_scale = 2.5
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
					ag_assign_zeta_crisis_assault_fleet_leader = yes
					
					fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
				}
			}
		}
		50 = {
			create_fleet = {
				name = "NAME_ag_zeta_crisis_assault_fleet"
				settings = {
					spawn_debris = no
				}
				effect = {
					set_fleet_flag = ag_zeta_crisis_assault_fleet
					set_fleet_flag = ag_zeta_crisis_assault_fleet_2
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_assault_fleet|ag_ship_index|large_ships|ag_fleet_variant_b|2|
						ag_zeta_crisis_large_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
					}
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_assault_fleet|ag_ship_index|medium_ships|ag_fleet_variant_b|2|
						ag_zeta_crisis_medium_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
					}
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_assault_fleet|ag_ship_index|small_ships|ag_fleet_variant_b|2|
						ag_zeta_crisis_small_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
					}
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_assault_fleet|ag_ship_index|support_ships|ag_fleet_variant_b|2|
						ag_zeta_crisis_support_ship_spawn = yes
						change_variable = { which = ag_num_zeta_crisis_support_ships value = 1 }
					}

					set_location = { target = prev distance = 0 angle = random }
					set_formation_scale = 2.5
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
					ag_assign_zeta_crisis_assault_fleet_leader = yes
					
					fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
				}
			}
		}
	}
}

ag_spawn_zeta_crisis_patrol_fleet = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_patrol_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_patrol_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_patrol_fleet|ag_ship_index|large_ships|
				ag_zeta_crisis_large_ship_spawn = yes
				change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_patrol_fleet|ag_ship_index|medium_ships|
				ag_zeta_crisis_medium_ship_spawn = yes
				change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_patrol_fleet|ag_ship_index|small_ships|
				ag_zeta_crisis_small_ship_spawn = yes
				change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_patrol_fleet|ag_ship_index|support_ships|
				ag_zeta_crisis_support_ship_spawn = yes
				change_variable = { which = ag_num_zeta_crisis_support_ships value = 1 }
			}

			set_location = { target = prev distance = 0 angle = random }
			set_formation_scale = 2.5
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			ag_assign_zeta_crisis_patrol_fleet_leader = yes
					
			fleet_event = { id = ag_zeta_crisis.72 days = 3 random = 2 }
		}
	}
}

ag_spawn_zeta_crisis_protector_fleet = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_protector_fleet"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_zeta_crisis_protector_fleet
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
			
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_protector_fleet|ag_ship_index|large_ships|
				ag_zeta_crisis_large_ship_spawn = yes
				change_variable = { which = ag_num_zeta_crisis_large_ships value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_protector_fleet|ag_ship_index|medium_ships|
				ag_zeta_crisis_medium_ship_spawn = yes
				change_variable = { which = ag_num_zeta_crisis_medium_ships value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_protector_fleet|ag_ship_index|small_ships|
				ag_zeta_crisis_small_ship_spawn = yes
				change_variable = { which = ag_num_zeta_crisis_small_ships value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|zeta_crisis_protector_fleet|ag_ship_index|support_ships|
				ag_zeta_crisis_support_ship_spawn = yes
				change_variable = { which = ag_num_zeta_crisis_support_ships value = 1 }
			}

			set_location = { target = prev distance = 0 angle = random }
			set_formation_scale = 2.5
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			ag_assign_zeta_crisis_protector_fleet_leader = yes
					
			fleet_event = { id = ag_zeta_crisis.73 days = 2 random = 2 }
		}
	}
}

ag_spawn_zeta_crisis_construction_ship = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_construction_ship_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_fleet_flag = ag_zeta_crisis_construction_ship_fleet
			set_owner = event_target:ag_zeta_crisis_country
			ag_zeta_crisis_construction_ship_spawn = yes
			set_location = { target = prev distance = 0 angle = random }
			set_fleet_stance = passive
			fleet_event = { id = ag_zeta_crisis.81 days = 4 random = 2 }
		}
	}
}

ag_spawn_zeta_crisis_hallucination_fleet = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_hallucinations"
		settings = { spawn_debris = no }
		effect = {
			set_fleet_flag = ag_zeta_crisis_avatar_fleet
			set_owner = event_target:ag_zeta_crisis_country
			
			prev = { every_controlled_ship = { switch = {
				trigger = is_ship_size
				ag_zeta_crisis_large_ship = { prevprev = { ag_zeta_crisis_large_ship_spawn = yes } }
				ag_zeta_crisis_medium_ship = { prevprev = { ag_zeta_crisis_medium_ship_spawn = yes } }
				ag_zeta_crisis_small_ship = { prevprev = { ag_zeta_crisis_large_ship_spawn = yes } }
				ag_zeta_crisis_support_ship = { prevprev = { ag_zeta_crisis_support_ship_spawn = yes } }
			} } }

			random_list = {
				10 = { set_location = { target = prev.$ag_target$ distance = 10 angle = random } }
				10 = { set_location = { target = prev.$ag_target$ distance = 25 angle = random } }
				10 = { set_location = { target = prev.$ag_target$ distance = 45 angle = random } }
				10 = { set_location = { target = prev.$ag_target$ distance = 60 angle = random } }
			}
			
			set_formation_scale = 2.5
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self

			event_target:ag_zeta_crisis_country = { ag_spawn_zeta_crisis_leader = { ag_index = 13 } }
			assign_leader = last_created_leader
			set_fleet_flag = ag_zeta_crisis_leader
			set_fleet_flag = ag_zeta_crisis_leader_13
			
			ag_delayed_destroy_fleet = { ag_days = 60 }
		}
	}
}
ag_zeta_crisis_special_ship_fleet_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_crisis_special_ship_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = event_target:ag_zeta_crisis_country
			set_fleet_flag = ag_zeta_crisis_special_fleet
			create_ship = {
				name = "NAME_ag_zeta_crisis_special_ship_ship"
				design = "NAME_ag_zeta_crisis_special_ship"
				prefix = no
				effect = { set_ship_flag = ag_zeta_crisis_special_$ag_angle$ ag_difficulty_bonus = yes }
			}
			set_location = { target = prev.star distance = 320 angle = $ag_angle$  }
		}
	}
}
ag_create_zeta_crisis_special_ships = {
	optimize_memory
	if = {
		limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } }
		if = {
			limit = { NOT = { has_star_flag = ag_ancient_zeta_system } }
			star = { set_variable = { which = ag_num_zeta_crisis_special_ships value = 6 } }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 0 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 60 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 120 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 180 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 240 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 300 }
		}
		else = {
			star = { set_variable = { which = ag_num_zeta_crisis_special_ships value = 8 } }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 0 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 45 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 90 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 135 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 180 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 225 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 270 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 315 }
		}
	}
	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
		if = {
			limit = { NOT = { has_star_flag = ag_ancient_zeta_system } }
			star = { set_variable = { which = ag_num_zeta_crisis_special_ships value = 4 } }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 0 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 90 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 180 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 270 }
		}
		else = {
			star = { set_variable = { which = ag_num_zeta_crisis_special_ships value = 6 } }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 0 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 60 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 120 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 180 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 240 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 300 }
		}
	}
	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 1 } } }
		if = {
			limit = { NOT = { has_star_flag = ag_ancient_zeta_system } }
			star = { set_variable = { which = ag_num_zeta_crisis_special_ships value = 2 } }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 0 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 180 }
		}
		else = {
			star = { set_variable = { which = ag_num_zeta_crisis_special_ships value = 3 } }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 0 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 120 }
			ag_zeta_crisis_special_ship_fleet_spawn = { ag_angle = 240 }
		}
	}
}

ag_create_small_psionic_storm = {
	optimize_memory
	set_star_flag = ag_zeta_crisis_psionic_storm_system
	ag_destroy_ambient_object = yes
	ag_destroy_megastructure = yes
	random_system_planet = {
		limit = { is_primary_star = yes }
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
		create_fleet = {
			name = "NAME_ag_zeta_crisis_psionic_storm_fleet"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_fleet_flag = ag_zeta_crisis_psionic_storm_fleet
				[[ag_fleet_relation] if = { limit = { always = $ag_fleet_relation|no$ } set_fleet_flag = ag_zeta_crisis_psionic_storm_small@prevprevprev } ]
				set_owner = event_target:ag_zeta_crisis_country
				set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
				create_ship = {
					name = "NAME_ag_zeta_crisis_psionic_storm_ship"
					design = "NAME_ag_zeta_crisis_psionic_storm_small"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = { target = prev distance = -1 angle = 0 }
				set_event_locked = yes
				fleet_event = { id = ag_zeta_crisis.521 days = 1080 random = 720 }
			}
		}
		if = {
			limit = { always = $ag_forced_spawn_reinforcement|no$ }
			ag_spawn_zeta_crisis_assault_fleet = yes
		}
		if = {
			limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
			random_list = { 95 = { modifier = { add = -35 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } } } 5 = { ag_spawn_zeta_crisis_assault_fleet = yes } }
		}
	}
	if = {
		limit = { always = $ag_destroy_planets|yes$ }
		every_system_planet = {
			limit = {
				exists = owner
				owner = { is_hostile = event_target:ag_zeta_crisis_country }
				OR = { is_colony = yes is_under_colonization = yes }
				num_pops > 0
			}
			ag_zeta_crisis_controlled_planet_effect = yes
		}
	}
	if = {
		limit = { always = $ag_kill_fleets|no$ }
		every_fleet_in_system = {
			limit = { exists = owner owner = { NOR = { is_country_type = ag_zeta_crisis_country is_country_type = ag_zeta_crisis_portal_holder is_country_type = ag_zeta_crisis_relic_country } } }
			destroy_fleet = { target = this kill_leader = yes destroy_template = yes }
		}
	}
	every_fleet_in_system = {
		limit = {
			exists = owner
			owner = { is_country_type = ag_zeta_crisis_country }
			has_fleet_flag = ag_zeta_crisis_assault_fleet
			OR = {
				AND = {
					is_fleet_idle = yes
					exists = orbit
					orbit = { is_same_value = root }
				}
				AND = {
					is_fleet_idle = yes
					NAND = {
						exists = orbit
						orbit = {
							NOT = { is_star = yes }
							exists = owner
							owner = { is_hostile = event_target:ag_zeta_crisis_country }
						}
					}
				}
			}
		}
		clear_orders = yes
		clear_fleet_actions = this
		fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
	}
	if = {
		limit = { always = $ag_show_notification|yes$ }
		every_country = {
			limit = { NOT = { is_same_value = event_target:ag_zeta_crisis_country } }
			country_event = { id = ag_zeta_crisis.522 }
		}
	}
}

ag_create_large_psionic_storm = {
	optimize_memory
	set_star_flag = ag_zeta_crisis_psionic_storm_system
	ag_destroy_ambient_object = yes
	ag_destroy_megastructure = yes
	random_system_planet = {
		limit = { is_primary_star = yes }
		ag_spawn_explosion_effect = { ag_scale = xl ag_color = violet }
		create_fleet = {
			name = "NAME_ag_zeta_crisis_psionic_storm_fleet"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_fleet_flag = ag_zeta_crisis_psionic_storm_fleet
				set_fleet_flag = ag_zeta_crisis_psionic_storm_large
				set_owner = event_target:ag_zeta_crisis_country
				set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
				create_ship = {
					name = "NAME_ag_zeta_crisis_psionic_storm_ship"
					design = "NAME_ag_zeta_crisis_psionic_storm_large"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
				set_location = {
					target = prev
					distance = -1
					angle = 0
				}
				set_event_locked = yes
				fleet_event = { id = ag_zeta_crisis.521 days = 1080 random = 720 }
			}
		}
		if = {
			limit = { always = $ag_forced_spawn_reinforcement|no$ }
			ag_spawn_zeta_crisis_assault_fleet = yes
		}
		if = {
			limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
			random_list = { 90 = { modifier = { add = -50 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } } } 10 = { ag_spawn_zeta_crisis_assault_fleet = yes } }
		}
	}
	if = {
		limit = { always = $ag_destroy_planets|yes$ }
		every_system_planet = {
			limit = {
				exists = owner
				owner = { is_hostile = event_target:ag_zeta_crisis_country }
				OR = { is_colony = yes is_under_colonization = yes }
				num_pops > 0
			}
			ag_zeta_crisis_controlled_planet_effect = yes
		}
	}
	if = {
		limit = { always = $ag_kill_fleets|no$ }
		every_fleet_in_system = {
			limit = { exists = owner owner = { NOR = { is_country_type = ag_zeta_crisis_country is_country_type = ag_zeta_crisis_portal_holder is_country_type = ag_zeta_crisis_relic_country } } }
			destroy_fleet = { target = this kill_leader = yes destroy_template = yes }
		}
	}
	every_fleet_in_system = {
		limit = {
			exists = owner
			owner = { is_country_type = ag_zeta_crisis_country }
			has_fleet_flag = ag_zeta_crisis_assault_fleet
			OR = {
				AND = {
					is_fleet_idle = yes
					exists = orbit
					orbit = { is_same_value = root }
				}
				AND = {
					is_fleet_idle = yes
					NAND = {
						exists = orbit
						orbit = {
							NOT = { is_star = yes }
							exists = owner
							owner = { is_hostile = event_target:ag_zeta_crisis_country }
						}
					}
				}
			}
		}
		clear_orders = yes
		clear_fleet_actions = this
		fleet_event = { id = ag_zeta_crisis.71 days = 3 random = 2 }
	}
	every_system = {
		limit = {
			NOT = { is_same_value = prev }
			OR = {
				distance = {
					source = prev
					min_distance >= 0
					max_distance <= 50
					type = euclidean
					use_bypasses = no
				}
				has_hyperlane_to = prev
			}
			ag_can_spawn_psionic_storm_in_system = yes
			NOT = { any_system_planet = { is_colony = yes is_capital = yes } }
		}
		ag_create_small_psionic_storm = {
			ag_fleet_relation = yes
			ag_forced_spawn_reinforcement = $ag_forced_spawn_reinforcement|no$
			ag_kill_fleets = $ag_kill_fleets|no$
			ag_show_notification = no
		}
	}
	if = {
		limit = { always = $ag_show_notification|yes$ }
		every_country = {
			limit = { NOT = { is_same_value = event_target:ag_zeta_crisis_country } }
			country_event = { id = ag_zeta_crisis.522 }
		}
	}
}

ag_spawn_station_destroyed_avatar = {
	optimize_memory
	if = {
		limit = { has_global_flag = ag_zeta_crisis_stage_3 }
		random_list = {
			10 = { create_fleet = {
				name = "NAME_ag_zeta_crisis_avatar_fleet"
				settings = { spawn_debris = no }
				effect = {
					set_fleet_flag = ag_zeta_crisis_avatar_fleet
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					create_ship = {
						name = "NAME_ag_zeta_crisis_avatar_t1_ship"
						design = "NAME_ag_zeta_crisis_avatar_t1"
						prefix = no
						effect = { ag_difficulty_bonus = yes }
					}
					set_location = { target = root distance = 0 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			} }
			10 = { create_fleet = {
				name = "NAME_ag_zeta_crisis_avatar_fleet"
				settings = { spawn_debris = no }
				effect = {
					set_fleet_flag = ag_zeta_crisis_avatar_fleet
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					create_ship = {
						name = "NAME_ag_zeta_crisis_avatar_t2_ship"
						design = "NAME_ag_zeta_crisis_avatar_t2"
						prefix = no
						effect = { ag_difficulty_bonus = yes }
					}
					set_location = { target = root distance = 0 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			} }
			10 = { create_fleet = {
				name = "NAME_ag_zeta_crisis_avatar_fleet"
				settings = { spawn_debris = no }
				effect = {
					set_fleet_flag = ag_zeta_crisis_avatar_fleet
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					create_ship = {
						name = "NAME_ag_zeta_crisis_avatar_t3_ship"
						design = "NAME_ag_zeta_crisis_avatar_t3"
						prefix = no
						effect = { ag_difficulty_bonus = yes }
					}
					set_location = { target = root distance = 0 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			} }
		}
		reroll_random = yes
	}
	else = {
		if = {
			limit = { has_global_flag = ag_zeta_crisis_stage_2 }
			create_fleet = {
				name = "NAME_ag_zeta_crisis_avatar_fleet"
				settings = { spawn_debris = no }
				effect = {
					set_fleet_flag = ag_zeta_crisis_avatar_fleet
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					create_ship = {
						name = "NAME_ag_zeta_crisis_avatar_t1_ship"
						design = "NAME_ag_zeta_crisis_avatar_t1"
						prefix = no
						effect = { ag_difficulty_bonus = yes }
					}
					set_location = { target = root distance = 0 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
		}
		else = {
			create_fleet = {
				name = "NAME_ag_corrupted_avatar"
				settings = { spawn_debris = no }
				effect = {
					set_fleet_flag = ag_zeta_crisis_avatar_fleet
					set_owner = event_target:ag_zeta_crisis_country
					set_fleet_bombardment_stance = ag_zeta_crisis_bombardment
					create_ship = {
						name = "NAME_ag_corrupted_avatar"
						design = "NAME_ag_corrupted_avatar"
						prefix = no
						effect = { ag_difficulty_bonus = yes }
					}
					set_location = { target = root distance = 0 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range = 300
					set_aggro_range_measure_from = return_point
				}
			}
		}
	}
}

ag_spawn_psi_guardian_leader = {
	optimize_memory
	create_leader = {
		class = admiral
		species = event_target:ag_ancient_psi_guardian_leader_species
		name = "NAME_ag_psi_guardian_leader"
		skill = 1
		randomize_traits = no
		hide_age = yes
		immortal = yes
		event_leader = yes
		skip_background_generation = yes
		custom_catch_phrase = ag_psi_guardian_catch_phrase
		custom_description = ag_psi_guardian_backstory
		background_ethic = ethic_gestalt_consciousness
	}
	last_created_leader = {
		add_skill = value:ag_psi_guardian_leader_skill
		reroll_random = yes
		random_list = { 30 = { } 50 = { add_skill = 1 } 20 = { add_skill = 2 } }
		remove_all_traits = yes
		add_trait_no_notify = leader_trait_ag_ancient_ai_psi_guardian
		add_trait_no_notify = subclass_admiral_aggressor
		add_trait_no_notify = leader_trait_artillery_specialization_3
		add_trait_no_notify = leader_trait_artillerist_2
		if = { limit = { has_skill >= 3 } add_trait_no_notify = leader_trait_unyielding_2 }
		if = { limit = { has_skill >= 6 } add_trait_no_notify = leader_trait_demolisher_3 }
		if = { limit = { has_skill >= 8 } add_trait_no_notify = leader_trait_supreme_admiral }
		set_leader_flag = ag_ancient_leader
	}
}
ag_psi_titan_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_psi_titan_ship"
		design = "NAME_ag_zeta_titan"
		prefix = no
		effect = {
			if = {
				limit = { always = $ag_is_player|no$ }
				set_ship_flag = ag_zeta_titan_player
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 701 }
			}
			ag_difficulty_bonus = yes
			ag_set_disable_at_health = { ag_value = 0.02 ag_disable_type = zeta_ship }
		}
	}
}
ag_psi_battleship_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_psi_battleship_ship"
		design = "NAME_ag_zeta_battleship"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			ag_set_disable_at_health = { ag_value = 0.02 ag_disable_type = zeta_ship }
		}
	}
}
ag_psi_destroyer_spawn = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_psi_destroyer_ship"
		design = "NAME_ag_zeta_destroyer"
		prefix = no
		effect = {
			ag_difficulty_bonus = yes
			ag_set_disable_at_health = { ag_value = 0.02 ag_disable_type = zeta_ship }
		}
	}
}

ag_spawm_psi_area_home_guardian_fleet = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_zeta_guardian_fleet"
		settings = {
			spawn_debris = no
			is_boss = yes
			garrison = yes
		}
		effect = {
			set_fleet_flag = ag_ancient_psi_guardian_home_fleet
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_owner = event_target:ag_ancient_psi_guardian_country

			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|psi_guardian_fleet|ag_ship_index|titans|
				ag_psi_titan_spawn = { ag_is_player = no ag_owner = event_target:ag_ancient_psi_guardian_country }
				change_variable = { which = ag_num_psi_titans value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|psi_guardian_fleet|ag_ship_index|battleships|
				ag_psi_battleship_spawn = yes
				change_variable = { which = ag_num_psi_battleships value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|psi_guardian_fleet|ag_ship_index|destroyers|
				ag_psi_destroyer_spawn = yes
				change_variable = { which = ag_num_psi_destroyers value = 1 }
			}

			event_target:ag_ancient_psi_guardian_country = { ag_spawn_psi_guardian_leader = yes }
			last_created_leader = { add_skill_without_trait_selection = 2 }
			assign_leader = last_created_leader
			
			set_location = { target = event_target:ag_ancient_psi_machine_world distance = 5 angle = random }
			set_formation_scale = 5.0
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 500
			ag_psi_titan_action = yes
		}
	}
}
ag_spawn_psi_area_reinforcement = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_psi_guardian_fleet"
		settings = {
			spawn_debris = no
			can_change_composition = no
			uses_naval_capacity = no
			can_disband = no
		}
		effect = {
			set_fleet_flag = ag_ancient_psi_guardian_fleet
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_owner = $ag_fleet_owner$
			set_fleet_bombardment_stance = ag_ancient_bombardment

			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|psi_guardian_assault_fleet|ag_ship_index|titans|
				ag_psi_titan_spawn = { ag_is_player = $ag_is_player|no$ ag_owner = $ag_fleet_owner$ }
				change_variable = { which = ag_num_psi_titans value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|psi_guardian_assault_fleet|ag_ship_index|battleships|
				ag_psi_battleship_spawn = yes
				change_variable = { which = ag_num_psi_battleships value = 1 }
			}
			while = {
				count = value:ag_num_ships_spawn|ag_fleet_index|psi_guardian_assault_fleet|ag_ship_index|destroyers|
				ag_psi_destroyer_spawn = yes
				change_variable = { which = ag_num_psi_destroyers value = 1 }
			}
			
			event_target:ag_ancient_psi_guardian_country = { ag_spawn_psi_guardian_leader = yes }
			assign_leader = last_created_leader

			set_location = { target = $ag_fleet_location$ distance = 5 angle = random  }
			set_formation_scale = 5.0
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 500
		}
	}
}

#######################################
###				Eta
#######################################

ag_eta_titan_hostile_spawn = {
	optimize_memory
	if = {
		limit = {
			OR = {
				NOT = { has_global_flag = ag_eta_titan_stage_2 }
				AND = { has_global_flag = ag_eta_titan_stage_2 has_global_flag = ag_eta_titan_event_ended }
			}
			NOT = { exists = event_target:ag_ancient_eta_guardian_$ag_eta_titan_seq$ }
		}
		ag_create_ancient_guardian = {
			ag_country_name = "NAME_ag_eta_gateway_guardian"
			ag_country_type = ag_ancient_eta_guardian_passive
		}
		last_created_country = {
			set_country_flag = ag_ancient_eta_guardian
			set_country_flag = ag_ancient_eta_guardian_$ag_eta_titan_seq$
			save_global_event_target_as = ag_ancient_eta_guardian_$ag_eta_titan_seq$
			ag_ancient_country_friendly_to_each_other = yes
		}
	}
	else_if = {
		limit = {
			has_global_flag = ag_eta_titan_stage_2
			NOT = { exists = event_target:ag_ancient_eta_guardian }
		}
		ag_create_ancient_guardian = {
			ag_country_name = "NAME_ag_eta_gateway_guardian"
			ag_country_type = ag_ancient_eta_guardian
		}
		last_created_country = {
			set_country_flag = ag_ancient_eta_guardian
			set_country_flag = ag_ancient_eta_guardian_stage_2
			save_global_event_target_as = ag_ancient_eta_guardian
			ag_ancient_country_friendly_to_each_other = yes
		}
	}
	create_fleet = {
		name = "NAME_ag_eta_titan_fleet"
		settings = { spawn_debris = no is_boss = yes }
		effect = {
			if = {
				limit = { NOT = { has_global_flag = ag_eta_titan_stage_2 } }
				set_owner = event_target:ag_ancient_eta_guardian_$ag_eta_titan_seq$
			}
			else = { set_owner = event_target:ag_ancient_eta_guardian }
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_flag = ag_eta_titan_hostile_fleet
			save_global_event_target_as = ag_eta_titan_hostile_fleet_$ag_eta_titan_seq$
			set_variable = { which = ag_num_spawned_hallucinations value = 0 }
			set_variable = { which = ag_max_spawned_hallucinations value = event_target:global_event_country.ag_scaled_difficulty }
			ceiling_variable = ag_max_spawned_hallucinations

			set_fleet_bombardment_stance = ag_ancient_bombardment
			create_ship = {
				name = "NAME_ag_eta_titan_ship"
				design = "NAME_ag_eta_titan_hostile"
				prefix = no
				effect = {
					set_variable = { which = ag_disabled_times value = 0 }
					ag_difficulty_bonus = yes
					ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = event }
				}
			}
			if = {
				limit = { has_global_flag = ag_eta_titan_stage_2 NOT = { has_global_flag = ag_eta_titan_event_ended } }
				while = {
					count = value:ag_num_ships_spawn|ag_fleet_index|eta_titan_drone_squardron|ag_ship_index|drones|
					create_ship = { name = "NAME_ag_eta_drone_ship_alt" design = "NAME_ag_eta_drone_hostile" prefix = no effect = { ag_difficulty_bonus = yes } }
					change_variable = { which = ag_num_eta_titan_drone_escorts value = 1 }
				}
			}
			set_location = { target = prev distance = 45 angle = random }
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			solar_system = { if = {
				limit = { NOT = { has_star_flag = ag_eta_titan_in_system } }
				set_star_flag = ag_eta_titan_in_system
				if = {
					limit = { NAND = {
						exists = space_owner
						space_owner = { is_same_value = prevprev.owner }
					} }
					random_system_planet = {
						limit = { is_primary_star = yes }
						create_ambient_object = { type = "ag_eta_system_effect_1_object" location = this }
						last_created_ambient_object = {
							set_ambient_object_flag = ag_eta_system_effect_1
							set_location = { target = prev distance = 0 angle = random }
						}
					}
				}
			} }
			fleet_event = { id = ag_eta.31 days = 2 random = 2 }
		}
	}
}
ag_eta_titan_phantom_hostile_spawn = {
	optimize_memory
	if = {
		limit = { NOR = {
			has_global_flag = ag_eta_titan_stage_2
			exists = event_target:ag_ancient_eta_guardian_$ag_eta_titan_seq$
		} }
		ag_create_ancient_guardian = {
			ag_country_name = "NAME_ag_eta_gateway_guardian"
			ag_country_type = ag_ancient_eta_guardian_passive
		}
		last_created_country = {
			set_country_flag = ag_ancient_eta_guardian
			set_country_flag = ag_ancient_eta_guardian_$ag_eta_titan_seq$
			save_global_event_target_as = ag_ancient_eta_guardian_$ag_eta_titan_seq$
			ag_ancient_country_friendly_to_each_other = yes
		}
	}
	else_if = {
		limit = {
			has_global_flag = ag_eta_titan_stage_2
			NOT = { exists = event_target:ag_ancient_eta_guardian }
		}
		ag_create_ancient_guardian = {
			ag_country_name = "NAME_ag_eta_gateway_guardian"
			ag_country_type = ag_ancient_eta_guardian
		}
		last_created_country = {
			set_country_flag = ag_ancient_eta_guardian
			set_country_flag = ag_ancient_eta_guardian_stage_2
			save_global_event_target_as = ag_ancient_eta_guardian
			ag_ancient_country_friendly_to_each_other = yes
		}
	}
	create_fleet = {
		name = "NAME_ag_eta_titan_phantom_fleet"
		settings = { spawn_debris = no is_boss = yes }
		effect = {
			if = {
				limit = { NOT = { has_global_flag = ag_eta_titan_stage_2 } }
				set_owner = event_target:ag_ancient_eta_guardian_$ag_eta_titan_seq$
			}
			else = { set_owner = event_target:ag_ancient_eta_guardian }
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_flag = ag_eta_titan_phantom_hostile_fleet
			save_global_event_target_as = ag_eta_titan_hostile_fleet_$ag_eta_titan_seq$

			set_fleet_bombardment_stance = ag_ancient_bombardment
			create_ship = {
				name = "NAME_ag_eta_titan_phantom_ship"
				design = "NAME_ag_eta_titan_phantom_hostile"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
					ag_set_disable_at_health = { ag_value = 0.10 ag_disable_type = invincible }
				}
			}
			set_location = { target = $ag_target|prev$ distance = $ag_distance$ angle = $ag_angle|random$ }
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

ag_create_eta_gateway_player = {
	optimize_memory
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_eta_gateway_ship"
			design = "NAME_ag_eta_gateway_1"
			prefix = no
			effect = {
				set_ship_flag = ag_eta_gateway_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 601 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_eta_gateway_ship"
			design = "NAME_ag_eta_gateway_0"
			prefix = no
			effect = {
				set_ship_flag = ag_eta_gateway_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 601 }
			}
		}
	}
}
ag_eta_gateway_player_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_eta_gateway_fleet_alt"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_eta_gateway_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

ag_create_eta_titan_player = {
	optimize_memory
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_eta_titan_ship"
			design = "NAME_ag_eta_titan_1"
			prefix = no
			effect = {
				set_ship_flag = ag_eta_titan_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 601 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_eta_titan_ship"
			design = "NAME_ag_eta_titan_0"
			prefix = no
			effect = {
				set_ship_flag = ag_eta_titan_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 601 }
			}
		}
	}
}
ag_eta_titan_player_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_eta_titan_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_eta_titan_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

ag_create_eta_titan_starbase = {
	optimize_memory
	if = {
		limit = { has_global_flag = ag_eta_titan_stage_2 OR = { always = $ag_forced_spawn|no$ NOT = { exists = starbase } } }
		create_starbase = {
			size = ag_eta_titan_starbase_hostile
			owner = event_target:ag_ancient_eta_guardian
			effect = { fleet = {
				set_name = { key = NAME_ag_eta_titan_starbase_fleet variable_string = "\[This.solar_system.GetName\]" }
				random_controlled_ship = {
					limit = { is_ship_class = shipclass_starbase }
					set_name = "NAME_ag_eta_titan_starbase_ship"
					ag_difficulty_bonus = yes
				}
			} }
		}
		if = {
			limit = { any_system_ambient_object = { has_ambient_object_flag = ag_eta_system_effect_1 } }
			every_system_ambient_object = {
				limit = { has_ambient_object_flag = ag_eta_system_effect_1 }
				destroy_ambient_object = this
			}
		}
		random_system_planet = {
			limit = { is_primary_star = yes }
			create_ambient_object = { type = "ag_eta_system_effect_2_object" location = this }
			last_created_ambient_object = {
				set_ambient_object_flag = ag_eta_system_effect_2
				set_location = { target = prev distance = 0 angle = random }
			}
		}
		every_fleet_in_system = {
			limit = {
				has_fleet_flag = ag_eta_titan_hostile_fleet
				is_in_combat = no
				is_fleet_idle = yes
				exists = owner
				owner = { is_country_type = ag_ancient_eta_guardian_passive }
				NAND = {
					exists = orbit
					orbit = {
						NOT = { has_planet_flag = ag_eta_titan_scanned_planet }
						OR = { is_colony = yes is_under_colonization = yes }
					}
				}
			}
			clear_orders = yes
			clear_fleet_actions = this
			fleet_event = { id = ag_eta.31 days = 2 random = 2 }
		}
	}
}

ag_eta_gateway_hostile_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_eta_gateway_fleet_alt"
		settings = {
			is_boss = yes
			spawn_debris = no
		}
		effect = {
			set_owner = event_target:ag_ancient_eta_gateway_guardian
			create_ship = {
				name = "NAME_ag_eta_gateway_ship"
				design = "NAME_ag_eta_gateway_hostile_alt"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
					ag_set_disable_at_health = { ag_disable_type = event }
					random_list = {
						10 = {
							modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
							ag_set_ship_invincible = { ag_days = 1 }
						}
						10 = { ag_set_ship_invincible = { ag_days = 2 } }
						10 = {
							modifier = { factor = 0 event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value < 1 } } }
							ag_set_ship_invincible = { ag_days = 3 }
						}
					}
				}
			}
			set_location = { target = prev distance = -1 angle = 0 }
		}
	}
}
ag_eta_drones_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_eta_drone_fleet"
		settings = { spawn_debris = no is_boss = yes }
		effect = {
			set_owner = event_target:ag_ancient_eta_gateway_guardian
			random_list = {
				40 = {
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|eta_guardian_drone_squardron|ag_ship_index|drones|ag_ship_variant_b|1|
						create_ship = { name = "NAME_ag_eta_drone_ship_alt" design = "NAME_ag_eta_drone_hostile" prefix = no effect = { ag_difficulty_bonus = yes } }
					}
				}
				40 = {
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|eta_guardian_drone_squardron|ag_ship_index|drones|ag_ship_variant_b|2|
						create_ship = { name = "NAME_ag_eta_drone_ship_alt" design = "NAME_ag_eta_drone_hostile" prefix = no effect = { ag_difficulty_bonus = yes } }
					}
				}
				20 = {
					while = {
						count = value:ag_num_ships_spawn|ag_fleet_index|eta_guardian_drone_squardron|ag_ship_index|drones|ag_ship_variant_b|3|
						create_ship = { name = "NAME_ag_eta_drone_ship_alt" design = "NAME_ag_eta_drone_hostile" prefix = no effect = { ag_difficulty_bonus = yes } }
					}
				}
			}
			set_location = { target = prev distance = 30 angle = random }
			set_fleet_stance = aggressive
			set_aggro_range = 500
		}
	}
}

#######################################
###				Theta
#######################################

ag_ancient_primitive_country_ships = {
	optimize_memory
	reroll_random = yes
	random_list = {
		33 = { while = {
			count = value:ag_num_ships_spawn|ag_fleet_index|ancient_starfish_fleet|ag_ship_index|ships|ag_ship_variant_b|1|
			create_ship = {
				name = "NAME_ag_ancient_primitive_country_ship"
				design = "NAME_ag_experiment_ship_hostile"
				prefix = no
				
				effect = {
					ag_difficulty_bonus = yes
					ag_spawn_jumpdrive_effect = { ag_color = orange }
				}
			}
		} }
		33 = { while = {
			count = value:ag_num_ships_spawn|ag_fleet_index|ancient_starfish_fleet|ag_ship_index|ships|ag_ship_variant_b|2|
			create_ship = {
				name = "NAME_ag_ancient_primitive_country_ship"
				design = "NAME_ag_experiment_ship_hostile"
				prefix = no
				
				effect = {
					ag_difficulty_bonus = yes
					ag_spawn_jumpdrive_effect = { ag_color = orange }
				}
			}
		} }
		33 = { while = {
			count = value:ag_num_ships_spawn|ag_fleet_index|ancient_starfish_fleet|ag_ship_index|ships|ag_ship_variant_b|3|
			create_ship = {
				name = "NAME_ag_ancient_primitive_country_ship"
				design = "NAME_ag_experiment_ship_hostile"
				prefix = no
				
				effect = {
					ag_difficulty_bonus = yes
					ag_spawn_jumpdrive_effect = { ag_color = orange }
				}
			}
		} }
	}
}

#######################################
###				Wanderer
#######################################

ag_ancient_wandering_ship_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_ancient_wandering_ship_fleet"
		settings = {
			is_boss = yes
			spawn_debris = no
		}
		effect = {
			set_fleet_flag = ag_ancient_wandering_ship_fleet
			save_global_event_target_as = ag_ancient_wandering_ship_fleet
			set_owner = event_target:ag_ancient_wanderer_country
			set_fleet_bombardment_stance = ag_ancient_bombardment
			set_variable = {
				which = ag_num_disabled_anchor_stations
				value = 0
			}
			create_ship = {
				name = "NAME_ag_ancient_wandering_ship_ship"
				design = "NAME_ag_ancient_wandering_ship_hostile"
				prefix = no
				effect = {
					set_ship_flag = ag_ancient_wandering_ship
					ag_difficulty_bonus = yes
					ag_set_disable_at_health = { ag_value = 0.05 ag_disable_type = event }
				}
			}
			set_location = {
				target = $ag_target$
				distance = $ag_distance$
				angle = random
			}
			auto_move_to_planet = {
				target = $ag_target$
				clear_auto_move_on_arrival = yes
			}
			set_fleet_stance = passive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}
ag_ancient_anchor_station_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_ancient_anchor_station_fleet"
		settings = {
			is_boss = yes
			spawn_debris = no
		}
		effect = {
			set_owner = event_target:ag_ancient_anchor_station_country
			create_ship = {
				name = "NAME_ag_ancient_anchor_station_ship"
				design = "NAME_ag_ancient_anchor_station_hostile"
				prefix = no
				effect = {
					ag_difficulty_bonus = yes
				}
			}
			set_location = {
				target = fromfrom
				distance = -1
				angle = 0
			}
		}
	}
}
ag_create_ancient_wandering_ship_player = {
	optimize_memory
	if = {
		limit = { always = $ag_unlock_ship|no$ }
		create_ship = {
			name = "NAME_ag_ancient_wandering_ship_ship"
			design = "NAME_ag_ancient_wandering_ship_1"
			prefix = no
			effect = {
				set_ship_flag = ag_ancient_wandering_ship_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 2601 }
			}
		}
	}
	else = {
		create_ship = {
			name = "NAME_ag_ancient_wandering_ship_ship"
			design = "NAME_ag_ancient_wandering_ship_0"
			prefix = no
			effect = {
				set_ship_flag = ag_ancient_wandering_ship_player
				[[ag_clone_disable_info] copy_flags_and_variables_from = prevprev ]
				ag_difficulty_bonus = yes
				ag_ship_subsystem_effect_check = { ag_owner = $ag_owner$ ag_ship_id = 2601 }
			}
		}
	}
}
ag_ancient_wandering_ship_player_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_ancient_wandering_ship_fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = $ag_owner$
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment
			ag_create_ancient_wandering_ship_player = { ag_unlock_ship = $ag_unlock_ship|no$ ag_owner = $ag_owner$ }
			set_location = {
				target = $ag_location_target$
				distance = $ag_location_distance|-1$
				angle = $ag_location_angle|0$
			}
			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
		}
	}
}

#######################################
###				Others
#######################################

ag_lost_ancient_ship_player_spawn = {
	optimize_memory
	if = {
		limit = { always = $ag_is_battleship|yes$ }
		if = {
			limit = { has_country_flag = ag_lost_ancient_ship_battleship_form_active }
			random_controlled_ship = {
				limit = { has_ship_flag = ag_lost_ancient_ship }
				fleet = {
					if = {
						limit = { exists = leader }
						leader = {
							save_event_target_as = ag_target_leader
							unassign_leader = this
						}
					}
					create_ship = {
						name = "NAME_ag_lost_ancient_ship"
						design = "NAME_ag_lost_ancient_ship_battleship_form[[ag_target_ftl_drive]$ag_target_ftl_drive$]"
						prefix = no
						effect = {
							set_ship_flag = ag_lost_ancient_ship
							copy_flags_and_variables_from = prevprev
							ag_difficulty_bonus = yes
							ag_lost_ancient_ship_debuff = yes
							ag_ship_subsystem_effect_check = { ag_owner = prevprevprev ag_ship_id = 2501 }
							if = { limit = { exists = event_target:ag_starlight_2_ship } clear_global_event_target = ag_starlight_2_ship }
							save_global_event_target_as = ag_starlight_2_ship
						}
					}
				}
				delete_ship = this
				if = {
					limit = { exists = event_target:ag_target_leader }
					fleet = { assign_leader = event_target:ag_target_leader }
				}
			}
		}
		else = {
			remove_country_flag = ag_lost_ancient_ship_science_ship_form_active
			remove_country_flag = ag_lost_ancient_ship_scientist_active
			remove_country_flag = ag_lost_ancient_ship_admiral_active
			set_country_flag = ag_lost_ancient_ship_battleship_form_active
			random_controlled_ship = {
				limit = { has_ship_flag = ag_lost_ancient_ship }
				fleet = {
					if = {
						limit = { exists = leader }
						leader = {
							save_event_target_as = ag_target_leader
							unassign_leader = this
						}
					}
					save_event_target_as = ag_lost_ancient_ship_loc
				}
				save_event_target_as = ag_target_ship
			}
			create_fleet = {
				name = event_target:ag_lost_ancient_ship_loc
				settings = {
					spawn_debris = no
					can_upgrade = no
					uses_naval_capacity = no
				}
				effect = {
					set_owner = prev
					if = {
						limit = { exists = event_target:ag_target_leader }
						fleet = { assign_leader = event_target:ag_target_leader }
					}
					create_ship = {
						name = "NAME_ag_lost_ancient_ship"
						design = "NAME_ag_lost_ancient_ship_battleship_form[[ag_target_ftl_drive]$ag_target_ftl_drive$]"
						prefix = no
						effect = {
							set_ship_flag = ag_lost_ancient_ship
							copy_flags_and_variables_from = event_target:ag_target_ship
							ag_difficulty_bonus = yes
							ag_lost_ancient_ship_debuff = yes
							ag_ship_subsystem_effect_check = { ag_owner = prevprev ag_ship_id = 2501 }
							if = { limit = { exists = event_target:ag_starlight_2_ship } clear_global_event_target = ag_starlight_2_ship }
							save_global_event_target_as = ag_starlight_2_ship
						}
					}
					set_location = {
						target = event_target:ag_lost_ancient_ship_loc
						distance = -1
						angle = 0
					}
				}
			}
			event_target:ag_lost_ancient_ship_loc = { random_controlled_ship = {
				limit = { has_ship_flag = ag_lost_ancient_ship }
				delete_ship = this
			} }
		}
	}
	else = {
		remove_country_flag = ag_lost_ancient_ship_battleship_form_active
		remove_country_flag = ag_lost_ancient_ship_scientist_active
		remove_country_flag = ag_lost_ancient_ship_admiral_active
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		random_controlled_ship = {
			limit = { has_ship_flag = ag_lost_ancient_ship }
			fleet = {
				if = {
					limit = { exists = leader }
					leader = {
						save_event_target_as = ag_target_leader
						unassign_leader = this
					}
				}
				save_event_target_as = ag_lost_ancient_ship_loc
			}
			save_event_target_as = ag_target_ship
		}
		create_fleet = {
			name = event_target:ag_lost_ancient_ship_loc
			settings = {
				spawn_debris = no
				can_upgrade = no
				uses_naval_capacity = no
			}
			effect = {
				set_owner = prev
				if = {
					limit = { exists = event_target:ag_target_leader }
					fleet = { assign_leader = event_target:ag_target_leader }
				}
				create_ship = {
					name = "NAME_ag_lost_ancient_ship"
					design = "NAME_ag_lost_ancient_ship_science_ship_form[[ag_target_ftl_drive]$ag_target_ftl_drive$]"
					prefix = no
					effect = {
						set_ship_flag = ag_lost_ancient_ship
						copy_flags_and_variables_from = event_target:ag_target_ship
						ag_difficulty_bonus = yes
						ag_lost_ancient_ship_debuff = yes
						ag_ship_subsystem_effect_check = { ag_owner = prevprev ag_ship_id = 2501 }
						if = { limit = { exists = event_target:ag_starlight_2_ship } clear_global_event_target = ag_starlight_2_ship }
						save_global_event_target_as = ag_starlight_2_ship
					}
				}
				set_location = {
					target = event_target:ag_lost_ancient_ship_loc
					distance = -1
					angle = 0
				}
			}
		}
		event_target:ag_lost_ancient_ship_loc = { random_controlled_ship = {
			limit = { has_ship_flag = ag_lost_ancient_ship }
			delete_ship = this
		} }
	}
}
ag_lost_ancient_ship_to_science_ship = {
	optimize_memory
	if = {
		limit = { exists = event_target:ag_starlight_2_ship }
		if = {
			limit = { event_target:ag_starlight_2_ship = { is_scope_type = ship } }
			event_target:ag_starlight_2_ship = {
				if = { limit = { has_component = ag_ancient_ftl_drive_1 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no } }
				}
				else_if = { limit = { has_component = PSI_JUMP_DRIVE_1 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _psi_jumpdrive_1 } }
				}
				else_if = { limit = { has_component = JUMP_DRIVE_1 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _jumpdrive_1 } }
				}
				else_if = { limit = { has_component = HYPER_DRIVE_3 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_3 } }
				}
				else_if = { limit = { has_component = HYPER_DRIVE_2 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_2 } }
				}
				else_if = { limit = { always = yes }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = no ag_target_ftl_drive = _hyperdrive_1 } }
				}
			}
		}
		else_if = {
			limit = { event_target:ag_starlight_2_ship = { is_scope_type = leader } }
			remove_country_flag = ag_lost_ancient_ship_battleship_form_active
			set_country_flag = ag_lost_ancient_ship_science_ship_form_active
			remove_country_flag = ag_lost_ancient_ship_scientist_active
			remove_country_flag = ag_lost_ancient_ship_admiral_active
			event_target:ag_starlight_2_ship = {
				if = { limit = { exists = fleet } fleet = { save_event_target_as = ag_ship_spawn_loc } }
				else_if = { limit = { exists = planet } planet = { save_event_target_as = ag_ship_spawn_loc } }
				else_if = { limit = { always = yes } owner.capital_scope = { save_event_target_as = ag_ship_spawn_loc } }
				if = {
					limit = { has_country_flag = ag_lost_ancient_ship_science_ship_form_active }
					ag_spawn_lost_ancient_ship_via_tech = { ag_is_battleship = no ag_location_target = event_target:ag_ship_spawn_loc }
				}
				else = { ag_spawn_lost_ancient_ship_via_tech = { ag_is_battleship = yes ag_location_target = event_target:ag_ship_spawn_loc } }
				ag_kill_leader = yes
			}
		}
	}
}
ag_lost_ancient_ship_to_battleship = {
	optimize_memory
	if = {
		limit = { exists = event_target:ag_starlight_2_ship }
		if = {
			limit = { event_target:ag_starlight_2_ship = { is_scope_type = ship } }
			event_target:ag_starlight_2_ship = {
				if = { limit = { has_component = ag_ancient_ftl_drive_1 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes } }
				}
				else_if = { limit = { has_component = PSI_JUMP_DRIVE_1 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _psi_jumpdrive_1 } }
				}
				else_if = { limit = { has_component = JUMP_DRIVE_1 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _jumpdrive_1 } }
				}
				else_if = { limit = { has_component = HYPER_DRIVE_3 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_3 } }
				}
				else_if = { limit = { has_component = HYPER_DRIVE_2 }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_2 } }
				}
				else_if = { limit = { always = yes }
					prevprev = { ag_lost_ancient_ship_player_spawn = { ag_is_battleship = yes ag_target_ftl_drive = _hyperdrive_1 } }
				}
			}
		}
		else_if = {
			limit = { event_target:ag_starlight_2_ship = { is_scope_type = leader } }
			set_country_flag = ag_lost_ancient_ship_battleship_form_active
			remove_country_flag = ag_lost_ancient_ship_science_ship_form_active
			remove_country_flag = ag_lost_ancient_ship_scientist_active
			remove_country_flag = ag_lost_ancient_ship_admiral_active
			event_target:ag_starlight_2_ship = {
				if = { limit = { exists = fleet } fleet = { save_event_target_as = ag_ship_spawn_loc } }
				else_if = { limit = { exists = planet } planet = { save_event_target_as = ag_ship_spawn_loc } }
				else_if = { limit = { always = yes } owner.capital_scope = { save_event_target_as = ag_ship_spawn_loc } }
				if = {
					limit = { has_country_flag = ag_lost_ancient_ship_science_ship_form_active }
					ag_spawn_lost_ancient_ship_via_tech = { ag_is_battleship = no ag_location_target = event_target:ag_ship_spawn_loc }
				}
				else = { ag_spawn_lost_ancient_ship_via_tech = { ag_is_battleship = yes ag_location_target = event_target:ag_ship_spawn_loc } }
				ag_kill_leader = yes
			}
		}
	}
}
ag_lost_ancient_ship_to_admiral = {
	optimize_memory
	if = {
		limit = { exists = event_target:ag_starlight_2_ship }
		remove_country_flag = ag_lost_ancient_ship_battleship_form_active
		remove_country_flag = ag_lost_ancient_ship_science_ship_form_active
		remove_country_flag = ag_lost_ancient_ship_scientist_active
		set_country_flag = ag_lost_ancient_ship_admiral_active
		if = {
			limit = { event_target:ag_starlight_2_ship = { is_scope_type = ship } }
			event_target:ag_starlight_2_ship = { delete_ship = this }
		}
		else_if = {
			limit = { event_target:ag_starlight_2_ship = { is_scope_type = leader } }
			event_target:ag_starlight_2_ship = { ag_kill_leader = yes }
		}
		ag_lost_ancient_ship_leader_adm_spawn = yes
	}
}
ag_lost_ancient_ship_to_scientist = {
	optimize_memory
	if = {
		limit = { exists = event_target:ag_starlight_2_ship }
		remove_country_flag = ag_lost_ancient_ship_battleship_form_active
		remove_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_scientist_active
		remove_country_flag = ag_lost_ancient_ship_admiral_active
		if = {
			limit = { event_target:ag_starlight_2_ship = { is_scope_type = ship } }
			event_target:ag_starlight_2_ship = { delete_ship = this }
		}
		else_if = {
			limit = { event_target:ag_starlight_2_ship = { is_scope_type = leader } }
			event_target:ag_starlight_2_ship = { ag_kill_leader = yes }
		}
		ag_lost_ancient_ship_leader_sci_spawn = yes
	}
}

ag_spawn_lost_ancient_ship_via_tech = {
	optimize_memory
	if = {
		limit = { always = $ag_is_battleship|yes$ }
		remove_country_flag = ag_lost_ancient_ship_science_ship_form_active
		set_country_flag = ag_lost_ancient_ship_battleship_form_active
		create_fleet = {
			name = "NAME_ag_lost_ancient_ship_fleet"
			settings = {
				spawn_debris = no
				can_upgrade = no
				uses_naval_capacity = no
			}
			effect = {
				set_owner = prev
				prev = {
					if = {
						limit = {
							OR = {
								NOT = { has_country_flag = ag_lost_ancient_ship_ftl_unusable }
								has_country_flag = ag_lost_ancient_ship_restored
							}
						}
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship } }
					}
					else_if = {
						limit = { has_technology = tech_psi_jump_drive_1 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _psi_jumpdrive_1 } }
					}
					else_if = {
						limit = { has_technology = tech_jump_drive_1 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _jumpdrive_1 } }
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_3 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _hyperdrive_3 } }
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_2 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _hyperdrive_2 } }
					}
					else_if = {
						limit = { always = yes }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = battleship ag_target_ftl_drive = _hyperdrive_1 } }
					}
				}
				set_location = {
					target = $ag_location_target$
					distance = -1
					angle = 0
				}
			}
		}
	}
	else = {
		remove_country_flag = ag_lost_ancient_ship_battleship_form_active
		set_country_flag = ag_lost_ancient_ship_science_ship_form_active
		create_fleet = {
			name = "NAME_ag_lost_ancient_ship_fleet"
			settings = {
				spawn_debris = no
				can_upgrade = no
				uses_naval_capacity = no
			}
			effect = {
				set_owner = prev
				prev = {
					if = {
						limit = {
							OR = {
								NOT = { has_country_flag = ag_lost_ancient_ship_ftl_unusable }
								has_country_flag = ag_lost_ancient_ship_restored
							}
						}
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science_ship } }
					}
					else_if = {
						limit = { has_technology = tech_psi_jump_drive_1 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science_ship ag_target_ftl_drive = _psi_jumpdrive_1 } }
					}
					else_if = {
						limit = { has_technology = tech_jump_drive_1 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science_ship ag_target_ftl_drive = _jumpdrive_1 } }
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_3 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science_ship ag_target_ftl_drive = _hyperdrive_3 } }
					}
					else_if = {
						limit = { has_technology = tech_hyper_drive_2 }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science_ship ag_target_ftl_drive = _hyperdrive_2 } }
					}
					else_if = {
						limit = { always = yes }
						prev = { ag_spawn_lost_ancient_ship_via_tech_1 = { ag_target_ship_size = science_ship ag_target_ftl_drive = _hyperdrive_1 } }
					}
				}
				set_location = {
					target = $ag_location_target$
					distance = -1
					angle = 0
				}
			}
		}
	}
}
ag_spawn_lost_ancient_ship_via_tech_1 = {
	optimize_memory
	create_ship = {
		name = "NAME_ag_lost_ancient_ship"
		design = "NAME_ag_lost_ancient_ship_[[ag_target_ship_size]$ag_target_ship_size$]_form[[ag_target_ftl_drive]$ag_target_ftl_drive$]"
		prefix = no
		effect = {
			set_ship_flag = ag_lost_ancient_ship
			ag_difficulty_bonus = yes
			ag_lost_ancient_ship_debuff = yes
			ag_ship_subsystem_effect_check = { ag_owner = root.owner ag_ship_id = 2501 }
			if = { limit = { exists = event_target:ag_starlight_2_ship } clear_global_event_target = ag_starlight_2_ship }
			save_global_event_target_as = ag_starlight_2_ship
		}
	}
}
ag_lost_ancient_ship_leader_adm_spawn = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:ag_lost_ancient_ship_diplo_species } }
		create_species = {
			name = "NAME_ag_lost_ancient_ship"
			class = "ag_ancient_class_dummy"
			portrait = "ag_ancient_ai_red_alt"
			immortal = yes
			traits = random
			effect = { save_global_event_target_as = ag_lost_ancient_ship_diplo_species }
		}
		event_target:ag_lost_ancient_ship_diplo_species = {
			if = { limit = { exists = event_target:ag_lost_ancient_ship_owner event_target:ag_lost_ancient_ship_owner = { has_country_flag = SRA_ag_StarLightII_changed } } change_species_portrait = ag_StarlightII_anim_portrait }
			else = { change_species_portrait = ag_ancient_ai_red_alt }
		}
	}
	create_leader = {
		name = "NAME_ag_lost_ancient_ship"
		species = event_target:ag_lost_ancient_ship_diplo_species
		class = admiral
		skill = 10
		gender = indeterminable
		set_age = 17
		hide_age = yes
		immortal = yes
		randomize_traits = no
		event_leader = yes
		skip_background_generation = yes
		custom_catch_phrase = ag_lost_ancient_ship_catch_phrase
		custom_description = ag_lost_ancient_ship_backstory
		background_ethic = ethic_materialist
		effect = {
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = leader_death_events_blocked
			set_leader_flag = has_gained_level_trait
			set_leader_flag = ag_lost_ancient_ship
			set_leader_flag = ag_ancient_leader
			if = { limit = { exists = event_target:ag_lost_ancient_ship_owner event_target:ag_lost_ancient_ship_owner = { has_country_flag = SRA_ag_StarLightII_changed } } change_leader_portrait = ag_StarlightII_anim_portrait }
			else = { change_leader_portrait = ag_ancient_ai_red_alt }
			set_variable = { which = ag_anim_StarlightII_clothes_diff value = 1 }
			set_variable = { which = ag_anim_StarlightII_face_diff value = 1 }
			if = {
				limit = { always = $ag_save_global_event_target|yes$ }
				if = { limit = { exists = event_target:ag_starlight_2_ship } clear_global_event_target = ag_starlight_2_ship }
				save_global_event_target_as = ag_starlight_2_ship
			}
		}
	}
	last_created_leader = {
		remove_all_traits = yes
		add_trait_no_notify = leader_trait_ag_ancient_ai_StarlightII
		add_trait_no_notify = leader_trait_ag_ancient_ai_StarlightII_councilor
		add_trait_no_notify = subclass_admiral_tactician
		add_trait_no_notify = leader_trait_maven_of_war
		add_trait_no_notify = leader_trait_artillery_specialization_3
		add_trait_no_notify = leader_trait_artillerist_3
		add_trait_no_notify = leader_trait_cautious_2
		inline_script = "ag_player_StarlightII_leader_spawn_effect"
	}
}
ag_lost_ancient_ship_leader_sci_spawn = {
	optimize_memory
	if = {
		limit = { NOT = { exists = event_target:ag_lost_ancient_ship_diplo_species } }
		create_species = {
			name = "NAME_ag_lost_ancient_ship"
			class = "ag_ancient_class_dummy"
			portrait = "ag_ancient_ai_red_alt"
			immortal = yes
			traits = random
			effect = { save_global_event_target_as = ag_lost_ancient_ship_diplo_species }
		}
		event_target:ag_lost_ancient_ship_diplo_species = {
			if = { limit = { exists = event_target:ag_lost_ancient_ship_owner event_target:ag_lost_ancient_ship_owner = { has_country_flag = SRA_ag_StarLightII_changed } } change_species_portrait = ag_StarlightII_anim_portrait }
			else = { change_species_portrait = ag_ancient_ai_red_alt }
		}
	}
	create_leader = {
		name = "NAME_ag_lost_ancient_ship"
		species = event_target:ag_lost_ancient_ship_diplo_species
		class = scientist
		skill = 10
		gender = indeterminable
		set_age = 17
		hide_age = yes
		immortal = yes
		randomize_traits = no
		event_leader = yes
		skip_background_generation = yes
		custom_catch_phrase = ag_lost_ancient_ship_catch_phrase
		custom_description = ag_lost_ancient_ship_backstory
		background_ethic = ethic_materialist
		effect = {
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = leader_death_events_blocked
			set_leader_flag = has_gained_level_trait
			set_leader_flag = ag_lost_ancient_ship
			set_leader_flag = ag_ancient_leader
			if = { limit = { exists = event_target:ag_lost_ancient_ship_owner event_target:ag_lost_ancient_ship_owner = { has_country_flag = SRA_ag_StarLightII_changed } } change_leader_portrait = ag_StarlightII_anim_portrait }
			else = { change_leader_portrait = ag_ancient_ai_red_alt }
			set_variable = { which = ag_anim_StarlightII_clothes_diff value = 1 }
			set_variable = { which = ag_anim_StarlightII_face_diff value = 1 }
			if = {
				limit = { always = $ag_save_global_event_target|yes$ }
				if = { limit = { exists = event_target:ag_starlight_2_ship } clear_global_event_target = ag_starlight_2_ship }
				save_global_event_target_as = ag_starlight_2_ship
			}
		}
	}
	last_created_leader = {
		remove_all_traits = yes
		add_trait_no_notify = leader_trait_ag_ancient_ai_StarlightII
		add_trait_no_notify = leader_trait_ag_ancient_ai_StarlightII_councilor
		add_trait_no_notify = subclass_scientist_researcher
		add_trait_no_notify = leader_trait_brilliant_shipwright
		add_trait_no_notify = leader_trait_inquisitive_3
		add_trait_no_notify = leader_trait_experimenter_3
		add_trait_no_notify = leader_trait_meticulous_2
		inline_script = "ag_player_StarlightII_leader_spawn_effect"
	}
}

ag_ancient_molten_planet_fleet_spawn = {
	optimize_memory
	create_fleet = {
		name = "NAME_ag_ancient_molten_planet_fleet"
		settings = { spawn_debris = no is_boss = yes }

		effect = {
			set_owner = event_target:ag_ancient_molten_planet_guardian
			set_fleet_flag = ag_has_ancient_ship_in_fleet
			set_fleet_bombardment_stance = ag_ancient_bombardment

			create_ship = {
				name = "NAME_ag_ancient_molten_planet_ship"
				design = "NAME_ag_ancient_cruiser_hostile"
				prefix = no
				effect = { ag_difficulty_bonus = yes }
			}

			if = {
				limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 0 } } }
				random_list = {
					75 = { }
					25 = { create_ship = {
						name = "NAME_ag_ancient_molten_planet_ship"
						design = "NAME_ag_ancient_cruiser_hostile"
						prefix = no
						effect = { ag_difficulty_bonus = yes }
					} }
				}
			}
			if = {
				limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value >= 1 } } }
				random_list = {
					50 = { }
					50 = { create_ship = {
						name = "NAME_ag_ancient_molten_planet_ship"
						design = "NAME_ag_ancient_cruiser_hostile"
						prefix = no
						effect = { ag_difficulty_bonus = yes }
					} }
				}
			}
			if = {
				limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 2 } } }
				random_list = {
					25 = { }
					75 = { create_ship = {
						name = "NAME_ag_ancient_molten_planet_ship"
						design = "NAME_ag_ancient_cruiser_hostile"
						prefix = no
						effect = { ag_difficulty_bonus = yes }
					} }
				}
			}
			if = {
				limit = { event_target:global_event_country = { check_variable = { which = ag_scaled_difficulty value > 4 } } }
				create_ship = {
					name = "NAME_ag_ancient_molten_planet_ship"
					design = "NAME_ag_ancient_cruiser_hostile"
					prefix = no
					effect = { ag_difficulty_bonus = yes }
				}
			}

			set_fleet_stance = aggressive
			set_aggro_range = 500
			set_aggro_range_measure_from = self
			
			set_location = { target = root distance = 0 angle = random }
		}
	}
}
