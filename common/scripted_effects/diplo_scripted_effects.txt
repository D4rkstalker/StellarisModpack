#	Example:
#
#	example_effect = {
#		add_resource = { energy = -100 }
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

breach_fix_resolution_ecology_natural_sanctuaries = {
	if = {
		limit = {
			OR = {
				is_active_resolution = "resolution_ecology_natural_sanctuaries"
				is_active_resolution = "resolution_ecology_integrated_gardens"
			}
			in_breach_of = resolution_ecology_natural_sanctuaries
			has_global_flag = ecology_pops_patch_flag
			OR = {
				has_policy_flag = eco_policy_environmental_selfregulation
				has_policy_flag = eco_policy_environmental_exploitation
			}
		}
		set_policy = {
			policy = eco_environmental_policy
			option = eco_policy_environmental_deregulation
			cooldown = yes
		}
		custom_tooltip = "diploevent.1.tooltip"
	}
}

breach_fix_resolution_ecology_environmental_control_board = {
	if = {
		limit = {
			is_active_resolution = "resolution_ecology_environmental_control_board"
			in_breach_of = resolution_ecology_environmental_control_board
			has_global_flag = ecology_pops_patch_flag
			OR = {
				has_policy_flag = eco_policy_environmental_selfregulation
				has_policy_flag = eco_policy_environmental_exploitation
				has_policy_flag = eco_policy_environmental_deregulation
			}
		}
		set_policy = {
			policy = eco_environmental_policy
			option = eco_environmental_policy_default
			cooldown = yes
		}
		custom_tooltip = "diploevent.2.tooltip"
	}
}

breach_fix_resolution_ecology_paradise_initiative = {
	if = {
		limit = {
			is_active_resolution = "resolution_ecology_paradise_initiative"
			in_breach_of = resolution_ecology_paradise_initiative
			has_global_flag = ecology_pops_patch_flag
			OR = {
				has_policy_flag = eco_policy_environmental_selfregulation
				has_policy_flag = eco_policy_environmental_exploitation
				has_policy_flag = eco_policy_environmental_deregulation
				has_policy_flag = eco_environmental_policy_default
			}
		}
		if = {
			limit = {
				OR = {
					has_ethic = "ethic_fanatic_egalitarian"
					has_ethic = "ethic_fanatic_xenophile"
					has_ethic = "ethic_fanatic_pacifist"
					has_ethic = "ethic_fanatic_spiritualist"
					has_origin = origin_tree_of_life
					is_servitor_empire = yes
					has_civic = civic_harm_hive
					has_civic = civic_harm_machine
				}
			}
			set_policy = {
				policy = eco_environmental_policy
				option = eco_policy_sustainable_development
				cooldown = yes
			}
			custom_tooltip = "diploevent.3.tooltip.enviro"
		}
		else_if = {
			limit = {
				is_regular_empire = no
			}
			set_policy = {
				policy = eco_environmental_policy
				option = eco_policy_environmental_integration
				cooldown = yes
			}
			custom_tooltip = "diploevent.3.tooltip.hive"
		}
		else = {
			set_policy = {
				policy = eco_environmental_policy
				option = eco_policy_environmental_regulation
				cooldown = yes
			}
			custom_tooltip = "diploevent.3.tooltip"
		}
	}
}

breach_fix_resolution_greatergood_workers_rights = {
	if = {
		limit = {
			OR = {
				is_active_resolution = "resolution_greatergood_workers_rights"
				is_active_resolution = "resolution_greatergood_five_year_plans"
				is_active_resolution = "resolution_greatergood_greater_than_ourselves"
				is_active_resolution = "resolution_greatergood_balance_in_the_middle"
				is_active_resolution = "resolution_greatergood_universal_prosperity_mandate"
			}
			has_global_flag = expanded_pops_active
			has_policy_flag = no_union_rights
		}
		set_policy = {
			policy = union_rights
			option = limited_union_rights
			cooldown = yes
		}
		custom_tooltip = "diploevent.4.tooltip"
	}
}

breach_fix_resolution_lawandorder_administrative_subsidies = {
	if = {
		limit = {
			has_policy_flag = resettlement_not_allowed
			OR = {
				is_active_resolution = "resolution_lawandorder_free_migration"
				is_active_resolution = "resolution_lawandorder_informed_governance"
			}
		}
		set_policy = {
			policy = resettlement
			option = resettlement_allowed
			cooldown = yes
		}
		custom_tooltip = "diploevent.5.tooltip.resettlement"
	}
	if = {
		limit = {
			has_policy_flag = appropriation_not_allowed
			OR = {
				is_active_resolution = "resolution_lawandorder_free_migration"
				is_active_resolution = "resolution_lawandorder_informed_governance"
			}
		}
		set_policy = {
			policy = appropriation
			option = appropriation_allowed
			cooldown = yes
		}
		custom_tooltip = "diploevent.5.tooltip.appropriation"
	}
}

breach_fix_resolution_lawandorder_informed_governance = {
	if = {
		limit = {
			has_policy_flag = resettlement_not_allowed
			is_active_resolution = "resolution_lawandorder_informed_governance"
		}
		set_policy = {
			policy = population_controls
			option = population_controls_allowed
			cooldown = yes
		}
		custom_tooltip = "diploevent.6.tooltip.population"
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			has_policy_flag = free_press
			is_active_resolution = "resolution_lawandorder_informed_governance"
			NOT = { has_ethic = ethic_fanatic_egalitarian }
		}
		set_policy = {
			policy = media_rights
			option = censored_media
			cooldown = yes
		}
		custom_tooltip = "diploevent.6.tooltip.media_rights"
	}
	if = {
		limit = {
			has_authority = auth_democratic
			is_active_resolution = "resolution_lawandorder_informed_governance"
			NOT = { has_ethic = ethic_fanatic_egalitarian }
		}
		change_government = {
			authority = auth_oligarchic
		}
		custom_tooltip = "diploevent.6.tooltip.democracy"
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			has_authority = auth_cooperative
			is_active_resolution = "resolution_lawandorder_informed_governance"
			NOT = { has_ethic = ethic_fanatic_egalitarian }
		}
		change_government = {
			authority = auth_corporate
		}
		custom_tooltip = "diploevent.6.tooltip.cooperative"
	}
}

breach_fix_resolution_divinity_a_defined_purpose_synthetic = {
	if = {
		limit = {
			has_country_flag = synthetic_empire
			is_active_resolution = "resolution_divinity_a_defined_purpose"
			in_breach_of = resolution_divinity_a_defined_purpose
			is_egalitarian = yes
		}
		hidden_effect = {
			every_owned_species = {
				limit = {
					is_sapient = yes
					NOR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
					has_citizenship_type = { type = citizenship_slavery country = prev }
				}
				set_citizenship_type = { type = citizenship_limited country = prev }
			}
		}
		custom_tooltip = "federations.10210.freeslaves"
		hidden_effect = {
			every_owned_species = {
				limit = {
					is_sapient = yes
					NOR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				set_living_standard = { type = living_standard_utopian country = prev }
			}
		}
		custom_tooltip = "federations.10230.complyutopian"
	}
}

breach_fix_resolution_divinity_a_defined_purpose_synthetic_chemical = {
	if = {
		limit = {
			has_country_flag = synthetic_empire
			is_active_resolution = "resolution_divinity_a_defined_purpose"
			in_breach_of = resolution_divinity_a_defined_purpose
			has_technology = "tech_subdermal_stimulation"
		}
		hidden_effect = {
			every_owned_species = {
				limit = {
					is_sapient = yes
					NOR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
					has_citizenship_type = { type = citizenship_slavery country = prev }
				}
				set_citizenship_type = { type = citizenship_limited country = prev }
			}
		}
		custom_tooltip = "federations.10210.freeslaves"
		hidden_effect = {
			every_owned_species = {
				limit = {
					is_sapient = yes
					NOR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				set_living_standard = { type = living_standard_chemical_bliss country = prev }
			}
		}
		custom_tooltip = "federations.10230.complychemical"
	}
}

breach_fix_resolution_lawandorder_right_to_work = {
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			OR = {
				has_policy_flag = worker_union_rights
				has_policy_flag = full_union_rights
			}
			OR = {
				is_active_resolution = "resolution_lawandorder_free_migration"
				is_active_resolution = "resolution_lawandorder_informed_governance"
				is_active_resolution = "resolution_lawandorder_right_to_work"
			}
		}
		set_policy = {
			policy = union_rights
			option = normal_union_rights
			cooldown = yes
		}
		custom_tooltip = "diploevent.9.tooltip"
	}
}

breach_fix_resolution_galacticcooperation_pan_galactic_migration = {
	if = {
		limit = {
			OR = {
				is_active_resolution = "resolution_galacticcooperation_pan_galactic_migration"
				is_active_resolution = "resolution_galacticcooperation_indigenous_protection_protocols"
				is_active_resolution = "resolution_galacticcooperation_interstellar_mediation"
				is_active_resolution = "resolution_galacticcooperation_sanctity_of_life"
			}
			has_policy_flag = refugees_not_allowed
		}
		set_policy = {
			policy = refugees
			option = refugees_only_citizens
			cooldown = yes
		}
		custom_tooltip = "diploevent.10.tooltip"
	}
}

breach_fix_resolution_galacticcooperation_sanctity_of_life = {
	if = {
		limit = {
			is_active_resolution = "resolution_galacticcooperation_sanctity_of_life"
			OR = {
				has_policy_flag = pre_sapients_eat
				has_policy_flag = pre_sapients_purge
			}
		}
		set_policy = {
			policy = pre_sapients
			option = pre_sapients_allow
			cooldown = yes
		}
		custom_tooltip = "diploevent.12.tooltip"
	}
}

breach_fix_resolution_healthcare_war_relief = {
	if = {
		limit = {
			OR = {
				is_active_resolution = "resolution_healthcare_war_relief"
				is_active_resolution = "resolution_healthcare_clonal_medicine"
				is_active_resolution = "resolution_healthcare_universal_healthcare"
			}
			any_owned_army = { army_type = xenomorph_army }
		}
		hidden_effect = {
			every_owned_army = {
				limit = { army_type = xenomorph_army }
				remove_army = yes
			}
		}
		custom_tooltip = "diploevent.21.tooltip"
	}
}

breach_fix_resolution_healthcare_clonal_medicine = {
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			OR = {
				is_active_resolution = "resolution_healthcare_clonal_medicine"
				is_active_resolution = "resolution_healthcare_universal_healthcare"
			}
			has_policy_flag = healthcare_for_profit
		}
		set_policy = {
			policy = healthcare
			option = healthcare_public_private
			cooldown = yes
		}
		custom_tooltip = "diploevent.22.tooltip"
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			OR = {
				is_active_resolution = "resolution_healthcare_clonal_medicine"
				is_active_resolution = "resolution_healthcare_universal_healthcare"
			}
			has_policy_flag = no_healthcare
		}
		set_policy = {
			policy = hive_healthcare
			option = basic_healthcare
			cooldown = yes
		}
		custom_tooltip = "diploevent.22.tooltip_gestalt"
	}
}

breach_fix_resolution_healthcare_universal_healthcare = {
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = "resolution_healthcare_universal_healthcare"
			OR = {
				has_policy_flag = healthcare_public_private
				has_policy_flag = charitable_healthcare
				has_policy_flag = research_healthcare
				has_policy_flag = healthcare_for_profit
			}
		}
		set_policy = {
			policy = healthcare
			option = healthcare_universal
			cooldown = yes
		}
		custom_tooltip = "diploevent.23.tooltip"
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = "resolution_healthcare_universal_healthcare"
			OR = {
				has_policy_flag = no_healthcare
				has_policy_flag = basic_healthcare
			}
		}
		set_policy = {
			policy = hive_healthcare
			option = extensive_healthcare
			cooldown = yes
		}
		custom_tooltip = "diploevent.23.tooltip_gestalt"
	}
	if = {
		limit = {
			is_active_resolution = "resolution_healthcare_universal_healthcare"
			any_owned_species = {
				NOT = { has_citizenship_type = { type = citizenship_purge country = prev } }
				OR = {
					has_trait = trait_slow_breeders
					has_trait = trait_fleeting
					has_trait = trait_fleeting_lithoid
					has_trait = trait_nonadaptive
					has_trait = trait_endemic
					has_trait = trait_seasonal
					has_trait = trait_tormented
				}
			}
		}
		hidden_effect = {
			every_owned_species = {
				limit = {
					NOT = { has_citizenship_type = { type = citizenship_purge country = prev } }
					OR = {
						has_trait = trait_slow_breeders
						has_trait = trait_fleeting
						has_trait = trait_fleeting_lithoid
						has_trait = trait_nonadaptive
						has_trait = trait_endemic
						has_trait = trait_seasonal
						has_trait = trait_tormented
					}
				}
				modify_species = {
					species = this
					remove_trait = trait_slow_breeders
					remove_trait = trait_fleeting
					remove_trait = trait_fleeting_lithoid
					remove_trait = trait_nonadaptive
					remove_trait = trait_endemic
					remove_trait = trait_seasonal
					remove_trait = trait_tormented
				}
			}
		}
		custom_tooltip = "diploevent.23.tooltip_genes"
	}
}

lock_breach_policies = {
	if = {
		limit = {
			is_active_resolution = resolution_galacticstudies_advanced_xenostudies
			in_breach_of = resolution_galacticstudies_advanced_xenostudies
			has_policy_flag = ai_outlawed
			can_set_policy = {
				policy = artificial_intelligence_policy
				option = ai_servitude
			}
		}
		set_policy_cooldown = artificial_intelligence_policy
	}

	if = {
		limit = {
			is_active_resolution = resolution_galacticstudies_advanced_xenostudies
			in_breach_of = resolution_galacticstudies_advanced_xenostudies
			has_policy_flag = interference_passive
			can_set_policy = {
				policy = interference
				option = interference_active
			}
		}
		set_policy_cooldown = interference
	}

	if = {
		limit = {
			is_active_resolution = resolution_galacticstudies_ethical_guideline_refactoring
			in_breach_of = resolution_galacticstudies_ethical_guideline_refactoring
			OR = {
				AND = {
					has_technology = tech_capacity_boosters
					can_set_policy = {
						policy = leader_enhancement
						option = leader_enhancement_capacity_boosters
					}
				}
				AND = {
					NOT = { has_technology = tech_capacity_boosters }
					has_technology = tech_selected_lineages
					has_policy_flag = leader_enhancement_natural_selection
					can_set_policy = {
						policy = leader_enhancement
						option = leader_enhancement_selected_lineages
					}
				}
			}
		}
		set_policy_cooldown = leader_enhancement
	}

	if = {
		limit = {
			is_active_resolution = resolution_rulesofwar_reverence_for_life
			in_breach_of = resolution_rulesofwar_reverence_for_life
			can_set_policy = {
				policy = purge
				option = purge_displacement_only
			}
		}
		set_policy_cooldown = purge
	}

	if = {
		limit = {
			is_active_resolution = resolution_rulesofwar_independent_tribunals
			in_breach_of = resolution_rulesofwar_independent_tribunals
			can_set_policy = {
				policy = orbital_bombardment
				option = orbital_bombardment_selective
			}
		}
		set_policy_cooldown = orbital_bombardment
	}

	if = {
		limit = {
			is_active_resolution = resolution_rulesofwar_last_resort_doctrine
			in_breach_of = resolution_rulesofwar_last_resort_doctrine
			OR = {
				AND = {
					is_gestalt = no
					can_set_policy = {
						policy = war_philosophy
						option = liberation_wars
					}
				}
				AND = {
					is_gestalt = yes
					can_set_policy = {
						policy = war_philosophy
						option = no_wars
					}
				}
			}
		}
		set_policy_cooldown = war_philosophy
	}

	if = {
		limit = {
			is_active_resolution = resolution_rulesofwar_demobilization_initiative
			in_breach_of = resolution_rulesofwar_demobilization_initiative
			can_set_policy = {
				policy = economic_policy
				option = economic_policy_balanced
			}
		}
		set_policy_cooldown = economic_policy
	}

	if = {
		limit = {
			is_active_resolution = resolution_divinity_a_defined_purpose
			in_breach_of = resolution_divinity_a_defined_purpose
			is_synthetic_empire = no
			can_set_policy = {
				policy = artificial_intelligence_policy
				option = ai_servitude
			}
		}
		set_policy_cooldown = artificial_intelligence_policy
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = resolution_greatergood_workers_rights
			in_breach_of = resolution_greatergood_workers_rights
			can_set_policy = {
				policy = union_rights
				option = limited_union_rights
			}
		}
		set_policy_cooldown = union_rights
	}
	if = {
		limit = {
			is_active_resolution = resolution_lawandorder_administrative_subsidies
			in_breach_of = resolution_lawandorder_administrative_subsidies
			can_set_policy = {
				policy = resettlement
				option = resettlement_allowed
			}
		}
		set_policy_cooldown = resettlement
	}
	if = {
		limit = {
			is_active_resolution = resolution_lawandorder_administrative_subsidies
			in_breach_of = resolution_lawandorder_administrative_subsidies
			can_set_policy = {
				policy = appropriation
				option = appropriation_allowed
			}
		}
		set_policy_cooldown = appropriation
	}
	if = {
		limit = {
			is_active_resolution = resolution_lawandorder_informed_governance
			in_breach_of = resolution_lawandorder_informed_governance
			can_set_policy = {
				policy = population_controls
				option = population_controls_allowed
			}
		}
		set_policy_cooldown = population_controls
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = resolution_lawandorder_informed_governance
			in_breach_of = resolution_lawandorder_informed_governance
			can_set_policy = {
				policy = media_rights
				option = censored_media
			}
		}
		set_policy_cooldown = media_rights
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = resolution_lawandorder_right_to_work
			in_breach_of = resolution_lawandorder_right_to_work
			can_set_policy = {
				policy = union_rights
				option = normal_union_rights
			}
		}
		set_policy_cooldown = union_rights
	}
	if = {
		limit = {
			is_active_resolution = resolution_galacticcooperation_pan_galactic_migration
			in_breach_of = resolution_galacticcooperation_pan_galactic_migration
			can_set_policy = {
				policy = refugees
				option = refugees_only_citizens
			}
		}
		set_policy_cooldown = refugees
	}
	if = {
		limit = {
			is_active_resolution = resolution_galacticcooperation_sanctity_of_life
			in_breach_of = resolution_galacticcooperation_sanctity_of_life
			can_set_policy = {
				policy = pre_sapients
				option = pre_sapients_allow
			}
		}
		set_policy_cooldown = pre_sapients
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = resolution_healthcare_clonal_medicine
			in_breach_of = resolution_healthcare_clonal_medicine
			is_gestalt = no
			can_set_policy = {
				policy = healthcare
				option = healthcare_public_private
			}
		}
		set_policy_cooldown = healthcare
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = resolution_healthcare_clonal_medicine
			in_breach_of = resolution_healthcare_clonal_medicine
			is_hive_empire = yes
			can_set_policy = {
				policy = hive_healthcare
				option = basic_healthcare
			}
		}
		set_policy_cooldown = hive_healthcare
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = resolution_healthcare_universal_healthcare
			in_breach_of = resolution_healthcare_universal_healthcare
			is_gestalt = no
			can_set_policy = {
				policy = healthcare
				option = healthcare_universal
			}
		}
		set_policy_cooldown = healthcare
	}
	if = {
		limit = {
			has_global_flag = expanded_pops_active
			is_active_resolution = resolution_healthcare_universal_healthcare
			in_breach_of = resolution_healthcare_universal_healthcare
			is_hive_empire = yes
			can_set_policy = {
				policy = hive_healthcare
				option = extensive_healthcare
			}
		}
		set_policy_cooldown = hive_healthcare
	}
}

galactic_cooperation_migration_update = {
	if = {
		limit = {
			count_country = {
				limit = { has_diplo_migration_treaty = PREV }
				count >= 5
			}
			NOT = { has_modifier = galactic_cooperation_migration_5 }
		}
		remove_galactic_cooperation_migration_modifiers = yes
		add_modifier = { modifier = galactic_cooperation_migration_5 days = -1 }
	}
	else_if = {
		limit = {
			count_country = {
				limit = { has_diplo_migration_treaty = PREV }
				count >= 4
			}
			NOT = { has_modifier = galactic_cooperation_migration_4 }
		}
		remove_galactic_cooperation_migration_modifiers = yes
		add_modifier = { modifier = galactic_cooperation_migration_4 days = -1 }
	}
	else_if = {
		limit = {
			count_country = {
				limit = { has_diplo_migration_treaty = PREV }
				count >= 3
			}
			NOT = { has_modifier = galactic_cooperation_migration_3 }
		}
		remove_galactic_cooperation_migration_modifiers = yes
		add_modifier = { modifier = galactic_cooperation_migration_3 days = -1 }
	}
	else_if = {
		limit = {
			count_country = {
				limit = { has_diplo_migration_treaty = PREV }
				count >= 2
			}
			NOT = { has_modifier = galactic_cooperation_migration_2 }
		}
		remove_galactic_cooperation_migration_modifiers = yes
		add_modifier = { modifier = galactic_cooperation_migration_2 days = -1 }
	}
	else_if = {
		limit = {
			count_country = {
				limit = { has_diplo_migration_treaty = PREV }
				count >= 1
			}
			NOT = { has_modifier = galactic_cooperation_migration_1 }
		}
		remove_galactic_cooperation_migration_modifiers = yes
		add_modifier = { modifier = galactic_cooperation_migration_1 days = -1 }
	}
	else = {
		remove_galactic_cooperation_migration_modifiers = yes
	}
}

remove_galactic_cooperation_migration_modifiers = {
	if = {
		limit = { has_modifier = galactic_cooperation_migration_1 }
		remove_modifier = galactic_cooperation_migration_1
	}
	if = {
		limit = { has_modifier = galactic_cooperation_migration_2 }
		remove_modifier = galactic_cooperation_migration_2
	}
	if = {
		limit = { has_modifier = galactic_cooperation_migration_3 }
		remove_modifier = galactic_cooperation_migration_3
	}
	if = {
		limit = { has_modifier = galactic_cooperation_migration_4 }
		remove_modifier = galactic_cooperation_migration_4
	}
	if = {
		limit = { has_modifier = galactic_cooperation_migration_5 }
		remove_modifier = galactic_cooperation_migration_5
	}
}

append_resolution_galacticcooperation_energy_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_energy_num }
			change_variable = {
				which = resolution_galacticcooperation_energy_num
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_energy_num
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_energy_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_energy_num }
			subtract_variable = {
				which = resolution_galacticcooperation_energy_num
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_energy_num
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_energy_num
			}
		}
	}
}

append_resolution_galacticcooperation_energy_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_energy_give }
			change_variable = {
				which = resolution_galacticcooperation_energy_give
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_energy_give
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_energy_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_energy_give }
			subtract_variable = {
				which = resolution_galacticcooperation_energy_give
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_energy_give
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_energy_give
			}
		}
	}
}

refresh_mutual_aid_energy_modifier = {
	if = {
		limit = { has_modifier = resolution_galacticcooperation_energy }
		remove_modifier = resolution_galacticcooperation_energy
		remove_resolution_galacticcooperation_energy_give = yes
	}
	if = {
		limit = {
			is_variable_set = resolution_galacticcooperation_energy_num
			is_galactic_community_member = yes
			has_monthly_income = { resource = energy value > 1 }
			NOT = {
				any_situation = { is_situation_type = situation_energy_deficit }
			}
		}
		add_modifier = {
			modifier = resolution_galacticcooperation_energy
			multiplier = resolution_galacticcooperation_energy_num
		}
		append_resolution_galacticcooperation_energy_give = yes
	}
}

append_resolution_galacticcooperation_minerals_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_minerals_num }
			change_variable = {
				which = resolution_galacticcooperation_minerals_num
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_minerals_num
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_minerals_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_minerals_num }
			subtract_variable = {
				which = resolution_galacticcooperation_minerals_num
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_minerals_num
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_minerals_num
			}
		}
	}
}

append_resolution_galacticcooperation_minerals_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_minerals_give }
			change_variable = {
				which = resolution_galacticcooperation_minerals_give
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_minerals_give
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_minerals_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_minerals_give }
			subtract_variable = {
				which = resolution_galacticcooperation_minerals_give
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_minerals_give
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_minerals_give
			}
		}
	}
}

refresh_mutual_aid_minerals_modifier = {
	if = {
		limit = { has_modifier = resolution_galacticcooperation_minerals }
		remove_modifier = resolution_galacticcooperation_minerals
		remove_resolution_galacticcooperation_minerals_give = yes
	}
	if = {
		limit = {
			is_variable_set = resolution_galacticcooperation_minerals_num
			is_galactic_community_member = yes
			has_monthly_income = { resource = minerals value > 1 }
			NOT = {
				any_situation = { is_situation_type = situation_mineral_deficit }
			}
		}
		add_modifier = {
			modifier = resolution_galacticcooperation_minerals
			multiplier = resolution_galacticcooperation_minerals_num
		}
		append_resolution_galacticcooperation_minerals_give = yes
	}
}

append_resolution_galacticcooperation_food_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_food_num }
			change_variable = {
				which = resolution_galacticcooperation_food_num
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_food_num
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_food_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_food_num }
			subtract_variable = {
				which = resolution_galacticcooperation_food_num
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_food_num
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_food_num
			}
		}
	}
}

append_resolution_galacticcooperation_food_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_food_give }
			change_variable = {
				which = resolution_galacticcooperation_food_give
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_food_give
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_food_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_food_give }
			subtract_variable = {
				which = resolution_galacticcooperation_food_give
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_food_give
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_food_give
			}
		}
	}
}

refresh_mutual_aid_food_modifier = {
	if = {
		limit = { has_modifier = resolution_galacticcooperation_food }
		remove_modifier = resolution_galacticcooperation_food
		remove_resolution_galacticcooperation_food_give = yes
	}
	if = {
		limit = {
			is_variable_set = resolution_galacticcooperation_food_num
			is_galactic_community_member = yes
			has_monthly_income = { resource = food value > 1 }
			NOT = {
				any_situation = { is_situation_type = situation_food_deficit }
			}
		}
		add_modifier = {
			modifier = resolution_galacticcooperation_food
			multiplier = resolution_galacticcooperation_food_num
		}
		append_resolution_galacticcooperation_food_give = yes
	}
}

append_resolution_galacticcooperation_goods_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_goods_num }
			change_variable = {
				which = resolution_galacticcooperation_goods_num
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_goods_num
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_goods_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_goods_num }
			subtract_variable = {
				which = resolution_galacticcooperation_goods_num
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_goods_num
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_goods_num
			}
		}
	}
}

append_resolution_galacticcooperation_goods_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_goods_give }
			change_variable = {
				which = resolution_galacticcooperation_goods_give
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_goods_give
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_goods_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_goods_give }
			subtract_variable = {
				which = resolution_galacticcooperation_goods_give
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_goods_give
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_goods_give
			}
		}
	}
}

refresh_mutual_aid_goods_modifier = {
	if = {
		limit = { has_modifier = resolution_galacticcooperation_goods }
		remove_modifier = resolution_galacticcooperation_goods
		remove_resolution_galacticcooperation_goods_give = yes
	}
	if = {
		limit = {
			is_variable_set = resolution_galacticcooperation_goods_num
			is_galactic_community_member = yes
			has_monthly_income = { resource = consumer_goods value > 1 }
			NOT = {
				any_situation = { is_situation_type = situation_consumer_goods_deficit }
			}
		}
		add_modifier = {
			modifier = resolution_galacticcooperation_goods
			multiplier = resolution_galacticcooperation_goods_num
		}
		append_resolution_galacticcooperation_goods_give = yes
	}
}

append_resolution_galacticcooperation_crystals_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_crystals_num }
			change_variable = {
				which = resolution_galacticcooperation_crystals_num
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_crystals_num
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_crystals_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_crystals_num }
			subtract_variable = {
				which = resolution_galacticcooperation_crystals_num
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_crystals_num
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_crystals_num
			}
		}
	}
}

append_resolution_galacticcooperation_crystals_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_crystals_give }
			change_variable = {
				which = resolution_galacticcooperation_crystals_give
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_crystals_give
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_crystals_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_crystals_give }
			subtract_variable = {
				which = resolution_galacticcooperation_crystals_give
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_crystals_give
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_crystals_give
			}
		}
	}
}

refresh_mutual_aid_crystals_modifier = {
	if = {
		limit = { has_modifier = resolution_galacticcooperation_crystals }
		remove_modifier = resolution_galacticcooperation_crystals
		remove_resolution_galacticcooperation_crystals_give = yes
	}
	if = {
		limit = {
			is_variable_set = resolution_galacticcooperation_crystals_num
			is_galactic_community_member = yes
			has_monthly_income = { resource = rare_crystals value > 1 }
			NOT = {
				any_situation = { is_situation_type = situation_rare_crystals_deficit }
			}
		}
		add_modifier = {
			modifier = resolution_galacticcooperation_crystals
			multiplier = resolution_galacticcooperation_crystals_num
		}
		append_resolution_galacticcooperation_crystals_give = yes
	}
}

append_resolution_galacticcooperation_motes_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_motes_num }
			change_variable = {
				which = resolution_galacticcooperation_motes_num
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_motes_num
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_motes_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_motes_num }
			subtract_variable = {
				which = resolution_galacticcooperation_motes_num
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_motes_num
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_motes_num
			}
		}
	}
}

append_resolution_galacticcooperation_motes_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_motes_give }
			change_variable = {
				which = resolution_galacticcooperation_motes_give
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_motes_give
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_motes_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_motes_give }
			subtract_variable = {
				which = resolution_galacticcooperation_motes_give
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_motes_give
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_motes_give
			}
		}
	}
}

refresh_mutual_aid_motes_modifier = {
	if = {
		limit = { has_modifier = resolution_galacticcooperation_motes }
		remove_modifier = resolution_galacticcooperation_motes
		remove_resolution_galacticcooperation_motes_give = yes
	}
	if = {
		limit = {
			is_variable_set = resolution_galacticcooperation_motes_num
			is_galactic_community_member = yes
			has_monthly_income = { resource = volatile_motes value > 1 }
			NOT = {
				any_situation = { is_situation_type = situation_volatile_motes_deficit }
			}
		}
		add_modifier = {
			modifier = resolution_galacticcooperation_motes
			multiplier = resolution_galacticcooperation_motes_num
		}
		append_resolution_galacticcooperation_motes_give = yes
	}
}

append_resolution_galacticcooperation_gases_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_gases_num }
			change_variable = {
				which = resolution_galacticcooperation_gases_num
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_gases_num
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_gases_num = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_gases_num }
			subtract_variable = {
				which = resolution_galacticcooperation_gases_num
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_gases_num
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_gases_num
			}
		}
	}
}

append_resolution_galacticcooperation_gases_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_gases_give }
			change_variable = {
				which = resolution_galacticcooperation_gases_give
				value = 1
			}
			else = {
				set_variable = {
					which = resolution_galacticcooperation_gases_give
					value = 1
				}
			}
		}
	}
}

remove_resolution_galacticcooperation_gases_give = {
	every_playable_country = {
		if = {
			limit = { is_variable_set = resolution_galacticcooperation_gases_give }
			subtract_variable = {
				which = resolution_galacticcooperation_gases_give
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = resolution_galacticcooperation_gases_give
						value = 0
					}
				}
				clear_variable = resolution_galacticcooperation_gases_give
			}
		}
	}
}

refresh_mutual_aid_gases_modifier = {
	if = {
		limit = { has_modifier = resolution_galacticcooperation_gases }
		remove_modifier = resolution_galacticcooperation_gases
		remove_resolution_galacticcooperation_gases_give = yes
	}
	if = {
		limit = {
			is_variable_set = resolution_galacticcooperation_gases_num
			is_galactic_community_member = yes
			has_monthly_income = { resource = exotic_gases value > 1 }
			NOT = {
				any_situation = { is_situation_type = situation_exotic_gases_deficit }
			}
		}
		add_modifier = {
			modifier = resolution_galacticcooperation_gases
			multiplier = resolution_galacticcooperation_gases_num
		}
		append_resolution_galacticcooperation_gases_give = yes
	}
}