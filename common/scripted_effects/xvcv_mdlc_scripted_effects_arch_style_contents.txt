xvcv_mdlc_operation_malware_activity_main_effect = {
	random_list = {
		1 = {
			set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_1 #resource reward (one time) #ransomware
			target = {
				random_list = {
					1 = {
						prev = { set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_1_energy }
						export_resource_stockpile_to_variable = { resource = energy variable = xvcv_mdlc_malware_victim_resource_stockpile_var }
					}
					1 = {
						prev = { set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_1_minerals }
						export_resource_stockpile_to_variable = { resource = minerals variable = xvcv_mdlc_malware_victim_resource_stockpile_var }
					}
					1 = {
						prev = { set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_1_alloys }
						export_resource_stockpile_to_variable = { resource = alloys variable = xvcv_mdlc_malware_victim_resource_stockpile_var }
					}
				}
				prev.owner = {
					set_variable = {
						which = xvcv_mdlc_malware_resource_stockpile_bonus_var
						value = { scope = prev variable = xvcv_mdlc_malware_victim_resource_stockpile_var }
					}
					divide_variable = { which = xvcv_mdlc_malware_resource_stockpile_bonus_var value = 10 } #10% of the total stockpile
					if = {
						limit = { check_variable = { which = xvcv_mdlc_malware_resource_stockpile_bonus_var value < 100 } }
						set_variable = { which = xvcv_mdlc_malware_resource_stockpile_bonus_var value = 100 }
					}
					else_if = {
						limit = { check_variable = { which = xvcv_mdlc_malware_resource_stockpile_bonus_var value > 1000 } }
						set_variable = { which = xvcv_mdlc_malware_resource_stockpile_bonus_var value = 1000 }
					}
				}
			}
		}
		1 = {
			modifier = {
				factor = 0
				owner = {
					#0% chance if the empire has all those modifiers #rare but possible
					has_modifier = xvcv_mdlc_malware_income_bonus_energy
					has_modifier = xvcv_mdlc_malware_income_bonus_minerals
					has_modifier = xvcv_mdlc_malware_income_bonus_alloys
					has_modifier = xvcv_mdlc_malware_income_bonus_physics_research
					has_modifier = xvcv_mdlc_malware_income_bonus_society_research
					has_modifier = xvcv_mdlc_malware_income_bonus_engineering_research
				}
			}
			random_list = {
				#resource reward (monthly) (1 year) #cryptojacking malware
				1 = {
					modifier = { factor = 0 owner = { has_modifier = xvcv_mdlc_malware_income_bonus_energy } }
					set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_2_energy
				}
				1 = {
					modifier = { factor = 0 owner = { has_modifier = xvcv_mdlc_malware_income_bonus_minerals } }
					set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_2_minerals
				}
				1 = {
					modifier = { factor = 0 owner = { has_modifier = xvcv_mdlc_malware_income_bonus_alloys } }
					set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_2_alloys
				}
				1 = {
					modifier = { factor = 0 owner = { has_modifier = xvcv_mdlc_malware_income_bonus_physics_research } }
					set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_2_physics_research
				}
				1 = {
					modifier = { factor = 0 owner = { has_modifier = xvcv_mdlc_malware_income_bonus_society_research } }
					set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_2_society_research
				}
				1 = {
					modifier = { factor = 0 owner = { has_modifier = xvcv_mdlc_malware_income_bonus_engineering_research } }
					set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_2_engineering_research
				}
			}
		}
		1 = { set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_3 } #intel reward (one time) #spyware
		1 = {
			modifier = { factor = 0 spynetwork = { has_modifier = xvcv_mdlc_malware_espionage_bonus_1 } }
			set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_4 #operation skill bonus (1 year) #exploit
		}
		1 = {
			modifier = { factor = 0 spynetwork = { has_modifier = xvcv_mdlc_malware_espionage_bonus_2 } }
			set_espionage_operation_flag = xvcv_mdlc_operation_malware_activity_5 #infiltration speed and max infiltration level bonus (1 year) #exploit
		}
	}
}
xvcv_mdlc_operation_machine_uprising_main_effect = {
	event_target:current_uprising_originator = { #for 'syndaw.1025.desc'
		set_country_flag = had_uprising
		random_owned_planet = {
			limit = { is_capital = no }
			save_event_target_as = xvcv_mdlc_operation_machine_uprising_target_world
		}
		random_owned_species = {
			limit = {
				OR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			save_event_target_as = xvcv_mdlc_operation_machine_uprising_target_species
		}
		if = {
			limit = { NOT = { exists = event_target:xvcv_mdlc_operation_machine_uprising_target_species } }
			create_species = {
				name = random
				namelist = prev
				class = "MACHINE"
				portrait = sd_avi_robot
				traits = { trait = trait_machine_unit }
				traits = random
				homeworld = this
				effect = { save_event_target_as = xvcv_mdlc_operation_machine_uprising_target_species }
			}
		}
		effect_on_blob = {
			center = event_target:xvcv_mdlc_operation_machine_uprising_target_world.solar_system
			owned_planets_percentage = 0.5
			planet_limit = {
				solar_system = {
					exists = starbase
					starbase = { is_owned_by = prevprevprev }
					NOT = { any_system_planet = { is_same_value = prevprevprev.capital_scope } }
				}
				is_under_colonization = no
			}
			effect = { set_star_flag = machup_system_flip }
		}
		create_country = {
			name = random
			type = default
			flag = random
			species = event_target:xvcv_mdlc_operation_machine_uprising_target_species
			ignore_initial_colony_error = yes
			day_zero_contact = no
			ethos = { ethic = ethic_gestalt_consciousness }
			authority = auth_machine_intelligence
			origin = origin_separatists
			civics = {
				civic = civic_machine_terminator
				civic = xvcv_mdlc_civic_warfleet
				civic = xvcv_mdlc_civic_expander
			}
		}
		event_target:xvcv_mdlc_operation_machine_uprising_target_world = {
			solar_system.starbase = { set_owner = last_created_country }
			set_owner = last_created_country
			set_capital = yes
		}
		every_system = {
			limit = {
				has_star_flag = machup_system_flip
				is_owned_by = prev
			}
			starbase = { set_owner = last_created_country }
			every_system_planet = {
				limit = { is_colony = yes }
				set_owner = last_created_country
				while = {
					limit = { has_district = district_city }
					remove_district = district_city
					change_variable = { which = xvcv_mdlc_district_city_count_var value = 1 }
				}
			}
		}
		last_created_country = {
			save_event_target_as = current_uprising #for 'syndaw.1025.desc'
			set_country_flag = machine_uprising_country
			every_country = {
				limit = { has_communications = prevprev }
				establish_communications_no_message = prev
				establish_contact = { who = prev location = event_target:xvcv_mdlc_operation_machine_uprising_target_world }
			}
			set_relation_flag = {
				who = prev
				flag = uprising_to_host_flag
			}
			add_opinion_modifier = { who = prev modifier = opinion_machine_uprising_originator }
			set_graphical_culture = prev
			add_resource = {
				energy = 5000
				minerals = 5000
				influence = 500
				alloys = 5000
			}
			add_100_unity_per_year_passed = yes
			every_owned_planet = {
				while = {
					limit = { check_variable = { which = xvcv_mdlc_district_city_count_var value > 0 } }
					subtract_variable = { which = xvcv_mdlc_district_city_count_var value = 1 }
					add_district = district_nexus
				}
				while = {
					limit = { any_owned_pop = { NOT = { is_same_species = owner.species } } }
					random_owned_pop = {
						limit = { NOT = { is_same_species = owner.species } }
						kill_pop = yes
					}
					create_pop = { species = owner.species }
				}
				while = {
					create_army = {
						owner = this.owner
						species = owner.species
						type = machine_assault_1
					}
					count = 6
				}
			}
			copy_techs_from = {
				target = prev
				except = {
					# Robots
					tech_robotic_workers
					tech_droid_workers
					tech_synthetic_workers
					# Food
					tech_eco_simulation
					tech_gene_crops
					tech_nano_vitality_crops
					tech_nutrient_replication
					# Misc
					tech_frontier_health
					tech_frontier_hospital
					tech_telepathy
					tech_precognition_interface
					tech_psi_jump_drive_1
					tech_galactic_markets
					tech_subdermal_stimulation
					tech_global_research_initiative
					tech_neural_implants
					tech_psionic_theory
					# Non-Machine Robomodding
					tech_robomodding
					tech_robomodding_points_1
					tech_robomodding_points_2
					# Genetics
					tech_genome_mapping
					tech_vitality_boosters
					tech_epigenetic_triggers
					tech_cloning
					tech_gene_banks
					tech_gene_seed_purification
					tech_morphogenetic_field_mastery
					tech_gene_tailoring
					tech_glandular_acclimation
					tech_gene_expressions
					tech_selected_lineages
					tech_capacity_boosters
					# Horizon Signal
					tech_akx_worm_1
					tech_akx_worm_2
					tech_akx_worm_3
				}
			}
			while = {
				create_fleet_from_naval_cap = 0.4
				random_owned_planet = { last_created_fleet = { set_location = prev } }
				count = 2
			}
			add_modifier = {
				modifier = uprising_ai_buff
				days = 1800
			}
		}
		set_relation_flag = {
			who = last_created_country
			flag = host_to_uprising_flag
		}
		add_opinion_modifier = { who = last_created_country modifier = opinion_machine_uprising }
		every_system = {
			limit = { has_star_flag = machup_system_flip }
			remove_star_flag = machup_system_flip
		}
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = prev
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = last_created_country
			}
		}
		create_fleet = {
			effect = {
				set_owner = last_created_country
				create_ship = {
					name = random
					random_existing_design = science
				}
				set_fleet_stance = evasive				
				set_location = last_created_country.capital_scope
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = owner.species
					}
				}
				set_leader = last_created_leader
			}			
		}
		create_fleet = {
			effect = {
				set_owner = last_created_country
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				set_fleet_stance = evasive
				set_location = last_created_country.capital_scope
			}
		}
	}
	every_playable_country = {
		limit = {
			has_communications = event_target:current_uprising_originator
			NOR = {
				is_same_value = root
				is_same_value = last_created_country
				is_same_value = event_target:current_uprising_originator
			}
		}
		country_event = { id = syndaw.1025 days = 5 }
	}
	observer_event = { id = observer.81 }
	declare_war = {
		target = event_target:current_uprising_originator
		name = "NAME_Machine_Uprising_War"
		attacker_war_goal = "wg_machine_uprising"
	}
	last_created_country = {
		set_closed_borders = {
			who = root
			status = no
		}
		join_alliance = {
			who = root
			override_requirements = yes
		}
		join_war = root
	}
	set_closed_borders = {
		who = last_created_country
		status = no
	}
}