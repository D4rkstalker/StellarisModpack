

# Checks if Subterraneans (player-only event nation) exists
# Creates the country and saves it if it does not
# use in planet scope
create_decepticon_nation = {
	if = {
		limit = {
			NOT = {
				any_country = {
					is_country_type = adversary
					has_country_flag = decepticon_nation
				}
			}
		}
		create_species = {
			name = "Decepticon"
			class = cybertronian
			portrait = "decepticon"
			name_list="decepticon"
			traits = {
				trait = "trait_mechanical"
				trait = "trait_cybertronian"
				trait = "trait_robot_decepticon"
				trait = "trait_energon_dependence"
			}
			immortal = yes
			homeworld = root
		}
		create_country = {
			name = "Decepticon Star Empire"
			species = last_created_species
			type = adversary
			ethos = { 
				ethic = ethic_fanatic_militarist
				ethic = ethic_authoritarian
			}
			auto_delete = no
			flag = {
				icon={
					category="cybertronian"
					file="decepticon_01.dds"
				}
				background={
					category="backgrounds"
					file="00_solid.dds"
				}
				colors={
					"dark_purple"
					"black"
					"null"
					"null"
				}
			}
		}
		effect = {
			set_relation_flag = {
				who = root.owner
				flag = subterror
			}
			set_country_flag = decepticon_nation
			establish_contact = { who = event_target:decepticon_planet_owner location = root }
			establish_communications_no_message = event_target:decepticon_planet_owner
			save_event_target_as = decepticon_nation
			owner_species = { save_event_target_as = decepticon_species }
		}
	}
	else_if = {
		limit = {
			NOT = { exists = event_target:decepticon_nation }
		}
		random_country = {
			limit = {
				is_country_type = adversary
				has_country_flag = decepticon_nation
			}
			save_event_target_as = decepticon_nation
		}
	}
}

give_decepticon_tech = {
	if = {
		limit = {
			NOT = { has_technology = tech_cybertronian_technology }
		}
		give_technology = { tech = tech_cybertronian_technology }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_powered_exoskeletons }
		}
		give_technology = { tech = tech_powered_exoskeletons }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_robotic_workers }
		}
		give_technology = { tech = tech_robotic_workers }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_droid_workers }
		}
		give_technology = { tech = tech_droid_workers }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_synthetic_workers }
		}
		give_technology = { tech = tech_synthetic_workers }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_synthetic_leaders }
		}
		give_technology = { tech = tech_synthetic_leaders }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_robomodding }
		}
		give_technology = { tech = tech_robomodding }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_dark_energon_mining }
		}
		give_technology = { tech = tech_dark_energon_mining }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_mine_living_metal }
		}
		give_technology = { tech = tech_mine_living_metal }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_energon_mining }
		}
		give_technology = { tech = tech_energon_mining }
		break = yes
	}
	if = {
		limit = {
			NOT = { has_technology = tech_adaptive_combat_algorithms }
		}
		give_technology = { tech = tech_adaptive_combat_algorithms }
		break = yes
	}
	
}

give_cybertronian_tech = {
	if = {
		limit = {
			has_trait = "trait_cybertronian"
		}
		add_modifier = {
			modifier = cybertronians
			days = -1
		}
		set_policy = { policy = artificial_intelligence_policy option = ai_full_rights cooldown = yes }
		
		every_owned_pop = {
			limit = {
				is_same_species = root 
			}
			modify_species = {
				species = this
				add_trait = trait_mechanical
			}
			change_dominant_species = { species = last_created change_all = yes }
			save_event_target_as = trait_cybertronian_owner_species
		}
		set_built_species = event_target:trait_cybertronian_owner_species
		change_dominant_species = { species = event_target:trait_cybertronian_owner_species }
		
		every_owned_pop = {
			limit = { has_trait = "trait_cybertronian" }
			set_citizenship_type = {
				type = citizenship_full
				cooldown = no
			}
			set_military_service_type = {
				type = military_service_full
				cooldown = no
			}
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
			every_owned_leader = {
				limit = {
					is_same_species = root
					#species = { 
					#	has_trait = trait_cybernetic
					#	is_same_value = event_target:cybernetic_species
					#}
					NOR = {
						has_trait =	leader_trait_admiral_cybertronian
						has_trait =	leader_trait_general_cybertronian
						has_trait =	leader_trait_governor_cybertronian
						has_trait =	leader_trait_scientist_cybertronian
						has_trait =	leader_trait_ruler_cybertronian
					}
				}
				if = {
					limit = { leader_class = admiral }
					add_trait = leader_trait_admiral_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
				if = {
					limit = { leader_class = general }
					add_trait = leader_trait_general_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
				if = {
					limit = { leader_class = governor }
					add_trait = leader_trait_governor_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
				if = {
					limit = { leader_class = scientist }
					add_trait = leader_trait_scientist_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
				if = {
					limit = { leader_class = ruler }
					add_trait = leader_trait_ruler_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
			}
			every_pool_leader = {
				limit = {
					is_same_species = root
					#species = { 
					#	has_trait = trait_cybernetic
					#	is_same_value = event_target:cybernetic_species
					#}
					NOR = {
						has_trait =	leader_trait_admiral_cybertronian
						has_trait =	leader_trait_general_cybertronian
						has_trait =	leader_trait_governor_cybertronian
						has_trait =	leader_trait_scientist_cybertronian
						has_trait =	leader_trait_ruler_cybertronian
					}
				}
				if = {
					limit = { leader_class = admiral }
					add_trait = leader_trait_admiral_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
				if = {
					limit = { leader_class = general }
					add_trait = leader_trait_general_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
				if = {
					limit = { leader_class = governor }
					add_trait = leader_trait_governor_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
				if = {
					limit = { leader_class = scientist }
					add_trait = leader_trait_scientist_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
				if = {
					limit = { leader_class = ruler }
					add_trait = leader_trait_ruler_cybertronian
					add_ruler_trait = leader_trait_ruler_cybertronian
				}
			}
		}
	}
}


	
