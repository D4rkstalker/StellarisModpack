#used to find set event targets again after choosing to delay payment (country scope)
planetbuilder_find_planet_again = {
	save_event_target_as = planet_buyer
	every_owned_starbase = {
		solar_system = {
			Random_system_planet = {
				limit = {
					has_planet_flag = built_planet
					space_owner = { is_same_value = event_target:planet_buyer }
				}
				save_event_target_as = built_planet
			}
		}
	}
	random_megastructure = {
		limit = {
			has_megastructure_flag = planetbuilders_building_megastructure
			space_owner = { is_same_value = event_target:planet_buyer }
		}
		save_event_target_as = planetbuilders_scaffolding
	}
}

planetbuilder_remove_all_planet_flags = {
	remove_planet_flag = built_planet
	remove_planet_flag = megastructure
	remove_planet_flag = marked_for_uninhabitable
	remove_planet_flag = marked_for_pc_gas_giant
	remove_planet_flag = marked_for_pc_molten
	remove_planet_flag = marked_for_pc_barren
	remove_planet_flag = marked_for_pc_barren_cold
	remove_planet_flag = marked_for_pc_toxic
	remove_planet_flag = marked_for_pc_frozen
	remove_planet_flag = marked_for_pc_broken		
	remove_planet_flag = marked_for_pc_desert
	remove_planet_flag = marked_for_pc_arid
	remove_planet_flag = marked_for_pc_savannah
	remove_planet_flag = marked_for_pc_tropical
	remove_planet_flag = marked_for_pc_continental
	remove_planet_flag = marked_for_pc_ocean
	remove_planet_flag = marked_for_pc_tundra
	remove_planet_flag = marked_for_pc_arctic
	remove_planet_flag = marked_for_pc_alpine
	remove_planet_flag = marked_for_pc_nuked
	remove_planet_flag = marked_for_pc_methane
	remove_planet_flag = marked_for_pc_ammonia
	remove_planet_flag = marked_for_pc_prairie
	remove_planet_flag = marked_for_pc_antarctic
	remove_planet_flag = marked_for_pc_glacial
	remove_planet_flag = marked_for_pc_frozen_desert
	remove_planet_flag = marked_for_pc_steppe
	remove_planet_flag = marked_for_pc_hadesert
	remove_planet_flag = marked_for_pc_boreal
	remove_planet_flag = marked_for_pc_sandsea
	remove_planet_flag = marked_for_pc_subarctic
	remove_planet_flag = marked_for_pc_cascadian
	remove_planet_flag = marked_for_pc_swamp
	remove_planet_flag = marked_for_pc_mangrove
	remove_planet_flag = marked_for_pc_desertislands
	remove_planet_flag = marked_for_pc_mesa
	remove_planet_flag = marked_for_pc_oasis
	remove_planet_flag = marked_for_pc_hajungle
	remove_planet_flag = marked_for_pc_mushroom
	remove_planet_flag = marked_for_pc_biolumen
	remove_planet_flag = marked_for_pc_retinal
	remove_planet_flag = marked_for_pc_pb_alive
	remove_planet_flag = marked_for_pc_pb_edible
	remove_planet_flag = marked_for_pc_pb_pleasure
	remove_planet_flag = marked_for_pc_pb_golden
	remove_planet_flag = marked_for_pc_relic
	remove_planet_flag = marked_for_pc_gaia
	remove_planet_flag = has_fe_modifier
}

planetbuilder_remove_all_country_flags = {
	remove_country_flag = planet_ordered
	remove_country_flag = planet_placed
	remove_country_flag = not_started_building_yet
	remove_country_flag = not_payed_for_size_yet
	remove_country_flag = not_payed_for_planetclass_yet
	remove_country_flag = not_payed_for_design_yet
	remove_country_flag = not_payed_for_mods_yet
	remove_country_flag = not_payed_for_primitivespresapients_yet	
}

planetbuilder_add_random_planet_modifier_vanilla = {
	random_list = {
		2 = {
			add_modifier = { modifier = hazardous_weather days = -1 }
		}
		2 = {
			add_modifier = { modifier = dangerous_wildlife days = -1 }
		}
		2 =  {
			add_modifier = { modifier = wild_storms days = -1 }
		}
		2 =  {
			add_modifier = { modifier = mineral_rich days = -1 }
		}
		1 =  {
			add_modifier = { modifier = ultra_rich days = -1 }
		}
		4 =  {
			add_modifier = { modifier = natural_beauty days = -1 }
		}
		4 =  {
			add_modifier = { modifier = atmospheric_aphrodisiac days = -1 }
		}
		4 =  {
			add_modifier = { modifier = atmospheric_hallucinogen days = -1 }
		}
		4 =  {
			add_modifier = { modifier = lush_planet days = -1 }
		}
		2 = {
			add_modifier = { modifier = dangerous_wildlife days = -1 }
		}
		2 = {
			add_modifier = { modifier = unstable_tectonics days = -1 }
		}
		#1 = {
		#	add_modifier = { modifier = tidal_locked days = -1 }
		#}
		2 = {
			add_modifier = { modifier = asteroid_impacts days = -1 }
		}
		2 = {
			add_modifier = { modifier = mineral_poor days = -1 }
		}
		2 = {
			add_modifier = { modifier = bleak_planet days = -1 }
		}
	}
}
#guilli version
planetbuilder_add_random_planet_modifier_vanilla_guilli = {	
	random_list = {
		2 = {
			add_modifier = { modifier = hazardous_weather days = -1 }
		}
		2 = {
			add_modifier = { modifier = dangerous_wildlife days = -1 }
		}
		2 =  {
			add_modifier = { modifier = wild_storms days = -1 }
		}
		2 =  {
			add_modifier = { modifier = mineral_rich days = -1 }
		}
		2 =  {
			add_modifier = { modifier = ultra_rich days = -1 }
		}
		2 =  {
			add_modifier = { modifier = natural_beauty days = -1 }
		}
		2 =  {
			add_modifier = { modifier = atmospheric_aphrodisiac days = -1 }
		}
		2 =  {
			add_modifier = { modifier = atmospheric_hallucinogen days = -1 }
		}
		2 =  {
			add_modifier = { modifier = lush_planet days = -1 }
		}
		2 = {
			add_modifier = { modifier = unstable_tectonics days = -1 }
		}
		#1 = {
		#	add_modifier = { modifier = tidal_locked days = -1 }
		#}
		2 = {
			add_modifier = { modifier = asteroid_impacts days = -1 }
		}
		2 = {
			add_modifier = { modifier = mineral_poor days = -1 }
		}
		2 = {
			add_modifier = { modifier = bleak_planet days = -1 }
		}
	#guillis
		2 = {
			add_modifier = { modifier = gpm_extinct_species days = -1 }
		}
		40 = {
			gpm_spawn_normal_habitable_world_modifier = yes
		}
	}
}

planetbuilder_add_guillis_fe_modifier = {
	random_list = {
		100 = {
			add_modifier = { days = -1 modifier = gpm_utopian_world }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_utopian_services }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_unified_processing }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_planetary_shielding_FE }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_living_infrastructure }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_galactic_databanks }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_monument_to_the_fallen }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_longevity }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_weather_control }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_subterranean_paradise }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_space_elevators }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_artificial_landscaping }
		}
		100 = {
			add_modifier = { days = -1 modifier = gpm_teleportation_systems }
		}
	}
}

planetbuilder_create_primitive_species = {
	create_species = {
		name = random
		class = random_non_machine
		portrait = random
		homeworld = event_target:built_planet
		traits = random
	}
}

planetbuilder_create_pre_sapient_species = {
	random_list = {
		100 = {
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				homeworld = event_target:built_planet
				traits = {
					trait = trait_presapient_starborn
				}
				sapient = no
			}
		}
		100 = {
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				homeworld = event_target:built_planet
				traits = {
					trait = trait_presapient_earthbound
				}
				sapient = no
			}
		}
		100 = {
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				homeworld = event_target:built_planet
				traits = {
					trait = trait_presapient_natural_intellectuals
				}
				sapient = no
			}
		}
		100 = {
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				homeworld = event_target:built_planet
				traits = {
					trait = trait_presapient_proles
				}
				sapient = no
			}
		}
		100 = {
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				homeworld = event_target:built_planet
				traits = {
					trait = trait_presapient_conservative
				}
				sapient = no
			}
		}
		100 = {
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				homeworld = event_target:built_planet
				traits = {
					trait = trait_presapient_irradiated
				}
				sapient = no
			}
		}
		10 =  {
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				homeworld = event_target:built_planet
				traits = {
					trait = trait_presapient_docile_livestock
				}
				sapient = no
			}
		}
	}
	if = { 
		limit = { 
			event_target:built_planet = { 
				is_planet_class  = pc_pb_edible
			}
		}
		last_created_species = {
			add_trait = trait_delicious
		}
	}
}