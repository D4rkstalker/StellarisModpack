ehof_generate_system = {
	set_global_flag = ehof_spawning_sector_system
	if = {
		limit = { NOT = { has_country_flag = has_ehof_cluster } }
		set_country_flag = has_ehof_cluster
		random_list = {
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_10_taken }
				set_global_flag = ehof_10_taken
				no_scope = { spawn_system = { min_orientation_angle = 10 max_orientation_angle = 10 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_30_taken }
				set_global_flag = ehof_30_taken
				no_scope = { spawn_system = { min_orientation_angle = 30 max_orientation_angle = 30 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_50_taken }
				set_global_flag = ehof_50_taken
				no_scope = { spawn_system = { min_orientation_angle = 50 max_orientation_angle = 50 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_70_taken }
				set_global_flag = ehof_70_taken
				no_scope = { spawn_system = { min_orientation_angle = 70 max_orientation_angle = 70 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_90_taken }
				set_global_flag = ehof_90_taken
				no_scope = { spawn_system = { min_orientation_angle = 90 max_orientation_angle = 90 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_110_taken }
				set_global_flag = ehof_110_taken
				no_scope = { spawn_system = { min_orientation_angle = 110 max_orientation_angle = 110 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_130_taken }
				set_global_flag = ehof_130_taken
				no_scope = { spawn_system = { min_orientation_angle = 130 max_orientation_angle = 130 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_150_taken }
				set_global_flag = ehof_150_taken
				no_scope = { spawn_system = { min_orientation_angle = 150 max_orientation_angle = 150 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_170_taken }
				set_global_flag = ehof_170_taken
				no_scope = { spawn_system = { min_orientation_angle = 170 max_orientation_angle = 170 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_190_taken }
				set_global_flag = ehof_190_taken
				no_scope = { spawn_system = { min_orientation_angle = 190 max_orientation_angle = 190 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_210_taken }
				set_global_flag = ehof_210_taken
				no_scope = { spawn_system = { min_orientation_angle = 210 max_orientation_angle = 210 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_230_taken }
				set_global_flag = ehof_230_taken
				no_scope = { spawn_system = { min_orientation_angle = 230 max_orientation_angle = 230 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_250_taken }
				set_global_flag = ehof_250_taken
				no_scope = { spawn_system = { min_orientation_angle = 250 max_orientation_angle = 250 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_270_taken }
				set_global_flag = ehof_270_taken
				no_scope = { spawn_system = { min_orientation_angle = 270 max_orientation_angle = 270 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_290_taken }
				set_global_flag = ehof_290_taken
				no_scope = { spawn_system = { min_orientation_angle = 290 max_orientation_angle = 290 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_310_taken }
				set_global_flag = ehof_310_taken
				no_scope = { spawn_system = { min_orientation_angle = 310 max_orientation_angle = 310 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_330_taken }
				set_global_flag = ehof_330_taken
				no_scope = { spawn_system = { min_orientation_angle = 330 max_orientation_angle = 330 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
			1 = {
				modifier = { factor = 0 has_global_flag = ehof_350_taken }
				set_global_flag = ehof_350_taken
				no_scope = { spawn_system = { min_orientation_angle = 350 max_orientation_angle = 350 min_distance >= 480 max_distance <= 490 hyperlane = no initializer = "ehof_standard_systems_01" } }
			}
		}
	}
	else = {
		random_system = {
			limit = { has_star_flag = ehof_sector_system_@event_target:current_system_creator }
			random_list = {
				# has PD, has RS
				5 = {
					modifier = { factor = 0 event_target:current_system_creator = { has_country_flag = ehof_explored_all_isolated } }
					modifier = {
						factor = 0
						NAND = {
							has_global_flag = has_real_space_mod
							has_global_flag = planetarydiversity
						}
					}
					if = {
						limit = { has_global_flag = ehof_spawning_reality_code }
						spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_rs_standard_systems_01" }
					}
					else = {
						random_list = {
							7 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_rs_standard_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_rs_blackhole_systems_01" } }
							5 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_rs_binary_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_rs_binary_systems_02" } }
							5 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_rs_trinary_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_rs_trinary_systems_02" } }
						}
					}
				}

				# No PD, has RS
				5 = {
					modifier = { factor = 0 event_target:current_system_creator = { has_country_flag = ehof_explored_all_isolated } }
					modifier = {
						factor = 0
						OR = {
							NOT = { has_global_flag = has_real_space_mod }
							has_global_flag = planetarydiversity
						}
					}
					if = {
						limit = { has_global_flag = ehof_spawning_reality_code }
						spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_rs_standard_systems_01" }
					}
					else = {
						random_list = {
							7 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_rs_standard_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_rs_blackhole_systems_01" } }
							5 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_rs_binary_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_rs_binary_systems_02" } }
							5 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_rs_trinary_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_rs_trinary_systems_02" } }
						}
					}
				}

				# No RS, has PD
				5 = {
					modifier = { factor = 0 event_target:current_system_creator = { has_country_flag = ehof_explored_all_isolated } }
					modifier = {
						factor = 0
						OR = {
							NOT = { has_global_flag = planetarydiversity }
							has_global_flag = has_real_space_mod
						}
					}
					if = {
						limit = { has_global_flag = ehof_spawning_reality_code }
						spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_standard_systems_01" }
					}
					else = {
						random_list = {
							7 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_standard_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_blackhole_systems_01" } }
							5 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_binary_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_binary_systems_02" } }
							5 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_trinary_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_pd_trinary_systems_02" } }
						}
					}
				}

				# No PD or RS
				5 = {
					modifier = { factor = 0 event_target:current_system_creator = { has_country_flag = ehof_explored_all_isolated } }
					modifier = {
						factor = 0
						OR = {
							has_global_flag = planetarydiversity
							has_global_flag = has_real_space_mod
						}
					}
					if = {
						limit = { has_global_flag = ehof_spawning_reality_code }
						spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_standard_systems_01" }
					}
					else = {
						random_list = {
							7 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_standard_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_blackhole_systems_01" } }
							5 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_binary_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_binary_systems_02" } }
							5 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_trinary_systems_01" } }
							4 = { spawn_system = { min_distance >= 10 max_distance <= 35 hyperlane = no initializer = "ehof_trinary_systems_02" } }
						}
					}
				}

				# Common
				2 = {
					modifier = {
						factor = 0
						OR = {
							has_global_flag = ehof_r_rare_system
							has_global_flag = ehof_spawning_reality_code
							event_target:current_system_creator = { is_ai = yes }
						}
					}
					random_list = {
						1 = {
							modifier = { factor = 0 exists = event_target:s_c03_999 }
							spawn_system = { min_distance >= 10 max_distance <= 30 hyperlane = no initializer = "cohesive_systems_1" }
						}
						1 = {
							modifier = { factor = 0 exists = event_target:s_c03_998 }
							spawn_system = { min_distance >= 10 max_distance <= 30 hyperlane = no initializer = "cohesive_systems_4" }
						}
					}
				}

				# Rare
				1 = {
					modifier = {
						factor = 0
						OR = {
							has_global_flag = ehof_r_rare_system
							has_global_flag = ehof_spawning_reality_code
							event_target:current_system_creator = { is_ai = yes }
							event_target:current_system_creator = { check_variable = { which = ehof_phase value < 3 } }
						}
					}
					random_list = {
						1 = {
							modifier = { factor = 0 exists = event_target:s_c02_999 }
							spawn_system = { min_distance >= 10 max_distance <= 30 hyperlane = no initializer = "cohesive_systems_2" }
						}
						1 = {
							modifier = { factor = 0 exists = event_target:s_c02_998 }
							spawn_system = { min_distance >= 10 max_distance <= 30 hyperlane = no initializer = "cohesive_systems_3" }
						}
					}
				}
			}
		}
	}
	remove_global_flag = ehof_spawning_sector_system

	# Create PGate
	if = {
		limit = { NOT = { has_country_flag = ehof_country_has_pgate } }
		set_country_flag = ehof_country_has_pgate
		random_system = {
			limit = { has_star_flag = ehof_system_created_by_@event_target:current_system_creator }
			spawn_megastructure = {
				type = "ehof_pgate_unknown"
				location = event_target:ehof_creator_planet
				orbit_angle = 110
				orbit_distance = 35
				owner = event_target:current_system_creator
			}
		}
	}
}

ehof_generate_hyperlane = {
	save_event_target_as = ehof_hyperlane_1
	if = {		limit = { any_system = { distance_00_01 = yes } } random_system = { limit = { distance_00_01 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_01_02 = yes } } random_system = { limit = { distance_01_02 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_02_03 = yes } } random_system = { limit = { distance_02_03 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_03_04 = yes } } random_system = { limit = { distance_03_04 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_04_05 = yes } } random_system = { limit = { distance_04_05 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_05_06 = yes } } random_system = { limit = { distance_05_06 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_06_07 = yes } } random_system = { limit = { distance_06_07 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_07_08 = yes } } random_system = { limit = { distance_07_08 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_08_09 = yes } } random_system = { limit = { distance_08_09 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_09_10 = yes } } random_system = { limit = { distance_09_10 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_10_11 = yes } } random_system = { limit = { distance_10_11 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_11_12 = yes } } random_system = { limit = { distance_11_12 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_12_13 = yes } } random_system = { limit = { distance_12_13 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_13_14 = yes } } random_system = { limit = { distance_13_14 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_14_15 = yes } } random_system = { limit = { distance_14_15 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_15_16 = yes } } random_system = { limit = { distance_15_16 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_16_17 = yes } } random_system = { limit = { distance_16_17 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_17_18 = yes } } random_system = { limit = { distance_17_18 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_18_19 = yes } } random_system = { limit = { distance_18_19 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_19_20 = yes } } random_system = { limit = { distance_19_20 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_20_21 = yes } } random_system = { limit = { distance_20_21 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_21_22 = yes } } random_system = { limit = { distance_21_22 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_22_23 = yes } } random_system = { limit = { distance_22_23 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_23_24 = yes } } random_system = { limit = { distance_23_24 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_24_25 = yes } } random_system = { limit = { distance_24_25 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_25_26 = yes } } random_system = { limit = { distance_25_26 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_26_27 = yes } } random_system = { limit = { distance_26_27 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_27_28 = yes } } random_system = { limit = { distance_27_28 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_28_29 = yes } } random_system = { limit = { distance_28_29 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_29_30 = yes } } random_system = { limit = { distance_29_30 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_30_31 = yes } } random_system = { limit = { distance_30_31 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_31_32 = yes } } random_system = { limit = { distance_31_32 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_32_33 = yes } } random_system = { limit = { distance_32_33 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_33_34 = yes } } random_system = { limit = { distance_33_34 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_34_35 = yes } } random_system = { limit = { distance_34_35 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_35_36 = yes } } random_system = { limit = { distance_35_36 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_36_37 = yes } } random_system = { limit = { distance_36_37 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_37_38 = yes } } random_system = { limit = { distance_37_38 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_38_39 = yes } } random_system = { limit = { distance_38_39 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_39_40 = yes } } random_system = { limit = { distance_39_40 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_40_41 = yes } } random_system = { limit = { distance_40_41 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_41_42 = yes } } random_system = { limit = { distance_41_42 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_42_43 = yes } } random_system = { limit = { distance_42_43 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_43_44 = yes } } random_system = { limit = { distance_43_44 = yes } save_event_target_as = ehof_hyperlane_2 } }
	else_if = {	limit = { any_system = { distance_44_45 = yes } } random_system = { limit = { distance_44_45 = yes } save_event_target_as = ehof_hyperlane_2 } }
	add_hyperlane = { from = event_target:ehof_hyperlane_1 to = event_target:ehof_hyperlane_2 }
}

make_all_system_planets_uninhabitable = {
	if = {
		limit = { urmazin_system = no }
		every_system_planet = {
			limit = { is_planet_habitable = yes }
			if = {		limit = { has_planet_flag = ehof_warm_planet } change_pc = "rl_planetary_warm_unhabitable" }
			else_if = {	limit = { has_planet_flag = ehof_temp_planet } change_pc = "rl_planetary_temp_unhabitable" }
			else_if = {	limit = { has_planet_flag = ehof_cold_planet } change_pc = "rl_planetary_cold_unhabitable" }
		}
	}
}

make_planet_habitable = {
	if = {		limit = { has_planet_flag = ehof_warm_planet } change_pc = "rl_planetary_warm_habitable" }
	else_if = {	limit = { has_planet_flag = ehof_temp_planet } change_pc = "rl_planetary_temp_habitable" }
	else_if = {	limit = { has_planet_flag = ehof_cold_planet } change_pc = "rl_planetary_cold_habitable" }
}

giga_balance_system = {

	# System Effects
	if = {
		limit = {
			event_target:current_system_creator = { has_country_flag = ehof_country_has_pgate }	# Not first system
			everchanging_system = no
			annihilator_system = no
			compound_cluster = no
		}
		random_list = {
			80 = {}
			30 = { create_nebula_1 = yes }
			30 = { create_nebula_2 = yes }
			30 = { create_nebula_3 = yes }
			30 = { create_nebula_4 = yes }
			10 = { create_rare_nebula_1 = yes }
			10 = { create_rare_nebula_2 = yes }
			10 = { create_turbulent_nebula_1 = yes }
			10 = { create_turbulent_nebula_2 = yes }
			5 = {
				set_star_flag = storm_system
				star = {
					create_ambient_object = {
						type = "space_storm_1"
						location = this
					}
					last_created_ambient_object = {
						set_ambient_object_flag = space_storm_object
						set_location = {
							target = prev
							distance = 0
							angle = random
						}
					}
				}
				add_modifier = { modifier = space_storm }
			}
			5 = {
				set_star_flag = storm_system
				star = {
					create_ambient_object = {
						type = "space_storm_2"
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = prev
							distance = 0
							angle = random
						}
					}
				}
				add_modifier = { modifier = space_storm }
			}
			5 = {
				set_star_flag = storm_system
				star = {
					create_ambient_object = {
						type = "psi_storm_1"
						location = this
					}
					last_created_ambient_object = {
						set_location = {
							target = prev
							distance = 0
							angle = random
						}
					}
				}
				add_modifier = { modifier = space_storm }
			}
		}
	}

	# Add blue asteroids
	every_system_planet = {
		limit = { is_planet_class = "pc_rare_crystal_asteroid" }
		random = { chance = 33 change_pc = "pc_crystal_asteroid" }
	}

	# Add habitable planets
	if = {
		limit = {
			NOR = {
				urmazin_system = yes
				annihilator_system = yes
				compound_cluster = yes
				unique_system = yes
				everchanging_system = yes
				has_star_flag = ehof_blackhole_system
			}
		}

		# How many habitable planets do we want?
		random_list = {
			30 = {
				modifier = { factor = 2 event_target:current_system_creator = { is_ai = yes } }
				set_variable = { which = giga_desired_habitable value = 0 }
			}
			25 = {
				modifier = { factor = 1.2 event_target:current_system_creator = { is_ai = yes } }
				set_variable = { which = giga_desired_habitable value = 1 }
			}
			20 = {
				modifier = { factor = 0.5 event_target:current_system_creator = { is_ai = yes } }
				set_variable = { which = giga_desired_habitable value = 2 }
			}
			15 = {
				modifier = { factor = 0 event_target:current_system_creator = { is_ai = yes } }
				modifier = { factor = 0 rare_system = no }
				set_variable = { which = giga_desired_habitable value = 3 }
			}
			10 = {
				modifier = { factor = 0 event_target:current_system_creator = { is_ai = yes } }
				modifier = { factor = 0 rare_system = no }
				set_variable = { which = giga_desired_habitable value = 4 }
			}
			5  = {
				modifier = { factor = 0 event_target:current_system_creator = { is_ai = yes } }
				modifier = { factor = 0 rare_system = no }
				set_variable = { which = giga_desired_habitable value = 5 }
			}
		}

		while = {
			limit = { check_variable = { which = giga_desired_habitable value > 0 } }
			subtract_variable = { which = giga_desired_habitable value = 1 }
			random_system_planet = {
				limit = {
					is_star = no
					is_asteroid = no
					giga_habitable_structure = no
					is_rare_planet = no
					has_anomaly = no
					NOT = { exists = archaeological_site }
				}
				random_list = {
					70 = {	# Non-Rare
						modifier = { add = -20	solar_system = { rare_system = yes } }
						if = {		limit = { has_planet_flag = ehof_warm_planet } change_pc = "rl_planetary_warm_habitable" }
						else_if = {	limit = { has_planet_flag = ehof_temp_planet } change_pc = "rl_planetary_temp_habitable" }
						else_if = {	limit = { has_planet_flag = ehof_cold_planet } change_pc = "rl_planetary_cold_habitable" }
					}
					30 = {	# Rare
						modifier = { add = 20	solar_system = { rare_system = yes } }
						modifier = { factor = 0	solar_system = { has_star_flag = has_rare_planet } }
						solar_system = { set_star_flag = has_rare_planet }
						random_list = {
							1 = { change_pc = "rl_planetary_ehof_rare_planets" }
							1 = {
								modifier = {
									factor = 0
									OR = {
										has_global_flag = ehof_red_toxic_exists
										event_target:current_system_creator = { is_ai = yes }
									}
								}
								set_global_flag = ehof_red_toxic_exists
								change_pc = pc_red_toxic
								add_anomaly = { category = intoxicated_world_category }
							}
						}
					}
				}

				# Change size
				if = {
					limit = { solar_system = { rare_system = no } }
					random_list = {
						1 = { set_planet_size = 15 }
						1 = { set_planet_size = 16 }
						1 = { set_planet_size = 17 }
						1 = { set_planet_size = 18 }
						1 = { set_planet_size = 19 }
						1 = { set_planet_size = 20 }
						1 = { set_planet_size = 21 }
						1 = { set_planet_size = 22 }
						1 = { set_planet_size = 23 }
						1 = { set_planet_size = 24 }
						1 = { set_planet_size = 25 }
						0 = { set_planet_size = 30 modifier = { add = 100 is_planet_class = pc_superhabitable } }
					}
				}
				else = {
					random_list = {
						1 = { set_planet_size = 20 }
						1 = { set_planet_size = 21 }
						1 = { set_planet_size = 22 }
						1 = { set_planet_size = 23 }
						1 = { set_planet_size = 24 }
						1 = { set_planet_size = 25 }
						1 = { set_planet_size = 26 }
						1 = { set_planet_size = 27 }
						1 = { set_planet_size = 28 }
						1 = { set_planet_size = 29 }
						1 = { set_planet_size = 30 }
						0 = { set_planet_size = 35 modifier = { add = 100 is_planet_class = pc_superhabitable } }
					}
				}
			}
		}
	}

	# Generate Pylons
	if = {
		limit = { urmazin_capital = yes }
		spawn_megastructure = {
			type = "ehof_gateway"
			location = solar_system
			orbit_angle = 225
			orbit_distance = 300
			owner = event_target:urmazin_country
		}
	}
	else_if = {
		limit = { everchanging_system = yes }
		spawn_megastructure = {
			type = "ehof_gateway"
			location = solar_system
			orbit_angle = 225
			orbit_distance = 300
		}
	}
	else_if = {
		limit = {
			compound_cluster = no
			urmazin_system = no
			annihilator_system = no
		}
		if = {
			limit = {
				exists = event_target:current_system_creator
				event_target:current_system_creator = { has_technology = tech_ehof_use_gateway }
			}
			spawn_megastructure = {
				type = "ehof_gateway_disabled"
				location = solar_system
				orbit_angle = 225
				orbit_distance = 300
			}
		}
		else = {
			spawn_megastructure = {
				type = "ehof_gateway_unknown"
				location = solar_system
				orbit_angle = 225
				orbit_distance = 300
			}
		}
	}
}

##########################
### Asteroid Belts #######
##########################
ehof_asteroid_belt = {
	random_list = {
		1 = { add_asteroid_belt = { type = rocky_asteroid_belt		radius = 100 } }
		1 = { add_asteroid_belt = { type = rocky_asteroid_belt		radius = 120 } }
		1 = { add_asteroid_belt = { type = rocky_asteroid_belt		radius = 140 } }
		1 = { add_asteroid_belt = { type = rocky_asteroid_belt		radius = 160 } }
		1 = { add_asteroid_belt = { type = rocky_asteroid_belt		radius = 180 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 110 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 130 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 150 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 170 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 190 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 210 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 230 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 250 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 270 } }
		1 = { add_asteroid_belt = { type = crystal_asteroid_belt	radius = 290 } }
		1 = { add_asteroid_belt = { type = icy_asteroid_belt		radius = 200 } }
		1 = { add_asteroid_belt = { type = icy_asteroid_belt		radius = 220 } }
		1 = { add_asteroid_belt = { type = icy_asteroid_belt		radius = 240 } }
		1 = { add_asteroid_belt = { type = icy_asteroid_belt		radius = 260 } }
		1 = { add_asteroid_belt = { type = icy_asteroid_belt		radius = 280 } }
	}
}

ehof_asteroids_field = {
	random_list = {
		1 = { set_variable = { which = ehof_number_of_asteroids value = 1 } }
		1 = { set_variable = { which = ehof_number_of_asteroids value = 2 } }
		1 = { set_variable = { which = ehof_number_of_asteroids value = 3 } }
		1 = { set_variable = { which = ehof_number_of_asteroids value = 4 } }
		1 = { set_variable = { which = ehof_number_of_asteroids value = 5 } }
		1 = { set_variable = { which = ehof_number_of_asteroids value = 6 } }
		1 = { set_variable = { which = ehof_number_of_asteroids value = 7 } }
		1 = { set_variable = { which = ehof_number_of_asteroids value = 8 } }
	}
	random_list = {
		1 = {
			modifier = { factor = 0 has_star_flag = ehof_has_asteroid_belt }
			set_star_flag = ehof_has_asteroid_belt
			add_asteroid_belt = { type = rocky_asteroid_belt radius = 150 }
			while = {
				limit = { check_variable = { which = ehof_number_of_asteroids value > 0 } }
				subtract_variable = { which = ehof_number_of_asteroids value = 1 }
				random_list = {
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_0   } set_star_flag = has_asteroid_at_0   spawn_planet = { class = "pc_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 0 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_45  } set_star_flag = has_asteroid_at_45  spawn_planet = { class = "pc_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 45 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_90  } set_star_flag = has_asteroid_at_90  spawn_planet = { class = "pc_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 90 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_135 } set_star_flag = has_asteroid_at_135 spawn_planet = { class = "pc_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 135 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_180 } set_star_flag = has_asteroid_at_180 spawn_planet = { class = "pc_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 180 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_225 } set_star_flag = has_asteroid_at_225 spawn_planet = { class = "pc_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 225 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_270 } set_star_flag = has_asteroid_at_270 spawn_planet = { class = "pc_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 270 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_315 } set_star_flag = has_asteroid_at_315 spawn_planet = { class = "pc_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 315 } }
				}
			}
		}
		1 = {
			modifier = { factor = 0 has_star_flag = ehof_has_asteroid_belt }
			set_star_flag = ehof_has_asteroid_belt
			add_asteroid_belt = { type = crystal_asteroid_belt radius = 150 }
			while = {
				limit = { check_variable = { which = ehof_number_of_asteroids value > 0 } }
				subtract_variable = { which = ehof_number_of_asteroids value = 1 }
				random_list = {
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_0   } set_star_flag = has_asteroid_at_0   spawn_planet = { class = "pc_rare_crystal_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 0 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_45  } set_star_flag = has_asteroid_at_45  spawn_planet = { class = "pc_rare_crystal_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 45 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_90  } set_star_flag = has_asteroid_at_90  spawn_planet = { class = "pc_rare_crystal_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 90 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_135 } set_star_flag = has_asteroid_at_135 spawn_planet = { class = "pc_rare_crystal_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 135 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_180 } set_star_flag = has_asteroid_at_180 spawn_planet = { class = "pc_rare_crystal_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 180 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_225 } set_star_flag = has_asteroid_at_225 spawn_planet = { class = "pc_rare_crystal_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 225 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_270 } set_star_flag = has_asteroid_at_270 spawn_planet = { class = "pc_rare_crystal_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 270 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_315 } set_star_flag = has_asteroid_at_315 spawn_planet = { class = "pc_rare_crystal_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 315 } }
				}
			}
		}
		1 = {
			modifier = { factor = 0 has_star_flag = ehof_has_asteroid_belt }
			set_star_flag = ehof_has_asteroid_belt
			add_asteroid_belt = { type = icy_asteroid_belt radius = 150 }
			while = {
				limit = { check_variable = { which = ehof_number_of_asteroids value > 0 } }
				subtract_variable = { which = ehof_number_of_asteroids value = 1 }
				random_list = {
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_0   } set_star_flag = has_asteroid_at_0   spawn_planet = { class = "pc_ice_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 0 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_45  } set_star_flag = has_asteroid_at_45  spawn_planet = { class = "pc_ice_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 45 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_90  } set_star_flag = has_asteroid_at_90  spawn_planet = { class = "pc_ice_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 90 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_135 } set_star_flag = has_asteroid_at_135 spawn_planet = { class = "pc_ice_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 135 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_180 } set_star_flag = has_asteroid_at_180 spawn_planet = { class = "pc_ice_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 180 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_225 } set_star_flag = has_asteroid_at_225 spawn_planet = { class = "pc_ice_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 225 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_270 } set_star_flag = has_asteroid_at_270 spawn_planet = { class = "pc_ice_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 270 } }
					1 = { modifier = { factor = 0 has_star_flag = has_asteroid_at_315 } set_star_flag = has_asteroid_at_315 spawn_planet = { class = "pc_ice_asteroid" location = star has_ring = no size = 5 orbit_distance_offset = 150 orbit_angle_offset = 315 } }
				}
			}
		}
	}
	set_star_flag = ehof_has_asteroid_belt
	remove_star_flag = has_asteroid_at_0
	remove_star_flag = has_asteroid_at_45
	remove_star_flag = has_asteroid_at_90
	remove_star_flag = has_asteroid_at_135
	remove_star_flag = has_asteroid_at_180
	remove_star_flag = has_asteroid_at_225
	remove_star_flag = has_asteroid_at_270
	remove_star_flag = has_asteroid_at_315
}

ehof_generate_asteroid_belts = {
	random_list = { 2 = {} 1 = { ehof_asteroid_belt = yes } }
	random_list = { 4 = {} 1 = { modifier = { factor = 0 has_star_flag = ehof_has_asteroid_belt } ehof_asteroids_field = yes } }
}

ehof_generate_asteroids = {
	if = {		limit = { blackhole_system = yes }													while = { count = 5 ehof_generate_asteroid_belts = yes } }
	else_if = {	limit = { giga_is_standard_system = yes }											while = { count = 3 ehof_generate_asteroid_belts = yes } }
	else_if = {	limit = { is_binary = yes		NOT = { has_star_flag = ehof_binary_02_system } }	while = { count = 2 ehof_generate_asteroid_belts = yes } }
	else_if = {	limit = { is_trinary = yes	NOT = { has_star_flag = ehof_trinary_02_system } }		while = { count = 1 ehof_generate_asteroid_belts = yes } }
}

##########################
### Debris ###############
##########################
giga_singular_debris = {
	random_list = {
		1 = { create_ambient_object = { type = "large_debris_object"		location = this } }
		1 = { create_ambient_object = { type = "medium_debris_01_object"	location = this } }
		1 = { create_ambient_object = { type = "medium_debris_02_object"	location = this } }
		1 = { create_ambient_object = { type = "small_debris_object"		location = this } }
		1 = { create_ambient_object = { type = "large_debris_object"		entity_offset_height = { min = -0 max = -20 } location = this } }
		1 = { create_ambient_object = { type = "medium_debris_01_object"	entity_offset_height = { min = -0 max = -20 } location = this } }
		1 = { create_ambient_object = { type = "medium_debris_02_object"	entity_offset_height = { min = -0 max = -20 } location = this } }
		1 = { create_ambient_object = { type = "small_debris_object"		entity_offset_height = { min = -0 max = -20 } location = this } }
	}
	random_list = {
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 20 angle = random } } }
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 30 angle = random } } }
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 40 angle = random } } }
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 50 angle = random } } }
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 60 angle = random } } }
	}
}

giga_singular_system_debris = {
	random_list = {
		1 = { create_ambient_object = { type = "large_debris_object"		location = solar_system } }
		1 = { create_ambient_object = { type = "medium_debris_01_object"	location = solar_system } }
		1 = { create_ambient_object = { type = "medium_debris_02_object"	location = solar_system } }
		1 = { create_ambient_object = { type = "small_debris_object"		location = solar_system } }
		1 = { create_ambient_object = { type = "large_debris_object"		entity_offset_height = { min = -0 max = -20 } location = solar_system } }
		1 = { create_ambient_object = { type = "medium_debris_01_object"	entity_offset_height = { min = -0 max = -20 } location = solar_system } }
		1 = { create_ambient_object = { type = "medium_debris_02_object"	entity_offset_height = { min = -0 max = -20 } location = solar_system } }
		1 = { create_ambient_object = { type = "small_debris_object"		entity_offset_height = { min = -0 max = -20 } location = solar_system } }
	}
}

giga_singular_battlefield = {
	random_list = {
		1 = { create_ambient_object = { type = "abandoned_starbase_01_object"	location = this } }
		1 = { create_ambient_object = { type = "ehof_damaged_star_rail"			location = this } }
		1 = { create_ambient_object = { type = "ehof_d_dreadnought"				location = this } }
		1 = { create_ambient_object = { type = "ancient_battlefield_02_object"	location = this } }
		1 = { create_ambient_object = { type = "abandoned_starbase_01_object"	entity_offset_height = { min = -0 max = -20 } location = this } }
		1 = { create_ambient_object = { type = "ehof_damaged_star_rail"			entity_offset_height = { min = -0 max = -20 } location = this } }
		1 = { create_ambient_object = { type = "ehof_d_dreadnought"				entity_offset_height = { min = -0 max = -20 } location = this } }
		1 = { create_ambient_object = { type = "ancient_battlefield_02_object"	entity_offset_height = { min = -0 max = -20 } location = this } }
	}
	random_list = {
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 4 angle = random } } }
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 8 angle = random } } }
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 12 angle = random } } }
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 16 angle = random } } }
		1 = { last_created_ambient_object = { set_location = { target = prev distance = 20 angle = random } } }
	}
}

giga_singular_system_battlefield = {
	random_list = {
		1 = { create_ambient_object = { type = "abandoned_starbase_01_object"	location = solar_system } }
		1 = { create_ambient_object = { type = "ehof_damaged_star_rail"			location = solar_system } }
		1 = { create_ambient_object = { type = "ehof_d_dreadnought"				location = solar_system } }
		1 = { create_ambient_object = { type = "ancient_battlefield_02_object"	location = solar_system } }
		1 = { create_ambient_object = { type = "abandoned_starbase_01_object"	entity_offset_height = { min = -0 max = -20 } location = solar_system } }
		1 = { create_ambient_object = { type = "ehof_damaged_star_rail"			entity_offset_height = { min = -0 max = -20 } location = solar_system } }
		1 = { create_ambient_object = { type = "ehof_d_dreadnought"				entity_offset_height = { min = -0 max = -20 } location = solar_system } }
		1 = { create_ambient_object = { type = "ancient_battlefield_02_object"	entity_offset_height = { min = -0 max = -20 } location = solar_system } }
	}
}

giga_field_debris = {
	random_list = {
		1 = { while = { count = 4 giga_singular_debris = yes } }
		1 = { while = { count = 8 giga_singular_debris = yes } }
		1 = { while = { count = 12 giga_singular_debris = yes } }
		1 = { while = { count = 16 giga_singular_debris = yes } }
		1 = { while = { count = 20 giga_singular_debris = yes } }
	}
}

giga_field_system_debris = {
	random_list = {
		1 = { while = { count = 8 giga_singular_system_debris = yes } }
		1 = { while = { count = 16 giga_singular_system_debris = yes } }
		1 = { while = { count = 24 giga_singular_system_debris = yes } }
		1 = { while = { count = 32 giga_singular_system_debris = yes } }
		1 = { while = { count = 40 giga_singular_system_debris = yes } }
	}
}

giga_field_battlefield = {
	random_list = {
		1 = { while = { count = 2 giga_singular_battlefield = yes } }
		1 = { while = { count = 4 giga_singular_battlefield = yes } }
		1 = { while = { count = 6 giga_singular_battlefield = yes } }
		1 = { while = { count = 8 giga_singular_battlefield = yes } }
		1 = { while = { count = 10 giga_singular_battlefield = yes } }
	}
}

giga_field_system_battlefield = {
	random_list = {
		1 = { while = { count = 6 giga_singular_system_battlefield = yes } }
		1 = { while = { count = 12 giga_singular_system_battlefield = yes } }
		1 = { while = { count = 18 giga_singular_system_battlefield = yes } }
		1 = { while = { count = 24 giga_singular_system_battlefield = yes } }
		1 = { while = { count = 30 giga_singular_system_battlefield = yes } }
	}
}