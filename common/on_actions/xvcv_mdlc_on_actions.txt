# this = country
on_monthly_pulse_country = {
	events = {
		xvcv_mdlc_config_effect.5 #auto pop migration
		xvcv_mdlc.28 #'xvcv_mdlc_rogue_network' planet modifier add event
		xvcv_mdlc.35 #bio robot auto growth effect event
		xvcv_mdlc.36 #the variable for bio robot auto growth reset effect event
		xvcv_mdlc.37 #'xvcv_mdlc_machine_food_deficit' modifier add event
	}
}
# this = country
on_yearly_pulse_country = {
	events = {
		xvcv_mdlc_config_effect.2 #from robot to machine species conversion
		xvcv_mdlc_config_effect.3 #from machine to robot species conversion
		xvcv_mdlc_config_effect.4 #species assimilation
		xvcv_mdlc.27 #'xvcv_mdlc_servitor_morale' empire modifiers calculations event
	}
}
# Triggers when the game starts
on_game_start_country = {
	events = {
		xvcv_mdlc.1 #game start condition adjustments
		xvcv_mdlc_config_effect.1 #set country flags for mod configurations
		xvcv_mdlc.27 #'xvcv_mdlc_servitor_morale' empire modifiers calculations
	}
}
# Called during empire initialization when starting a new game if has_secondary_species game rule is true.
# Called before empire_init_create_capital_pops.
# scope: planet
# from: founder species
# fromfrom: secondary species (if exists)
empire_init_capital_planet = {
	events = {
		xvcv_mdlc.2 #game start dominant species modifications
	}
}
# A pop has finished purging
# This = Planet scope
# From = Country
# FromFrom = Pop
on_pop_purged = {
	events = {
		xvcv_mdlc.3 #'xvcv_mdlc_civic_assimilating_swarm' civic effect event
	}
}
# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		xvcv_mdlc_customgui.2
		xvcv_mdlc_customgui.4
		xvcv_mdlc.4
	}
}
# Executed as a leader has died
# This = Country
# From = Leader
on_leader_death = {
	events = {
		xvcv_mdlc_customgui.5
		xvcv_mdlc.20 #'xvcv_mdlc_leader_trait_memory_backup' trait effect event
	}
}
# Triggers when the game starts
on_game_start = {
	events = {
		xvcv_mdlc.8 #spawn invisible countries required for some ascension perks and civics in this mod
	}
}
# This = owner of fleet
# From = fleet
# FromFrom = planet (if any)
on_fleet_auto_move_arrival = {
	events = {
		xvcv_mdlc.11 #when a trading ship arrives at the opponent empire's capital world
		xvcv_mdlc.12 #when a trading ship arrives at the player empire's capital world
	}
}
# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		xvcv_mdlc.13 #the effect event for a trading ship destroyed while transit
	}
}
# Executes after a policy has been changed
# use last_changed_policy to identify which policy it was
# This = Country
on_policy_changed = {
	events = {
		xvcv_mdlc.15 #'xvcv_mdlc_civic_trading_machine_trade' policy change effect event
	}
}
#Fired whenever a new owner is set for a planet,
#be it after a war or through a trade
#From = Country scope (new owner)
#This = Planet scope
on_planet_transfer = {
	events = {
		xvcv_mdlc.16 #when the trade ship owner's capital is lost or sold somehow
	}
}
#From = Country scope
#This = Planet scope
on_planet_ownerless = {
	events = {
		xvcv_mdlc.16 #when the trade ship owner's capital is lost or sold somehow
	}
}
# Triggers when a Special Project to apply a species modification template has completed.
# Note that this will trigger once for each combination of planet & original species.
# This = Country
# From = Species ( Post Modification )
on_modification_complete = {
	events = {
		xvcv_mdlc.17 #'xvcv_mdlc_leader_trait_shared_memory' and 'xvcv_mdlc_leader_trait_memory_backup' add effect event
	}
}
# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
on_leader_spawned = {
	events = {
		xvcv_mdlc.18
	}
}
# A leader leveled up.
# Scope = Country
# From = Leader
on_leader_level_up = {
	events = {
		xvcv_mdlc.19
	}
}
# Planet has been terraformed
# This = Planet
# From = Terraforming country
on_terraforming_complete = {
	events = {
		xvcv_mdlc.38 #'xvcv_mdlc_pc_mechanical' planet class terraforming complete effect event
	}
}
#A district construction has been completed.
# This = Planet
on_district_complete = {
	events = {
		xvcv_mdlc.39 #cooling calculation for 'xvcv_mdlc_ap_planet_scale_machines' ascension perk's planet classes
		xvcv_mdlc.40 #'xvcv_mdlc_pc_machine_ser_district_admin_cap' or 'xvcv_mdlc_pc_machine_ser_district_crime' districts effect event
	}
}
# A district construction has demolished.
# This = Planet
on_district_demolished = {
	events = {
		xvcv_mdlc.39 #cooling calculation for 'xvcv_mdlc_ap_planet_scale_machines' ascension perk's planet classes
		xvcv_mdlc.40 #'xvcv_mdlc_pc_machine_ser_district_admin_cap' or 'xvcv_mdlc_pc_machine_ser_district_crime' districts effect event
	}
}
# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		xvcv_mdlc.51 #'xvcv_mdlc_ap_self_assembling_colony_ship' ascension perk effect event
	}
}
#This = destroyed country
#From = optional, destroyer (country)
on_country_destroyed = {
	events = {
		xvcv_mdlc.48 #abort special projects when the trade ship owner's opponent and the uprising protocol's target is destroyed
		xvcv_mdlc.49 #destroy the trading ship and remove country flags when the trade ship owner's opponent is destroyed
	}
}
# Triggers when trying to open the diplomacy view for countries with custom diplomacy.
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		xvcv_mdlc_abyss.10
		xvcv_mdlc_abyss.11
	}
}
#spynetwork scope
on_spynetwork_formed = {
	events = {
		xvcv_mdlc.41 #'xvcv_mdlc_asset_malware' asset adding effect event
	}
}
# My test shows this trigger is executed when the 'reform government' is done - XVCV
# Executed just as country is changing its government, after the new one is applied
# THIS = country
on_post_government_changed = {
	events = {
		xvcv_mdlc.42 #add or remove 'xvcv_mdlc_asset_malware' asset depending on existence of the required civic
	}
}
# THIS = Espionage operation
# FROM = Operation target
on_operation_chapter_finished = {
	events = {
		xvcv_mdlc.43 #add 'xvcv_mdlc_asset_malware' asset after it's destroyed
	}
}