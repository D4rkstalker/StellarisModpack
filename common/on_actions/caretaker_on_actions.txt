# Stellaris Modjam 2020 - Caretaker
# AlphaAsh, NHunter, Rough, GwenBlanketKnight

on_game_start_country = {
    events = {
        caretaker_origin_event.1     # remove slums blocker, add caretaker core deposit and give 1 pop
    }
}

on_monthly_pulse_country = {
	events = {
		# evaluate variable storing The Caretaker's mood and update deposit on the capital world to reflect current mood
		caretaker_origin_event.500
		# random gift of pop
		caretaker_origin_event.20300
	}
}

on_mid_game_pulse_country = {
	events = {
		# trigger the abandoned vault event chain
		caretaker_origin_event.2500
		# trigger secession event chain
		caretaker_origin_event.3000
	}
}

on_ship_built = {
	events = {
		# when first colony ship is built, explain that Caretaker hubs need to be established on colonies
		caretaker_origin_event.1100
	}
}

on_colonized = {
	events = {
		# check if colony has a Caretaker Hub - reminder at 1 year, angrier at 2 years
		caretaker_origin_event.1110
	}
}

# b0rked - Age starts as soon as colonisation begins
#on_colony_1_year_old = {
#	events = {
#		# check if colony has a Caretaker Hub - reminder
#		caretaker_origin_event.1110
#	}
#}

# b0rked - Age starts as soon as colonisation begins
#on_colony_2_years_old = {
#	events = {
#		# check if colony has a Caretaker Hub
#		caretaker_origin_event.1120
#	}
#}

# b0rked - Age starts as soon as colonisation begins
#on_colony_5_years_old = {
#	events = {
#		# check if colony has a Caretaker Hub
#		caretaker_origin_event.1120
#	}
#}

on_building_complete = {
	events = {
		# built building_monitor_station_1 -  happier
		caretaker_origin_event.1200
		# built building_clinic or building_clone_vats - angrier
		caretaker_origin_event.1220
	}
}

on_building_upgraded = {
	events = {
		# upgraded to building_monitor_station_2 or building_monitor_station_3 - happier
		caretaker_origin_event.1200
		# upgraded to building_hospital - angrier
		caretaker_origin_event.1220
	}
}

on_building_demolished = {
	events = {
		# demolished building_monitor_station_1, building_monitor_station_2 or building_monitor_station_3 - angrier
		caretaker_origin_event.1210
		# demolished building_clinic, building_hospital or building_clone_vats - happier
		caretaker_origin_event.1230
	}
}

on_building_replaced = {
	events = {
		# replaced building_monitor_station_1, building_monitor_station_2 or building_monitor_station_3 - angrier
		caretaker_origin_event.1210
		# replaced building_clinic, building_hospital or building_clone_vats - happier
		caretaker_origin_event.1230
	}
}

on_tech_increased = {
	events = {
		# tech_genome_mapping, tech_cloning, tech_frontier_health, tech_frontier_hospital - angrier
		caretaker_origin_event.1300
		# tech_gene_tailoring, tech_glandular_acclimation, tech_gene_expressions or tech_genetic_resequencing - angrier
		caretaker_origin_event.1310
		# tech_droid_workers, tech_synthetic_workers or tech_synthetic_leaders - angrier
		caretaker_origin_event.1320
	}
}

on_planet_ownerless = {
	events = {
		# remove caretaker deposits and planetary flags associated with them (colony abandoned scenario)?
		caretaker_origin_event.50
	}
}

on_colony_destroyed = {
    events = {
        # remove caretaker deposits and planetary flags associated with them (colony abandoned scenario)?
        caretaker_origin_event.50
    }
}

on_planet_transfer = {
	events = {
		# remove caretaker hub from planet if it falls under control of someone without caretaker origin
		caretaker_origin_event.10
		# schedule caretaker hub construction events if empire with caretaker origin takes over a planet
		caretaker_origin_event.20
	}
}

on_planet_defenders_win = {
	events = {
		# Caretaker armies failed to take over the core planet
		caretaker_origin_event.4010
		# Caretaker armies failed to take over a hub planet
		caretaker_origin_event.4110
	}
}

on_planet_defenders_lose = {
	events = {
		# Caretaker armies take over the core planet
		caretaker_origin_event.4020
		# Caretaker armies take over a hub planet
		caretaker_origin_event.4120
	}
}

on_planet_attackers_win = {
	events = {
		# The core planet is liberated by previous owner after Caretaker takes over it
		caretaker_origin_event.4030
		# The hub planet is liberated by previous owner after Caretaker takes over it
		caretaker_origin_event.4130
		# someone other the once-host liberates a planet Caretaker has taken over
		caretaker_origin_event.4040
	}
}

# Executed as new ruler has been set
# This = Country
on_ruler_set = {
    events = {
		caretaker_origin_event.21000
    }
}

# Executed when a ruler has been removed
# From = Previous Ruler
# This = Country
on_ruler_removed = {
    events = {
		caretaker_origin_event.22000
    }
}

# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
on_leader_spawned = {
	events = {
		caretaker_origin_event.26000 # New Leaders PCI Trait
	}
}

# A pop has finished growing
# This = Planet scope
# From = Country
# FromFrom = Pop
on_pop_grown = {
	events = {
		caretaker_origin_event.27000
	}
}