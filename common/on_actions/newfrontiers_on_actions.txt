on_game_start = {
	events = {
		#newfrontiers.2
		newfrontiers.3
		newfrontiers.5
		newfrontiers.6
		newfrontiers.7
		newfrontiers.9
		newfrontiers.11
		newfrontiers.12
		newfrontiers.16
		newfrontiers.17
		newfrontiers.61
	}
}

# No scope, like on_game_start
# Does not run when loading MP saves due to OOS concerns
on_single_player_save_game_load = {
	events = {
		newfrontiers.61
	}
}

# After closing RS menu
on_applying_rs_settings = {
	events = {
		newfrontiers.1
		newfrontiers.4
	}
}

# New Frontiers Set Subclass (Old)
on_set_subclass = {
	events = {
		#newfrontiers.4
	}
}

# No scope, like on_game_start
on_monthly_pulse = {
	events = {
		newfrontiers_action.13
	}
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		#newfrontiers_ancrel.1
		newfrontiers_periodic_event.100 	 # Periodic Events
		newfrontiers_periodic_event.200		 # Resource depletion
	}
}

# No scope, like on_game_start
on_five_year_pulse = {
	events = {
		newfrontiers_disasters.1	 # Disaster Events
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey = {
	events = {
		newfrontiers_decision_event.3
		newfrontiers_action.1
		newfrontiers_action.3
		newfrontiers_action.4
		newfrontiers_action.5
		newfrontiers_action.6
	}
}

# A country has gained a surveyed status on a planet. Happens after "on_survey" if a science ship surveyed a planet.
# Root = Planet
# From = Country
# FromFrom = Fleet of the science ship that surveyed it, if any
on_planet_surveyed = {
	events = {
		newfrontiers_action.7
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		newfrontiers_action.14			#First Colonization modifiers
	}
}

on_colony_1_year_old = {
	events = {
		newfrontiers_colony_event.1     # Ancient Machine
		newfrontiers_colony_event.100	 # Gatekeeper Colony Event
	}

	random_events = {
		300 = 0
	}
}

# A colony has been destroyed. Called just before owner and controller is cleared
# Scope = Planet
on_colony_destroyed = {
	events = {
		newfrontiers_action.8
	}
}

#Fired whenever a new owner is set for a planet,
#be it after a war or through a trade
#From = Country scope (new owner)
#This = Planet scope
on_planet_transfer = {
	events = {
		newfrontiers_action.9
	}
}

# A planets controller becomes a country not the same as the owner.
# Root = Planet
# From = Planet Owner
# FromFrom = Planet Controller (the one occupying)
on_planet_occupied = {
	events = {
		newfrontiers_action.10
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		newfrontiers_decision_event.35
	}
}

# From = system
# FromFrom = country (new owner)
# This = country (previous owner)
on_system_lost = {
	events = {
		newfrontiers_ancrel.7
	}
}

# From = system
# FromFrom = country (previous owner)
# This = country (new owner)
on_system_gained = {
	events = {
		newfrontiers_ancrel.8
	}
}

# Planet has been terraformed
# This = Planet
# From = Terraformer
on_terraforming_complete = {
    events = {
		newfrontiers_action.2
    }
}

#A building construction has been completed.
# This = Planet
on_building_complete = {
	events = {
		newfrontiers_disasters.42
		newfrontiers_disasters.44
	}
}

# A building construction has finished, replacing another building.
# This = Planet
on_building_replaced = {
	events = {
		newfrontiers_disasters.42
		newfrontiers_disasters.44
		newfrontiers_disasters.43
		newfrontiers_disasters.45
	}
}

# A building construction has demolished.
# This = Planet
on_building_demolished = {
	events = {
		newfrontiers_disasters.43
		newfrontiers_disasters.45
	}
}

# Called during empire initialization when starting a new game if has_secondary_species game rule is true.
# Called before empire_init_create_capital_pops.
# scope: planet
# from: founder species
# fromfrom: secondary species (if exists)
empire_init_capital_planet = {
	events = {
		newfrontiers.14 # starting buildings, districts & pops
		# at this point the species might have changed (because we added traits), so FROMFROM might not be the secondary species anymore
	}
}