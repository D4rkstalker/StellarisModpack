#############################
### Maginot World 		  ###
### Failsafe	  		  ###
#############################

# A colony has been destroyed. Called just before owner and controller is cleared
# Scope = Planet
on_colony_destroyed = {
	events = {
		maginot_destruction.1003 # ensure planet is detonated
	}
}

# Planet has reached 0 pops from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_zero_pops = {
	events = {
		maginot_destruction.1001 # ensure planet is detonated
	}
}

# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		maginot_destruction.999 # check for planet being changed by bombardment and destroy it properly (along with orbiting fleets)
		# delayed 1 day to let other bombardments work first, and detect them
	}
}

# Planet has reached 0 pops from collateral damage
# This = Planet
# From = Army owner
on_planet_zero_pops_ground_combat = {
	events = {
		maginot_destruction.1001 # ensure planet is detonated
	}
}

# Scope:
# this/root = planet that have been fired upon
# from = fleet that fired
#on_destroy_planet_with_PLANET_DESTRUCTION_COMPONENT = {
#	events = {
#		planet_destruction.1
#	}
#}

on_destroy_planet_with_PLANET_KILLER_CRACKER = {
	events = {
		maginot_destruction.1002 # detonate planet and kill stuff in orbit
	}
}

on_destroy_planet_with_PLANET_KILLER_SHIELDER = {
	events = {
		maginot_destruction.1002 # detonate planet and kill stuff in orbit
	}
}

on_destroy_planet_with_PLANET_KILLER_NEUTRON = {
	events = {
		maginot_destruction.1002 # detonate planet and kill stuff in orbit
	}
}

# spiritualist godray not stopped (the generals would be comitting suicide and thats a bit excessive for what it does)

on_destroy_planet_with_PLANET_KILLER_NANOBOTS = {
	events = {
		maginot_destruction.1002 # detonate planet and kill stuff in orbit
	}
}

# modded colossi

# gigas

on_destroy_planet_with_PLANET_KILLER_BLOKKAT_GENERATOR = { events = { maginot_destruction.1002 } }	# Blokkat Colossus

on_destroy_planet_with_COMPOUND_HM_RESHAPER = { events = { maginot_destruction.1002 } } # Compound Colossus

on_destroy_planet_with_PLANET_KILLER_CRACKER_SYSTEMCRAFT = { events = { maginot_destruction.1002 } } # Systemcraft weapons

on_destroy_planet_with_PLANET_KILLER_SHIELDER_SYSTEMCRAFT = { events = { maginot_destruction.1002 } } # Systemcraft weapons

on_destroy_planet_with_PLANET_KILLER_NEUTRON_SYSTEMCRAFT = { events = { maginot_destruction.1002 } } # Systemcraft weapons

on_destroy_planet_with_PLANET_KILLER_NANOBOTS_SYSTEMCRAFT = { events = { maginot_destruction.1002 } } # Systemcraft weapons

# acot

on_destroy_planet_with_ACOT_PLANET_KILLER_CRACKER = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_PLANET_KILLER_SHIELDER = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_PLANET_KILLER_NEUTRON = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_PLANET_KILLER_NANOBOTS = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_SE_PLANET_KILLER_CRACKER = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_SE_PLANET_KILLER_SHIELDER = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_SE_PLANET_KILLER_NEUTRON = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_SE_PLANET_KILLER_NANOBOTS = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_HE_PLANET_KILLER_CRACKER = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_HE_PLANET_KILLER_SHIELDER = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_HE_PLANET_KILLER_NEUTRON = { events = { maginot_destruction.1002 } }

on_destroy_planet_with_ACOT_HE_PLANET_KILLER_NANOBOTS = { events = { maginot_destruction.1002 } }

# can't stop star eater

# Text box informing Dead Hand system was disarmed and taken over
# Fired whenever a new owner is set for a planet, and the planet was aggressively conquered
# Fired in ADDITION to on_planet_transfer
# From = Country scope (new owner)
# This = Planet scope
on_planet_conquer = {
	events = {
		maginot_destruction.1004
	}
}

#############################
### Subspace disruption	  ###
### system border updates ###
#############################

# From = system
# FromFrom = country (new owner)
# This = country (previous owner)
on_system_lost = {
	events = {
		maginot_border_update.001 # remove subspace disruption
	}
}

# Fired from destroy_star_system scripted effect
# This = system
# From = destroyer (if using a star cracker)
on_destroy_star_system = {
	events = {
		maginot_border_update.010 # remove subspace disruption
	}
}

# deliberately left during occupation to annoy the occupier (realistic for the command staff too)

on_district_complete = {
	events = {
		maginot_orbital_defence.4000 
	}
}

on_district_demolished = {
	events = {
		maginot_orbital_defence.4000
	}
}

#############################
### Maginot Orbital	  	  ###
### Defence Management 	  ###
#############################

# This = owner of fleet
# From = disbanded fleet
on_fleet_disbanded 			= { events = { maginot_orbital_defence.1001 } }		# Maginot Orbital Defence Disbanded

# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_victim 	= { events = { maginot_orbital_defence.1002 } }		# Maginot Orbital Defence Destroyed

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim 	= {	events = { maginot_orbital_defence.1003 } }		# Main ship/station Destroyed
on_ship_destroyed_victim 	= {	events = { maginot_orbital_defence.1008 } }		# Secondary platform point Refund

#############################
### Tech Buffs 			  ###
#############################

on_tech_increased 			= { events = { maginot_orbital_defence.2001 } } 	# Firepower Upgrade
on_tech_increased 			= { events = { maginot_orbital_defence.2002 } } 	# Pl*netcraft Upgrade
on_tech_increased 			= { events = { maginot_orbital_defence.2003 } } 	# Systemcraft Upgrade
