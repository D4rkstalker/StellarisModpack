# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		anomalymod.43
		expandedrelics.50
		colonyexpanded.402
		colonyexpanded.603
		countryexpanded.42
		countryexpanded.270
		countryexpanded.330
		countryexpanded.405
	}
}

# No scope, like on_game_start
on_bi_yearly_pulse = {
	events = {
		colonyexpanded.600
		countryexpanded.250
		countryexpanded.254
		countryexpanded.334
		countryexpanded.400
		countryexpanded.500
		expandedrelics.41
	}
}

# No scope, like on_game_start
on_five_year_pulse = {
	events = {
		anomalymod.85
		anomalymod.90
		colonyexpanded.102
		colonyexpanded.199
		colonyexpanded.323
		countryexpanded.65
		countryexpanded.103
		countryexpanded.256
	}
}

# No scope, like on_game_start
on_decade_pulse = {
	events = {
		anomalymod.40
		anomalymod.42
		anomalymod.214
		colonyexpanded.299
		colonyexpanded.570
		countryexpanded.60
		countryexpanded.208
		expandedrelics.204
		primitivesexpanded.49
	}
}

# Triggers when pressing begin in the intro window
# This = country to press begin
on_press_begin = {
	events = {
		gamestartexpanded.1
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		countryexpanded.505
	}
}

# Triggers country_event for the defender upon victory
# Root = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_win = {
	events = {
		countryexpanded.506
	}
}

# Triggers country_event for the defender upon defeat
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_lose = {
	events = {
		countryexpanded.504
	}
}

# Triggers event when a system is entered by ships from a country (not pirates or monsters) for the first time
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system_first_time = {
	events = {
		expandedrelics.315
	}
}

# Triggers when the game starts
on_game_start = {
	events = {
		gamestartexpanded.9
	}
}

# This = construction ship
# From = planet it is built on
# Fires when construction is complete,
# immediately before station is created
on_building_research_station = {
	events = {
		anomalymod.233
		anomalymod.237
		anomalymod.249
		expandedrelics.40
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey = {
	events = {
		anomaly.6663
		anomalymod.1
		colonyexpanded.50
		colonyexpanded.101
		colonyexpanded.120
		colonyexpanded.130
		colonyexpanded.310
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		colonyexpanded.320
	}
}

# This = Planet
on_blocker_cleared = {
	events = {
		colonyexpanded.51
		colonyexpanded.213
		colonyexpanded.217
		colonyexpanded.220
		expandedrelics.200
		expandedrelics.202
		expandedrelics.214
	}
}

# Triggers event when ship enters a system
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	events = {
		anomalymod.210
		anomalymod.211
		colonyexpanded.100
		countryexpanded.31
		countryexpanded.39
	}
}

# A fleet has entered a system
# Scope = Fleet
# From = System
on_entering_system_fleet = {
	expandedrelics.80
	expandedrelics.288
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		anomalymod.20
	}
}

# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_perp = {
	events = {
		expandedrelics.290
	}
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		countryexpanded.21
		expandedrelics.2
		expandedrelics.207
		expandedrelics.216
	}
}

# X years has passed since a planet was colonized (won't trigger on empire homeworld)
on_colony_1_year_old = {
	events = {
		anomalymod.245
	}
}

on_colony_2_years_old = {
	events = {
		countryexpanded.36
		countryexpanded.337
	}
}

on_colony_4_years_old = {
	events = {
		expandedrelics.209
	}
}

on_colony_6_years_old = {
	events = {
		colonyexpanded.313
	}
	random_events = {
		# 1000 total
		740 = 0
		
		10 = colony.2005 # #Submerged Cruiser
		10 = colony.2025 # What Separates Us
		10 = colony.2050 # Clerical Errors
		10 = colony.3001 # Rogue Moon
		15 = ancrel.6049 # Blade of the Huntress
		15 = expandedrelics.211 # Strange Fossils
		100 = expandedrelics.219 # Target from Orbit
		25 = expandedrelics.220 # Déjà Vu
		20 = colonyexpanded.300 # Titanic Fossils
		25 = colonyexpanded.312 # Presapients
		20 = colonyexpanded.341 # Bigfoot
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		countryexpanded.100
	}
}

# A war is beginning, executed for every country in the war.
# Root = Country
# From = War
on_war_beginning = {
	events = {
		diploexpanded.1
		diploexpanded.100
	}
}

# A war has been won
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
on_war_won = {
	events = {
		countryexpanded.101
		countryexpanded.102
		countryexpanded.401
	}
}

# A status quo has been signed
# Root = Actor
# From = Recipient
# FromFrom = Main Attacker
# FromFromFrom = Main Defender
# FromFromFromFrom = War
on_status_quo = {
	events = {
		countryexpanded.101
		countryexpanded.102
	}
}

# A status quo has been signed, by force
# Root = Recipient
# From = Actor
# FromFrom = Main Attacker
# FromFromFrom = Main Defender
# FromFromFromFrom = War
on_status_quo_forced = {
	events = {
		countryexpanded.101
		countryexpanded.102
	}
}

# Planet has taken damage from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		actionexp.4
		expandedrelics.3
	}
}

# Planets starts being terraformed
# This = Planet
# From = Terraforming country
on_terraforming_begun = {
	events = {
		actionexp.5
	}
}

#A district construction has been completed.
# This = Planet
on_district_complete = {
	events = {
		expandedrelics.212
	}
}