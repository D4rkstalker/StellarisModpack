on_game_start = {
	events = {
		theinfestation_game_start.1
		theinfestation_game_start.4
	}
}

# After closing RS menu
on_applying_rs_settings = {
	events = {
		
	}
}

# No scope, like on_game_start
on_mid_game_pulse = {
	events = {
		theinfestation_game_start.2
	}
}

# No scope, like on_game_start
on_monthly_pulse = {
	events = {
	}
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = {
	}
}

# No scope, like on_game_start
on_five_year_pulse = {
	events = {
		theinfestation_exomycosis_event.1 		 # Mold Infection of neighboring planets
		theinfestation_exomycosis_event.2 		 # Mold Infection of neighboring planets
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		#theinfestation_exomycosis_event.10
	}
}

# Triggers country_event for the defender upon defeat
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_lose = {
	events = {
	}
}

# Triggers country_event for the defender upon victory
# Root = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_win = {
	events = {
		theinfestation_exomycosis_event.31
	}
}

# Triggers when ground combat starts
# This = planet
# From = country attacking
on_ground_combat_started = {
	events = {
		theinfestation_exomycosis_event.11
	}
}

# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		theinfestation_exomycosis_event.11
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey = {
	events = {
		
	}
}

#From = Planet/Starbase/Megastructure scope
#This = Fleet scope
on_fleet_enter_orbit = {
	events = {
		
	}
}

# A country has gained a surveyed status on a planet. Happens after "on_survey" if a science ship surveyed a planet.
# Root = Planet
# From = Country
# FromFrom = Fleet of the science ship that surveyed it, if any
on_planet_surveyed = {
	events = {
		
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		theinfestation_exomycosis_event.101
	}
}

on_colony_1_year_old = {
	events = {
		
	}
}

# X years has passed since a planet was colonized (won't trigger on empire homeworld)
on_colony_2_years_old = {
	events = {
		
	}
}

# A colony has been destroyed. Called just before owner and controller is cleared
# Scope = Planet
on_colony_destroyed = {
	events = {
		
	}
}

#FromFrom = Former Owner
#From = Country scope (new owner, so invalid)
#This = Planet scope
on_planet_ownerless = {
	events = {
		theinfestation_exomycosis_event.23
	}
}

#Fired whenever a new owner is set for a planet,
#be it after a war or through a trade
#FromFrom = Former Owner (if any)
#From = Country scope (new owner)
#This = Planet scope
on_planet_transfer = {
	events = {
		theinfestation_exomycosis_event.23
		theinfestation_exomycosis_event.101
	}
}

# A planets controller becomes a country not the same as the owner.
# Root = Planet
# From = Planet Owner
# FromFrom = Planet Controller (the one occupying)
on_planet_occupied = {
	events = {
		theinfestation_exomycosis_event.10
	}
}

#A building construction has been completed.
# This = Planet
on_building_complete = {
	events = {
		theinfestation_exomycosis_event.15
		theinfestation_exomycosis_event.19
	}
}

# A building construction has demolished.
# This = Planet
on_building_demolished = {
	events = {
		theinfestation_exomycosis_event.22
	}
}

# A building construction has finished, replacing another building.
# This = Planet
on_building_replaced = {
	events = {
		theinfestation_exomycosis_event.15
		theinfestation_exomycosis_event.19
	}
}

# Fires for each planet every year (counting up from colonisation date, includes home planet)
on_colony_yearly_pulse = {
	events = {
	}
	random_events = {
		50 = theinfestation_exomycosis_event.32
		50 = 0
	}
}

# Fires for each planet every 5 years (counting up from colonisation date, includes home planet)
on_colony_5_year_pulse = {
	events = {
		theinfestation_exomycosis_event.26
	}
}

# Pop is resettled
# From is previous planet
# planet = { } is new planet
on_pop_resettled = {
	events = {
		theinfestation_exomycosis_event.33
		theinfestation_exomycosis_event.34
	}
}

on_destroy_planetary_station = {
	events = {
	}
}