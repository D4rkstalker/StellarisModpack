#MODIFIED
# Triggers when the game starts
on_game_start = {
	events = {
		sleeper.30
	}
}

on_game_start_country = {
	events = {
		sleeper.01
		sleeper.02
		sleeper.03
		sleeper.04
		sleeper.11
		#sleeper.21
	}
}

# Triggers when trying to open the diplomacy view for countries with custom diplomacy.
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		sleeper.05
		sleeper.06
		sleeper.13
		sleeper.15
	}
}

# Triggered when two empires discover each other
on_first_contact = {
	events = {
		sleeper.08
	}
}

#Fired whenever a new owner is set for a planet,
#be it after a war or through a trade
#From = Country scope (new owner)
#This = Planet scope
on_planet_transfer = {
	events = {
		sleeper.14
		sleeper.41
	}
}

# A planets controller becomes a country not the same as the owner.
# Root = Planet
# From = Planet Owner
# FromFrom = Planet Controller (the one occupying)
on_planet_occupied = {
	events = {
		sleeper_awakes.05
		sleeper_awakes.09
		sleeper_awakes.10
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		sleeper_awakes.24
	}
}

# Planet has reached 0 pops from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_zero_pops = {
	events = {
		sleeper_awakes.5
	}
}

# This = owner of fleet 1 (loser)
# From = owner of fleet 2 (winner)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_space_battle_lost = {
	events = {
		sleeper_awakes.18
		sleeper_awakes.19
	}
}

# This = Ship
# From = Disabler Ship
on_ship_disabled = {
	events = {
		sleeper.17
	}
}

# Triggers event when ship enters a system
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	events = {
		sleeper_awakes.15
	}
	random_events = {
		100 = 0
	}
}

# This = owner of fleet 1
# From = owner of fleet 2
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_entering_battle = {
	events = {
		sleeper.18
	}
}

#This = destroyed country
#From = optional, destroyer (country)
on_country_destroyed = {
	events = {
		sleeper_tony.19
	}
}

# Scope:
# this/root = planet that have been fired upon
# from = fleet that fired
#on_destroy_planet_with_PLANET_DESTRUCTION_COMPONENT = {
#	events = {
#		planet_destruction.1
#	}
#}

on_destroy_planet_with_PLANET_KILLER_SLEEPER_HIVE_INTERGRATOR = {
	events = {
		sleeper_exploding_stuff.1
	}
}

on_destroy_planet_with_PLANET_KILLER_SLEEPER_HIVE_CREATOR = {
	events = {
		sleeper_exploding_stuff.3
	}
}

# this = country
on_five_year_pulse_country = {
	events = {
		sleeper.38
	}
}

# this = country
on_yearly_pulse_country = {
	events = {
		
	}
}

# A war has ended
# Root = Loser
# From = Main Winner
on_war_ended = {
	events = {
		
	}
}

# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
# AI automaticly annexes a drone planet after destroying their starhold
		sleeper.44
	}
	random_events = {
	}
}

# Planet has taken damage from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		sleeper_awakes.30
	}
}




