
# Checked when game started
# No Scope
on_game_start = {
	events = {
		ag_ancient.1				# Set Ancient Empire Mod's global flag
	}
}

# Checked when game started
# Country Scope
on_game_start_country = {
	events = {
		ag_settings.1				# Settings spwaned when game started, for the first non-ai country only.
	}
}

# Checked every months
# No Scope
on_monthly_pulse = {
	events = {
		ag_ancient.5				# Set flags for fleet with ancient ship make them could special orbital bombardment stance
		ag_ancient.51				# Effects for Fefender of the Galaxy
		ag_ancient.52				# Effects for Galactic Contender
		
		ag_spawn.21					# Check megastructures flag
		ag_research.3				# Fire research projects' completed events
		
		ag_gamma.116				# Failsafe for unexpected bugs or events make ancient fleet stoped
		
		ag_zeta_crisis.51			# Shroud Invaders' Support Ships create new ships if any ship killed
		ag_zeta_crisis.536			# System's variable for Psionic Singularity decrease every month
		ag_zeta_crisis.54			# Debuff for colonies if Psionic Entities in system
		ag_zeta_crisis.91			# Failsafe for unexpected bugs or events make Shroud Invaders' fleet stoped
		ag_zeta_crisis.1010			# Failsafe event for portal owner swap.
		ag_zeta_crisis.401			# Failsafe for Psionic Portals destroyed for unknown reason (probably other mod killed it by event?)
		
		ag_theta.50					# Triggers for Starfish's fleet invasion
		ag_theta.66					# Failsafe for unexpected bugs or events make Starfish's fleet stoped
		ag_theta.121				# Effects on other megastructures
		ag_theta.122				# Effects on other megastructures

		ag_iota.61					# Checks deals could exists or not.

		ag_wanderer.42				# Failsafe for unexpected bugs or events make wandering ship stoped
		
		ag_side.11					# Gatekeeper, spawn ancient ship within border
	}
}

# Checked every years
# No Scope
on_yearly_pulse = {
	events = {
		ag_ancient.2				# Count Construction Sections
		ag_ancient.4				# Delayed ships unlock
		ag_spawn.11					# Spawn systems
		ag_epsilon.70				# Failsafe for unexpected bugs or events make Epsilon Titan stoped.
		ag_zeta.39					# Failsafe for Zeta Installation Defensive System Destroyed but ag_zeta.35 didn't fired correctly for any reason
		ag_zeta_crisis.1033			# Destroy Shroud Invaders with less than 25 ships
		ag_theta.151				# Failsafe for starfish's ships destroyed for unknown reason.
		ag_wanderer.11				# Find Riikinak Empire's colony
		ag_side.101					# Gatekeeper, spawn archaeological site
		ag_side.201					# Gatekeeper, spawn 4662 Preserved World's system
		ag_side.251					# Gatekeeper, spawn advanced colonizer sites
	}
}

# Checked every 2 years
# No Scope
on_bi_yearly_pulse = {
	events = {
		ag_beta.53					# Checks if system flag need to be remove
		ag_beta.105					# Failsase event for ancient relay station destroyed for unknown reason, end event chain
	}
}

# Checked every months for every country
# Country Scope
on_yearly_pulse_country = {
	events = {
		ag_ancient_knowledge.22		# Ancient Knowledge from iota enclave.
		ag_primitive.44				# Failsafe Event for 4762 Preserved Area
		ag_primitive.114			# Failsafe Event for 5524 Preserved Area
		ag_theta.101				# Enable special project to unlock ancient shield in Theta Area when all Starfish's fleet destroyed
		ag_side.45					# Remove Starlight-II country if ship doesn't exists
	}
}

# Checked when a country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# Country Scope, the country that research a technology
on_tech_increased = {
	events = {
		ag_ancient.11				# Gravity Weapon's Technologies' Gateway
		ag_ancient.12				# Gravity Weapon's Damage Technology
		ag_ancient.13				# Gravity Weapon's Fire Rate Technology
		ag_ancient.14				# Psionic Weapon's Technologies' Gateway
		ag_ancient.15				# Psionic Weapon's Damage Technology
		ag_ancient.16				# Psionic Weapon's Fire Rate Technology
		ag_research.6				# Research buffs
		ag_beta.43					# Set country flag if researched technology without flag
		ag_beta.44					# Psionic Inhibition Platforms are available for construction
		ag_beta.45					# Give Special Project to find Psionic Sources
		ag_beta.1311				# Researched ancient station
		ag_gamma.141				# For compatibility.
		ag_delta.420				# Ancient Turrets are available for construction
		ag_epsilon.72				# Notification for researched psionic beacon.
		ag_epsilon.75				# Notification for researched suppression station
		ag_theta.21					# Gives Special Project to unlock ancient shield
		ag_wanderer.64				# Researched technology, notification to upgrade anchor station
		ag_interaction.114
	}
}

# Checked when ship has surveyed a planet.
# Ship Scope, the ship that surveyed planet
# From(Planet Scope): The planet be surveyed
on_survey = {
	events = {
		ag_primitive.31				# Scanned 4762 Preserved World
		ag_primitive.32				# Scanned Shielded World
		ag_primitive.71				# Scanned 5524 Preserved World
		ag_primitive.121			# Scanned 9102 Preserved World
		ag_theta.2					# Enable special project for the ancient station
		ag_side.221					# Surveyed Beacon of Prosperity, add archaeological site
		ag_side.222					# Surveyed Beacon of Prosperity, add archaeological site
	}
}

# A country has gained a surveyed status on a planet. Happens after "on_survey" if a science ship surveyed a planet.
# Root = Country
# From = system
# FromFrom = Fleet of the science ship that surveyed it, if any
on_system_survey = {
	events = {
		ag_ancient_knowledge.21		# Gain Ancient Knowledge on survey ancient systems
	}
}

# Checked when a fkeet entered a system
# Fleet Scope, the fleet that just entered system
# From(System Scope): The system be entered by the fleet
on_entering_system_fleet = {
	events = {
		ag_primitive.301			# Notification for entering 4762 Preserved World's neighbor system
		ag_primitive.302			# Notification for entering 4762 Preserved World's system
		ag_primitive.701			# Notification for entering 5524 Preserved World's system
		ag_primitive.1201			# Notification for entering 9102 Preserved World's system

		ag_beta.2					# Notification for entering the Beta Area first time
		ag_beta.71					# Notification for entering ancient signal station system first time
		ag_beta.72					# Notification for entering ancient signal station system
		ag_beta.73					# Notification for entering ancient signal station system, but other has triggered its defensive system
		ag_beta.74					# Notification for entering ancient signal station system, but other has destroyed it
		
		ag_gamma.2					# Notification for entering the Gamma Area first time
		
		ag_delta.2					# Notification for entering the Delta Area first time
		ag_delta.21					# Notification for entering the Delta Area first time(Actived turrets in system)

		ag_epsilon.2				# Notification for entering the Epsilon Area first time
		
		ag_zeta.2					# Notification for entering the Zeta Area first time
		ag_zeta.5					# Zeta Installation Defensive System turn into a hostile faction if player's ship entered the Zeta Area again
		
		ag_zeta_crisis.1			# Give debuff to those ships enter Zeta Area before crisis appears
		ag_zeta_crisis.52			# Spawn Psionic Storm when too many avatars in a system
		ag_zeta_crisis.61			# Shroud Invaders Action, attack planet in same system
		ag_zeta_crisis.82			# Shroud Invaders Action, Construction Ship check its order when entering system
		ag_zeta_crisis.402			# Fleet takes damage when entering system with a Psionic Storm
		ag_zeta_crisis.422			# Merge avaters' fleet
		
		ag_theta.1					# Notification for entering the Theta Area

		ag_iota.2					# Notification for entering the Iota Area first time

		ag_wanderer.1				# Notification for encounter anchor station
		ag_wanderer.2				# Notification for encounter anchor station
		ag_wanderer.3				# Notification for encounter anchor station
		ag_wanderer.36				# Delayed notification for wandering ship
		ag_wanderer.43				# Hostile to Shroud Invaders when entering their systems
		ag_wanderer.45				# Update trackers
		
		ag_side.33					# Change ftl drive after ftl action if didn't be repaired
		ag_side.211					# Notification for entering system
	}
}

# Checked when a fkeet arrived its auto_move_to_planet target ( Will be constantly checked )
# Country Scope, for fleet owner
# From: Fleet
# FromFrom: planet ( if exist )
on_fleet_auto_move_arrival = {
	events = {
		ag_gamma.29					# Reset target when ancient fleet orbiting stars
		ag_zeta_crisis.63			# Shroud Invaders Action, reset target when orbiting stars
		ag_theta.65					# Reset target when Starfish's fleet orbiting stars
		ag_wanderer.41				# Wandering ship arrives its target
		ag_side.15					# Ancient ship entering a gas giant's orbit
		ag_side.381					# Ancient ship attacks guardians
	}
}

# Checked when a building upgraded
# Planet Scope, where the building located
on_building_upgraded = {
	events = {
		ag_gamma.15					# Upgraded Ancient Tower
		ag_epsilon.13				# Upgraded Fallen Empire Research Station
	}
}

# Checked when a building's construction completed, won't be checked if this building replaced another building
# Planet Scope, where the building located
on_building_complete = {
	events = {
		ag_ancient.85				# Build ancient fortress, set variable.
		ag_ancient.86				# Destroy ancient fortress, clear variable.
		ag_side.42					# Notification, ancient ship disappeared when building finished
	}
}

# Checked when a building's construction completed, only be checked if this building replaced another building
# Planet Scope, where the building located
on_building_replaced = {
	events = {
		ag_ancient.85				# Build ancient fortress, set variable.
		ag_ancient.86				# Destroy ancient fortress, clear variable.
		ag_side.42					# Notification, ancient ship disappeared when building finished
	}
}

# A building construction has demolished.
# This = Planet
on_building_demolished = {
	events = {
		ag_ancient.86				# Destroy ancient fortress, clear variable.
	}
}

# Checked when a ship built
# Ship Scope, the ship just be built
# From(Planet Scope): Unknown usage
on_ship_built = {
	events = {
		ag_ancient.35				# Difficulty Modifier for buildable ancient ships
		ag_ancient_knowledge.27		# Gain Ancient Knowledge from building ancient ships
		ag_beta.51					# Spawn Psionic Inhibitor Platform platform in system
		ag_beta.133					# Spawn Ancient Relay Station in system
		ag_delta.77					# Set fleet flag for turrets
		ag_zeta_crisis.421			# Building psionic containers
	}
}

# Checked when a ship be destroyed, on loser's country
# Country Scope, owner of the destroyed ship
# From(Country Scope), owner of the ship which destroyed another ship
# FromFrom(Ship Scope), the ship be destroyed
# FromFromFrom(Ship Scope), the ship which destroyed another ship
on_ship_destroyed_victim = {
	events = {
		ag_ancient.24				# Ancient Ships' abilities in Calamity Difficulty
		ag_ancient.27				# Mod ship's debuff for killer
		
		ag_subsystem.21				# Structural Protection System

		ag_primitive.139			# Destroy ancient drones
		ag_primitive.151			# Give special project to research monitor system's weakness if lost too many ships

		ag_beta.84					# Destroy Ancient Relay Station
		ag_beta.111					# Give Beta Installation Defensive System's weakness research project if player lost too many ships
		ag_beta.114					# Give Ancient Signal Station Defensive System's weakness research project if player lost too many ships
		
		ag_gamma.60					# Give Gamma Installation Defensive System's weakness research project if player lost too many ships
		ag_gamma.111				# Player's Ancient Station destroyed
		ag_gamma.115				# Counter for ancient fleets' ships killed
		
		ag_delta.22					# All turrets in Delta Area destroyed
		ag_delta.35					# Give Delta Installation Defensive System's weakness research project if player lost too many ships
		ag_delta.47					# Ancient Drones destroyed

		ag_epsilon.69				# Ancient titan destroy psionic beacon, reset targer.
		ag_epsilon.81				# Research weakness if lost too many ships, fallen empire defensive system.
		ag_epsilon.84				# Research weakness if lost too many ships, obelisk.
		ag_epsilon.87				# Research weakness if lost too many ships, ancient titan.
		
		ag_zeta.35					# Zeta Installation Defensive System Destroyed
		ag_zeta.41					# Give Zeta Installation Defensive System's weakness research project if player lost too many ships
		ag_zeta.104					# Psionic Ships' abilities in Calamity Difficulty
		
		ag_zeta_crisis.32			# Counter for Shroud Invaders' ships killed
		ag_zeta_crisis.35			# Give Shroud Invaders' weakness research project if player lost too many ships
		ag_zeta_crisis.43			# Shroud Invaders' ships split when destroyed
		ag_zeta_crisis.461			# Shroud Invaders' defensive platform tries to rebuilt when destroyed
		ag_zeta_crisis.534			# Psionic Singularity explode
		ag_zeta_crisis.64			# Shroud Invaders Action, move to support friendly if neighbor starbase destroyed
		ag_zeta_crisis.66			# Shroud Invaders Action, Construction Ship's protector find a new target if Construction Ship destroyed
		ag_zeta_crisis.101			# Switch owner of Psionic Portal if all nearby starbase destroyed
		ag_zeta_crisis.316			# Psionic Singularity exploded if it was killed
		ag_zeta_crisis.317			# Psionic Container destroyed, spawn some hostile psionic entities

		ag_theta.91					# Give Starfish fleet's weakness research project if player lost too many ships

		ag_iota.73					# Enclave destroyed

		ag_wanderer.81				# Wandering ship destroyed
		ag_wanderer.91				# Give wandering ship's weakness research project if player lost too many ships
		ag_wanderer.94				# Give anchor station's weakness research project if player lost too many ships
	}
}

# Checked when a ship be destroyed, on winner's country
# Country Scope, owner of the ship which destroyed another ship
# From(Country Scope), owner of the destroyed ship
# FromFrom(Ship Scope), the ship which destroyed another ship
# FromFromFrom(Ship Scope), the ship be destroyed
on_ship_destroyed_perp = {
	events = {
		ag_ancient.22				# Gravity Weapon's special ability
		ag_ancient.41				# Small chance for special technologies when destroy ancient ships
		ag_subsystem.32				# Psionic Weapon System

		ag_beta.79					# Ancient Signal Station destroyed, enable special project for its killer
		
		ag_gamma.40					# Deployed small station destroyed
		ag_gamma.46					# Small station destroyed before it could deploy
		ag_gamma.50					# Ancient Station destroyed
		ag_gamma.53					# All Ancient Ship destroyed
		ag_gamma.114				# Counter for ships destroyed by ancient fleets
		
		ag_delta.71					# Ancient Titan's 
		
		ag_epsilon.3				# Destroy Defensive Stations, give special projects to unlock ringworlds.
		
		ag_zeta.102					# Anti Psionic Weapons' abilities
		ag_zeta.103					# Psionic Weapons' abilities
		
		ag_zeta_crisis.31			# Counter for ships destroyed by Shroud Invaders
		ag_zeta_crisis.41			# Shroud Invaders create avaters when destroy other ships
		ag_zeta_crisis.53			# Spawn Psionic Singularity if too many ships killed in a system
		ag_zeta_crisis.204			# Psi Installation Defensive System's counter for Shroud Invaders' ship killed by others

		ag_wanderer.72				# Destroy Anchor Station
	}
}

# Checked when a fleet be destroyed, on loser's country
# Country Scope, owner of the destroyed fleet
# From(Country Scope), owner of the fleet which destroyed another fleet
# FromFrom(Fleet Scope), the fleet be destroyed
# FromFromFrom(Fleet Scope), the fleet which destroyed another fleet
on_fleet_destroyed_victim = {
	events = {
		ag_wanderer.53				# Notification: Wandering ship is invincible befor anchor station deactivated
		ag_side.14					# Lost space battle, remove ancient ship
	}
}

# Checked when a fleet be destroyed, on winner's country
# Country Scope, owner of the fleet which destroyed another fleet
# From(Country Scope), owner of the destroyed fleet
# FromFrom(Fleet Scope), the fleet which destroyed another fleet
# FromFromFrom(Fleet Scope), the fleet be destroyed
on_fleet_destroyed_perp = {
	events = {
		ag_primitive.106			# Primitive fleet destroyed
		ag_gamma.28					# Reset ancient fleet's target after battle
		ag_zeta_crisis.62			# Shroud Invaders Action, reset target after battle
		ag_zeta_crisis.103			# End crisis when all psionic entities destroyed
		ag_theta.71					# A Starfish's fleet destroyed
		ag_side.13					# Destroy ancient ship
	}
}

# # This = owner of fleet 1 (loser)
# # From = owner of fleet 2 (winner)
# # FromFrom = fleet 1
# # FromFromFrom = fleet 2
# on_space_battle_lost = {
# 	events = {
# 		ag_ancient.29				# Remove ship modifiers
# 	}
# }

# # This = owner of fleet 1 (winner)
# # From = owner of fleet 2 (loser)
# # FromFrom = fleet 1
# # FromFromFrom = fleet 2
# on_space_battle_won = {
# 	events = {
# 		ag_ancient.29				# Remove ship modifiers
# 	}
# }

# Checked when two fleet entering battle
# Country Scope, owner of the first fleet
# From(Country Scope), owner of the second fleet
# FromFrom(Fleet Scope), the first fleet
# FromFromFrom(Fleet Scope), the second fleet
on_entering_battle = {
	events = {
		ag_ancient.3				# Destroy enigmatic fortress/caravaneers
		ag_ancient.21				# Gravity Weapon's special ability
		ag_ancient.23				# Ancient ships could kill enemy's admiral when entering battle
		ag_ancient.25				# Ancient Ships' abilities in Calamity Difficulty
		ag_research.5				# Enters battle, end research project
		ag_subsystem.31				# Gravity Weapon System
		ag_subsystem.33				# Anti Psionic System
		ag_subsystem.34				# Gamma Station Drones Spawn
		ag_subsystem.41				# Leader Killer / Protector
		ag_subsystem.51				# Auxiliary Energy System
		ag_subsystem.52				# Computing Network
		ag_subsystem.71				# Titans' Abilities
		ag_gamma.131				# Gamma Station's penetration suppression.
		ag_delta.15					# Attacked Ancient Turret
		ag_zeta.6					# Zeta Installation Defensive System turn into a hostile faction if player's ship attacked it
		ag_zeta.101					# Anti Psionic Weapons' abilities
		ag_zeta_crisis.50			# Shroud Invaders could kill enemy's admiral when entering battle
		ag_zeta_crisis.65			# Shroud Invaders Action, move to support friendly if nearby portal underattack
		ag_zeta_crisis.2043			# Psi Installation Defensive System recall ships if player attacked unauthorized targets
		ag_zeta_crisis.412			# Debuff for ancient ships
		ag_zeta_crisis.431			# Fleet leader's skill
		ag_iota.71					# Attacked Enclave
	}
}

# A planet has begun the colonization process.
# Planet Scope
# From(Ship Scope), colony ship.
on_colonization_started = {
	events = {
		ag_ancient.81				# Advanced colonizer setup event.
	}
}

# Checked when a new colony established, won't checked if player uses "own" command
# Planet Scope
on_colonized = {
	events = {
		ag_ancient.82				# Advanced colonizer setup event.
		ag_beta.4					# Colonized Beta Area's ringworld
		ag_gamma.10					# Colonized Gamma Area's ringworld
		ag_delta.40					# Colonized Delta Area's ringworld
		ag_epsilon.6				# Colonize Epsilon Area's ringworld, notification for remove blocker.
		ag_theta.111				# Colonized Theta Area's ringworld
	}
}

# Checked when ship arrived a system by jump
# Ship Scope, ship just jumped to the target system
on_jump_drive = {
	events = {
		ag_gamma.110				# Ancient Station using jumpdrive
	}
}

# Constantly checked (every tick?) when a planet being bombarded
# Planet Scope, the victim planet
# From(Country Scope), the owner of the ships that bombing the planet
on_planet_bombarded = {
	events = {
		ag_ancient.6				# Orbital bombardment's side effects caused by ancient ships
		ag_ancient.83				# Ancient Foretress's planetary shield effect
		ag_gamma.32					# Ancient fleet destroy a planet
		ag_zeta_crisis.44			# Orbital bombardment's side effects caused by Shroud Invaders' ships
		ag_zeta_crisis.45			# Shroud Invaders destroyed a planet
		ag_zeta_crisis.47			# Shroud Invaders' planet reclaimed by orbital bombardment
		ag_zeta_crisis.48			# Fleet damaged when bomberding Shrouded Planet
		ag_zeta_crisis.2044			# Psi Installation Defensive System recall ships if player bombarded unauthorized planets
		ag_zeta_crisis.205			# Psi Installation Defensive System destroyed
		ag_theta.61					# Starfish's fleet conquered planet
		ag_theta.63					# Starfish's planet reclaimed
	}
}

# Planet has reached 0 pops from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_zero_pops = {
	events = {
		ag_epsilon.68				# Notification for ancient titan destroyed planet.
	}
}

# Checked when a ship be disabled
# Ship Scope, the ship that be disabled
# From(Ship Scope), the ship that disabled the victim
on_ship_disabled = {
	events = {
		ag_subsystem.12				# Emergency Repair System
		ag_beta.83					# Disable Ancient Relay Station, has chance to reactive
		ag_gamma.121				# Gamma Station's protection
		ag_delta.26					# Ancient ship heals itself
		ag_epsilon.41				# Disable obelisk, allows to upgrade again.
		ag_epsilon.61				# Disable ancient titan(station mode), spawn ancient titan ship mode.
		ag_epsilon.63				# Disable ancient titan(ship mode), decide to destroy it or revive it.
		ag_zeta.21					# Ancient Ships turn into psionic form
		ag_zeta_crisis.102			# Shroud Invaders' Psionic Portal destroyed
		ag_zeta_crisis.411			# Shroud Invaders' abilities in Calamity Difficulty
		ag_wanderer.51				# Disabled wandering ship
	}
}

# Checked when a fleet disbanded
# Country Scope, the owner of the fleet
# From(Fleet Scope), disbanded fleet
on_fleet_disbanded = {
	events = {
		ag_subsystem.61				# Recycle Station
	}
}

# Checked when attacker wins a ground battle on a planet, when events checked, planet still belongs to its original owner
# Country Scope, attacker
# From(Country Scope), defender
# FromFrom(Planet Scope), the polanet where the ground battle happend
on_planet_attackers_win = {
	events = {
		ag_primitive.41				# Invaded 4762 Preserved World
		ag_primitive.42				# Invaded 4762 Preserved World
		ag_primitive.111			# Invaded 5524 Preserved World
		ag_primitive.112			# Invaded 5524 Preserved World
		ag_zeta_crisis.1121			# Shroud Invaders conquered planets
		ag_zeta_crisis.1123			# Shroud Invaders' Planets reclaimed
	}
}

# Checked when defender wins a ground battle on a planet
# Country Scope, defender
# From(Country Scope), attacker
# FromFrom(Planet Scope), the polanet where the ground battle happend
on_planet_defenders_win = {
	events = {
		ag_zeta_crisis.1122			# Planet defend successful
	}
}

# Checked when a pop purged, victim pop still exist when event checked
# Planet Scope, the planet where victim pop located
# From(Country Scope), the country that victim pop belongs to
# FromFrom(Pop Scope), the victim pop
on_pop_purged = {
	events = {
		ag_zeta_crisis.1124			# Accelerate Shroud Invaders' purge progress
		ag_zeta_crisis.1125			# Turn planet into a Shrouded Planet
	}
}

# Checked when a country tries to open the diplomatic window to communicate with another country
# Country Scope, the country that send diplomacy request
# From(Country Scope), the country that recived root's diplomacy request
on_custom_diplomacy = {
	events = {
		ag_zeta.11					# Diplomatic event for Zeta Installation Defensive System when it is neutral to the player
		ag_zeta.12					# Diplomatic event for Zeta Installation Defensive System when it is hostile to the player
		ag_zeta_crisis.2021			# Diplomatic event for Psi Installation Defensive System when it is neutral to the player
		ag_zeta_crisis.2022			# Diplomatic event for Psi Installation Defensive System when it is hostile to the player
		ag_iota.10					# Communication with Keepers of Archives
		ag_side.31					# Communication with Starlight-II, battleship form
		ag_side.32					# Communication with Starlight-II, science ship form
		ag_side.39					# Communication with Starlight-II, destroyed
	}
}

# Checked when a blocker is cleared
# Planet Scope, the planet where the blocker located
# From: the blocker
on_blocker_cleared = {
	events = {
		ag_beta.5					# Create Ancient Archive
		ag_epsilon.7				# Blocker cleared, add fallen empire's building.
		ag_epsilon.8				# Blocker cleared, add fallen empire's building.
	}
}

# this/root = planet that have been fired upon ( Planet Scope )
# from = fleet that fired
on_destroy_planet_with_ag_ancient_epsilon_planet_killer_weapon = {
	events = {
		ag_planet_killer.1			# Destroy star with superweapon
		ag_planet_killer.2			# Destroyed a planet.
		ag_planet_killer.3			# Destroyed a planet, clean up pops only.
	}
}

# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
on_leader_spawned = {
	events = {
		ag_subsystem.81				# Starlight II enhance new leaders
	}
}

# Fired when system selector confirm.
ag_on_system_selector_confirm = {
	events = {
		ag_epsilon.131				# Starkiller destroy stars.
	}
}
