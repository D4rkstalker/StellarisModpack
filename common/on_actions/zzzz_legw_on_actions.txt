# Triggers when the game starts
on_game_start = {
	events = {
		legw_game_start.0 	# planets
		legw_game_start.1 	# primitives
		legw_game_start.2 	# stations
		legw_game_start.3 	# megastructures
		legw_game_start.5		# fallen empires
		legw_game_start.7		# tomb origin
		legw_game_start.8		# tomb origin
	}
}

on_survey = {
	events = {
		legw_shipevent.2	# ancients homeworld found
		legw_shipevent.61 # ancients world found
		legw_shipevent.62 # utopia found
		legw_shipevent.98	# treasure found
		legw_shipevent.99	# gateway found
		legw_color.1	# orange color
		legw_color.11	# yellow color
	}
}


# This = Planet
on_blocker_cleared = {
	events = {
		legw_script.7	# Ursa-Start
		legw_script.9	# Ursa-End
		legw_script.10	# Ocean Treasure smallest
		legw_script.11	# Ocean Treasure nomral
		legw_script.12	# Ocean Treasure large
	}
}

on_yearly_pulse = {
	events = {
		legw_script.5	# Timeshift swapping
		legw_script.55	# Timeshift swapping
		legw_script.4	# megastructures have a yearly small chance for a specific leg

		#legw_color.3	# orange color for later created legworlds
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		legw_script.13	# Set Primitive Modifiers
		legw_script.14	# Set Primitive Modifiers
		legw_script.15	# Set Primitive Modifiers
		legw_script.16	# Set Primitive Modifiers
		legw_script.17	# Set Primitive Modifiers
		legw_script.18	# Set Primitive Modifiers
		legw_script.19	# Set Primitive Modifiers
		legw_script.20	# Set Primitive Modifiers
	}
}

# This = Planet, From = Terraformer
on_terraforming_complete = {
    events = {
		legw_script.1	# terraform event
		legw_color.2	# orange color
    }
}

on_colonized = {
	events = {
		legw_addbuildings.1		# ancient homeworld
		legw_addbuildings.2		# ancient colony
		legw_addbuildings.22		# ancient outpost
		legw_addbuildings.3		# clone center
		legw_addbuildings.4		# random building
		legw_addbuildings.5		# mining complex
		legw_addbuildings.6		# solar station
		legw_addbuildings.7		# broadcast tower
		legw_addbuildings.8		# change capital for ring fragment
	}
}

# A Megastructure has been built
# Root = Country
# From = Megastructure - useless
# FromFrom = System
# FromFromFrom = Fleet
on_megastructure_built = {
	events = {
		legw_script.2	# habitats event
		# legw_color.2	# orange color
	}
}


# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgraded = {
	events = {
		legw_script.3	# ringworlds finish
		# legw_color.2	# orange color
	}
}
