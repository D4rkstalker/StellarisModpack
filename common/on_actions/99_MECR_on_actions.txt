# Triggers when the game starts
on_game_start = {
	events = {
		MECR.2
	}
}
on_monthly_pulse = {
	events = {
		MECR.1		#检查各种flag
		MECR.5		#检查皇帝改善关系免除维护费deposit
		MECR.500	#五年计划进度统计
		MECR.2500	#银河邦联每月统计预触发
		MECR.9907	#打击犯罪集团
		#MECR.2100	#银河邦联：监管人选举法：检查监管人是否是存在/是否是联邦领袖
		MECR_EXPO.470 #检查是否有成员国没有EXPO状态
	}
}
on_monthly_pulse_country = {
	events = {
		MECR.200	#皇帝每月执行
		MECR.300	#帝国行省：治理计算
		MECR.1010	#帝国联邦每月执行
		MECR.400	#经济援助换经济情报
		MECR_EXPO.3	#银河博览会准备阶段
		MECR.130	#传统：共识推动：每月计算结束议程行动减价
		MECR.3005	#大远征月检
	}
}
on_yearly_pulse = {
	events = {
		MECR.1300	#帝国权威过低时，牺牲帝国联邦等级换取一次性提高权威
		MECR_EXPO.461	#银河博览会因动荡而中止后的恢复
	}
}
on_yearly_pulse_country = {
	events = {
		MECR.201	#皇帝每年执行
		MECR.1200	#帝国联邦每年执行
		MECR.1092	#检查是否满足国防部特质的前提
	}
}
# this = country
on_five_year_pulse_country = {
	events = {
		MECR.9909	#AI犯罪集团每五年考虑是否要投降
	}
}
# No scope, like on_game_start
# Does not run when loading MP saves due to OOS concerns
on_single_player_save_game_load = {
	events = {
		MECR.3 #读档刷新
	}
}
# A galcom resolution passed
# this/root = proposer
# from = target if valid
# To find out which resolution it was, use last_resolution_changed trigger
on_resolution_passed = {
	events = {
		MECR.705
	}
}
#This = Country scope, new federation leader
#From = Previous leader (if still existing)
on_federation_new_leader = {
	events = {
		MECR.1004	#帝国联邦/银河邦联重选举后设置皇帝/监管人为领袖
	}
}
# A war is beginning, executed for every country in the war.
# Root = Country
# From = War
on_war_beginning = {
	events = {
		MECR.100	#对抗化身天灾添加flag
		MECR.110	#内战爆发解散帝国联邦
		#MECR.2800	#决斗战争
	}
}
on_tech_increased = {
	events = {
		#MECR.3001	#研究完循环科技加统计变量
		MECR.502	#研究完科技加五年计划分数
		MECR.1052	#帝国科学院：科技统一：获得新科技时共享
	}
}
#This = destroyed country
#From = optional, destroyer (country)
on_country_destroyed = {
	events = {
		MECR.1200	#帝国毁灭时，移除所有参议员
	}
}
# THIS = Planet: Branch office planet
# FROM = Country: Branch office owner
on_branch_office_closed = {
	events = {
		MECR.9908
	}
}
# Planet has reached 0 pops from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_zero_pops = {
	events = {
		MECR.81		#粉碎天灾轨道轰炸把行星炸成死寂星球——人口全灭
	}
}
# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		MECR.82		#粉碎天灾轨道轰炸把行星炸成死寂星球——100%破坏度
		MECR.83		#粉碎天灾轨道轰炸——20%破坏度以上摧毁一座防御建筑，CD9-15个月
	}
}
# Executed when a country picks an ascension perk
# THIS = country
on_ascension_perk_picked = {
	events = {
	}
}

# Triggers when trying to open the diplomacy view for countries with custom diplomacy.
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		#MECR.1300
	}
}

#An army has been killed in ground combat
# This = owner
# From = army
# FromFrom = opponent
# FromFromFrom = planet
on_army_killed_in_combat = {
	events = {
		emperor.451		#帝国军团统计
	}
}

#An army has ceased to exist for any other reason
# This = country
# From = army
on_army_killed_no_combat = {
	events = {
		emperor.451		#帝国军团统计
	}
}
# fires when a country releases a sector as a vassal
# This = released vassal
# From = overlord
on_released_as_vassal = {
	events = {
		MECR.15		#释放的附庸添加flag
	}
}

# Executed just as country is changing its government, before the new one is applied
# THIS = country
on_pre_government_changed = {
	events = {
		MECR_EXPO.1002	#免费的政府改革
	}
}


#Fired whenever a new owner is set for a planet,
#be it after a war or through a trade
#From = Country scope (new owner)
#This = Planet scope
on_planet_transfer = {
	events = {
		MECR_EXPO.6
	}
}

# fires when a country finishes being integrated
# This = overlord
# From = subject
on_subject_integrated = {
	events = {
		MECR.1105
	}
}

# Called upon a catapult jump being finished, per ship in catapulted fleet
# THIS = Ship
# FROM = System jumping to
# FROMFROM = System jumped from
on_ship_quantum_catapult = {
}

# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
on_leader_spawned = {
	events = {
		MECR.1091	#帝国国防部：lvl2：新司令调整特质
	}
}

# This = fleet
# From = country that borrowed the fleet
# FromFrom = country that owns the fleet
on_fleet_lease_ended = {
	events = {
		MECR.1093	#帝国国防部：lvl3：退回的舰队移除修正
	}
}

# A ship has been built
# Root = Ship
# From = Planet
on_ship_built = {
	events = {
		MECR.10		#新建的GDF/IA舰船移除舰容占用
	}
}

# Triggers when ground combat starts
# This = planet
# From = country attacking
on_ground_combat_started = {
	events = {
	}
}


# This = Country
on_remove_community_member = {
	events = {
		MECR.2005 #邦联成员国退出共同体，同时退出邦联
	}
}


# A galcom resolution passed
# this/root = proposer
# from = target if valid
# To find out which resolution it was, use last_resolution_changed trigger
on_resolution_passed = {
	events = {
		MECR.131 #传统：无上庄严&共识驱动：皇帝通过议案加权威、减治理
	}
}


# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
		MECR.3030 #大远征积分：摧毁舰船
		MECR.3031 #大远征积分：舰船牺牲
	}
}
# This = starbase being destroyed (not ship!)
# From = fleet that destroyed the starbase
on_starbase_destroyed = {
	events = {
		MECR.3032 #大远征积分：摧毁/失能星基
	}
}
# This = starbase being disabled (not ship!)
# From = fleet that disabled the starbase
on_starbase_disabled = {
	events = {
		MECR.3032 #大远征积分：摧毁/失能星基
	}
}
# Called when a Starbase changes owner
# THIS = Ship (Starbase)
# FROM = Former Owner (Country)
on_starbase_transfer = {
	events = {
		MECR.3034 #大远征积分：占领星基
	}
}
# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		MECR.3035 #大远征积分：占领行星
	}
}
# Executed just after country has established communications with another country
# This = Planet where the pop was bombed to death
# From = Country which is raining down fire and brimstone
on_pop_bombed_to_death = {
	events = {
		MECR.3037 #大远征积分：炸死人口
	}
}