# Triggers when the game starts
on_game_start = {
	events = {
		sleeper_setup.1
	}
}

on_game_start_country = {
	events = {
		sleeper_setup.2
		sleeper_debug.04
	}
}

#This = destroyed country
#From = optional, destroyer (country)
on_country_destroyed = {
	events = {
		sleeper_tony.19
	}
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		sleeper_setup.6 #update sleeper senate modifiers
	}
}

# No scope, like on_game_start
on_bi_yearly_pulse = {
	events = {
		sleeper_setup.7 #give AI neighbors of the sleeper TN-3 Missions 
	}
}

# Triggered when two empires discover each other
# This = Empire 1
# From = Empire 2
# Fromfromfrom = System where contact occurred
on_first_contact = {
	events = {
		sleeper_dormant.1
	}
}

# Triggers when trying to open the diplomacy view for countries with custom diplomacy.
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		sleeper_dormant.7
		sleeper_berserk.20
		sleeper_dormant.21
	}
}

on_decade_pulse = {
	events = {
		sleeper_dormant.4
		sleeper_setup.8
	}
}

# Executed right after country has established communications with another country
# This = Country which established the communications
# From = Country which communications were established with
on_post_communications_established = {
	events = {
		sleeper_setup.5
	}
}

# A planets controller becomes a country not the same as the owner.
# Root = Planet
# From = Planet Owner
# FromFrom = Planet Controller (the one occupying)
on_planet_occupied = {
	events = {
		sleeper_dormant.8
		sleeper_berserk.9
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		sleeper_berserk.13
		sleeper_berserk.22
		sleeper_setup.11
	}
}

# Initial rebels manage to take control of the planet, happens before the new owner is set, after the war is created.
# This = Rebel Country
# From = Planet
# FromFrom = War
#on_rebels_take_planet = {
#	events = {
#		sleeper_berserk.22 #does not trigger, through attackes win instead
#	}
#}

# Planet has reached 0 pops from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_zero_pops = {
	events = {
		sleeper_dormant.11
	}
}

# This = owner of fleet 1 (loser)
# From = owner of fleet 2 (winner)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_space_battle_lost = {
	events = {
		sleeper_dormant.9
		sleeper_dormant.10
	}
}

# This = Ship
# From = Disabler Ship
on_ship_disabled = {
	events = {
		sleeper_dormant.13
	}
}

# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		sleeper_dormant.14
	}
}

# This = owner of fleet 1
# From = owner of fleet 2
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_entering_battle = {
	events = {
		sleeper_dormant.18
	}
}

# This = subject
# From = subject's overlord
on_becoming_subject = {
	events = {
		sleeper_awake.6 #add pop growth penalty to subjects
	}
}

# This = country
# From = opponent war leader
on_entering_war = {
	events = {
		sleeper_awake.8
	}
}

# A war has been lost
# Root = Loser Warleader
# From = Winner Warleader
# FromFrom = War
on_war_lost = {
	events = {
		sleeper_awake.6 #add pop growth penalty to subjects again after failed independence war
	}
}

#colossus stuff
on_destroy_planet_with_PLANET_KILLER_SLEEPER_HIVE_INTERGRATOR = {
	events = {
		sleeper_exploding_stuff.1
	}
}

on_destroy_planet_with_PLANET_KILLER_SLEEPER_HIVE_CREATOR = {
	events = {
		sleeper_exploding_stuff.3
	}
}

#blowing sleeper planets up
# Scope:
# this/root = planet that have been fired upon
# from = fleet that fired
on_destroy_planet_with_PLANET_KILLER_CRACKER = {
	events = {
		sleeper_dormant.12
	}
}
on_destroy_planet_with_PLANET_KILLER_SHIELDER = {
	events = {
		sleeper_dormant.12
	}
}
on_destroy_planet_with_PLANET_KILLER_NEUTRON = {
	events = {
		sleeper_dormant.12
	}
}
on_destroy_planet_with_PLANET_KILLER_GODRAY = {
	events = {
		sleeper_dormant.12
	}
}
on_destroy_planet_with_PLANET_KILLER_NANOBOTS = {
	events = {
		sleeper_dormant.12
	}
}
