#A district construction has been completed.
# This = Planet
on_district_complete = {
	events = {
		dyson_graphics.1
	}
}

# A district construction has demolished.
# This = Planet
on_district_demolished = {
	events = {
		dyson_graphics.8
	}
}

#A building construction has been completed.
#This = Planet
on_building_complete = {
	events = {
		dyson_graphics.9
		dyson_graphics.10
		dyson_graphics.11
		dyson_graphics.12
	}
}

# A building construction has finished, replacing another building.
# This = Planet
on_building_replaced = {
	events = {
		dyson_graphics.9
		dyson_graphics.10
		dyson_graphics.11
		dyson_graphics.12
	#building replacer events
		dyson_swarm_other.36
	}
}

# A pop has been added to the planet
# Root = pop
# From = planet
on_pop_added = {
	events = {
		origin.1
		dyson_swarm_other.41
	}
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		dyson_swarm_other.42
	}
}

# This = construction ship
# From = planet it is built on
# Fires when construction is complete,
# immediately before station is created
on_building_observation_station = {
	events = {
		dyson_starting.170
	}
}

# This = Ship
# From = Disabler Ship
on_ship_disabled = {
	events = {
		dyson_starting.118
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		dyson_starting.117
		dyson_starting.119
		dyson_starting.120
	}
}

# Triggers when the game starts
on_game_start = {
	events = {
		dyson_swarm_debug.2
	}
}
# Called during empire initialization when starting a new game if has_secondary_species game rule is true.
# Called before empire_init_create_capital_pops.
# scope: planet
# from: founder species
# fromfrom: secondary species (if exists)
empire_init_capital_planet = {
	events = {
		dyson_starting.1
		dyson_starting.11
	}
}

# called during empire initialization when starting a new game
# scope: country
empire_init_create_ships = {
	events = {
		dyson_starting.2
		dyson_starting.10
		dyson_starting.100
		dyson_starting.2000
	}
}

on_game_start_country = {
	events = {
		dyson_starting.4
		dyson_starting.2000
	}
}

# this = country
on_bi_yearly_pulse_country = {
	events = {
		dyson_starting.19
	}
}

# this = country
on_five_year_pulse_country = {
	events = {
		dyson_swarm_other.40
	}
}

# Planet has taken damage from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		dyson_swarm_other.20
	}
}

# A pop has finished purging
# This = Planet scope
# From = Country
# FromFrom = Pop
on_pop_purged = {
	events = {
		dyson_swarm_other.21
	}
}

on_destroy_planet_with_PLANET_KILLER_CRACKER = {
	events = {
		dyson_swarm_other.19
	}
}

# A colony has been destroyed. Called just before owner and controller is cleared
# Scope = Planet
on_colony_destroyed = {
	events = {
		#destroy planetary trading post upon destroying/abandoning planet
		dyson_swarm_other.26
	}
}

# Triggers event when ship enters a system
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	events = {
		dyson_swarm_other.28
	}
	random_events = {
		100 = 0
	}
}

# Called when a Starbase changes owner
# THIS = Ship (Starbase)
# FROM = Former Owner (Country)
on_starbase_transfer = {
	events = {
		dyson_swarm_other.31
	}
}

on_building_starbase_outpost = {
	events = {
		dyson_swarm_other.31
	}
}



