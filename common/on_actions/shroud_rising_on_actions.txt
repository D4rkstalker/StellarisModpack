on_game_start_country = {
	events = {
		shroud_rising_trigger.1 #player % message
		
	}
}	
	
# No scope, like on_game_start
on_monthly_pulse = {
	events = {		
		shroud_rising_trigger.0 #player % message for saved games				
		shroud_rising_shroud_rift.270 #triggers check to collapse unstable rifts
		shroud_rising_eye_of_terror.71 #slowly removes eye of terror rifts if sealed
		shroud_rising_eye_of_terror.110 #slowly adds eye of terror rifts if reopened			
		#shroud_rising_invasion.1 #test for incurions basic rift	
		#shroud_rising_invasion.3 #test for greater rift spawn
		#shroud_rising_invasion.7 #eye of terror incursion testing testing		
		#shroud_rising_invasion.3 #incursion greater rift testing
		# shroud_rising_trigger.4 #for TESTING only		
		# shroud_rising_eye_of_terror.202	#shroud storm for TESTING			
		# shroud_rising_eye_of_terror.200 #shroud world TESTING		
		#shroud_rising_eye_of_terror.206	#shroud cultist for TESTING
		#shroud_rising_shroud_rift.100 #shroud spawn army testing
		#shroud_rising_shroud_rift.103 #shroud spawn testing eye of terror
		#shroud_rising_shroud_rift.23 #shroud rift random testing			
		}
	
}


# No scope, like on_game_start
on_bi_yearly_pulse = {
	events = {		
		#shroud_rising_invasion.1 #incurions basic rift	
		shroud_rising_invasion.109 #test if spawn ancient god once 15 planets devoured
		#shroud_rising_invasion.7 #eye of terror incursion testing testing	
		
	}
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		shroud_rising_trigger.4 #EoT Spawn chain trigger start
		shroud_rising_invasion.1 #incurions basic rift
		shroud_rising_invasion.3 #greater rift spawn
		shroud_rising_shroud_rift.100 #shroud spawn on planets near rifts
		shroud_rising_shroud_rift.103 #shroud spawn on planets eye of terror
		
	}
	
}



# No scope, like on_game_start
on_five_year_pulse = {
	events = {
		shroud_rising_ambient.1	#shroud storm
		
	}	
}

# No scope, like on_game_start
on_decade_pulse = {
	events = {
		shroud_rising_invasion.7 #eye of terror incursion 
		shroud_rising_shroud_rift.23 #random unstable rift spawn
	}
}

# No scope, like on_game_start
on_mid_game_pulse = {
	events = {
		shroud_rising_trigger.3 #allows eye of terror to trigger now
	}
}

# No scope, like on_game_start
on_late_game_pulse = {
	events = {
	}
}

# this = country
on_monthly_pulse_country = {
	events = {
		
		shroud_rising_shroud_rift.991 #If system is owned, alert of local nightmares
		shroud_rising_shroud_rift.9991 #Stage 2 of nightmares		
		
	}
}

# this = country
on_yearly_pulse_country = {
	events = {
		
		
	}
}

on_ruler_set = {
	
}


# this = country
on_bi_yearly_pulse_country = {
	events = {
		shroud_rising_leader.22	#checks if there's a shroud chosen and adds cultist trait
	}
}

# this = country
on_five_year_pulse_country = {
	events = {
		shroud_rising_leader.10 #discover shroud cultist in government
	}
}


# this = country
on_decade_pulse_country = {
	events = {
		
	}
	
}

# this = country
on_mid_game_pulse_country = {
	events = {
	}
}

# this = country
on_late_game_pulse_country = {
	events = {
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
			
	}
}

# Fires for each planet every year (counting up from colonisation date, includes home planet)
on_colony_yearly_pulse = {
	
}

# Fires for each planet every 5 years (counting up from colonisation date, includes home planet)
on_colony_5_year_pulse = {
	random_events = {
		50 = 0
		50 = shroud_rising_cult_uprising.1 #uprising
		
	}	
}

# X years has passed since a planet was colonized (won't trigger on empire homeworld)
on_colony_2_year_old = {	
	random_events = {
		150 = 0
		5 = shroud_rising_colony.1 #Temple whispers
		
	}
}

# Triggers when pressing begin in the intro window
# This = country to press begin
on_press_begin = {
	events = {
		
	}
}

# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		shroud_rising_invasion.9 #horrors devour planet and turn it into shroud world
		shroud_rising_invasion.11 #cultists invade
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		shroud_rising_invasion.12 #if cult wins, add cult hub modifier
	}
}

# Triggers country_event for the attacker upon defeat
# This = country, attack leader
# From = country, planet owner
# FromFrom = planet
on_planet_attackers_lose = {
	events = {
	}
}

# Triggers country_event for the defender upon victory
# Root = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_win = {
	events = {
		 shroud_rising_cult_uprising.7 #defeat a cult uprising		 
	}
	random_events = {
		96 = 0 #others were 2
		2 = shroud_rising_leader.3 #General spawn with special trait vs entities
		2 = shroud_rising_leader.4 #General spawn with special trait  vs cultists
	}
}

# Triggers country_event for the defender upon defeat
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_lose = {
	events = {
		 shroud_rising_cult_uprising.8 #defeated by a cult uprising
		
	}
}

# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_perp = {
	events = {
		}
	random_events = {		
		96 = 0 #others were 2
		2 = shroud_rising_leader.1		#admiral trait for entities
		2 = shroud_rising_leader.2		#admiral trait for cultists
	}
}


# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		shroud_rising_invasion.100
		shroud_rising_invasion.107
	}
}

# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
		shroud_rising_invasion.101
	}
	
}

# An army has been killed in ground combat
# This = owner
# From = army
# FromFrom = opponent
# FromFromFrom = planet
on_army_killed_in_combat = {
	events = {		
		shroud_rising_invasion.102
		shroud_rising_invasion.103
		
	}	
}

# An army has ceased to exist for any other reason
# This = country
# From = army
on_army_killed_no_combat = {
	events = {
		
	}
}
# Fires when you first get intel (_low and up) on a new system
# Scope = Country
# From = System
on_system_first_visited = {
	events = {
	}
}

# Triggers event when each country first sends a ship into the system (once per country)
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system_first_time = {
	events = {
		
	}
	
}

# A fleet has entered a system | See also: on_fleet_auto_move_arrival
# Scope = Fleet
# From = System
on_entering_system_fleet = {
	events = {
		shroud_rising_shroud_rift.9992 #small tear system entry 1st time
		shroud_rising_shroud_rift.106 #shroud rift system entry 1st time
		shroud_rising_eye_of_terror.6 #eye of terror system entry 1st time
	}
}

# Executed when a megastructure has a new owner
# this = new owner
# from = megastructure
# fromfrom = old owner (if existing)
on_megastructure_change_owner = {
	events = {
		
	}
}

# A Megastructure has been built
# Root = Country
# From = Megastructure
# FromFrom = System
# FromFromFrom = Fleet
on_megastructure_built = {
	events = {
		
	}
}

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgraded = {
	events = {
		
	}
}

# A leader leveled up.
# Scope = Country
# From = Leader
on_leader_level_up = {
	events = {
		
	}
	random_events = {		
		90 = 0 
		10 = shroud_rising_leader.21 #give random character trait
		
	}
}