##Maint Drone

maintenance_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_maintenance_depot

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	resources = {
		category = planet_jobs

		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_machine_maintenance_protocols
				}
			}
			unity = 1
		}

        produces = {
			trigger = {
				exists = owner
				owner = {
					if = {
                        OR = {
                            has_policy_flag = flag_loose_drone
                            has_policy_flag = flag_variant_drone
                            has_policy_flag = flag_adapt_drone
                        }
                    }
				}
			}
			unity = 1
		}
        
        produces = {
            trigger = {
                exists = owner
                owner = {
                    has_policy_flag = flag_rigid_drone
                }
            }
            unity = 2
        }

		produces = {
            trigger = {
                exists = owner
                owner = {
                    has_policy_flag = flag_drill_drone
                }
            }
            minerals = 1
			alloys = 0.25
        }

		produces = {
            trigger = {
                exists = owner
                owner = {
                    has_policy_flag = flag_sam_drone
                }
            }
            physics_research = 0.75
			society_research = 0.75
			engineering_research = 0.75
        }
	}

	possible_precalc = can_fill_drone_job

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			owner = { has_active_tradition = tr_versatility_finish }
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet.orbital_defence
			planet.orbital_defence = {
				exists = starbase
				starbase = {
					has_starbase_building = ring_maintenance_hub
				}
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				is_ringworld = yes
				has_building = building_alpha_hub
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

    triggered_planet_modifier = {						###mod###
		potential = {
			exists = owner
			owner = { has_policy_flag = flag_loose_drone }
		}

		modifier = {
            planet_pop_assembly_organic_add = 0.1
        }
	}

    triggered_planet_modifier = {						###mod###
		potential = {
			exists = owner
			owner = { 
                if = {
                    OR = {
                        has_policy_flag = flag_variant_drone
                        has_policy_flag = flag_adapt_drone
                    }
                }
            }
		}

		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {						###mod###
		potential = {
			exists = owner
			owner = { has_policy_flag = flag_strong_drone }
		}

		modifier = {
			planet_jobs_simple_drone_produces_mult = 0.02
		}
	}		

    triggered_planet_modifier = {						###mod###
		potential = {
			exists = owner
			owner = {
				if = {
                    OR = {
                        has_policy_flag = flag_total_drone 
                        has_policy_flag = flag_basic_drone
                    }
				} 
            }
		}

		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {						###mod###
		potential = {
			exists = owner
			owner = { has_policy_flag = flag_over_drone }
		}

		planet_amenities_no_happiness_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {						###mod###
		potential = {
			exists = owner
			owner = {
				has_policy_flag = flag_assisted_drone
            }
		}

		modifier = {
			empire_size_mult = -0.01
		}

		planet_amenities_no_happiness_add = -2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {						###mod###
		potential = {
			exists = owner
			owner = {
				has_policy_flag = flag_empath_drone
            }
		}

		modifier = {
			diplo_weight_mult = 0.01
		}
	}

	triggered_planet_modifier = {						###mod###
		potential = {
			exists = owner
			owner = { 
				if = {
                    OR = {
                        has_policy_flag = flag_sam_drone 
                        has_policy_flag = flag_empath_drone
						has_policy_flag = flag_drill_drone
                    }
				} 
			}
		}

		planet_amenities_no_happiness_add = -2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {						###mod###
		potential = {
			exists = owner
			owner = { has_policy_flag = flag_zombie_drone }
		}

		modifier = {
            planet_pop_assembly_organic_add = 0.3
			planet_crime_no_happiness_add = 4
        }

		planet_amenities_no_happiness_add = -3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {						###mod###
		potential = {
			exists = owner
			owner = { 
                has_policy_flag = flag_code_drone
            }
		}

		modifier = {
			planet_building_build_speed_mult = 0.02
		}
	}

	weight = {
		weight = @maintenance_drone_job
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			mult = value:job_weights_modifier|JOB|maintenance_drone|RESOURCE|unity|FACTOR|0.25|
			exists = owner
			owner = {
				has_valid_civic = civic_machine_maintenance_protocols
			}
		}
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}

		modifier = {
			factor = 1000 # <- hive mind amenities jobs are non specialist so they have base weight 1 instead of 1000 but we still want them
			NOT = { has_job = maintenance_drone }
			planet = {
				free_amenities < 3
			}
		}

		modifier = {
			factor = 1000 # <- hive mind amenities jobs are non specialist so they have base weight 1 instead of 1000 but we still want them
			has_job = maintenance_drone
			planet = {
				free_amenities < 8
			}
		}
	}
}