GAPS_water_collector = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_power_plant
	clothes_texture_index = 2
	
	possible = {
		hidden_trigger = { exists = owner }
		specialist_job_check_trigger = yes
		owner = { is_gestalt = no }
	}

	resources = {
		category = planet_farmers
		produces = {
			sr_GAPS_water = 1
		}
		produces = {
			trigger = { 
				is_lithoid = no
				is_robotic_species = no
			}
			food = 1
		}
		produces = {
			trigger = { 
				is_lithoid = yes
				is_robotic_species = no
			}
			minerals = 1
		}
		produces = {
			trigger = { 
				is_lithoid = no
				is_robotic_species = yes
			}
			energy = 1
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_agrarian_idyll }
		}
		modifier = {
			planet_amenities_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_agrarian_idyll }
			OR = {
				has_trait = trait_robot_domestic_protocols
				has_trait = trait_charismatic
			}
		}
		modifier = {
			planet_amenities_add = 0.4
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_agrarian_idyll }
			has_trait = trait_repugnant
		}
		modifier = {
			planet_amenities_add = -0.4
		}
	}
	#has_global_flag = photosynthesis_active  not sure how to make the trigger work
	weight = {
		weight = @specialist_job_weight
		modifier = {
			factor = 10
			exists = owner
		}
	}
}

GAPS_water_collector_gestalt = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_power_plant
	clothes_texture_index = 2
	
	possible = {
		hidden_trigger = { exists = owner }
		drone_job_check_trigger = yes
		owner = { is_gestalt = yes }
	}

	resources = {
		category = planet_farmers
		produces = {
			sr_GAPS_water = 1
		}
		produces = {
			trigger = { 
				is_lithoid = no
				is_robotic_species = no
			}
			food = 1
		}
		produces = {
			trigger = { 
				is_lithoid = yes
				is_robotic_species = no
			}
			minerals = 1
		}
		produces = {
			trigger = { 
				is_lithoid = no
				is_robotic_species = yes
			}
			energy = 1
		}
	}
	weight = {
		weight = @complex_drone_job_weight
		modifier = {
			factor = 10
			exists = owner
		}
	}
}
GAPS_depth_strider = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_power_plant
	clothes_texture_index = 2
	
	possible = {
		hidden_trigger = { exists = owner }
		specialist_job_check_trigger = yes
		owner = { is_gestalt = no }
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		battle_thrall_job_check_trigger = yes
	}

	resources = {
		category = planet_soldiers
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_citizen_service }
			}
			unity = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_police_state }
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
		upkeep = {
			sr_GAPS_water = 10
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 2
	}

	planet_modifier = {
		planet_crime_add = -25
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_non_swapped_tradition = tr_domination_judgment_corps }
		}
		modifier = {
			planet_crime_add = -5
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = { has_modifier = anticrime_campaign }
		}
		modifier = {
			planet_crime_add = -10
		}
	}
	country_modifier = {
		country_naval_cap_add = 4
	}

	triggered_country_modifier = {
		potential = {
			exists = planet
			planet = {
				exists = owner
				owner = { has_technology = "tech_ground_defense_planning" }
			}
		}
		modifier = {
			country_naval_cap_add = 2
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 3
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet
			planet = {
				has_modifier = martial_law
			}
		}
		modifier = {
			planet_stability_add = 5
		}
	}
	
	#has_global_flag = photosynthesis_active  not sure how to make the trigger work
	weight = {
		weight = @specialist_job_weight
		modifier = {
			factor = 10
			exists = owner
		}
	}
}

GAPS_depth_strider_gestalt = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_power_plant
	clothes_texture_index = 2
	
	possible = {
		hidden_trigger = { exists = owner }
		drone_job_check_trigger = yes
		owner = { is_gestalt = yes }
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		drone_job_check_trigger = yes
	}
	
	resources = {
		category = planet_jobs
		upkeep = {
			sr_GAPS_water = 10
		}
	}

	planet_modifier = {
		planet_crime_no_happiness_add = -20
	}

	pop_modifier = {
		pop_defense_armies_add = 2
	}
	
	country_modifier = {
		country_naval_cap_add = 4
	}

	triggered_country_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = { has_technology = "tech_ground_defense_planning" }
			}
		}
		modifier = {
			country_naval_cap_add = 2
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 3
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				OR = {
					has_modifier = compliance_protocols
					has_modifier = hunter_killer_drones
				}
			}
		}
		modifier = {
			planet_stability_add = 5
		}
	}


	weight = {
		weight = @complex_drone_job_weight
		modifier = {
			factor = 10
			exists = owner
		}
	}
}
GAPS_water_celebrant = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_power_plant
	clothes_texture_index = 2
	
	possible = {
		hidden_trigger = { exists = owner }
		specialist_job_check_trigger = yes
		owner = { is_gestalt = no }
	}
	
	planet_modifier = {
		planet_amenities_add = 2
	}
	resources = {
		category = planet_jobs
		produces = {
			unity = 10
		}
		upkeep = {
			sr_GAPS_water = 5
		}
	}
	#has_global_flag = photosynthesis_active  not sure how to make the trigger work
	weight = {
		weight = @specialist_job_weight
		modifier = {
			factor = 10
			exists = owner
		}
	}
}

GAPS_water_celebrant_gestalt = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_power_plant
	clothes_texture_index = 2
	
	possible = {
		hidden_trigger = { exists = owner }
		drone_job_check_trigger = yes
		owner = { is_gestalt = yes }
	}
	planet_modifier = {
		planet_amenities_no_happiness_add = 2
	}
	resources = {
		category = planet_jobs
		produces = {
			unity = 10
		}
		upkeep = {
			sr_GAPS_water = 5
		}
	}
	weight = {
		weight = @complex_drone_job_weight
		modifier = {
			factor = 10
			exists = owner
		}
	}
}

GAPS_pure_water_researcher = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_power_plant
	clothes_texture_index = 2
	
	possible = {
		hidden_trigger = { exists = owner }
		specialist_job_check_trigger = yes
		owner = { is_gestalt = no }
		complex_specialist_job_check_trigger = yes
	}
	resources = {
		category = planet_researchers
		produces = {
			physics_research = 6
			engineering_research = 3
			society_research = 3
		}
		upkeep = {
			sr_GAPS_water = 10
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_technocracy }
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					has_edict = research_subsidies
				}
			}
			energy = 1
		}
	}
	#has_global_flag = photosynthesis_active  not sure how to make the trigger work
	weight = {
		weight = @specialist_job_weight
		modifier = {
			factor = 10
			exists = owner
		}
	}
}

GAPS_pure_water_researcher_gestalt = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_power_plant
	clothes_texture_index = 2
	
	possible = {
		hidden_trigger = { exists = owner }
		drone_job_check_trigger = yes
		owner = { is_gestalt = yes }
	}
	resources = {
		category = planet_researchers
		produces = {
			physics_research = 6
			engineering_research = 3
			society_research = 3
		}
		upkeep = {
			sr_GAPS_water = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			
			minerals = 6
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_machine_empire = yes }
			}
			energy = 4
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					has_edict = research_subsidies
				}
			}
			energy = 1
		}
	}
	weight = {
		weight = @complex_drone_job_weight
		modifier = {
			factor = 10
			exists = owner
		}
	}
}