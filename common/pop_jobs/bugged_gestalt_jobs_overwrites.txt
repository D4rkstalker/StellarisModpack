# OVERWRITES
# - BRAIN DRONE
# - WARRIOR DRONE
# - SYNAPSE DRONE
# - EVALUATOR
# - COORDINATOR

maintenance_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_maintenance_depot

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	resources = {
		category = planet_jobs
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_machine_maintenance_protocols
				}
			}
			unity = 1
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_ethic = ethic_form_affective
					has_ethic = ethic_form_autonomous
				}
			}
			consumer_goods = 3
		}
	}

	possible_precalc = can_fill_drone_job

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			owner = { has_active_tradition = tr_versatility_finish }
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet.orbital_defence
			planet.orbital_defence = {
				exists = starbase
				starbase = {
					has_starbase_building = ring_maintenance_hub
				}
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				is_ringworld = yes
				has_building = building_alpha_hub
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @maintenance_drone_job
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			mult = value:job_weights_modifier|JOB|maintenance_drone|RESOURCE|unity|FACTOR|0.25|
			exists = owner
			owner = {
				has_valid_civic = civic_machine_maintenance_protocols
			}
		}
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}

		modifier = {
			factor = 1000 # <- hive mind amenities jobs are non specialist so they have base weight 1 instead of 1000 but we still want them
			NOT = { has_job = maintenance_drone }
			planet = {
				free_amenities < 3
			}
		}

		modifier = {
			factor = 1000 # <- hive mind amenities jobs are non specialist so they have base weight 1 instead of 1000 but we still want them
			has_job = maintenance_drone
			planet = {
				free_amenities < 8
			}
		}
	}
}

brain_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 4
			engineering_research = 4
			society_research = 4
		}
		upkeep = {
			minerals = 6
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			minerals = 3
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 2
			engineering_research = 2
			society_research = 2
		}
	}
    #Bug Branch
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { has_valid_civic = civic_bugged_hive_researcher }
			}
			modifier = {
				planet_researchers_produces_mult = 0.01
			}
		}
	#Bug Branch

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|brain_drone|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}

warrior_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	country_modifier = {
		country_naval_cap_add = 4
	}
	resources = {
		category = planet_soldiers
	}

	triggered_country_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = { has_technology = "tech_ground_defense_planning" }
			}
		}
		modifier = {
			country_naval_cap_add = 2
		}
	}
	# Bug Branch
		inline_script = "jobs/bugged_soldier_effects"
	# Bug Branch
	pop_modifier = {
		pop_defense_armies_add = 3
	}


	triggered_planet_modifier = {
		modifier = {
			planet_stability_add = 1
		}
		mult = planet.modifier:job_soldier_stability_add
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	weight = {
		weight = 5
		modifier = {
			weight = 100
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 10
			planet = {
				OR = {
					has_modifier = compliance_protocols
					has_modifier = hunter_killer_drones
				}
			}
		}
		modifier = {
			factor = 4
			has_trait = trait_resilient
		}
		modifier = {
			factor = 4
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 3
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 0
			planet = { num_pops < 12 }
			owner = { is_ai = yes }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 1.2
			has_trait = trait_cybernetic
		}
	}
}

synapse_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_hive_capital

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 2
			energy = 2
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 2
			energy = 2
		}
		#Bug Branch
			produces = {
				trigger = {
					owner = {
						has_valid_civic = civic_bugged_hive_cognitive_focus
					}
				}
				unity = 1
			}
		#Bug Branch
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_hivemind }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	#Bug Branch
		triggered_country_modifier = {
			potential = {
				exists = owner
				owner = {
					has_valid_civic = civic_bugged_hive_cognitive_focus
				}
			}
			country_edict_fund_add = 2
			mult = value:job_total_output_modifier|JOB|synapse_drone|RESOURCE|unity|
		}
	#Bug Branch

	# Bug Branch
		inline_script = "jobs/bugged_admin_megastructure_effects"
	# Bug Branch
    
    triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_synchronicity_instinctive_synchronization }
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|synapse_drone|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}
}

evaluator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_simulation_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_evaluators
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 2
		}
	}

	#Bug Branch
		inline_script = "jobs/bugged_evaluator_outputs"
	#Bug Branch

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_synchronicity_integrated_preservation
			}
		}
		modifier = {
			planet_crime_no_happiness_add = -3
		}
	}

	triggered_planet_modifier = {
		planet_amenities_no_happiness_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|evaluator|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}
}

coordinator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_machine_capital

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 4
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_machine }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	# Bug Branch
		inline_script = "jobs/bugged_admin_megastructure_effects"
	# Bug Branch

		triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|coordinator|RESOURCE|unity|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}