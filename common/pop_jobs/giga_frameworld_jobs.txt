
# unemployment filler job for the frameworld
frame_maintenance_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	#is_capped_by_modifier = no
	building_icon = building_maintenance_depot
	icon = maintenance_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	resources = {
		category = planet_jobs
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_machine_maintenance_protocols
				}
			}
			unity = 0.25
		}

		produces = {
			energy = 0.5
		}
	}

	possible_precalc = can_fill_drone_job

	possible = {
		exists = owner
		owner = {
			is_machine_empire = yes
			has_origin = origin_frameworld
		}

		exists = planet
		planet = {
			is_planet_class = pc_giga_frameworld
		}
	}

	planet_modifier = {
		planet_pop_assembly_add = -0.25
		planet_jobs_productive_upkeep_mult = 0.0025
		planet_jobs_productive_produces_mult = 0.0025
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				free_housing < 0
			}
		}
		planet_pop_assembly_add = -0.25
	}

	weight = {
		weight = @special_job_weight

		modifier = {
			factor = -10000

			planet = {
				not = {
					has_modifier = frameworld_expanded_maintenance_protocol
				}
			}
		}
	}
}

# big amenities job for the maintenance districts with advanced nexus upgrade
frame_maintenance_overseer = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_maintenance_depot
	icon = maintenance_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	resources = {
		category = planet_jobs
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_machine_maintenance_protocols
				}
			}
			unity = 3
		}

		upkeep = {
			energy = 4
		}
	}

	possible_precalc = can_fill_drone_job

	possible = { NOT = { has_trait = trait_nerve_stapled } }

	triggered_planet_modifier = {
		potential = { always = yes }
		planet_amenities_no_happiness_add = 12
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	planet_modifier = {
		planet_jobs_simple_drone_produces_mult = 0.01
	}

	weight = {
		weight = value:giga_complex_drone_no_resource_weight|JOB|frame_maintenance_overseer|AMENITIES|yes|
		multiply = value:giga_amenities_dynamic_weight|JOB|frame_maintenance_overseer|
	}
}

# special warrior drone which spawns much stronger armies
frameworld_defender_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold
	icon = warrior_drone

	country_modifier = {
		country_naval_cap_add = 10
	}

	triggered_country_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = { has_technology = "tech_ground_defense_planning" }
			}
		}
		modifier = {
			country_naval_cap_add = 5
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 5
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				OR = {
					has_modifier = compliance_protocols
					has_modifier = hunter_killer_drones
				}
			}
		}
		modifier = {
			planet_stability_add = 10
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_jobs
		produces = {
			unity = 3
		}
	}

	weight = {
		weight = value:giga_menial_drone_weight|JOB|frameworld_defender_drone|RESOURCE|unity|
		multiply = 100
		multiply = value:giga_army_weight
	}
}

frameworld_outpost_job = {
	category = worker
	icon = colonist
	is_capped_by_modifier = no

	possible_pre_triggers = {
		has_owner = yes
	}

	possible = {
		owner = {
			is_country_type = frameworld_outpost_country_type
		}
	}

	pop_modifier = {
		pop_housing_usage_mult = -1
		pop_amenities_usage_mult = -1
		planet_pops_upkeep_mult = -1
	}

	planet_modifier = {
		planet_crime_add = -1
	}

	weight = {
		base = 100
	}
}