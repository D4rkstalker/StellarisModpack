# MAKE SURE that any overwrite which ends up here gives every modifier
# so that we don't remove a modifier that anyone else added
# this is for categories where things will break if we don't have the other modifiers

# any unused modifiers *will* cause the log to complain, but that's ok, it doesn't really do a whole lot

# replicator job, used by the frameworld outpost modifier to up base assembly cost with the assembly speed boost
planet_pop_assemblers = {
	parent = planet_jobs
	modifier_category = pop
	generate_add_modifiers  = { cost produces upkeep }
	generate_mult_modifiers = { cost produces upkeep }
}

# as the "prime" megastructures mod, we claim authority over the megas economic category
megastructures = {
	use_for_ai_budget = yes
	parent = country
	modifier_category = megastructure
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}

	generate_mult_modifiers = { cost produces upkeep }
    generate_add_modifiers 	= { cost produces upkeep }

	# KILOSTRUCTURES
	triggered_cost_modifier 	= { key = kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_kilostructure = yes not = { is_technical_mega = yes } } }
	triggered_produces_modifier = { key = kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_kilostructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_kilostructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier   = { key = kilostructures_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure is_kilostructure = yes nor = { giga_amb_supertensiles_exception = yes is_technical_mega = yes is_ruined_mega = yes } } }

	# THIRD PARTY KILOS
	triggered_cost_modifier 	= { key = third_party_kilos modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_kilostructure = yes not = { is_technical_mega = yes } } }
	triggered_produces_modifier = { key = third_party_kilos modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_kilostructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = third_party_kilos modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_kilostructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = third_party_kilos_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure is_third_party_kilostructure = yes nor = { giga_amb_supertensiles_exception = yes is_technical_mega = yes is_ruined_mega = yes } } }

	# MEGASTRUCTURES
	triggered_cost_modifier 	= { key = megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure nor = { is_kilostructure = yes is_gigastructure = yes is_technical_mega = yes } } }
	triggered_produces_modifier = { key = megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure nor = { is_kilostructure = yes is_gigastructure = yes  is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure nor = { is_kilostructure = yes is_gigastructure = yes  is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = megastructures_only_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure nor = { giga_amb_supertensiles_exception = yes is_kilostructure = yes is_gigastructure = yes  is_technical_mega = yes is_ruined_mega = yes } } }

	# GIGASTRUCTURES
	triggered_cost_modifier 	= { key = gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_gigastructure = yes not = { is_technical_mega = yes } } }
	triggered_produces_modifier = { key = gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_gigastructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_gigastructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = gigastructures_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure is_gigastructure = yes nor = { giga_amb_supertensiles_exception = yes is_technical_mega = yes is_ruined_mega = yes } } }

	# THIRD PARTY GIGAS
	triggered_cost_modifier 	= { key = third_party_gigas modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_gigastructure = yes not = { is_technical_mega = yes } } }
	triggered_produces_modifier = { key = third_party_gigas modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_gigastructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = third_party_gigas modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_gigastructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = third_party_gigas_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure is_third_party_gigastructure = yes nor = { giga_amb_supertensiles_exception = yes is_technical_mega = yes is_ruined_mega = yes } } }

	# REPAIRING WRECKS
	triggered_cost_modifier 	= { key = megastructure_repair modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes } }
	triggered_cost_modifier 	= { key = kilostructure_repair modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_kilostructure = yes } }
	triggered_cost_modifier 	= { key = megastructure_only_repair modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_cost_modifier 	= { key = gigastructure_repair modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_gigastructure = yes } }

	# WRECKS
	triggered_produces_modifier = { key = wrecked_megastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes } }
	triggered_upkeep_modifier 	= { key = wrecked_megastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes } }
	triggered_produces_modifier = { key = wrecked_kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_kilostructure = yes } }
	triggered_upkeep_modifier 	= { key = wrecked_kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_kilostructure = yes } }
	triggered_produces_modifier = { key = wrecked_megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_upkeep_modifier 	= { key = wrecked_megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_produces_modifier = { key = wrecked_gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_gigastructure = yes } }
	triggered_upkeep_modifier 	= { key = wrecked_gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_gigastructure = yes } }

	# RESTORED MEGAS
	triggered_produces_modifier = { key = restored_megastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes } }
	triggered_upkeep_modifier 	= { key = restored_megastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes } }
	triggered_produces_modifier = { key = restored_kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes is_kilostructure = yes } }
	triggered_upkeep_modifier 	= { key = restored_kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes is_kilostructure = yes } }
	triggered_produces_modifier = { key = restored_megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_upkeep_modifier 	= { key = restored_megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_produces_modifier = { key = restored_gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes is_gigastructure = yes } }
	triggered_upkeep_modifier 	= { key = restored_gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes is_gigastructure = yes } }
}

megastructures_habitat = {
	use_for_ai_budget = yes
	parent = giga_kilostructures
	modifier_category = megastructure

	generate_add_modifiers = { cost produces upkeep }
	generate_mult_modifiers = { cost produces upkeep }
}

megastructures_hyper_relay = {
	parent = giga_kilostructures
	modifier_category = megastructure
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}