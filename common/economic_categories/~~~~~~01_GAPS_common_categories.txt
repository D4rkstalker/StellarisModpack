
planet_pops = {
	parent = planets
	
	generate_add_modifiers = {
		upkeep
		produces
	}
	generate_mult_modifiers = {
		upkeep
		produces
	}

	triggered_upkeep_modifier = {
		key = planet_pops_robotics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = yes
		}
	}
	
	triggered_upkeep_modifier = {
		key = planet_pops_organics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = no
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			mult
			add
		}
		trigger = {
			has_job = unemployed
		}
	}

	triggered_produces_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			mult
			add
		}
		trigger = {
			has_job = unemployed
		}
	}
}

unemployment_resources = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
planet_deviant_drone = {
    icon = "job_deviant_drone"
    parent = planet_jobs
    generate_mult_modifiers = {
        produces
        upkeep
    }
    generate_add_modifiers = {
        produces
        upkeep
    }
}
planet_corrupt_drone = {
    icon = "job_corrupt_drone"
    parent = planet_jobs
    generate_mult_modifiers = {
        produces
        upkeep
    }
    generate_add_modifiers = {
        produces
        upkeep
    }
}
planet_GAPS_Water_Collector_Jobs = {
	parent = planet_jobs
	generate_mult_modifiers = {
		cost
		produces
        upkeep
	}

	generate_add_modifiers = {
		cost
		produces
        upkeep
	}
}

planet_GAPS_UndergrounderJobs = {
	parent = planet_jobs
	generate_mult_modifiers = {
		cost
		produces
        upkeep
	}

	generate_add_modifiers = {
		cost
		produces
        upkeep
	}
}
deposit_blockers = {
	use_for_ai_budget = yes
	generate_add_modifiers = {
		cost
        produces
	}
	generate_mult_modifiers = {
		cost
        produces
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}

planet_deposits = {
	parent = planets
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
leaders = {
	use_for_ai_budget = yes
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}