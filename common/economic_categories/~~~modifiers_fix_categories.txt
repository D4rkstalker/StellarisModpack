#Everything with # means they will load with vanilla (AKA no changes)
#buffer = {
#	hidden = yes
#	use_for_ai_budget = yes
#}

#country = {
#	hidden = yes
#	generate_mult_modifiers = {
#		produces
#		cost
#	}
#
#	generate_add_modifiers = {
#		produces
#		cost
#	}
#modifier category: economic_unit is fine
#}

# Base income of country
country_base = {
	parent = country
	generate_add_modifiers = {
		produces
	}
    generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}

#trade = {
#	use_for_ai_budget = yes
#}

#trade_routes = {
#	parent = trade
#}

#situations = { #added in 3.4
#	parent = country
#}

#resolutions = {
#	parent = country
#	use_for_ai_budget = yes
#	generate_mult_modifiers = {
#		cost
#	}
#}	
		   
edicts = {
	use_for_ai_budget = yes
	parent = country
	ai_use_parent_for_resources_upkeep = { #aren't most of edicts used unity as upkeep?
		unity
		energy
		food
	}
	generate_mult_modifiers = {
		produces 
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

rare_edicts = {
	use_for_ai_budget = no			
	parent = edicts
	
	generate_mult_modifiers = {
		produces 
		cost
		upkeep
	}

	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

#ship_edicts = {
#	parent = rare_edicts
#	use_for_ai_budget = no
#}

campaigns = {
	use_for_ai_budget = no				
	parent = edicts
	generate_mult_modifiers = {
		produces 
		cost
		upkeep
	}

	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

decisions = {
	use_for_ai_budget = yes
	parent = country
    generate_mult_modifiers = {
		produces 
		cost
	}

	generate_add_modifiers = {
		produces
		cost
	}
}

###for gigastructure modifiers, use their category instead
megastructures = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	modifier_category = megastructure
}

megastructures_habitat = {
	use_for_ai_budget = yes
	parent = megastructures
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	modifier_category = megastructure
}

#megastructures_hyper_relay = { #added in 3.4, its a buildable highway in space right? we can build highway or at least called it speedway
#	parent = megastructures
#	use_for_ai_budget = yes
#
#	ai_use_parent_for_resources_upkeep = {
#		energy
#		consumer_goods
#	}
#	generate_add_modifiers = {
#		upkeep
#	}
#	modifier_category = megastructure
#}

#in 3.4 offspring ships added
#during 3.6 beta phase 1 to 3, size-related ships are separated from ships category, they can have their own category with ships as their parent (supposedly)
ships = { 
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		upkeep
		cost
	}
	
	generate_add_modifiers = {
		upkeep
		cost
	}

	ai_use_parent_for_resources_upkeep = {
		energy
		minerals
		food
	}

	parent = country
	modifier_category = ship

	###starbase_shipyard_build
		triggered_cost_modifier = {
			key = starbase_shipyard_build
			use_parent_icon = yes

			modifier_types = {
				mult
				add
			}
		}
	###

	###gdf_ship
		triggered_cost_modifier = {
			key = gdf_ship
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				has_ship_owner_type = galactic_community
			}
		}
		
		triggered_upkeep_modifier = {
			key = gdf_ship
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				has_ship_owner_type = galactic_community
			}
		}
	###

	###ship_corvette
		triggered_cost_modifier = {
			key = ship_corvette
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = corvette
					is_ship_size = offspring_corvette
					is_ship_size = frigate
				}
			}
		}

		triggered_upkeep_modifier = {
			key = ship_corvette
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = corvette
					is_ship_size = offspring_corvette
					is_ship_size = frigate
				}
			}
		}
	###

	###ship_destroyer
		triggered_cost_modifier = {
			key = ship_destroyer
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = destroyer
					is_ship_size = offspring_destroyer
				}
			}
		}

		triggered_upkeep_modifier = {
			key = ship_destroyer
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = destroyer
					is_ship_size = offspring_destroyer
				}
			}
		}
	###

	###ship_cruiser
		triggered_cost_modifier = {
			key = ship_cruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = cruiser
					is_ship_size = offspring_cruiser
				}
			}
		}

		triggered_upkeep_modifier = {
			key = ship_cruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = cruiser
					is_ship_size = offspring_cruiser
				}
			}
		}
	###

	###ship_battleship
		triggered_cost_modifier = {
			key = ship_battleship
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = battleship
					is_ship_size = offspring_battleship
				}
			}
		}

		triggered_upkeep_modifier = {
			key = ship_battleship
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = battleship
					is_ship_size = offspring_battleship
				}
			}
		}
	###

	###ship_titan
		triggered_cost_modifier = {
			key = ship_titan
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = titan
			}
		}
		triggered_upkeep_modifier = {
			key = ship_titan
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = titan
			}
		}
	###

	###ship_juggernaut
		triggered_cost_modifier = {
			key = ship_juggernaut
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = juggernaut
			}
		}
		
		triggered_upkeep_modifier = {
			key = ship_juggernaut
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = juggernaut
			}
		}
	###

	###ship_colossus
		triggered_cost_modifier = {
			key = ship_colossus
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = colossus
			}
		}
		triggered_upkeep_modifier = {
			key = ship_colossus
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = colossus
			}
		}
	###

	###ship_military_station_small
		triggered_cost_modifier = {
			key = ship_military_station_small
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = military_station_small
			}
		}

		triggered_upkeep_modifier = {
			key = ship_military_station_small
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = military_station_small
			}
		}
	###

	###ship_ion_cannon
		triggered_cost_modifier = {
			key = ship_ion_cannon
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = ion_cannon
			}
		}
		
		triggered_upkeep_modifier = {
			key = ship_ion_cannon
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = ion_cannon
			}
		}
	###

	###ship_science
		triggered_cost_modifier = {
			key = ship_science
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_class = shipclass_science_ship
			}
		}

		triggered_upkeep_modifier = {
			key = ship_science
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_class = shipclass_science_ship
			}
		}
	###

	###ship_military
		triggered_cost_modifier = {
			key = ship_military
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_class = shipclass_military
					is_ship_class = shipclass_military_special
				}
			}
		}

		triggered_upkeep_modifier = {
			key = ship_military
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_class = shipclass_military
					is_ship_class = shipclass_military_special
				}
			}
		}
	###

	######MOD category below
	######NSC season 7

	###ship_StrikeCruiser
		triggered_cost_modifier = {
			key = ship_StrikeCruiser
			use_parent_icon = yes
			modifier_types = { 
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = StrikeCruiser
			}
		}
		triggered_upkeep_modifier = {
			key = ship_StrikeCruiser
			use_parent_icon = yes
			modifier_types = { 
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = StrikeCruiser
			}
		}
	###

	###ship_Battlecruiser
		triggered_cost_modifier = {
			key = ship_Battlecruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = Battlecruiser
			}
		}
		triggered_upkeep_modifier = {
			key = ship_Battlecruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = Battlecruiser
			}
		}
	###

	###ship_Carrier
		triggered_cost_modifier = {
			key = ship_Carrier
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = Carrier
			}
		}
		triggered_upkeep_modifier = {
			key = ship_Carrier
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = Carrier
			}
		}
	###

	###ship_Dreadnought
		triggered_cost_modifier = {
			key = ship_Dreadnought
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = Dreadnought
			}
		}
		triggered_upkeep_modifier = {
			key = ship_Dreadnought
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = Dreadnought
			}
		}
	###

	###ship_Flagship
		triggered_cost_modifier = {
			key = ship_Flagship
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = Flagship
			}
		}
		triggered_upkeep_modifier = {
			key = ship_Flagship
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = Flagship
			}
		}
	###

	###ship_explorationship
		triggered_cost_modifier = {
			key = ship_explorationship
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = explorationship
			}
		}

		triggered_upkeep_modifier = {
			key = ship_explorationship
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = explorationship
			}
		}
	###

	###ship_xl_cannon
		triggered_cost_modifier = {
			key = ship_xl_cannon
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = xl_cannon
			}
		}

		triggered_upkeep_modifier = {
			key = ship_xl_cannon
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = xl_cannon
			}
		}
	###

	###Realist Ships
	###For unknown reason this mod doesn't have economy_categories, so I might as well add them

	###ship_rs_support_cruiser
		triggered_cost_modifier = {
			key = ship_rs_support_cruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = rs_support_cruiser
			}
		}

		triggered_upkeep_modifier = {
			key = ship_rs_support_cruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = rs_support_cruiser
			}
		}
	###

	###ship_rs_ea_cruiser
		triggered_cost_modifier = {
			key = ship_rs_ea_cruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = rs_ea_cruiser
			}
		}

		triggered_upkeep_modifier = {
			key = ship_rs_ea_cruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = rs_ea_cruiser
			}
		}
	###

	###ship_rs_battlecruiser
		triggered_cost_modifier = {
			key = ship_rs_battlecruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = rs_battlecruiser
			}
		}

		triggered_upkeep_modifier = {
			key = ship_rs_battlecruiser
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = rs_battlecruiser
			}
		}
	###

	###ship_rs_dreadnought
		triggered_cost_modifier = {
			key = ship_rs_dreadnought
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = rs_dreadnought
			}
		}

		triggered_upkeep_modifier = {
			key = ship_rs_dreadnought
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = rs_dreadnought
			}
		}
	###

	###ship_rs_heavy_dreadnought
		triggered_cost_modifier = {
			key = ship_rs_heavy_dreadnought
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = rs_heavy_dreadnought_type_a
					is_ship_size = rs_heavy_dreadnought_type_b
					is_ship_size = rs_heavy_dreadnought_type_c
					is_ship_size = rs_heavy_dreadnought_type_d
					is_ship_size = rs_heavy_dreadnought_type_e
					is_ship_size = rs_heavy_dreadnought_type_f
					is_ship_size = rs_heavy_dreadnought_type_g
					is_ship_size = rs_heavy_dreadnought_type_h
					is_ship_size = rs_heavy_dreadnought_type_i
					is_ship_size = rs_heavy_dreadnought_type_j
					is_ship_size = rs_heavy_dreadnought_type_k
					is_ship_size = rs_heavy_dreadnought_type_l
					is_ship_size = rs_heavy_dreadnought_type_m		
				}		
			}
		}

		triggered_upkeep_modifier = {
			key = ship_rs_heavy_dreadnought
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				OR = {
					is_ship_size = rs_heavy_dreadnought_type_a
					is_ship_size = rs_heavy_dreadnought_type_b
					is_ship_size = rs_heavy_dreadnought_type_c
					is_ship_size = rs_heavy_dreadnought_type_d
					is_ship_size = rs_heavy_dreadnought_type_e
					is_ship_size = rs_heavy_dreadnought_type_f
					is_ship_size = rs_heavy_dreadnought_type_g
					is_ship_size = rs_heavy_dreadnought_type_h
					is_ship_size = rs_heavy_dreadnought_type_i
					is_ship_size = rs_heavy_dreadnought_type_j
					is_ship_size = rs_heavy_dreadnought_type_k
					is_ship_size = rs_heavy_dreadnought_type_l
					is_ship_size = rs_heavy_dreadnought_type_m		
				}		
			}
		}
	###

	###From Guilli's Planet Modifiers and Features
	##Noticed I didn't receive upkeep so here it is

	###shipsize_science
		triggered_upkeep_modifier = {
			key = shipsize_science
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes
				is_ship_size = science
			}
		}
	###

}

###ship_[series] added in 3.6 beta###
###was existed during phase 1 to 3###
###Hidden as it no longer use in final build beta###
#All mod-added ship modifiers can be added via this method, supposedly

	#ship_corvette = {
	#	parent = ships
	#	modifier_category = ship
	#	generate_add_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#
	#	generate_mult_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#}

	#ship_destroyer = {
	#	parent = ships
	#	modifier_category = ship
	#	generate_add_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#
	#	generate_mult_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#}

	#ship_cruiser = {
	#	parent = ships
	#	modifier_category = ship
	#	generate_add_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#
	#	generate_mult_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#}

	#ship_battleship = {
	#	parent = ships
	#	modifier_category = ship
	#	generate_add_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#
	#	generate_mult_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#}

	#ship_military_station_small = {
	#	parent = ships
	#	modifier_category = ship
	#	generate_add_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#
	#	generate_mult_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#}

	#ship_science = {
	#	parent = ships
	#	modifier_category = ship
	#	generate_add_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#
	#	generate_mult_modifiers = {
	#		cost
	#		produces
	#		upkeep
	#	}
	#}

###end of ship_[series]###

colonies = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	modifier_category = ship
	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			add
			mult
		}

		trigger = {
			is_scope_valid = yes
			is_ship_class = shipclass_colonizer
		}
	}
	
	triggered_upkeep_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			is_ship_class = shipclass_colonizer
		}
	}
	parent = ships
}

ship_components = {
	parent = ships
    generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
}

###remove ship_military_station series from this category, please use independent category with this as their parent
ship_sections = {
	parent = ships
	
    generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
}

ship_upgrades = {
	parent = ships
	use_for_ai_budget = yes
    generate_mult_modifiers = {
		upkeep 
		cost
	}
	generate_add_modifiers = {
		upkeep 
		cost
	}
}

stations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}

	parent = country
	modifier_category = deposit #it applies to the planet
}

station_gatherers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
    generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_researchers = {
	parent = stations

	generate_mult_modifiers = {
		produces
        cost
		upkeep
	}
    generate_add_modifiers = {
		produces
        cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_observers = {
	parent = stations
    generate_mult_modifiers = {
		produces
        cost
		upkeep
	}
    generate_add_modifiers = {
		produces
        cost
		upkeep
	}
}

station_observer_missions = {
	parent = station_observers
    generate_mult_modifiers = {
		produces
        cost
		upkeep
	}
    generate_add_modifiers = {
		produces
        cost
		upkeep
	}
}

starbases = {
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
	modifier_category = starbase
}

starbase_stations = {
	parent = starbases
	modifier_category = starbase

	###starbase_outpost
		triggered_cost_modifier = {
			key = starbase_outpost
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes #When called from ship designer the design is not valid yet.
				OR = {
					is_ship_size = starbase_outpost
					is_ship_size = orbital_ring_tier_1 #TODOJM: Remove?
				}
			}
		}
		
		triggered_upkeep_modifier = {
			key = starbase_outpost
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}

			trigger = {
				is_scope_valid = yes #When called from ship designer the design is not valid yet.
				OR = {
					is_ship_size = starbase_outpost
					is_ship_size = orbital_ring_tier_1 #TODOJM: Remove?
				}
			}
		}
	###
	
	###remove ion cannon, xl cannon and starbase_upgraded from mod
	###use independent category with this as their parent instead
}

###added in 3.0
starbase_constructions = {
	parent = starbases

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = starbase
}

starbase_buildings = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = starbase
}

starbase_modules = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
 
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = starbase
}

#terraforming = {
#	parent = country
#	use_for_ai_budget = yes
#
#	generate_mult_modifiers = {
#		cost
#	}
#	modifier_category = planet
#}

###added in 3.3
#terraforming_ocean = {
#	parent = terraforming
#
#	generate_mult_modifiers = {
#		cost  
#	}
#	modifier_category = planet
#}

planets = {
	parent = country
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
    generate_mult_modifiers = {
		upkeep
		produces
	}
	generate_add_modifiers = {
		upkeep
		produces
	}
	hidden = yes
}

planet_structures = {
	parent = planets
	hidden = yes
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_mult_modifiers = {
		cost
        upkeep
		produces
	}
	modifier_category = planet
}

planet_buildings = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_buildings_strongholds = {
	parent = planet_buildings

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}								
planet_branch_offices = {
	parent = planets

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_buildings_hab_capital = { #new in 3.4
	parent = planet_buildings

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_branch_office_buildings = {
	parent = planets
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_holdings = { #new in 3.4
	parent = planets
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts = { #you will notice that most farm, mineral and energy districts are tweated as this
	parent = planet_structures

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_mult_modifiers = {
		cost
        upkeep
		produces
	}
	modifier_category = planet
}
###remove Unoffical synthetic dawn DLC modifiers since it outdated###
#Use independent modifier_category with planet as parent instead

planet_districts_farming = {
	parent = planet_districts

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_mult_modifiers = {
		cost
        upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_mining = {
	parent = planet_districts

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_mult_modifiers = {
		cost
        upkeep
		produces
	}
	
	modifier_category = planet
}

planet_districts_generator = {
	parent = planet_districts

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_mult_modifiers = {
		cost
        upkeep
		produces
	}
	
	modifier_category = planet
}

planet_districts_cities = {
	parent = planet_districts

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_mult_modifiers = {
		cost
        upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_industrial = {
	parent = planet_districts

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_mult_modifiers = {
		cost
        upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_hab_energy = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_hab_industrial = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_hab_research = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_hab_mining = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_hab_trade = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_hab_leisure = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_orders_demesne = { #added in 3.5 (Toxic God Origin)
	parent = planet_districts
	
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_rw_generator = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
}
planet_districts_rw_farming = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}

	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_jobs = { 
	parent = planets

	generate_mult_modifiers = {
		produces
		upkeep
	}

    generate_add_modifiers = {
		produces
		upkeep
	}
	
	modifier_category = pop

	###planet_jobs_slave
		triggered_produces_modifier = {
			key = planet_jobs_slave
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = slave
				has_job_category = worker
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_slave
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = slave
				has_job_category = worker
			}
		}
	###
	
	###planet_latent_psionic_jobs
		triggered_produces_modifier = {
			key = planet_latent_psionic_jobs
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_trait = trait_latent_psionic
			}
		}

		triggered_upkeep_modifier = {
			key = planet_latent_psionic_jobs
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_trait = trait_latent_psionic
			}
		}
	###
	
	###planet_psionic_jobs
		triggered_produces_modifier = {
			key = planet_psionic_jobs
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_trait = trait_psionic
			}
		}

		triggered_upkeep_modifier = {
			key = planet_psionic_jobs
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_trait = trait_psionic
			}
		}
	###

	###planet_cyborg_jobs
		triggered_produces_modifier = {
			key = planet_cyborg_jobs
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_trait = trait_cybernetic
			}
		}
		
		triggered_upkeep_modifier = {
			key = planet_cyborg_jobs
			modifier_types = {
				mult
				add
			}
			trigger = {
				has_trait = trait_cybernetic
			}
		}
	###

	###habitat_jobs
		triggered_produces_modifier = {
			key = habitat_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = { is_planet_class = pc_habitat }
			}
		}

		triggered_upkeep_modifier = {
			key = habitat_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = { is_planet_class = pc_habitat }
			}
		}
	###

	###artificial_planet_jobs
		triggered_produces_modifier = {
			key = artificial_planet_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = { is_artificial = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = artificial_planet_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = { is_artificial = yes }
			}
		}
	###

	###non_artificial_planet_jobs
		triggered_produces_modifier = {
			key = non_artificial_planet_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = { is_artificial = no }
			}
		}

		triggered_upkeep_modifier = {
			key = non_artificial_planet_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = { is_artificial = no }
			}
		}
	###

	###planet_jobs_worker
		triggered_produces_modifier = {
			key = planet_jobs_worker
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = worker
					AND = {
						is_pop_category = slave # Yes, slave should count towards both worker and slave
						has_job_category = worker
					}
					is_pop_category = simple_drone
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_worker
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = worker
					AND = {
						is_pop_category = slave # Yes, slave should count towards both worker and slave
						has_job_category = worker
					}
					is_pop_category = simple_drone
				}
			}
		}
	###

	###planet_jobs_worker_only
		triggered_produces_modifier = {
			key = planet_jobs_worker_only
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = worker
					AND = {
						is_pop_category = slave # Yes, slave should count towards both worker and slave
						has_job_category = worker
					}
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_worker_only
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = worker
					AND = {
						is_pop_category = slave # Yes, slave should count towards both worker and slave
						has_job_category = worker
					}
				}
			}
		}
	###

	###planet_jobs_specialist
		triggered_produces_modifier = {
			key = planet_jobs_specialist
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = specialist
					is_pop_category = complex_drone #planet_jobs_complex_drone is preferable for stuff visible during galaxy setup
					AND = {
						is_pop_category = slave
						has_job_category = specialist
					}
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_specialist
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = specialist
					is_pop_category = complex_drone #planet_jobs_complex_drone is preferable for stuff visible during galaxy setup
					AND = {
						is_pop_category = slave
						has_job_category = specialist
					}
				}
			}
		}
	###
	
	###planet_jobs_specialist_only
		triggered_produces_modifier = {
			key = planet_jobs_specialist_only
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = specialist
					AND = {
						is_pop_category = slave
						has_job_category = specialist
					}
				}
			}
		}	

		triggered_upkeep_modifier = {
			key = planet_jobs_specialist_only
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = specialist
					AND = {
						is_pop_category = slave
						has_job_category = specialist
					}
				}
			}
		}
	###
    
	###planet_jobs_ruler
		triggered_produces_modifier = {
			key = planet_jobs_ruler
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = ruler
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_ruler
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = ruler
			}
		}
	###
	
	###planet_jobs_simple_drone
		triggered_produces_modifier = {
			key = planet_jobs_simple_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = simple_drone
			}
		}	
		
		triggered_upkeep_modifier = {
			key = planet_jobs_simple_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = simple_drone
			}
		}
	###
	
	###planet_jobs_complex_drone
		triggered_produces_modifier = {
			key = planet_jobs_complex_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = complex_drone
			}
		}	

		triggered_upkeep_modifier = {
			key = planet_jobs_complex_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = complex_drone
			}
		}
	###

	###planet_jobs_complex_and_simple_drone
		triggered_produces_modifier = {
			key = planet_jobs_complex_and_simple_drone
			modifier_types = {
				add
				mult
			}
			trigger = {
				OR = {
					is_pop_category = complex_drone
					is_pop_category = simple_drone
				}
			}
		}
	###

	###planet_jobs_organic
		triggered_produces_modifier = {
			key = planet_jobs_organic
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_robot_pop = no
			}
		}	

		triggered_upkeep_modifier = {
			key = planet_jobs_organic
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_robot_pop = no
			}
		}	
	###

	###planet_jobs_robotic
		triggered_produces_modifier = {
			key = planet_jobs_robotic
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_robot_pop = yes
			}
		}	

		triggered_upkeep_modifier = {
			key = planet_jobs_robotic
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_robot_pop = yes
			}
		}	
	###

	#MOD CATEGORY BELOW

	###planet_jobs_organic_slave
		triggered_produces_modifier = {
			key = planet_jobs_organic_slave
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = slave
				is_robot_pop = no
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_organic_slave
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = slave
				is_robot_pop = no
			}
		}
	###
		
	###planet_jobs_robotic_slave
		triggered_produces_modifier = {
			key = planet_jobs_robotic_slave
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = slave
				is_robot_pop = yes
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_robotic_slave
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = slave
				is_robot_pop = yes
			}
		}
	###
	
	###planet_jobs_organic_worker
		triggered_produces_modifier = {
			key = planet_jobs_organic_worker
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = worker
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					is_pop_category = simple_drone
				}
				is_robot_pop = no
			}
		}
		
		triggered_produces_modifier = {
			key = planet_jobs_robotic_worker
			modifier_types = {
				mult
				add
			}
			trigger = {
				OR = {
					is_pop_category = worker
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					is_pop_category = simple_drone
				}
				is_robot_pop = yes
			}
		}
	###
	
	###planet_jobs_organic_specialist
		triggered_produces_modifier = {
			key = planet_jobs_organic_specialist
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = specialist
				is_robot_pop = no
			}
		}
		
		triggered_produces_modifier = {
			key = planet_jobs_robotic_specialist
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = specialist
				is_robot_pop = yes
			}
		}
	###
	
	###planet_jobs_organic_ruler
		triggered_produces_modifier = {
			key = planet_jobs_organic_ruler
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = ruler
				is_robot_pop = no
			}
		}
		
		triggered_produces_modifier = {
			key = planet_jobs_robotic_ruler
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = ruler
				is_robot_pop = yes
			}
		}
	###
	
	###planet_jobs_organic_simple_drone
		triggered_produces_modifier = {
			key = planet_jobs_organic_simple_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = simple_drone
				is_robot_pop = no
			}
		}	
		
		triggered_produces_modifier = {
			key = planet_jobs_robotic_simple_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = simple_drone
				is_robot_pop = yes
			}
		}	
	###
    
	###planet_jobs_organic_complex_drone
		triggered_produces_modifier = {
			key = planet_jobs_organic_complex_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = complex_drone
				is_robot_pop = no
			}
		}
		
		triggered_produces_modifier = {
			key = planet_jobs_robotic_complex_drone
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_pop_category = complex_drone
				is_robot_pop = yes
			}
		}
	###
}

#planet_jobs_productive = { #this should contain all categories that primarily produce resources (rather than e.g. amenities, trade, stability)
#	parent = planet_jobs
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}

planet_bio_trophies = {
	parent = planet_jobs
    generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_pop_assemblers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_farmers = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_miners = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_sr_miners = { #added because we don't want miners_minerals_produces_add to apply to these
	parent = planet_miners
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_livestock = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_technician = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_politicians = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_administrators = {
	icon = "job_bureaucrat"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_executives = {
	parent = planet_politicians
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_managers = {
	parent = planet_administrators
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_researchers = {
	icon = "job_researcher"
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_metallurgists = {
	icon = "job_foundry"
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_laborer = { #added in 3.7
	icon = "low_tech_laborer"
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_culture_workers = {
	parent = planet_administrators
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_evaluators = {
	parent = planet_administrators
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_synapse_drones = {
	parent = planet_administrators
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_nobles = {
	parent = planet_politicians
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_necro_apprentices = {
	parent = planet_pop_assemblers
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_merchants = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_entertainers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_soldiers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_priests = {
	parent = planet_administrators
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_squires = { #added in 3.5
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_enforcers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_telepaths = {
	parent = planet_administrators
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_doctors = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_refiners = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_translucers = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_chemists = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_artisans = {
	icon = "job_artisan"
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_bath_attendants = { #added in 3.5
	icon = "job_bath_attendant"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_bath_attendants_hive = { #added in 3.5
	icon = "job_bath_attendant"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_bath_attendants_machine = { #added in 3.5
	icon = "job_bath_attendant"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
        upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

#added in 3.5
#DO NOT ASSIGN A PARENT TO THIS.
#It is a special hack. The normal job modifiers apply via knights_unity/research_output_modifier script values in the jobs
#knights_independent_category = {
#	generate_mult_modifiers = {
#		produces
#	}
#}

###Mod related planet_[series] are removed###
#use your own category - if your job produce resource, use planet_jobs_productive as parent
#if don't, use planet_jobs as parent


###planet_pops, used for pop's base upkeeps###
#has no effect on produce, so they are not added#
planet_pops = {
	parent = planets
	
	generate_add_modifiers = {
		upkeep
	}
	generate_mult_modifiers = {
		upkeep
	}
	
	modifier_category = pop

	triggered_upkeep_modifier = {
		key = planet_pops_robotics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = yes
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_cyborgs
		modifier_types = {
			mult
			add
		}
		trigger = {
			has_trait = trait_cybernetic
		}
	}
	
	triggered_upkeep_modifier = {
		key = planet_pops_organics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = no
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_unemployed = yes
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_biologicals
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_lithoid = no
			is_robot_pop = no
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_lithoids
		modifier_types = { 
			mult
			add
		}
		trigger = { is_lithoid = yes }
	}
}

unemployment_resources = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	modifier_category = pop
}

###pop_category, can produce resource via this
pop_category_precursor = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	modifier_category = pop
}

pop_category_xeno_ward = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	
	modifier_category = pop
}

pop_category_pre_sapients = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	
	modifier_category = pop
}

pop_category_purge = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	
	modifier_category = pop
}

pop_category_bio_trophy = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	
	modifier_category = pop
}

pop_category_slave = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	modifier_category = pop
	triggered_produces_modifier = {
		key = pop_category_psionic_slave
		modifier_types = {
			add
			mult
		}
		trigger = {
			has_trait = trait_psionic
		}
	}
	
	triggered_upkeep_modifier = {
		key = pop_category_psionic_slave
		modifier_types = {
			add
			mult
		}
		trigger = {
			has_trait = trait_psionic
		}
	}
	
	triggered_produces_modifier = {
		key = pop_category_latent_psionic_slave
		modifier_types = {
			add
			mult
		}
		trigger = {
			has_trait = trait_latent_psionic
		}
	}
	
	triggered_upkeep_modifier = {
		key = pop_category_latent_psionic_slave
		modifier_types = {
			add
			mult
		}
		trigger = {
			has_trait = trait_latent_psionic
		}
	}
	

}

pop_category_robot = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces  
		upkeep
	}
	
	modifier_category = pop
}
###From Machine & Robot Expansion MOD###
pop_category_drones = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	modifier_category = pop

	###pop_category_complex_drones
		triggered_produces_modifier = {
			key = pop_category_complex_drones
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_pop_category = complex_drone
			}
		}
		triggered_upkeep_modifier = {
			key = pop_category_complex_drones
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_pop_category = complex_drone
			}
		}
	###

	triggered_upkeep_modifier = {
		key = pop_category_drones_xvcv_bio_robot
		modifier_types = {
			add
			mult
		}
		trigger = {
			has_trait = xvcv_mdlc_trait_bio_robot
		}
	}

	###pop_category_simple_drones
		triggered_produces_modifier = {
			key = pop_category_simple_drones
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_pop_category = simple_drone
			}
		}

		triggered_upkeep_modifier = {
			key = pop_category_simple_drones
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_pop_category = simple_drone
			}
		}
	###
}
###End of Machine & Robot Expansion MOD###
pop_category_workers = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	modifier_category = pop
	triggered_produces_modifier = {
		key = pop_category_robot_workers
		modifier_types = {
			add
			mult
		}
		trigger = {
			is_robot_pop = yes
		}
	}
	###FROM Machine & Robot Expansion MOD###	
	triggered_upkeep_modifier = {
		key = pop_category_workers_xvcv_bio_robot
		modifier_types = { 
			add
			mult
		}
		trigger = {
			has_trait = xvcv_mdlc_trait_bio_robot
		}
	}
	###END OF Machine & Robot Expansion MOD###
	
	###pop_category_psionic_workers
		triggered_produces_modifier = {
			key = pop_category_psionic_workers
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_psionic
			}
		}

		triggered_upkeep_modifier = {
			key = pop_category_psionic_workers
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_psionic
			}
		}
	###
	
	###pop_category_latent_psionic_workers
		triggered_produces_modifier = {
			key = pop_category_latent_psionic_workers
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_latent_psionic
			}
		}
		
		triggered_upkeep_modifier = {
			key = pop_category_latent_psionic_workers
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_latent_psionic
			}
		}
	###

}

pop_category_specialists = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	modifier_category = pop
	triggered_produces_modifier = {
		key = pop_category_robot_specialists
		modifier_types = {
			add
			mult
		}
		trigger = {
			is_robot_pop = yes
		}
	}
	
	###FROM Machine & Robot Expansion MOD###	
	triggered_upkeep_modifier = {
		key = pop_category_specialists_xvcv_bio_robot
		modifier_types = { 
			add
			mult
		}
		trigger = {
			has_trait = xvcv_mdlc_trait_bio_robot
		}
	}
	###END OF Machine & Robot Expansion MOD###
	
	###pop_category_psionic_specialists
		triggered_produces_modifier = {
			key = pop_category_psionic_specialists
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_psionic
			}
		}
		
		triggered_upkeep_modifier = {
			key = pop_category_psionic_specialists
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_psionic
			}
		}
	###
	
	###pop_category_latent_psionic_specialists
		triggered_produces_modifier = {
			key = pop_category_latent_psionic_specialists
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_latent_psionic
			}
		}
		
		triggered_upkeep_modifier = {
			key = pop_category_latent_psionic_specialists
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_latent_psionic
			}
		}
	###
	
}

pop_category_rulers = {
	parent = planet_pops
    generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	modifier_category = pop
	triggered_produces_modifier = {
		key = pop_category_robot_rulers
		modifier_types = {
			add
			mult
		}
		trigger = {
			is_robot_pop = yes
		}
	}
	###FROM Machine & Robot Expansion MOD###	
	triggered_upkeep_modifier = {
		key = pop_category_rulers_xvcv_bio_robot
		modifier_types = { 
			add
			mult
		}
		trigger = {
			has_trait = xvcv_mdlc_trait_bio_robot
		}
	}
	###END OF Machine & Robot Expansion MOD###
	
	###pop_category_psionic_rulers
		triggered_produces_modifier = {
			key = pop_category_psionic_rulers
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_psionic
			}
		}
		
		triggered_upkeep_modifier = {
			key = pop_category_psionic_rulers
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_psionic
			}
		}
	###
	
	###pop_category_latent_psionic_rulers
		triggered_produces_modifier = {
			key = pop_category_latent_psionic_rulers
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_latent_psionic
			}
		}
		
		triggered_upkeep_modifier = {
			key = pop_category_latent_psionic_rulers
			modifier_types = {
				add
				mult
			}
			trigger = {
				has_trait = trait_latent_psionic
			}
		}
	###
	
}

pop_category_assimilation = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
    generate_mult_modifiers = {
        produces
		upkeep
	}
	
	modifier_category = pop
}

planet_deposits = {
	parent = planets
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
}

orbital_mining_deposits = {
	parent = station_gatherers
    generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

orbital_research_deposits = {
	parent = station_researchers
    generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

deposit_blockers = {
	use_for_ai_budget = yes
	generate_add_modifiers = {
		cost
	}
	generate_mult_modifiers = {
		cost
	}
	modifier_category = deposit

	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}

#deposit_blockers_natural = { #added in 3.4
#	generate_add_modifiers = {
#		produces
#	}
#
#	modifier_category = deposit
#
#	parent = deposit_blockers
#}

armies = {
	use_for_ai_budget = yes

	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = army
	ai_use_parent_for_resources_upkeep = {
		energy
		minerals
		food
	}
	parent = country
}

leaders = { 
	use_for_ai_budget = yes
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = leader
	parent = country
}

leader_admirals = {
	parent = leaders
    generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = leader
	triggered_produces_modifier = {
		key = leaders_admirals_psionic
		modifier_types = {
			add
			mult
		}
		trigger = {
			species = {
				OR = {
					has_trait = trait_latent_psionic
					has_trait = trait_psionic
				}
			}
		}
	}
}

leader_generals = {
	parent = leaders
    generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = leader
	triggered_produces_modifier = {
		key = leaders_generals_psionic
		modifier_types = {
			add
			mult
		}
		trigger = {
			species = {
				OR = {
					has_trait = trait_latent_psionic
					has_trait = trait_psionic
				}
			}
		}
	}
}

leader_scientists = {
	parent = leaders
    generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = leader	
	triggered_produces_modifier = {
		key = leaders_scientists_psionic
		modifier_types = {
			add
			mult
		}
		trigger = {
			species = {
				OR = {
					has_trait = trait_latent_psionic
					has_trait = trait_psionic
				}
			}
		}
	}
}

leader_governors = {
	parent = leaders
    generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = leader
	triggered_produces_modifier = {
		key = leaders_governors_psionic
		modifier_types = {
			add
			mult
		}
		trigger = {
			species = {
				OR = {
					has_trait = trait_latent_psionic
					has_trait = trait_psionic
				}
			}
		}
	}
}

diplomacy = {
	hidden = yes
	parent = country
	generate_mult_modifiers = {
		produces
		upkeep
	}

	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = country
}

# Country wide modifier collection
#country_container are excluded

#pop_factions = {
#	parent = country
#	generate_mult_modifiers = {
#		produces
#	}
#
#	generate_add_modifiers = {
#		
#	}
#	modifier_category = country #pop factions category currently unused
#}

#subjects = {
#	parent = diplomacy
#}

#federation = {
#	parent = diplomacy
#	generate_add_modifiers = {
#		produces
#	}		
#	modifier_category = country			   
#}

rivalries = {
	parent = diplomacy
    generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}            
	modifier_category = country	
}

non_aggression_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}

	generate_add_modifiers = {
		upkeep
	}
	modifier_category = country
}

migration_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}

	generate_add_modifiers = {
		upkeep
	}
	modifier_category = country
}				   
research_agreements = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}

	generate_add_modifiers = {
		upkeep
	}
	modifier_category = country
}

commercial_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}

	generate_add_modifiers = {
		upkeep
	}
	modifier_category = country
}

defensive_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}

	generate_add_modifiers = {
		upkeep
	}
	modifier_category = country
}

guarantees = {
	parent = diplomacy
	generate_mult_modifiers = {
		upkeep
	}

	generate_add_modifiers = {
		upkeep
	}
	modifier_category = country
}

monthly_trades = {
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country	
}

#claims = {
#	use_for_ai_budget = yes
#	parent = country
#}

#agreement_proposals = { #added in 3.6
#	use_for_ai_budget = yes
#	parent = diplomacy
#}

#subject_tax = {
#	parent = diplomacy
#}

#envoy_costs = {
#	parent = diplomacy
#}

#diplo_closed_borders = {
#	parent = diplomacy
#}

#diplomatic_networking = {
#	parent = diplomacy
#}

#societal_enlightenment_pacts = { #added in 3.7
#	parent = diplomacy
#}

#open_technological_enlightenment_pacts = { #added in 3.7
#	parent = diplomacy
#}

#stratified_technological_enlightenment_pacts = { #added in 3.7
#	parent = diplomacy
#}

#pre_ftl_trade_pacts = { #added in 3.7
#	parent = diplomacy
#}

#subject_integration = {
#}

#overlord_subsidy = {
#}

#specialist_subject_conversion = {
#}

relics = {
	generate_mult_modifiers = {
		cost
		upkeep
	}

	generate_add_modifiers = {
		cost
		upkeep
	}
}

artifact_actions = {
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}

#sector = {
#
#}

#menace = {
#	    
#}

#traditions = {
#		use_for_ai_budget = yes
#		parent = country
#}

#operations = {
#	use_for_ai_budget = yes
#	ai_use_parent_for_resources_upkeep = {
#		energy
#	}
#	generate_mult_modifiers = {
#		cost
#		upkeep
#	}
#	parent = country 
#	modifier_category = espionage
#}

#country_situations = { #added in 3.4
#	generate_add_modifiers = {
#		produces
#	}
#	modifier_category = country
#}