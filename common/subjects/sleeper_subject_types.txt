# can_expand = allowed to build outposts to expand borders
# potential = if possible to select in diplomatic interactions
# become_vassal = trigger when it converts into a vassal
# tech_cost_mult = tech cost multiplier if overlord has a tech
# overlord_resources = resources cost, upkeep and production paid by and to the overlord
# subject_resources = resources cost, upkeep and production paid by and to the subject
# joins_overlord_wars = Joins in if overlord goes to war (Defensive or Offensive)
# calls_overlord_to_war Calls overlord to war (Defensive only)
# can_do_diplomacy Can do some limited diplomacy
# overlord_becomes_warleader, if overlord takes over as warleader. Default true
# gets_sensor(yes): gets overlords sensors
# gets_access(yes): gets overlords access
# can_be_integrated(no): the overlord is able to integrate the subject
# can_switch_to: a list of other subject types this type can switch to.
# diplo_threat: threat generated from diplomatically vassalizing this type of subject
# effect: executes when subject relation is created

feeder_vassal = {
	can_expand = no
	can_be_integrated = yse
	joins_overlord_wars = no
	calls_overlord_to_war = no
	can_do_diplomacy = yes
	gets_sensor = yes
	gets_access = no
	
	can_switch_to = {
		vassal protectorate
	}
	
	subject_tax_rate = {
		food = 0.25
		#modifier that reduces growth rate by 100% and add 10% for sleeper, added through events
	}
	
	potential = {
		from = { is_sleeper = yes }
	}
	
	effect = {
		if = {
			limit = {
				from = { is_sleeper = yes }
			}
			set_subject_of = {
				who = from
				subject_type = feeder_vassal
			}
			break = yes
		}	
		if = {
			limit = {
				from = { 	
					is_country_type = default
				}
			}
			set_subject_of = {
				who = from
				subject_type = vassal
			}
			break = yes
		}	
		if = {
			limit = {
				from = { 	
					is_country_type_with_subjects = no
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}		
		if = {
			limit = {
				from = { 
					has_valid_civic = civic_hive_devouring_swarm
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}			
		if = {
			limit = {
				NOT = { is_same_species = from }
				from = { 
					has_valid_civic = civic_fanatic_purifiers
				}
			}
			set_subject_of = {
				who = none
			}
			break = yes
		}	
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_materialist
				}
			}
			set_subject_of = {
				who = from
				subject_type = protectorate
			}
			break = yes
		}	
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_spiritualist
				}
			}
			set_subject_of = {
				who = from
				subject_type = protectorate
			}
			break = yes
		}
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_xenophile
				}
			}
			set_subject_of = {
				who = from
				subject_type = protectorate
			}
			break = yes
		}
		if = {
			limit = {
				from = { 
					is_country_type = awakened_fallen_empire
					has_ethic = ethic_fanatic_xenophobe
				}
			}
			set_subject_of = {
				who = from
				subject_type = protectorate
			}
			break = yes
		}
		if = {
			limit = {
				from = { has_authority = auth_corporate }
			}
			set_subject_of = {
				who = from
				subject_type = protectorate
			}
			break = yes
		}		
	}	
}