
ag_research_point_buff = {
	base = 0
	complex_trigger_modifier = {
		trigger = resource_income_compare
		trigger_scope = owner
		parameters = { resource = physics_research }
		mode = add
	}
	complex_trigger_modifier = {
		trigger = resource_income_compare
		trigger_scope = owner
		parameters = { resource = society_research }
		mode = add
	}
	complex_trigger_modifier = {
		trigger = resource_income_compare
		trigger_scope = owner
		parameters = { resource = engineering_research }
		mode = add
	}
	pow = 0.1
	abs = yes
	min = 0
	max = 5
}
ag_research_project_round_progress = {
	base = 10
	mult = ag_skill_bonus
	divide = ag_difficulty
	mult = ag_random_factor
	mult = value:ag_modifier_mult_multiplier|ag_modifier|ag_research_progress_mult|
	modifier = { set = 1000 has_modifier = "ag_debug_modifier_buff_common" }
	min = 0.001
}

ag_ship_research_progress = {
	base = 0
	complex_trigger_modifier = {
		trigger = resource_income_compare
		trigger_scope = owner
		parameters = { resource = engineering_research }
		mode = add
	}
	pow = 0.2
	mult = 0.2
	abs = yes
	min = 0
	max = 6
}

ag_ancient_security_system_progress_research_points = {
	base = 0
	complex_trigger_modifier = {
		trigger = resource_income_compare
		trigger_scope = owner
		parameters = { resource = $ag_area$_research }
		mode = add
	}
	pow = 0.125
	abs = yes
	min = 0
	max = 8
}
ag_ancient_security_system_progress_research_buff = {
	base = 0
	add = value:ag_ancient_security_system_progress_research_points|ag_area|society|
	add = value:ag_ancient_security_system_progress_research_points|ag_area|engineering|
}
ag_ancient_security_system_progress_decryption = {
	base = 30
	subtract = modifier:intel_decryption_add
	min = 4
	max = 30
}
ag_ancient_security_system_progress = {
	base = 0
	add = ag_soc_scientist_lvl
	add = ag_eng_scientist_lvl
	mult = value:ag_ancient_security_system_progress_research_buff
	mult = @ag_ancient_security_system_unlock_factor
	divide = value:ag_ancient_security_system_progress_decryption
	divide = @ag_$ag_index$_security_system_difficulty
	mult = ag_ancient_security_system_random_factor
	min = 0
	modifier = { set = 100 has_modifier = "ag_debug_modifier_buff_common" }
}
