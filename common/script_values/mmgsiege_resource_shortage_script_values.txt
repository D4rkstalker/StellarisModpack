@mmgsiege_resource_shortage_level_2_multiply = 2
@mmgsiege_resource_shortage_level_3_multiply = 3
@mmgsiege_resource_shortage_level_4_multiply = 5

@mmgsiege_resource_shortage_pop_happiness_base = -0.10
@mmgsiege_resource_shortage_pop_growth_reduction_base = 0.20
@mmgsiege_resource_shortage_pop_assembly_reduction_base = 0.20
@mmgsiege_resource_shortage_job_produces_base = -0.10
@mmgsiege_resource_shortage_orbital_bombardment_minerals_base = 0.05
@mmgsiege_resource_shortage_orbital_bombardment_energy_base = 0.10

# 88  88    db    88""Yb 88""Yb 88 88b 88 888888 .dP"Y8 .dP"Y8
# 88  88   dPYb   88__dP 88__dP 88 88Yb88 88__   `Ybo." `Ybo."
# 888888  dP__Yb  88"""  88"""  88 88 Y88 88""   o.`Y8b o.`Y8b
# 88  88 dP""""Yb 88     88     88 88  Y8 888888 8bodP' 8bodP'

mmgsiege_shortage_biological_pop_happiness = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_pop_happiness_base
		mmgsiege_has_resource_shortage = { RESOURCE = food }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_lithoid_pop_happiness = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_pop_happiness_base
		mmgsiege_has_resource_shortage = { RESOURCE = minerals }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_robot_pop_happiness = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_pop_happiness_base
		mmgsiege_has_resource_shortage = { RESOURCE = energy }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_bio_trophy_happiness = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_pop_happiness_base
		exists = owner
		any_owned_species = {
			has_citizenship_type = {
				country = prev.owner
				type = citizenship_organic_trophy
			}
		}
		mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		exists = owner
		any_owned_species = {
			has_citizenship_type = {
				country = prev.owner
				type = citizenship_organic_trophy
			}
		}
		mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		exists = owner
		any_owned_species = {
			has_citizenship_type = {
				country = prev.owner
				type = citizenship_organic_trophy
			}
		}
		mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		exists = owner
		any_owned_species = {
			has_citizenship_type = {
				country = prev.owner
				type = citizenship_organic_trophy
			}
		}
		mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

# 88""Yb  dP"Yb  88""Yb      dP""b8 88""Yb  dP"Yb  Yb        dP 888888 88  88
# 88__dP dP   Yb 88__dP     dP   `" 88__dP dP   Yb  Yb  db  dP    88   88  88
# 88"""  Yb   dP 88"""      Yb  "88 88"Yb  Yb   dP   YbdPYbdP     88   888888
# 88      YbodP  88          YboodP 88  Yb  YbodP     YP  YP      88   88  88

mmgsiege_shortage_biological_pop_growth_reduction = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_pop_growth_reduction_base
		mmgsiege_has_resource_shortage = { RESOURCE = food }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_lithoid_pop_growth_reduction = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_pop_growth_reduction_base
		mmgsiege_has_resource_shortage = { RESOURCE = minerals }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

# 88""Yb  dP"Yb  88""Yb        db    .dP"Y8 .dP"Y8 888888 8b    d8 88""Yb 88     Yb  dP
# 88__dP dP   Yb 88__dP       dPYb   `Ybo." `Ybo." 88__   88b  d88 88__dP 88      YbdP
# 88"""  Yb   dP 88"""       dP__Yb  o.`Y8b o.`Y8b 88""   88YbdP88 88""Yb 88  .o   8P
# 88      YbodP  88         dP""""Yb 8bodP' 8bodP' 888888 88 YY 88 88oodP 88ood8  dP

mmgsiege_shortage_pop_assembly_reduction = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_pop_assembly_reduction_base
		mmgsiege_has_resource_shortage = { RESOURCE = energy }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_pop_assembly_organic_reduction = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_pop_assembly_reduction_base
		exists = owner
		OR = {
			AND = {
				is_lithoid_empire = no
				mmgsiege_has_resource_shortage = { RESOURCE = food }
			}
			AND = {
				is_lithoid_empire = yes
				mmgsiege_has_resource_shortage = { RESOURCE = minerals }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		exists = owner
		OR = {
			AND = {
				is_lithoid_empire = no
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 2 }
			}
			AND = {
				is_lithoid_empire = yes
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		exists = owner
		OR = {
			AND = {
				is_lithoid_empire = no
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 3 }
			}
			AND = {
				is_lithoid_empire = yes
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		exists = owner
		OR = {
			AND = {
				is_lithoid_empire = no
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 4 }
			}
			AND = {
				is_lithoid_empire = yes
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
			}
		}
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

#  88888  dP"Yb  88""Yb      dP"Yb  88   88 888888 88""Yb 88   88 888888
#     88 dP   Yb 88__dP     dP   Yb 88   88   88   88__dP 88   88   88
# o.  88 Yb   dP 88""Yb     Yb   dP Y8   8P   88   88"""  Y8   8P   88
# "bodP'  YbodP  88oodP      YbodP  `YbodP'   88   88     `YbodP'   88

mmgsiege_shortage_artisans_produces = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_job_produces_base
		mmgsiege_has_resource_shortage = { RESOURCE = minerals }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_metallurgists_produces = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_job_produces_base
		exists = owner
		OR = {
			AND = {
				owner = { is_catalytic_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals }
			}
			AND = {
				owner = { is_catalytic_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = food }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_catalytic_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
			}
			AND = {
				owner = { is_catalytic_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 2 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_catalytic_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
			}
			AND = {
				owner = { is_catalytic_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 3 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_catalytic_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
			}
			AND = {
				owner = { is_catalytic_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 4 }
			}
		}
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_administrators_produces = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_job_produces_base
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = food }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 2 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 2 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 2 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 3 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 3 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 3 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 4 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 4 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 4 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
			}
		}
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_researchers_produces = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_job_produces_base
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy }
			}
			AND = {
				owner = { is_hive_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 2 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 2 }
			}
			AND = {
				owner = { is_hive_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 3 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 3 }
			}
			AND = {
				owner = { is_hive_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 4 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 4 }
			}
			AND = {
				owner = { is_hive_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
			}
		}
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_job_amenities = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_job_produces_base
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = food }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 2 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 2 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 2 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 3 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 3 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 3 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
			}
		}
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		exists = owner
		OR = {
			AND = {
				owner = { is_gestalt = no }
				mmgsiege_has_resource_shortage = { RESOURCE = consumer_goods LEVEL = 4 }
			}
			AND = {
				owner = { is_machine_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 4 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = no }
				mmgsiege_has_resource_shortage = { RESOURCE = food LEVEL = 4 }
			}
			AND = {
				owner = { is_hive_empire = yes is_lithoid_empire = yes }
				mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
			}
		}
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

# 88""Yb  dP"Yb  8b    d8 88""Yb    db    88""Yb 8888b.  8b    d8 888888 88b 88 888888
# 88__dP dP   Yb 88b  d88 88__dP   dPYb   88__dP  8I  Yb 88b  d88 88__   88Yb88   88
# 88""Yb Yb   dP 88YbdP88 88""Yb  dP__Yb  88"Yb   8I  dY 88YbdP88 88""   88 Y88   88
# 88oodP  YbodP  88 YY 88 88oodP dP""""Yb 88  Yb 8888Y"  88 YY 88 888888 88  Y8   88

mmgsiege_shortage_energy_orbital_bombardment_damage = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_orbital_bombardment_energy_base
		mmgsiege_has_resource_shortage = { RESOURCE = energy }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = energy LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_minerals_orbital_bombardment_damage = {
	base = 0
	modifier = {
		add = @mmgsiege_resource_shortage_orbital_bombardment_minerals_base
		mmgsiege_has_resource_shortage = { RESOURCE = minerals }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_2_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 2 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_3_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 3 }
	}
	modifier = {
		multiply = @mmgsiege_resource_shortage_level_4_multiply
		mmgsiege_has_resource_shortage = { RESOURCE = minerals LEVEL = 4 }
	}
	modifier = {
		multiply = 100
		always = $FOR_DISPLAY|yes$
	}
}

mmgsiege_shortage_orbital_bombardment_damage = {
	base = 0
	add = value:mmgsiege_shortage_energy_orbital_bombardment_damage|FOR_DISPLAY|no|
	add = value:mmgsiege_shortage_minerals_orbital_bombardment_damage|FOR_DISPLAY|no|
}

mmgsiege_months_until_next_shortage_level = {
	base = 0
	# has shortage, look at shortage progress
	modifier = {
		mmgsiege_has_resource_shortage = { RESOURCE = $RESOURCE$ }
		add = 100
	}
	modifier = {
		mmgsiege_has_resource_shortage = { RESOURCE = $RESOURCE$ }
		is_variable_set = mmgsiege_$RESOURCE$_shortage_progress
		subtract = mmgsiege_$RESOURCE$_shortage_progress
	}
	modifier = {
		mmgsiege_has_resource_shortage = { RESOURCE = $RESOURCE$ }
		divide = value:mmgsiege_resource_shortage_progress|RESOURCE|$RESOURCE$|
	}
	# no shortage, look at stockpile
	modifier = {
		NOT = { mmgsiege_has_resource_shortage = { RESOURCE = $RESOURCE$ } }
		add = mmgsiege_$RESOURCE$_stockpile
	}
	modifier = {
		NOT = { mmgsiege_has_resource_shortage = { RESOURCE = $RESOURCE$ } }
		divide = value:mmgsiege_resource_deficit|RESOURCE|$RESOURCE$|
	}
	# finally, ceil
	ceiling = yes
	min = 1
}

mmgsiege_months_until_full_recovery = {
	base = 0
	modifier = {
		add = mmgsiege_$RESOURCE$_shortage_level
		mmgsiege_has_resource_shortage = { RESOURCE = $RESOURCE$ }
	}
	multiply = 3
	modifier = {
		subtract = mmgsiege_$RESOURCE$_shortage_recovery_progress
		is_variable_set = mmgsiege_$RESOURCE$_shortage_recovery_progress
	}
	modifier = {
		add = 1
		is_variable_set = mmgsiege_$RESOURCE$_shortage_progress
		check_variable = {
			which = mmgsiege_$RESOURCE$_shortage_progress
			value > 0
		}
	}
}

mmgsiege_resource_deficit = {
	base = 0
	complex_trigger_modifier = {
		trigger = planet_resource_compare
		parameters = {
			resource = $RESOURCE$
			type = balance
		}
		mode = subtract
	}
	add = value:mmgsiege_planet_production_offset_$RESOURCE$
}

mmgsiege_resource_shortage_progress = {
	base = 0
	complex_trigger_modifier = {
		trigger = planet_resource_compare
		parameters = {
			resource = $RESOURCE$
			type = balance
		}
		mode = subtract
	}
	complex_trigger_modifier = {
		trigger = planet_resource_compare
		parameters = {
			resource = $RESOURCE$
			type = upkeep
		}
		mode = divide
	}
	multiply = 100
	ceiling = yes
}