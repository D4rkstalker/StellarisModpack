# Number of entries controlls amount to choose from in designer  I.E.   "mol1" "mol2" "mol3" "mol4"
# graphical_culture is connected to the looks used for ships and cities, see "common/graphical_culture/"
# Portraits here are one you can choose from in the character creater. For prescripted races they are grabbed straight from the .gfx file.
# playable=(yes/no)/trigger, default is yes, if this species class can is playable
# randomized=(yes/no)/trigger, default is yes, if this species class is randomized
# custom_portraits
#	randomized = trigger, default is no, to specify if portraits are randomized
#	playable = trigger, default is yes, to specify if portraits are playable
#	portraits, list portrait keys
# species_trait_points: base number of species trait points available for this species class
# species_max_traits: maximum number of traits that species of this class can have (doesn't count those with cost == 0)
# possible: ethics/government requirements; see common/governments/readme_requirements.txt
# gender: yes|no (default: yes). whether the species have a gender
# portrait_modding: yes|no (default: no). whether the portrait can be modified with genemodding/robomodding

HUM = {
	archetype = BIOLOGICAL

	possible = { authority = { NOT = { value = auth_machine_intelligence text = SPECIES_CLASS_MUST_NOT_USE_MACHINE_INTELLIGENCE } } }
	possible_secondary = {
		origin = {
			NOT = { value = origin_next_generation text = MUST_USE_PRESAPIENT }
		}
	}

	portraits = {
		"human"
		"humanoid_02"
		"humanoid_03"
		"humanoid_04"
		"humanoid_05"
	}
	custom_portraits = {
		randomized = { host_has_dlc = "Humanoids Species Pack" }
		playable = { local_has_dlc = "Humanoids Species Pack" }
		portraits = {
			"humanoid_hp_01"
			"humanoid_hp_02"
			"humanoid_hp_06"
			"humanoid_hp_07"
			"humanoid_hp_08"
			"humanoid_hp_09"
			"humanoid_hp_10"
			"humanoid_hp_11"
			"humanoid_hp_12"
			"humanoid_hp_13"
		}
	}

	# These should not be used for randomly generated species
	non_randomized_portraits = {
		"human"
	}

	graphical_culture = humanoid_01
	move_pop_sound_effect = "moving_pop_confirmation"
}