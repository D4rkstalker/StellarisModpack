	NGameplay = {
		RANDOM_START_DISTANCE = 40		# The minimum distance at which empires will spawn from each other in random start

		NAVAL_CAPACITY_POP_MULT = 0.005

		JUMP_DRIVE_COOLDOWN = 180					# Days between uses of Jump Drive

		RELEVANT_DISTANCE = 150				# Within this distance we're considered to be diplomatically relevant

		POP_ETHOS_LOWER_ETHIC_THRESHOLD				= 0.5	# If the % of pops following an ethic is <= this relative to its attraction do not diverge away from it
		POP_ETHOS_UPPER_ETHIC_THRESHOLD				= 2	# If the % of pops following an ethic is >= this relative to its attraction do not diverge to it
		POP_MIN_ETHIC_RELATIVE_ATTRACTION			= 0.1	# If relative attraction is less than this, do not diverge to this ethic
		POP_ETHOS_DIVERGENCE_INTERVAL				= 30	# Number of days until a Pop has a change to diverge from empire ethos
		POP_ETHOS_DIVERGENCE_RATE_MULT				= 0.2	# Chance of a pop evaluating its ethics every year
		POP_CHANGE_FACTION_CHANCE					= 0.2	# Once every month a pop has X chance to change faction but only if the pop wants to
		POP_CURRENT_FACTION_WEIGHT					= 1.25	# Weight for current faction is multiplied by this much for pops
		POP_FACTION_APPROVAL_VERY_LOW				= 0.20	# Below this level of approval a faction will have severe happiness penalties
		POP_FACTION_APPROVAL_LOW					= 0.40	# Below this level of approval a faction will have severe happiness penalties
		POP_FACTION_APPROVAL_BASE					= 0.50	# Base faction approval
		POP_FACTION_APPROVAL_HIGH					= 0.60	# Above this level of approval a faction will have some bonus happiness
		POP_FACTION_APPROVAL_VERY_HIGH				= 0.80	# Above this level of approval a faction will have more bonus happiness
		POP_FACTION_MIN_POTENTIAL_MEMBERS			= 5 # If a faction has less potential members than this, do not form
		POP_FACTION_CREATION_COOLDOWN				= 180 # Wait this many days after creating a faction to create another one (not applied to hidden factions)

		TRUCE_YEARS							= 5 	# Truce last for X years

		MAX_FRICTION 						= 200	# Max friction (total)
		FRICTION_FROM_BORDERING_SYSTEM 		= 5	# Friction for each bordering system

		CUSTOM_EMPIRE_SPAWN_CHANCE 			= 50	# Chance that an empire will be created from an existing template instead of randomly generated (10 = 1% chance)
		FALLEN_CUSTOM_EMPIRE_SPAWN_CHANCE 	= 50	# Chance that a fallen empire will be created from an existing template instead of randomly generated (10 = 1% chance)
		FALLEN_EMPIRE_OUTER_BOUNDARY  		= 0	# Outer boundary of galaxy that fallen empire generation will try to avoid
		FALLEN_EMPIRE_INNER_BOUNDARY		= 0		# Inner boundary of galaxy that fallen empire generation will try to avoid

		# Bombardment damage to planets from ships
		ORBITAL_BOMBARDMENT_DAMAGE_MAX_SCALE			= 300
		ORBITAL_BOMBARDMENT_COLONY_DMG_SCALE			= 0.01
		ORBITAL_BOMBARDMENT_PLANET_DMG_SCALE			= 0.001
		ORBITAL_BOMBARDMENT_ARMY_DMG_SCALE				= 0.02
		ORBITAL_BOMBARDMENT_ASSAULT_ARMY_DAMAGE_MULT	= 7.00	# Assault armies take this much more damage from orbital bombardment
		ORBITAL_BOMBARDMENT_KILL_POP_CHANCE				= 0.5	# Multiplied by stance & damage dealt
		ORBITAL_BOMBARDMENT_KILL_POP_COOLDOWN			= 1	# Min days between killing pops from bombardment

		OCCUPATION_BASE_VALUE 					= 7		# Base value of occupied system, used for calculating relative occupation score of empire
		OCCUPATION_PLANET_VALUE 				= 15	# Per planet in system
		OCCUPATION_POP_VALUE 					= 0.3	# Per pop in system
		OCCUPATION_STARBASE_VALUE 				= 10	# If starbase is upgraded

		SUBJECTS_INTEGRATION_CAP				= 3 # Amount of integrations you're allowed to have at the same time	

		SPECIES_POLICY_YEARS 	= 1

		ESPIONAGE_OPERATION_BASE_ROLL_FREQUENCY = 14.0 # Roll frequency in days

		RESOLUTION_VOTE_TIMER = 365					# number of days a resolution will be on the senate floor before being passed/failed
		RESOLUTION_VOTE_PREMATURE_TIMER = 150			# number of days until the custodian/emperor can prematurely end the senate session
		SENATE_RECESS_TIMER = 365						# number of days until the next proposed resolution will be put on the floor after the current vote
		COUNCIL_DIPLOMACY_WEIGHT_MODIFIER = 4			# how much a countries diplomatic weight will be increased when voting if on the council
		CHANGE_VOTE_COOLDOWN = 60						# number of days after voting in a resolution before you can change your vote

		DEFAULT_COUNCIL_SIZE = 0 						# default number of community council members, will be modified
		DEFAULT_COUNCIL_VETO = no 						# can the council veto resolutions by default?
		DEFAULT_COUNCIL_EMERGENCY_MEASURES = yes		# can the council by default propose emergency measures?
		CATEGORY_VOTE_COOLDOWN = 730					# time before another resolution in a given category can proposed again
		TYPE_VOTE_COOLDOWN = 730						# time before a referendum of a given type can be proposed again
		VETO_COOLDOWN = 1800							# time before a country can enact another veto
		EMERGENCY_MEASURES_COOLDOWN = 3650				# time before a country can propose another emergency measure		
	}

	NPop = {
		RESETTLE_DESTROY_COLONY_COST = 0
	}

	NShip = {
		AGGRESSIVE_STANCE_INVASION_ODDS_MULT = 1.1			# Transport fleets on aggressive stance want to have combat strength of enemy ground troops x this to invade a world
		AGGRESSIVE_STANCE_MIN_POWER_MULT	= 0.2			# Fleets that are less than our military power x this will be ignored by aggressive fleets that are bombarding

		DESIGNER_WEAPON_PREF_MUL			= 2.0			# How much does weapon preference tags in the ship designer affect the weight it assigns a weapon?
		DESIGNER_WEAPON_STACKING_DIV		= 0.1			# The higher this is the more the ship designer will try to vary which weapon types are used on its sections
	
		SHIP_EXP_GAIN_COMBAT			= 5.0				# Gained each day ship is in combat

		CAN_TRAVEL_BETWEEN_UNEXPLORED_SYSTEMS = yes		# Can move between 2 unexplored systems
	}

	NCombat = {
		# When ships are attacking they will try to stay at max range and orbit their target.
		# If the ship is closer than max range this value determines how fast it will "back off" in order to get to max range.
		# 0.0 means that the ship will not back off and orbit with whatever radius it already has
		# 1.0 means that the ship will prioritize orbit velocity the same as "back-off"-velocity. i.e a 45 degree angle
		COMBAT_BACK_OFF_RATE					= 0.5
		
		COMBAT_DETECT_RANGE_MULT				= 1.1	# Range to engage in combat with other ships is <fleets max attack range> * COMBAT_DETECT_RANGE_MULT		

		SHIP_DISENGAGE_MAX_CHANCE 					= 0.2
		SHIP_DISENGAGE_FRIENDLY_TERRITORY_MULT		= 1.5
	}

	NEconomy = {

		CLAIM_COST_BASE						= 50.0		# The influence base cost of making claims
		CLAIM_COST_STARBASE					= 30.0		# Added cost for upgraded starbase
		CLAIM_COST_COLONY					= 30.0		# Added cost for colonized system
		CLAIM_COST_DISTANCE					= 5.0		# Added per hyperlane jump away
		CLAIM_COST_MULT_OFFENSIVE_WAR		= 2.0		# Claims are ( 1 + this ) much more expensive to add for attackers in war
		CLAIM_COST_RIVAL_DISCOUNT 			= -0.20		# Claims are ( 1 + this ) much less expensive against rivals
		
	}

	NAI = {
		AI_FREE_JOBS_DISTRICT_BUILD_CAP = 4			# AI will not build new districts on a planet with more than this many free jobs
		AI_DEFICIT_SCORE_MULT = 200					# AI will score buildings producing resources in deficit this much more
		AI_FOCUS_SCORE_MULT = 20					# AI will score buildings producing focus resources this much more
		AI_AMENITIES_SCORE_MULT = 20					# AI will score amenity buildings this much more than other misc resources
		AI_HOUSING_SCORE_MULT = 4.5					# AI will score housing buildings this much more than other misc resources
		AI_CRIME_REDUCTION_SCORE_MULT = 2			# AI will score crime fighting buildings this much more than other misc resource
		AI_ADMIN_CAP_SCORE_MULT = 4					# AI will score admin cap buildings this much more than other misc resource
		AI_POPS_SCORE_MULT = 5						# AI will score pop growth and assembly buildings this much more ( already fairly high weighted  in code )
		AI_UPGRADE_SCORE_MULT = 40					# AI will score building upgrades this much more ( since they don't take up a new building slot )

		# These are used to determine where the AI should be upgrading its starbases
		STARBASE_COLONY_SCORE = 5
		STARBASE_HABITABLE_PLANET_SCORE = 0
		STARBASE_MEGASTRUCTURE_SCORE = 5
		STARBASE_BYPASS_SCORE = 10
		STARBASE_CHOKEPOINT_SCORE = 30
		STARBASE_HAZARD_CHOKEPOINT_SCORE_MULT = 1.5

		WAR_OCCUPIED_BORDER_PRIO = 50				# Priority on targeting systems that are bordering our occupied space
		WAR_OWN_BORDER_PRIO	= 50					# Priority on targeting systems that are bordering us
		WAR_ALLY_BORDER_PRIO = 5					# Priority on targeting systems that are bordering allies
		WAR_NO_BORDER_PRIO = 0.01					# Priority on targeting systems that are in the middle of hostile space
		WAR_DEFENSE_OWN_PRIO = 50					# Priority on defending own borders
		WAR_DEFENSE_CONTROLLED_PRIO = 2				# Priority on defending conquered systems
		WAR_DEFENSE_ALLY_PRIO = 1					# Priority on defending allies
		WAR_NEUTRAL_SPACE_PRIO = 0.5				# Priority on targeting enemies in neutral space
		WAR_ATTACK_CLAIM_PRIO = 20					# Priority on targeting enemy systems we have claimed
		WAR_DEFENSE_CLAIM_PRIO = 3				# Priority on defending claimed system we have conquered
		WAR_DEFENSE_OWN_PLANET_PRIO = 1			# Priority on defending own planets in a controlled system
		WAR_DEFENSE_OWN_PLANET_ENEMY_CONTROL_PRIO = 3 # Priority on defending own planets in an enemy controlled system

		WAR_ATTACK_PLANET_PRIO = 20.0				# Priority on targeting enemy systems with planets
		WAR_ATTACK_PLANET_CONTROLLED_SYSTEM_PRIO = 10.0				# Priority on targeting enemy planets in controlled systems
		WAR_ATTACK_STARBASE_PRIO = 20				# Priority on targeting enemy systems with upgraded starbases
		WAR_DEFEND_STARBASE_PRIO = 2				# Priority on defending systems with an upgraded starbase
		WAR_ATTACK_MILITARY_FLEET_PRIO = 60		# Priority on targeting enemy military fleets
		WAR_ATTACK_JUMP_DRIVE_FLEET_PRIO = 30		# Priority on targeting vulnerable jump-drive fleets that are in cooldown
		
		CRISIS_THREAT_THRESHOLD_UPPER = 40			# At this crisis threat, AI drops other priorities and focuses on fighting the crisis
		CRISIS_THREAT_THRESHOLD_LOWER = 10			# Below this threshold, AI stops focusing on crisis fighting

		CRISIS_MILITARY_POWER_MULT_DEFAULT = 1.1		# AI willing to engage crisis factions at these odds normally
		CRISIS_MILITARY_POWER_MULT_CRISIS_FIGHTER = 0.6		# AI willing to engage crisis factions at these odds if they prioritize crisis fighting
		CRISIS_MILITARY_POWER_MULT_INHABITED_SYSTEM = 0.5		# AI willing to engage crisis factions at these odds in systems of others under attack by crisis
		CRISIS_MILITARY_POWER_MULT_OWN_SYSTEM = 0.33		# AI willing to engage crisis factions at these odds in their own systems
		CRISIS_MILITARY_POWER_MULT_DESPERATION = 0.10		# AI willing to engage crisis factions at these odds when down to their last few worlds
		CRISIS_MILITARY_AGGRESSIVENESS = 100					# aggressiveness of crisis empires. This works the saame as the value in personalities (but crisis don't have personalities, and were using the default "1"

		MIN_FLEET_FOR_OPERATIONS = 500
		MIN_FLEET_TO_RESTRICT_SYSTEM = 3000
		MIN_FLEET_THREAT_TO_CRISIS = 5000

		AI_FOLLOW_FLEET_DESIRE = 0					# AI desire to follow "take point" fleets from random people
		AI_FOLLOW_WAR_LEADER_DESIRE = 0			# AI desire to follow "take point" fleets from the war leader

		FLEET_GROUP_ABORT_MISSION_MULT = 0 # The wanted amount of fleet power needs to have increased by at least this much for the AI to reconsider a mission once commited

		FLEET_COMBAT_INTERVENTION_MULT = 0.5 #  The AI wont try to intervene in a fleet combat unless that intervention puts us at this percentage of the enemy fleet ( i.e. we wont intervene if the enemy outnumbers us by 2 or more )

		OFFENSE_VS_DEFENSE_STRATEGY_ALLOTMENT = 0.5 # How much of its fleet power should a country with 1.0 aggressiveness should try to commit to offensive missions

		FLEET_DAMAGED_THRESHOLD_WAR = 0.75		# threshold when a fleet will be considered damaged and should return for repairs and avoid certain actions
		FLEET_DAMAGED_THRESHOLD_PEACE = 0.95		# same but for peace
		FLEET_ARMOR_DAMAGED_THRESHOLD_WAR = 0.75	# same as above but for armor
		FLEET_ARMOR_DAMAGED_THRESHOLD_PEACE = 0.95	# same but for armor in peace

		TARGET_BASE_SCORE = 100.0			# base score to use when scoring AI military targets
		HOSTILE_FLEETS_TARGET_SCORE = 20 # extra score for engaging hostile fleets
		CAPITAL_TARGET_SCORE = 20 # extra score for defending/invading a capital
		CRISIS_CONSTRUCTOR_TARGET_SCORE = 5	# extra score for crisis defending constructor ships
		CHOKEPOINT_TARGET_MULT = 10 # extra multiplier for defensive scoring of chokepoints

		THREAT_PLANET_MULT = 20.0					# Base threat multiplier for planet
		THREAT_POP_MULT = 0.3
		THREAT_STARBASE_MULT = 4.0					# Base threat multiplier for system with upgraded starbase
		THREAT_SYSTEM_MULT = 2.0					# Base threat multiplier for system

		HIGH_THREAT_THRESHOLD = 40					# Must have at least this much threat to become fearful
		SHARED_THREAT_MULT = 1.1					# How much does having a shared threat boost opinion?
		THREAT_SHARED_THREAT_REDUCTION = 4			# Each point of threat will also eliminate this much shared threat
		SHARED_THREAT_MAX = 100
		THREAT_DECAY = -1							# Each month
		THREAT_DISTANCE_FACTOR = 0.5				# The higher this is the larger the threat reduction from being far away
		THREAT_SIZE_FACTOR = 10.0					# How much does the relative power of the aggressive empire affect threat?
		THREAT_SIZE_FACTOR_MAX = 20.0
		THREAT_SIZE_FACTOR_MIN = 0.1
		THREAT_NAP_FACTOR = 0.5					# How much is threat lowered if we have a NAP or defensive pact?
		THREAT_POSITIVE_OPINION_FACTOR = 0.002		# How much does opinion of the victim affect threat?
		THREAT_NEGATIVE_OPINION_FACTOR = 0.010
		THREAT_OPINION_MAX = 10
		THREAT_OPINION_MIN = 0.75

		AI_AGGRESSIVENESS_LOW_MULT = 5
		AI_AGGRESSIVENESS_HIGH_MULT = 50
		AI_AGGRESSIVENESS_BASE = 500			# Base chance AI will declare a war (multiplied by personality aggressiveness score)
		AI_AGGRESSIVENESS_PROPAGATOR_BOXED_IN_MULT = 100	# When a warlike 'propagator' personality is boxed in aggression is multiplied by this value
		AI_AGGRESSIVENESS_BOXED_IN_MULT = 70	# When an AI can no longer peacefully expand aggression is multiplied by this value
		AI_AGGRESSIVENESS_NO_COLONY_TARGET_MULT = 50 # When an AI has no immediate colony targets and at least MAX_PLANETS_FOR_BUDGET_FACTOR planets (but is not boxed in) aggression is multiplied by this value

		FEDERATION_CONQUEROR_DIFFERENCE = -200	# penalty if one side wants to wage wars of conquest and the other doesn't
		
		OFFER_VASSALIZATION_ACCEPTANCE_ATTITUDE_VASSALIZE = 100
		OFFER_VASSALIZATION_ACCEPTANCE_OTHER_ATTITUDE = -100

		ABORT_MISSION_LIMIT = 0.50				# MilitaryPower fraction below this level will result in AI escaping battle

		WAR_EXHAUSTION_TO_INTERVENE = 0.1		# AI may want to intervene to help empires with this war exhaustion or higher

		PEACE_WAR_EXHAUSTION_FACTOR = 100
		PEACE_OCCUPATION_FACTOR = 500
		PEACE_STATUS_QUO_FACTOR = -100
		PEACE_HIGH_WE_STATUS_QUO_FACTOR = 100
		PEACE_DEMAND_SURRENDER_FACTOR = -100
		PEACE_DEFENDING_CLAIM_SYSTEM_FACTOR = -5	# For every system
		PEACE_DEFENDING_CLAIM_STARBASE_FACTOR = -20	# For systems with upgraded starbases
		PEACE_DEFENDING_CLAIM_PLANET_FACTOR = -70	# For systems with colonies
		PEACE_RELATIVE_NAVY_STRENGTH_FACTOR = 50

		ENEMY_FLEET_POWER_MULT = 0.9			# AI will need the fleet power of the enemy multiplied by this value to become offensive in an offensive war
		ENEMY_ARMY_POWER_MULT = 0.4				# AI will need the military power of the enemy multiplied by this value to land armies on planet
		ENEMY_FLEET_POWER_HOME_SYSTEM_MULT = 0.7 # AI will need the fleet power of the enemy multiplied by this value to attack hostiles in own systems

		TRANSPORT_FLEET_SIZE = 15					# AI will have transport fleets of this size

		MAX_EXPANSION_DISTANCE = 2				# Max number of jumps away AI will build starbases
		MAX_EXPANSION_DISTANCE_SUBJECT = 2		# Max number of jumps away AI subjects will build starbases
		EXPANSION_OWN_PRIORITY = 1000			# Priority on rebuilding destroyed starbases in colonized systems
		EXPANSION_CUT_OFF_SYSTEM_PRIORITY = 10	# Priority on systems cut-off inside own territory
		EXPANSION_BORDERING_PRIORITY = 500		# How much will AI prioritize bordering systems when building starbases
		EXPANSION_RESOURCE_PRIORITY = 2			# How much will AI prioritize resource-rich systems when building starbases
		EXPANSION_COLONY_PRIORITY = 10			# How much will AI prioritize systems with colonizeable worlds when building starbases
		EXPANSION_BYPASS_PRIORITY = 10			# How much will AI prioritize systems with bypasses when building starbases
		EXPANSION_MIN_VALUE_FOR_HIGH_PRIO = 10	# How much value does a system need to be considered priority over building up existing systems in borders
		EXPANSION_RANDOM_AMOUNT	= 30			# A random roll of this amount is added to each system's score when deciding where to expand next
		EXPANSION_RESOURCE_GAIN_UPKEEP	= 0.5	# When checking candidate systems for outposts, the AI looks at the resources in the system and counts this fraction towards upkeep gain

		MAX_CLAIM_DISTANCE = 20					# Max number of jumps away AI will make claims on
		MAX_CLAIM_DISTANCE_SUBJECT = 10			# Max number of jumps away AI subjects will make claims on
		CLAIM_BASE_VALUE = 200
		CLAIM_RESOURCE_FACTOR = 4				# How much will AI prioritize resource-rich systems when making claims
		CLAIM_BYPASS_FACTOR = 20				# How much will AI prioritize systems with bypasses when making claims
		CLAIM_RELATIONS_FACTOR = -0.3			# How much will AI factor in opinion when making claims
		CLAIM_COST_FACTOR = 10				# How much will AI prioritize resource-rich systems when making claims
		CLAIM_COLONY_FACTOR = 30				# How much will AI prioritize colonies when making claims
		CLAIM_BORDERING_FACTOR = 200			# How much will AI prioritize bordering systems when making claims
		
		WAR_DECLARATION_MAX_DISTANCE = 5				# How far away (in jumps) another empire has to be before the empire will not consider them for declaration
		WAR_DECLARATION_MALUS_DISTANCE = 2				# Distance between empires (in jumps) at which the AI will be less likely to declare war
		WAR_DECLARATION_MALUS = 0.5					# malus per jump above the malus distance (above) for each jump
		WAR_DECLARATION_MINIMUM_SCORE = 0.5				# minimum score multiplier for war declaration after all distance have been applied

		AVERAGE_FLEET_SIZE_FACTOR = 0.5
		OWN_FLEET_POWER_FACTOR = 1.0				# How much does AI count its own fleet power when evaluating forces
		ALLY_FLEET_POWER_FACTOR = 0.5				# How much does AI count ally fleet power when evaluating forces
		ENEMY_FLEET_POWER_FACTOR = 1.0				# How much does AI count enemy fleet power when evaluating forces
		FLEET_SUPERIORITY_FACTOR = 1.5				# How stronger should the AI be before it starts considering splitting fleets (fleet count = relative strength / this factor)
		CRISIS_FLEET_SUPERIORITY_FACTOR = 1.0		# Same as previous but will be compared to the strongest foe in the universe	

		FLEET_MAX_DISTANCE_LOOKUP	= 5			# Maximum number of hops the fleet AI should consider when assigning mission.
													# If no objective is found, the backup AI will send it to the closest objective available, or back to base.
		FLEET_MAX_DISTANCE_LOOKUP_LARGE	= 8			# Maximum number of hops the fleet AI should consider when assigning mission on a large map (800 systems or more).
		FLEET_MAX_DISTANCE_LOOKUP_HUGE	= 10			# Maximum number of hops the fleet AI should consider when assigning mission on a large map (1000 systems or more)	
	}
