#Scope: Planet
pw_can_build_planetary_wonder = {
	custom_tooltip = {
		success_text = pw_planet_wonder_limit_warning
		fail_text = pw_planet_wonder_limit

		OR = {
			owner = { has_ascension_perk = pw_ap_planetary_wonders }
			pw_has_any_planetary_wonder = no
		}
	}
}

#Scope: Planet
pw_has_any_planetary_wonder = {
	OR = {
		has_building = pw_building_space_elevator
		has_building_construction = pw_building_space_elevator
		has_building = pw_building_particle_supercollider
		has_building_construction = pw_building_particle_supercollider
		has_building = pw_building_domed_city
		has_building_construction = pw_building_domed_city
		has_building = pw_building_abyssal_crater_test_site
		has_building_construction = pw_building_abyssal_crater_test_site
		has_building = pw_building_abyssal_crater_test_site_habitat
		has_building_construction = pw_building_abyssal_crater_test_site_habitat
		has_building = pw_building_erebus_project
		has_building_construction = pw_building_erebus_project
		has_building = pw_building_erebus_fracking_plant
		has_building_construction = pw_building_erebus_fracking_plant
		has_building = pw_building_helios_tower
		has_building_construction = pw_building_helios_tower
		has_building = pw_building_helios_translucent_obelisk
		has_building_construction = pw_building_helios_translucent_obelisk
		has_building = pw_building_demetrius_fields
		has_building_construction = pw_building_demetrius_fields
		has_building = pw_building_demetrius_chemical_garden
		has_building_construction = pw_building_demetrius_chemical_garden
		has_building = pw_building_galactic_model
		has_building_construction = pw_building_galactic_model
		has_building = pw_building_aligned_galactic_model
		has_building_construction = pw_building_aligned_galactic_model
		has_building = pw_building_panopticon
		has_building_construction = pw_building_panopticon
		has_building = pw_building_enigma_engine
		has_building_construction = pw_building_enigma_engine
		has_building = pw_building_solipsist_debate_hall
		has_building_construction = pw_building_solipsist_debate_hall
		has_building = pw_building_guardian_angel
		has_building_construction = pw_building_guardian_angel
		has_building = pw_building_stellar_sentinel
		has_building_construction = pw_building_stellar_sentinel
		has_building = pw_building_mantle_crucible
		has_building_construction = pw_building_mantle_crucible
		has_building = pw_building_titan_forge
		has_building_construction = pw_building_titan_forge
		has_building = pw_building_industrial_hearth
		has_building_construction = pw_building_industrial_hearth
		has_building = pw_building_pavilion_of_wonders
		has_building_construction = pw_building_pavilion_of_wonders
		has_building = pw_building_fair_of_worlds
		has_building_construction = pw_building_fair_of_worlds
		has_building = pw_building_museum_of_the_grotesque
		has_building_construction = pw_building_museum_of_the_grotesque
		has_building = pw_building_holy_reliquary
		has_building_construction = pw_building_holy_reliquary
		has_building = pw_building_grand_archive
		has_building_construction = pw_building_grand_archive
		has_building = pw_building_transplanetary_logistics_network
		has_building_construction = pw_building_transplanetary_logistics_network
		has_building = pw_building_forbidden_city
		has_building_construction = pw_building_forbidden_city
		has_building = pw_building_festival_plaza
		has_building_construction = pw_building_festival_plaza
		has_building = pw_building_martial_avenue
		has_building_construction = pw_building_martial_avenue
		has_building = pw_building_living_spire_0
		has_building_construction = pw_building_living_spire_0
		has_building = pw_building_living_spire_1
		has_building_construction = pw_building_living_spire_1
		has_building = pw_building_living_spire_2
		has_building_construction = pw_building_living_spire_2
		has_building = pw_building_living_spire_3
		has_building_construction = pw_building_living_spire_3
		has_building = pw_building_conduit_of_unity_0
		has_building_construction = pw_building_conduit_of_unity_0
		has_building = pw_building_conduit_of_unity_1
		has_building_construction = pw_building_conduit_of_unity_1
		has_building = pw_building_interdimensional_collider
		has_building_construction = pw_building_interdimensional_collider
		has_building = pw_building_psionic_observatory
		has_building_construction = pw_building_psionic_observatory
		has_building = pw_building_metal_vivarium
		has_building_construction = pw_building_metal_vivarium
	}
}

#Scope: Planet
#Check if there is another Wonder in the same planet beyond the one passed.
pw_has_any_additional_planetary_wonder = {
	calc_true_if = {
		amount >= 2
		has_building = pw_building_space_elevator
		has_building = pw_building_particle_supercollider
		has_building = pw_building_domed_city
		has_building = pw_building_abyssal_crater_test_site
		has_building = pw_building_abyssal_crater_test_site_habitat
		has_building = pw_building_erebus_project
		has_building = pw_building_erebus_fracking_plant
		has_building = pw_building_helios_tower
		has_building = pw_building_helios_translucent_obelisk
		has_building = pw_building_demetrius_fields
		has_building = pw_building_demetrius_chemical_garden
		has_building = pw_building_galactic_model
		has_building = pw_building_aligned_galactic_model
		has_building = pw_building_panopticon
		has_building = pw_building_enigma_engine
		has_building = pw_building_solipsist_debate_hall
		has_building = pw_building_guardian_angel
		has_building = pw_building_stellar_sentinel
		has_building = pw_building_mantle_crucible
		has_building = pw_building_titan_forge
		has_building = pw_building_industrial_hearth
		has_building = pw_building_pavilion_of_wonders
		has_building = pw_building_fair_of_worlds
		has_building = pw_building_museum_of_the_grotesque
		has_building = pw_building_holy_reliquary
		has_building = pw_building_grand_archive
		has_building = pw_building_transplanetary_logistics_network
		has_building = pw_building_forbidden_city
		has_building = pw_building_festival_plaza
		has_building = pw_building_martial_avenue
		has_building = pw_building_living_spire_0
		has_building = pw_building_living_spire_1
		has_building = pw_building_living_spire_2
		has_building = pw_building_living_spire_3
		has_building = pw_building_conduit_of_unity_0
		has_building = pw_building_conduit_of_unity_1
		has_building = pw_building_interdimensional_collider
		has_building = pw_building_psionic_observatory
		has_building = pw_building_metal_vivarium
	}
}

#Scope: Country
pw_has_build_any_planetary_wonder = {
	OR = {
		has_country_flag = pw_space_elevator_built
		has_country_flag = pw_particle_supercollider_built
		has_country_flag = pw_domed_city_built
		has_country_flag = pw_abyssal_crater_test_site_built
		has_country_flag = pw_erebus_project_built
		has_country_flag = pw_erebus_fracking_plant_built
		has_country_flag = pw_helios_tower_built
		has_country_flag = pw_helios_translucent_obelisk_built
		has_country_flag = pw_demetrius_fields_built
		has_country_flag = pw_demetrius_chemical_garden_built
		has_country_flag = pw_galactic_model_built
		has_country_flag = pw_aligned_galactic_model_built
		has_country_flag = pw_panopticon_built
		has_country_flag = pw_enigma_engine_built
		has_country_flag = pw_solipsist_debate_hall_built
		has_country_flag = pw_guardian_angel_built
		has_country_flag = pw_stellar_sentinel_built
		has_country_flag = pw_mantle_crucible_built
		has_country_flag = pw_titan_forge_built
		has_country_flag = pw_industrial_hearth_built
		has_country_flag = pw_pavilion_of_wonders_built
		has_country_flag = pw_fair_of_worlds_built
		has_country_flag = pw_museum_of_the_grotesque_built
		has_country_flag = pw_holy_reliquary_built
		has_country_flag = pw_grand_archive_built
		has_country_flag = pw_transplanetary_logistics_network_built
		has_country_flag = pw_forbidden_city_built
		has_country_flag = pw_festival_plaza_built
		has_country_flag = pw_martial_avenue_built
		has_country_flag = pw_living_spire_built
		has_country_flag = pw_conduit_of_unity_built
		has_country_flag = pw_interdimensional_collider_built
		has_country_flag = pw_psionic_observatory_built
		has_country_flag = pw_metal_vivarium_built
	}
}

# Scope: Planet
pw_is_wonder_empire_unique = {
	custom_tooltip = {
		fail_text = pw_empire_unique_tooltip
		owner = {
			count_owned_planet = {
				count = all #Every owned planet
				limit = {
					OR = {
						is_planet = ROOT #Ignores the triggering planet so it does not mess up upgrades.
						NOR = { #Cannot have or be constructing this wonder
							has_building = $WONDER$
							has_building_construction = $WONDER$
						}
					}
				}
			}
		}
	}
}

# Scope: Planet
pw_is_wonder_sector_unique = {
	custom_tooltip = {
		fail_text = pw_sector_unique_tooltip
		sector = {
			count_owned_planet = {
				count = all #Every owned planet
				limit = {
					OR = {
						is_planet = ROOT #Ignores the triggering planet so it does not mess up upgrades.
						NOR = { #Cannot have or be constructing this wonder
							has_building = $WONDER$
							has_building_construction = $WONDER$
						}
					}
				}
			}
		}
	}
}

pw_is_planet_ideal = {
	OR = {
		is_planet_class = pc_gaia
		is_planet_class = pc_city
		is_planet_class = pc_ringworld_habitable
		is_planet_class = pc_hive
		is_homeworld = yes
	}
}

# Scope: Pop
pw_sentient_worker_job_check_trigger = {
	worker_job_check_trigger = yes
	hidden_trigger = {
		exists = owner
		OR = {
			NOT = { has_trait = trait_mechanical }
			AND = {
				owner = { has_technology = tech_synthetic_workers }
				owner = { NOT = { has_policy_flag = ai_outlawed } }
			}
		}
	}
}

#Scope: Country
pw_last_increased_tech_was_enigma_tech = {
	OR = {
		last_increased_tech = pw_enigma_tech_micro_graviton_equipment
		last_increased_tech = pw_enigma_tech_absolute_processor_cooling
		last_increased_tech = pw_enigma_tech_non_euclidean_building
		last_increased_tech = pw_enigma_tech_quantum_movement
		last_increased_tech = pw_enigma_tech_harmonic_aligning_magnets
		last_increased_tech = pw_enigma_tech_virtual_conscience
		last_increased_tech = pw_enigma_tech_hypersonic_frequency_tuning
		last_increased_tech = pw_enigma_tech_hyper_stabilization_fields
		last_increased_tech = pw_enigma_tech_breach_of_thermodynamic_law
		last_increased_tech = pw_enigma_tech_atomic_transistor_substrate
		last_increased_tech = pw_enigma_tech_reflex_arc_emulators
		last_increased_tech = pw_enigma_tech_atomic_clock_synchronization
		last_increased_tech = pw_enigma_tech_gas_molecular_sculpting
		last_increased_tech = pw_enigma_tech_exoteric_predictions_system
		last_increased_tech = pw_enigma_tech_bio_frequency_emitters
		last_increased_tech = pw_enigma_tech_exoteric_fleet_pattern
		last_increased_tech = pw_enigma_tech_impossible_architecture
		last_increased_tech = pw_enigma_tech_one_with_the_machine
		last_increased_tech = pw_enigma_tech_hypersonic_frequency_harmony
		last_increased_tech = pw_enigma_tech_complete_stabilization_fields
		last_increased_tech = pw_enigma_tech_simultaneous_prime_analysis
		last_increased_tech = pw_enigma_tech_unintelligible_data_organization
		last_increased_tech = pw_enigma_tech_gas_molecular_generation
		last_increased_tech = pw_enigma_tech_societal_overclock_regime
		last_increased_tech = pw_enigma_tech_simulations_within_simulations
	}
}

#Scope: Planet
pw_decision_has_mega_arts_exhibition = {
	custom_tooltip = {
		fail_text = pw_decision_has_mega_arts_exhibition_tooltip
		owner = {
			OR = {
				has_megastructure = mega_art_installation_3
				has_megastructure = mega_art_installation_4
				has_megastructure = mega_art_installation_restored
				has_megastructure = mega_art_installation_restored_2
			}
		}
	}
}

#Scope: Country
pw_has_unity_to_sanctify_artifact = {
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_sanctified_artifacts_count
				value = 0
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_holy_reliquary_sanctify_cost_check_0
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_sanctified_artifacts_count
				value = 1
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_holy_reliquary_sanctify_cost_check_1
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_sanctified_artifacts_count
				value = 2
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_holy_reliquary_sanctify_cost_check_2
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_sanctified_artifacts_count
				value = 3
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_holy_reliquary_sanctify_cost_check_3
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_sanctified_artifacts_count
				value = 4
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_holy_reliquary_sanctify_cost_check_4
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_sanctified_artifacts_count
				value = 5
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_holy_reliquary_sanctify_cost_check_5
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_sanctified_artifacts_count
				value = 6
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_holy_reliquary_sanctify_cost_check_6
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_sanctified_artifacts_count
				value > 6 #Shouldn't happen, but just to make sure.
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_holy_reliquary_sanctify_cost_check_7
		}
	}
}

#Scope: Country
pw_alternate_tradition_can_sanctify_relic = {
	custom_tooltip = {
		fail_text = pw_holy_reliquary.finish_more_traditions
		if = {
			limit = {
				check_variable = {
					which = pw_sanctified_artifacts_count
					value = 0
				}
			}
			num_ascension_perk_slots > 0
		}
		else_if = {
			limit = {
				check_variable = {
					which = pw_sanctified_artifacts_count
					value = 1
				}
			}
			num_ascension_perk_slots > 1
		}
		else_if = {
			limit = {
				check_variable = {
					which = pw_sanctified_artifacts_count
					value = 2
				}
			}
			num_ascension_perk_slots > 2
		}
		else_if = {
			limit = {
				check_variable = {
					which = pw_sanctified_artifacts_count
					value = 3
				}
			}
			num_ascension_perk_slots > 3
		}
		else_if = {
			limit = {
				check_variable = {
					which = pw_sanctified_artifacts_count
					value = 4
				}
			}
			num_ascension_perk_slots > 4
		}
		else_if = {
			limit = {
				check_variable = {
					which = pw_sanctified_artifacts_count
					value = 5
				}
			}
			num_ascension_perk_slots > 5
		}
		else_if = {
			limit = {
				check_variable = {
					which = pw_sanctified_artifacts_count
					value = 6
				}
			}
			num_ascension_perk_slots > 6
		}
		else_if = {
			limit = {
				check_variable = {
					which = pw_sanctified_artifacts_count
					value = 7
				}
			}
			num_ascension_perk_slots > 7
		}
	}
}

#Scope: Country
pw_has_sanctified_all_relics = {
	custom_tooltip = {
		text = pw_holy_reliquary.has_sanctified_all_relics
		has_country_flag = pw_holy_reliquary_sanctified_mirror
		has_country_flag = pw_holy_reliquary_sanctified_scepter
		has_country_flag = pw_holy_reliquary_sanctified_codex
	}
}

#Scope: Country
pw_has_unity_to_assemble_archive = {
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 0
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_0
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 1
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_1
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 2
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_2
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 3
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_3
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 4
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_4
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 5
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_5
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 6
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_6
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 7
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_7
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value = 8
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_8
		}
	}
	conditional_tooltip = {
		trigger = {
			check_variable = {
				which = pw_archives_assembled_count
				value > 8
			}
		}
		resource_stockpile_compare = {
			resource = unity
			value >= @pw_grand_archive_assemble_cost_check_final
		}
	}
}

#Planet Scope
pw_planet_has_particle_supercollider = {
	OR = {
		has_active_building = pw_building_particle_supercollider
		has_active_building = pw_building_interdimensional_collider
	}
}

#Planet Scope
pw_planet_has_domed_city = {
	OR = {
		has_active_building = pw_building_domed_city
		has_active_building = pw_building_secluded_sector
		has_active_building = pw_building_psionic_observatory
	}
}

#Planet Scope
pw_planet_has_abyssal_test_crater = {
	OR = {
		has_active_building = pw_building_abyssal_crater_test_site
		has_active_building = pw_building_abyssal_crater_test_site_habitat
		has_active_building = pw_building_metal_vivarium
	}
}
