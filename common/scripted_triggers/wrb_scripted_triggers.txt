
#######################################
### We Require Borders by MrFunEGUY ###
#######################################

get_border_test = {
	if = {
		limit = { has_global_flag = we_require_borders }
		if = { limit = { has_country_flag = shares_borders_with_@from } }
		else = {
			custom_tooltip = {
				fail_text = no_shared_borders
				always = no
			}
		}
	}
}

get_border_test_defense = {
	if = {
		limit = { has_global_flag = we_require_borders }
		if = { limit = { has_country_flag = shares_defense_borders_with_@from } }
		else = {
			custom_tooltip = {
				fail_text = no_shared_borders
				always = no
			}
		}
	}
}

#####

get_regular_border_check = {
	OR = {
		any_system_within_border = {
			closest_system = {
				limit = {
					exists = space_owner
					space_owner = {
						OR = {
							is_same_value = root
							is_in_federation_with = root
							AND = {
								exists = overlord
								overlord = { is_same_value = root }
							}
						}
					}
				}
				use_bypasses = yes
				max_steps = 1
			}
		}
		any_subject = {
			is_auto_state = no
			any_system_within_border = {
				closest_system = {
					limit = {
						exists = space_owner
						space_owner = {
							OR = {
								is_same_value = root
								is_in_federation_with = root
								AND = {
									exists = overlord
									overlord = { is_same_value = root }
								}
							}
						}
					}
					use_bypasses = yes
					max_steps = 1
				}
			}
		}
	}
}

get_defense_border_check = {
	OR = {
		any_system_within_border = {
			closest_system = {
				limit = {
					exists = space_owner
					space_owner = {
						OR = {
							is_same_value = root
							is_in_federation_with = root
							is_neighbor_of = from
							AND = {
								exists = overlord
								overlord = { is_same_value = root }
							}
						}
					}
				}
				use_bypasses = yes
				max_steps = 1
			}
		}
		any_subject = {
			is_auto_state = no
			any_system_within_border = {
				closest_system = {
					limit = {
						exists = space_owner
						space_owner = {
							OR = {
								is_same_value = root
								is_in_federation_with = root
								is_neighbor_of = from
								AND = {
									exists = overlord
									overlord = { is_same_value = root }
								}
							}
						}
					}
					use_bypasses = yes
					max_steps = 1
				}
			}
		}
	}
}