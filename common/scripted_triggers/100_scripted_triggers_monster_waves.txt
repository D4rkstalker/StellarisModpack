##########################################################################
# Scripter Triggers for Monster Waves
#
# Written by ScepraX
##########################################################################

# Check if any monstrosity is active
is_any_monster_boss_active = {
	any_country = {
		OR = {
			is_country_type = monster_waves_tiyanki
			is_country_type = monster_waves_amoeba
			is_country_type = monster_waves_cloud
			is_country_type = monster_waves_drone
			is_country_type = monster_waves_crystal
		}
		any_owned_ship = {
			OR = {
				is_ship_size = wraith_01_blue
				is_ship_size = wraith_01_red
				is_ship_size = wraith_01_yellow
				is_ship_size = space_dragon_baby
				is_ship_size = space_dragon_red
				is_ship_size = monster_waves_cloud
				is_ship_size = monster_waves_drone
				is_ship_size = monster_waves_crystal
			}
		}	
	}
}

# Complex check to support automated testing
# When using human_ai, all countries have is_ai = no.
# When using observe, no country has is_ai = no
#is_monster_waves_player = {
#	OR = {
#		is_ai = no
#		AND = {
#			has_country_flag = tutorial_level_picked
#			NOT = {
#				any_country = {
#					is_ai = no
#				}
#			}
#		}
#	}
#}

# Checks to see if the owner of the spawn location has a certain amount of fleet power
is_monster_waves_fleet_power_1 = {
	event_target:spawn_location = {
		closest_system = {
			limit = {
				exists = space_owner
				space_owner = {
					is_country_type = default
				}
			}
			space_owner = {
				fleet_power > 10000
			}
		}
	}
}

is_monster_waves_fleet_power_2 = {
	event_target:spawn_location = {
		closest_system = {
			limit = {
				exists = space_owner
				space_owner = {
					is_country_type = default
				}
			}
			space_owner = {
				fleet_power > 20000
			}
		}
	}
}

is_monster_waves_fleet_power_3 = {
	event_target:spawn_location = {
		closest_system = {
			limit = {
				exists = space_owner
				space_owner = {
					is_country_type = default
				}
			}
			space_owner = {
				fleet_power > 30000
			}
		}
	}
}

is_monster_waves_fleet_power_4 = {
	event_target:spawn_location = {
		closest_system = {
			limit = {
				exists = space_owner
				space_owner = {
					is_country_type = default
				}
			}
			space_owner = {
				fleet_power > 40000
			}
		}
	}
}

is_monster_waves_fleet_power_5 = {
	event_target:spawn_location = {
		closest_system = {
			limit = {
				exists = space_owner
				space_owner = {
					is_country_type = default
				}
			}
			space_owner = {
				fleet_power > 50000
			}
		}
	}
}

# Checks for difficulty
is_monster_waves_very_easy = {
	any_country = {
		is_ai = no
		has_policy_flag = monster_waves_very_easy
	}
}

is_monster_waves_easy = {
	NOT = {
		is_monster_waves_very_easy = yes
	}
	any_country = {
		is_ai = no
		has_policy_flag = monster_waves_easy
	}
}

is_monster_waves_medium= {
	NOR = {
		is_monster_waves_very_easy = yes
		is_monster_waves_easy = yes
	}
	any_country = {
		is_ai = no
		has_policy_flag = monster_waves_medium
	}
}

is_monster_waves_hard = {
	NOR = {
		is_monster_waves_very_easy = yes
		is_monster_waves_easy = yes
		is_monster_waves_medium = yes
	}
	any_country = {
		is_ai = no
		has_policy_flag = monster_waves_hard
	}
}

is_monster_waves_insane = {
	NOR = {
		is_monster_waves_very_easy = yes
		is_monster_waves_easy = yes
		is_monster_waves_medium = yes
		is_monster_waves_hard = yes
	}
	any_country = {
		is_ai = no
		has_policy_flag = monster_waves_insane
	}
}