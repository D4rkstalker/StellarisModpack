###################################### Vanilla ######################################
can_destroy_planet_with_PLANET_KILLER_CRACKER = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = fotd_cant_collossus
		NOT = { has_planet_flag = fotd_seperatist_planet@from.owner }
		exists = from.owner
		from.owner = { 
			NOT = { has_country_flag = fotd_seperatist_country@from.owner }
		}
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# colony
					exists = owner
					owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# primitive target
					custom_tooltip = {
						text = cannot_crack_pre_ftl_planet_ownership
						exists = space_owner
						exists = owner
						owner = { is_primitive = yes }
						space_owner = {
							OR = {
								is_same_value = from.owner
								merg_is_at_war = yes
							}
						}
					}
					custom_tooltip = {
						text = cannot_crack_pre_ftl_planet_interference
						# primitive
						exists = owner
						owner = { is_primitive = yes }
						from.owner = { has_policy_flag = interference_aggressive }
					}
				}
			}
		}
		custom_tooltip = {
			text = not_barren_molten_frozen_toxic_test_fire
			NOT = { exists = owner }
			OR = {
				NOT = { exists = space_owner }
				AND = {
					exists = space_owner
					space_owner = { is_same_empire = from.owner }
				}
			}
			OR = {
				# Rewriting this part for max compatibility, inspired by Planetary Diversity
				colonizable_planet = yes
				is_artificial = yes
				uninhabitable_regular_planet = yes
			}
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_SHIELDER = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		OR = {
			is_a_habitable_planet_megastructure = yes
			is_planet_class = pc_ai
			merg_is_forbidden_target = no
		}
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			merg_planet_is_hostile_or_crisis = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
		}
	}
	custom_tooltip = {
		fail_text = fotd_cant_collossus
		NOT = { has_planet_flag = fotd_seperatist_planet@from.owner }
		exists = from.owner
		from.owner = { 
			NOT = { has_country_flag = fotd_seperatist_country@from.owner }
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = { has_policy_flag = interference_aggressive }
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
}
can_destroy_planet_with_PLANET_KILLER_NEUTRON = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		OR = {
			AND = {
				merg_has_safety_off = no
				is_a_habitable_planet_megastructure = yes
			}
			merg_is_forbidden_target = no
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = fotd_cant_collossus
		NOT = { has_planet_flag = fotd_seperatist_planet@from.owner }
		exists = from.owner
		from.owner = { 
			NOT = { has_country_flag = fotd_seperatist_country@from.owner }
		}
	}
	custom_tooltip = {
		fail_text = is_not_hostile
		OR = {
			merg_planet_is_hostile_or_crisis = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
				custom_tooltip = {
					fail_text = primitives_not_full_interference
					from.owner = { has_policy_flag = interference_aggressive }
				}
			}
			AND = {
				# at war with primitive space owner
				exists = space_owner
				exists = owner
				owner = { is_primitive = yes }
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = is_unpopulated
		OR = {
			num_pops > 0
			is_planet_class = pc_infested
			# Expanded Events
			has_modifier = planet_active_worm
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_GODRAY = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		OR = {
			is_a_habitable_planet_megastructure = yes
			is_planet_class = pc_ai
		}
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = fotd_cant_collossus
		NOT = { has_planet_flag = fotd_seperatist_planet@from.owner }
		exists = from.owner
		from.owner = { 
			NOT = { has_country_flag = fotd_seperatist_country@from.owner }
		}
	}
	custom_tooltip = {
		#success_text = "is at war with player"
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			is_planet_class = pc_ai
			AND = {
				exists = owner
				owner = {
					is_country_type = primitive
				}
			}
			AND = {
				exists = owner
				owner = {
					is_same_empire = from.owner
				}
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = {
				is_country_type = primitive
			}
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = { has_policy_flag = interference_aggressive }
		}
	}
	# target own colony
	if = {
		limit = {
			NOR = {
				planet_is_hostile = yes
				AND = {
					exists = owner
					owner = { is_country_type = primitive }
				}
			}
			exists = owner
			owner = { is_same_value = from.owner }
		}
		custom_tooltip = {
			text = not_owned_test_fire
			exists = owner
			owner = { is_same_value = from.owner }
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_NANOBOTS = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = fotd_cant_collossus
		NOT = { has_planet_flag = fotd_seperatist_planet@from.owner }
		exists = from.owner
		from.owner = { 
			NOT = { has_country_flag = fotd_seperatist_country@from.owner }
		}
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
			AND = {
				merg_has_safety_off = yes
				is_same_value = from.owner
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_in_borders
			exists = space_owner
			space_owner = { is_same_empire = from.owner }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = { has_policy_flag = interference_aggressive }
		}
	}
	custom_tooltip = {
		fail_text = no_assimilatable_pops
		any_owned_pop = {
			is_valid_pop_for_PLANET_KILLER_NANOBOTS = yes
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_DELUGE = {
	custom_tooltip = {
		fail_text = is_habitable_non_artificial
		OR = {
			is_colonizable = yes
			is_colony = yes
		}
		merg_is_forbidden_target = no
		is_artificial = no
	}
	custom_tooltip = {
		fail_text = fotd_cant_collossus
		NOT = { has_planet_flag = fotd_seperatist_planet@from.owner }
		exists = from.owner
		from.owner = { 
			NOT = { has_country_flag = fotd_seperatist_country@from.owner }
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_oceanic
		merg_is_aquatic = no
	}
	if = {
		limit = { is_inside_border = from.owner }
		if = {
			limit = {
				#Uninhabited and primitive planets are always fine, if own colony then check if pops would be purged
				exists = owner
				owner = { is_same_value = from.owner }
				any_owned_species = {
					NOT = { has_trait = trait_aquatic }
				}
			}
			custom_tooltip = {
				fail_text = requires_purge_allowed
				success_text = will_purge_non_aquatic_pops
				from.owner = {
					is_ai = no
					has_policy_flag = purge_allowed
				}
			}
		}
	}
	else = {
		custom_tooltip = {
			fail_text = is_not_hostile_or_primitive_or_ours
			OR = {
				merg_planet_is_hostile_or_crisis = yes
				AND = {
					exists = owner
					owner = { is_country_type = primitive }
				}
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_in_borders
			exists = space_owner
			space_owner = { is_same_value = from.owner }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = {
				has_policy_flag = interference_aggressive
			}
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_TOXIFIER = {
	custom_tooltip = {
		fail_text = is_habitable_non_artificial
		OR = {
			is_colonizable = yes
			is_colony = yes
		}
		merg_is_forbidden_target = no
		is_artificial = no
	}
	custom_tooltip = {
		fail_text = fotd_cant_collossus
		NOT = { has_planet_flag = fotd_seperatist_planet@from.owner }
		exists = from.owner
		from.owner = { 
			NOT = { has_country_flag = fotd_seperatist_country@from.owner }
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						merg_is_at_war = yes
					}
				}
				AND = { # colony
					exists = owner
					owner = {
						merg_is_at_war = yes
					}
				}
				AND = { # primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						merg_is_at_war = yes
					}
				}
			}
		}
		custom_tooltip = {
			text = is_not_owned_or_claimed
			NOR = {
				exists = owner
				exists = space_owner
			}
		}
		custom_tooltip = {
			text = is_uninhabited_within_borders
			exists = space_owner
			space_owner = { is_same_value = from.owner }
			is_colony = no
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_DEVOLUTION = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		OR = {
			is_a_habitable_planet_megastructure = yes
			is_planet_class = pc_ai
		}
	}
	custom_tooltip = {
		fail_text = recently_devolved
		NOT = { has_planet_flag = devolved_planet }
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = fotd_cant_collossus
		NOT = { has_planet_flag = fotd_seperatist_planet@from.owner }
		exists = from.owner
		from.owner = { 
			NOT = { has_country_flag = fotd_seperatist_country@from.owner }
		}
	}
	custom_tooltip = {
		#success_text = "is at war with player"
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			is_planet_class = pc_ai
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = {
				has_policy_flag = interference_aggressive
			}
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_STAR_CRACKER = {
	custom_tooltip = {
		fail_text = is_your_megastructure_system
		NOT = {
			solar_system = {
				has_star_flag = crisis_sphere_system@from.owner
				any_system_megastructure = { has_megastructure_flag = crisis_sphere }
			}
		}
	}
	custom_tooltip = {
		fail_text = is_not_star
		is_star = yes
		solar_system = {
			any_system_planet = { merg_is_untargetable = no }
		}
	}
	custom_tooltip = {
		fail_text = is_black_hole
		exists = system_star
		system_star = { merg_is_black_or_white_hole = no }
	}
	custom_tooltip = {
		fail_text = is_sc_black_hole
		solar_system = { merg_is_hole_star_class = no }
	}
	custom_tooltip = {
		fail_text = star_owner_is_not_hostile
		OR = {
			NOT = { exists = space_owner }
			space_owner = { is_hostile = from.owner }
			space_owner = { is_same_value = from.owner }
		}
	}
}

###################################### Mods start here ######################################

############################### Acquisition of Technologies ###############################
can_destroy_planet_with_ACOT_PLANET_KILLER_CRACKER = { can_destroy_planet_with_PLANET_KILLER_CRACKER = yes }
can_destroy_planet_with_ACOT_PLANET_KILLER_SHIELDER = { can_destroy_planet_with_PLANET_KILLER_SHIELDER = yes }
can_destroy_planet_with_ACOT_PLANET_KILLER_NEUTRON = { can_destroy_planet_with_PLANET_KILLER_NEUTRON = yes }
can_destroy_planet_with_ACOT_PLANET_KILLER_GODRAY = { can_destroy_planet_with_ACOT_PLANET_KILLER_GODRAY = yes }
can_destroy_planet_with_ACOT_PLANET_KILLER_NANOBOTS = { can_destroy_planet_with_ACOT_PLANET_KILLER_NANOBOTS = yes }
can_destroy_planet_with_ACOT_SE_PLANET_KILLER_CRACKER = { can_destroy_planet_with_PLANET_KILLER_CRACKER = yes }
can_destroy_planet_with_ACOT_SE_PLANET_KILLER_SHIELDER = { can_destroy_planet_with_PLANET_KILLER_SHIELDER = yes }
can_destroy_planet_with_ACOT_SE_PLANET_KILLER_NEUTRON = { can_destroy_planet_with_PLANET_KILLER_NEUTRON = yes }
can_destroy_planet_with_ACOT_SE_PLANET_KILLER_GODRAY = { can_destroy_planet_with_ACOT_PLANET_KILLER_GODRAY = yes }
can_destroy_planet_with_ACOT_SE_PLANET_KILLER_NANOBOTS = { can_destroy_planet_with_ACOT_PLANET_KILLER_NANOBOTS = yes }
can_destroy_planet_with_ACOT_HE_PLANET_KILLER_CRACKER = { can_destroy_planet_with_PLANET_KILLER_CRACKER = yes }
can_destroy_planet_with_ACOT_HE_PLANET_KILLER_CRACKER = { can_destroy_planet_with_PLANET_KILLER_CRACKER = yes }
can_destroy_planet_with_ACOT_HE_PLANET_KILLER_SHIELDER = { can_destroy_planet_with_PLANET_KILLER_SHIELDER = yes }
can_destroy_planet_with_ACOT_HE_PLANET_KILLER_NEUTRON = { can_destroy_planet_with_PLANET_KILLER_NEUTRON = yes }
can_destroy_planet_with_ACOT_HE_PLANET_KILLER_GODRAY = { can_destroy_planet_with_ACOT_PLANET_KILLER_GODRAY = yes }
can_destroy_planet_with_ACOT_HE_PLANET_KILLER_NANOBOTS = { can_destroy_planet_with_ACOT_PLANET_KILLER_NANOBOTS = yes }

############################### Ancient Caches of Technologies ###############################
can_destroy_planet_with_ACOT_EMISSARY_BEAM = {
	custom_tooltip = {
		text = acot_emissary_on_cooldown
		FROM = { NOT = { has_fleet_flag = acot_emissary_beam_delay } }
	}
	custom_tooltip = {
		fail_text = is_shielded
		NOR = {
			is_planet_class = pc_shielded
			is_planet_class = pc_ringworld_shielded
			is_planet_class = pc_habitat_shielded
		}
	}
	OR = {
		custom_tooltip = {
			text = acot_is_valid_for_emissary_beam
			OR = {
				NOT = { exists = space_owner }
				AND = {
					exists = space_owner
					space_owner = { is_same_value = from.owner }
				}
			}
			is_a_planet = yes
			is_asteroid = no
			is_star = no
			is_artificial = no
			merg_is_gas_giant = no
			merg_is_habitat = no
			merg_is_hab_ringworld = no
		}		
	}
}

############################### Ancient Empire ###############################
can_destroy_planet_with_ag_ancient_epsilon_planet_killer_weapon = {
	custom_tooltip = {
		fail_text = "ag_requires_a_star_star_killer"
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = "ag_requires_is_star_star_killer"
		OR = {
			AND = {
				from.owner = {
					has_country_flag = ag_ship_subsystem_enabled_501_19
					OR = {
						has_country_flag = ag_epsilon_star_killer_planet_killer_mode
						has_country_flag = ag_epsilon_star_killer_planet_sweeper_mode
					}
				}
				is_star = no
			}
			is_star = yes
		}
	}
	custom_tooltip = {
		fail_text = "ag_requires_no_compact_star_star_killer"
		merg_is_dense_star = no
	}
	custom_tooltip = {
		fail_text = "ag_requires_outside_border_star_killer"
		NOR = {
			AND = {
				from.owner = {
					NOR = {
						has_country_flag = ag_epsilon_star_killer_planet_killer_mode
						has_country_flag = ag_epsilon_star_killer_planet_sweeper_mode
					}
				}
				is_inside_border = from.owner
				solar_system = {
					any_system_planet = {
						OR = {
							is_colony = yes
							is_under_colonization = yes
						}
					}
				}
			}
			AND = {
				from.owner = {
					OR = {
						has_country_flag = ag_epsilon_star_killer_planet_killer_mode
						has_country_flag = ag_epsilon_star_killer_planet_sweeper_mode
					}
				}
				exists = owner
				owner = {
					is_same_value = from.owner
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = "ag_requires_declares_war_star_killer"
		OR = {
			AND = {
				from.owner = {
					NOR = {
						has_country_flag = ag_epsilon_star_killer_planet_killer_mode
						has_country_flag = ag_epsilon_star_killer_planet_sweeper_mode
					}
				}
				OR = {
					is_inside_border = from.owner
					solar_system = {
						NOT = { exists = space_owner }
					}
					solar_system = {
						exists = space_owner
						space_owner = { is_hostile = from.owner }
					}
				}
			}
			AND = {
				from.owner = {
					OR = {
						has_country_flag = ag_epsilon_star_killer_planet_killer_mode
						has_country_flag = ag_epsilon_star_killer_planet_sweeper_mode
					}
				}
				NAND = {
					exists = owner
					owner = {
						NOT = { is_hostile = from.owner }
					}
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = "ag_requires_no_pacifist_star_killer"
		from.owner = { is_pacifist = no }
	}
	custom_tooltip = {
		fail_text = "ag_requires_no_ancient_system"
		ag_is_ancient_system = no
	}
	custom_tooltip = {
		fail_text = "ag_requires_no_zeta_crisis_system"
		NOT = {
			has_star_flag = ag_zeta_crisis_core_system
		}
	}
	custom_tooltip = {
		fail_text = "ag_requires_no_special_system"
		ag_is_special_system = no
	}
	custom_tooltip = {
		fail_text = "ag_requires_no_charging_star_killer"
		from = {
			NOT = {
				any_owned_ship = {
					is_ship_size = ag_epsilon_titan_1
					has_ship_flag = ag_epsilon_firing_star_killer_weapon
				}
			}
		}
	}
}

############################### Arknights Near Future ###############################
can_destroy_planet_with_PLANET_KILLER_ARK_FROSTNOVA = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			AND = {
				# primitive
				exists = owner
				owner = { is_primitive = yes }
			}
			has_owner = no
			AND = {
				exists = space_owner
				space_owner = {
					OR = {
						is_at_war_with = from.owner
						is_country_type = swarm
						is_country_type = extradimensional
						is_country_type = extradimensional_2
						is_country_type = extradimensional_3
					}
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = ark_is_ai_planet
		NOR = {
			is_planet_class = pc_ai
			is_planet_class = pc_machine
		}
	}
}

############################### AshArms Aquarius History ###############################
can_destroy_planet_with_PLANET_KILLER_Ark_CRACKER = { can_destroy_planet_with_PLANET_KILLER_STAR_CRACKER = yes }
can_destroy_planet_with_PLANET_KILLER_JUMP_ADF = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						OR = {
							merg_is_at_war = yes
							is_same_value = from.owner
						}
					}
				}
				AND = {
					# colony
					exists = owner
					owner = {
						OR = {
							merg_is_at_war = yes
							is_same_value = from.owner
						}
					}
				}
				AND = {
					# primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						OR = {
							merg_is_at_war = yes
							is_same_value = from.owner
						}
					}
				}
			}
		}
	}
}

############################### AssaultLilly in Stellaris ###############################
can_destroy_planet_with_PLANET_KILLER_CRACKER_FAKE = { can_destroy_planet_with_PLANET_KILLER_CRACKER = yes }
can_destroy_planet_with_PLANET_KILLER_SHIELDER_FAKE = { can_destroy_planet_with_PLANET_KILLER_SHIELDER = yes }
can_destroy_planet_with_PLANET_KILLER_NEUTRON_FAKE = { can_destroy_planet_with_PLANET_KILLER_NEUTRON = yes }
can_destroy_planet_with_PLANET_KILLER_GODRAY_FAKE = { can_destroy_planet_with_PLANET_KILLER_GODRAY = yes }
can_destroy_planet_with_PLANET_KILLER_NANOBOTS_FAKE = { can_destroy_planet_with_PLANET_KILLER_NANOBOTS = yes }
planet_is_hostile_or_crisis_FAKE = { merg_planet_is_hostile_or_crisis = yes }
can_destroy_planet_with_PLANET_KILLER_PLANET_TO_NEST = {
	NOT = { is_planet_class = pc_nest }
	is_colony = yes
	merg_is_forbidden_target = no
}

############################### Azur Lane ###############################
can_destroy_planet_with_azur_shippart_W2_T4 = {
	is_star = yes
	merg_is_dense_star = no
	custom_tooltip = {
		text = is_not_hostile_cracker
		OR = {
			NOT = { exists = space_owner }
			AND = {
				exists = space_owner
				space_owner = {
					merg_is_at_war = yes
				}
			}
			AND = {
				exists = space_owner
				exists = owner
				owner = {
					is_primitive = yes
				}
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
	}
}
can_destroy_planet_with_milky_way_terminal_test_1 = {
	is_star = yes
	merg_is_dense_star = no
	custom_tooltip = {
		text = is_not_hostile_cracker
		OR = {
			NOT = {
				exists = space_owner
			}
			AND = {
				exists = space_owner
				space_owner = {
					merg_is_at_war = yes
				}
			}
			AND = {
				exists = space_owner
				exists = owner
				owner = {
					is_primitive = yes
				}
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
	}
}
can_destroy_planet_with_milky_way_terminal_test_2 = {
	is_star = yes
	merg_is_dense_star = no
	custom_tooltip = {
		text = is_not_hostile_cracker
		OR = {
			NOT = {
				exists = space_owner
			}
			AND = {
				exists = space_owner
				space_owner = {
					merg_is_at_war = yes
				}
			}
			AND = {
				exists = space_owner
				exists = owner
				owner = {
					is_primitive = yes
				}
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
	}
}
can_destroy_planet_with_azur_shippart_W3_T3 = {
	is_star = yes
	custom_tooltip = {
		fail_text = need_a_planet_with_pops
		solar_system = {
			any_system_planet = {
				num_pops > 0
				merg_is_forbidden_target = no
			}
		}
	}
	custom_tooltip = {
		text = is_not_hostile_cracker
		OR = {
			AND = {
				exists = space_owner
				space_owner = {
					merg_is_at_war = yes
				}
			}
			AND = {
				exists = space_owner
				exists = owner
				owner = {
					is_primitive = yes
				}
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
	}
}

############################### BlueArchive ###############################
can_destroy_planet_with_Sweepers = {
	custom_tooltip = {
		fail_text = What_are_you_doing
		NOR = {
			uses_district_set = BA_planet
			uses_district_set = BA_ruined_planet
		}
	}
	custom_tooltip = {
		fail_text = is_valid_target_for_sweeper
		merg_is_forbidden_target = no
		exists = owner
		owner = {
			OR = {
				is_same_empire = FROM.owner
				is_at_war_with = FROM.owner
			}
		}
	}
}

############################### Corsair's Custom Empires: Eldanær Stellar Authority ###############################
can_destroy_planet_with_PLANET_KILLER_SPORE_DISPERSAL = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		# intentionally omits crisis planet types (pc_ai, pc_infested) because Pops can't live there
		# intentionally omits pc_machine because only Driven Assimilator cyborgs or robotic Pops can live there
		OR = {
			habitable_planet = yes
			merg_is_nuked_basic = yes
			AND = {
				# hive worlds are only allowed for hive empires
				FROM.owner = { is_hive_empire = yes }
				merg_is_hive_world = yes
			}
			habitable_structure = yes
		}
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
		}
	}
	if = {
		limit = { exists = owner }
		# primitive planet must be within borders
		if = {
			limit = {
				owner = {
					is_country_type = primitive
				}
			}
			custom_tooltip = {
				fail_text = primitives_not_in_borders
				exists = space_owner
				space_owner = { is_country = FROM.owner }
			}
		}
		# planets owned by the attacker are targetable if they have any pops that can be necrophaged
		else_if = {
			limit = { is_owned_by = FROM.owner }
			custom_tooltip = {
				fail_text = no_necrophagable_pops
				any_owned_pop = {
					# similar logic as species_can_be_necrophaged (common\scripted_triggers\00_scripted_triggers.txt)
					is_robot_pop = no
					is_sapient = yes
					NOT = { is_same_species = FROM.owner_species }
					species = {
						species_has_happiness_with_owner = FROM.owner
					}
				}
			}
		}
		# otherwise at least half the pops must be either the main species of the attacker or necrophagable
		else = {
			custom_tooltip = {
				fail_text = not_enough_necrophagable_pops
				pop_percentage = {
					percentage >= 0.5
					limit = {
						is_robot_pop = no
						is_sapient = yes
						# assumes that species of the same type as the attacker are compelled to revolt - so they count towards the minimum
						species = {
							species_has_happiness_with_owner = FROM.owner
						}
					}
					exclude = {
						is_robot_pop = no
						is_sapient = no
					}
				}
			}
		}
	}
}

############################### EDA ###############################
can_destroy_planet_with_PLANET_KILLER_EDA_STAR_CRACKER = { can_destroy_planet_with_PLANET_KILLER_STAR_CRACKER = yes }

############################### Electroids ###############################
can_destroy_planet_with_PLANET_KILLER_ELEC_FOCUS = {
	custom_tooltip = {
		fail_text = elec_must_be_colony
		merg_is_forbidden_target = no
		is_colony = yes
	}	
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile
		OR = {
			custom_tooltip = {
				text = is_not_hostile_cracker
				OR = {
					AND = { # colony
						exists = owner
						owner = {
							merg_is_at_war = yes
						}
					}
					AND = { # primitive
						exists = space_owner
						exists = owner
						owner = {
							is_primitive = yes
						}
						space_owner = {
							merg_is_at_war = yes
						}
					}
				}
			}
		}
	}
}

############################### Empires Expanded ###############################
can_destroy_planet_with_PLANET_KILLER_CORRUPT = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_already_corrupt
		is_corrupted_world_emex = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						OR = {
							merg_is_at_war = yes
							is_country_type = master_ai_country
						}
					}
				}
				AND = {
					# colony
					exists = owner
					owner = {
						OR = {
							merg_is_at_war = yes
							is_country_type = primitive
							is_country_type = master_ai_country
						}
					}
				}
				AND = {
					# primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						OR = {
							merg_is_at_war = yes
							is_country_type = master_ai_country
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = is_not_hostile
			OR = {
				merg_planet_is_hostile_or_crisis = yes
				AND = {
					exists = owner
					owner = { is_country_type = primitive }
					from.owner = { is_xenophobe = yes }
				}
				AND = { # at war with primitive space owner
					exists = space_owner
					exists = owner
					owner = { is_primitive = yes }
					space_owner = {
						merg_is_at_war = yes
					}
				}
			}
		}
	}
}

############################### Empire of Eveelution ###############################
can_destroy_planet_with_PLANET_KILLER_EOE = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_in_borders
			exists = space_owner
			space_owner = { is_same_empire = from.owner }
		}
	}
	custom_tooltip = {
		fail_text = no_assimilatable_pops
		any_owned_pop = {
			is_valid_pop_for_PLANET_KILLER_NANOBOTS = yes
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_FIRE_EOE = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	#custom_tooltip = {
	#fail_text = is_not_hostile
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# colony
					exists = owner
					owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						merg_is_at_war = yes
					}
				}
			}
		}
		custom_tooltip = {
			text = not_barren_molten_frozen_toxic_test_fire
			NOT = { exists = owner }
			OR = {
				NOT = { exists = space_owner }
				AND = {
					exists = space_owner
					space_owner = { is_same_empire = from.owner }
				}
			}
			uninhabitable_regular_planet = yes
		}
	}
}

############################### Gigastructural Engineering & More ###############################
can_destroy_planet_with_PLANET_KILLER_BLOKKAT_GENERATOR = {
	is_colony = no
	is_star = no
	OR = {
		uninhabitable_regular_planet = yes
		is_asteroid = yes
	}
}
can_destroy_planet_with_PLANET_KILLER_BLOKKAT_HARVESTER = {
	custom_tooltip = {
		fail_text = "needs_regular_star_blokkat_harvest"
		is_star = yes
		solar_system = {
			systems_blokkats_wont_stripmine = no
			merg_is_void_system = no
		}
	}
}

############################### Girls Frontline ###############################
can_destroy_planet_with_PLANET_KILLER_GF_COLLAPSE_ENDING_FLASH = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	#custom_tooltip = {
		#fail_text = is_not_hostile
		OR = {
			custom_tooltip = {
				text = is_not_hostile_cracker
				OR = {
					AND = {
						exists = space_owner
						space_owner = {
							merg_is_at_war = yes
						}
					}
					AND = { # colony
						exists = owner
						owner = {
							merg_is_at_war = yes
						}
					}
					AND = { # primitive
						exists = space_owner
						exists = owner
						owner = { is_primitive = yes }
						space_owner = {
							merg_is_at_war = yes
						}
					}
				}
			}
			custom_tooltip = {
				text = not_barren_molten_frozen_toxic_test_fire
				NOT = { exists = owner }
				OR = {
					NOT = { exists = space_owner }
					AND = {
						exists = space_owner
						space_owner = { is_same_value = from.owner }
					}
				}
				OR = {
					colonizable_planet = yes
					is_artificial = yes
					uninhabitable_regular_planet = yes
				}
			}
		}
	#}
}

############################### Hypertraversal Manipulation ###############################
can_destroy_planet_with_hyperspace_augur_beam = {
	is_star = yes
	merg_is_empty_space = no
	NOR = {
		has_star_flag = sealed_system
		has_star_flag = lcluster
		# Ancient Empire
		has_star_flag = ag_no_jump_in_system
		# ACOT
		has_star_flag = outercluster
		# Warship Girls R And MIST Species
		has_star_flag = wg_sealed_system
		has_star_flag = wg_psionic_systems
		# Gigastructural Engineering & More
		has_star_flag = ndb_immune_system
		cohesive_system = yes
		urmazin_system = yes
		everchanging_system = yes
		katzen_jump_blocked_system = yes
		has_star_flag = maginot_anti_jump_star
		has_star_flag = siegfried_anti_jump_star
		giga_is_core_system = yes
		# Some Events of Outside Cluster
		has_star_flag = nep_Krahen_cluster
		has_star_flag = nep_Scrus_cluster
	}
}

############################### Kancolle ###############################
can_destroy_planet_with_planet_killer_kancolle_kari = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	#custom_tooltip = {
	#fail_text = is_not_hostile
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# colony
					exists = owner
					owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						merg_is_at_war = yes
					}
				}
			}
		}
		custom_tooltip = {
			text = not_barren_molten_frozen_toxic_test_fire
			NOT = { exists = owner }
			OR = {
				NOT = { exists = space_owner }
				AND = {
					exists = space_owner
					space_owner = { is_same_value = from.owner }
				}
			}
			OR = {
				# Rewriting this part for max compatibility, inspired by Planetary Diversity
				colonizable_planet = yes
				is_artificial = yes
				uninhabitable_regular_planet = yes
			}
		}
	}
}
can_destroy_planet_with_planet_killer_kancolle_water_world = { can_destroy_planet_with_PLANET_KILLER_DELUGE = yes }

############################### KDC Story Pack ###############################
can_destroy_planet_with_PLANET_KILLER_GRAYGOO = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_not_pc_graygoo
		NOT = { is_planet_class = pc_gray_goo }
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = { merg_planet_is_hostile_or_crisis = yes }
				}
				AND = { # colony
					exists = owner
					owner = { merg_planet_is_hostile_or_crisis = yes }
				}
				AND = { # primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = { merg_planet_is_hostile_or_crisis = yes }
				}
			}
		}
		custom_tooltip = {
			text = not_barren_molten_frozen_toxic_test_fire
			NOT = { exists = owner }
			OR = {
				NOT = { exists = space_owner }
				AND = {
					exists = space_owner
					space_owner = { is_same_value = from.owner }
				}
			}
			OR = {
				colonizable_planet = yes
				is_artificial = yes
				uninhabitable_regular_planet = yes
			}
		}
	}	
}

############################### Krogan's Sci Fi Stuff Pack ###############################
can_destroy_planet_with_DEATH_STAR_WEAPON = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
}

############################### Nanite Expansion ###############################
can_destroy_planet_with_PLANET_KILLER_NANO = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# colony
					exists = owner
					owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						merg_is_at_war = yes
					}
				}
			}
		}
		OR = {
			custom_tooltip = {
				text = not_barren_molten_frozen_toxic_test_fire
				NOT = { exists = owner }
				OR = {
					NOT = { exists = space_owner }
					AND = {
						exists = space_owner
						space_owner = { is_same_value = from.owner }
					}
				}
				OR = {
					colonizable_planet = yes
					uninhabitable_regular_planet = yes
					is_pd_planet_class_all = yes
				}
			}
		}
	}
}

# kills only the pops and keeps the planet intact, so Gigastructure planets are a valid target
can_destroy_planet_with_PLANET_KILLER_HARBINGER = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile
		OR = {
			custom_tooltip = {
				text = is_not_hostile_cracker
				OR = {
					AND = {
						exists = space_owner
						space_owner = {
							merg_is_at_war = yes
						}
					}
					AND = {
						# colony
						exists = owner
						owner = {
							merg_is_at_war = yes
						}
					}
					AND = {
						# primitive
						exists = space_owner
						exists = owner
						owner = {
							is_primitive = yes
						}
						space_owner = {
							merg_is_at_war = yes
						}
					}
				}
			}
			custom_tooltip = {
				text = not_barren_molten_frozen_toxic_test_fire
				NOT = { exists = owner }
				OR = {
					NOT = { exists = space_owner }
					AND = {
						exists = space_owner
						space_owner = { is_same_value = from.owner }
					}
				}
				is_colony = yes
			}
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		NOR = {
			is_ds_kompass = yes
			merg_is_shielded = yes
		}
	}
}

############################### Nanite Machines & Distant Stars Overhaul ###############################
can_destroy_planet_with_PLANET_KILLER_HARVESTER = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# colony
					exists = owner
					owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						merg_is_at_war = yes
					}
				}
			}
		}
		custom_tooltip = {
			text = not_barren_molten_frozen_toxic_test_fire
			NOT = { exists = owner }
			OR = {
				NOT = { exists = space_owner }
				AND = {
					exists = space_owner
					is_owned_by = from.owner
				}
			}
			OR = {
				colonizable_planet = yes
				uninhabitable_regular_planet = yes
			}
		}
	}
}

############################### Nyto Species Pack ###############################
can_destroy_planet_with_tech_GFnyto_accelerating_coil3 = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
}

############################### Origin Beings ###############################
can_destroy_planet_with_PLANET_KILLER_STAR_CRACKER_SERES = { can_destroy_planet_with_PLANET_KILLER_STAR_CRACKER = yes }

############################### Planetary Diversity ###############################
can_destroy_planet_with_PLANET_KILLER_METHANE_FREEZE_RAY = {
	custom_tooltip = {
		fail_text = is_habitable_non_artificial
		OR = {
			is_colonizable = yes
			is_colony = yes
		}
		is_artificial = no
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_methane
		NOT = { is_planet_class = pc_methane }
	}
	if = {
		limit = { is_inside_border = from.owner }
		if = {
			limit = { #Uninhabited and primitive planets are always fine, if own colony then check if pops would be purged
				exists = owner
				owner = { is_same_value = from.owner }
				any_owned_species = {
					NOT = { has_trait = trait_pc_methane_preference }
				}
			}
			custom_tooltip = {
				fail_text = requires_purge_allowed
				success_text = will_purge_non_methane_pops
				from.owner = {
					is_ai = no
					has_policy_flag = purge_allowed
				}
			}
		}
	}
	else = {
		custom_tooltip = {
			fail_text = is_not_hostile_or_primitive_or_ours
			OR = {
				merg_planet_is_hostile_or_crisis = yes
				AND = {
					exists = owner
					owner = { is_country_type = primitive }
				}
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_in_borders
			exists = space_owner
			space_owner = { is_same_value = from.owner }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = {
				has_policy_flag = interference_aggressive
			}
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_PD_NECRO_RAY = {
	custom_tooltip = {
		fail_text = is_habitable_non_artificial
		OR = {
			is_colonizable = yes
			is_colony = yes
		}
		is_artificial = no
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_necro
		is_pd_necro_world = no
	}
	if = {
		limit = { is_inside_border = from.owner }
		if = {
			limit = { #Uninhabited and primitive planets are always fine, if own colony then check if pops would be purged
				exists = owner
				owner = { is_same_value = from.owner }
				any_owned_species = {
					NOT = { has_trait = trait_pc_methane_preference }
				}
			}
			custom_tooltip = {
				fail_text = requires_purge_allowed
				success_text = will_purge_robots_and_zombie
				from.owner = {
					is_ai = no
					has_policy_flag = purge_allowed
				}
			}
		}
	}
	else = {
		custom_tooltip = {
			fail_text = is_not_hostile_or_primitive_or_ours
			OR = {
				merg_planet_is_hostile_or_crisis = yes
				AND = {
					exists = owner
					owner = { is_country_type = primitive }
				}
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_in_borders
			exists = space_owner
			space_owner = { is_same_value = from.owner }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = {
				has_policy_flag = interference_aggressive
			}
		}
	}
}

############################### Protoss ###############################
can_destroy_planet_with_archon_power_pouring = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_asteroid = no
		NOR = {
			is_planet_class = pc_shattered
			is_planet_class = pc_shattered_2
		}
		merg_is_forbidden_target = no
	}
	OR = {
		NOT = { solar_system = { exists = owner } }
		AND = {
			solar_system = { 
				exists = owner
				owner = { is_hostile = from.owner }
			}
		}
	}
}

############################### Return of Ragnarok ###############################
can_destroy_planet_with_N_ISBS_RAGNAROK_SPEAR_OF_LONGINUS = {
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = {
				has_policy_flag = interference_aggressive
			}
		}
	}
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = N_ISBS_longinus_triggers
		OR = {
			owner = { is_hostile = from.owner }
			space_owner = { is_hostile = from.owner }
			NOT = { exists = space_owner }
			AND = {
				exists = space_owner
				space_owner = { is_same_value = from.owner }
			}
		}
	}
	custom_tooltip = {
		fail_text = N_ISBS_longinus_hited
		NOT = { has_modifier = N_ISBS_longinus_hit_planet_modifier }
	}
}

############################### Rozen Maiden Suigintou Leader Pack ###############################
can_destroy_planet_with_GE_PLANET_KILLER_Crasher = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		merg_is_forbidden_target = no
	}
	is_star = yes
}
can_destroy_planet_with_GE_PLANET_KILLER_CRACKER = { can_destroy_planet_with_PLANET_KILLER_CRACKER = yes }
can_destroy_planet_with_GE_PLANET_KILLER_SHIELDER = { can_destroy_planet_with_PLANET_KILLER_SHIELDER = yes }
can_destroy_planet_with_GE_PLANET_KILLER_NEUTRON = { can_destroy_planet_with_PLANET_KILLER_NEUTRON = yes }
can_destroy_planet_with_GE_PLANET_KILLER_GODRAY = { can_destroy_planet_with_PLANET_KILLER_GODRAY = yes }
can_destroy_planet_with_GE_PLANET_KILLER_NANOBOTS = { can_destroy_planet_with_PLANET_KILLER_NANOBOTS = yes }
can_destroy_planet_with_GE_PLANET_KILLER_DELUGE = { can_destroy_planet_with_PLANET_KILLER_DELUGE = yes }

############################### Sensible Late Game Techs ###############################
can_destroy_planet_with_slgt_planet_killer_knid = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		OR = {
			is_a_habitable_planet_megastructure = yes
			is_planet_class = pc_ai
			merg_is_forbidden_target = no
		}
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			merg_planet_is_hostile_or_crisis = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = {
				has_policy_flag = interference_aggressive
			}
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
}

############################### Shroud Expanded - The Decadence of Sanity ###############################
can_destroy_planet_with_PLANET_KILLER_SHROUD = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = { merg_is_at_war = yes }
				}
				AND = { # colony
					exists = owner
					owner = { merg_is_at_war = yes }
				}
				AND = { # crisis
					exists = space_owner
					space_owner = { merg_is_at_war = yes }
				}
			}
		}
		custom_tooltip = {
			text = is_not_a_standard_planet_or_megastructure
			OR = {
				NOT = { exists = space_owner }
				AND = {
					exists = space_owner
					space_owner = { is_same_value = from.owner }
				}
			}
			OR = {
				merg_is_hab_ringworld = yes
				merg_is_habitat = yes
			}
		}
	}
}

############################### Some Events of Outside Cluster ###############################
can_destroy_planet_with_PLANET_KILLER_NEP_UGO = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = nep_no_sapient_pops
		any_owned_pop = { is_sapient = yes }
	}
}

############################### ThaumStellaris ###############################
can_destroy_planet_with_TC_PLANET_KILLER_EXCAVATION = {
	custom_tooltip = {
		fail_text = "tc_planet_killer_excavation_not_target"
		NOR = {
			merg_is_shielded = yes
			is_asteroid = yes
		}
		merg_is_forbidden_target = no
		is_star = no
	}
	custom_tooltip = {
		fail_text = "tc_planet_killer_excavation_nothing_dig"
		NOT = { is_planet_class = pc_tc_bedrock }
	}
	custom_tooltip = {
		fail_text = "tc_planet_killer_excavation_not_hostile"
		OR = {
			AND = {
				custom_tooltip = {
					fail_text = "tc_planet_killer_excavation_our_planet"
					NOT = {
						exists = owner
					}
					exists = space_owner
					space_owner = {
						is_same_value = from.owner
					}
				}
			}
			AND = {
				custom_tooltip = {
					text = is_not_hostile_cracker
					OR = {
						AND = {
							exists = space_owner
							space_owner = {
								merg_is_at_war = yes
							}
						}
						AND = {
							# colony
							exists = owner
							owner = {
								merg_is_at_war = yes
							}
						}
						AND = {
							# primitive
							exists = space_owner
							exists = owner
							owner = { is_primitive = yes }
							space_owner = {
								merg_is_at_war = yes
							}
						}
					}
				}
			}
		}
	}
}
can_destroy_planet_with_TC_PLANET_KILLER_EXCAVATION_TURRET = {
	custom_tooltip = {
		fail_text = "tc_planet_killer_excavation_not_target"
		NOR = {
			merg_is_shielded = yes
			is_asteroid = yes
		}
		merg_is_forbidden_target = no
		is_star = no
	}
	custom_tooltip = {
		fail_text = "tc_planet_killer_excavation_nothing_dig"
		NOT = { is_planet_class = pc_tc_bedrock }
	}
	custom_tooltip = {
		fail_text = "tc_planet_killer_excavation_not_hostile"
		OR = {
			AND = {
				custom_tooltip = {
					fail_text = "tc_planet_killer_excavation_our_planet"
					NOT = { exists = owner }
					exists = space_owner
					space_owner = { is_same_value = from.owner }
				}
			}
			AND = {
				custom_tooltip = {
					text = is_not_hostile_cracker
					OR = {
						AND = {
							exists = space_owner
							space_owner = {
								merg_is_at_war = yes
							}
						}
						AND = {
							# colony
							exists = owner
							owner = {
								merg_is_at_war = yes
							}
						}
						AND = {
							# primitive
							exists = space_owner
							exists = owner
							owner = {
								is_primitive = yes
							}
							space_owner = {
								merg_is_at_war = yes
							}
						}
					}
				}
			}
		}
	}
}
can_destroy_planet_with_TC_PLANET_KILLER_TAINTED_STORM = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		OR = {
			is_a_habitable_planet_megastructure = yes
			is_planet_class = pc_ai
		}
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			merg_planet_is_hostile_or_crisis = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
}
can_destroy_planet_with_TC_PLANET_KILLER_TAINTED_STORM_TURRET = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		OR = {
			is_a_habitable_planet_megastructure = yes
			is_planet_class = pc_ai
		}
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			merg_planet_is_hostile_or_crisis = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
}

############################### The Crimson Throng ###############################
can_destroy_planet_with_PLANET_KILLER_CLEANSER = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = must_do_sp_first
		NOT = { has_planet_flag = projcrim_sp_present }
	}
	OR = {
		custom_tooltip = {
			text = is_not_infected
			is_projcrim_afflicted = yes
		}
		custom_tooltip = {
			text = no_pops_infected
			any_owned_pop = {
				is_crimson_infected = yes
			}
		}
		custom_tooltip = {
			fail_text = controlled_by_throng
			exists = controller
			controller = {
				is_country_type = throng_country
			}
		}
	}
}

############################### The DAL Species Mod ###############################
can_destroy_planet_with_PLANET_KILLER_EDEN = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = no_has_dal_war_in_eden
		NOR = { has_modifier = planet_dal_war_in_eden }
	}
	custom_tooltip = {
		#success_text = "is at war with player"
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
			AND = {
				exists = owner
				owner = { is_same_value = from.owner }
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_in_borders
			exists = space_owner
			space_owner = {
				is_same_value = from.owner
			}
		}
	}
	custom_tooltip = {
		fail_text = no_dal_assimilatable_pops
		any_owned_pop = {
			NOR = {
				has_trait = trait_DAL_spirit_1
				has_trait = trait_DAL_spirit_2
			}
		}
	}
}

############################### The Empty Vagrant ###############################
can_destroy_planet_with_PLANET_KILLER_TAKING = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					NOT = {
						exists = owner
					}
					habitable_planet = yes
				}
				AND = {
					exists = space_owner
					space_owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# colony
					exists = owner
					owner = {
						merg_is_at_war = yes
					}
				}
				AND = {
					# primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						merg_is_at_war = yes
					}
				}
			}
		}
	}
}

############################### Twinks Eternals ###############################
can_destroy_planet_with_EE_PLANETKILLER_GAIA = {
	custom_tooltip = {
		fail_text = is_not_hostile
		OR = {
			AND = {
				#exists = space_owner
				space_owner = {
					OR = {
						is_same_value = from.owner
						merg_is_at_war = yes
					}
				}
			}
			AND = { # Ownelerless
				NOT = { exists = space_owner }
				NOT = { is_at_war_with = from.owner }
			}
			AND = { # primitive
				exists = space_owner
				exists = owner
				owner = { is_primitive = yes }
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
		NOT = {
			is_owned_by = event_target:origin_crisis_country		
		}
		is_star = no
		is_asteroid = no
		merg_is_forbidden_target = no
	}
}
can_destroy_planet_with_EE_PLANETKILLER_BARREN = {
	custom_tooltip = {
		fail_text = is_not_hostile
		OR = {
			AND = {
				#exists = space_owner
				space_owner = {
					OR = {
						is_same_value = from.owner
						merg_is_at_war = yes
					}
				}
			}
			AND = { # Ownelerless
				NOT = { exists = space_owner }
				NOT = { is_at_war_with = from.owner }
			}
			AND = { # primitive
				exists = space_owner
				exists = owner
				owner = { is_primitive = yes }
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
		NOT = { is_owned_by = event_target:origin_crisis_country }
		is_star = no
		is_asteroid = no
		merg_is_forbidden_target = no
	}
}

############################### Twinks Kaldorei ###############################
can_destroy_planet_with_PLANET_KILLER_CRACKER_ARCANE = {
	custom_tooltip = {
		fail_text = is_not_hostile
		OR = {
			AND = {
				#exists = space_owner
				space_owner = {
					OR = {
						is_same_value = from.owner
						merg_is_at_war = yes
					}
				}
			}
			AND = {
				# Ownelerless
				NOT = { exists = space_owner }
				NOT = { is_at_war_with = from.owner }
			}
			AND = {
				# primitive
				exists = space_owner
				exists = owner
				owner = { is_primitive = yes }
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
		NOT = { is_owned_by = event_target:origin_crisis_country }
		is_star = no
		is_asteroid = no
		custom_tooltip = {
			fail_text = is_not_a_standard_planet_or_megastructure
			merg_is_forbidden_target = no
		}
		custom_tooltip = {
			fail_text = is_shielded
			merg_is_shielded = no
		}
	}
}

############################### Voyage to Eternity ###############################
KZ_VOY_can_not_destroy_by_planet_killer = {
	custom_tooltip = {
		fail_text = KZ_VOY_can_not_destroy_by_planet_killer
		merg_is_untargetable = no
		solar_system = {
			NOR = {
				has_star_flag = KZ_VOY_Alpha_Lupi_system_flag
				has_star_flag = KZ_VOY_terran_system_flag
				has_star_flag = KZ_VOY_TES_simulation_battle_system_flag
			}
			any_system_planet = {
				NOR = {
					is_real_KZ_VOY_solaria = yes
					is_real_KZ_VOY_luna = yes
					is_real_KZ_VOY_Seclusion = yes
					is_real_KZ_VOY_Library_tower = yes
				}
			}
		}
	}
}

############################### Wandering Witch: Voyagers ###############################
can_destroy_planet_with_PLANET_KILLER_SLUMBER = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = yes
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile
		OR = {
			merg_planet_is_hostile_or_crisis = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
				from.owner = { is_xenophobe = yes }
			}
			AND = {
				exists = owner
				owner = {
					is_same_value = from.owner
				}
				OR = {
					has_modifier = whisperers_psychosis
					has_modifier = whisperers_madness
					has_modifier = instrument_deviance_planet
					has_modifier = instrument_consumer_goods
				}
			}
			AND = { # at war with primitive space owner
				exists = space_owner
				exists = owner
				owner = { is_primitive = yes }
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = is_unpopulated
		OR = {
			num_pops > 0
			is_planet_class = pc_infested
		}
	}
	custom_tooltip = {
		fail_text = is_machine
		any_owned_pop = {
			is_valid_pop_for_PLANET_KILLER_SLUMBER = yes
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_PRISCILLA = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile
		OR = {
			merg_planet_is_hostile_or_crisis = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
				from.owner = { is_xenophobe = yes }
			}
			AND = { # at war with primitive space owner
				exists = space_owner
				exists = owner
				owner = { is_primitive = yes }
				space_owner = {
					merg_is_at_war = yes
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = is_unpopulated
		num_pops > 0
	}
}

############################### Warship Girls R And MIST Species ###############################
can_destroy_planet_with_PLANET_KILLER_OVO = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		#success_text = "is at war with player"
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
			AND = {
				exists = owner
				owner = { is_same_value = from.owner }
			}
		}
	}
	# target own colony
	if = {
		limit = {
			NOR = {
				planet_is_hostile = yes
				AND = {
					exists = owner
					owner = { is_country_type = primitive }
				}
			}
			exists = owner
			owner = { is_same_value = from.owner }
		}
		custom_tooltip = {
			text = not_owned_test_fire
			exists = owner
			owner = { is_same_value = from.owner }
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_PSH = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_shenhai
		NOR = { uses_district_set = rw_sh_world }
	}
	custom_tooltip = {
		fail_text = cannotdothis
		NOR = {
			merg_is_habitat = yes
			merg_is_hab_ringworld = yes
			is_planet_class = pc_habitat
		}
	}
	custom_tooltip = {
		#success_text = "is at war with player"
		fail_text = our_planet_only
		NOR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = {
					is_country_type = primitive
				}
			}
		}
	}
	# target own colony
	if = {
		limit = {
			NOR = {
				planet_is_hostile = yes
				AND = {
					exists = owner
					owner = { is_country_type = primitive }
				}
			}
			exists = owner
			owner = { is_same_value = from.owner }
		}
		custom_tooltip = {
			text = not_owned_test_fire
			exists = owner
			owner = { is_same_value = from.owner }
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_CM = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = { is_country_type = primitive }
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = {
				is_country_type = primitive
			}
		}
		custom_tooltip = {
			fail_text = primitives_not_in_borders
			exists = space_owner
			space_owner = { is_same_value = from.owner }
		}
	}
	custom_tooltip = {
		fail_text = no_cm_pops
		any_owned_pop = {
			is_valid_pop_for_PLANET_KILLER_CM = yes
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_SK = {
	custom_tooltip = {
		fail_text = is_your_megastructure_system
		NOT = {
			solar_system = {
				has_star_flag = crisis_sphere_system@from.owner
				has_star_flag = wg_gateway_construction_system
				any_system_megastructure = { has_megastructure_flag = crisis_sphere }
				any_system_megastructure = { has_megastructure_flag = wg_fm_gateway }
			}
		}
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	custom_tooltip = {
		fail_text = star_owner_is_not_hostile
		OR = {
			NOT = { exists = space_owner }
			space_owner = { is_hostile = from.owner }
			space_owner = { is_same_value = from.owner }
		}
	}
	custom_tooltip = {
		fail_text = has_our_colony
		NOT = {
			solar_system = {
				any_system_planet = {
					exists = owner
					owner = { is_same_value = from.owner }
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = is_not_star
		is_star = yes
	}
	custom_tooltip = {
		fail_text = is_black_hole
		merg_is_forbidden_target = no
	}
}
can_destroy_planet_with_PLANET_KILLER_WATERB = {
	OR = {
		hidden_trigger = {
			AND = {
				FROM = { has_fleet_flag = RBQ_Dragon_fleet }
				NOT = { is_planet_class = pc_wg_water }
			}
		}
		AND = {
			custom_tooltip = {
				fail_text = is_not_a_standard_planet_or_megastructure
				is_a_planet_megastructure = yes
				merg_is_forbidden_target = no
			}
			custom_tooltip = {
				fail_text = is_shielded
				merg_is_shielded = no
			}
			custom_tooltip = {
				fail_text = is_water_planet
				NOR = {
					is_planet_class = pc_wg_water
					is_planet_class = pc_ringworld_habitable_water
				}
			}
			OR = {
				custom_tooltip = {
					fail_text = is_not_hostile_or_primitive
					OR = {
						planet_is_hostile = yes
						AND = {
							exists = owner
							owner = { is_country_type = primitive }
						}
					}
				}
				custom_tooltip = {
					text = not_barren_molten_frozen_toxic_test_fire
					NOT = { exists = owner }
					OR = {
						NOT = { exists = space_owner }
						AND = {
							exists = space_owner
							space_owner = { is_same_value = from.owner }
						}
					}
					OR = {
						colonizable_planet = yes
						is_artificial = yes
						is_colonizable = yes
						uninhabitable_regular_planet = yes
					}
				}
			}
		}
	}
}
wg_event_can_destroy_planet_with_PLANET_KILLER_CRACKER = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		is_a_planet_megastructure = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_shielded
		merg_is_shielded = no
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = { merg_is_at_war = yes }
				}
				AND = {
					# colony
					exists = owner
					owner = { merg_is_at_war = yes }
				}
				AND = {
					# primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = { merg_is_at_war = yes }
				}
			}
		}
		custom_tooltip = {
			text = not_barren_molten_frozen_toxic_test_fire
			NOT = {
				exists = owner
			}
			OR = {
				NOT = {
					exists = space_owner
				}
				AND = {
					exists = space_owner
					space_owner = { is_same_value = root.owner }
				}
			}
			OR = {
				colonizable_planet = yes
				is_artificial = yes
				uninhabitable_regular_planet = yes
			}
		}
	}
}

############################### WULA Fallen Empire ###############################
can_destroy_planet_with_PLANET_KILLER_GENESIS = {
	custom_tooltip = {
		fail_text = is_not_a_standard_planet_or_megastructure
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = is_colony_of_someone
		is_colony = no
	}
	OR = {
		merg_is_hab_ringworld = yes
		merg_is_habitat = yes
		merg_is_basic_planet = yes
	}
	is_colonizable = yes
	custom_tooltip = {
		fail_text = has_been_sowed_by_genesis
		NOT = { has_planet_flag = has_been_sowed_by_genesis }
	}
	OR = {
		custom_tooltip = {
			text = is_not_hostile_cracker
			OR = {
				AND = {
					exists = space_owner
					space_owner = {
						merg_is_at_war = yes
					}
				}
				AND = { # colony
					exists = owner
					owner = {
						merg_is_at_war = yes
					}
				}
				AND = { # primitive
					exists = space_owner
					exists = owner
					owner = {
						is_primitive = yes
					}
					space_owner = {
						merg_is_at_war = yes
					}
				}
			}
		}
		custom_tooltip = {
			text = is_not_owned_or_claimed
			NOR = {
				exists = owner
				exists = space_owner
			}
		}
		custom_tooltip = {
			text = is_uninhabited_within_borders
			exists = space_owner
			space_owner = { is_same_value = from.owner }
			is_colony = no
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_IDC = {
	custom_tooltip = {
		fail_text = is_not_a_default_empire_colony
		is_colony = yes
		owner = { merg_is_default_empire = yes }
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = has_another_IDC_in_system
		solar_system = {
			NOT = { any_fleet_in_system = { is_ship_size = IDC_station_fallen_empire } }
		}
	}
}
can_destroy_planet_with_PLANET_KILLER_Pilgrimage = {
	custom_tooltip = {
		fail_text = can_only_deploy_on_star
		is_star = yes
		merg_is_forbidden_target = no
	}
	custom_tooltip = {
		fail_text = can_not_deploy_near_other_empire
		solar_system = {
			any_neighbor_system = {
				NOT = {
					exists = owner
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = can_not_deploy_if_system_owned
		solar_system = {
			NOT = {
				exists = owner
			}
		}
	}
}
# ===========================================================================================================================

# PK Triggers here
# Vanilla triggers
is_a_planet = {
	is_star = no
	NOR = {
		is_artificial = yes
		is_asteroid = yes
		merg_is_gas_giant = yes
		is_planet_class = pc_shrouded
	}
}

can_destroy_planet_general = {
	is_star = no
	merg_is_forbidden_target = no
	OR = {
		NOT = { exists = owner }
		owner = { is_hostile = from.owner }
	}
}

# Turning this into a dynamic trigger
planet_is_hostile_or_crisis = {
	exists = owner
	owner = {
		OR = {
			is_at_war_with = from.owner
			is_crisis_faction = yes
			# Aggressive Crisis Engine
			from.owner = {
				is_hostile = prev # Fix for empires which cannot be at war (crises).
				OR = {
					has_country_flag = acemod_can_target_hostile_with_colossus # Fallback flag in case needed.
					is_crisis_faction = yes # Narrow down to just crises as to not alter more than needed.
				}
			}
		}
	}
}

merg_planet_is_hostile_or_crisis = {
	OR = {
		planet_is_hostile_or_crisis = yes
		# Safety Off
		AND = {
			merg_has_safety_off = yes
			is_same_value = from.owner
		}
	}
}

is_a_habitable_planet_megastructure = {
	OR = {
		colonizable_planet = yes
		habitable_structure = yes
		# ACOT
		is_acot_fractured_planet_class = yes
		is_acot_awesome_planet_class = yes
		# Expanded Gestalts: Forgotten Queens
		is_planet_class = pc_infested
		is_fq_matryoshka = yes
		# Misc
		merg_is_nuked = yes
	}
}

merg_is_at_war = {
	OR = {
		is_at_war_with = from.owner
		is_crisis_faction = yes
		# Aggressive Crisis Engine
		from.owner = {
			is_hostile = prev
			OR = {
				has_country_flag = acemod_can_target_hostile_with_colossus
				is_crisis_faction = yes
			}
		}
		# Safety Off
		AND = {
			merg_has_safety_off = yes
			is_same_value = from.owner
		}
	}
}

merg_is_untargetable = {
	OR = {
		# MEM
		is_pc_mem_synthetic_sun = yes
		# ACOT
		is_acot_awesome_planet_class = yes
		is_acot_pmc_vault = yes
		is_acot_void_hole = yes
		# Darkspace
		is_ds_holosphere = yes
		is_ds_stellar_engine = yes
		# Gigastructural Engineering & More
		has_planet_flag = ndb_immune_planet
		# Secrets of the Shroud
		is_sots_soulsphere = yes
		# ACOT/Gigas
		has_planet_flag = cant_target_this_planet
		has_planet_flag = cant_build_here
		is_planet_class = pc_ehof_cplanet
		giga_is_birch_world = yes
		# Merger of Rules
		has_planet_flag = merg_is_forbidden_target		# add this to your planet to dynamically exclude it.
	}
}

# Used by Planet Killers to forbid them to destroy invalid targets
merg_is_forbidden_target = {
	OR = {
		merg_is_dense_star = yes
		merg_is_empty_space = yes
		merg_is_untargetable = yes
	}
}
