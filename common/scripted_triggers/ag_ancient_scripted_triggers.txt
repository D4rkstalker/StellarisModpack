
ag_is_common_country = {
	OR = {
		is_country_type = default
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire
		is_country_type = awakened_marauders
		is_country_type = primitive
		is_country_type = ratlings
		is_country_type = prikki
		
		is_country_type = default_ev
	}
}

ag_no_normal_district_planet = {
	OR = {
		is_planet_class = pc_ag_void_star
		is_planet_class = pc_ag_void_planet
		is_planet_class = pc_ag_ringworld_shrouded
		is_planet_class = pc_ag_ringworld_ocean
		is_planet_class = pc_ag_ringworld_city
		is_planet_class = pc_ag_ringworld_machine
		is_planet_class = pc_ag_ringworld_tropical
		is_planet_class = pc_ag_ringworld_gaia
	}
}

ag_all_ancient_system_exists_or_known = {
	AND = {
		OR = {
			has_global_flag = ag_beta_area_spawned
			has_special_project = ag_located_beta_area
		}
		OR = {
			has_global_flag = ag_gamma_area_spawned
			has_special_project = ag_located_gamma_area
		}
		OR = {
			has_global_flag = ag_delta_area_spawned
			has_special_project = ag_located_delta_area
		}
		OR = {
			has_global_flag = ag_epsilon_area_spawned
			has_special_project = ag_located_epsilon_area
		}
		OR = {
			has_global_flag = ag_zeta_area_spawned
			has_special_project = ag_located_zeta_area
		}
		OR = {
			has_global_flag = ag_iota_area_spawned
			has_special_project = ag_located_iota_area
		}
	}
}

ag_is_ancient_system = {
	OR = {
		has_star_flag = ag_ancient_alpha_system
		has_star_flag = ag_ancient_beta_system
		has_star_flag = ag_ancient_gamma_system
		has_star_flag = ag_ancient_delta_system
		has_star_flag = ag_ancient_epsilon_system
		has_star_flag = ag_ancient_zeta_system
		has_star_flag = ag_ancient_eta_system
		has_star_flag = ag_ancient_theta_system
		has_star_flag = ag_ancient_iota_system
		has_star_flag = ag_ancient_kappa_system
		has_star_flag = ag_ancient_lambda_system
		has_star_flag = ag_ancient_mu_system
		has_star_flag = ag_ancient_nu_system
		has_star_flag = ag_ancient_xi_system
		has_star_flag = ag_ancient_omicron_system
		has_star_flag = ag_ancient_pi_system
		has_star_flag = ag_ancient_rho_system
		has_star_flag = ag_ancient_sigma_system
		has_star_flag = ag_ancient_tau_system
		has_star_flag = ag_ancient_upsilon_system
		has_star_flag = ag_ancient_phi_system
		has_star_flag = ag_ancient_chi_system
		has_star_flag = ag_ancient_psi_system
		has_star_flag = ag_ancient_omega_system
		
		has_star_flag = ag_beta_station_system_1
		has_star_flag = ag_beta_station_system_2
		has_star_flag = ag_beta_station_system_3

		has_star_flag = ag_ancient_anchor_system

	}
}
ag_is_kae_system = {
	OR = {
		has_star_flag = Kuat_system
		has_star_flag = Kuat_system_1
		has_star_flag = Kuat_system_2
		has_star_flag = Kuat_system_3
	}
}

ag_is_mod_country = {
	OR = {
		is_country_type = ag_ancient_guardian_passive
		is_country_type = ag_ancient_guardian_aggressive
		is_country_type = ag_ancient_guardian_passive_auto_delete
		is_country_type = ag_ancient_guardian_aggressive_auto_delete
		is_country_type = ag_ancient_primitive_monitor
		is_country_type = ag_ancient_beta_guardian
		is_country_type = ag_ancient_gamma_guardian
		is_country_type = ag_ancient_delta_guardian
		is_country_type = ag_ancient_delta_guardian_passive
		is_country_type = ag_epsilon_fallen_empire_guardian
		is_country_type = ag_ancient_epsilon_guardian
		is_country_type = ag_ancient_epsilon_obelisk_guardian
		is_country_type = ag_ancient_zeta_guardian
		is_country_type = ag_ancient_psi_guardian
		is_country_type = ag_ancient_iota_enclave
		is_country_type = ag_ancient_wanderer_country
		is_country_type = ag_ancient_anchor_station_country
		is_country_type = ag_lost_ancient_ship_country
		is_country_type = ag_ancient_astronomy_station_country
		is_country_type = ag_ancient_beta_signal_station_guardian
		is_country_type = ag_zeta_crisis_country
		is_country_type = ag_zeta_crisis_portal_holder
		is_country_type = ag_zeta_crisis_relic_country
		is_country_type = ag_ancient_primitive_crisis
	}
}
ag_is_ancient_country = {
	OR = {
		is_country_type = ag_ancient_guardian_passive
		is_country_type = ag_ancient_guardian_aggressive
		is_country_type = ag_ancient_guardian_passive_auto_delete
		is_country_type = ag_ancient_guardian_aggressive_auto_delete
		is_country_type = ag_ancient_primitive_monitor
		is_country_type = ag_ancient_beta_guardian
		is_country_type = ag_ancient_beta_signal_station_guardian
		is_country_type = ag_ancient_gamma_guardian
		is_country_type = ag_ancient_delta_guardian
		is_country_type = ag_ancient_delta_guardian_passive
		is_country_type = ag_ancient_epsilon_guardian
		is_country_type = ag_ancient_epsilon_obelisk_guardian
		is_country_type = ag_ancient_zeta_guardian
		is_country_type = ag_ancient_psi_guardian
		is_country_type = ag_ancient_astronomy_station_country
		is_country_type = ag_ancient_iota_enclave
		is_country_type = ag_ancient_wanderer_country
		is_country_type = ag_ancient_anchor_station_country
		is_country_type = ag_lost_ancient_ship_country
	}
}
ag_is_crisis_country = {
	OR = {
		is_country_type = ag_ancient_gamma_guardian
		is_country_type = ag_zeta_crisis_country
		is_country_type = ag_ancient_primitive_crisis
	}
}

ag_beta_psionic_effect_event_active = {
	has_global_flag = ag_aneient_beta_psionic_effect_begins
	NOT = { has_global_flag = ag_aneient_beta_psionic_effect_ended }
}
ag_gamma_crisis_event_active = {
	has_global_flag = ag_gamma_crisis_began
	NOT = { has_global_flag = ag_gamma_crisis_ended }
}
ag_zeta_crisis_event_active = {
	has_global_flag = ag_zeta_crisis_stage_3
	NOT = { has_global_flag = ag_zeta_crisis_ended }
}

ag_can_add_ancient_bombardment_blocker_deposit = {
	OR = {
		AND = { planet_size = 1 check_variable = { which = ag_ancient_bomb_crater_counter value < 1 } }
		AND = { planet_size = 2 check_variable = { which = ag_ancient_bomb_crater_counter value < 2 } }
		AND = { planet_size = 3 check_variable = { which = ag_ancient_bomb_crater_counter value < 3 } }
		AND = { planet_size = 4 check_variable = { which = ag_ancient_bomb_crater_counter value < 4 } }
		AND = { planet_size = 5 check_variable = { which = ag_ancient_bomb_crater_counter value < 5 } }
		AND = { planet_size = 6 check_variable = { which = ag_ancient_bomb_crater_counter value < 6 } }
		AND = { planet_size = 7 check_variable = { which = ag_ancient_bomb_crater_counter value < 7 } }
		AND = { planet_size = 8 check_variable = { which = ag_ancient_bomb_crater_counter value < 8 } }
		AND = { planet_size = 9 check_variable = { which = ag_ancient_bomb_crater_counter value < 9 } }
		AND = { planet_size = 10 check_variable = { which = ag_ancient_bomb_crater_counter value < 10 } }
		AND = { planet_size = 11 check_variable = { which = ag_ancient_bomb_crater_counter value < 11 } }
		AND = { planet_size = 12 check_variable = { which = ag_ancient_bomb_crater_counter value < 12 } }
		AND = { planet_size = 13 check_variable = { which = ag_ancient_bomb_crater_counter value < 13 } }
		AND = { planet_size = 14 check_variable = { which = ag_ancient_bomb_crater_counter value < 14 } }
		AND = { planet_size = 15 check_variable = { which = ag_ancient_bomb_crater_counter value < 15 } }
		AND = { planet_size = 16 check_variable = { which = ag_ancient_bomb_crater_counter value < 16 } }
		AND = { planet_size = 17 check_variable = { which = ag_ancient_bomb_crater_counter value < 17 } }
		AND = { planet_size = 18 check_variable = { which = ag_ancient_bomb_crater_counter value < 18 } }
		AND = { planet_size = 19 check_variable = { which = ag_ancient_bomb_crater_counter value < 19 } }
		AND = { planet_size = 20 check_variable = { which = ag_ancient_bomb_crater_counter value < 20 } }
		AND = { planet_size = 21 check_variable = { which = ag_ancient_bomb_crater_counter value < 21 } }
		AND = { planet_size = 22 check_variable = { which = ag_ancient_bomb_crater_counter value < 22 } }
		AND = { planet_size = 23 check_variable = { which = ag_ancient_bomb_crater_counter value < 23 } }
		AND = { planet_size = 24 check_variable = { which = ag_ancient_bomb_crater_counter value < 24 } }
		AND = { planet_size = 25 check_variable = { which = ag_ancient_bomb_crater_counter value < 25 } }
		AND = { planet_size = 26 check_variable = { which = ag_ancient_bomb_crater_counter value < 26 } }
		AND = { planet_size = 27 check_variable = { which = ag_ancient_bomb_crater_counter value < 27 } }
		AND = { planet_size = 28 check_variable = { which = ag_ancient_bomb_crater_counter value < 28 } }
		AND = { planet_size = 29 check_variable = { which = ag_ancient_bomb_crater_counter value < 29 } }
		AND = { planet_size = 30 check_variable = { which = ag_ancient_bomb_crater_counter value < 30 } }
		AND = { planet_size = 31 check_variable = { which = ag_ancient_bomb_crater_counter value < 31 } }
		AND = { planet_size = 32 check_variable = { which = ag_ancient_bomb_crater_counter value < 32 } }
		AND = { planet_size = 33 check_variable = { which = ag_ancient_bomb_crater_counter value < 33 } }
		AND = { planet_size = 34 check_variable = { which = ag_ancient_bomb_crater_counter value < 34 } }
		AND = { planet_size = 35 check_variable = { which = ag_ancient_bomb_crater_counter value < 35 } }
		AND = { planet_size = 36 check_variable = { which = ag_ancient_bomb_crater_counter value < 36 } }
		AND = { planet_size = 37 check_variable = { which = ag_ancient_bomb_crater_counter value < 37 } }
		AND = { planet_size = 38 check_variable = { which = ag_ancient_bomb_crater_counter value < 38 } }
		AND = { planet_size = 39 check_variable = { which = ag_ancient_bomb_crater_counter value < 39 } }
		AND = { planet_size = 40 check_variable = { which = ag_ancient_bomb_crater_counter value < 40 } }
		AND = { planet_size = 41 check_variable = { which = ag_ancient_bomb_crater_counter value < 41 } }
		AND = { planet_size = 42 check_variable = { which = ag_ancient_bomb_crater_counter value < 42 } }
		AND = { planet_size = 43 check_variable = { which = ag_ancient_bomb_crater_counter value < 43 } }
		AND = { planet_size = 44 check_variable = { which = ag_ancient_bomb_crater_counter value < 44 } }
		AND = { planet_size = 45 check_variable = { which = ag_ancient_bomb_crater_counter value < 45 } }
		AND = { planet_size = 46 check_variable = { which = ag_ancient_bomb_crater_counter value < 46 } }
		AND = { planet_size = 47 check_variable = { which = ag_ancient_bomb_crater_counter value < 47 } }
		AND = { planet_size = 48 check_variable = { which = ag_ancient_bomb_crater_counter value < 48 } }
		AND = { planet_size = 49 check_variable = { which = ag_ancient_bomb_crater_counter value < 49 } }
		AND = { planet_size = 50 check_variable = { which = ag_ancient_bomb_crater_counter value < 50 } }
	}
}
ag_can_add_zeta_crisis_bombardment_blocker_deposit = {
	OR = {
		AND = { planet_size = 1 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 1 } }
		AND = { planet_size = 2 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 2 } }
		AND = { planet_size = 3 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 3 } }
		AND = { planet_size = 4 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 4 } }
		AND = { planet_size = 5 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 5 } }
		AND = { planet_size = 6 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 6 } }
		AND = { planet_size = 7 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 7 } }
		AND = { planet_size = 8 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 8 } }
		AND = { planet_size = 9 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 9 } }
		AND = { planet_size = 10 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 10 } }
		AND = { planet_size = 11 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 11 } }
		AND = { planet_size = 12 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 12 } }
		AND = { planet_size = 13 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 13 } }
		AND = { planet_size = 14 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 14 } }
		AND = { planet_size = 15 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 15 } }
		AND = { planet_size = 16 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 16 } }
		AND = { planet_size = 17 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 17 } }
		AND = { planet_size = 18 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 18 } }
		AND = { planet_size = 19 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 19 } }
		AND = { planet_size = 20 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 20 } }
		AND = { planet_size = 21 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 21 } }
		AND = { planet_size = 22 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 22 } }
		AND = { planet_size = 23 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 23 } }
		AND = { planet_size = 24 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 24 } }
		AND = { planet_size = 25 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 25 } }
		AND = { planet_size = 26 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 26 } }
		AND = { planet_size = 27 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 27 } }
		AND = { planet_size = 28 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 28 } }
		AND = { planet_size = 29 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 29 } }
		AND = { planet_size = 30 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 30 } }
		AND = { planet_size = 31 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 31 } }
		AND = { planet_size = 32 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 32 } }
		AND = { planet_size = 33 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 33 } }
		AND = { planet_size = 34 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 34 } }
		AND = { planet_size = 35 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 35 } }
		AND = { planet_size = 36 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 36 } }
		AND = { planet_size = 37 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 37 } }
		AND = { planet_size = 38 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 38 } }
		AND = { planet_size = 39 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 39 } }
		AND = { planet_size = 40 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 40 } }
		AND = { planet_size = 41 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 41 } }
		AND = { planet_size = 42 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 42 } }
		AND = { planet_size = 43 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 43 } }
		AND = { planet_size = 44 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 44 } }
		AND = { planet_size = 45 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 45 } }
		AND = { planet_size = 46 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 46 } }
		AND = { planet_size = 47 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 47 } }
		AND = { planet_size = 48 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 48 } }
		AND = { planet_size = 49 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 49 } }
		AND = { planet_size = 50 check_variable = { which = ag_zeta_crisis_bombardment_crater_counter value < 50 } }
	}
}

ag_spawnsystem_gatekeeper_trigger = {
	OR = {
		has_global_flag = ag_spawnsystem_gatekeeper_any_time
		AND = {
			has_global_flag = ag_spawnsystem_gatekeeper_mid_game
			mid_game_years_passed >= 0
		}
		end_game_years_passed >= 0
	}
}

ag_spawnsystem_trigger = {
	AND = {
		OR = {
			AND = {
				has_global_flag = ag_system_spawn_in_home
				exists = space_owner
				space_owner = {
					is_same_value = event_target:ag_system_discover_country
				}
			}
			NOT = {
				has_global_flag = ag_system_spawn_in_home
			}
		}
		NOR = {
			has_star_flag = guardian
			has_star_flag = lcluster
			any_neighbor_system = {
				OR = {
					AND = {
						exists = space_owner
						space_owner = {	
							OR = {
								is_country_type = fallen_empire
								is_country_type = awakened_fallen_empire
							}
						}
					}
					has_star_flag = guardian
				}
			}
		}
	}
}

ag_spawnsystem_trigger_fallback_1 = {
	AND = {
		OR = {
			AND = {
				has_global_flag = ag_system_spawn_in_home
				exists = space_owner
				space_owner = {
					is_same_value = event_target:ag_system_discover_country
				}
			}
			NOT = {
				has_global_flag = ag_system_spawn_in_home
			}
		}
		NOR = {
			has_star_flag = guardian
			has_star_flag = lcluster
		}
	}
}

ag_spawnsystem_trigger_fallback_2 = {
	OR = {
		AND = {
			has_global_flag = ag_system_spawn_in_home
			exists = space_owner
			space_owner = {
				is_same_value = event_target:ag_system_discover_country
			}
		}
		NOT = {
			has_global_flag = ag_system_spawn_in_home
		}
	}
}

ag_ai_allowed_trigger = {
	OR = {
		has_global_flag = ag_ai_event_triggers_allowed
		is_ai = no
	}
}

ag_zeta_crisis_fallback_system_spawn_trigger = {
	NOR = {
		has_star_flag = guardian
		has_star_flag = lcluster
		any_neighbor_system = {
			OR = {
				AND = {
					exists = space_owner
					space_owner = {	
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				has_star_flag = guardian
			}
		}
	}
}

ag_zeta_crisis_fallback_system_spawn_trigger_fallback = {
	NOR = {
		has_star_flag = guardian
		has_star_flag = lcluster
	}
}

ag_is_unhabitable_ringworld = {
	OR = {
		is_planet_class = pc_ringworld_tech
		is_planet_class = pc_ringworld_seam
		is_planet_class = pc_ringworld_habitable_damaged
		is_planet_class = pc_ringworld_tech_damaged
		is_planet_class = pc_ringworld_seam_damaged
		is_planet_class = pc_ringworld_shielded
	}
}
ag_is_ringworld = {
	OR = {
		is_planet_class = pc_ringworld_habitable
		is_planet_class = pc_ringworld_tech
		is_planet_class = pc_ringworld_seam
		is_planet_class = pc_ringworld_habitable_damaged
		is_planet_class = pc_ringworld_tech_damaged
		is_planet_class = pc_ringworld_seam_damaged
		is_planet_class = pc_ringworld_shielded
		is_planet_class = pc_ag_ringworld_desert
		is_planet_class = pc_ag_ringworld_arid
		is_planet_class = pc_ag_ringworld_savannah
		is_planet_class = pc_ag_ringworld_ocean
		is_planet_class = pc_ag_ringworld_continental
		is_planet_class = pc_ag_ringworld_tropical
		is_planet_class = pc_ag_ringworld_tundra
		is_planet_class = pc_ag_ringworld_arctic
		is_planet_class = pc_ag_ringworld_alpine
		is_planet_class = pc_ag_ringworld_machine
		is_planet_class = pc_ag_ringworld_city
		is_planet_class = pc_ag_ringworld_gaia
		is_planet_class = pc_ag_ringworld_shrouded
		
		# For Compatibility
		# wsg
		is_planet_class = pc_ringworld_habitable_sh
		is_planet_class = pc_ringworld_habitable_wsg
		# gigastructure
		is_planet_class = pc_ringworld_city
		is_planet_class = pc_ringworld_machine
		is_planet_class = pc_ringworld_hive 
		is_planet_class = pc_city_ringworld_habitable
		is_planet_class = pc_gigaorbital_ring
		is_planet_class = pc_giga_ringworld_habitable
		# ascendancy_ringworlds
		is_planet_class = pc_ringworld_eco_city 
		is_planet_class = pc_ringworld_energy_city 
		is_planet_class = pc_ringworld_shrouded_paradise 
		is_planet_class = pc_square_ringworld_city 
		is_planet_class = pc_square_ringworld_energy_city 
		is_planet_class = pc_square_ringworld_machine 
		is_planet_class = pc_square_ringworld_hive 
		is_planet_class = pc_ringworld_assimilated 
		is_planet_class = pc_ringworld_assimilated2 
		is_planet_class = pc_ringworld_assimilated3 
		is_planet_class = pc_ringworld_assimilated4 
		is_planet_class = pc_ringworld_machine_factory 
		is_planet_class = pc_ringworld_bioforge 
		is_planet_class = pc_ringworld_mining 
		is_planet_class = pc_ringworld_energy 
		is_planet_class = pc_ringworld_trade 
		is_planet_class = pc_ringworld_training 
		is_planet_class = pc_ringworld_training_shielded 
		is_planet_class = pc_ringworld_eco 
		is_planet_class = pc_ringworld_farming 
		is_planet_class = pc_ringworld_razed_city 
		is_planet_class = pc_ringworld_razed_energy 
		is_planet_class = pc_ringworld_razed_farming 
		is_planet_class = pc_ringworld_razed_mining 
		is_planet_class = pc_ringworld_razed_training 
		is_planet_class = pc_ringworld_razed_eco 
		# acot
		is_planet_class = pc_omega_ringworld_seam
		is_planet_class = pc_omega_ringworld_habitable
	}
}
ag_is_habitat = {
	OR = {
		is_planet_class = pc_habitat
		# gigastructure
		is_planet_class = pc_flat_world
		is_planet_class = pc_squareworld_habitable
		is_planet_class = pc_interstellar_habitat
		# Plentiful Traditions
		is_planet_class = pc_mem_vazuran_habitat
		is_planet_class = pc_habitat_robot
		#PD - Planetary Habitats
		is_planet_class = pc_gghab
		is_planet_class = pc_tmhab
		is_planet_class = pc_tmhab2
		is_planet_class = pc_mmhab
		is_planet_class = pc_mmhab2
		is_planet_class = pc_bhab
		is_planet_class = pc_bchab
		is_planet_class = pc_mhab
		is_planet_class = pc_fhab
		is_planet_class = pc_fmhab
		is_planet_class = pc_mehab
	}
}

ag_is_mod_habitable_ringworld = {
	OR = {
		is_planet_class = pc_ag_ringworld_desert
		is_planet_class = pc_ag_ringworld_arid
		is_planet_class = pc_ag_ringworld_savannah
		is_planet_class = pc_ag_ringworld_ocean
		is_planet_class = pc_ag_ringworld_continental
		is_planet_class = pc_ag_ringworld_tropical
		is_planet_class = pc_ag_ringworld_tundra
		is_planet_class = pc_ag_ringworld_arctic
		is_planet_class = pc_ag_ringworld_alpine
		is_planet_class = pc_ag_ringworld_machine
		is_planet_class = pc_ag_ringworld_city
		is_planet_class = pc_ag_ringworld_gaia
	}
}

ag_is_normal_system = {
	NOR = {
		is_star_class = sc_black_hole
		is_star_class = sc_neutron_star
		is_star_class = sc_pulsar
		is_star_class = sc_binary_1
		is_star_class = sc_binary_2
		is_star_class = sc_binary_3
		is_star_class = sc_binary_4
		is_star_class = sc_binary_5
		is_star_class = sc_binary_6
		is_star_class = sc_binary_7
		is_star_class = sc_binary_8
		is_star_class = sc_binary_9
		is_star_class = sc_binary_10
		is_star_class = sc_trinary_1
		is_star_class = sc_trinary_2
		is_star_class = sc_trinary_3
		is_star_class = sc_trinary_4
	}
}

ag_zeta_crisis_spawn_army_trigger = {
	AND = {
		exists = owner
		owner = {
			OR = {
				is_country_type = default
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
		}
		is_capital = no
		has_ground_combat = no
		is_colony = yes
		num_pops > 0
	}
}

ag_psi_area_support_target = {
	OR = {
		is_country_type = ag_ancient_psi_guardian
		is_country_type = ag_zeta_crisis_country
		is_country_type = ai_empire
		is_country_type = swarm
		is_country_type = extradimensional
		is_country_type = extradimensional_2
		is_country_type = extradimensional_3
		is_country_type = ag_zeta_crisis_portal_holder
		is_country_type = gray_goo

		is_country_type = ag_kuat_invasion_country
	}
}

ag_can_first_contact_with_iota_enclave = {
	AND = {
		exists = event_target:ag_ancient_iota_enclave
		NOR = {
			is_country_type = ag_ancient_iota_enclave
			is_hostile = event_target:ag_ancient_iota_enclave
			# has_communications = event_target:ag_ancient_iota_enclave
		}
	}
}

ag_can_communicate_with_iota_enclave = {
	AND = {
		is_ai = no
		exists = event_target:ag_ancient_iota_enclave
		has_communications = event_target:ag_ancient_iota_enclave
		OR = {
			AND = {
				NOT = {
					has_country_flag = ag_ancient_iota_enclave_diplomacy_engaged
				}
				root.from = {
					is_country_type = ag_ancient_iota_enclave
				}
			}
			root.from = {
				is_same_value = root
			}
		}
	}
}

ag_has_recently_flag_iota_enclave = {
	OR = {
		has_country_flag = ag_recently_support_iota_enclave
		has_country_flag = ag_recently_cancel_support_iota_enclave
		has_country_flag = ag_recently_living_metal_trade_iota_enclave
		has_country_flag = ag_recently_nanites_trade_iota_enclave
		has_country_flag = ag_recently_dark_matter_trade_iota_enclave
		has_country_flag = ag_recently_cancel_living_metal_trade_iota_enclave
		has_country_flag = ag_recently_cancel_nanites_trade_iota_enclave
		has_country_flag = ag_recently_cancel_dark_matter_trade_iota_enclave
		has_country_flag = ag_recently_ask_for_building_iota_enclave
	}
}

ag_has_valid_trade_with_iota_enclave = {
	OR = {
		has_country_flag = ag_living_metal_trade_iota_enclave_actived
		has_country_flag = ag_nanites_trade_iota_enclave_actived
		has_country_flag = ag_dark_matter_trade_iota_enclave_actived
	}
}

ag_has_researcher = {
	AND = {
		planet_resource_compare = { resource = physics_research value > 0 type = produces }
		planet_resource_compare = { resource = society_research value > 0 type = produces }
		planet_resource_compare = { resource = engineering_research value > 0 type = produces }
	}
}
ag_has_planetary_shield = {
	has_building = building_planetary_shield_generator
}
ag_ancient_anchor_system_location_trigger = {
	OR = {
		has_star_flag = empire_cluster
		is_fe_cluster = yes
		any_neighbor_system = {
			OR = {
				has_star_flag = ag_ancient_anchor_system
				has_megastructure = gateway_ruined
				has_megastructure = lgate_base
			}
		}
	}
}

ag_is_compact_star = {
	OR = {
		is_planet_class = pc_black_hole
		is_planet_class = pc_neutron_star
		is_planet_class = pc_pulsar
	}
}

ag_lost_ancient_ship_action_basic_check = {
	custom_tooltip = {
		fail_text = "ag_side.32.a.fail_text.a"
		any_owned_ship = {
			has_ship_flag = ag_lost_ancient_ship
			exists = fleet
			fleet = { is_in_combat = no }
		}
	}
	custom_tooltip = {
		fail_text = "ag_side.32.a.fail_text.b"
		any_owned_ship = {
			has_ship_flag = ag_lost_ancient_ship
			has_hp_percentage > 0.85
		}
	}
}
ag_lost_ancient_ship_guaridan_check = {
	OR = {
		has_country_flag = ag_lost_ancient_ship_target_$ag_target_guardian$_protected
		has_country_flag = ag_lost_ancient_ship_target_$ag_target_guardian$_failed
		NOT = { has_country_flag = ag_exists_$ag_target_guardian$ }
	}
}
