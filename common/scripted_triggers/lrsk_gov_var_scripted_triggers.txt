# Government Variety Pack
# Scripted Triggers
# Author: littleraskol

#lrsk_gov_var_has_sublight_colony_origin = {
#	OR = {
#		has_origin = lrsk_gov_var_origin_sublight_colony_loy
#		has_origin = lrsk_gov_var_origin_sublight_colony_gsp
#		has_origin = lrsk_gov_var_origin_sublight_colony_dis
#	}
#}
#
#lrsk_gov_var_is_sublight_subject = {
#	OR = {
#		is_subject_type = lrsk_gov_var_sublight_vassal
#		is_subject_type = lrsk_gov_var_sublight_satellite
#	}
#}
#
#lrsk_gov_var_has_sublight_overlord_origin = {
#	OR = {
#		has_origin = lrsk_gov_var_origin_sublight_empire
#		has_origin = lrsk_gov_var_origin_sublight_commonwealth
#	}
#}

lrsk_gov_var_is_chartered_colony_type_gov = {
	OR = {
		has_valid_civic = lrsk_gov_var_civic_mc_chart_corp_board
		has_valid_civic = lrsk_gov_var_civic_mc_chartered_company
	}
}

lrsk_gov_var_has_discovery_origin = {
	or = { 
		has_origin = lrsk_gov_var_origin_for_discovery
		has_origin = lrsk_gov_var_origin_for_discovery_mi
	}
}

lrsk_gov_var_has_tradeways_origin = {
	or = { 
		has_origin = lrsk_gov_var_origin_tradeways
		has_origin = lrsk_gov_var_origin_tradeways_mc
	}
}

lrsk_gov_var_has_newfed_origin = {
	or = {
		lrsk_gov_var_has_discovery_origin = yes
		lrsk_gov_var_has_tradeways_origin = yes
		has_origin = lrsk_gov_var_origin_grand_alliance
		has_origin = lrsk_gvp_origin_convened_providence
	}
}

lrsk_gov_var_has_newfed_npc_origin = {
	or = { 
		has_origin = lrsk_gov_var_origin_for_discovery_npc
		has_origin = lrsk_gov_var_origin_for_discovery_mi_npc
		has_origin = lrsk_gov_var_origin_tradeways_npc
		has_origin = lrsk_gov_var_origin_tradeways_mc_npc
		has_origin = lrsk_gov_var_origin_grand_alliance_npc
		has_origin = lrsk_gvp_origin_convened_providence_npc
	}
}

# These are all starting conditions that create close-by neighbors
lrsk_gvp_has_boxed_in_origin = {
	OR = {
		lrsk_gov_var_has_newfed_origin = yes
		lrsk_gov_var_has_newfed_npc_origin = yes
		has_origin = lrsk_gov_var_origin_uplift 			# very unlikely but eh
		#lrsk_gov_var_has_sublight_overlord_origin = yes
		#lrsk_gov_var_has_sublight_colony_origin = yes
	}
}

lrsk_gvp_planet_can_get_wild_cult = {
	OR = {
		NOT = { has_modifier = lrsk_gov_var_statmod_divine_right_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_children_of_heaven_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_holy_war_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_harmony_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_chosen_few_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_universal_family_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_doomsday_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_golden_age_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_wild_revelry_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_penance_and_redemption_cult }
	}	
}

lrsk_gvp_planet_has_no_wild_cult = {
	NOR = {
		has_modifier = lrsk_gov_var_statmod_divine_right_cult
		has_modifier = lrsk_gov_var_statmod_children_of_heaven_cult
		has_modifier = lrsk_gov_var_statmod_holy_war_cult
		has_modifier = lrsk_gov_var_statmod_harmony_cult
		has_modifier = lrsk_gov_var_statmod_chosen_few_cult
		has_modifier = lrsk_gov_var_statmod_universal_family_cult
		has_modifier = lrsk_gov_var_statmod_doomsday_cult
		has_modifier = lrsk_gov_var_statmod_golden_age_cult
		has_modifier = lrsk_gov_var_statmod_wild_revelry_cult
		has_modifier = lrsk_gov_var_statmod_penance_and_redemption_cult
	}
}

# Checks if a system is an "escape route," meaning it has neither:
# 1. An owner,
# 2. A current controller,
# 3. Any fleets present,
# 4. A flag marking it as another empire's escape route, nor
# 5. A flag marking it as owned.
lrsk_is_hyperlane_escape_route = {
	lrsk_system_vacant = yes
	NOR = {
		has_star_flag = lrsk_marked_escape_route
		has_star_flag = lrsk_marked_owned_system
	}
}

# A system has an escape route if it has at least one neighbor that is an escape route.
lrsk_has_hyperlane_escape_route = {
	any_neighbor_system = {
		lrsk_is_hyperlane_escape_route = yes		
	}
}

# A system can be an escape route for another if it is an escape route and has an escape route.
lrsk_can_be_my_hyperlane_escape_route = {
	lrsk_is_hyperlane_escape_route = yes
	lrsk_has_hyperlane_escape_route = yes
}

# The prerequisite conditions for a viceroly colony empire to spawn for Colonial Fiefs
lrsk_can_spawn_viceroyal_colony_vassal = {
	# Need the right civic
	has_valid_civic = lrsk_gov_var_civic_colonial_fiefs
	
	# This effect can only happen so often...
	not = { has_country_flag = lrsk_colfief_venture_cooldown }

	# Requires policies in effect.
	not = { has_policy_flag = lrsk_gvp_colfief_prohibited }

	# Don't want to poach pops from planets with few pops
	any_owned_planet = {
		num_pops > 9
		# Pop that starts new empire must be free, not subject to purge, not "second class" species
		any_owned_pop = {
			is_enslaved = no
			is_being_purged = no
			not = { pop_has_trait = trait_syncretic_proles }
		}
	}

	# This can happen in any unowned, empty system that root has not surveyed at least 3 jumps from the home empire with a planet that some species in root can settle.
	# Note: there is the edge case that only enslaved/being-purged pops have the needed habitability, in which case later effects will fail.
	any_system = {
		distance_to_empire = {
			who = root
			distance > 2
		}
		lrsk_system_vacant = yes
		root = {
			any_owned_pop_species = {
				not = { has_trait = trait_syncretic_proles }
				prevprev = {
					any_system_planet = {
						is_surveyed = {
							who = root
							status = no
						}
						habitability = {
							who = prevprev
							value >= 0.5
						}
					}
				}
			}
		}
	}
}

# Detect if a system is "truly empty" meaning:
# -No owner.
# -No occupier (maybe not needed idk)
# -No presence of ships/space monsters
lrsk_system_vacant = {
	NOR = {
		has_owner = yes
		exists = space_owner
		has_presence = yes
	}
}

# Detect if a world is "safe to colonize" meaning:
# -Not a holy world
lrsk_safe_to_colonize_planet = {
	NOR = {
		has_modifier = holy_planet
	}
}

# Detect if a system is "safe to colonize" meaning:
# -Truly vacant
# -Not adjacent to a FE's territory
lrsk_safe_to_colonize_system = {
	lrsk_system_vacant = yes
	NOT = {
		any_neighbor_system = {
			exists = owner
			owner = {
				is_country_type = fallen_empire
			}
		}
	}

}

# If a special vassal type of Imperial Economy
lrsk_is_impecon_vassal = {
	OR = {
		is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_foundry }
		is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_market }
		is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_trophy }
		is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_prospector }
	}
}
