#Tooltips will be generated from these rules when they fail. Use of custom_tooltip is recommended
#There are still multiple hard-coded rules that apply in addition to these.
#If rules here evaluate to true, there might still be other rules that make the action unavailable.
#If a rule here evaluates to false the action will become unavailable
# Root = target country
# This = country
is_valid_rival = {
	# Powerful & Realistic Orbital Bombardments
	hidden_trigger = {
		if = {
			limit = { merg_has_power_bombard = yes }
			always = yes
		}
	}
	# Vanilla
	custom_tooltip = {
		fail_text = INVALID_RIVAL_DESC
		root = {
			OR = {
				prev = { merg_is_default_empire = no }
				AND = {
					relative_power = { who = prev value >= inferior }
					relative_power = { who = prev value <= superior }
				}
			}
		}
	}
}

# Root = claimer
# This = system
can_add_claim = {
	hidden_trigger = {
		if = {
			limit = { root = { merg_is_default_empire = no } }
			always = yes
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_POLICY
		OR = {
			root = {
				has_policy_flag = unrestricted_wars
				# Expanded Traits, Civics, Pops, and More
				NOR = {
					has_valid_civic = civic_closed_collective
					has_valid_civic = civic_closed_network
				}
			}
			# Expanded Traits, Civics, Pops, and More
			AND = {
				root = {
					has_policy_flag = liberation_wars
					has_authority = auth_democratic
					has_valid_ai_personality = yes
					has_ai_personality = democratic_crusaders
				}
				exists = owner
				owner = {
					NOR = {
						has_authority = auth_democratic
						is_exp_cooperative = yes
					}
				}
			}
			AND = {
				root = { has_policy_flag = liberation_wars }
				exists = owner
				owner = { is_gestalt = yes }
			}
			# Vanilla
			AND = {
				exists = owner
				owner = { is_gestalt = yes }
			}
			AND = {
				exists = owner
				owner = {
					any_war = {
						any_attacker = { is_same_value = prevprev }
						any_defender = { is_same_value = root }
					}
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_NOT_VALID_EMPIRE
		NAND = {
			exists = owner
			owner = {
				NOR = {
					merg_is_default_empire = yes
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					# ACOT
					is_country_type = sbtg_stellarborne_empire_active
					is_country_type = sbtg_light_seeker
					# Twinks Eternal Empire
					is_country_type = eternal_empire
					# ZOFE
					is_zofe_oe = yes
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM
		NAND = {
			root = { has_valid_civic = civic_hive_devouring_swarm }
			root = { is_lithoid_empire = no }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM_LITHOID
		NAND = {
			root = { has_valid_civic = civic_hive_devouring_swarm }
			root = { is_lithoid_empire = yes }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_ASSIMILATOR
		NOT = {
			root = {
				OR = {
					has_valid_civic = civic_machine_assimilator
					# Expanded Traits, Civics, Pops, and More
					has_valid_civic = civic_infestation
					# Ethical Gestalts
					has_valid_civic = civic_hive_assimilator
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_PURIFIERS
		NAND = {
			exists = owner
			root = { has_valid_civic = civic_fanatic_purifiers }
			NOT = { owner = { is_same_species = root } }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_EXTERMINATOR
		NAND = {
			exists = owner
			root = { has_valid_civic = civic_machine_terminator }
			owner = {
				NOR = {
					is_same_species = root
					has_country_flag = synthetic_empire
					is_hive_empire = yes
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_THEY_THREAT
		NAND = {
			exists = owner
			owner = {
				OR = {
					is_homicidal = yes
					has_valid_civic = civic_machine_assimilator
					# Ethical Gestalts
					has_valid_civic = civic_hive_assimilator
				}
			}
			root = {
				NOR = {
					is_homicidal = yes
					has_valid_civic = civic_machine_assimilator
					# Ethical Gestalts
					has_valid_civic = civic_hive_assimilator
				}
			}
		}
	}
	# Reworked Advanced Ascension
	custom_tooltip = {
		fail_text = AAR_failtips_no_claim
		NOT = { root = { has_country_flag = AAR_flg_cntr_no_claim } }
	}
	# StarnetAI/StarTech
	custom_tooltip = {
        fail_text = CANNOT_ADD_CLAIM_NOT_VALID_EMPIRE
        NAND = {
            exists = owner
            root = { is_ai = yes }
            owner = {
                OR = {
                    merg_is_fallen_empire = yes
                    merg_is_awakened_fe = yes
                }
                relative_power = {
                    who = root
                    category = fleet
                    value >= equivalent
                }
            }
        }
    }
	# Ethical Gestalts
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_GESTALT_POLICY
		exists = owner
		OR = {
			has_ethical_gestalts = no
			AND = {
				has_ethical_gestalts = yes
				OR = {
					root = { has_policy_flag = hostile_all_gestalts }
					AND = {
						root = { has_policy_flag = gestalt_liberation }
						owner = { is_hive_empire = yes }
					}
					root = {
						has_policy_flag = gestalt_punishment
						relative_power = { who = prev.owner value < superior }			
					}
					AND = {
						NOT = { root = { has_policy_flag = no_wars } }
						owner = {
							any_owned_pop_species = {
								NOR = {
									has_trait = trait_hive_mind
									has_trait = trait_machine_unit
								}
							}
						}	
					}
				}
				# liberation wars policy allows claiming from unaligned hive minds with non-drone subjects.
				# gestalt control policy allows claiming from unaligned gestalts generally unless they're weak enough to subjugate instead
				owner = {
					is_gestalt = yes
					OR = {
						root = { has_policy_flag = hostile_all_gestalts }
						AND = {
							root = { has_policy_flag = gestalt_liberation }
							owner = { is_hive_empire = yes }
						}
						AND = {
							is_xenophile = no
							root = { is_xenophile = yes }
						}
						AND = {
							is_xenophobe = no
							root = { is_xenophobe = yes }
						}
						AND = {
							is_authoritarian = no
							root = { is_authoritarian = yes }
						}
						AND = {
							is_egalitarian = no
							root = { is_egalitarian = yes }
						}		
						AND = {
							is_spiritualist = no
							root = { is_spiritualist = yes }
						}		
						AND = {
							is_materialist = no
							root = { is_materialist = yes }
						}		
						AND = {
							is_militarist = no
							root = { is_militarist = yes }
						}		
						AND = {
							is_pacifist = no
							root = { is_pacifist = yes }
						}					
					}
				}
			}
		}
	}
	# gestalt containment policy prevents claiming a gestalt's capital system unless you can deassimilate its pops
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_CONTAINMENT_POLICY
		NAND = {
			root = {
				has_policy_flag = "enemy_gestalt_elimination_forbidden"
				NAND = {
					has_technology = tech_gene_tailoring
					root = { is_hive_empire = yes }
				}
			}
			OR = {
				owner = { is_hive_empire = yes }
				root = { has_policy_flag = ai_full_rights }
			}
			any_system_planet = {
				is_capital = yes
				owner = {
					is_gestalt = yes
					or = {
						is_playable = yes
						merg_is_fallen_empire = yes
					}
				}
			}	
		}
	}
	# Civic: Organic Zealots
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_ORGANIC_ZEALOTS
		NAND = {
			root = { is_valid_organic_zealots = yes }
			exists = owner
			owner = {
				NOT = { is_same_species = root }
				is_robot_empire = yes
			}
		}
	}
	custom_tooltip = { # organic zealots don't need to claim system from other non-OZ homicidals
		fail_text = CANNOT_ADD_CLAIM_THEY_THREAT
		NAND = {
			exists = owner
			owner = {
				is_homicidal = yes
				is_valid_organic_zealots = no
			}
			root = { is_valid_organic_zealots = yes }
		}
	}
}

# Root = taker country
# This = giver country
can_get_claim_from_lost_system = {
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_NOT_VALID_EMPIRE
		OR = {
			merg_is_default_empire = yes
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
			# ACOT
			is_country_type = ascended_empire
			is_country_type = sbtg_stellarborne_empire_active
			is_country_type = sbtg_light_seeker
			# Twinks Eternal Empire
			is_country_type = eternal_empire
			# ZOFE
			is_zofe_oe = yes
		}
		root = {
			OR = {
				merg_is_default_empire = yes
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
				# ACOT
				is_country_type = ascended_empire
				is_country_type = sbtg_stellarborne_empire_active
				is_country_type = sbtg_light_seeker
				# Twinks Eternal Empire
				is_country_type = eternal_empire
				# ZOFE
				is_zofe_oe = yes
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM
		NOT = { has_valid_civic = civic_hive_devouring_swarm }
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_ASSIMILATOR
		NOT = { has_valid_civic = civic_machine_assimilator }
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_PURIFIERS
		NAND = {
			has_valid_civic = civic_fanatic_purifiers
			NOT = { is_same_species = root }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_EXTERMINATOR
		NAND = {
			has_valid_civic = civic_machine_terminator
			NOR = {
				is_same_species = root
				has_country_flag = synthetic_empire
				is_machine_empire = yes
			}
		}
	}
	# Civic: Organic Zealots
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_ORGANIC_ZEALOTS
		NAND = {
			is_valid_organic_zealots = yes
			NOT = { is_same_species = root }
			is_robot_empire = yes
		}
	}
}

# should_surrender_planets_to
# species_has_citizenship

#Root = country
#This = pop
should_abduct_pop = {
	planet = {
		exists = owner
		owner = { is_hostile = root }
	}
	OR = {
		ROOT = { has_valid_civic = civic_living_hosts }
		# Expanded Traits, Civics, Pops, and More
		ROOT = { has_government = gov_parasitic_overmind }
		# Vanilla
		NAND = {
			has_citizenship_type = { type = citizenship_purge country = root }
			NOR = {
				has_purge_type = { type = purge_matrix country = root }
				has_purge_type = { type = purge_processing country = root }
				has_purge_type = { type = purge_labor_camps country = root }
				has_purge_type = { type = purge_necrophage country = root }
			}
		}
	}
	# V_TRAITS
	is_v_mobile = yes
}

#Root = planet
#This = species
species_can_live_on_planet = {
	exists = root
	NAND = {
		root = { merg_is_machine_world = yes }
		NOR = {
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
			# Ethics and Civics Bug Branch
			is_bugged_happy_machine = yes
			# FCSS
			AND = {
				merg_has_fcss = yes
				has_trait = trait_cybernetic
			}
			# Vanilla
			AND = {
				has_trait = trait_cybernetic
				exists = root.owner
				root.owner = {
					is_machine_empire = yes
					OR = {
						has_civic = civic_machine_assimilator
						# Ethical Gestalts
						has_ascension_perk = ap_gestaltization
					}
				}
			}
			# Girls Frontline
			has_trait = GF_trait_doll
		}
	}
	# Vanilla
	if = {
		limit = { root = { merg_is_hive_world = yes } }
		OR = {
			merg_has_hive_trait = yes
			AND = {
				#Necrophage Hive Mind can have Necrophytes
				exists = root.owner
				root.owner = {
					is_hive_empire = yes
					OR = {
						has_origin = origin_necrophage
						# Decision Origins
						has_country_flag = decision_necrophage
					}
					prev = { species_can_be_necrophaged = yes }
				}
			}
			# Forgotten Queens
			AND = { #Parasitic Embryos Necrophage Pops
				exists = root.owner
				root.owner = {
					is_hive_empire = yes
					has_valid_civic = civic_hive_parasitic
					prev = { has_job = purge_parasitic }
				}
			}
		}
	}
	# Forgotten Queens
	NAND = {
		root = { is_fq_matryoshka = no }
		has_trait = trait_machine_digital
	}
	# Planetary Population Restrictions
	custom_tooltip = {
		fail_text = RESIDENT_LIVING_RESTRICTED
		has_policy_residentliving_restricted = yes
	}
	custom_tooltip = {
		fail_text = SLAVE_LIVING_RESTRICTED
		has_policy_slaveliving_restricted = yes
	}
	# TimeMod
	TIME_RULE_trgr_spcs_CAN_live_on_planet = yes
}

# can_vote_in_democratic_election
# should_pay_for_leader_upkeep

#Checks whether any leaders (scientists etc) can be formed from this pop
#Root = country
#This = pop
can_generate_leader_from_pop = {
	can_think = yes
	OR = {
		has_citizenship_rights = yes
		# Silfae's Portraits: Revisited
		species = {
			has_species_flag = allow_leaders_organic_advisors@prev.owner
			has_citizenship_type = { type = citizenship_organic_trophy country = prev.owner }
		}
	}
	NOR = {
		has_trait = trait_syncretic_proles
		# Assault Lily
		has_trait = trait_AL_puffer
		# Diagraphers Trait Mod
		is_living_architecture = yes
		# Ethics & Civics: Bug Branch
		is_bugged_slave_gene = yes
		# Expanded Events / Expanded Traits, Civics, Pops, and More
		is_infested_basic = yes
		is_exp_tree_caretaker = yes
		# Expanded Gestalts
		root = { has_origin = origin_hive_overmind }
		# Lithoid Supremacy
		is_pearl_born_drone = yes
		# Plentiful Perks
		has_trait = trait_plentiful_traditions_pt_cocoon
		# Protoss
		has_trait = trait_protoss_probe
		# Rogue Maid (Rogue Servitor Completely Remake)
		has_trait = trait_working_machine
		# Wandering Witch: Voyagers
		has_trait = trait_servitude
	}
	OR = {
		is_robot_pop = no
		root = {
			OR = {
				has_technology = tech_synthetic_leaders
				is_machine_empire = yes
				is_mechanical_empire = yes
				# Wandering Witch: Voyagers
				has_technology = tech_dummy_leaders
			}
		}
		# Girls Frontline
		AND = {
			has_trait = GF_trait_doll
			root = {
				OR = {
					has_policy_flag = GF_doll_right_full
					has_policy_flag = GF_doll_right_limited
				}
			}
		}
	}
	OR = {
		is_same_species = root
		root = {
			NAND = {
				OR = {
					has_origin = origin_necrophage
					# Decision Origins
					has_country_flag = decision_necrophage
				}
				has_trait = trait_necrophage
			}
		}
	}
	# Holofrixit Revisited / Silfae's Portraits: Revisited
	OR = {
		owner = { has_auth_holofrixit = no }
		owner = {
			has_origin = origin_holofrixit
			prev.species = {
				OR = {
					has_species_trait_holofrixit = no
					has_species_trait_holooverseer = yes
					has_species_trait_hologanglion = yes
					has_species_trait_holowarrior = yes
				}
			}
		}
	}
}

#Checks whether this species is eligible to become rulers through elections
#Root = country
#This = species
can_generate_leader_from_species = {
	is_sapient = yes
	OR = {
		NAND = {
			NOT = { root = { has_technology = tech_synthetic_leaders } }
			has_trait = trait_mechanical
		}
		has_citizenship_type = { type = citizenship_full country = root }
	}
	NOR = {
		# ThaumStellaris
		AND = {
			merg_has_thaumstellaris = yes
			species = {
				OR = {
					is_archetype = TC_GOLEM
					is_archetype = TC_GOLEM_HIVE
					is_archetype = TC_GOLEM_MACHINE
				}
			}
		}
		# Ethics and Civics - Bug Branch
		is_bugged_symbiotic = yes
	}
}

# can_create_espionage_asset_from_species

#Root = country
#This = pop
can_generate_military_leader_from_pop = {
	can_be_military_leader = yes
	OR = {
		is_robot_pop = no
		root = {
			OR = {
				has_technology = tech_synthetic_leaders
				is_machine_empire = yes
				is_mechanical_empire = yes
				# Holofrixit Revisited / Silfae's Portraits: Revisited
				AND = {
					has_origin = origin_holofrixit
					PREV.species = { has_species_trait_holowarrior = yes }
				}
			}
		}
		# Girls Frontline
		AND = {
			has_trait = GF_trait_doll
			root = {
				OR = {
					has_policy_flag = GF_doll_right_full
					has_policy_flag = GF_doll_right_limited
				}
			}
		}
	}
	OR = {
		is_same_species = root
		root = {
			NAND = {
				has_origin = origin_necrophage
				has_trait = trait_necrophage
			}
		}
	}
	# Expanded Gestalts
	NOT = { root = { has_origin = origin_hive_overmind } }
}

# can_generate_army_from_planet
#Root = planet
#This = country
can_release_vassal = {
	hidden_trigger = {
		if = {
			limit = { merg_has_expanded_pops = yes }
			always = yes
		}
	}
	custom_tooltip = {
		fail_text = default
		is_homicidal = no
	}
	custom_tooltip = {
		fail_text = default
		NOT = { has_valid_civic = civic_machine_assimilator }
	}
	# Twinks Eternal Empire
	custom_tooltip = {
		fail_text = default
		NOT = { is_country_type = eternal_empire }
	}
}

#Root = species
#This = country
can_release_vassal_from_species = {
	root = {
		is_sapient = yes
		NOR = {
			AND = {
				has_trait = trait_hive_mind
				NOR = {
					prev.this = { has_origin = origin_progenitor_hive }
					# Empires Expanded
					prev.this = { has_valid_civic = civic_hive_semi_autonomous_drones }
				}
			}
			AND = {
				NOT = { has_trait = trait_hive_mind }
				prev.this = { has_authority = auth_hive_mind }
			}
			can_think = no
			has_trait = trait_clone_soldier_infertile
			has_trait = trait_clone_soldier_infertile_full_potential
			# Empires Expanded
			AND = {
				OR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
				NOR = {
					prev.this = { has_valid_civic = civic_machine_mighty_processors }
					# Rogue Maid
					Maid_trigger_4_can_release_vassal_from_species = yes
				}
			}
			# Plentiful Perks
			has_trait = trait_plentiful_traditions_pt_cocoon
			# Girls Frontline
			has_trait = trait_doll
			# Expanded Traits, Civics, Pops, and More
			AND = {
				has_trait = trait_machine_unit
				NOT = { prev.this = { has_origin = origin_master_computer } }
			}
			AND = {
				NOT = { has_trait = trait_machine_unit }
				prev.this = { has_authority = auth_machine_intelligence }
			}
			is_infested_basic = yes
			is_exp_tree_caretaker = yes
		}
	}
}

# Root = species
# This = country
# Fixing prev position
can_generate_army_from_species = {
    root = {
	    exists = prev
        OR = {
            has_military_service_type = { type = military_service_full country = prev }
            has_military_service_type = { type = military_service_limited country = prev }
            prev = { is_primitive = yes }
        }
    }
}

# can_modify_species

#This = country, suject
#Root = country, overlord
#From = target solar system
#This rule is a condition for when subjects that normally cannot colonize outside their borders are allowed to
subject_can_expand = {
	# Exalted domination totally disallow vassal expansion
	merg_has_exalted_domination = no
	root = { has_valid_civic = civic_feudal_realm }
}

#Root = country, attacker
#This = country, target
#This rule is a condition for taking hostile actions towards neutral targets. Such as landing troops or attacking their fleets
can_take_hostile_actions = {
	# Vanilla
	if = {
		limit = {
			root = { NOT = { has_policy_flag = first_contact_attack_allowed } }
			NOT = {
				is_hostile = root
				has_communications = root
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_FIRST_CONTACT_PROTOCOL"
			always = no
		}
	}
	else_if = {
		limit = {
			has_country_flag = fotd_seperatist_country@ROOT
			ROOT = { has_origin = origin_fear_of_the_dark }
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_FOTD"
			always = no
		}
	}
	else_if = {
		limit = {
			AND = {
				NOR = {
					has_country_flag = hostile_to_nomads
					# Ariphaos Patch
					is_hostile = root
				}
				root = { is_country_type = nomad }
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_FIRST_CONTACT_PROTOCOL"
			always = no
		}
	}
	# BlueArchive
	else_if = {
		limit = {
			exists = from
			from = { has_country_flag = BA_Precursor_contactor }
			always = no
		}
	}
	# Origins of Civilization
	else_if = {
		limit = {
			ROOT = { merg_is_default_empire = yes }
			is_country_type = mpo_lost_spacefarers
		}
		hidden_trigger = {
			has_country_flag = mpo_attack_spacefarers
			OR = {
				any_owned_fleet = {
					exists = solar_system.space_owner
					solar_system.space_owner = { is_same_value = ROOT }
				}
				any_owned_planet = {
					exists = solar_system.space_owner
					solar_system.space_owner = { is_same_value = ROOT }
				}
			}
		}
	}
	# Vanilla
	else_if = {
		#attacking primitives with non-interference
		limit = {
			root = {
				merg_is_default_empire = yes
				NOT = { has_policy_flag = interference_aggressive }
			}
			is_primitive = yes
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_NATIVE_INTERFERENCE"
			always = no
		}
	}
	else_if = {
		limit = {
			is_primitive = yes
			root = { merg_is_default_empire = yes }
			capital_scope = {
				root = { NOT = { any_planet_within_border = { is_same_value = prevprev } } }
			}
		}
		custom_tooltip = {
			text = ""
			always = no
		}
	}
	else_if = {
		limit = {
			ROOT = {
				any_agreement = { agreement_preset = preset_satrapy }
			}
			is_country_type = faction
			root = {
				any_owned_planet = {
					exists = controller
					controller = { is_same_value = prevprevprev }
				}
			}
		}
		custom_tooltip = {
			text = ""
			always = yes
		}
	}
	else_if = {
		limit = {
			ROOT = { any_agreement = { agreement_preset = preset_satrapy } }
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_SATRAPY"
			always = no
		}
	}
	else_if = {
		limit = {
			exists = overlord
			overlord = { is_same_value = root }
			ROOT = { any_agreement = { agreement_preset = preset_satrapy } }
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_OVERLORD"
			always = no
		}
	}
	else_if = {
		limit = { this = { is_country_type = sbtg_stellarborne_empire_passive } }
		custom_tooltip = { always = no }
	}
	else_if = {
		limit = { this = { is_country_type = void_lifeforms_1 } }
		custom_tooltip = { always = yes }
	}
	else_if = {
		limit = { root = { is_country_type = void_lifeforms_1 } }
		custom_tooltip = { always = yes }
	}
	else_if = {
		limit = { this = { is_country_type = void_lifeforms_2 } }
		custom_tooltip = { 	always = yes }
	}
	else_if = {
		limit = { root = { is_country_type = void_lifeforms_2 } }
		custom_tooltip = { always = yes }
	}
	# Planet States
	else_if = {
		limit = {
			is_country_type = planet_state
			root = { merg_is_default_empire = yes }
			capital_scope = {
				root = { NOT = { any_planet_within_border = { is_same_value = prevprev } } }
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_PLANET_STATE"
			always = no
		}
	}
	else_if = {
		limit = {
			is_country_type = planet_state
			root = {
				OR = {
					is_country_type = dormant_marauders
					is_country_type = ruined_marauders
					is_country_type = awakened_marauders
					# The Empty Vagrant
					is_country_type = awakened_marauders_ev
				}
			}
		}
		always = no
	}
	# Some Events of Outside Cluster
	else_if = {
		limit = {
			OR = {
				AND = {
					root = { has_country_flag = nep_gaia_assist_war }
					has_country_flag = nep_highlander_country
				}
				AND = {
					root = { has_country_flag = nep_highlander_assist_war }
					has_country_flag = nep_gaia_country
				}
			}
		}
		always = yes
	}
	else_if = {
		# SEoOC_phantom
		limit = {
			root = { NOT = { has_technology = tech_nep_phantom_phase_shift } }
			is_country_type = nep_phantom_passive
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_NEP_PHANTOM"
			always = no
		}
	}
	else_if = {
		# SEoOC_side_story
		limit = {
			root = { is_ai = no }
			OR = {
				AND = {
					root = { has_country_flag = nep_gaia_assist_war }
					has_country_flag = nep_gaia_country
				}
				AND = {
					has_country_flag = nep_gaia_assist_war
					root = { has_country_flag = nep_gaia_country }
				}
				AND = {
					root = { has_country_flag = nep_highlander_assist_war }
					has_country_flag = nep_highlander_country
				}
				AND = {
					has_country_flag = nep_highlander_assist_war
					root = { has_country_flag = nep_highlander_country }
				}
				AND = {
					has_country_flag = nep_gpc_country
					root = { has_country_flag = nep_caravaneer_fleet_country }
				}
				AND = {
					root = { has_country_flag = nep_gpc_country }
					has_country_flag = nep_caravaneer_fleet_country
				}
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_NEP_GAIA"
			always = no
		}
	}
	else_if = {
		# Some Events of Outside Cluster
		limit = {
			is_country_type = nep_arena_hologram
			is_country_type = nep_bounty_hologram
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_NEP_HOLOGRAM"
			always = no
		}
	}
	# Vanilla
	else = { always = yes }
}

# can_declare_war

#Root = country
#This = planet
can_colonize_planet = {
	# Diagrapher's Factions and Ethics Mod
	hidden_trigger = {
		OR = {
			merg_has_diag_fact = no
			NAND = {
				root = {
					is_ai = yes
					OR = {
						has_origin = origin_life_seeded
						has_origin = origin_ocean_paradise
						has_origin = origin_shattered_ring
					}
					is_spiritualist = yes
					exists = home_planet
					home_planet = { is_owned_by = root }
				}
				NOR = {
					has_planet_flag = consecrated
					solar_system = {
						is_same_value = root.home_planet.solar_system
					}
				}
			}
		}
	}
	# StarnetAI/StarTech
	if = {
		limit = {
			has_modifier = "holy_planet"
			exists = root
			root = {
				is_ai = yes
				NOT = { has_relic = r_severed_head }
			}
			any_country = { has_ai_personality_behaviour = holy_planets }
		}
		always = no
	}
	# The Belt
	else_if = {
		limit = { merg_has_the_belt = yes }
		OR = {
			NOR = {
				bdoe_is_habitable_asteroid = yes
				bdoe_is_habitable_barren = yes
			}
			AND = {
				bdoe_is_habitable_asteroid = yes
				root = {
					has_technology = tech_bdoe_asteroid_adaption_0
				}
				NOT = { has_global_flag = xenos_disable_mechanics_asteroid_colonizing }
			}
			AND = {
				bdoe_is_habitable_barren = yes
				root = {
					has_technology = tech_bdoe_secondary_planets_adaption_0
				}
			}
		}
	}
	# Vanilla
	else = { always = yes }
}

#Root = country
#This = planet
can_colonize_outside_borders = {
	exists = root
	root = {
		OR = {
			# Human Fallen Empires
			is_country_type = hfe_features_exodus
			# The Empty Vagrant
			is_country_type = ev_leviathans_crisis
			# Project Gestalt
			is_country_type = pg_last_hope
		}
	}
	exists = solar_system
	solar_system = {
		OR = {
			NAND = {
				merg_has_coop_teams = yes
				exists = owner
			}
			AND = {
				merg_has_coop_teams = yes
				exists = owner
				owner = {
					has_country_flag = is_in_coop_with@root
					has_policy_flag = coop_colony_policy_yes
					not = { has_global_flag = prevent_colony_outside }
				}
			}
		}
	}
}

#Root = country
#This = planet
can_terraform_planet = {
	custom_tooltip = {
		fail_text = terraform_fail_no_presapient_protection_or_no_presapients
		NAND = {
			AND = {
				exists = root
				root = { has_policy_flag = pre_sapients_protect }
			}
			any_owned_pop = { is_sapient = no }
		}
	}
	# Planetary Diversity
	NOT = { root = { has_origin = origin_pd_tree_of_life } }
	# Vanilla
	custom_tooltip = {
		fail_text = "requires_actor_not_devouring_swarm_lithoid"
		exists = root
		OR = {
			# Ethics and Civics Bug Branch removes this check
			merg_has_ethics_bug = yes
			AND = {
				merg_has_ethics_bug = no
				root = { is_lithoid_devouring_swarm = no }
			}
		}
	}
	custom_tooltip = {
		fail_text = "legendary_leader_planet_no_terraform"
		exists = root
		this = {
			NAND = {
				has_planetary_diversity = yes
				has_planet_flag = legendary_leader_planet
			}
		}
	}
	custom_tooltip = {
		fail_text = requires_not_relentless_industrialists_situation
		NOT = { any_targeting_situation = { is_situation_type = relentless_industrialists_situation } }
	}
	# Planetary Diversity
	custom_tooltip = {
		fail_text = "requires_actor_not_pdtol"
		root = { NOT = { has_origin = origin_pd_tree_of_life } }
	}
	# Real Space New Frontiers
	custom_tooltip = {
		fail_text = NO_TERRAFORM_HOLLOW_WORLD
		OR = {
			merg_has_real_new_frontiers = no
			AND = {
				merg_has_real_new_frontiers = yes				# Let's not affect Expanded Gestalt's own pc_hollow
				NOT = { is_planet_class = pc_hollow }
			}
		}
	}
	custom_tooltip = {
		fail_text = NO_TERRAFORM_OVERMIND
		OR = {
			merg_has_real_new_frontiers = no
			NOT = { has_deposit = d_heart_of_the_overmind }
		}
	}
}

#Root = country
#This = pop
can_colonize_with_pop = {
	has_colonization_control = {
		type = colonization_control_no
		country = root
	}
	OR = {
		NOT = { has_trait = trait_self_modified }
		is_same_species = root
	}
	# The Empty Vagrant
	Root = {
		OR = {
			NOT = { is_country_type = default_ev }
			AND = {
				is_country_type = default_ev
				OR = {
					has_origin = origin_ev_both_choosen
					has_country_flag = has_ev_to_planets
				}
			}
		}
	}
	NOR = {
		# Plentiful Perks
		has_trait = trait_plentiful_traditions_pt_cocoon
		# Madoka Magica NEW
		has_trait = trait_mahoshoujo
		# Diagraphers Trait Mod
		is_subsapient_form = yes
		is_rooted_adult = yes
		is_living_architecture = yes
		is_dimorphic_male = yes
	}
	# Vanilla
	if = {
		limit = { merg_is_sapient = no }
		custom_tooltip = { always = no }
	}
	else = { always = yes }
}

#Root = country
#This = species
can_colonize_with_species = {
	has_colonization_control = {
		type = colonization_control_no
		country = root
	}
	NOR = {
		# Diagraphers Trait Mod
		is_rooted_adult = yes
		is_living_architecture = yes
		is_dimorphic_male = yes
		# Plentiful Perks
		has_trait = trait_plentiful_traditions_pt_cocoon
		# ThaumStellaris
		AND = {
			merg_has_thaumstellaris = yes
			species = {
				OR = {
					is_archetype = TC_GOLEM
					is_archetype = TC_GOLEM_HIVE
					is_archetype = TC_GOLEM_MACHINE
				}
			}
		}
		# Assault Lily
		is_species_class = PUFFER
	}
	OR = {
		NOT = { has_trait = trait_self_modified }
		is_same_species = root
	}
	# The Empty Vagrant
	root = {
		OR = {
			NOT = { is_country_type = default_ev }
			AND = {
				is_country_type = default_ev
				OR = {
					has_origin = origin_ev_both_choosen
					has_country_flag = has_ev_to_planets
				}
			}
		}
	}
	# Vanilla
	if = {
		limit = { merg_is_sapient = no }
		custom_tooltip = { always = no }
	}
	else_if = {
		limit = { has_trait = trait_hive_mind }
		root = { is_hive_empire = yes }
	}
	else_if = {
		limit = { has_trait = trait_machine_unit }
		root = { is_machine_empire = yes }
	}
	else_if = {
		limit = {
			# Lithoid Supremacy
			is_pearl_born_drone = yes
		}
		always = no
	}
	# Extra Origins
	else_if = {
		limit = { is_symbiote = yes }
		OR = {
			root = {
				any_owned_species = {
					is_symbiote_of_prevprev = yes
				}
			}
			any_country = {
				has_diplo_migration_treaty = root
				any_owned_species = {
					is_symbiote_of_prevprev = yes
				}
			}
		}
	}
	# Lithoid Supremacy Content
	else_if = {
		limit = { is_pearl_born_drone = yes }
		custom_tooltip = { always = no }
	}
	# Vanilla
	else = { always = yes }
}

# pop_has_random_ethics
 
# Root = Species
# From = Country
# This = Species
species_has_happiness = {
	NOR = {
		AND = {

			has_trait = trait_machine_unit
			from = {
				NOT = {
				AND = {
					has_ethic = ethic_form_autonomous
					has_ethic = ethic_form_affective
					}
				}
			}
		}
		has_trait = trait_hive_mind
			
		
		can_think = no
		# Diagraphers Trait Mod
		is_multihive_drone = yes
		# ThaumStellaris
		AND = {
			merg_has_thaumstellaris = yes
			species = {
				OR = {
					is_archetype = TC_GOLEM
					is_archetype = TC_GOLEM_HIVE
					is_archetype = TC_GOLEM_MACHINE
				}
			}
		}
		# Trait Diversity
		td_has_no_happiness = yes
		# Wandering Witch: Voyagers
		has_trait = trait_servitude
		AND = {
			has_trait = trait_dummy
			OR = {
				NOT = { exists = from }
				from = { 
					NOR = { 
						has_technology = tech_synthetic_workers 
						has_technology = tech_dummy_leaders
						has_origin = origin_garbage_princesses
						has_country_flag = synthetic_empire
					} 
				}
				from = { has_policy_flag = ai_outlawed }
			}
		}
		# Warship Girls R And MIST Species
		has_trait = sh_trait_shenhai
		has_trait = sh_trait_shenhai1
		has_trait = sh_trait_shenhai2
		has_trait = sh_trait_silent
		has_trait = sh_trait_silent1
		# Vanilla
		AND = {
			has_trait = trait_mechanical
			# Animated Synthetics Portraits Expanded: Reborn
			OR = {
				merg_has_animated_synth = no
				AND = {
					merg_has_animated_synth = yes
					from = { is_machine_empire = yes }
					is_extsynth_synthetic = yes
					NOT = { has_trait = trait_psionic }
				}
				AND = {
					merg_has_animated_synth = yes
					NAND = {
						from = { is_machine_empire = yes }
						is_extsynth_synthetic = yes
					}
				}
			}
			# Vanilla
			OR = {
				NOT = { exists = from }
				from = {
					OR = {
						is_machine_empire = yes
						NOR = {
							has_technology = tech_synthetic_workers
							# Wandering Witch: Voyagers
							has_technology = tech_dummy_leaders
						}
						has_policy_flag = ai_outlawed
					}
				}
			}
		}
		AND = {
			has_trait = trait_cybernetic
			exists = from
			from = {
				is_machine_empire = yes
				OR = {
					has_civic = civic_machine_assimilator # Assimilator empire
					has_ascension_perk = ap_gestaltization # Ethical Gestalts
				}
			}
		}
	}
}

#Root = country, us
#This = country, them
#This rule is a condition for determining if a country is hostile towards another. not to be confused with can_take_hostile_action
can_be_hostile_towards = {
	if = {
		limit = { is_primitive = yes }
		ROOT = {
			NOR = {
				has_policy_flag = interference_not_allowed
				has_policy_flag = interference_subtle
			}
		}
	}
	else_if = {
		limit = { ROOT = { is_primitive = yes } }
		NOR = {
			has_policy_flag = interference_not_allowed
			has_policy_flag = interference_subtle
		}
	}
	else_if = {
		limit = { is_country_type = ratlings }
		always = yes
	}
	# ACOT
	else_if = {
		limit = {
			OR = {
				is_country_type = void_lifeforms_1
				is_country_type = void_lifeforms_2
			}
		}
		always = yes
	}
	else_if = {
		limit = {
			root = {
				OR = {
					is_country_type = void_lifeforms_1
					is_country_type = void_lifeforms_2
				}
			}
		}
		always = yes
	}
}

# Checks if a pop can procreate
# This = Species
# Root = Planet
can_species_procreate = {
	is_sapient = yes
	NOR = {
		has_trait = trait_machine_unit
		has_trait = trait_mechanical
		# # Ethics and Civics Bug Branch
		is_bugged_happy_machine = yes
		AND = {
			is_exp_clone = yes
			root = {
				owner = {
					OR = {
						has_country_flag = clone_infertility_5
						AND = {
							NOT = { has_origin = origin_clones }
							years_passed > 200
						}
					}
				}
			}
		}
		AND = {
			root = { owner = { has_origin = origin_hive_queen } }
			has_trait = trait_hive_mind
		}
		# Expanded Gestalts
		has_trait = trait_hive_mind_overlord
		# Diagraphers Trait Mod
		is_dimorphic_male = yes
		# Expanded Events
		is_exp_memorex_comatos = yes
		# Girls Frontline
		has_trait = GF_trait_doll
		# Holofrixit Revisited / Silfae's Portraits: Revisited
		has_species_trait_hologanglion = yes
		# Lithoid Supremacy
		is_pearl_born_drone = yes
		# Madoka Magica NEW
		has_trait = trait_mahoshoujo
		# Plentiful Traditions - Extra Perks
		has_trait = trait_plentiful_traditions_pt_cocoon
		# V_TRAITs
		has_v_asexual_reproduction = yes
		# Wandering Witch: Voyagers
		has_trait = trait_dummy
	}
	OR = {
		has_ethical_gestalts = no
		AND = {
			has_ethical_gestalts = yes
			OR = {
				NOT = { has_trait = trait_hive_mind }
				has_citizenship_type = { type = citizenship_full country = root.owner }
				AND = {
					exists = root.branch_office_owner
					has_citizenship_type = { type = citizenship_full country = root.branch_office_owner }
					root.branch_office_owner = {
						NOT = { has_relation_flag = { who = root.owner flag = no_pop_growth_treaty } }
					}
				}
			}
		}
	}
	NAND = {
		root = { has_modifier = slave_colony }
		NOT = { has_citizenship_type = { type = citizenship_slavery country = root.owner } }
		# Special Colonies Overhaul
		AND = {
			merg_has_special_colonies = yes
			NOT = {
				root = {
					owner = {
						or = {
							has_valid_civic = civic_slaver_guilds
							has_valid_civic = civic_indentured_assets
						}
					}
				}
			}
		}
	}
	# Diagraphers Trait Mod
	NAND = {
		has_exotic_gas_dependency = yes
		exists = root.owner
		root.owner = { resource_stockpile_compare = { resource = exotic_gases value <= 0 } }
	}
	NAND = {
		diag_is_delicate = yes
		exists = root.owner
		has_citizenship_type = { type = citizenship_slavery country = root.owner }
	}
	NAND = {
		diag_is_sterile = yes
		exists = root.owner
		root.owner = { 	has_artificial_wombs = no }
	}
	# Expanded Pops
	if = {
		limit = { is_exp_tree_caretaker = yes }
		root = {
			OR = {
				has_deposit = d_tree_of_life_colony
				has_deposit = d_tree_of_life_home
			}
		}
	}
	# Planetary Population Restrictions
	policies_allow_breeding = yes
	# Human Fallen Empires
	NOT = { has_trait = hfe_species_trait_brainworm }
	# V_Traits
	if = {
		limit = { has_v_difficult_reproduction = yes }
		root = { habitability = { who = this value >= 0.8 } }
	}
	if = {
		limit = { has_v_heterogamous_reproduction = yes }
		root = { habitability = { who = this value <= 0.8 } }
	}
	# Wandering Witch: Voyagers
	if = {
		limit = { has_trait = trait_reanimated_materials }
		OR = {
			is_mage = yes
			root.owner = {
				has_country_flag = syn_witch
			}
			root = {
				NOR = { # make sure elaina always grow first
					has_building = building_possibility_portal
					has_building = building_dimensional_instrument
					has_deposit = d_mysterious_portal
				}
			}
			root = {
				num_assigned_jobs = { job = matter_reanimator value > 0 }
				NOR = { # make sure elaina always grow first
					has_building = building_possibility_portal
					has_building = building_dimensional_instrument
					has_deposit = d_mysterious_portal
				}
			}
		}
	}
	if = {
		limit = { has_trait = trait_houki }
		root.owner = {
			has_country_flag = newbirth_houki
			NOT = { has_country_flag = max_houki_number_reached }
		}
	}
	if = {
		limit = { 
			OR = {
				has_trait = trait_witch
				has_trait = trait_victorika
				has_trait = trait_elaina_descendant
			}
		}
		OR = {
			root.owner = {
				has_ascension_perk = ap_xeno_compatibility
			}
			root = {
				OR = {
					has_building = building_possibility_portal
					has_building = building_dimensional_instrument
					has_deposit = d_mysterious_portal
				}
			}
		}
	}
	# Vanilla
	NOT = { has_species_flag = nivlac_no_procreation }
	if = {
		limit = { has_trait = trait_necrophage }
		NOT = {
			root = {
				any_owned_species = {
					has_population_control = { country = root.owner type = no }
					species_can_be_necrophaged = yes
				}
			}
		}
	}
}

# Checks if a pop can be assembled
# This = Species
# Root = Planet
can_species_be_assembled = {
	is_sapient = yes
	# Holofrixit Revisited / Silfae's Portraits: Revisited
	has_species_trait_holodrone = no
	# Kancolle
	root.owner = { NOT = { has_modifier = modifier_ban_assemble } }
	# Vanilla
	OR = {
		# Robots
		AND = {
			is_robotic = yes
			# Azur lane Stellaris DLC
			NOT = { has_trait = trait_robot_mind_relic_core }
			# Animated Synthetics Portraits Expanded: Reborn
			OR = {
				merg_has_animated_synth = no
				AND = {
					merg_has_animated_synth = yes
					if = { #synth can never be built unless empire is a synth empire
						limit = { root.owner = { has_country_flag = synthetic_empire } }
						is_extsynth_synthetic = yes
					}
				}
			}
			# Diagraphers Trait Mod
			NAND = {
				robot_has_rare_crystal_comp = yes
				exists = root.owner
				root.owner = {
					resource_stockpile_compare = {
						resource = rare_crystals
						value <= 0
					}
				}
			}
			# Girls Frontline
			if = {
				limit = { has_trait = GF_trait_doll }
				root.owner = { GF_can_build_doll_species = yes }
			}
			# Wandering Witch
			if = { limit = { has_trait = trait_dummy }
				if = { limit = { root.owner = { has_origin = origin_garbage_princesses } }
					root = { 
						OR = {
							has_building = building_enigmatic_assembly_plant
							num_assigned_jobs = { job = dummicist value > 0 }
						}
						check_modifier_value = { modifier = planet_pop_assembly_add value > 0 }
					}
				}
				else = {
					root.owner = { has_technology = tech_dummy_workers }
					root = { num_assigned_jobs = { job = dummicist value > 0 } }
					root = { check_modifier_value = { modifier = planet_pop_assembly_add value > 0 } }
				}
			}
			# Voyage to Eternity
			KZ_VOY_trgr_plnt_ASSEMBLY = yes
			if = { limit = { has_trait = trait_KZ_VOY_magic_puppet }
				KZ_VOY_can_assemble_magic_puppet = yes
			}
			# Vanilla
			root = {
				check_modifier_value = {
					modifier = planet_pop_assembly_add
					value > 0
				}
				owner = {
					NOR = {
						# Azur lane Stellaris DLC
						has_authority = auth_azur_lane_1
						has_authority = auth_azur_lane_2
						has_authority = auth_azur_lane_K
						# Civic: Organic Zealots
						AND = {
							has_policy_flag = robots_outlawed
							is_robot_empire = no
						}
						has_country_flag = lost_robot_policy_war
						is_valid_organic_zealots = yes
						AND = {
							is_subject = yes
							exists = overlord
							overlord = { is_valid_organic_zealots = yes }
						}
					}
				}
			}
		}
		# Organics
		AND = {
			is_organic_species = yes
			# Civic: Organic Zealots
			root = {
				check_modifier_value = {
					modifier = planet_pop_assembly_organic_add
					value > 0
				}
				owner = {
					NAND = {
						has_trait = trait_cybernetic
						OR = {
							has_country_flag = lost_robot_policy_war
							is_valid_organic_zealots = yes
							AND = {
								is_subject = yes
								exists = overlord
								overlord = { is_valid_organic_zealots = yes }
							}
						}
					}
				}
			}
			# Hives can only clone drones
			if = {
				limit = { root.owner = { is_hive_empire = yes } }
				AND = {
					OR = {
						has_trait = trait_hive_mind
						# Ethics and Civics - Bug Branch
						is_bugged_happy_drone = yes
					}
					# Expanded Gestalts
					NOT = { has_trait = trait_hive_mind_overlord }
				}
			}
			# Expanded Traits, Civics, Pops, and More
			else_if = {
				limit = {
					root = {
						owner = { has_origin = origin_sacred_tree }
						OR = {
							has_deposit = d_tree_of_life_home
							has_deposit = d_tree_of_life_colony
						}
					}
				}
				OR = {
					is_exp_tree_caretaker = yes
					root = {
						OR = {
							merg_has_cloning_building = yes
							has_modifier = tiyanki_trophy
							owner = { has_modifier = syamelles_curse }
							AND = {
								has_building = building_posthumous_employment_center
								owner = { has_civic = civic_permanent_employment }
							}
							has_planet_flag = can_organic_assemble_flag #for mod compatibility
						}
					}
				}
			}
			# flourishing plantoids
			else_if = {
				limit = { has_budding_trait = yes }
				root = { any_owned_species = { is_exact_same_species = prevprev } }
			}
			else_if = {
				limit = { has_trait = trait_tiyanki }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
				}
			}
			else_if = {
				limit = {
					root.owner = {
						has_tradition = tr_cybernetics_assembly_standards
						has_policy_flag = roboticist_output_build_cyborgs
					}
				}
				has_trait = trait_cybernetic
			}
			# Lithoid supremacy
			else_if = {
				limit = { 
					OR = {
						is_pearl_born_drone = yes 
						has_trait = trait_pearl_born_royal
					}
				} 
				root = {
					any_owned_species = { 
						OR = {
							is_pearl_born_drone = yes 
							has_trait = trait_pearl_born_royal
						}
					}
				}
			}
			# Clone army
			else_if = {
				limit = {
					OR = {
						has_trait = trait_clone_soldier_infertile
						has_trait = trait_clone_soldier_infertile_full_potential
					}
				}
				root = {
					# Event 'clones.3' should cover this, but extra safety check.
					merg_has_clone_army_building = yes
					NOT = { check_variable = { which = clone_pops_missing value = 0 } }
				}
			}
			# Plentiful Traditions - Extra Perks
			else_if = {
				limit = { root.owner = { has_ascension_perk = ap_total_assimilation } }
				has_trait = trait_plentiful_traditions_pt_cocoon
			}
			# Nirvana Empire Project
			else_if = {
				limit = {
					root.owner = {
						OR = {
							has_valid_civic = civic_nirvana_empire_dragon
							has_valid_civic = civic_nirvana_empire_council
						}
					}
					is_same_species = root.owner
				}
				root = { check_modifier_value = { modifier = planet_pop_assembly_organic_add value > 0 } }
			}
			# Planetary Diversity
			else_if = {
				limit = { is_organic_fourschildren = yes }
				root = {
					has_building = building_techno_04_clone_vat
					NOT = { check_variable = { which = techno_pops_missing value = 0 }
					}
				}
			}
			# V_TRAITS
			else_if = {
				limit = { has_v_asexual_reproduction = yes }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
				}
			}
			else_if = {
				limit = { has_v_heterogamous_reproduction = yes }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
					habitability = { who = this value >= 0.6 }
				}
			}
			# Wandering Witch: Voyagers
			else_if = {
				limit = { 
					OR = {
						has_trait = trait_houki 
						has_trait = trait_reanimated_materials
					}
				}
				root = {
					OR = {
						num_assigned_jobs = { job = matter_reanimator value > 0 }
						merg_has_cloning_building = yes
						has_building = building_dimensional_instrument
					}
				}
				if = {
					limit = { has_trait = trait_houki }
					root.owner = {
						has_country_flag = newbirth_houki
						NOT = { has_country_flag = max_houki_number_reached }
					}
				}
			}
			else_if = { # for Familiars
				limit = { has_trait = trait_servitude }
				root = {
					OR = {
						merg_has_cloning_building = yes
						has_building = building_familiar_clone_vat
					}
				}
			}
			else_if = { # for Familiars
				limit = { has_trait = trait_reanimated_materials }
				root = {
					OR = {
						has_building = building_object_converter
						has_building = building_object_converter_2
					}
				}
			}
			# ANZ Advanced Cloning
			else_if = { # Cyborg Origin
				limit = {
					root.owner = { has_origin = origin_anz_cyborgs_collective }
					root = { has_building = building_anz_cc_mainframe }
				}
				is_same_species = root.owner.owner_main_species
			}
			# The Dark Arts of Necromancy
			else_if = {
				limit = {
					OR = {
						is_necromage = yes
						is_undead = yes
						is_mindless_undead = yes
					}
				}
			}
			# Vanilla
			else = {
				OR = {
					# Assault Lily
					is_archetype = LILY
					# EDA
					is_archetype = Areta
					# Star Wars: UnknownWorld Shipgirls Story
					is_archetype = STARSHIPGIRLS
					# The DAL Species Mod
					is_archetype = DATEALIVE
					# Warship Girls R and MIST species
					is_archetype = WARSHIPGIRL
					is_archetype = SHENHAI
					is_archetype = UNITED_FLEET
					# Misc
					is_archetype = NANITES_CROP
					is_archetype = ASCENDED
					root = {
						OR = {
							# Vanilla
							AND = {
								merg_has_diag_rtp_mod = no
								merg_has_cloning_building = yes
							}
							AND = {
								merg_has_diag_rtp_mod = yes
								merg_has_cloning_building = yes
								any_owned_species = {
									is_same_species = prevprev
									NOT = { is_exact_same_species = prevprev }
								}
							}
							has_modifier = tiyanki_trophy
							owner = { has_modifier = syamelles_curse }
							AND = {
								has_building = building_posthumous_employment_center
								owner = { has_civic = civic_permanent_employment }
							}
							has_planet_flag = can_organic_assemble_flag #for mod compatibility
						}
						# ANZ Advanced Cloning
						NOT = { has_modifier = planet_cloning_limits }
					}
				}
			}
			# Special Colonies Overhaul
			NAND = {
				merg_has_special_colonies = yes
				root = { has_modifier = slave_colony }
				NOT = { has_citizenship_type = { type = citizenship_slavery country = root.owner } }
				not = {
					root = {
						owner = {
							or = {
								has_valid_civic = civic_slaver_guilds
								has_valid_civic = civic_indentured_assets
							}
						}
					}
				}
			}
		}
		# Azur lane Stellaris DLC
		AND = {
			species = { is_archetype = KANSEN }
			root = { check_modifier_value = { modifier = planet_pop_assembly_organic_add value > 0 } }
		}
		# Steven Universe Homeworld Gems
		has_trait = trait_geoloid
	}
	# Expanded Gestalts
	NAND = {
		root = { owner = { has_valid_civic = civic_machine_replicators } }
		has_trait = trait_machine_central
	}
	OR = {
		merg_has_voyage_eternity = no
		AND = {
			merg_has_voyage_eternity = yes
			KZ_VOY_trgr_plnt_CLONE = yes
		}
	}
	if = {
		limit = { 
			OR = {
				has_trait = trait_KZ_VOY_sub_terran_dragon
				has_trait = trait_KZ_VOY_sub_terran_dragon_SP
			}
		}
		KZ_VOY_trgr_plnt_CLONE = yes
	}
	# TimeMod
	is_tm_reassembler = no
	# Vanilla
	has_population_control = { country = root.owner type = no }
}

#This rule is a condition for bombarding planets
#Root = fleet, potential attacker
#From = planet, potential target
can_orbital_bombard = {
	exists = from.OWNER
	# Diagrapher's Factions and Ethics Mod
	hidden_trigger = {
		OR = {
			merg_has_diag_fact = no
			root.owner = {
				NAND = {
					is_ai = yes
					has_civic = civic_warrior_culture
					is_spiritualist = yes
					NOR = {
						has_valid_civic = civic_barbaric_despoilers
						has_ascension_perk = ap_nihilistic_acquisition
						is_homicidal = yes
					}
				}
			}	
			from.owner = { is_crisis_faction = yes }
		}
	}
	# Vanilla
	NOR = {
		any_controlled_ship = { is_ship_size = colossus }
		# Real Space New Frontiers
		from = { is_planet_class = pc_hollow }
		# Star Wars: Kuat Ancient Empire
		FROM.OWNER = { is_country_type = kuat_fire_base_hositle }
		FROM = { has_planet_flag = enable_kuat_shield }
		# ACOT
		AND = {
			OWNER = { is_progenitor_empires = no }
			FROM = {
				OR = {
					is_acot_pmc_vault = yes
					is_acot_awesome_planet_class = yes
					is_sots_soulsphere = yes
				}
			}
		}
	}
	OR = {
		AND = {
			root.CONTROLLER = {
				NOT = { has_communications = from.OWNER }
			}
			from.CONTROLLER = {
				NOT = { is_country_type = primitive }
			}
		}
		AND = {
			root.CONTROLLER = {
				NOR = {
					has_policy_flag = interference_not_allowed
					has_policy_flag = interference_subtle
				}
			}
			from.CONTROLLER = { is_country_type = primitive }
		}
		# Origins of Civilization
		AND = {
			ROOT.CONTROLLER = {
				NOT = { has_policy_flag = ai_full_rights }
			}
			FROM.CONTROLLER = { is_country_type = vbp_machine }
		}
		# THE ABYSS CONTRACT
		# ROOT = { has_component = AI_MATRICES }
		# Vanilla
		ROOT.CONTROLLER = { is_hostile = FROM.CONTROLLER }
		root.CONTROLLER = { is_at_war_with = from.CONTROLLER }
		from = {
			OR = {
				is_planet_class = pc_infested
				# LEX
				has_planet_flag = bwm_ancestor_world
			}
		}
		from.CONTROLLER = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				AND = {
					is_country_type = awakened_marauders
					root.CONTROLLER = { is_hostile = prev }
				}
				has_country_flag = can_be_bombarded
				# Ancient Empire
				ag_can_be_orbital_bombardment_country = yes
				# ACOT
				is_country_type = sbtg_stellarborne_empire
				is_country_type = void_lifeforms_1
				is_country_type = void_lifeforms_2
				# Cruel Conquerers
				is_cruel_abomination_crisis = yes
				# Star Wars: Kuat Ancient Empire
				kuat_can_be_orbital_bombarment_country = yes
				# Gigastructural Engineering & More
				is_country_type = katzenartig_imperium
				is_country_type = compound_empire
				# LEX
				is_country_type = mem_ancestor_guardian
				# Scripted Triggers Undercoat
				has_country_flag = stu_bombardable_by_everyone
				# Solar Storm
				is_country_type = abyssal_host_invaders_type
				# Shroud Rising
				is_country_type = shroud_horrors
				is_country_type = shroud_cult
			}
		}
		root.CONTROLLER = {
			OR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				# is_country_type = cybrex_empire - Ariphaos Patch - Should be governed by hostile rule
				is_country_type = dormant_marauders
				is_country_type = marauder_raiders
				is_country_type = ruined_marauders
				is_country_type = debt_collectors
				is_country_type = gray_goo
				is_country_type = vol
				AND = {
					is_country_type = awakened_marauders
					from.CONTROLLER = { is_hostile = prev }
				}
				is_khan_country_type = yes
				# Ancient Empire
				ag_can_do_orbital_bombardment_country = yes
				# ACOT
				is_progenitor_empires = yes
				is_country_type = void_lifeforms_1
				is_country_type = void_lifeforms_2
				# BlueArchive
				is_country_type = Aris_mid
				# Destiny: The Darkness Crisis
				is_country_type = darkness_country
				# Gigastructural Engineering & More
				is_country_type = katzenartig_imperium
				is_country_type = acot_crazed_stellarite
				is_country_type = compound_empire
				# History of the Lost Empire
				is_country_type = LsE_fallen_empire
				# LEX
				is_country_type = mem_ancestor_guardian
				# More Events Mod
				has_country_flag = mem_severance_harvesting_country
				# Scripted Triggers Undercoat
				has_country_flag = stu_can_bombard_everyone
				# Solar Storm
				is_country_type = abyssal_host_invaders_type
				# Shroud Rising
				is_country_type = shroud_horrors
				is_country_type = shroud_cult
				# Replicators
				is_country_type = replicators
				# Star Wars: Kuat Ancient Empire
				kuat_can_do_bombarment_country = yes
				# Star Wars: UnknownWorld Shipgirls Story
				is_country_type = afk_crisis_country
				# THE ABYSS CONTRACT
				is_country_type = TAC_debris_ship_country
				is_country_type = TAC_machine_crisis_country
				# The Empty Vagrant
				is_country_type = default_ev
				# Warship Girls R And MIST Species
				is_country_type = wg_crisis_country
			}
		}
		AND = {
			from.controller = {
				is_country_type = faction
				NOT = { is_same_value = root.CONTROLLER }
			}
			from.owner = {
				is_same_value = root.CONTROLLER
			}
		}
		# More Events Mod
		AND = {
			exists = root.OWNER
			exists = from.CONTROLLER
			root.CONTROLLER = {
				OR = {
					is_country_type = mem_surveyor_country_red
					is_country_type = mem_vazurans
				}
			}
			from.CONTROLLER = { merg_is_default_empire = yes }
		}
		# The Empty Vagrant
		root.CONTROLLER = { is_country_type = ev_leviathans_crisis }
		# Eldar Revisited
		AND = {
			root.CONTROLLER = { is_country_type = shroud_spirits }
			from = { has_planet_flag = is_shroud_attack_planet_target }
		}
	}
}

# can_planet_support_orbital_station
# Check if full sensor range in entire galaxy
# root: country
has_full_sensor_range = {
	OR = {
		has_megastructure = spy_orb_4
		has_megastructure = spy_orb_restored
		# ACOT
		has_megastructure = sofe_omega_spy_orb_center
		# Core Framework & Modmenu
		has_country_flag = z_fw_r_celestial_orrey_activited
		has_country_flag = z_fw_r_cheat_quantum_beacon_activited
		# Galaxius
		AND = {
			merg_has_galaxius = yes
			any_owned_planet = { has_deposit = d_ie_sa }
		}
		# BlueArchive species pack
		has_modifier = modifier_BA_Veritas_4
	}
	# Core Framework & Modmenu
	NOT = { has_country_flag = z_fw_misc_full_sensor_off }
}

# show_notification_for_ground_combat
# should_apply_neighbor_rival_modifier
# are_rebels_hostile
# should_colony_be_destroyed_on_pc_change
# is_extradimensional_portal
# is_extradimensional_anchor
# will_anger_fallen_empire
# can_have_robot_pops
# can_stop_purge_pop_manually
# can_purge_pop_manually

# fleet_uses_templates
# this = starbase, megastructure or planet
can_orbitable_repair_ships = {
	OR = {
		AND = {
			is_scope_type = starbase
			OR = {
				has_starbase_size >= starbase_starport
				has_starbase_size = juggernaut
				has_starbase_size = enclave_mercenary_station
				# ACOT
				is_acot_advanced_starbase = yes
				# ZOFE
				has_starbase_size = fe_goliath
				# AOT
				is_ascended_juggernaut = yes
				has_starbase_size = precursor_juggernaut
				# Assault Lily
				has_starbase_size = lily_super_college_ship
				has_starbase_size = lily_college_ship
			}
			fleet = { is_disabled = no }
		}
		AND = {
			is_scope_type = megastructure
			OR = {
				is_megastructure_type = mega_shipyard_1
				is_megastructure_type = mega_shipyard_2
				is_megastructure_type = mega_shipyard_3
				# ACOT/AOT
				is_megastructure_type = acot_precursor_colossus_base
				is_megastructure_type = acot_precursor_colossus_stage_two
				is_megastructure_type = acot_amerigo
				is_megastructure_type = acot_amerigo_ae
				is_megastructure_type = acot_amerigo_se
				is_megastructure_type = acot_amerigo_oe
				is_megastructure_type = acot_phanon_master_reactor_sphere
				# Gigastructural Engineering & More
				is_megastructure_type = the_vat_1
				is_megastructure_type = the_vat_2
				is_megastructure_type = the_vat_3
				is_megastructure_type = the_vat_4
			}
		}
	}
}

# this = ship
# root = country that kills ship
can_spawn_debris = {
	NOT = { has_global_flag = z_fw_flg_glbl_tech_overwhelm }
	# Core Framework & Modmenu
	root = { merg_is_default_empire = yes }
	exists = owner
	owner = {
		NOR = {
			has_ascension_perk = ap_enigmatic_engineering
			# Warship Girls R And MIST Species
			is_country_type = wg_crisis_country
			is_country_type = wg_Khan_country_type
			is_country_type = wg_Khan_country_type_auto_delete
			# Star Wars: UnknownWorld Shipgirls Story
			is_country_type = afk_crisis_country
			# History of the Lost Empire
			is_country_type = LsE_fallen_empire
			# The Empty Vagrant
			is_country_type = default_ev
			# Twinks Atlantean
			has_valid_civic = civic_tw_atlantis
			# Expanded Gestalts
			has_valid_civic = civic_hive_strong_connection
			# Twinks Eternal Empire
			has_government = gov_eternal_continuum
		}
	}
}

# this = system
# root = country
# Determines if AI-controlled empires should restrict (and thus avoid) a system
# Used by regular empires, fallen empires & crises
ai_should_restrict_system = {
	OR = {
		AND = {
			root = {
				OR = {
					merg_is_fallen_empire = yes
					is_country_type = caravaneer_fleet
					# Twinks Eternal Empire
					is_country_type = eternal_empire
				}
			}
			exists = owner
			owner = {
				OR = {
					is_country_type = awakened_marauders
					# Ariphaos Patch
					is_country_type = dormant_marauders
					# The Empty Vagrant
					is_country_type = awakened_marauders_ev
				}
			}
		}
		AND = {
			root = {
				OR = {
					is_country_type = caravaneer_fleet
					is_country_type = awakened_marauders
					# Ariphaos Patch
					is_country_type = marauder_raiders
					# The Empty Vagrant
					is_country_type = awakened_marauders_ev
				}
			}
			exists = owner
			owner = { merg_is_fallen_empire = yes }
		}
		AND = {
			root = {
				OR = {
					merg_is_fallen_empire = yes
					is_country_type = awakened_marauders
					is_country_type = marauder_raiders
					is_country_type = caravaneer_fleet
					# The Empty Vagrant
					is_country_type = awakened_marauders_ev
				}
			}
			has_star_flag = guardian
			any_fleet_in_system = {
				exists = owner
				owner = { is_guardian_country = yes }
			}
		}
		AND = {
			root = {
				OR = {
					is_crisis_faction = yes
					merg_is_awakened_fe = yes
				}
			}
			has_star_flag = guardian
			any_fleet_in_system = {
				exists = owner
				owner = { is_country_type = guardian_fortress }
			}
		}
		# SirBlackAxe's Unofficial Bug Patch
		AND = {
			root = {
				OR = {
					merg_is_fallen_empire = yes
					is_country_type = marauder_raiders
					is_country_type = caravaneer_fleet
				}
			}
			OR = {
				has_star_flag = lgate
				has_star_flag = lcluster
			}
			has_global_flag = gray_goo_crisis_active
		}
		AND = {
			root = {
				merg_is_default_empire = yes
				fleet_power < 30000
			}
			OR = {
				has_star_flag = lgate
				has_star_flag = lcluster
			}
			has_global_flag = gray_goo_crisis_active
		}
		# Gigastructural Engineering & More
		giga_ai_should_restrict_system = yes
		# Spaceborne Civs Expanded
		AND = {
			root = {
				OR = {
					merg_is_fallen_empire = yes
					is_country_type = awakened_marauders
					is_country_type = marauder_raiders
					is_country_type = caravaneer_fleet
					# The Empty Vagrant
					is_country_type = awakened_marauders_ev
				}
			}
			OR = {
				has_star_flag = crystal_home_system
				has_star_flag = amoeba_home_system
				has_star_flag = drone_home_system
			}
			any_fleet_in_system = {
				exists = owner
				owner = {
					OR = {
						is_crystal_country_type = yes
						is_amoeba_country_type = yes
						is_drone_country_type = yes
					}
				}
			}
		}
		# ACOT
		AND = {
			merg_has_acot = yes
			root = { merg_is_default_empire = yes }
			exists = owner
			owner = { is_progenitor_empires = yes }
		}
		AND = {
			merg_has_sofe = yes
			root = { merg_is_fallen_empire = yes }
			any_ship_in_system = {
				exists = owner
				owner = {
					OR = {
						is_guardian_country = yes
						is_country_type = sbtg_sentinel_active
					}
				}
			}
		}
		# A Deadly Tempest
		AND = {
			merg_has_deadly_tempest = yes
			root = {
				OR = {
					is_crisis_faction = yes
					has_country_flag = pike_assisted_ai
				}
			}
			has_star_flag = pike_star_flag_banned_system
		}
		# Ancient Empire
		AND = {
			merg_has_ancient_empire = yes
			root = {
				OR = {
					merg_is_fallen_empire = yes
					merg_is_awakened_fe = yes
					is_country_type = awakened_marauders
					is_country_type = ag_ancient_psi_guardian
					# The Empty Vagrant
					is_country_type = awakened_marauders_ev
				}
			}
			OR = {
				has_star_flag = ag_zeta_crisis_psionic_storm_system
				has_star_flag = ag_zeta_crisis_psionic_singularity_system
			}
		}
		# Harvest Engine Crisis
		AND = {
			root = { is_harvester_country = yes }
			OR = {
				any_country_neighbor_to_system  = { merg_is_fallen_empire = yes }
				AND = {
					has_star_flag = guardian
					any_fleet_in_system = {
						exists = owner
						owner = {
							OR = {
								is_country_type = guardian_fortress
								is_guardian_country = yes
							}
						}
					}
				}
				AND = {
					exists = owner
					owner = { merg_is_fallen_empire = yes }
				}
			}
		}
		# Scripted Triggers Undercoat
		has_star_flag = stu_ai_restrict_system@root
	}
}

# can_subjugate_empires
# can_leader_get_council_trait
# can_leader_get_normal_trait
# can_leader_get_subclass_trait
# can_leader_get_destiny_trait
# has_extra_council_position

# this = Fleet
can_jump_drive = {
	# Ancient Empire
	custom_tooltip = {
		fail_text = ag_jump_drive_unable_system_tooltip
		NOT = { solar_system = { has_star_flag = ag_no_jump_out_system } }
	}
	# Assault Lily
	custom_tooltip = {
		fail_text = AL_cannot_start_jump
		OR = {
			merg_has_assault_lily = no
			AND = {
				merg_has_assault_lily = yes
				exists = solar_system
				NOT = {
					solar_system = {
						exists = starbase
						starbase = {
							has_starbase_building = AL_AntiFTL
							owner = { is_hostile = prevprevprev.owner }
						}
					}
				}
			}
		}
	}
	# Some Events of Outside Cluster
	if = {
		limit = {
			merg_has_seooc = yes
			exists = solar_system
			solar_system = { has_star_flag = nep_Scrus_cluster }
		}
		custom_tooltip = {
			text = "CAN_NOT_JUMP_WHEN_IN_SCRUS"
			always = no
		}
	}
	else_if = {
		limit = {
			merg_has_seooc = yes
			exists = solar_system
			solar_system = {
				OR = {
					has_star_flag = nep_whitegoo_1
					has_star_flag = nep_whitegoo_2
					has_star_flag = nep_whitegoo_3
				}
			}
			owner = { NOT = { has_technology = tech_nep_whitegoo_3_2 } }
		}
		custom_tooltip = {
			text = "CAN_NOT_JUMP_IN_WHITEGOO"
			always = no
		}
	}
	else = { always = yes }
}

# this = country
can_spawn_occupation_armies = {
	OR = {
		is_country_type = default
		merg_is_fallen_empire = yes
		merg_is_awakened_fe = yes
		# ACOT
		is_progenitor_empires = yes
		is_country_type = sbtg_light_seeker
		# ZOFE
		is_zofe_oe = yes
	}
}

# this = system
# root = country
system_blocks_sensors = {
	# Vanilla, includes code from Ariphaos' Sensor Expansion
	OR = {
		AND = { # Nebulae
			OR = {
				is_inside_nebula = yes
				has_modifier = space_storm
				has_modifier = zroni_storm
				merg_is_nebulae = yes
				# Wild Space
				is_ws_system = yes
				# Protoplanetary Disks
				is_star_class = sc_protostar
				is_star_class = sc_tt_red
				is_star_class = sc_tt_orange
				is_star_class = sc_tt_white
				is_star_class = sc_ae
			}
			ROOT = {
				NOR = {
					# Ariphaos Sensor Expansion
					has_technology = tech_ariphaos_sensors_nebula
					# Wild Space
					has_technology = tech_WS_sensors_nebula_1
				}
			}
		}
		AND = { # Clusters, Sealed systems
			OR = {
				has_star_flag = lcluster
				has_star_flag = sealed_system
				# Ariphaos Sensor Expansion
				has_star_flag = surveillance_supercomputer_system
			}
			# Making sure modded hidden systems will work as intended if Sensor Expansion is installed
			NOR = {
				# Warship Girls R And MIST Species
				has_star_flag = wg_sealed_system
				has_star_flag = wg_psionic_systems
				# Ancient Empire
				has_star_flag = ag_no_sensor_system
				# Solar Storm
				has_star_flag = ss_abyssal_shockwave
			}
			ROOT = { NOT = { has_technology = tech_ariphaos_sensors_sealed } }
		}
		# Warship Girls R And MIST Species
		has_star_flag = wg_sealed_system
		has_star_flag = wg_psionic_systems
		# Ancient Empire
		has_star_flag = ag_no_sensor_system
		# Solar Storm
		has_star_flag = ss_abyssal_shockwave
		# Sensor Expansion
		AND = { # Neutron stars
			OR = {
				merg_has_sensor_expansion = yes
				has_aso_space_exploration = yes
			}
			merg_is_neutron_star_class = yes
			ROOT = { NOT = { has_technology = tech_sensors_4 } }
		}
		AND = { # Pulsars
			OR = {
				merg_has_sensor_expansion = yes
				has_aso_space_exploration = yes
			}
			merg_is_pulsar_star_class = yes
			ROOT = { NOT = { has_technology = tech_ariphaos_sensors_pulsar } }
		}
		AND = { # Wormholes
			OR = {
				merg_has_sensor_expansion = yes
				merg_has_wild_space = yes
				has_aso_space_exploration = yes
			}
			has_natural_wormhole = yes
			ROOT = {
				NOR = {
					has_technology = tech_ariphaos_sensors_wormhole
					has_technology = tech_WS_sensors_wormhole
				}
			}
		}
		AND = { # Black and White Holes
			OR = {
				merg_has_sensor_expansion = yes
				has_aso_space_exploration = yes
			}
			merg_is_hole_star_class = yes
			ROOT = { NOT = { has_technology = tech_ariphaos_sensors_black_hole } }
		}
		AND = { # Jammer
			merg_has_sensor_expansion = yes
			exists = starbase
			starbase = { has_starbase_building = ariphaos_sensors_jammer_starbase }
			ROOT = { NOT = { has_technology = tech_ariphaos_sensors_jammed } }
		}
		# Assault Lily
		AND = {
			merg_has_assault_lily = yes
			exists = sector
			sector.sector_capital = {
				exists = leader
				leader = {
					OR = {
						has_trait = leader_trait_AL_Rareskill_governor_Uberzain
						has_trait = leader_trait_AL_Rareskill_governor_UberzainS
						has_trait = leader_trait_AL_Rareskill_governor_UberzainEX
					}
				}
			}
		}
		# Destiny: The Darkness Crisis
		has_star_flag = "black_fleet_in_system"
	}
}

# Root = country attempting to target system for movement
# This = system being targeted
can_enter_system_by_jump = {
	custom_tooltip = {
		fail_text = cannot_jump_to_system
		OR = {
			root = {
				OR = {
					# Core Framework & Modmenu
					has_country_flag = z_fw_r_celestial_orrey_activited
					has_country_flag = z_fw_r_cheat_quantum_beacon_activited
					# THE ABYSS CONTRACT
					has_country_flag = TAC_traveler
				}
			}
			AND = {
				# Sealed system
				OR = {
					NOT = { has_star_flag = sealed_system }
					AND = {
						root = { has_country_flag = entered_sealed_system }
						has_star_flag = sealed_system
					}
				}
				OR = {
					# Clusters and forbidden systems
					NOR = {
						has_star_flag = lcluster
						# Ancient Empire
						has_star_flag = ag_no_jump_in_system
						# ACOT
						has_star_flag = outercluster
						# Warship Girls R And MIST Species
						has_star_flag = wg_sealed_system
						has_star_flag = wg_psionic_systems
						# SW:Kuat Ancient Empire
						kuat_is_kuat_system = yes
						has_star_flag = ag_kae_e_area_system
						AND = {
							has_global_flag = starkillerbase_not_passed
							has_star_flag = starkiller_system	
						}
						# Gigastructural Engineering and More
						has_star_flag = ehof_compound_system
						has_star_flag = giga_core_03
						cohesive_system = yes
						urmazin_system = yes
						everchanging_system = yes
						katzen_jump_blocked_system = yes
						has_star_flag = maginot_anti_jump_star
						has_star_flag = siegfried_anti_jump_star
						# Some Events of Outside Cluster
						has_star_flag = nep_Krahen_cluster
						has_star_flag = nep_Scrus_cluster
						AND = {
							has_global_flag = nep_not_pass_Aemethms
							OR = {
								has_star_flag = nep_dragon_system
								has_star_flag = nep_heptagram_cluster
							}
						}
						has_star_flag = nep_arena
						# THE ABYSS CONTRACT
						has_star_flag = TAC_ag_signal_system
						# Assault Lily
						has_star_flag = al_huge_home_bed
						# BlueArchive
						has_star_flag = BA_FE_SYS
						# Origin Beings
						has_star_flag = darhmod_seres_home_system
						has_star_flag = sealed_seres_system
						has_star_flag = seres_lcluster_spawned
						has_star_flag = ftl_spawned
						has_star_flag = su_lu_station_system
						has_star_flag = su_spawned
						has_star_flag = god_route_seres_star
						AND = {
							merg_has_origin_beings = yes
							OR = {
								has_star_flag = vultaumar
								has_star_flag = yuhtaan
								has_star_flag = fen_habbanis
								has_star_flag = irass
								has_star_flag = cybrex
								has_star_flag = last_baol_system
								has_star_flag = Zrocursor
							}
						}	
					}
					# Gigastructural Engineering and More
					# This is gonna be a bit annoying, BUT it needs to be done for eager explorers
					AND = {
						cohesive_system = yes
						ROOT = { is_eager_explorer_empire = yes }
						has_star_flag = ehof_system_created_by_@root
					}
				}
			}
			# Reworked Advanced Ascension
			root = { has_country_flag = AAR_flg_cntr_JUMP_webway_TGT }
		}
	}
	# The Storm Cluster
	custom_tooltip = {
		fail_text = cannot_jump_to_scluster_system_during_storm
		NAND = {
			has_global_flag = ongoing_space_storm
			OR = {
				has_star_flag = scluster
				has_star_flag = scluster_entrance
			}
		}
	}
}

# This = pop
can_resettle_pop = {
	# Ethical Gestalts
	hidden_trigger = {	# not sure if ai will know not to move pops to planets where they'll immediately start declining otherwise
		OR = {
			owner = { is_ai = no }
			NOT = { merg_has_hive_trait = yes }
			owner = { is_hive_empire = yes }
		}
	}
	# Self-modified Pops won't leave
	custom_tooltip = {
		fail_text = "self_modified_refuse"
		NOT = { has_trait = trait_self_modified }
	}
	custom_tooltip = {
		fail_text = "origin_egalitarian_refuse"
		NAND = {
			pop_has_ethic = ethic_egalitarian
			is_enslaved = no
			planet = { has_modifier = paragon_origin_reformists }
		}
	}
	# Expanded Traits, Civics, Pops, and More
	custom_tooltip = {
		fail_text = "caretaker_refuse"
		NOT = { is_exp_tree_caretaker = yes }
	}
	# V_Traits
	custom_tooltip = {
		fail_text = "is_v_mobile_cant_be_resetttled"
		is_v_mobile = yes
	}
	#Done as an IF/ELSE so the tooltip isn't hideous and unreadable
	# Diagraphers Trait Mod
	if = {
		limit = {
			OR = {
				is_living_architecture = yes
				is_rooted_adult = yes
			}
		}
		always = no
	}
	# Vanilla
	else_if = {
		limit = { is_shackled_robot = yes }
		always = yes
	}
	else_if = {
		limit = { planet = { is_doomsday_planet = yes } }
		always = yes
	}
	else_if = {
		limit = { planet = { has_modifier = planet_culture_shock } }
		OR = {
			is_same_species = planet.owner
			planet = { NOT = { has_modifier = planet_culture_shock } }
		}
	}
	else_if = {
		limit = { owner = { is_gestalt = yes } }
		always = yes
	}
	# Extra Origins
	else_if = {
		limit = {
			is_symbiote = yes
			planet_has_symbiotes = no
		}
		always = yes
	}
	else_if = {
		limit = {
			is_being_purged = no
			planet = {
				AND = {
					any_owned_pop = {
						is_symbiote_of_prevprev = yes
						is_being_purged = no
						planet = {
							any_owned_pop = {
								is_same_species = prevprev
								NOT = { is_same_value = prevprev }
							}
						}
					}
					NOT = {
						any_owned_pop = {
							is_same_species = prevprev
							NOT = { is_same_value = prevprev }
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "would_cause_symbiote_decline"
			always = no
		}
	}
	else_if = {
		limit = {
			is_symbiote = yes
			owner = {
				any_owned_pop = {
					is_symbiote_of_prevprev = yes
					planet_has_symbiotes = no
				}
			}
		}
		always = yes
	}
	# Ethical Gestalts
	else_if = {
		limit = {
			OR = {
				AND = {
					has_trait = trait_hive_mind
					owner = { is_hive_empire = yes }
				}
				has_citizenship_type = { type = citizenship_full_machine }
			}
		}
		always = yes
	}
	# Vanilla
	else = {
		custom_tooltip = {
			fail_text = RESETTLEMENT_POLICY_FAIL
			owner = { has_policy_flag = resettlement_allowed }
		}
	}
}

can_country_resettle = {
	OR = {
		has_policy_flag = resettlement_allowed
		is_gestalt = yes
		custom_tooltip = {
			text = owns_non_sapient_robots
			country_has_shackled_robots = yes
		}
		hidden_trigger = {
			#don't need to show this as tooltip only shown when all game rule fails, and this is a special case
			any_owned_planet = { is_doomsday_planet = yes }
		}
		# Extra Origins
		hidden_trigger = {
			any_owned_pop = {
				is_symbiote = yes
				is_being_purged = no
				planet_has_symbiotes = no
			}
		}
	}
}

# This = Planet
can_resettle_planet = {
	owner = {
		OR = {
			has_policy_flag = resettlement_allowed
			is_gestalt = yes
			country_has_shackled_robots = yes
			any_owned_planet = { is_doomsday_planet = yes }
		}
	}
	is_controlled_by = owner
	has_ground_combat = no
	has_orbital_bombardment = no
	custom_tooltip = {
		text = "RESETTLE_PLANET_UNDER_COLONIZATION"
		exists = this
		is_under_colonization = no
	}
}

# can_resettle_planet_no_owner_check
# should_spawn_deposits
# is_new_colony
# This = pop
pop_generates_crime = {
	is_sapient = yes
	is_non_sapient_robot = no
	is_being_assimilated = no
	NOR = {
		# Plentiful Perks
		has_trait = trait_plentiful_traditions_pt_cocoon
		# Warship Girls R And MIST Species
		AND = {
			merg_has_warship_girls = yes
			OR = {
				has_wg_traits = yes
				has_trait = trait_intelligent_galo
				species = {
					OR = {
						is_archetype = UNITED_FLEET
						is_archetype = NANITES_CROP
					}
				}
			}
		}
		# Star Wars: UnknownWorld Shipgirls Story
		has_trait = swg_trait_starshipgirls
		# Kancolle
		has_trait = kancolle_trait_kanmusu
		has_trait = kancolle_trait_kanmusu1
		has_trait = kancolle_trait_kanmusu2
		# AshArms Aquarius history
		has_trait = adf_trait_dolls
		# V_TRAITS
		has_v_no_crime = no
	}
}

# can_pops_grow_on_planet
# can_pops_assemble_on_planet
# can_pops_decline_on_planet
# can_force_grow_on_planet
# can_force_decline_on_planet
# can_force_decline_species

## If this returns true, the species will be set to decline even if it is not being purged
# This = species
# From = planet
## Note: success text tooltips are shown in alert_pops_declining alert.
should_force_decline_species = {
	OR = {
		# Infertile Clone Army pops should decline if in Country that can't have Vats, or there is a Vat shortage.
		custom_tooltip = {
			success_text = CLONE_ARMY_FORCE_DECLINE
			OR = {
				has_trait = trait_clone_soldier_infertile
				has_trait = trait_clone_soldier_infertile_full_potential
			}
			from = {
				OR = {
					# Check if country is unable to build Vats for this species.
					AND = {
						exists = owner
						owner = {
							OR = {
								NOR = {	# Can't have Vats.
									has_origin = origin_clone_army
									# Decision Origins
									has_country_flag = decision_clone_army
									# Galactic Imperium Origins
									has_origin = origin_clone_guard
								}
								has_country_flag = clone_army_fertility_unlocked			# Can't have Vats anymore.
								NOT = { owner_main_species = { is_same_species = root } }	# Our Vats can't build this species.
							}
						}
					}
					# Vats check out, but are there more pops than Vats support?
					check_variable = { which = clone_pops_missing value < 0 }
				}
			}
		}
		# Diagraphers Trait Mod
		custom_tooltip = {
			success_text = sterile_force_decline
			diag_is_sterile = yes
			from.owner = { has_artificial_wombs = no }
		}
		custom_tooltip = {
			success_text = needs_exotic_gases
			has_exotic_gas_dependency = yes
			from.owner = { has_deficit = exotic_gases }
		}
		custom_tooltip = {
			success_text = delicate_enslaved
			diag_is_delicate = yes
			has_citizenship_type = { type = citizenship_slavery country = from.owner }
		}
		# Expanded Traits, Civics, Pops, and More
		# Caretakers die without the Tree of Life
		custom_tooltip = {
			success_text = TREEFOLK_FORCE_DECLINE
			is_exp_tree_caretaker = yes
			from = {
				NOR = {
					has_deposit = d_tree_of_life_colony
					has_deposit = d_tree_of_life_home
				}
			}
		}
		# Planetary Diversity
		custom_tooltip = {
			success_text = UNIT04CHILDREN_FORCE_DECLINE
			is_organic_fourschildren = yes
			from = {
				OR = {
					AND = {
						exists = owner
						owner = {
							NOR = {
								has_origin = origin_techno_world
								owner_main_species = { is_same_species = root 
								has_technology = tech_synthetic_workers
								is_machine_empire = yes
							}
						}
					}
					check_variable = { which = techno_pops_missing value < 0 }
				}
			}
		}
		# Reproductive Technology and Politics
		custom_tooltip = {
			success_text = modification_assembly_force_decline
			merg_has_diag_rtp_mod = yes
			is_robotic_species = no
			from = {
				merg_has_cloning_building = yes
				assembling_species = {
					is_same_species = prevprev
					NOT = { is_exact_same_species = prevprev }					
				}
			}
		}
		# Extra Origins
		custom_tooltip = {
			success_text = SYMBIOTE_FORCE_DECLINE
			AND = {
				is_symbiote = yes
				from = { NOT = { any_owned_pop = { is_symbiote_of_prevprev = yes } } }
				from = { any_owned_pop = { is_same_species = prevprev } }
			}
		}
		# Ethical Gestalts
		# lonely hive mind pops kill themselves
		custom_tooltip = {
			success_text = lonely_hive_mind_pops_kill_themselves_citizenship
			has_trait = trait_hive_mind
			exists = from
			NOR = {
				AND = {
					exists = from.owner
					has_citizenship_type = { type = citizenship_full country = from.owner }
				}
				AND = {
					exists = from.branch_office_owner
					has_citizenship_type = { type = citizenship_full country = from.branch_office_owner }
				}
				NOT = { exists = from.owner }
			}
		}
		# Wandering Witch: Voyagers
		custom_tooltip = {
			success_text = OBJ_MASTER_FORCE_DECLINE
			has_trait = trait_reanimated_materials
			AND = {
				from = {
					exists = owner
					owner = {
						NOT = { has_country_flag = syn_witch }
					}
				}	
			}
			NOR = {
				has_trait = trait_psyborg_efficient_processors
				has_trait = trait_cro_implants_psionics
				has_trait = trait_psionic
			}
			from = {
				OR = {
					# Check if country is unable to build Vats for this species.
					AND = {
						exists = owner
						owner = {
							OR = {
								NOT = { has_origin = origin_obj_master }					# Can't have Obj-avatars.
								has_country_flag = synthetic_empire			# Can't have Vats anymore.
							}
						}
					}
					# Vats check out, but are there more pops than Vats support?
					num_assigned_jobs = { job = matter_reanimator value = 0 }
				}
			}
		}
	}
}

# This = country
can_build_branch_offices = {
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_MEGACORP
		is_exile_country = no
		OR = {
			is_megacorp = yes
			# Arknights Near Future
			has_valid_civic = civic_business_union
			# Asssault Lily
			has_authority = auth_AL_democratic
			has_authority = auth_AL_arsenal
			# Azur Lane Stellaris DLC
			has_authority = auth_azur_lane_0
			has_authority = auth_azur_lane_1
			has_authority = auth_azur_lane_2
			has_authority = auth_azur_lane_K
			# BlueArchive species pack
			has_authority = auth_kivotos
			# EDA
			has_authority = auth_traveler
			# Ethical Gestalts
			has_valid_civic = civic_hive_guest
			has_policy_flag = infiltration_allowed
			# Forgotten Queens
			has_valid_civic = civic_mutualistic_behavior
			has_valid_civic = civic_machine_trading
			# Girls Frontline
			has_civic = civic_gf_GK
			# Human Fallen Empires
			is_country_type = hfe_pirate
			# Kancolle
			AND = {
				has_authority = auth_kancolle
				OR = { has_tradition = tr_akashi_shop_open_the_kanmusu_company }
			}
			# More Corporate Authorities
			has_valid_civic = civic_galactic_sovereign_megacorp
			# Rogue Maid
			Maid_trigger_0_can_build_branch_offices = yes
			# Voyage to Eternity
			KZ_VOY_can_build_branch_offices = yes
			# Warship Girls R And MIST Species
			AND = {
				has_authority = auth_shenhai
				OR = {
					has_country_flag = pantsu_shop_origin
					has_valid_civic = civic_sh_criminal_syndicate
				}
			}
		}
	}
}

# This = country
can_support_branch_offices = {
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_FALLEN_EMPIRES
		NOR = {
			merg_is_fallen_empire = yes
			merg_is_awakened_fe = yes
			# Assault Lily
			is_country_type = al_fallen_empire
			is_country_type = al_fallen_empire_no_ai
			# Kancolle
			has_authority = auth_kc_fe
			# Warship Girls R And MIST Species
			has_authority = auth_azur_dictatorial
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_ON_MEGACORP_PLANET
		OR = {
			NOR = {
				AND = {
					merg_has_more_authorities = no
					is_megacorp = yes
				}
				# Azur Lane Stellaris DLC
				has_authority = auth_azur_lane_1
				# Arknights Near Future
				has_valid_civic = civic_business_union
				# BlueArchive species pack
				has_authority = auth_kivotos
				# Girls Frontline
				has_civic = civic_gf_GK
				# More Corporate Authorities
				has_valid_civic = civic_galactic_sovereign_megacorp
				# Warship Girls R And MIST Species
				AND = {
					has_authority = auth_shenhai
					OR = {
						has_country_flag = pantsu_shop_origin
						has_valid_civic = civic_sh_criminal_syndicate
					}
				}
			}
			# Rogue Maid
			Maid_trigger_1_can_support_branch_offices = yes
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_REGULAR_EMPIRE
		NOR = {
			is_gestalt = yes
			# Merger of Rules
			is_country_type = gate_builders
			is_country_type = awakened_marauders
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_ADVANCED_PRE_FTL
		if = {
			limit = {
				is_primitive = yes
				is_gestalt = no
			}
			OR = {
				has_pre_ftl_age = atomic_age
				has_pre_ftl_age = early_space_age
			}
		}
	}
	# More Authorities
	# As some mods allow megacorps to build branch offices in other megacorps, we need to check that we're not building one on our own empire.
	custom_tooltip = {
		fail_text = ACTION_RECIPIENT_NOT_YOUR_CORP
		OR = {
			merg_has_more_authorities = no
			AND = {
				merg_has_more_authorities = yes
				NAND = {
					is_megacorp = yes
					is_subject = no
				}
			}
		}
	}
	# ZOFE Megacorp
	custom_tooltip = {
		fail_text = COUNTRY_IS_ASCENDED_EMPIRE
		OR = {
			has_zofe_mc = no
			AND = {
				has_zofe_mc = yes
				NOT = { is_country_type = ascended_empire }
			}
		}
	}
}

# This = planet
# Root = country
can_build_branch_office_on_planet = {
	custom_tooltip = {
		fail_text = requires_recipient_not_fanatic_purifiers
		exists = owner
		owner = {
			OR = {
				is_same_species = root
				NOT = { has_valid_civic = civic_fanatic_purifiers }
				# Ethical Gestalts
				has_policy_flag = infiltration_allowed
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NO_OBSERVATION_OUTPOST
		if = {
			limit = {
				root = {
					OR = {
						is_criminal_syndicate = yes
						AND = {
							is_zofe_country = yes
							has_civic = civic_criminal_heritage
							has_civic = mc_civic_criminal_dominion
						}
					}
				}
				owner = { is_primitive = yes }
			}
			has_observation_outpost = yes
			observation_outpost_owner = { is_same_value = root }
		}
	}
	# Civic: Organic Zealots 
	custom_tooltip = {
		fail_text = requires_recipient_not_organic_zealots
		OR = {
			merg_has_organic_zealots = no
			AND = {
				exists = owner
				owner = {
					OR = {
						NOT = { is_organic_zealots = no }
						root = { is_robot_empire = no }
					}
				}
			}
		}
	}
	# Vanilla
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_COMMERCIAL_PACT
		exists = owner
		OR = {
			root = {
				OR = {
					is_criminal_syndicate = yes
					# Assault Lily
					has_authority = auth_AL_democratic
					has_authority = auth_AL_arsenal
					# Azur Lane Stellaris DLC
					has_authority = auth_azur_lane_1
					# BlueArchive species pack
					has_ascension_perk = ap_BA_new_frontier
					# Human Fallen Empires
					AND = {
						is_country_type = hfe_pirate
						is_forced_friendly = prev.owner
					}
					# Kancolle
					has_authority = auth_kancolle
					# Rogue Maid
					Maid_trigger_0_can_build_branch_offices = yes
					# Voyage to Eternity
					KZ_VOY_can_build_branch_offices = yes
					# Warship Girls R And MIST Species
					has_civic = civic_sh_criminal_syndicate
					# ZOFE Megacorp
					AND = {
						is_zofe_country = yes
						is_megacorp = yes
					}
				}
			}
			owner = { has_commercial_pact = root }
			owner = { is_in_federation_with = root }
			AND = {
				has_observation_outpost = yes
				observation_outpost = {
					has_modifier = preftl_action_trade_pact
				}
			}
			# Expanded Traits, Civics, Pops, and More
			AND = {
				merg_has_expanded_pops = yes
				owner = { has_country_flag = cb_markets_opened@root }
			}
			# Warship Girls R And MIST Species
			AND = {
				owner = { has_country_flag = lose_wg_shop_war }
				root = { has_country_flag = pantsu_shop_origin }
			}
			# Azur Lane Stellaris DLC
			owner = {
				AND = {
					OR = {
						has_authority = auth_azur_lane_2
						has_authority = auth_azur_lane_0
						has_authority = auth_azur_lane_K
					}
					is_same_value = root
				}
			}
			# Vanilla
			# allow branch offices in subsidiaries and vice versa (and fellow subjects)
			root = {
				is_subject = yes
				is_megacorp = yes
				overlord = {
					OR = {
						is_same_value = prevprev.owner
						is_same_value = prevprev.owner.overlord
					}
				}
			}
			owner = {
				is_subject = yes
				overlord = {
					OR = {
						is_same_value = root
						is_same_value = root.overlord
					}
					is_megacorp = yes
				}
			}
			AND = {
				root = { has_valid_civic = civic_galactic_sovereign_megacorp }
				owner = { is_galactic_community_member = yes }
			}
			AND = {
				root = { has_modifier = imperial_charter }
				owner = { is_galactic_community_member = yes }
			}
			# Vassals Expanded and Reworked
			# allow branch offices in all subjects and vice versa
			AND = {
				merg_has_vassals_expanded = yes
				OR = {
					root = {
						is_subject = yes
						overlord = {
							OR = {
								is_same_value = prevprev.owner
								is_same_value = prevprev.owner.overlord
							}
						}
					}
					owner = {
						is_subject = yes
						overlord = { is_same_value = root }
					}
				}
			}
			# Unique Ascension Perks
			AND = {
				owner = { merg_is_default_empire = yes }
				root = { has_ascension_perk = ap_megacorp }
			}
			AND = {
				owner = { is_gestalt = yes }
				root = { has_ascension_perk = ap_megacorp }
			}
			# EDA
			owner = {
				AND = {
					OR = { has_authority = auth_traveler }
					is_same_value = root
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_MEGACORP_OVERLORD
		exists = owner
		# failure message for having a corporate overlord
		if = {
			limit = {
				OR = {
					# Not valid if you aren't a subject.
					root = { is_subject = no }
					# Or if your overlord isn't a megacorp.
					root = {
						is_subject = yes
						overlord = { is_megacorp = no }
					}
				}
			}
			always = yes
		}
		else = {
			AND = {
				root = {
					is_subject = yes
					overlord = { is_megacorp = yes }
				}
				owner = {
					OR = {
						is_subject = no
						AND = {
							is_subject = yes
							overlord = { NOT = { is_same_value = root.overlord } }
						}
					}
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_CRIMINAL_HERITAGE_HAS_TRUCE
		exists = owner
		OR = {
			root = {
				OR = {
					is_criminal_syndicate = no
					# Assault Lily
					has_authority = auth_AL_democratic
					has_authority = auth_AL_arsenal
				}
			}
			owner = {
				NOR = {
					has_truce = root
					is_at_war_with = root
				}
			}
		}
		# Azur Lane Stellaris DLC
		NOT = { root = { has_authority = auth_azur_lane_1 } }
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_CRIMINAL_COOLDOWN
		exists = owner
		OR = {
			root = {
				OR = {
					is_criminal_syndicate = no
					# Assault Lily
					has_authority = auth_AL_democratic
					has_authority = auth_AL_arsenal
				}
			}
			AND = {
				root = { is_criminal_syndicate = yes }
				NOT = { has_planet_flag = criminal_branch_closed_cooldown_planet@root }
			}
		}
		# Azur Lane Stellaris DLC
		NOT = { root = { has_authority = auth_azur_lane_1 } }
	}
	# ZOFE Megacorp
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_ON_MEGACORP_PLANET
		OR = {
			has_zofe_mc = no
			owner = { is_megacorp = no }
			root = { is_zofe_country = yes }
		}
	}
	custom_tooltip = {
		fail_text = COUNTRY_CLOSED_BORDERS
		OR = {
			has_zofe_mc = no
			NOT = { owner = { has_closed_borders = root } }
		}
	}
	# Warship Girls R And MIST Species
	custom_tooltip = {
		fail_text = requires_recipient_not_warshipgirls
		exists = owner
		owner = {
			NOR = {
				has_authority = auth_warshipgirls
				AND = {
					has_authority = auth_shenhai
					OR = {
						has_country_flag = pantsu_shop_origin
						has_valid_civic = civic_sh_criminal_syndicate
					}
				}
			}
		}
	}
	# More Corportate Authorities
	# principled rogues won't build branch offices in countries they like
	hidden_trigger = {
		OR = {
			NOT = { root = { has_mca_personality_principled_rogues = yes is_ai = yes } }
			owner = { their_opinion = { who = root value < 0 } }
			owner = {
				their_opinion = { who = root value < 20 }
				NOT = { has_opinion_modifier = { who = root modifier = opinion_new_contact is_reverse = yes } }
			}
		}
	}
	# Ethical Gestalts
	if = {
		limit = {
			root = {
				has_valid_civic = civic_hive_guest
				NOT = { has_policy_flag = infiltration_allowed }
			}
		}
		custom_tooltip = {
			fail_text = BRANCH_OFFICE_NOT_MIGRATION_TREATY
			exists = owner
			root = { has_migration_access = prev.owner }
		}
	}
	# Rogue Maid
	Maid_trigger_2_can_build_branch_office_on_planet = yes
}

# This = country
# Checked by is_criminal_syndicate trigger
is_criminal_syndicate_rule = {
	is_megacorp = yes
	OR = {
		has_valid_civic = civic_criminal_heritage
		# The Empty Vagrant
		has_valid_civic = civic_ev_criminal_ship
		# Cruel Conquerers
		is_cruel_empire = yes
		# BlueArchive species pack
		has_country_flag = BA_Momoyado_unlimited
		has_country_flag = BA_club_onsen_department
		# Ethical Gestalts
		has_policy_flag = infiltration_allowed
		# ZOFE Megacorp
		has_valid_civic = mc_civic_criminal_dominion
	}
}

# This = planet
can_crossbreed_species_on_planet = {
	exists = owner
	count_species = {
		limit = { is_crossbreeding_possible = yes }
		count >= 2
	}
	OR = {
		owner = {
			has_ascension_perk = ap_xeno_compatibility
		}
		# Red Light Demeanor
		has_building = building_brothel_house
		has_building = building_brothel_house_branch_office
	}
	# Better Performance & Utilities
	NOT = {
		has_global_flag = z_pf2_flg_glbl_no_hybird
	}
	# Warship Girls R And MIST Species
	any_owned_species = {
		NOR = {
			is_archetype = WARSHIPGIRL
			is_archetype = SHENHAI
		}
	}
	# Red Light Demeanor
	NOT = {
		owner = { has_country_flag = redlight_no_crossbreeding }
	}
	# Planet Builders
	OR = {
		is_planet_class = pc_pb_pleasure
        owner = { has_ascension_perk = ap_xeno_compatibility }
    }
}

# This = species one
# Root = species two
can_crossbreed_species = {
	is_crossbreeding_possible = yes
	root = {
		is_crossbreeding_possible = yes
		NOR = {
			# Warship Girls R And MIST Species
			has_wg_traits = yes
			# Misc
			is_archetype = NANITES_CROP
			is_archetype = UNITED_FLEET 
		}
	}
	NOR = {
		is_subspecies = root
		root = { is_subspecies = prev }
		# Warship Girls R And MIST Species
		has_wg_traits = yes
		# Misc
		is_archetype = NANITES_CROP
		is_archetype = UNITED_FLEET
		# Girls Frontline
		has_trait = GF_trait_doll
	}
}

# can_win_timed_victory
# This = country
can_use_galactic_market = {
	OR = {
		merg_is_default_empire = yes
		# ACOT
		is_country_type = sbtg_stellarborne_empire_active
		# The Empty Vagrant
		AND = {
			is_country_type = default_ev
			NOT = { has_policy_flag = ev_no_use_galactic_market }
		}
		# ZOFE
		is_zofe_oe = yes
	}
	is_homicidal = no
}

# root = country
# this = pop
can_be_sold_on_slave_market = {
	exists = owner
	OR = {
		is_enslaved = yes
		is_non_sapient_robot = yes
		is_shackled_robot = yes
		is_being_purged = yes		# Ariphaos Patch
		# Expanded Traits, Civics, Pops, and More
		AND = {
			root = { allows_slavery = yes }
			has_job = servant_noble
		}
	}
	# Expanded Traits, Civics, Pops, and More
	NOT = { owner = { has_country_flag = gai_machines_have_organics } }
	OR = {
		root = { is_ai = no }
		AND = {
			OR = { is_unemployed = yes has_job = servant_noble }
			planet = {
				count_owned_pop = {
					count > 2
					limit = {
						OR = {
							is_unemployed = yes
							has_job = servant_noble
						}
						NOR = {
							is_pop_category = specialist
							is_pop_category = ruler
						}
					}
				}
			}
		}
		AND = {
			OR = { has_job = servant has_job = servant_noble }
			planet = { free_amenities > 20 }
		}
	}
	# Vanilla
	OR = {
		root = { is_ai = no }
		# has_citizenship_rights = no # Ariphaos Patch
		AND = {
			is_unemployed = yes
			is_being_assimilated = no			# Ariphaos Patch
			planet = {
				num_unemployed > 2				# Ariphaos Patch, vanilla = 3
			}
		}
		# Ariphaos Patch
		OR = {
			NOT = { has_trait = trait_syncretic_proles }
			ROOT = {
				NOT = { has_origin = origin_syncretic_evolution }
			}
		}
	}
	if = {
		limit = { has_global_flag = organic_slave_trade_banned_flag }
		is_organic_species = no
	}
	if = {
		limit = { has_global_flag = sentient_slave_trade_banned_flag }
		is_sapient = no
	}
	# Vanilla
	NOR = {
		# Since they can't reproduce, they die out too fast for anyone to want to buy them.
		has_trait = trait_clone_soldier_infertile
		has_trait = trait_clone_soldier_infertile_full_potential
		# Diagraphers Trait Mod
		is_living_architecture = yes
		is_rooted_adult = yes
		# Extra Origins
		is_symbiote = yes
		# Plentiful Perks
		has_trait = trait_plentiful_traditions_cocoon
		# Planetary Diversity
		is_organic_fourschildren = yes
		# Wandering Witch: Voyagers
		has_trait = trait_servitude
		has_trait = trait_reanimated_materials
		# Warship Girls R And MIST Species
		has_wg_traits = yes
	}
	# V_TRAITS
	is_v_mobile = yes
}

# This = country
can_be_part_of_galactic_community = {
	custom_tooltip = {
		fail_text = "community_default_failtext"
		OR = {
			merg_is_default_empire = yes
			# ACOT
			is_country_type = sbtg_stellarborne_empire_active
			# More Emperor & Custodian Resolutions, and Galactic Unification
			MECR_trigger_0_community_country_type = yes
			# ZOFE
			is_zofe_oe = yes
		}
	}
	custom_tooltip = {
		fail_text = "community_homicidal_failtext"
		NOR = {
			is_homicidal = yes
			has_origin = origin_chosen_of_the_shroud
		}
	}
	custom_tooltip = {
		fail_text = "community_declared_crisis_failtext"
		has_been_declared_crisis = no
	}
	custom_tooltip = {
		fail_text = "community_declared_crisis_failtext"
		#fail_text = "community_overlord_declared_crisis_failtext"
		OR = {
			NOT = { exists = overlord }
			overlord = { has_been_declared_crisis = no }
			# Warship Girls R And MIST Species
			NOT = { has_country_flag = wgfm_quit_community }
		}
	}
	# B5 Species - Shadows
	custom_tooltip = {
		fail_text = "community_shadows_failtext"
		NOT = { has_civic = civic_shadows1 }
	}
	# More Emperor & Custodian Resolutions, and Galactic Unification
	MECR_trigger_1_can_be_part_of_galactic_community = yes
}

# This = country
can_be_part_of_galactic_empire = {
	custom_tooltip = {
		fail_text = "community_default_failtext"
		OR = {
			merg_is_default_empire = yes
			# More Emperor & Custodian Resolutions, and Galactic Unification
			MECR_trigger_0_community_country_type = yes
			# ZOFE
			is_zofe_oe = yes
		}
	}
	custom_tooltip = {
		fail_text = "community_homicidal_failtext"
		is_homicidal = no
	}
	custom_tooltip = {
		fail_text = "community_declared_crisis_failtext"
		has_been_declared_crisis = no
	}
	custom_tooltip = {
		fail_text = "community_declared_crisis_failtext"
		OR = {
			NOT = { exists = overlord }
			overlord = { has_been_declared_crisis = no }
			# Warship Girls R And MIST Species
			NOT = { has_country_flag = wgfm_quit_community }
		}
	}
	# More Emperor & Custodian Resolutions, and Galactic Unification
	MECR_trigger_2_can_be_part_of_galactic_empire = yes
}

# This = country
can_see_galactic_community = {
	OR = {
		has_country_flag = galcom_form_aye
		has_country_flag = galcom_form_nay
		is_galactic_community_member = yes
		# ACOT
		is_country_type = sbtg_stellarborne_empire_active
		# ZOFE
		is_country_type = lost_empire
		is_zofe_oe = yes
	}
	custom_tooltip = {
		fail_text = "community_declared_crisis_failtext"
		NOT = { has_country_flag = wgfm_quit_community }
	}
}

# This = country
can_be_part_of_galactic_council = {
	OR = {
		merg_is_default_empire = yes
		# ACOT
		is_country_type = sbtg_stellarborne_empire_active
		# More Emperor & Custodian Resolutions, and Galactic Unification
		MECR_trigger_0_community_country_type = yes
		# ZOFE
		is_zofe_oe = yes
	}
	is_homicidal = no
	custom_tooltip = {
		fail_text = "community_declared_crisis_failtext"
		NOT = { has_country_flag = wgfm_quit_community }
	}
}

# must_be_advanced_empire
# is_allowed_to_be_advanced_empire
# has_enough_pops_for_necrophage_on_planet

# Root = current planet
# This = pop
# Purge, Sapience, Migration Controls policy (ignored by Gestalts and Synths), and target habitability are checked in code.
can_pop_auto_migrate = { 
	hidden_trigger = {
		OR = {
			is_unemployed = yes
			has_job = servant
			has_job = slave_toiler
			# Expanded Traits, Civics, Pops, and More
			has_job = servant_noble
			has_job = grunt
			# Diagrapher's Factions and Ethics Mod
			AND = {
				merg_has_diag_fact = yes
				ideological_discomfort = yes
				is_enslaved = yes
			}
			# Human Fallen Empires
			hfe_trigger_unemployed_auto_migrate = yes
		}
	}
	custom_tooltip = {
		fail_text = AUTO_MIGRATE_ASSIMILATED
		is_being_assimilated = no
	}
	if = {
		limit = {
			OR = {
				AND = {
					is_shackled_robot = yes
					merg_has_expanded_pops = no
				}
				is_enslaved = yes
			}
		}
		custom_tooltip = {
			fail_text = AUTO_MIGRATE_SLAVE_PROCESSING
			OR = {
				planet = {
					OR = {
						OR = {
							has_building = building_slave_processing
							# Plentiful Traditions
							has_building = building_plentiful_traditions_advanced_slave_processing
						}
						AND = {
							exists = orbital_defence
							orbital_defence = {
								exists = starbase
								starbase = {
									has_starbase_building = ring_slave_processing_facility
								}
							}
						}
					}
				}
				solar_system = {
					count_starbase_buildings = {
						type = transit_hub
						count >= 1
						include_being_constructed = no
					}
				}
			}
		}
	}
	# Expanded Traits, Civics, Pops, and More
	if = {
		limit = {
			is_shackled_robot = yes
			merg_has_expanded_pops = yes
		}
		custom_tooltip = {
			fail_text = AUTO_MIGRATE_ROBOT_DROIDS
			OR = {
				planet = { owner = { is_machine_empire = yes } }
				planet = { owner = { has_technology = tech_droid_workers } }
				solar_system = {
					count_starbase_buildings = {
						type = transit_hub
						count >= 1
						include_being_constructed = no
					}
				}
			}
		}
	}
	# Expanded Traits, Civics, Pops, and More
	if = {
		limit = { is_exp_tree_caretaker = yes }
		custom_tooltip = {
			fail_text = caretaker_refuse
			always = no
		}
	}
	# Diagraphers Trait Mod
	NOR = {
		is_living_architecture = yes
		is_rooted_adult = yes
		has_trait = trait_presapient_earthbound
	}
	# Extra Origins
	if = {
		limit = {
			is_symbiote = yes
			planet_has_symbiotes = yes
		}
		root = {
			any_owned_pop = {
				is_same_species = prevprev
				NOT = { is_same_value = prev }
			}
		}
	}
	# Ethical Gestalts
	if = {
		limit = { has_trait = trait_hive_mind }
		OR = {
			NOT = { has_trait = trait_hive_mind }
			owner = { is_hive_empire = yes }
		}
	}
	# V_Traits
	is_v_mobile = yes
}

# This = planet
# Checked before can_pop_auto_migrate to save performance
can_planet_auto_migrate = {
	custom_tooltip = {
		fail_text = AUTO_MIGRATE_CULTURE_SHOCK
		NOT = { has_modifier = planet_culture_shock }
	}
	custom_tooltip = {
		fail_text = AUTO_MIGRATE_COLONY_TOO_NEW
		OR = {
			colony_age > 60
			is_capital = yes								# Don't break Doomsday!
			# z Expanded Traits, Civics, Pops, and More
			has_planet_flag = void_dweller_habitat			# Don't break Void Dwellers!
			# Planetary Diversity - Habitats
			has_planet_flag = pd_habitat_start_luna
			has_planet_flag = pd_habitat_start_mars
		}
	}
	custom_tooltip = {
		fail_text = AUTO_MIGRATE_ONLY_HAS_ONE_POP
		num_sapient_pops > 1 
	}
	hidden_trigger = {
		exists = owner
		owner = {
			OR = {
				merg_is_default_empire = yes
				merg_is_awakened_fe = yes
			}
		}
	}
	# Better Performance & Utilities
	NOT = { has_global_flag = z_pf2_flg_vam_disabled }
}

# can_planet_receive_auto_migration
# can_gene_mod_habitability

#This, root = country
can_add_advanced_traits = {
	has_utopia = yes
	OR = {
		has_tradition = tr_genetics_creation
		# EDA
		has_valid_civic = civic_eda
		# Madoka Magica NEW
		has_str_genemodding_tech = yes
		# Nirvana Empire DLC
		is_nirvana_empire = yes
		# Warship Girls R And MIST Species
		has_wsg_genemodding_tech = yes
	}
	# Better Performances and Utilities
	NOT = { has_country_flag = PF_flg_cntr_STOP_ai_species_mod }
}

#This, root = country
can_add_negative_traits_organic = {
	has_utopia = yes
	OR = {
		has_tradition = tr_genetics_resequencing
		has_tradition = tr_cybernetics_integrated_anatomy
		has_tradition = tr_cybernetics_assimilator_integrated_anatomy
		# Ascension - Biological Module
		has_technology = tech_yanz_rs_genemod
		# EDA
		has_valid_civic = civic_eda
		# Kancolle
		has_tradition = tr_shipbuilding_transform
		# Madoka Magica NEW
		has_str_genemodding_tech = yes
		# Scripted Triggers Undercoat
		check_modifier_value = { modifier = stu_deleterious_organic_modding_flag value > 0 }
		# Wandering Witch: Voyagers
		has_tradition = tr_objects_wv_integrated_physiology
		# Warship Girls R And MIST Species
		has_wsg_genemodding_tech = yes
	}
	# Nirvana Empire DLC
	is_nirvana_empire = no
	# Better Performances and Utilities
	NOT = { has_country_flag = PF_flg_cntr_STOP_ai_species_mod }
}

#This, root = country
can_remove_positive_traits_organic = {
	OR = {
		AND = {
			has_utopia = yes
			OR = {
				has_tradition = tr_genetics_resequencing
				has_tradition = tr_cybernetics_integrated_anatomy
				has_tradition = tr_cybernetics_assimilator_integrated_anatomy
				# Ascension - Biological Module
				has_technology = tech_yanz_rs_genemod
				# EDA
				has_civic = civic_eda
				is_eda_empire = yes
				has_technology = tech_eda_core
				# Kancolle
				has_tradition = tr_shipbuilding_transform
				# Planetary Diversity
				has_tradition = pd_tr_biosynth_perk_2a
				# Madoka Magica NEW
				has_str_genemodding_tech = yes
				# Nirvana Empire DLC
				is_nirvana_empire = yes
				# Wandering Witch: Voyagers
				has_tradition = tr_objects_wv_integrated_physiology
				# Warship Girls R And MIST Species
				has_wsg_genemodding_tech = yes
			}
		}
		AND = {
			has_toxoids = yes
			has_origin = origin_overtuned
		}
		has_technology = tech_epigenetic_triggers
		# Scripted Triggers Undercoat
		check_modifier_value = {
			modifier = stu_deleterious_organic_modding_flag
			value > 0
		}
	}
	# Better Performances and Utilities
	NOT = { has_country_flag = PF_flg_cntr_STOP_ai_species_mod }
}

#This, root = country
can_modify_organic_portraits = {
	has_utopia = yes
	OR = {
		has_tradition = tr_genetics_enhanced_expression
		# Ascension - Biological Module
		has_technology = tech_yanz_rs_genemod
		# AssaultLily In Stellaris
		is_lily_goverments = yes
		# Kancolle
		has_tradition = tr_shipbuilding_transform
		# Madoka Magica NEW
		has_str_genemodding_tech = yes
		# Warship Girls R And MIST Species
		has_wsg_genemodding_tech = yes
	}
	# Better Performances and Utilities
	NOT = { has_country_flag = PF_flg_cntr_STOP_ai_species_mod }
}

# can_have_first_contact
# can_use_envoys_to_raise_imperial_authority
# can_use_envoys_to_lower_imperial_authority

#this/root = pop
#checked if job's possible_precalc = can_fill_drone_job
can_fill_drone_job = {
	custom_tooltip = DRONE_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		owner = { is_gestalt = yes }
		is_being_purged = no
		AND = {
			merg_has_expanded_pops = no
			is_enslaved = no
		}
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
		# Ethical Gestalts
		OR = {
			merg_has_ethical_gestalts = no
			AND = {
				merg_has_ethical_gestalts = yes
				owner = { is_hive_empire = yes }
				has_citizenship_type = { type = citizenship_full }
			}
			AND = {
				merg_has_ethical_gestalts = yes
				owner = { is_machine_empire = yes }
				has_citizenship_type = { type = citizenship_full_machine }
			}
			AND = {
				merg_has_ethical_gestalts = yes
				planet = {
					exists = branch_office_owner
					branch_office_owner = {
						is_hive_empire = yes
						root.species = { has_citizenship_type = { type = citizenship_full country = prev } }
					}
				}
			}
		}
		# Expanded Traits, Civics, Pops, and More
		NAND = {
			has_citizenship_type = { type = citizenship_slavery }
			OR = {
				has_slavery_type = { type = slavery_livestock }
				has_slavery_type = { type = slavery_matrix }
			}
		}
		# Origins of Civilization
		OR = {
			has_origins_of_civilization = no
			if = {
				limit = { owner = { is_hive_empire = yes } }
				has_trait = trait_hive_mind
			}
		}
		# V_Traits
		is_v_social_parasite = no
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_worker_job
can_fill_worker_job = {
	custom_tooltip = WORKER_JOB_TRIGGER
	hidden_trigger = {
		is_gestalt = no
		exists = owner
		OR = {
			is_being_purged = no
			# Expanded Traits, Civics, Pops, and More
			AND = {
				merg_has_expanded_pops = yes
				OR = {
					has_purge_type = { type = purge_displacement }
					has_purge_type = { type = purge_neutering }
				}
			}
		}
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
		NAND = {
			has_citizenship_type = { type = citizenship_slavery }
			OR = {
				has_slavery_type = { type = slavery_livestock }
				has_slavery_type = { type = slavery_matrix }
				# V_TRAITS
				has_slavery_type = { type = slavery_s_test_subjects }
			}
		}
		if = {
			limit = { divinity_right_to_work_job_check_trigger_exempt = no }
			divinity_right_to_work_job_check_trigger_worker = yes
		}
		# Diagraphers Trait mod
		if = {
			limit = { merg_has_diag_trait = yes }
			OR = {
				traits_restrict_worker_jobs = no
				has_pop_flag = allow_technician_traits
				has_pop_flag = allow_miner_traits
				has_pop_flag = allow_farmer_traits
				has_pop_flag = allow_clerk_traits
				has_pop_flag = allow_soldier_traits
				has_pop_flag = allow_crystal_miner_traits
				has_pop_flag = allow_mote_harvester_traits
				has_pop_flag = allow_gas_extractor_traits
				has_pop_flag = allow_priest_traits
				has_pop_flag = allow_bluelotus_technician_traits
				has_pop_flag = allow_odd_factory_worker_traits
				has_pop_flag = allow_cave_cleaner_traits
				has_pop_flag = allow_titan_hunter_traits
			}
		}
		# V_Traits
		if = {
			limit = { is_v_social_parasite = yes }
			has_citizenship_type = { type = citizenship_slavery }
		}
		# TimeMod
		NOT = { has_citizenship_type = { type = citizenship_adeptus_mechanicus } }
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_specialist_job
can_fill_specialist_job = {
	can_fill_specialist_job = yes
	# Girls Frontline
	if = {
		limit = { has_trait = GF_trait_doll }
		owner = {
			OR = {
				NOT = { has_authority = GF_auth_commonwealth }
				has_policy_flag = GF_doll_work_policy_high
				has_policy_flag = GF_doll_work_policy_free
				has_policy_flag = GF_doll_work_policy_middle
			}
		}
	}
	# TimeMod
	hidden_trigger = {
		NOT = { has_citizenship_type = { type = citizenship_adeptus_mechanicus } }
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_ruler_job
can_fill_ruler_job = {
	# Diagraphers Trait mod
	if = {
		limit = {
			exists = owner
			owner = {
				OR = {
					has_origin = origin_necrophage
					# Decision Origins
					has_country_flag = decision_necrophage
				}
				has_trait = trait_necrophage
			}
		}
		custom_tooltip = {
			text = RULER_JOB_NECROPHAGE_TRIGGER
			has_trait = trait_necrophage
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			NOR = {
				has_trait = trait_syncretic_proles
				can_think = no
				# Ethics and Civics Bug Branch
				is_bugged_slave_gene = yes
				# Ethics and Civics Classic
				has_trait = trait_slave_gene
				# Lithoid Supremacy
				is_pearl_born_drone = yes
			}
		}
	}
	# Silfae's Portraits: Revisited - Holofrixit Revisited
	else_if = {
		limit = {
			merg_has_holofrixit = yes
			exists = owner
			owner = {
				is_gestalt = no
				has_origin = origin_holofrixit
				has_species_trait_holooverseer = yes
			}
		}
		can_fill_holosphere_ruler_job = yes
	}
	else_if = {
		limit = { merg_has_expanded_pops = yes }
		hidden_trigger = {
			NAND = {
				has_trait = trait_dimorphic_female
				has_reproductive_politics = yes
				owner = { has_valid_civic = civic_patriarchy }
			}
			OR = {
				traits_restrict_specialist_jobs = no
				has_pop_flag = allow_priest_traits
				has_pop_flag = allow_researcher_traits
				has_pop_flag = allow_administrator_traits
				has_pop_flag = allow_merchant_traits
				has_pop_flag = allow_executive_traits
				owner = { has_valid_civic = civic_aristocratic_elite }
			}
		}
	}
	else = {
		custom_tooltip = RULER_JOB_TRIGGER
		hidden_trigger = {
			is_gestalt = no
			exists = owner
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			NOR = {
				has_trait = trait_syncretic_proles
				has_trait = trait_nerve_stapled
				has_trait = trait_presapient_docile_livestock
				has_trait = trait_bugged_slave_gene
				# Expanded Traits, Civics, Pops, and More
				is_exp_tree_caretaker = yes
				# Lithoid Supremacy
				is_pearl_born_drone = yes
				# Wandering Witch: Voyagers
				has_trait = trait_servitude
				
				has_trait = trait_overhual_resource_basic_1
				has_trait = trait_overhual_resource_basic_2
				has_trait = trait_overhual_resource_basic_3
				has_trait = trait_overhual_resource_basic_4
				has_trait = trait_overhual_resource_advanced_2
				has_trait = trait_overhual_resource_advanced_3
				has_trait = trait_overhual_resource_advanced_4

				
			}
			# Wandering Witch: Voyagers
			OR = {
				NOT = { has_trait = trait_dummy }
				owner = {
					has_origin = origin_garbage_princesses
				}
				AND = {
					owner = {
						OR = {
							has_technology = tech_synthetic_workers 
							has_technology = tech_dummy_leaders
							has_country_flag = synthetic_empire
						} 
					}
					NOT = { has_trait = trait_android } # robot trait handled in can_think
					owner = {
						has_policy_flag = ai_full_rights 					
					}
				}	
			}
			# Vanilla
			can_think = yes
			NOT = { has_trait = trait_android } # robot trait handled in can_think

			OR = {
				NOT = { has_trait = trait_mechanical }
				AND = {
					owner = { has_technology = tech_synthetic_workers }
					owner = { has_policy_flag = ai_full_rights }
				}
				# Empires Expanded
				AND = {
					owner = { has_policy_flag = artificial_aristocracy }
					owner = { has_technology = tech_droid_workers }
				}
			}
			NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
			if = {
				limit = { divinity_right_to_work_job_check_trigger_exempt = no }
				divinity_right_to_work_job_check_trigger_ruler = yes
			}
		}
		# Girls Frontline
		if = {
			limit = { has_trait = GF_trait_doll }
			owner = {
				OR = {
					NOT = { has_authority = GF_auth_commonwealth }
					has_policy_flag = GF_doll_work_policy_high
					has_policy_flag = GF_doll_work_policy_free
				}
			}
		}
	}
	# TimeMod
	hidden_trigger = {
		NOT = { has_citizenship_type = { type = citizenship_adeptus_mechanicus } }
	}
}

# should_planetary_automate
# dismiss_leader_cost

# this = leader
can_dismiss_leader = {
	if = {
		limit = {
			leader_class = admiral
			is_idle = no
			# Rulers and heirs can't be dismissed any way and can be non-idle
			is_ruler = no
			is_heir = no
		}
		custom_tooltip = {
			fail_text = "requires_fleet_control"
			exists = fleet
			fleet = {
				controller = {
					is_same_value = prev.owner
					is_same_value = prevprev.owner
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				is_heir = yes
				is_ruler = yes
			}
		}
		custom_tooltip = {
			always = no
			fail_text = "can_not_dismiss_rulers"
		}
	}
	# Assault Lily
	custom_tooltip = {
		fail_text = "requires_not_special_lily_leader"
		NOT = { has_leader_flag = AL_special_lily_leader }
	}
	# Civil Wars
	custom_tooltip = {
		fail_text = "cannot_fire_leader_during_crisis"
		NOT = { has_leader_flag = cannot_be_fired }
	}
	# Kancolle
	custom_tooltip = {
		fail_text = "cannot_fire_kancolle_leader"
		is_special_kancolle_leader = no
	}
	# StellarisCraft
	custom_tooltip = {
		fail_text = "cannot_fire_StellarisCraft_leader"
		NOT = { has_leader_flag = StellarisCraft_event_leader }
	}
	# Warship Girls R And MIST Species
	custom_tooltip = {
		fail_text = "cannot_fire_wg_leader"
		NOT = { has_leader_flag = wsg_event_leader }
		is_special_affection_leader = no
	}
}

# can_country_change_councilors
# should_count_towards_leader_cap

# From = country, country that tries to connect using relay network
# ROOT/This = country, target country to connect to using relay network
can_country_connect_to_relay_network = {
	AND = {
		is_primitive = no
		OR = {
			merg_is_default_empire = yes
			is_subject = yes
			is_overlord = yes
			# SirBlackAxe's Unofficial Bug Patch
			merg_is_fallen_empire = yes
			merg_is_awakened_fe = yes
			from = { is_same_value = root }
			is_in_federation_with = from
		}
		# SirBlackAxe's Unofficial Bug Patch
		NAND = {
			has_closed_borders = from
			can_control_access_for = from
		}
		NOT = { is_at_war_with = from }
	}
}

# should_ai_build_stronghold_on_vulnerable_planet
# will_leader_retire
# can_get_external_leader_pool_candidate

# This = leader, leader we'd like to trade
# Root = country, country that owns the leader currently
# From = country, country that would receive the leader
can_trade_leader = {
	# Better Performances and Utilities
	hidden_trigger = { FW_trgr_ldr_SP = no }
	# The leader must have a trait from a specialist subject type.
	this = {
		OR = {
			has_leader_flag = tradable_leader
			has_specialist_subject_leader_trait = yes
			# Rogue Maid
			has_specialist_subject_leader_trait_maid = yes
		}
	}
	# The subject and overlord must both be regular empires, machine intelligences or hive-minds.
	OR = {
		AND = {
			ROOT = {
				is_regular_empire = yes
				NOR = {
					is_country_type = gate_builders
					is_country_type = awakened_marauders
				}
			}
			FROM = {
				is_regular_empire = yes
				NOR = {
					is_country_type = gate_builders
					is_country_type = awakened_marauders
				}
			}
		}
		AND = {
			ROOT = { is_machine_empire = yes }
			FROM = { is_machine_empire = yes }
		}
		AND = {
			ROOT = { is_hive_empire = yes }
			FROM = { is_hive_empire = yes }
		}
		# Girls Frontline
		AND = {
			ROOT = { is_valid_GF_OGAS_subnet = yes }
			FROM = {
				is_overlord_to = ROOT
				has_authority = GF_auth_commonwealth
			}
			this = { species = { is_robotic = yes } }
		}
		# Ethics and Civics Infinity
		ROOT = { is_servitor_empire = yes }
	}
	# The overlord can't be a fallen or awakened empire.
	ROOT = {
		NAND = {
			is_overlord = yes
			OR = {
				merg_is_fallen_empire = yes
				merg_is_awakened_fe = yes
				# ZOFE
				is_country_type = original_empire
			}
		}
	}
	NOR = { 
		has_trait = leader_trait_fotd_scientist
		has_trait = leader_trait_fotd_admiral
	}
	# Warship Girls R And MIST Species
	custom_tooltip = {
		fail_text = "cannot_sold_wg_leader"
		is_special_affection_leader = no
		is_wg_event_leader = no
	}
}

# This = fleet, fleet we'd like to trade
# Root = country, country that owns the fleet currently
# From = country, country that would receive the fleet
can_trade_fleet = {
	ROOT = {
		NAND = {
			is_overlord = yes
			OR = {
				merg_is_fallen_empire = yes
				merg_is_awakened_fe = yes
				# ZOFE
				is_country_type = original_empire
			}
		}
	}
	# Warship Girls R And MIST Species
	custom_tooltip = {
		fail_text = "cannot_sold_wg_fleet"
		any_owned_ship = { is_wg_event_limit_ships = no }
	}
	# Star Wars: Kuat Ancient Empire
	custom_tooltip = {
		fail_text = "cannot_sold_kuat_fleet"
		any_owned_ship = { kuat_is_flagship_system_protection = no }
	}
}

# chance_for_external_leader_pool
# council_agenda_early_activation_cost
# leader_election_elect_cost
# emergency_election_cost_rule
# leader_election_support_cost
# leader_election_weight
# are_pre_ftls_unaware
# is_terraforming_candidate
# has_ascension_for_terraforming_candidate
# can_be_renamed_by
# can_build_station_around
# can_build_mining_station_around
# can_build_research_station_around
# can_build_military_station_around
# can_build_observation_station_around
# can_build_starbase_around
