#This rule is a condition for bombarding planets
#Root = fleet, potential attacker
#From = planet, potential target

can_orbital_bombard = {
	exists = FROM.OWNER
	NOT = {
		any_owned_ship = {
			is_ship_size = colossus
		}
	}
	OR = {
		AND = {
			ROOT.OWNER = {
				NOT = { has_communications = FROM.OWNER }
			}
			FROM.OWNER = {
				NOT = { is_country_type = primitive }
			}
		}
		AND = {
			ROOT.OWNER = {
				NOR = {
					has_policy_flag = interference_passive
					has_policy_flag = interference_active
				}
			}
			FROM.OWNER = { is_country_type = primitive }
		}
		ROOT.OWNER = { is_at_war_with = FROM.CONTROLLER }
		FROM = { 
			OR = {
				is_planet_class = pc_infested
				has_planet_flag = bwm_ancestor_world
			}
		}
		FROM.CONTROLLER = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = mem_ancestor_guardian
			}
		}
		ROOT.OWNER = {
			OR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = dormant_marauders
				is_country_type = marauder_raiders
				is_country_type = ruined_marauders
				is_country_type = gray_goo
				is_country_type = vol
				is_country_type = mem_ancestor_guardian
				AND = {
					is_country_type = awakened_marauders
					FROM.CONTROLLER = {
						NAND = {
							is_subject_type = satrapy
							NOT = { has_country_flag = rebelling_satrapy }
						}
					}
				}
			}
		}
		AND = {
    	    from.controller = {
    	        is_country_type = faction
    	        NOT = { is_same_value = root.owner }
    	    }
    	    from.owner = {
    	        is_same_value = root.owner
    	    }
		}
	}
}