#Tooltips will be generated from these rules when they fail. Use of custom_tooltip is recommended
#There are still multiple hard-coded rules that apply in addition to these.
#If rules here evaluate to true, there might still be other rules that make the action unavailable.
#If a rule here evaluates to false the action will become unavailable


#Root = country
#This = pop
can_generate_leader_from_pop = { #
	has_citizenship_rights = yes
	NOT = { has_trait = trait_syncretic_proles }
	NOT = { has_trait = trait_bugged_slave_gene }
	NOT = { ROOT = { has_origin = origin_hive_overmind } }
	OR = {
		is_robot_pop = no
		root = { has_technology = tech_synthetic_leaders }
		root = { has_authority = auth_machine_intelligence }
		root = { is_mechanical_empire = yes }
	}
	OR = {
		is_same_species = root
		root = {
			NAND = {
				has_origin = origin_necrophage
				has_trait = trait_necrophage
			}
		}
	}
}

#Root = planet
#This = species
species_can_live_on_planet = { #
	exists = root
	NAND = {
		root = { is_planet_class = pc_machine }
		NOR = {
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
			has_trait = trait_bugged_happy_machine
			AND = {
				has_trait = trait_cybernetic
				exists = root.owner
				root.owner = {
					has_authority = auth_machine_intelligence
					has_civic = civic_machine_assimilator # Assimilator empire
				}
			}
		}
	}
	if = {
		limit = {
			root = { is_planet_class = pc_hive }
		}
		OR = {
			has_trait = trait_hive_mind
			has_trait = trait_bugged_happy_hive
			AND = { #Necrophage Hive Mind can have Necrophytes
				exists = root.owner
				root.owner = {
					is_hive_empire = yes
					has_origin = origin_necrophage
					prev = { species_can_be_necrophaged = yes }
				}
			}
			AND = { #Parasitic Embryos Necrophage Pops
				exists = root.owner
				root.owner = {
					is_hive_empire = yes
					has_valid_civic = civic_hive_parasitic
					prev = { has_job = purge_parasitic }
				}
			}
		}
	}	
	NAND = {
		root = { NOT = { is_planet_class = pc_matryoshka } }
		has_trait = trait_machine_digital
	}	
}

can_build_branch_offices = { #
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_MEGACORP
		OR = {
			is_megacorp = yes
			has_civic = civic_galactic_sovereign_megacorp
			has_valid_civic = civic_mutualistic_behavior
			has_valid_civic = civic_machine_trading
		}
	}
}

can_species_be_assembled = { #
	is_sapient = yes
	OR = {
		AND = {
			is_robotic = yes
			root = {
				check_modifier_value = {
					modifier = planet_pop_assembly_add
					value > 0
				}
			}
		}
		AND = {
			is_organic_species = yes
			if = {
				limit = {
					root.owner = { is_hive_empire = yes }
				}
				OR = {
					has_trait = trait_hive_mind
					has_trait = trait_bugged_happy_hive
				}
			}
			else_if = {
				limit = { has_budding_trait = yes }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
				}
			}
			else_if = {
				limit = { has_trait = trait_tiyanki }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
				}
			}
			else_if = {
				limit = {
					root.owner = {
						has_tradition = tr_cybernetics_assembly_standards
						has_policy_flag = roboticist_output_build_cyborgs
					}
				}
				has_trait = trait_cybernetic
			}
			else_if = {
				limit = {
					OR = {
						has_trait = trait_clone_soldier_infertile
						has_trait = trait_clone_soldier_infertile_full_potential
					}
				}
				root = {
					# Event 'clones.3' should cover this, but extra safety check.
					has_building = building_clone_army_clone_vat
					NOT = {
						check_variable = {
							which = clone_pops_missing
							value = 0
						}
					}
				}
			}
			else = {
				root = {
					OR = {
						has_building = building_clone_vats
						has_building = building_bugged_life_monastery
						has_building = building_bugged_life_monastery_two
						has_modifier = tiyanki_trophy
						owner = { has_modifier = syamelles_curse }
						AND = {
							has_building = building_posthumous_employment_center
							owner = { has_civic = civic_permanent_employment }
						}
						has_planet_flag = can_organic_assemble_flag #for mod compatibility
					}
				}
			}
		}
	}
	NAND = {
		root = { owner = { has_valid_civic = civic_machine_replicators } }
		has_trait = trait_machine_central
	}
	has_population_control = {
		type = no
		country = root.owner
	}
}

# Checks if a pop can procreate
# This = Species
# Root = Planet
can_species_procreate = { #
	is_sapient = yes
	NOR = {
		has_trait = trait_machine_unit
		has_trait = trait_bugged_happy_machine
		has_trait = trait_mechanical
	}
	NAND = {
		root = { has_modifier = slave_colony }
		NOT = { has_citizenship_type = { type = citizenship_slavery country = root.owner } }
	}
	NOT = {
		has_trait = trait_hive_mind_overlord
	}
	if = {
		limit = {
			has_trait = trait_necrophage
		}
		NOT = {
			root = {
				any_owned_species = {
					has_population_control = { country = root.owner type = no }
					species_can_be_necrophaged = yes
				}
			}
		}
	}
	NOT = { has_species_flag = nivlac_no_procreation }
}