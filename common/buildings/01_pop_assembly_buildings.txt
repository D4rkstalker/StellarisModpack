#############
# Machine buildings
#############

building_robot_assembly_plant = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly
	
	potential = {
		exists = owner
		owner = { 
			is_regular_empire = yes 
			NOT = { has_policy_flag = robots_outlawed }
		}
		NOT = { has_modifier = slave_colony }
		or = {
			owner = { is_ai = no }
			num_pops < 75
			is_planet_class = pc_habitat
			}
		
	}
	
	convert_to = {
		building_machine_assembly_plant
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_pops > 80
					is_planet_class = pc_habitat
				}
			}
		}
	}
	
	planet_modifier = {
		job_roboticist_add = 1
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
		}
		upkeep = {
			energy = @b2_upkeep
		}
	}
	
	triggered_desc = {
		text = job_roboticist_effect_desc
	}	
	
	prerequisites = {
		"tech_robotic_workers"
	}
	
	ai_weight = {
		weight = 10500
			modifier = {
				factor = 0
				has_planet_flag = ecumen
				owner = { not = {
				has_technology = tech_droid_workers
				} }
			}
			modifier = {
				factor = 0.0001
				num_pops > 70
			}
				modifier = {
					factor = 0.0001
					count_pops = {
						limit = { is_unemployed = yes }
						count > 3
					}
				}
				modifier = {
					factor = 0
					count_pops = {
						limit = { is_unemployed = yes }
						count > 10
					}
				}
	}
}

#############
# Machine buildings
#############

building_machine_assembly_plant = {
	icon = building_robot_assembly_plant
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly
	
	potential = {
		exists = owner
		owner = { is_machine_empire = yes }
		
		or = {
			owner = { is_ai = no }
			num_pops < 75
			is_planet_class = pc_habitat
			}
	}
	
	convert_to = {
		building_robot_assembly_plant
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_pops > 80
					is_planet_class = pc_habitat
				}
			}
		}
	}
	
	planet_modifier = {
		job_replicator_add = 1
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	upgrades = {
		building_machine_assembly_complex
	}
	
	prerequisites = {

	}
	
	triggered_desc = {
		text = job_replicator_effect_desc
	}	
	
	ai_weight = {
		weight = 10100
				modifier = {
					factor = 0.0001
					count_pops = {
						limit = { is_unemployed = yes }
						count > 3
					}
				}
				modifier = {
					factor = 0
					count_pops = {
						limit = { is_unemployed = yes }
						count > 12
					}
				}
			}
}

building_machine_assembly_complex = {
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly
	
	potential = {
		exists = owner
		owner = { is_machine_empire = yes }
		or = {
			owner = { is_ai = no }
			num_pops < 75
			is_planet_class = pc_habitat
			}
	}
	
	convert_to = {
		building_robot_assembly_plant
	}
	
	allow = {
		has_major_upgraded_capital = yes
		buildings_upgrade_allow = yes	
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			buildings_no_crystals = yes
			owner = {
				is_robot_empire = no
			}
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_pops > 80
					is_planet_class = pc_habitat
				}
			}
		}
	}
	
	planet_modifier = {
		job_replicator_add = 3
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @b3_rare_upkeep
		}
	}

	prerequisites = {
		tech_mega_assembly
	}	
	
	triggered_desc = {
		text = job_replicator_effect_desc
	}	
	
	ai_weight = {
		weight = 10100
		modifier = {
			factor = 0.0001
			num_pops > 70
		}
				modifier = {
					factor = 0.0001
					count_pops = {
						limit = { is_unemployed = yes }
						count > 3
					}
				}
				modifier = {
					factor = 0
					count_pops = {
						limit = { is_unemployed = yes }
						count > 10
					}
				}
			}
}