#############
# Robot buildings
#############

building_robot_assembly_plant = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_robotic_species = yes }
		}
		owner = {
			is_regular_empire = yes
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
		}
		NOT = { has_modifier = slave_colony }
		owner = {
			is_bugged_machine_cult = no
		}
	}

	convert_to = {
		building_bugged_mecha_monastery
		building_machine_assembly_plant
	}

	upgrades = {
		building_robot_assembly_complex
	}

	allow = {
		hidden_trigger = {
			OR = {
				owner = { is_ai = no }
				NAND = {
					free_district_slots = 0
					free_building_slots <= 1
					free_housing <= 0
					free_jobs <= 0
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
			owner = {
				is_bugged_machine_cult = yes
			}
		}
	}

	planet_modifier = {
		job_roboticist_add = 1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
		}
		upkeep = {
			energy = @b2_upkeep
		}
	}

	triggered_desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				AND = {
					exists = owner
					owner = {
						NOT = { has_policy_flag = roboticist_output_build_cyborgs }
					}
				}
			}

		}
		text = job_roboticist_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_policy_flag = roboticist_output_build_cyborgs
			}
		}
		text = job_roboticist_cyborg_effect_desc
	}

	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_clone_vats
				has_building = building_clone_army_clone_vat
				has_building = building_posthumous_employment_center
				AND = {
					exists = assembling_species
					assembling_species = { is_organic_species = yes }
					exists = owner
					owner = {
						NOT = { has_policy_flag = roboticist_output_build_cyborgs }
					}
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
	show_tech_unlock_if = {
		is_bugged_machine_cult = no
	}
	prerequisites = {
		"tech_robotic_workers"
	}
}

#############
# Clone vats
#############

building_clone_vats = {
	base_buildtime = @b1_time

	category = pop_assembly

	base_cap_amount = 1

	potential = {
		exists = owner
		owner = { has_tradition = tr_genetics_adopt }
		NOT = { has_modifier = resort_colony }
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			NOT = { owner = { has_tradition = tr_genetics_adopt } }
		}
	}

	planet_modifier = {
		planet_pop_assembly_organic_add = 3
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_genetics_efficient_cloning }
		}
		modifier = {
			planet_pop_assembly_organic_add = 1.5
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_bugged_evolutionary_architects = yes
			}
		}
		modifier = {
			planet_jobs_unity_produces_mult = 0.2

		}
	}

	resources = {
		category = planet_buildings

		# Base cost
		cost = {
			minerals = 500
		}
		# Org/Lith cost
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
			food = 500
		}
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
			energy = 500
		}

		# Base upkeep
		upkeep = {
			energy = 2
		}
		# Org/Lith upkeep
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
			food = 30
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
			minerals = 30
		}
	}

	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
}

building_clone_army_clone_vat = {
	icon = building_ancient_relics
	base_buildtime = 90
	position_priority = 100

	empire_limit = {
		base = 5
	}

	category = pop_assembly

	potential = {
		exists = owner
		owner = {
			has_origin = origin_clone_army
			NOT = {
				has_country_flag = clone_army_fertility_unlocked
			}
		}
		if = {
			limit = {
				owner = { is_ai = yes }
			}
			NOR = {
				has_building = building_clone_army_clone_vat
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_clone_army }
					is_synthetic_empire = yes
					has_country_flag = clone_army_fertility_unlocked
				}
			}
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_ai = yes }
			can_assemble_clone_soldier_pop = yes
		}
		planet_pop_assembly_organic_add = 2
	}

	# Add growth from 0 to 25 depending on 'clone_pops_missing_per_vat'.
	triggered_planet_modifier = {
		potential = {
			can_assemble_clone_soldier_pop = yes
			check_variable = { which = clone_pops_missing_per_vat value > 0 }
		}
		modifier = { planet_pop_assembly_organic_add = 2 }
	}
	triggered_planet_modifier = {
		potential = {
			can_assemble_clone_soldier_pop = yes
			check_variable = { which = clone_pops_missing_per_vat value > 1 }
		}
		modifier = { planet_pop_assembly_organic_add = 3 }
	}
	triggered_planet_modifier = {
		potential = {
			can_assemble_clone_soldier_pop = yes
			check_variable = { which = clone_pops_missing_per_vat value > 4 }
		}
		modifier = { planet_pop_assembly_organic_add = 2 }
	}
	triggered_planet_modifier = {
		potential = {
			can_assemble_clone_soldier_pop = yes
			check_variable = { which = clone_pops_missing_per_vat value > 8 }
		}
		modifier = { planet_pop_assembly_organic_add = 3 }
	}
	triggered_planet_modifier = {
		potential = {
			can_assemble_clone_soldier_pop = yes
			years_passed > 10
			check_variable = { which = clone_pops_missing_per_vat value > 12 }
		}
		modifier = { planet_pop_assembly_organic_add = 5 }
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_bugged_evolutionary_architects = yes
			}
		}
		modifier = {
			planet_jobs_unity_produces_mult = 0.1

		}
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
		}
		upkeep = {
			energy = @b2_upkeep
		}
	}

	upgrades = {
	}

	prerequisites = {
	}

	triggered_desc = {
		text = building_clone_army_clone_vat_effect_desc
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}

	is_essential = yes
}